(set-logic UFLIRABV)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) (<= ($generated@@157 0) ($generated@@157 100))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 8)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 8))
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (Int) T@U)
(declare-fun $generated@@247 (T@U) Int)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (Int) T@U)
(declare-fun $generated@@321 (T@U) Bool)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (Int) Real)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 8)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 8)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 8) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 8) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@132) ($generated@@140 $generated@@142 ($generated@@75 8)))
 :pattern ( ($generated@@140 $generated@@142 ($generated@@75 8)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@140 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (= ($generated@@1 $generated@@248) 18) (forall (($generated@@249 Int) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))))
(assert (forall (($generated@@250 Int) ) (!  (=> (and (<= 0 $generated@@250) (< $generated@@250 65536)) (= ($generated@@247 ($generated@@246 $generated@@250)) $generated@@250))
 :pattern ( ($generated@@246 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@64) (= (type $generated@@254) $generated@@64)) (= (type $generated@@255) $generated@@154)) (= (type $generated@@256) $generated@@154)) (= (type $generated@@257) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@251 $generated@@257)) (= ($generated@@74 ($generated@@220 $generated@@255 $generated@@256) ($generated@@144 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@255 $generated@@256) ($generated@@144 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@68)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@145) (= ($generated@@143 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@145) ($generated@@143 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@154) (= (type $generated@@263) $generated@@154)) (= $generated@@261 ($generated@@220 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@143 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 19)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@248) (and (and (= ($generated@@246 ($generated@@247 $generated@@272)) $generated@@272) (<= 0 ($generated@@247 $generated@@272))) (< ($generated@@247 $generated@@272) 65536)))
 :pattern ( ($generated@@247 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@154)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@252 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@74 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@252 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@79 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@76 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@81 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 20)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@76 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 21)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert (forall (($generated@@323 Int) ) (! (= (type ($generated@@320 $generated@@323)) $generated@@154)
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@324 Int) ) (!  (=> (<= 0 $generated@@324) (and ($generated@@321 ($generated@@320 $generated@@324)) (= ($generated@@322 ($generated@@320 $generated@@324)) $generated@@324)))
 :pattern ( ($generated@@320 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@76 $generated@@326 $generated@@2)) (= ($generated@@160 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@81 $generated@@325 $generated@@327))) (<= ($generated ($generated@@81 $generated@@325 $generated@@327)) ($generated@@278 $generated@@325))))
 :pattern ( ($generated@@81 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@160 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@288 (type $generated@@328))))
(let (($generated@@330 ($generated@@287 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@286 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@285 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@284 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@288 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@288 (type $generated@@335))))
(let (($generated@@337 ($generated@@287 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@286 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@285 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@306 (type $generated@@339))))
(let (($generated@@341 ($generated@@305 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@304 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@303 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@302 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@306 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(let (($generated@@348 ($generated@@305 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@304 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@303 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@140 $generated@@350 ($generated@@159 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@221 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@159 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@230 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@154) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@252 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@230 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@235 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@154) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@252 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@235 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@81 ($generated@@279 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@81 ($generated@@279 $generated@@362) $generated@@361)))
)))
(assert  (and (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@363 $generated@@366)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366))
)) (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@364 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@288 (type $generated@@369))))
(let (($generated@@371 ($generated@@287 (type $generated@@369))))
(= (type ($generated@@365 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@365 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@373) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@372) ($generated@@152 ($generated@@364 $generated@@145 $generated@@373)))) (= ($generated@@81 ($generated@@365 $generated@@372) ($generated@@152 ($generated@@364 $generated@@145 $generated@@373))) ($generated@@153 ($generated@@364 $generated@@145 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@306 (type $generated@@377))))
(let (($generated@@379 ($generated@@305 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@381) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@380) ($generated@@152 ($generated@@364 $generated@@145 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@152 ($generated@@364 $generated@@145 $generated@@381))) ($generated@@153 ($generated@@364 $generated@@145 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@287 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@286 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@305 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@304 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@395) $generated@@399))) (and ($generated@@252 ($generated@@81 ($generated@@365 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@252 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@403) $generated@@407))) (and ($generated@@252 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@252 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 Int) ) (! (= ($generated@@408 $generated@@409) (to_real $generated@@409))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@306 (type $generated@@412))))
(let (($generated@@414 ($generated@@305 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@304 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@303 $generated@@414 $generated@@413)) (= ($generated@@302 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@302 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@306 (type $generated@@415))))
(let (($generated@@417 ($generated@@305 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@304 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@303 $generated@@417 $generated@@416)) (= ($generated@@343 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@343 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@306 (type $generated@@418))))
(let (($generated@@420 ($generated@@305 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@304 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@303 $generated@@420 $generated@@419)) (= ($generated@@374 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@374 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@288 (type $generated@@421))))
(let (($generated@@423 ($generated@@287 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@286 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@285 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@421) ($generated@@273 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@363 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@306 (type $generated@@426))))
(let (($generated@@428 ($generated@@305 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@304 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@303 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@426) ($generated@@273 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@374 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@273 ($generated@@364 $generated@@2 $generated@@431)) $generated@@431) ($generated@@140 ($generated@@364 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@273 ($generated@@364 $generated@@3 $generated@@432)) $generated@@432) ($generated@@140 ($generated@@364 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@273 ($generated@@364 $generated@@4 $generated@@433)) $generated@@433) ($generated@@140 ($generated@@364 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@221 $generated@@434 $generated@@45)) (and (= ($generated@@273 ($generated@@364 $generated@@248 $generated@@434)) $generated@@434) ($generated@@140 ($generated@@364 $generated@@248 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@64) (= ($generated@@221 ($generated@@273 $generated@@435) $generated@@436) ($generated@@140 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@221 ($generated@@273 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@154) (<= 0 ($generated@@322 $generated@@437)))
 :pattern ( ($generated@@322 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@278 $generated@@438))))
 :pattern ( ($generated@@278 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@267 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@266 $generated@@441)) (<= 0 ($generated@@265 $generated@@440))))
 :pattern ( ($generated@@265 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@392 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@392 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@392 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@400 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@400 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@400 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@258 ($generated@@220 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@267 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@266 $generated@@154)) (= (type $generated@@483) $generated@@64)) (= (type $generated@@484) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@265 $generated@@482))) ($generated@@252 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@74 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@75 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@75 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@364 $generated@@505 ($generated@@273 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@273 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@140 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@81 ($generated@@365 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@506) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@140 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) (= ($generated@@140 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@81 ($generated@@375 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@510) $generated@@513))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@140 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@221 $generated@@520 ($generated@@392 $generated@@521 $generated@@522))) (and (= ($generated@@273 ($generated@@364 ($generated@@286 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@140 ($generated@@364 ($generated@@286 $generated@@154 $generated@@154) $generated@@520) ($generated@@392 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@392 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@221 $generated@@523 ($generated@@400 $generated@@524 $generated@@525))) (and (= ($generated@@273 ($generated@@364 ($generated@@304 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@140 ($generated@@364 ($generated@@304 $generated@@154 $generated@@154) $generated@@523) ($generated@@400 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@400 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@273 ($generated@@364 $generated@@145 $generated@@528)) $generated@@528) ($generated@@140 ($generated@@364 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@81 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@273 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@273 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@75 0))) (and (= ($generated@@273 ($generated@@364 $generated@@2 $generated@@536)) $generated@@536) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@536) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@75 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@64)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@273 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@64)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@273 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@64)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@273 ($generated@@364 ($generated@@76 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@64)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@273 ($generated@@364 ($generated@@266 $generated@@154) $generated@@543)) $generated@@543) ($generated@@140 ($generated@@364 ($generated@@266 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@221 $generated@@545 ($generated@@75 8))) (and (= ($generated@@273 ($generated@@364 $generated@@132 $generated@@545)) $generated@@545) ($generated@@140 ($generated@@364 $generated@@132 $generated@@545) ($generated@@75 8))))
 :pattern ( ($generated@@221 $generated@@545 ($generated@@75 8)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@154) ($generated@@321 $generated@@546)) (= $generated@@546 ($generated@@320 ($generated@@322 $generated@@546))))
 :pattern ( ($generated@@322 $generated@@546))
 :pattern ( ($generated@@321 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@547 ($generated@@159 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@547 $generated@@550)))) ($generated@@252 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@81 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@159 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@251 $generated@@553) (and ($generated@@143 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@144 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@144 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@252 ($generated@@152 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@252 ($generated@@152 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@251 $generated@@557) (and ($generated@@143 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@144 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@144 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@252 ($generated@@153 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@252 ($generated@@153 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@559) ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@220 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@559) ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@240 $generated@@561))) ($generated@@242 ($generated@@273 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@240 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@273 ($generated@@242 $generated@@562)) ($generated@@242 ($generated@@273 $generated@@562)))
 :pattern ( ($generated@@273 ($generated@@242 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@267 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@266 $generated@@564)) (= ($generated@@265 $generated@@563) 0)) (= $generated@@563 ($generated@@264 $generated@@564))))
 :pattern ( ($generated@@265 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@278 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@278 $generated@@565) ($generated ($generated@@81 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@278 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@2)) ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@3)) ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@4)) ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@248)) ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@154)) ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@266 $generated@@154)) (= (type $generated@@580) $generated@@64)) (= ($generated@@140 $generated@@579 ($generated@@476 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@265 $generated@@579))) ($generated@@221 ($generated@@477 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@477 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@140 $generated@@579 ($generated@@476 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@266 $generated@@154)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@265 $generated@@583))) (< ($generated@@515 ($generated@@364 $generated@@145 ($generated@@477 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@515 ($generated@@364 $generated@@145 ($generated@@477 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@140 $generated@@585 ($generated@@392 $generated@@586 $generated@@587))) (and (and ($generated@@140 ($generated@@284 $generated@@585) ($generated@@230 $generated@@586)) ($generated@@140 ($generated@@332 $generated@@585) ($generated@@230 $generated@@587))) ($generated@@140 ($generated@@363 $generated@@585) ($generated@@230 ($generated@@144 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@140 $generated@@585 ($generated@@392 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@140 $generated@@588 ($generated@@400 $generated@@589 $generated@@590))) (and (and ($generated@@140 ($generated@@302 $generated@@588) ($generated@@235 $generated@@589)) ($generated@@140 ($generated@@343 $generated@@588) ($generated@@235 $generated@@590))) ($generated@@140 ($generated@@374 $generated@@588) ($generated@@235 ($generated@@144 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@140 $generated@@588 ($generated@@400 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@140 $generated@@591 $generated@@46))
 :pattern ( ($generated@@140 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@140 $generated@@592 $generated@@47))
 :pattern ( ($generated@@140 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@140 $generated@@593 $generated@@44))
 :pattern ( ($generated@@140 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@248) ($generated@@140 $generated@@594 $generated@@45))
 :pattern ( ($generated@@140 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@154) ($generated@@140 $generated@@595 $generated@@48))
 :pattern ( ($generated@@140 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Real)
(declare-fun $generated@@602 () (_ BitVec 8))
(declare-fun $generated@@603 (T@U) Bool)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(assert  (and (and (and (and (= (type $generated@@596) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@597) $generated@@77)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@600) $generated@@248)) (= (type $generated@@605) $generated@@248)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@607  (=> (= $generated@@596 ($generated@@165 $generated@@597 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= ($generated@@240 0) $generated@@599) (<= $generated@@599 ($generated@@240 100)))) (=> (and (<= ($generated@@240 0) $generated@@599) (<= $generated@@599 ($generated@@240 100))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@599) (< $generated@@599 65536))) (=> (and (<= 0 $generated@@599) (< $generated@@599 65536)) (=> (and (= $generated@@600 ($generated@@246 $generated@@599)) (= $generated@@601 ($generated@@408 $generated@@599))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@599) (< $generated@@599 256))) (=> (and (<= 0 $generated@@599) (< $generated@@599 256)) (=> (and (= $generated@@602 ((_ int2bv 8) $generated@@599)) (= (ControlFlow 0 2) (- 0 1))) (<= 0 $generated@@599))))))))))))
(let (($generated@@608  (=> (and (and ($generated@@251 $generated@@598) ($generated@@603 $generated@@598)) (and (<= ($generated@@240 0) $generated@@599) (<= $generated@@599 ($generated@@240 100)))) (=> (and (and (and (<= ($generated@@240 0) $generated@@604) (<= $generated@@604 ($generated@@240 100))) true) (and (and ($generated@@140 $generated@@605 $generated@@45) true) (and (= 1 $generated@@606) (= (ControlFlow 0 6) 2)))) $generated@@607))))
$generated@@608)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 8)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 8))
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (Int) T@U)
(declare-fun $generated@@247 (T@U) Int)
(declare-fun $generated@@248 () T@T)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (Int) T@U)
(declare-fun $generated@@321 (T@U) Bool)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 8)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 8)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 8) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 8) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@132) ($generated@@140 $generated@@142 ($generated@@75 8)))
 :pattern ( ($generated@@140 $generated@@142 ($generated@@75 8)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@140 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (and (= ($generated@@1 $generated@@248) 18) (forall (($generated@@249 Int) ) (! (= (type ($generated@@246 $generated@@249)) $generated@@248)
 :pattern ( ($generated@@246 $generated@@249))
))))
(assert (forall (($generated@@250 Int) ) (!  (=> (and (<= 0 $generated@@250) (< $generated@@250 65536)) (= ($generated@@247 ($generated@@246 $generated@@250)) $generated@@250))
 :pattern ( ($generated@@246 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@64) (= (type $generated@@254) $generated@@64)) (= (type $generated@@255) $generated@@154)) (= (type $generated@@256) $generated@@154)) (= (type $generated@@257) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@251 $generated@@257)) (= ($generated@@74 ($generated@@220 $generated@@255 $generated@@256) ($generated@@144 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@255 $generated@@256) ($generated@@144 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@68)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@145) (= ($generated@@143 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@145) ($generated@@143 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@154) (= (type $generated@@263) $generated@@154)) (= $generated@@261 ($generated@@220 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@143 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 19)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@248) (and (and (= ($generated@@246 ($generated@@247 $generated@@272)) $generated@@272) (<= 0 ($generated@@247 $generated@@272))) (< ($generated@@247 $generated@@272) 65536)))
 :pattern ( ($generated@@247 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@154)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@252 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@74 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@252 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@79 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@76 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@81 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 20)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@76 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@81 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 21)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert (forall (($generated@@323 Int) ) (! (= (type ($generated@@320 $generated@@323)) $generated@@154)
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert (forall (($generated@@324 Int) ) (!  (=> (<= 0 $generated@@324) (and ($generated@@321 ($generated@@320 $generated@@324)) (= ($generated@@322 ($generated@@320 $generated@@324)) $generated@@324)))
 :pattern ( ($generated@@320 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@76 $generated@@326 $generated@@2)) (= ($generated@@160 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@81 $generated@@325 $generated@@327))) (<= ($generated ($generated@@81 $generated@@325 $generated@@327)) ($generated@@278 $generated@@325))))
 :pattern ( ($generated@@81 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@160 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@288 (type $generated@@328))))
(let (($generated@@330 ($generated@@287 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@286 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@285 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@284 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@288 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@288 (type $generated@@335))))
(let (($generated@@337 ($generated@@287 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@286 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@285 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@306 (type $generated@@339))))
(let (($generated@@341 ($generated@@305 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@304 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@303 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@302 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@306 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@306 (type $generated@@346))))
(let (($generated@@348 ($generated@@305 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@304 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@303 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@140 $generated@@350 ($generated@@159 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@221 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@159 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@230 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@154) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@252 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@230 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@235 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@154) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@252 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@235 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@81 ($generated@@279 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@81 ($generated@@279 $generated@@362) $generated@@361)))
)))
(assert  (and (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@363 $generated@@366)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366))
)) (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@364 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@288 (type $generated@@369))))
(let (($generated@@371 ($generated@@287 (type $generated@@369))))
(= (type ($generated@@365 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@365 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@373) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@372) ($generated@@152 ($generated@@364 $generated@@145 $generated@@373)))) (= ($generated@@81 ($generated@@365 $generated@@372) ($generated@@152 ($generated@@364 $generated@@145 $generated@@373))) ($generated@@153 ($generated@@364 $generated@@145 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@306 (type $generated@@377))))
(let (($generated@@379 ($generated@@305 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@381) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@380) ($generated@@152 ($generated@@364 $generated@@145 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@152 ($generated@@364 $generated@@145 $generated@@381))) ($generated@@153 ($generated@@364 $generated@@145 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@287 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@286 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@284 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@305 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@304 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@395) $generated@@399))) (and ($generated@@252 ($generated@@81 ($generated@@365 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@252 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@403) $generated@@407))) (and ($generated@@252 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@252 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@76 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@306 (type $generated@@410))))
(let (($generated@@412 ($generated@@305 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@304 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@303 $generated@@412 $generated@@411)) (= ($generated@@302 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@302 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@306 (type $generated@@413))))
(let (($generated@@415 ($generated@@305 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@304 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@303 $generated@@415 $generated@@414)) (= ($generated@@343 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@343 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@306 (type $generated@@416))))
(let (($generated@@418 ($generated@@305 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@304 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@303 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@154))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@288 (type $generated@@419))))
(let (($generated@@421 ($generated@@287 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@286 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@285 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@154) (= (type $generated@@423) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@419) ($generated@@273 ($generated@@220 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@363 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@306 (type $generated@@424))))
(let (($generated@@426 ($generated@@305 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@304 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@303 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@154) (= (type $generated@@428) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@424) ($generated@@273 ($generated@@220 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@154) ($generated@@221 $generated@@429 $generated@@46)) (and (= ($generated@@273 ($generated@@364 $generated@@2 $generated@@429)) $generated@@429) ($generated@@140 ($generated@@364 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@154) ($generated@@221 $generated@@430 $generated@@47)) (and (= ($generated@@273 ($generated@@364 $generated@@3 $generated@@430)) $generated@@430) ($generated@@140 ($generated@@364 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@44)) (and (= ($generated@@273 ($generated@@364 $generated@@4 $generated@@431)) $generated@@431) ($generated@@140 ($generated@@364 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@44))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@45)) (and (= ($generated@@273 ($generated@@364 $generated@@248 $generated@@432)) $generated@@432) ($generated@@140 ($generated@@364 $generated@@248 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@221 ($generated@@273 $generated@@433) $generated@@434) ($generated@@140 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@221 ($generated@@273 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@154) (<= 0 ($generated@@322 $generated@@435)))
 :pattern ( ($generated@@322 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@79 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@76 $generated@@437 $generated@@2)) (<= 0 ($generated@@278 $generated@@436))))
 :pattern ( ($generated@@278 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@267 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@266 $generated@@439)) (<= 0 ($generated@@265 $generated@@438))))
 :pattern ( ($generated@@265 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@392 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@392 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@392 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@400 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@400 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) (= (type $generated@@461) $generated@@154)) (= ($generated@@258 ($generated@@220 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@144 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@144 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@144 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@144 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@154) (= (type $generated@@471) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@220 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@267 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@266 $generated@@154)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@265 $generated@@480))) ($generated@@252 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@230 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@235 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@235 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@159 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@159 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@364 $generated@@503 ($generated@@273 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@273 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@140 $generated@@504 ($generated@@392 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@284 $generated@@504) $generated@@507))) (and ($generated@@221 ($generated@@81 ($generated@@365 $generated@@504) $generated@@507) $generated@@506) ($generated@@221 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@284 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@140 $generated@@504 ($generated@@392 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@140 $generated@@508 ($generated@@400 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@508) $generated@@511))) (and ($generated@@221 ($generated@@81 ($generated@@375 $generated@@508) $generated@@511) $generated@@510) ($generated@@221 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@140 $generated@@508 ($generated@@400 $generated@@509 $generated@@510)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@154) (= (type $generated@@515) $generated@@154)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@220 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@220 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@221 $generated@@518 ($generated@@392 $generated@@519 $generated@@520))) (and (= ($generated@@273 ($generated@@364 ($generated@@286 $generated@@154 $generated@@154) $generated@@518)) $generated@@518) ($generated@@140 ($generated@@364 ($generated@@286 $generated@@154 $generated@@154) $generated@@518) ($generated@@392 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@221 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@154) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@221 $generated@@521 ($generated@@400 $generated@@522 $generated@@523))) (and (= ($generated@@273 ($generated@@364 ($generated@@304 $generated@@154 $generated@@154) $generated@@521)) $generated@@521) ($generated@@140 ($generated@@364 ($generated@@304 $generated@@154 $generated@@154) $generated@@521) ($generated@@400 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@221 $generated@@521 ($generated@@400 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@154)) ($generated@@221 $generated@@526 ($generated@@144 $generated@@524 $generated@@525))) (and (= ($generated@@273 ($generated@@364 $generated@@145 $generated@@526)) $generated@@526) ($generated@@140 ($generated@@364 $generated@@145 $generated@@526) ($generated@@144 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@526 ($generated@@144 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@81 ($generated@@408 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@81 ($generated@@408 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@144 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@145) (= ($generated@@512 ($generated@@273 $generated@@533)) ($generated@@513 $generated@@533)))
 :pattern ( ($generated@@512 ($generated@@273 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@154) ($generated@@221 $generated@@534 ($generated@@75 0))) (and (= ($generated@@273 ($generated@@364 $generated@@2 $generated@@534)) $generated@@534) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@154) (= (type $generated@@536) $generated@@64)) ($generated@@221 $generated@@535 ($generated@@230 $generated@@536))) (and (= ($generated@@273 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@535) ($generated@@230 $generated@@536))))
 :pattern ( ($generated@@221 $generated@@535 ($generated@@230 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@64)) ($generated@@221 $generated@@537 ($generated@@235 $generated@@538))) (and (= ($generated@@273 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@4) $generated@@537) ($generated@@235 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@235 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@64)) ($generated@@221 $generated@@539 ($generated@@159 $generated@@540))) (and (= ($generated@@273 ($generated@@364 ($generated@@76 $generated@@154 $generated@@2) $generated@@539)) $generated@@539) ($generated@@140 ($generated@@364 ($generated@@76 $generated@@154 $generated@@2) $generated@@539) ($generated@@159 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@159 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@64)) ($generated@@221 $generated@@541 ($generated@@474 $generated@@542))) (and (= ($generated@@273 ($generated@@364 ($generated@@266 $generated@@154) $generated@@541)) $generated@@541) ($generated@@140 ($generated@@364 ($generated@@266 $generated@@154) $generated@@541) ($generated@@474 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@474 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@154) ($generated@@221 $generated@@543 ($generated@@75 8))) (and (= ($generated@@273 ($generated@@364 $generated@@132 $generated@@543)) $generated@@543) ($generated@@140 ($generated@@364 $generated@@132 $generated@@543) ($generated@@75 8))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@75 8)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) ($generated@@321 $generated@@544)) (= $generated@@544 ($generated@@320 ($generated@@322 $generated@@544))))
 :pattern ( ($generated@@322 $generated@@544))
 :pattern ( ($generated@@321 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@545 $generated@@548)))) ($generated@@252 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@81 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@74 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@251 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@64) ($generated@@74 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@252 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@252 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@251 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@64) ($generated@@74 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@252 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@252 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@273 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@273 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@273 $generated@@560)))
 :pattern ( ($generated@@273 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@267 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@266 $generated@@562)) (= ($generated@@265 $generated@@561) 0)) (= $generated@@561 ($generated@@264 $generated@@562))))
 :pattern ( ($generated@@265 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@76 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@278 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@278 $generated@@563) ($generated ($generated@@81 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@278 ($generated@@82 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@568) $generated@@2)) ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@74 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@3)) ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@4)) ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@248)) ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@154)) ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@266 $generated@@154)) (= (type $generated@@578) $generated@@64)) (= ($generated@@140 $generated@@577 ($generated@@474 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@265 $generated@@577))) ($generated@@221 ($generated@@475 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@475 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@140 $generated@@577 ($generated@@474 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@266 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@265 $generated@@581))) (< ($generated@@513 ($generated@@364 $generated@@145 ($generated@@475 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@513 ($generated@@364 $generated@@145 ($generated@@475 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@286 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@64)) ($generated@@140 $generated@@583 ($generated@@392 $generated@@584 $generated@@585))) (and (and ($generated@@140 ($generated@@284 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@140 ($generated@@332 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@140 ($generated@@363 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@140 $generated@@583 ($generated@@392 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@304 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) $generated@@64)) ($generated@@140 $generated@@586 ($generated@@400 $generated@@587 $generated@@588))) (and (and ($generated@@140 ($generated@@302 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@140 ($generated@@343 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@140 ($generated@@374 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@140 $generated@@586 ($generated@@400 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@140 $generated@@589 $generated@@46))
 :pattern ( ($generated@@140 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@140 $generated@@590 $generated@@47))
 :pattern ( ($generated@@140 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@140 $generated@@591 $generated@@44))
 :pattern ( ($generated@@140 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@248) ($generated@@140 $generated@@592 $generated@@45))
 :pattern ( ($generated@@140 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@140 $generated@@593 $generated@@48))
 :pattern ( ($generated@@140 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(assert  (and (and (and (and (= (type $generated@@594) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@595) $generated@@77)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@598) $generated@@154)) (= (type $generated@@601) $generated@@248)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@607  (=> (= $generated@@594 ($generated@@165 $generated@@595 $generated@@596 $generated@@60 false)) (=> (and (<= ($generated@@240 0) $generated@@597) (<= $generated@@597 ($generated@@240 100))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@321 $generated@@598)) (=> ($generated@@321 $generated@@598) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@240 0) ($generated@@322 $generated@@598)) (<= ($generated@@322 $generated@@598) ($generated@@240 100)))) (=> (and (<= ($generated@@240 0) ($generated@@322 $generated@@598)) (<= ($generated@@322 $generated@@598) ($generated@@240 100))) (=> (and (= $generated@@599 ($generated@@322 $generated@@598)) (= $generated@@600 ($generated@@247 $generated@@601))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@240 0) $generated@@600) (<= $generated@@600 ($generated@@240 100)))) (=> (and (<= ($generated@@240 0) $generated@@600) (<= $generated@@600 ($generated@@240 100))) (=> (and (= $generated@@602 ($generated@@247 $generated@@601)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@240 0) $generated@@603) (<= $generated@@603 ($generated@@240 100)))))))))))))))
(let (($generated@@608  (=> (and (and ($generated@@251 $generated@@596) ($generated@@604 $generated@@596)) ($generated@@140 $generated@@601 $generated@@45)) (=> (and (and (and (<= ($generated@@240 0) $generated@@605) (<= $generated@@605 ($generated@@240 100))) true) (and (= 1 $generated@@606) (= (ControlFlow 0 6) 2))) $generated@@607))))
$generated@@608)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 ((_ BitVec 8)) T@U)
(declare-fun $generated@@134 (T@U) (_ BitVec 8))
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Real) Int)
(declare-fun $generated@@242 (Int) Int)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@T) T@U)
(declare-fun $generated@@262 (T@U) Int)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 ((_ BitVec 8)) Int)
(declare-fun $generated@@276 (T@U) Int)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@283 (T@T T@T) T@U)
(declare-fun $generated@@284 (T@T T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@385 (T@U T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (Int) Real)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@575 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@135 (_ BitVec 8)) ) (! (= ($generated@@134 ($generated@@133 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@133 $generated@@135))
)) (= ($generated@@1 $generated@@132) 14)) (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@132) (= ($generated@@133 ($generated@@134 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@134 $generated@@136))
))) (forall (($generated@@137 (_ BitVec 8)) ) (! (= (type ($generated@@133 $generated@@137)) $generated@@132)
 :pattern ( ($generated@@133 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@132) (= (type $generated@@139) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@138 ($generated@@75 8) $generated@@139))
 :pattern ( ($generated@@74 $generated@@138 ($generated@@75 8) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@132) ($generated@@140 $generated@@142 ($generated@@75 8)))
 :pattern ( ($generated@@140 $generated@@142 ($generated@@75 8)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@64)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@64) (= (type $generated@@149) $generated@@64)) (= (type $generated@@150) $generated@@145)) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@140 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 16) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@140 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@140 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@140 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@140 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@140 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Real) ) (! (= ($generated@@240 $generated@@241) (to_int $generated@@241))
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@242 $generated@@243) $generated@@243)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@244 $generated@@245)) $generated@@246))
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@244 $generated@@247) $generated@@247)
 :pattern ( ($generated@@244 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@250) $generated@@64) (= (type $generated@@251) $generated@@64)) (= (type $generated@@252) $generated@@154)) (= (type $generated@@253) $generated@@154)) (= (type $generated@@254) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@248 $generated@@254)) (= ($generated@@74 ($generated@@220 $generated@@252 $generated@@253) ($generated@@144 $generated@@250 $generated@@251) $generated@@254)  (and ($generated@@249 $generated@@252 $generated@@250 $generated@@254) ($generated@@249 $generated@@253 $generated@@251 $generated@@254))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@252 $generated@@253) ($generated@@144 $generated@@250 $generated@@251) $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@145) (= ($generated@@143 $generated@@257) (= ($generated@@255 $generated@@257) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@145) ($generated@@143 $generated@@258)) (exists (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (and (= (type $generated@@259) $generated@@154) (= (type $generated@@260) $generated@@154)) (= $generated@@258 ($generated@@220 $generated@@259 $generated@@260)))
 :no-pattern (type $generated@@259)
 :no-pattern (type $generated@@260)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
)))
 :pattern ( ($generated@@143 $generated@@258))
)))
(assert  (and (and (forall (($generated@@265 T@T) ) (= ($generated@@1 ($generated@@263 $generated@@265)) 18)) (forall (($generated@@266 T@T) ) (! (= ($generated@@264 ($generated@@263 $generated@@266)) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
))) (forall (($generated@@267 T@T) ) (! (= (type ($generated@@261 $generated@@267)) ($generated@@263 $generated@@267))
 :pattern ( ($generated@@261 $generated@@267))
))))
(assert (forall (($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@268)) 0)
 :pattern ( ($generated@@261 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@154)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@64) (= (type $generated@@273) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273) ($generated@@74 $generated@@271 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@249 ($generated@@269 $generated@@271) $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 (_ BitVec 8)) ) (!  (and (and (<= 0 ($generated@@274 $generated@@275)) (< ($generated@@274 $generated@@275) 256)) (= ($generated@@274 $generated@@275) (bv2int $generated@@275)))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@278 T@T) ) (! (= (type ($generated@@277 $generated@@278)) ($generated@@76 $generated@@278 $generated@@2))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 ($generated@@79 (type $generated@@279))))
 (=> (= (type $generated@@279) ($generated@@76 $generated@@280 $generated@@2)) (and (= (= ($generated@@276 $generated@@279) 0) (= $generated@@279 ($generated@@277 $generated@@280))) (=> (not (= ($generated@@276 $generated@@279) 0)) (exists (($generated@@281 T@U) ) (!  (and (= (type $generated@@281) $generated@@280) (< 0 ($generated ($generated@@81 $generated@@279 $generated@@281))))
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
))))))
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert  (and (and (and (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@287 $generated@@288)) 19)) (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@289 $generated@@290)) $generated@@289)
 :pattern ( ($generated@@284 $generated@@289 $generated@@290))
))) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@284 $generated@@291 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@284 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@285 (type $generated@@293))))
(= (type ($generated@@282 $generated@@293)) ($generated@@76 $generated@@294 $generated@@4)))
 :pattern ( ($generated@@282 $generated@@293))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= (type ($generated@@283 $generated@@295 $generated@@296)) ($generated@@284 $generated@@295 $generated@@296))
 :pattern ( ($generated@@283 $generated@@295 $generated@@296))
))))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@T) ) (! (let (($generated@@299 (type $generated@@297)))
 (not ($generated@@0 ($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297))))
 :pattern ( (let (($generated@@299 (type $generated@@297)))
($generated@@81 ($generated@@282 ($generated@@283 $generated@@299 $generated@@298)) $generated@@297)))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 20)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@76 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@81 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@79 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@76 $generated@@319 $generated@@2)) (= ($generated@@160 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (and (<= 0 ($generated ($generated@@81 $generated@@318 $generated@@320))) (<= ($generated ($generated@@81 $generated@@318 $generated@@320)) ($generated@@276 $generated@@318))))
 :pattern ( ($generated@@81 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@160 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@286 (type $generated@@321))))
(let (($generated@@323 ($generated@@285 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@284 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@283 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@282 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@286 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@286 (type $generated@@328))))
(let (($generated@@330 ($generated@@285 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@284 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@283 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@304 (type $generated@@332))))
(let (($generated@@334 ($generated@@303 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@302 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@301 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@300 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@304 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@76 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@304 (type $generated@@339))))
(let (($generated@@341 ($generated@@303 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@302 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@301 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@344) $generated@@64)) (= ($generated@@140 $generated@@343 ($generated@@159 $generated@@344)) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@343 $generated@@345)))) ($generated@@221 $generated@@345 $generated@@344))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
))))
 :pattern ( ($generated@@140 $generated@@343 ($generated@@159 $generated@@344)))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@346) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@347) $generated@@64)) (= (type $generated@@348) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@346 ($generated@@230 $generated@@347) $generated@@348) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@154) ($generated@@0 ($generated@@81 $generated@@346 $generated@@349))) ($generated@@249 $generated@@349 $generated@@347 $generated@@348))
 :pattern ( ($generated@@81 $generated@@346 $generated@@349))
))))
 :pattern ( ($generated@@74 $generated@@346 ($generated@@230 $generated@@347) $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@350 ($generated@@235 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) ($generated@@0 ($generated@@81 $generated@@350 $generated@@353))) ($generated@@249 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@81 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@74 $generated@@350 ($generated@@235 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
(= ($generated ($generated@@81 ($generated@@277 $generated@@355) $generated@@354)) 0))
 :pattern ( (let (($generated@@355 (type $generated@@354)))
($generated@@81 ($generated@@277 $generated@@355) $generated@@354)))
)))
(assert  (and (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@356 $generated@@359)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@356 $generated@@359))
)) (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@357 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@357 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@286 (type $generated@@362))))
(let (($generated@@364 ($generated@@285 (type $generated@@362))))
(= (type ($generated@@358 $generated@@362)) ($generated@@76 $generated@@364 $generated@@363))))
 :pattern ( ($generated@@358 $generated@@362))
))))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@284 $generated@@154 $generated@@154)) (= (type $generated@@366) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@365) $generated@@366))  (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@365) ($generated@@152 ($generated@@357 $generated@@145 $generated@@366)))) (= ($generated@@81 ($generated@@358 $generated@@365) ($generated@@152 ($generated@@357 $generated@@145 $generated@@366))) ($generated@@153 ($generated@@357 $generated@@145 $generated@@366))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@365) $generated@@366))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@154 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@304 (type $generated@@370))))
(let (($generated@@372 ($generated@@303 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@302 $generated@@154 $generated@@154)) (= (type $generated@@374) $generated@@154)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@373) ($generated@@152 ($generated@@357 $generated@@145 $generated@@374)))) (= ($generated@@81 ($generated@@368 $generated@@373) ($generated@@152 ($generated@@357 $generated@@145 $generated@@374))) ($generated@@153 ($generated@@357 $generated@@145 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@285 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@284 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@81 ($generated@@325 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@81 ($generated@@282 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@81 ($generated@@358 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@303 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@302 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@81 ($generated@@336 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@81 ($generated@@300 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@81 ($generated@@368 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@386 $generated@@387)) $generated@@64)
 :pattern ( ($generated@@385 $generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) ($generated@@284 $generated@@154 $generated@@154)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@388) $generated@@392))) (and ($generated@@249 ($generated@@81 ($generated@@358 $generated@@388) $generated@@392) $generated@@390 $generated@@391) ($generated@@249 $generated@@392 $generated@@389 $generated@@391)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@388) $generated@@392))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@385 $generated@@389 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@302 $generated@@154 $generated@@154)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@396) $generated@@400))) (and ($generated@@249 ($generated@@81 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@249 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 Int) ) (! (= ($generated@@401 $generated@@402) (to_real $generated@@402))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@304 (type $generated@@405))))
(let (($generated@@407 ($generated@@303 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@302 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@301 $generated@@407 $generated@@406)) (= ($generated@@300 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@300 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@304 (type $generated@@408))))
(let (($generated@@410 ($generated@@303 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@302 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@301 $generated@@410 $generated@@409)) (= ($generated@@336 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@336 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@304 (type $generated@@411))))
(let (($generated@@413 ($generated@@303 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@302 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@301 $generated@@413 $generated@@412)) (= ($generated@@367 $generated@@411) ($generated@@403 $generated@@154))))))
 :pattern ( ($generated@@367 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@286 (type $generated@@414))))
(let (($generated@@416 ($generated@@285 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@284 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@283 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@154) (= (type $generated@@418) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@414) ($generated@@269 ($generated@@220 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@356 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@304 (type $generated@@419))))
(let (($generated@@421 ($generated@@303 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@302 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@301 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@154) (= (type $generated@@423) $generated@@154)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@419) ($generated@@269 ($generated@@220 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@367 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@154) ($generated@@221 $generated@@424 $generated@@46)) (and (= ($generated@@269 ($generated@@357 $generated@@2 $generated@@424)) $generated@@424) ($generated@@140 ($generated@@357 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@154) ($generated@@221 $generated@@425 $generated@@47)) (and (= ($generated@@269 ($generated@@357 $generated@@3 $generated@@425)) $generated@@425) ($generated@@140 ($generated@@357 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@154) ($generated@@221 $generated@@426 $generated@@44)) (and (= ($generated@@269 ($generated@@357 $generated@@4 $generated@@426)) $generated@@426) ($generated@@140 ($generated@@357 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 21))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@154) ($generated@@221 $generated@@428 $generated@@45)) (and (= ($generated@@269 ($generated@@357 $generated@@427 $generated@@428)) $generated@@428) ($generated@@140 ($generated@@357 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@221 ($generated@@269 $generated@@429) $generated@@430) ($generated@@140 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@221 ($generated@@269 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@276 $generated@@431))))
 :pattern ( ($generated@@276 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@264 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@263 $generated@@434)) (<= 0 ($generated@@262 $generated@@433))))
 :pattern ( ($generated@@262 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@385 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@385 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@385 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@385 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@385 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@385 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@393 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@393 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@393 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@154) (= (type $generated@@456) $generated@@154)) (= ($generated@@255 ($generated@@220 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@144 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@144 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@144 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@144 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@154) (= (type $generated@@466) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@220 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@154) (= (type $generated@@468) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@220 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@264 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@263 $generated@@154)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@262 $generated@@475))) ($generated@@249 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@230 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@230 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@235 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@235 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@159 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@159 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@240 ($generated@@401 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@240 ($generated@@401 $generated@@497)))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@357 $generated@@499 ($generated@@269 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@269 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@284 $generated@@154 $generated@@154)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@140 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@282 $generated@@500) $generated@@503))) (and ($generated@@221 ($generated@@81 ($generated@@358 $generated@@500) $generated@@503) $generated@@502) ($generated@@221 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@282 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@140 $generated@@500 ($generated@@385 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@302 $generated@@154 $generated@@154)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@140 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) ($generated@@0 ($generated@@81 ($generated@@300 $generated@@504) $generated@@507))) (and ($generated@@221 ($generated@@81 ($generated@@368 $generated@@504) $generated@@507) $generated@@506) ($generated@@221 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@300 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@140 $generated@@504 ($generated@@393 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) (= (type $generated@@511) $generated@@154)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@220 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@220 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@154) (= (type $generated@@513) $generated@@154)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@220 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@220 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@154) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@221 $generated@@514 ($generated@@385 $generated@@515 $generated@@516))) (and (= ($generated@@269 ($generated@@357 ($generated@@284 $generated@@154 $generated@@154) $generated@@514)) $generated@@514) ($generated@@140 ($generated@@357 ($generated@@284 $generated@@154 $generated@@154) $generated@@514) ($generated@@385 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@221 $generated@@514 ($generated@@385 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@154) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@221 $generated@@517 ($generated@@393 $generated@@518 $generated@@519))) (and (= ($generated@@269 ($generated@@357 ($generated@@302 $generated@@154 $generated@@154) $generated@@517)) $generated@@517) ($generated@@140 ($generated@@357 ($generated@@302 $generated@@154 $generated@@154) $generated@@517) ($generated@@393 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@221 $generated@@517 ($generated@@393 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@154)) ($generated@@221 $generated@@522 ($generated@@144 $generated@@520 $generated@@521))) (and (= ($generated@@269 ($generated@@357 $generated@@145 $generated@@522)) $generated@@522) ($generated@@140 ($generated@@357 $generated@@145 $generated@@522) ($generated@@144 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@221 $generated@@522 ($generated@@144 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@403 $generated@@524) $generated@@523)))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (and (= ($generated@@72 ($generated@@144 $generated@@527 $generated@@528)) $generated@@62) (= ($generated@@525 ($generated@@144 $generated@@527 $generated@@528)) $generated@@63)))
 :pattern ( ($generated@@144 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@145) (= ($generated@@508 ($generated@@269 $generated@@529)) ($generated@@509 $generated@@529)))
 :pattern ( ($generated@@508 ($generated@@269 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@154) ($generated@@221 $generated@@530 ($generated@@75 0))) (and (= ($generated@@269 ($generated@@357 $generated@@2 $generated@@530)) $generated@@530) ($generated@@140 ($generated@@357 ($generated@@76 $generated@@154 $generated@@4) $generated@@530) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@530 ($generated@@75 0)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@154) (= (type $generated@@532) $generated@@64)) ($generated@@221 $generated@@531 ($generated@@230 $generated@@532))) (and (= ($generated@@269 ($generated@@357 ($generated@@76 $generated@@154 $generated@@4) $generated@@531)) $generated@@531) ($generated@@140 ($generated@@357 ($generated@@76 $generated@@154 $generated@@4) $generated@@531) ($generated@@230 $generated@@532))))
 :pattern ( ($generated@@221 $generated@@531 ($generated@@230 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@154) (= (type $generated@@534) $generated@@64)) ($generated@@221 $generated@@533 ($generated@@235 $generated@@534))) (and (= ($generated@@269 ($generated@@357 ($generated@@76 $generated@@154 $generated@@4) $generated@@533)) $generated@@533) ($generated@@140 ($generated@@357 ($generated@@76 $generated@@154 $generated@@4) $generated@@533) ($generated@@235 $generated@@534))))
 :pattern ( ($generated@@221 $generated@@533 ($generated@@235 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@154) (= (type $generated@@536) $generated@@64)) ($generated@@221 $generated@@535 ($generated@@159 $generated@@536))) (and (= ($generated@@269 ($generated@@357 ($generated@@76 $generated@@154 $generated@@2) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@357 ($generated@@76 $generated@@154 $generated@@2) $generated@@535) ($generated@@159 $generated@@536))))
 :pattern ( ($generated@@221 $generated@@535 ($generated@@159 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@64)) ($generated@@221 $generated@@537 ($generated@@469 $generated@@538))) (and (= ($generated@@269 ($generated@@357 ($generated@@263 $generated@@154) $generated@@537)) $generated@@537) ($generated@@140 ($generated@@357 ($generated@@263 $generated@@154) $generated@@537) ($generated@@469 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@469 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@154) ($generated@@221 $generated@@539 ($generated@@75 8))) (and (= ($generated@@269 ($generated@@357 $generated@@132 $generated@@539)) $generated@@539) ($generated@@140 ($generated@@357 $generated@@132 $generated@@539) ($generated@@75 8))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@75 8)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@76 $generated@@154 $generated@@2)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@540 ($generated@@159 $generated@@541) $generated@@542) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@154) (< 0 ($generated ($generated@@81 $generated@@540 $generated@@543)))) ($generated@@249 $generated@@543 $generated@@541 $generated@@542))
 :pattern ( ($generated@@81 $generated@@540 $generated@@543))
))))
 :pattern ( ($generated@@74 $generated@@540 ($generated@@159 $generated@@541) $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@248 $generated@@546) (and ($generated@@143 $generated@@544) (exists (($generated@@547 T@U) ) (!  (and (= (type $generated@@547) $generated@@64) ($generated@@74 $generated@@544 ($generated@@144 $generated@@545 $generated@@547) $generated@@546))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@144 $generated@@545 $generated@@547) $generated@@546))
))))) ($generated@@249 ($generated@@152 $generated@@544) $generated@@545 $generated@@546))
 :pattern ( ($generated@@249 ($generated@@152 $generated@@544) $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@248 $generated@@550) (and ($generated@@143 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@144 $generated@@551 $generated@@549) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@144 $generated@@551 $generated@@549) $generated@@550))
))))) ($generated@@249 ($generated@@153 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@249 ($generated@@153 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (= ($generated@@220 ($generated@@244 $generated@@552) ($generated@@244 $generated@@553)) ($generated@@244 ($generated@@220 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@220 ($generated@@244 $generated@@552) ($generated@@244 $generated@@553)))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@269 ($generated@@8 ($generated@@242 $generated@@554))) ($generated@@244 ($generated@@269 ($generated@@8 $generated@@554))))
 :pattern ( ($generated@@269 ($generated@@8 ($generated@@242 $generated@@554))))
)))
(assert (forall (($generated@@555 T@U) ) (! (= ($generated@@269 ($generated@@244 $generated@@555)) ($generated@@244 ($generated@@269 $generated@@555)))
 :pattern ( ($generated@@269 ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 ($generated@@264 (type $generated@@556))))
 (=> (and (= (type $generated@@556) ($generated@@263 $generated@@557)) (= ($generated@@262 $generated@@556) 0)) (= $generated@@556 ($generated@@261 $generated@@557))))
 :pattern ( ($generated@@262 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@559)))
 (=> (and (and (= (type $generated@@558) ($generated@@76 $generated@@561 $generated@@2)) (= (type $generated@@560) $generated@@2)) (<= 0 ($generated $generated@@560))) (= ($generated@@276 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)) (+ (- ($generated@@276 $generated@@558) ($generated ($generated@@81 $generated@@558 $generated@@559))) ($generated $generated@@560)))))
 :pattern ( ($generated@@276 ($generated@@82 $generated@@558 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@2)) ($generated@@74 $generated@@563 $generated@@46 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@3)) ($generated@@74 $generated@@565 $generated@@47 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@47 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@4)) ($generated@@74 $generated@@567 $generated@@44 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@44 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@427)) ($generated@@74 $generated@@569 $generated@@45 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@45 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@154)) ($generated@@74 $generated@@571 $generated@@48 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@48 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@263 $generated@@154)) (= (type $generated@@573) $generated@@64)) (= ($generated@@140 $generated@@572 ($generated@@469 $generated@@573)) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@262 $generated@@572))) ($generated@@221 ($generated@@470 $generated@@572 $generated@@574) $generated@@573))
 :pattern ( ($generated@@470 $generated@@572 $generated@@574))
))))
 :pattern ( ($generated@@140 $generated@@572 ($generated@@469 $generated@@573)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ) (!  (=> (= (type $generated@@576) ($generated@@263 $generated@@154)) (=> (and (<= 0 $generated@@577) (< $generated@@577 ($generated@@262 $generated@@576))) (< ($generated@@509 ($generated@@357 $generated@@145 ($generated@@470 $generated@@576 $generated@@577))) ($generated@@575 $generated@@576))))
 :pattern ( ($generated@@509 ($generated@@357 $generated@@145 ($generated@@470 $generated@@576 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) ($generated@@284 $generated@@154 $generated@@154)) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) ($generated@@140 $generated@@578 ($generated@@385 $generated@@579 $generated@@580))) (and (and ($generated@@140 ($generated@@282 $generated@@578) ($generated@@230 $generated@@579)) ($generated@@140 ($generated@@325 $generated@@578) ($generated@@230 $generated@@580))) ($generated@@140 ($generated@@356 $generated@@578) ($generated@@230 ($generated@@144 $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@140 $generated@@578 ($generated@@385 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) ($generated@@302 $generated@@154 $generated@@154)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@140 $generated@@581 ($generated@@393 $generated@@582 $generated@@583))) (and (and ($generated@@140 ($generated@@300 $generated@@581) ($generated@@235 $generated@@582)) ($generated@@140 ($generated@@336 $generated@@581) ($generated@@235 $generated@@583))) ($generated@@140 ($generated@@367 $generated@@581) ($generated@@235 ($generated@@144 $generated@@582 $generated@@583)))))
 :pattern ( ($generated@@140 $generated@@581 ($generated@@393 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@2) ($generated@@140 $generated@@584 $generated@@46))
 :pattern ( ($generated@@140 $generated@@584 $generated@@46))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@3) ($generated@@140 $generated@@585 $generated@@47))
 :pattern ( ($generated@@140 $generated@@585 $generated@@47))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@4) ($generated@@140 $generated@@586 $generated@@44))
 :pattern ( ($generated@@140 $generated@@586 $generated@@44))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@427) ($generated@@140 $generated@@587 $generated@@45))
 :pattern ( ($generated@@140 $generated@@587 $generated@@45))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@154) ($generated@@140 $generated@@588 $generated@@48))
 :pattern ( ($generated@@140 $generated@@588 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@589 () T@U)
(declare-fun $generated@@590 () T@U)
(declare-fun $generated@@591 () T@U)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Real)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () (_ BitVec 8))
(declare-fun $generated@@596 (T@U) Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(assert  (and (and (and (= (type $generated@@589) ($generated@@166 $generated@@77 $generated@@4)) (= (type $generated@@590) $generated@@77)) (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@597) $generated@@427)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@600  (=> (= $generated@@589 ($generated@@165 $generated@@590 $generated@@591 $generated@@60 false)) (=> (and (<= ($generated@@242 0) $generated@@592) (<= $generated@@592 ($generated@@242 100))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@401 ($generated@@240 $generated@@593)) $generated@@593)) (=> (= ($generated@@401 ($generated@@240 $generated@@593)) $generated@@593) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@242 0) ($generated@@240 $generated@@593)) (<= ($generated@@240 $generated@@593) ($generated@@242 100)))) (=> (and (<= ($generated@@242 0) ($generated@@240 $generated@@593)) (<= ($generated@@240 $generated@@593) ($generated@@242 100))) (=> (and (= $generated@@594 ($generated@@240 $generated@@593)) (= (ControlFlow 0 2) (- 0 1))) (and (<= ($generated@@242 0) ($generated@@274 $generated@@595)) (<= ($generated@@274 $generated@@595) ($generated@@242 100))))))))))))
(let (($generated@@601  (=> (and (and ($generated@@248 $generated@@591) ($generated@@596 $generated@@591)) ($generated@@140 $generated@@597 $generated@@45)) (=> (and (and (and (<= ($generated@@242 0) $generated@@598) (<= $generated@@598 ($generated@@242 100))) true) (and (= 1 $generated@@599) (= (ControlFlow 0 5) 2))) $generated@@600))))
$generated@@601)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
