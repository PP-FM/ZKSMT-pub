(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@280 (T@T T@T) T@U)
(declare-fun $generated@@281 (T@T T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U T@U) Bool)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@345 () Int)
(declare-fun $generated@@346 (T@U T@U) Bool)
(declare-fun $generated@@347 (T@U T@U) Bool)
(declare-fun $generated@@348 (T@T) T@U)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@350 (T@U T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@419 (T@T) T@U)
(declare-fun $generated@@443 () T@T)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@243 $generated@@244)) $generated@@245))
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@243 $generated@@246) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@249) $generated@@64) (= (type $generated@@250) $generated@@64)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) $generated@@145)) (= (type $generated@@253) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@247 $generated@@253)) (= ($generated@@74 ($generated@@223 $generated@@251 $generated@@252) ($generated@@135 $generated@@249 $generated@@250) $generated@@253)  (and ($generated@@248 $generated@@251 $generated@@249 $generated@@253) ($generated@@248 $generated@@252 $generated@@250 $generated@@253))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@251 $generated@@252) ($generated@@135 $generated@@249 $generated@@250) $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@136) (= ($generated@@134 $generated@@256) (= ($generated@@254 $generated@@256) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@136) ($generated@@134 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@145) (= (type $generated@@259) $generated@@145)) (= $generated@@257 ($generated@@223 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@134 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@145)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@64) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@74 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@274 $generated@@275)) ($generated@@76 $generated@@275 $generated@@2))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@79 (type $generated@@276))))
 (=> (= (type $generated@@276) ($generated@@76 $generated@@277 $generated@@2)) (and (= (= ($generated@@273 $generated@@276) 0) (= $generated@@276 ($generated@@274 $generated@@277))) (=> (not (= ($generated@@273 $generated@@276) 0)) (exists (($generated@@278 T@U) ) (!  (and (= (type $generated@@278) $generated@@277) (< 0 ($generated ($generated@@81 $generated@@276 $generated@@278))))
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
))))))
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert  (and (and (and (and (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@284 $generated@@285)) 18)) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@286 $generated@@287)) $generated@@286)
 :pattern ( ($generated@@281 $generated@@286 $generated@@287))
))) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@281 $generated@@288 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@281 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@282 (type $generated@@290))))
(= (type ($generated@@279 $generated@@290)) ($generated@@76 $generated@@291 $generated@@4)))
 :pattern ( ($generated@@279 $generated@@290))
))) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= (type ($generated@@280 $generated@@292 $generated@@293)) ($generated@@281 $generated@@292 $generated@@293))
 :pattern ( ($generated@@280 $generated@@292 $generated@@293))
))))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@T) ) (! (let (($generated@@296 (type $generated@@294)))
 (not ($generated@@0 ($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294))))
 :pattern ( (let (($generated@@296 (type $generated@@294)))
($generated@@81 ($generated@@279 ($generated@@280 $generated@@296 $generated@@295)) $generated@@294)))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@316))))
 (=> (and (= (type $generated@@316) ($generated@@76 $generated@@318 $generated@@4)) (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@4))) (= ($generated@@315 $generated@@316 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (= ($generated@@0 ($generated@@81 $generated@@316 $generated@@319)) ($generated@@0 ($generated@@81 $generated@@317 $generated@@319))))
 :pattern ( ($generated@@81 $generated@@316 $generated@@319))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@315 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@79 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@76 $generated@@321 $generated@@2)) (= ($generated@@151 $generated@@320) (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@321) (and (<= 0 ($generated ($generated@@81 $generated@@320 $generated@@322))) (<= ($generated ($generated@@81 $generated@@320 $generated@@322)) ($generated@@273 $generated@@320))))
 :pattern ( ($generated@@81 $generated@@320 $generated@@322))
)))))
 :pattern ( ($generated@@151 $generated@@320))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@283 (type $generated@@323))))
(let (($generated@@325 ($generated@@282 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@281 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@280 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@279 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@283 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@283 (type $generated@@330))))
(let (($generated@@332 ($generated@@282 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@281 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@280 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@81 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@301 (type $generated@@334))))
(let (($generated@@336 ($generated@@300 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@299 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@298 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@297 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@301 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@76 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(let (($generated@@343 ($generated@@300 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@299 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@298 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert  (and (forall (($generated@@351 T@T) ) (! (= (type ($generated@@348 $generated@@351)) ($generated@@76 $generated@@351 $generated@@4))
 :pattern ( ($generated@@348 $generated@@351))
)) (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (= (type ($generated@@350 $generated@@352 $generated@@353)) $generated@@145)
 :pattern ( ($generated@@350 $generated@@352 $generated@@353))
))))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (and (= (type $generated@@354) $generated@@64) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@347 $generated@@354 $generated@@356) (and (not (= 0 $generated@@345)) (and (and ($generated@@247 $generated@@355) ($generated@@132 $generated@@356 ($generated@@233 $generated@@354))) (not ($generated@@315 $generated@@356 ($generated@@348 $generated@@145))))))) (and ($generated@@349 $generated@@354 $generated@@356) (= ($generated@@346 $generated@@354 $generated@@356) (let (($generated@@357 ($generated@@350 $generated@@354 $generated@@356)))
(= $generated@@357 $generated@@357)))))
 :pattern ( ($generated@@346 $generated@@354 $generated@@356) ($generated@@247 $generated@@355))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@359) $generated@@64)) (= ($generated@@132 $generated@@358 ($generated@@150 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@358 $generated@@360)))) ($generated@@224 $generated@@360 $generated@@359))
 :pattern ( ($generated@@81 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@132 $generated@@358 ($generated@@150 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@233 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@248 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@233 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@238 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@145) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@248 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@238 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@81 ($generated@@274 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@81 ($generated@@274 $generated@@370) $generated@@369)))
)))
(assert  (and (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@371 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@372 $generated@@375 $generated@@376))
))) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@283 (type $generated@@377))))
(let (($generated@@379 ($generated@@282 (type $generated@@377))))
(= (type ($generated@@373 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@373 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@381) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@380) ($generated@@143 ($generated@@372 $generated@@136 $generated@@381)))) (= ($generated@@81 ($generated@@373 $generated@@380) ($generated@@143 ($generated@@372 $generated@@136 $generated@@381))) ($generated@@144 ($generated@@372 $generated@@136 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@301 (type $generated@@385))))
(let (($generated@@387 ($generated@@300 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@389) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@388) ($generated@@143 ($generated@@372 $generated@@136 $generated@@389)))) (= ($generated@@81 ($generated@@383 $generated@@388) ($generated@@143 ($generated@@372 $generated@@136 $generated@@389))) ($generated@@144 ($generated@@372 $generated@@136 $generated@@389))))))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@282 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@281 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@81 ($generated@@327 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@81 ($generated@@279 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@390) $generated@@394))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@81 ($generated@@327 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@300 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@299 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@338 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@338 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@403) $generated@@407))) (and ($generated@@248 ($generated@@81 ($generated@@373 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@248 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@64)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@411) $generated@@415))) (and ($generated@@248 ($generated@@81 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@248 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@74 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@79 (type $generated@@416))))
 (=> (and (and (= (type $generated@@416) ($generated@@76 $generated@@418 $generated@@4)) (= (type $generated@@417) ($generated@@76 $generated@@418 $generated@@4))) ($generated@@315 $generated@@416 $generated@@417)) (= $generated@@416 $generated@@417)))
 :pattern ( ($generated@@315 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@420 T@T) ) (! (= (type ($generated@@419 $generated@@420)) ($generated@@76 $generated@@420 $generated@@4))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@301 (type $generated@@421))))
(let (($generated@@423 ($generated@@300 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@299 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@298 $generated@@423 $generated@@422)) (= ($generated@@297 $generated@@421) ($generated@@419 $generated@@423))))))
 :pattern ( ($generated@@297 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@301 (type $generated@@424))))
(let (($generated@@426 ($generated@@300 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@299 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@298 $generated@@426 $generated@@425)) (= ($generated@@338 $generated@@424) ($generated@@419 $generated@@425))))))
 :pattern ( ($generated@@338 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@301 (type $generated@@427))))
(let (($generated@@429 ($generated@@300 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@299 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@298 $generated@@429 $generated@@428)) (= ($generated@@382 $generated@@427) ($generated@@419 $generated@@145))))))
 :pattern ( ($generated@@382 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@283 (type $generated@@430))))
(let (($generated@@432 ($generated@@282 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@281 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@280 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@145) (= (type $generated@@434) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@430) ($generated@@268 ($generated@@223 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@371 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@301 (type $generated@@435))))
(let (($generated@@437 ($generated@@300 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@299 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@298 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (and (and (= (type $generated@@438) $generated@@145) (= (type $generated@@439) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@382 $generated@@435) ($generated@@268 ($generated@@223 $generated@@438 $generated@@439)))))
 :no-pattern (type $generated@@438)
 :no-pattern (type $generated@@439)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
))))))
 :pattern ( ($generated@@382 $generated@@435))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@224 $generated@@440 $generated@@46)) (and (= ($generated@@268 ($generated@@372 $generated@@2 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@372 $generated@@2 $generated@@440) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@46))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@224 $generated@@441 $generated@@47)) (and (= ($generated@@268 ($generated@@372 $generated@@3 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@372 $generated@@3 $generated@@441) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@47))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@224 $generated@@442 $generated@@44)) (and (= ($generated@@268 ($generated@@372 $generated@@4 $generated@@442)) $generated@@442) ($generated@@132 ($generated@@372 $generated@@4 $generated@@442) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@442 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@443) 20))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) ($generated@@224 $generated@@444 $generated@@45)) (and (= ($generated@@268 ($generated@@372 $generated@@443 $generated@@444)) $generated@@444) ($generated@@132 ($generated@@372 $generated@@443 $generated@@444) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@444 $generated@@45))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (= (type $generated@@446) $generated@@64) (= ($generated@@224 ($generated@@268 $generated@@445) $generated@@446) ($generated@@132 $generated@@445 $generated@@446)))
 :pattern ( ($generated@@224 ($generated@@268 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@79 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@76 $generated@@448 $generated@@2)) (<= 0 ($generated@@273 $generated@@447))))
 :pattern ( ($generated@@273 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@263 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@262 $generated@@450)) (<= 0 ($generated@@261 $generated@@449))))
 :pattern ( ($generated@@261 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@400 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@400 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@400 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@400 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@459 $generated@@460)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@408 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@408 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@408 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@408 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@72 ($generated@@408 $generated@@469 $generated@@470)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@254 ($generated@@223 $generated@@471 $generated@@472)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) (= (type $generated@@482) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@223 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@223 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@263 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@262 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@261 $generated@@491))) ($generated@@248 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@233 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@233 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@238 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@150 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@150 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@372 $generated@@514 ($generated@@268 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@268 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@279 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@279 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@400 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@132 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@519) $generated@@522))) (and ($generated@@224 ($generated@@81 ($generated@@383 $generated@@519) $generated@@522) $generated@@521) ($generated@@224 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@132 $generated@@519 ($generated@@408 $generated@@520 $generated@@521)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@347 $generated@@523 $generated@@524) (and (not (= 0 $generated@@345)) (and ($generated@@132 $generated@@524 ($generated@@233 $generated@@523)) (not ($generated@@315 $generated@@524 ($generated@@348 $generated@@145))))))) true)
 :pattern ( ($generated@@346 $generated@@523 $generated@@524))
))))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@145)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@223 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@223 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@145)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@223 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@223 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) ($generated@@76 $generated@@145 $generated@@4))) ($generated@@349 $generated@@531 $generated@@532)) ($generated@@0 ($generated@@81 $generated@@532 ($generated@@350 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@350 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@64)) ($generated@@224 $generated@@533 ($generated@@400 $generated@@534 $generated@@535))) (and (= ($generated@@268 ($generated@@372 ($generated@@281 $generated@@145 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@372 ($generated@@281 $generated@@145 $generated@@145) $generated@@533) ($generated@@400 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@224 $generated@@533 ($generated@@400 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@536 ($generated@@408 $generated@@537 $generated@@538))) (and (= ($generated@@268 ($generated@@372 ($generated@@299 $generated@@145 $generated@@145) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@372 ($generated@@299 $generated@@145 $generated@@145) $generated@@536) ($generated@@408 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@536 ($generated@@408 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@145)) ($generated@@224 $generated@@541 ($generated@@135 $generated@@539 $generated@@540))) (and (= ($generated@@268 ($generated@@372 $generated@@136 $generated@@541)) $generated@@541) ($generated@@132 ($generated@@372 $generated@@136 $generated@@541) ($generated@@135 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@135 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@81 ($generated@@348 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@81 ($generated@@348 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@81 ($generated@@419 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@81 ($generated@@419 $generated@@545) $generated@@544)))
)))
(assert  (=> (<= 0 $generated@@345) (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@548) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@347 $generated@@546 ($generated@@243 $generated@@548)) (and (not (= 0 $generated@@345)) (and (and ($generated@@247 $generated@@547) ($generated@@132 $generated@@548 ($generated@@233 $generated@@546))) (not ($generated@@315 $generated@@548 ($generated@@348 $generated@@145))))))) (and ($generated@@349 $generated@@546 ($generated@@243 $generated@@548)) (= ($generated@@346 $generated@@546 ($generated@@243 $generated@@548)) (let (($generated@@549 ($generated@@350 $generated@@546 ($generated@@243 $generated@@548))))
(= $generated@@549 $generated@@549)))))
 :weight 3
 :pattern ( ($generated@@346 $generated@@546 ($generated@@243 $generated@@548)) ($generated@@247 $generated@@547))
))))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@69)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@64) (= (type $generated@@553) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@552 $generated@@553)) $generated@@62) (= ($generated@@550 ($generated@@135 $generated@@552 $generated@@553)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@136) (= ($generated@@525 ($generated@@268 $generated@@554)) ($generated@@526 $generated@@554)))
 :pattern ( ($generated@@525 ($generated@@268 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) ($generated@@224 $generated@@555 ($generated@@75 0))) (and (= ($generated@@268 ($generated@@372 $generated@@2 $generated@@555)) $generated@@555) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@555) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@555 ($generated@@75 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@64)) ($generated@@224 $generated@@556 ($generated@@233 $generated@@557))) (and (= ($generated@@268 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@556)) $generated@@556) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@556) ($generated@@233 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@233 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@64)) ($generated@@224 $generated@@558 ($generated@@238 $generated@@559))) (and (= ($generated@@268 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@558)) $generated@@558) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@4) $generated@@558) ($generated@@238 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@64)) ($generated@@224 $generated@@560 ($generated@@150 $generated@@561))) (and (= ($generated@@268 ($generated@@372 ($generated@@76 $generated@@145 $generated@@2) $generated@@560)) $generated@@560) ($generated@@132 ($generated@@372 ($generated@@76 $generated@@145 $generated@@2) $generated@@560) ($generated@@150 $generated@@561))))
 :pattern ( ($generated@@224 $generated@@560 ($generated@@150 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@64)) ($generated@@224 $generated@@562 ($generated@@485 $generated@@563))) (and (= ($generated@@268 ($generated@@372 ($generated@@262 $generated@@145) $generated@@562)) $generated@@562) ($generated@@132 ($generated@@372 ($generated@@262 $generated@@145) $generated@@562) ($generated@@485 $generated@@563))))
 :pattern ( ($generated@@224 $generated@@562 ($generated@@485 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@564 ($generated@@150 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@564 $generated@@567)))) ($generated@@248 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@81 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@74 $generated@@564 ($generated@@150 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@136) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@570) (and ($generated@@134 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@64) ($generated@@74 $generated@@568 ($generated@@135 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@74 $generated@@568 ($generated@@135 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@248 ($generated@@143 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@248 ($generated@@143 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@136) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@247 $generated@@574) (and ($generated@@134 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@74 $generated@@572 ($generated@@135 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@135 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@248 ($generated@@144 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@248 ($generated@@144 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@145)) (= ($generated@@223 ($generated@@243 $generated@@576) ($generated@@243 $generated@@577)) ($generated@@243 ($generated@@223 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@223 ($generated@@243 $generated@@576) ($generated@@243 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@268 ($generated@@243 $generated@@578)) ($generated@@243 ($generated@@268 $generated@@578)))
 :pattern ( ($generated@@268 ($generated@@243 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@263 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@262 $generated@@580)) (= ($generated@@261 $generated@@579) 0)) (= $generated@@579 ($generated@@260 $generated@@580))))
 :pattern ( ($generated@@261 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@76 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@273 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@273 $generated@@581) ($generated ($generated@@81 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@273 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@2)) ($generated@@74 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@3)) ($generated@@74 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@4)) ($generated@@74 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@443)) ($generated@@74 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@145)) ($generated@@74 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@262 $generated@@145)) (= (type $generated@@596) $generated@@64)) (= ($generated@@132 $generated@@595 ($generated@@485 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@261 $generated@@595))) ($generated@@224 ($generated@@486 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@486 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@132 $generated@@595 ($generated@@485 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@262 $generated@@145)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@261 $generated@@599))) (< ($generated@@526 ($generated@@372 $generated@@136 ($generated@@486 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@526 ($generated@@372 $generated@@136 ($generated@@486 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@281 $generated@@145 $generated@@145)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@132 $generated@@601 ($generated@@400 $generated@@602 $generated@@603))) (and (and ($generated@@132 ($generated@@279 $generated@@601) ($generated@@233 $generated@@602)) ($generated@@132 ($generated@@327 $generated@@601) ($generated@@233 $generated@@603))) ($generated@@132 ($generated@@371 $generated@@601) ($generated@@233 ($generated@@135 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@132 $generated@@601 ($generated@@400 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@132 $generated@@604 ($generated@@408 $generated@@605 $generated@@606))) (and (and ($generated@@132 ($generated@@297 $generated@@604) ($generated@@238 $generated@@605)) ($generated@@132 ($generated@@338 $generated@@604) ($generated@@238 $generated@@606))) ($generated@@132 ($generated@@382 $generated@@604) ($generated@@238 ($generated@@135 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@132 $generated@@604 ($generated@@408 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@132 $generated@@607 $generated@@46))
 :pattern ( ($generated@@132 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@132 $generated@@608 $generated@@47))
 :pattern ( ($generated@@132 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@132 $generated@@609 $generated@@44))
 :pattern ( ($generated@@132 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@443) ($generated@@132 $generated@@610 $generated@@45))
 :pattern ( ($generated@@132 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@145) ($generated@@132 $generated@@611 $generated@@48))
 :pattern ( ($generated@@132 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@612) $generated@@64) (= (type $generated@@613) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@614) $generated@@145)) (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@616) $generated@@145)) (= (type $generated@@617) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@618) $generated@@77)) (= (type $generated@@619) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@621  (and (=> (= (ControlFlow 0 3) (- 0 4)) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@145) (and ($generated@@224 $generated@@622 $generated@@612) ($generated@@0 ($generated@@81 $generated@@613 $generated@@622))))
 :no-pattern (type $generated@@622)
 :no-pattern ($generated $generated@@622)
 :no-pattern ($generated@@0 $generated@@622)
))) (=> (exists (($generated@@623 T@U) ) (!  (and (= (type $generated@@623) $generated@@145) (and ($generated@@224 $generated@@623 $generated@@612) ($generated@@0 ($generated@@81 $generated@@613 $generated@@623))))
 :no-pattern (type $generated@@623)
 :no-pattern ($generated $generated@@623)
 :no-pattern ($generated@@0 $generated@@623)
)) (=> (and (and (and ($generated@@224 $generated@@614 $generated@@612) ($generated@@248 $generated@@614 $generated@@612 $generated@@615)) ($generated@@0 ($generated@@81 $generated@@613 $generated@@614))) (and (and ($generated@@224 $generated@@616 $generated@@612) ($generated@@248 $generated@@616 $generated@@612 $generated@@615)) (and ($generated@@0 ($generated@@81 $generated@@613 $generated@@616)) (= (ControlFlow 0 3) (- 0 2))))) (= (= $generated@@614 $generated@@614) (= $generated@@616 $generated@@616)))))))
(let (($generated@@624  (=> (and (not (and ($generated@@224 $generated@@614 $generated@@612) ($generated@@248 $generated@@614 $generated@@612 $generated@@615))) (= (ControlFlow 0 6) 3)) $generated@@621)))
(let (($generated@@625  (=> (and (and ($generated@@224 $generated@@614 $generated@@612) ($generated@@248 $generated@@614 $generated@@612 $generated@@615)) (= (ControlFlow 0 5) 3)) $generated@@621)))
(let (($generated@@626  (=> (= $generated@@617 ($generated@@211 $generated@@618 $generated@@615 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@625) (=> (= (ControlFlow 0 7) 6) $generated@@624)))))
(let (($generated@@627 true))
(let (($generated@@628  (=> (and (= $generated@@619 ($generated@@156 $generated@@618 $generated@@615 $generated@@60 false)) (not ($generated@@315 $generated@@613 ($generated@@348 $generated@@145)))) (and (=> (= (ControlFlow 0 8) 1) $generated@@627) (=> (= (ControlFlow 0 8) 7) $generated@@626)))))
(let (($generated@@629  (=> (and (and (and ($generated@@247 $generated@@615) ($generated@@620 $generated@@615)) ($generated@@132 $generated@@613 ($generated@@233 $generated@@612))) (and (= 0 $generated@@345) (= (ControlFlow 0 9) 8))) $generated@@628)))
$generated@@629))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U) Int)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@T) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U) Bool)
(declare-fun $generated@@151 (Int) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (Int) Int)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@76 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@76 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@76 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@76 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@76 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@78)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 14)) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@74 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@74 $generated@@137))
))) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@82 $generated@@139)) $generated@@64)
 :pattern ( ($generated@@82 $generated@@139))
))) (forall (($generated@@140 T@T) ) (! (= (type ($generated@@84 $generated@@140)) ($generated@@76 $generated@@140 $generated@@4))
 :pattern ( ($generated@@84 $generated@@140))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@86 $generated@@141 $generated@@142)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@141 $generated@@142))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@145) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@80 $generated@@143 ($generated@@74 $generated@@145)) (and (not (= 0 $generated@@72)) (and (and ($generated@@75 $generated@@144) ($generated@@81 $generated@@145 ($generated@@82 $generated@@143))) (not ($generated@@83 $generated@@145 ($generated@@84 $generated@@79))))))) (and ($generated@@85 $generated@@143 ($generated@@74 $generated@@145)) (= ($generated@@73 $generated@@143 ($generated@@74 $generated@@145)) (let (($generated@@146 (let (($generated@@147 ($generated@@86 $generated@@143 ($generated@@74 $generated@@145))))
(= $generated@@147 $generated@@147))))
(ite $generated@@146 6 8)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@143 ($generated@@74 $generated@@145)) ($generated@@75 $generated@@144))
))))
(assert (forall (($generated@@149 T@U) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@65)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (= ($generated@@148 $generated@@44) $generated@@49))
(assert (= ($generated@@148 $generated@@45) $generated@@50))
(assert (= ($generated@@148 $generated@@46) $generated@@51))
(assert (= ($generated@@148 $generated@@47) $generated@@52))
(assert (= ($generated@@148 $generated@@48) $generated@@53))
(assert (forall (($generated@@152 Int) ) (! (= (type ($generated@@151 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@2) (= (type $generated@@154) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@150 $generated@@153 ($generated@@151 0) $generated@@154))
 :pattern ( ($generated@@150 $generated@@153 ($generated@@151 0) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@81 $generated@@155 ($generated@@151 0)))
 :pattern ( ($generated@@81 $generated@@155 ($generated@@151 0)))
)))
(assert  (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@159 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@64) (= (type $generated@@162) $generated@@64)) (= (type $generated@@163) $generated@@158)) ($generated@@81 $generated@@163 ($generated@@157 $generated@@161 $generated@@162))) ($generated@@156 $generated@@163))
 :pattern ( ($generated@@156 $generated@@163) ($generated@@81 $generated@@163 ($generated@@157 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@79)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@79)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@158) (= (type $generated@@170) $generated@@158)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@76 $generated@@79 $generated@@2)) (= (type $generated@@175) $generated@@64)) ($generated@@81 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@81 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@77 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@67 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@77) (= (type $generated@@226) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@227) ($generated@@66 $generated@@4))) (= (type $generated@@229) $generated@@77)) (= (type $generated@@230) ($generated@@66 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@77 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@67 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@77) (= (type $generated@@238) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@239) ($generated@@66 $generated@@4))) (= (type $generated@@241) $generated@@77)) (= (type $generated@@242) ($generated@@66 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@158)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@79)) (= (type $generated@@251) $generated@@79)) (= ($generated@@81 ($generated@@244 $generated@@250 $generated@@251) ($generated@@157 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@81 ($generated@@244 $generated@@250 $generated@@251) ($generated@@157 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@158) (= (type $generated@@253) $generated@@158)) (= ($generated@@164 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@164 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@81 $generated@@254 ($generated@@82 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@79) ($generated@@0 ($generated@@89 $generated@@254 $generated@@256))) ($generated@@245 $generated@@256 $generated@@255))
 :pattern ( ($generated@@89 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@81 $generated@@254 ($generated@@82 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@81 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@79) ($generated@@0 ($generated@@89 $generated@@259 $generated@@261))) ($generated@@245 $generated@@261 $generated@@260))
 :pattern ( ($generated@@89 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@81 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@262 $generated@@263) $generated@@263)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@74 $generated@@264) $generated@@264)
 :pattern ( ($generated@@74 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@64) (= (type $generated@@267) $generated@@64)) (= (type $generated@@268) $generated@@79)) (= (type $generated@@269) $generated@@79)) (= (type $generated@@270) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@75 $generated@@270)) (= ($generated@@150 ($generated@@244 $generated@@268 $generated@@269) ($generated@@157 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@150 ($generated@@244 $generated@@268 $generated@@269) ($generated@@157 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@158) (= ($generated@@156 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@158) ($generated@@156 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@79) (= (type $generated@@276) $generated@@79)) (= $generated@@274 ($generated@@244 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@156 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@79)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@150 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@265 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@76 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@87 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@76 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@89 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@76 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@89 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@89 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@89 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@89 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@87 (type $generated@@332))))
 (=> (and (= (type $generated@@332) ($generated@@76 $generated@@334 $generated@@4)) (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@4))) (= ($generated@@83 $generated@@332 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (= ($generated@@0 ($generated@@89 $generated@@332 $generated@@335)) ($generated@@0 ($generated@@89 $generated@@333 $generated@@335))))
 :pattern ( ($generated@@89 $generated@@332 $generated@@335))
 :pattern ( ($generated@@89 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@83 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@87 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@76 $generated@@337 $generated@@2)) (= ($generated@@172 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@89 $generated@@336 $generated@@338))) (<= ($generated ($generated@@89 $generated@@336 $generated@@338)) ($generated@@290 $generated@@336))))
 :pattern ( ($generated@@89 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@172 $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@300 (type $generated@@339))))
(let (($generated@@341 ($generated@@299 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@298 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@297 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@296 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@300 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@300 (type $generated@@346))))
(let (($generated@@348 ($generated@@299 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@298 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@297 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@89 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@318 (type $generated@@350))))
(let (($generated@@352 ($generated@@317 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@316 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@315 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@89 ($generated@@314 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@314 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@318 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(let (($generated@@359 ($generated@@317 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@316 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@315 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@89 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@76 $generated@@79 $generated@@2)) (= (type $generated@@362) $generated@@64)) (= ($generated@@81 $generated@@361 ($generated@@171 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@79) (< 0 ($generated ($generated@@89 $generated@@361 $generated@@363)))) ($generated@@245 $generated@@363 $generated@@362))
 :pattern ( ($generated@@89 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@81 $generated@@361 ($generated@@171 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@364 ($generated@@82 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@79) ($generated@@0 ($generated@@89 $generated@@364 $generated@@367))) ($generated@@265 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@89 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@150 $generated@@364 ($generated@@82 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@368 ($generated@@257 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@79) ($generated@@0 ($generated@@89 $generated@@368 $generated@@371))) ($generated@@265 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@89 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@150 $generated@@368 ($generated@@257 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@89 ($generated@@291 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@89 ($generated@@291 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@79 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@300 (type $generated@@380))))
(let (($generated@@382 ($generated@@299 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@298 $generated@@79 $generated@@79)) (= (type $generated@@384) $generated@@79)) (= ($generated@@0 ($generated@@89 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@89 ($generated@@296 $generated@@383) ($generated@@165 ($generated@@375 $generated@@158 $generated@@384)))) (= ($generated@@89 ($generated@@376 $generated@@383) ($generated@@165 ($generated@@375 $generated@@158 $generated@@384))) ($generated@@166 ($generated@@375 $generated@@158 $generated@@384))))))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@79 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@318 (type $generated@@388))))
(let (($generated@@390 ($generated@@317 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@316 $generated@@79 $generated@@79)) (= (type $generated@@392) $generated@@79)) (= ($generated@@0 ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@89 ($generated@@314 $generated@@391) ($generated@@165 ($generated@@375 $generated@@158 $generated@@392)))) (= ($generated@@89 ($generated@@386 $generated@@391) ($generated@@165 ($generated@@375 $generated@@158 $generated@@392))) ($generated@@166 ($generated@@375 $generated@@158 $generated@@392))))))
 :pattern ( ($generated@@89 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@299 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@298 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@89 ($generated@@343 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@89 ($generated@@296 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@89 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@393) $generated@@397))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@89 ($generated@@343 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@317 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@316 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@89 ($generated@@354 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@89 ($generated@@314 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@89 ($generated@@314 $generated@@398) $generated@@402))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@89 ($generated@@354 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@298 $generated@@79 $generated@@79)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@406) $generated@@410))) (and ($generated@@265 ($generated@@89 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@265 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@150 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@316 $generated@@79 $generated@@79)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@314 $generated@@414) $generated@@418))) (and ($generated@@265 ($generated@@89 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@265 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@89 ($generated@@314 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@150 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@87 (type $generated@@419))))
 (=> (and (and (= (type $generated@@419) ($generated@@76 $generated@@421 $generated@@4)) (= (type $generated@@420) ($generated@@76 $generated@@421 $generated@@4))) ($generated@@83 $generated@@419 $generated@@420)) (= $generated@@419 $generated@@420)))
 :pattern ( ($generated@@83 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@318 (type $generated@@424))))
(let (($generated@@426 ($generated@@317 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@316 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@315 $generated@@426 $generated@@425)) (= ($generated@@314 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@314 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@354 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@354 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@318 (type $generated@@430))))
(let (($generated@@432 ($generated@@317 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@316 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@315 $generated@@432 $generated@@431)) (= ($generated@@385 $generated@@430) ($generated@@422 $generated@@79))))))
 :pattern ( ($generated@@385 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@300 (type $generated@@433))))
(let (($generated@@435 ($generated@@299 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@298 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@297 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@79) (= (type $generated@@437) $generated@@79)) ($generated@@0 ($generated@@89 ($generated@@374 $generated@@433) ($generated@@285 ($generated@@244 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@374 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@318 (type $generated@@438))))
(let (($generated@@440 ($generated@@317 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@316 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@315 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@79) (= (type $generated@@442) $generated@@79)) ($generated@@0 ($generated@@89 ($generated@@385 $generated@@438) ($generated@@285 ($generated@@244 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@79) ($generated@@245 $generated@@443 $generated@@46)) (and (= ($generated@@285 ($generated@@375 $generated@@2 $generated@@443)) $generated@@443) ($generated@@81 ($generated@@375 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@79) ($generated@@245 $generated@@444 $generated@@47)) (and (= ($generated@@285 ($generated@@375 $generated@@3 $generated@@444)) $generated@@444) ($generated@@81 ($generated@@375 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@79) ($generated@@245 $generated@@445 $generated@@44)) (and (= ($generated@@285 ($generated@@375 $generated@@4 $generated@@445)) $generated@@445) ($generated@@81 ($generated@@375 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@79) ($generated@@245 $generated@@447 $generated@@45)) (and (= ($generated@@285 ($generated@@375 $generated@@446 $generated@@447)) $generated@@447) ($generated@@81 ($generated@@375 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@64) (= ($generated@@245 ($generated@@285 $generated@@448) $generated@@449) ($generated@@81 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@245 ($generated@@285 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@87 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@76 $generated@@451 $generated@@2)) (<= 0 ($generated@@290 $generated@@450))))
 :pattern ( ($generated@@290 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@280 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@279 $generated@@453)) (<= 0 ($generated@@278 $generated@@452))))
 :pattern ( ($generated@@278 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@403 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@403 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@403 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@403 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@148 ($generated@@403 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@411 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@411 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@148 ($generated@@411 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@79) (= (type $generated@@475) $generated@@79)) (= ($generated@@271 ($generated@@244 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@157 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@157 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@157 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@157 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@79) (= (type $generated@@485) $generated@@79)) (= ($generated@@165 ($generated@@244 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@244 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@79) (= (type $generated@@487) $generated@@79)) (= ($generated@@166 ($generated@@244 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@244 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@280 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@279 $generated@@79)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@278 $generated@@494))) ($generated@@265 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@150 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@151 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@151 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@82 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@82 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@148 ($generated@@82 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@82 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@257 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@257 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@148 ($generated@@257 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@171 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@171 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@148 ($generated@@171 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@148 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@375 $generated@@517 ($generated@@285 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@285 $generated@@516))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@520) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@80 $generated@@518 $generated@@520) (and (not (= 0 $generated@@72)) (and (and ($generated@@75 $generated@@519) ($generated@@81 $generated@@520 ($generated@@82 $generated@@518))) (not ($generated@@83 $generated@@520 ($generated@@84 $generated@@79))))))) (and ($generated@@85 $generated@@518 $generated@@520) (= ($generated@@73 $generated@@518 $generated@@520) (let (($generated@@521 (let (($generated@@522 ($generated@@86 $generated@@518 $generated@@520)))
(= $generated@@522 $generated@@522))))
(ite $generated@@521 6 8)))))
 :pattern ( ($generated@@73 $generated@@518 $generated@@520) ($generated@@75 $generated@@519))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@298 $generated@@79 $generated@@79)) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) (= ($generated@@81 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@296 $generated@@523) $generated@@526))) (and ($generated@@245 ($generated@@89 ($generated@@376 $generated@@523) $generated@@526) $generated@@525) ($generated@@245 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@89 ($generated@@376 $generated@@523) $generated@@526))
 :pattern ( ($generated@@89 ($generated@@296 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@81 $generated@@523 ($generated@@403 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@316 $generated@@79 $generated@@79)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@81 $generated@@527 ($generated@@411 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@314 $generated@@527) $generated@@530))) (and ($generated@@245 ($generated@@89 ($generated@@386 $generated@@527) $generated@@530) $generated@@529) ($generated@@245 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@527) $generated@@530))
 :pattern ( ($generated@@89 ($generated@@314 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@81 $generated@@527 ($generated@@411 $generated@@528 $generated@@529)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@80 $generated@@531 $generated@@532) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@532 ($generated@@82 $generated@@531)) (not ($generated@@83 $generated@@532 ($generated@@84 $generated@@79))))))) true)
 :pattern ( ($generated@@73 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@79) (= (type $generated@@536) $generated@@79)) (< ($generated@@533 $generated@@535) ($generated@@534 ($generated@@244 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@244 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@79) (= (type $generated@@538) $generated@@79)) (< ($generated@@533 $generated@@538) ($generated@@534 ($generated@@244 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@244 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) ($generated@@76 $generated@@79 $generated@@4))) ($generated@@85 $generated@@539 $generated@@540)) ($generated@@0 ($generated@@89 $generated@@540 ($generated@@86 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@86 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@79) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) ($generated@@245 $generated@@541 ($generated@@403 $generated@@542 $generated@@543))) (and (= ($generated@@285 ($generated@@375 ($generated@@298 $generated@@79 $generated@@79) $generated@@541)) $generated@@541) ($generated@@81 ($generated@@375 ($generated@@298 $generated@@79 $generated@@79) $generated@@541) ($generated@@403 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@245 $generated@@541 ($generated@@403 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@79) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) ($generated@@245 $generated@@544 ($generated@@411 $generated@@545 $generated@@546))) (and (= ($generated@@285 ($generated@@375 ($generated@@316 $generated@@79 $generated@@79) $generated@@544)) $generated@@544) ($generated@@81 ($generated@@375 ($generated@@316 $generated@@79 $generated@@79) $generated@@544) ($generated@@411 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@245 $generated@@544 ($generated@@411 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@79)) ($generated@@245 $generated@@549 ($generated@@157 $generated@@547 $generated@@548))) (and (= ($generated@@285 ($generated@@375 $generated@@158 $generated@@549)) $generated@@549) ($generated@@81 ($generated@@375 $generated@@158 $generated@@549) ($generated@@157 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@245 $generated@@549 ($generated@@157 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@89 ($generated@@84 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@89 ($generated@@84 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@89 ($generated@@422 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@89 ($generated@@422 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@69)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) $generated@@64)) (and (= ($generated@@148 ($generated@@157 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@157 $generated@@556 $generated@@557)) $generated@@63)))
 :pattern ( ($generated@@157 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@158) (= ($generated@@533 ($generated@@285 $generated@@558)) ($generated@@534 $generated@@558)))
 :pattern ( ($generated@@533 ($generated@@285 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@79) ($generated@@245 $generated@@559 ($generated@@151 0))) (and (= ($generated@@285 ($generated@@375 $generated@@2 $generated@@559)) $generated@@559) ($generated@@81 ($generated@@375 ($generated@@76 $generated@@79 $generated@@4) $generated@@559) ($generated@@151 0))))
 :pattern ( ($generated@@245 $generated@@559 ($generated@@151 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@79) (= (type $generated@@561) $generated@@64)) ($generated@@245 $generated@@560 ($generated@@82 $generated@@561))) (and (= ($generated@@285 ($generated@@375 ($generated@@76 $generated@@79 $generated@@4) $generated@@560)) $generated@@560) ($generated@@81 ($generated@@375 ($generated@@76 $generated@@79 $generated@@4) $generated@@560) ($generated@@82 $generated@@561))))
 :pattern ( ($generated@@245 $generated@@560 ($generated@@82 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@79) (= (type $generated@@563) $generated@@64)) ($generated@@245 $generated@@562 ($generated@@257 $generated@@563))) (and (= ($generated@@285 ($generated@@375 ($generated@@76 $generated@@79 $generated@@4) $generated@@562)) $generated@@562) ($generated@@81 ($generated@@375 ($generated@@76 $generated@@79 $generated@@4) $generated@@562) ($generated@@257 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@562 ($generated@@257 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@79) (= (type $generated@@565) $generated@@64)) ($generated@@245 $generated@@564 ($generated@@171 $generated@@565))) (and (= ($generated@@285 ($generated@@375 ($generated@@76 $generated@@79 $generated@@2) $generated@@564)) $generated@@564) ($generated@@81 ($generated@@375 ($generated@@76 $generated@@79 $generated@@2) $generated@@564) ($generated@@171 $generated@@565))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@171 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@79) (= (type $generated@@567) $generated@@64)) ($generated@@245 $generated@@566 ($generated@@488 $generated@@567))) (and (= ($generated@@285 ($generated@@375 ($generated@@279 $generated@@79) $generated@@566)) $generated@@566) ($generated@@81 ($generated@@375 ($generated@@279 $generated@@79) $generated@@566) ($generated@@488 $generated@@567))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@488 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@76 $generated@@79 $generated@@2)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@568 ($generated@@171 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@79) (< 0 ($generated ($generated@@89 $generated@@568 $generated@@571)))) ($generated@@265 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@89 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@150 $generated@@568 ($generated@@171 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@158) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@75 $generated@@574) (and ($generated@@156 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@64) ($generated@@150 $generated@@572 ($generated@@157 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@150 $generated@@572 ($generated@@157 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@265 ($generated@@165 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@265 ($generated@@165 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@158) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@75 $generated@@578) (and ($generated@@156 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@64) ($generated@@150 $generated@@576 ($generated@@157 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@150 $generated@@576 ($generated@@157 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@265 ($generated@@166 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@265 ($generated@@166 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@79) (= (type $generated@@581) $generated@@79)) (= ($generated@@244 ($generated@@74 $generated@@580) ($generated@@74 $generated@@581)) ($generated@@74 ($generated@@244 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@244 ($generated@@74 $generated@@580) ($generated@@74 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@262 $generated@@582))) ($generated@@74 ($generated@@285 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@262 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@285 ($generated@@74 $generated@@583)) ($generated@@74 ($generated@@285 $generated@@583)))
 :pattern ( ($generated@@285 ($generated@@74 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@280 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@279 $generated@@585)) (= ($generated@@278 $generated@@584) 0)) (= $generated@@584 ($generated@@277 $generated@@585))))
 :pattern ( ($generated@@278 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@290 ($generated@@90 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@290 $generated@@586) ($generated ($generated@@89 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@290 ($generated@@90 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@2)) ($generated@@150 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@150 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@3)) ($generated@@150 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@150 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@4)) ($generated@@150 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@150 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@597) $generated@@446)) ($generated@@150 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@150 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@79)) ($generated@@150 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@150 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@279 $generated@@79)) (= (type $generated@@601) $generated@@64)) (= ($generated@@81 $generated@@600 ($generated@@488 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@278 $generated@@600))) ($generated@@245 ($generated@@489 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@489 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@81 $generated@@600 ($generated@@488 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@279 $generated@@79)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@278 $generated@@604))) (< ($generated@@534 ($generated@@375 $generated@@158 ($generated@@489 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@534 ($generated@@375 $generated@@158 ($generated@@489 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@298 $generated@@79 $generated@@79)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@81 $generated@@606 ($generated@@403 $generated@@607 $generated@@608))) (and (and ($generated@@81 ($generated@@296 $generated@@606) ($generated@@82 $generated@@607)) ($generated@@81 ($generated@@343 $generated@@606) ($generated@@82 $generated@@608))) ($generated@@81 ($generated@@374 $generated@@606) ($generated@@82 ($generated@@157 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@81 $generated@@606 ($generated@@403 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@316 $generated@@79 $generated@@79)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@81 $generated@@609 ($generated@@411 $generated@@610 $generated@@611))) (and (and ($generated@@81 ($generated@@314 $generated@@609) ($generated@@257 $generated@@610)) ($generated@@81 ($generated@@354 $generated@@609) ($generated@@257 $generated@@611))) ($generated@@81 ($generated@@385 $generated@@609) ($generated@@257 ($generated@@157 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@81 $generated@@609 ($generated@@411 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@81 $generated@@612 $generated@@46))
 :pattern ( ($generated@@81 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@81 $generated@@613 $generated@@47))
 :pattern ( ($generated@@81 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@81 $generated@@614 $generated@@44))
 :pattern ( ($generated@@81 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@446) ($generated@@81 $generated@@615 $generated@@45))
 :pattern ( ($generated@@81 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@79) ($generated@@81 $generated@@616 $generated@@48))
 :pattern ( ($generated@@81 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () Bool)
(declare-fun $generated@@623 () Bool)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@617) $generated@@64) (= (type $generated@@618) ($generated@@76 $generated@@79 $generated@@4))) (= (type $generated@@619) $generated@@79)) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@621) $generated@@79)) (= (type $generated@@624) ($generated@@178 $generated@@77 $generated@@4))) (= (type $generated@@625) $generated@@77)) (= (type $generated@@626) ($generated@@178 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@628 true))
(let (($generated@@629 true))
(let (($generated@@630  (and (=> (= (ControlFlow 0 4) (- 0 6)) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@79) (and ($generated@@245 $generated@@631 $generated@@617) ($generated@@0 ($generated@@89 $generated@@618 $generated@@631))))
 :no-pattern (type $generated@@631)
 :no-pattern ($generated $generated@@631)
 :no-pattern ($generated@@0 $generated@@631)
))) (=> (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@79) (and ($generated@@245 $generated@@632 $generated@@617) ($generated@@0 ($generated@@89 $generated@@618 $generated@@632))))
 :no-pattern (type $generated@@632)
 :no-pattern ($generated $generated@@632)
 :no-pattern ($generated@@0 $generated@@632)
)) (=> (and (and (and ($generated@@245 $generated@@619 $generated@@617) ($generated@@265 $generated@@619 $generated@@617 $generated@@620)) ($generated@@0 ($generated@@89 $generated@@618 $generated@@619))) (and (and ($generated@@245 $generated@@621 $generated@@617) ($generated@@265 $generated@@621 $generated@@617 $generated@@620)) ($generated@@0 ($generated@@89 $generated@@618 $generated@@621)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= (= $generated@@619 $generated@@619) (= $generated@@621 $generated@@621))) (=> (= (= $generated@@619 $generated@@619) (= $generated@@621 $generated@@621)) (=> (and (and ($generated@@85 $generated@@617 $generated@@618) (= $generated@@622 (= $generated@@619 $generated@@619))) (and ($generated@@81 ($generated@@11 $generated@@622) $generated@@44) (= $generated@@623 $generated@@622))) (and (=> (= (ControlFlow 0 4) 2) $generated@@629) (=> (= (ControlFlow 0 4) 3) $generated@@628))))))))))
(let (($generated@@633  (=> (and (not (and ($generated@@245 $generated@@619 $generated@@617) ($generated@@265 $generated@@619 $generated@@617 $generated@@620))) (= (ControlFlow 0 8) 4)) $generated@@630)))
(let (($generated@@634  (=> (and (and ($generated@@245 $generated@@619 $generated@@617) ($generated@@265 $generated@@619 $generated@@617 $generated@@620)) (= (ControlFlow 0 7) 4)) $generated@@630)))
(let (($generated@@635  (=> (= $generated@@624 ($generated@@232 $generated@@625 $generated@@620 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@634) (=> (= (ControlFlow 0 9) 8) $generated@@633)))))
(let (($generated@@636 true))
(let (($generated@@637  (=> (and (= $generated@@626 ($generated@@177 $generated@@625 $generated@@620 $generated@@60 false)) (not ($generated@@83 $generated@@618 ($generated@@84 $generated@@79)))) (and (=> (= (ControlFlow 0 10) 1) $generated@@636) (=> (= (ControlFlow 0 10) 9) $generated@@635)))))
(let (($generated@@638  (=> (and (and (and ($generated@@75 $generated@@620) ($generated@@627 $generated@@620)) ($generated@@81 $generated@@618 ($generated@@82 $generated@@617))) (and (= 0 $generated@@72) (= (ControlFlow 0 11) 10))) $generated@@637)))
$generated@@638))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (T@U T@U) Int)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@T) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U) Bool)
(declare-fun $generated@@151 (Int) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (Int) Int)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@T T@T) T@U)
(declare-fun $generated@@286 (T@T T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U T@U) Bool)
(declare-fun $generated@@352 (T@U T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@499 (T@U Int) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@76 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@76 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@76 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@76 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@76 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@67 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@78)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@67 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 14)) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@74 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@74 $generated@@137))
))) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@82 $generated@@139)) $generated@@64)
 :pattern ( ($generated@@82 $generated@@139))
))) (forall (($generated@@140 T@T) ) (! (= (type ($generated@@84 $generated@@140)) ($generated@@76 $generated@@140 $generated@@4))
 :pattern ( ($generated@@84 $generated@@140))
))) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@86 $generated@@141 $generated@@142)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@141 $generated@@142))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@145) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@80 $generated@@143 ($generated@@74 $generated@@145)) (and (not (= 0 $generated@@72)) (and (and ($generated@@75 $generated@@144) ($generated@@81 $generated@@145 ($generated@@82 $generated@@143))) (not ($generated@@83 $generated@@145 ($generated@@84 $generated@@79))))))) (and ($generated@@85 $generated@@143 ($generated@@74 $generated@@145)) (= ($generated@@73 $generated@@143 ($generated@@74 $generated@@145)) (let (($generated@@146 (let (($generated@@147 ($generated@@86 $generated@@143 ($generated@@74 $generated@@145))))
(= $generated@@147 $generated@@147))))
(ite $generated@@146 6 8)))))
 :weight 3
 :pattern ( ($generated@@73 $generated@@143 ($generated@@74 $generated@@145)) ($generated@@75 $generated@@144))
))))
(assert (forall (($generated@@149 T@U) ) (! (= (type ($generated@@148 $generated@@149)) $generated@@65)
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (= ($generated@@148 $generated@@44) $generated@@49))
(assert (= ($generated@@148 $generated@@45) $generated@@50))
(assert (= ($generated@@148 $generated@@46) $generated@@51))
(assert (= ($generated@@148 $generated@@47) $generated@@52))
(assert (= ($generated@@148 $generated@@48) $generated@@53))
(assert (forall (($generated@@152 Int) ) (! (= (type ($generated@@151 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@2) (= (type $generated@@154) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@150 $generated@@153 ($generated@@151 0) $generated@@154))
 :pattern ( ($generated@@150 $generated@@153 ($generated@@151 0) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@81 $generated@@155 ($generated@@151 0)))
 :pattern ( ($generated@@81 $generated@@155 ($generated@@151 0)))
)))
(assert  (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@159 $generated@@160)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@64) (= (type $generated@@162) $generated@@64)) (= (type $generated@@163) $generated@@158)) ($generated@@81 $generated@@163 ($generated@@157 $generated@@161 $generated@@162))) ($generated@@156 $generated@@163))
 :pattern ( ($generated@@156 $generated@@163) ($generated@@81 $generated@@163 ($generated@@157 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@79)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@79)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@158) (= (type $generated@@170) $generated@@158)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@64)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@76 $generated@@79 $generated@@2)) (= (type $generated@@175) $generated@@64)) ($generated@@81 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@81 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@77 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@67 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@77) (= (type $generated@@226) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@227) ($generated@@66 $generated@@4))) (= (type $generated@@229) $generated@@77)) (= (type $generated@@230) ($generated@@66 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@158)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@64) (= (type $generated@@237) $generated@@64)) (= (type $generated@@238) $generated@@79)) (= (type $generated@@239) $generated@@79)) (= ($generated@@81 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237))  (and ($generated@@233 $generated@@238 $generated@@236) ($generated@@233 $generated@@239 $generated@@237))))
 :pattern ( ($generated@@81 ($generated@@232 $generated@@238 $generated@@239) ($generated@@157 $generated@@236 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@158) (= (type $generated@@241) $generated@@158)) (= ($generated@@164 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@164 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@243) $generated@@64)) (= ($generated@@81 $generated@@242 ($generated@@82 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@79) ($generated@@0 ($generated@@89 $generated@@242 $generated@@244))) ($generated@@233 $generated@@244 $generated@@243))
 :pattern ( ($generated@@89 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@81 $generated@@242 ($generated@@82 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@248) $generated@@64)) (= ($generated@@81 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@79) ($generated@@0 ($generated@@89 $generated@@247 $generated@@249))) ($generated@@233 $generated@@249 $generated@@248))
 :pattern ( ($generated@@89 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@81 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 Int) ) (! (= ($generated@@250 $generated@@251) $generated@@251)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@74 $generated@@252) $generated@@252)
 :pattern ( ($generated@@74 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@79)) (= (type $generated@@257) $generated@@79)) (= (type $generated@@258) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@75 $generated@@258)) (= ($generated@@150 ($generated@@232 $generated@@256 $generated@@257) ($generated@@157 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@150 ($generated@@232 $generated@@256 $generated@@257) ($generated@@157 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@158) (= ($generated@@156 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@156 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@158) ($generated@@156 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@79) (= (type $generated@@264) $generated@@79)) (= $generated@@262 ($generated@@232 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@156 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@79)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@150 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@279 $generated@@280)) ($generated@@76 $generated@@280 $generated@@2))
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@87 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@76 $generated@@282 $generated@@2)) (and (= (= ($generated@@278 $generated@@281) 0) (= $generated@@281 ($generated@@279 $generated@@282))) (=> (not (= ($generated@@278 $generated@@281) 0)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@282) (< 0 ($generated ($generated@@89 $generated@@281 $generated@@283))))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
))))))
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (and (and (and (and (forall (($generated@@289 T@T) ($generated@@290 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@289 $generated@@290)) 18)) (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@291 $generated@@292)) $generated@@291)
 :pattern ( ($generated@@286 $generated@@291 $generated@@292))
))) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@286 $generated@@293 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@286 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@287 (type $generated@@295))))
(= (type ($generated@@284 $generated@@295)) ($generated@@76 $generated@@296 $generated@@4)))
 :pattern ( ($generated@@284 $generated@@295))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= (type ($generated@@285 $generated@@297 $generated@@298)) ($generated@@286 $generated@@297 $generated@@298))
 :pattern ( ($generated@@285 $generated@@297 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@T) ) (! (let (($generated@@301 (type $generated@@299)))
 (not ($generated@@0 ($generated@@89 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299))))
 :pattern ( (let (($generated@@301 (type $generated@@299)))
($generated@@89 ($generated@@284 ($generated@@285 $generated@@301 $generated@@300)) $generated@@299)))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 19)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@89 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@89 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@87 (type $generated@@320))))
 (=> (and (= (type $generated@@320) ($generated@@76 $generated@@322 $generated@@4)) (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@4))) (= ($generated@@83 $generated@@320 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (= ($generated@@0 ($generated@@89 $generated@@320 $generated@@323)) ($generated@@0 ($generated@@89 $generated@@321 $generated@@323))))
 :pattern ( ($generated@@89 $generated@@320 $generated@@323))
 :pattern ( ($generated@@89 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@83 $generated@@320 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@87 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@172 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@89 $generated@@324 $generated@@326))) (<= ($generated ($generated@@89 $generated@@324 $generated@@326)) ($generated@@278 $generated@@324))))
 :pattern ( ($generated@@89 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@172 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@288 (type $generated@@327))))
(let (($generated@@329 ($generated@@287 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@286 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@285 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@89 ($generated@@284 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@284 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@288 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@288 (type $generated@@334))))
(let (($generated@@336 ($generated@@287 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@286 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@285 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@89 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@306 (type $generated@@338))))
(let (($generated@@340 ($generated@@305 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@304 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@303 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@89 ($generated@@302 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@302 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@306 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@306 (type $generated@@345))))
(let (($generated@@347 ($generated@@305 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@304 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@303 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@89 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@79)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (and (= (type $generated@@355) $generated@@64) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@357) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@350 $generated@@355 $generated@@357) (and (not (= 0 $generated@@72)) (and (and ($generated@@75 $generated@@356) ($generated@@81 $generated@@357 ($generated@@82 $generated@@355))) (not ($generated@@83 $generated@@357 ($generated@@84 $generated@@79))))))) (and ($generated@@351 $generated@@355 $generated@@357) (= ($generated@@349 $generated@@355 $generated@@357) (let (($generated@@358 ($generated@@352 $generated@@355 $generated@@357)))
(= $generated@@358 $generated@@358)))))
 :pattern ( ($generated@@349 $generated@@355 $generated@@357) ($generated@@75 $generated@@356))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@76 $generated@@79 $generated@@2)) (= (type $generated@@360) $generated@@64)) (= ($generated@@81 $generated@@359 ($generated@@171 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@79) (< 0 ($generated ($generated@@89 $generated@@359 $generated@@361)))) ($generated@@233 $generated@@361 $generated@@360))
 :pattern ( ($generated@@89 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@81 $generated@@359 ($generated@@171 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@362 ($generated@@82 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@79) ($generated@@0 ($generated@@89 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@89 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@150 $generated@@362 ($generated@@82 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@79 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@366 ($generated@@245 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@79) ($generated@@0 ($generated@@89 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@89 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@150 $generated@@366 ($generated@@245 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@89 ($generated@@279 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@89 ($generated@@279 $generated@@371) $generated@@370)))
)))
(assert  (and (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@372 $generated@@375)) ($generated@@76 $generated@@79 $generated@@4))
 :pattern ( ($generated@@372 $generated@@375))
)) (forall (($generated@@376 T@T) ($generated@@377 T@U) ) (! (= (type ($generated@@373 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@373 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@288 (type $generated@@378))))
(let (($generated@@380 ($generated@@287 (type $generated@@378))))
(= (type ($generated@@374 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@374 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@286 $generated@@79 $generated@@79)) (= (type $generated@@382) $generated@@79)) (= ($generated@@0 ($generated@@89 ($generated@@372 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@89 ($generated@@284 $generated@@381) ($generated@@165 ($generated@@373 $generated@@158 $generated@@382)))) (= ($generated@@89 ($generated@@374 $generated@@381) ($generated@@165 ($generated@@373 $generated@@158 $generated@@382))) ($generated@@166 ($generated@@373 $generated@@158 $generated@@382))))))
 :pattern ( ($generated@@89 ($generated@@372 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@79 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@306 (type $generated@@386))))
(let (($generated@@388 ($generated@@305 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@76 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@304 $generated@@79 $generated@@79)) (= (type $generated@@390) $generated@@79)) (= ($generated@@0 ($generated@@89 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@89 ($generated@@302 $generated@@389) ($generated@@165 ($generated@@373 $generated@@158 $generated@@390)))) (= ($generated@@89 ($generated@@384 $generated@@389) ($generated@@165 ($generated@@373 $generated@@158 $generated@@390))) ($generated@@166 ($generated@@373 $generated@@158 $generated@@390))))))
 :pattern ( ($generated@@89 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@287 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@286 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@89 ($generated@@331 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@89 ($generated@@284 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@89 ($generated@@374 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@89 ($generated@@284 $generated@@391) $generated@@395))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@89 ($generated@@331 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@305 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@304 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@89 ($generated@@342 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@89 ($generated@@302 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@89 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@89 ($generated@@302 $generated@@396) $generated@@400))
 :pattern ( ($generated@@89 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@89 ($generated@@342 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@286 $generated@@79 $generated@@79)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@284 $generated@@404) $generated@@408))) (and ($generated@@253 ($generated@@89 ($generated@@374 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@253 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@404) $generated@@408))
 :pattern ( ($generated@@89 ($generated@@284 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@150 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@64)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@304 $generated@@79 $generated@@79)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@302 $generated@@412) $generated@@416))) (and ($generated@@253 ($generated@@89 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@253 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@89 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@89 ($generated@@302 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@150 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@87 (type $generated@@417))))
 (=> (and (and (= (type $generated@@417) ($generated@@76 $generated@@419 $generated@@4)) (= (type $generated@@418) ($generated@@76 $generated@@419 $generated@@4))) ($generated@@83 $generated@@417 $generated@@418)) (= $generated@@417 $generated@@418)))
 :pattern ( ($generated@@83 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= (type ($generated@@420 $generated@@421 $generated@@422)) ($generated@@76 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@425)))
 (=> (and (and (= (type $generated@@424) ($generated@@76 $generated@@427 $generated@@4)) (= (type $generated@@426) $generated@@427)) ($generated@@0 ($generated@@89 $generated@@424 $generated@@426))) ($generated@@0 ($generated@@89 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))))
 :pattern ( ($generated@@420 $generated@@424 $generated@@425) ($generated@@89 $generated@@424 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@429)))
 (=> (and (= (type $generated@@428) ($generated@@76 $generated@@431 $generated@@4)) (= (type $generated@@430) $generated@@431)) (= ($generated@@0 ($generated@@89 ($generated@@420 $generated@@428 $generated@@429) $generated@@430))  (or (= $generated@@430 $generated@@429) ($generated@@0 ($generated@@89 $generated@@428 $generated@@430))))))
 :pattern ( ($generated@@89 ($generated@@420 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@76 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@306 (type $generated@@434))))
(let (($generated@@436 ($generated@@305 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@304 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@303 $generated@@436 $generated@@435)) (= ($generated@@302 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@302 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@306 (type $generated@@437))))
(let (($generated@@439 ($generated@@305 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@304 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@303 $generated@@439 $generated@@438)) (= ($generated@@342 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@342 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@306 (type $generated@@440))))
(let (($generated@@442 ($generated@@305 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@304 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@303 $generated@@442 $generated@@441)) (= ($generated@@383 $generated@@440) ($generated@@432 $generated@@79))))))
 :pattern ( ($generated@@383 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@288 (type $generated@@443))))
(let (($generated@@445 ($generated@@287 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@286 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@285 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@79) (= (type $generated@@447) $generated@@79)) ($generated@@0 ($generated@@89 ($generated@@372 $generated@@443) ($generated@@273 ($generated@@232 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@372 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@306 (type $generated@@448))))
(let (($generated@@450 ($generated@@305 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@304 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@303 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@79) (= (type $generated@@452) $generated@@79)) ($generated@@0 ($generated@@89 ($generated@@383 $generated@@448) ($generated@@273 ($generated@@232 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@383 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@79) ($generated@@233 $generated@@453 $generated@@46)) (and (= ($generated@@273 ($generated@@373 $generated@@2 $generated@@453)) $generated@@453) ($generated@@81 ($generated@@373 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@233 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@79) ($generated@@233 $generated@@454 $generated@@47)) (and (= ($generated@@273 ($generated@@373 $generated@@3 $generated@@454)) $generated@@454) ($generated@@81 ($generated@@373 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@233 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@79) ($generated@@233 $generated@@455 $generated@@44)) (and (= ($generated@@273 ($generated@@373 $generated@@4 $generated@@455)) $generated@@455) ($generated@@81 ($generated@@373 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@233 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@79) ($generated@@233 $generated@@457 $generated@@45)) (and (= ($generated@@273 ($generated@@373 $generated@@456 $generated@@457)) $generated@@457) ($generated@@81 ($generated@@373 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@233 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@64) (= ($generated@@233 ($generated@@273 $generated@@458) $generated@@459) ($generated@@81 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@233 ($generated@@273 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@87 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@76 $generated@@461 $generated@@2)) (<= 0 ($generated@@278 $generated@@460))))
 :pattern ( ($generated@@278 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@268 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@267 $generated@@463)) (<= 0 ($generated@@266 $generated@@462))))
 :pattern ( ($generated@@266 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@401 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@401 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@401 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@401 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@148 ($generated@@401 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@409 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@409 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@409 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@409 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@148 ($generated@@409 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@79) (= (type $generated@@485) $generated@@79)) (= ($generated@@259 ($generated@@232 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@232 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@157 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@157 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@157 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@157 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@79) (= (type $generated@@495) $generated@@79)) (= ($generated@@165 ($generated@@232 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@232 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@79) (= (type $generated@@497) $generated@@79)) (= ($generated@@166 ($generated@@232 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@232 $generated@@496 $generated@@497))
)))
(assert  (and (forall (($generated@@500 T@U) ) (! (= (type ($generated@@498 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@500))
)) (forall (($generated@@501 T@U) ($generated@@502 Int) ) (! (let (($generated@@503 ($generated@@268 (type $generated@@501))))
(= (type ($generated@@499 $generated@@501 $generated@@502)) $generated@@503))
 :pattern ( ($generated@@499 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@267 $generated@@79)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@504 ($generated@@498 $generated@@505) $generated@@506) (forall (($generated@@507 Int) ) (!  (=> (and (<= 0 $generated@@507) (< $generated@@507 ($generated@@266 $generated@@504))) ($generated@@253 ($generated@@499 $generated@@504 $generated@@507) $generated@@505 $generated@@506))
 :pattern ( ($generated@@499 $generated@@504 $generated@@507))
))))
 :pattern ( ($generated@@150 $generated@@504 ($generated@@498 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (=> (= (type $generated@@508) ($generated@@76 $generated@@510 $generated@@4)) ($generated@@0 ($generated@@89 ($generated@@420 $generated@@508 $generated@@509) $generated@@509))))
 :pattern ( ($generated@@420 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@512 Int) ) (! (= ($generated@@511 ($generated@@151 $generated@@512)) $generated@@512)
 :pattern ( ($generated@@151 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@82 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@82 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@148 ($generated@@82 $generated@@516)) $generated@@54))
 :pattern ( ($generated@@82 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@245 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@245 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@148 ($generated@@245 $generated@@520)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@521 ($generated@@171 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@171 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@148 ($generated@@171 $generated@@524)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@525 ($generated@@498 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@498 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@148 ($generated@@498 $generated@@528)) $generated@@57))
 :pattern ( ($generated@@498 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
(= ($generated@@373 $generated@@530 ($generated@@273 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@273 $generated@@529))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@533) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@80 $generated@@531 $generated@@533) (and (not (= 0 $generated@@72)) (and (and ($generated@@75 $generated@@532) ($generated@@81 $generated@@533 ($generated@@82 $generated@@531))) (not ($generated@@83 $generated@@533 ($generated@@84 $generated@@79))))))) (and ($generated@@85 $generated@@531 $generated@@533) (= ($generated@@73 $generated@@531 $generated@@533) (let (($generated@@534 (let (($generated@@535 ($generated@@86 $generated@@531 $generated@@533)))
(= $generated@@535 $generated@@535))))
(ite $generated@@534 6 8)))))
 :pattern ( ($generated@@73 $generated@@531 $generated@@533) ($generated@@75 $generated@@532))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@286 $generated@@79 $generated@@79)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) (= ($generated@@81 $generated@@536 ($generated@@401 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@284 $generated@@536) $generated@@539))) (and ($generated@@233 ($generated@@89 ($generated@@374 $generated@@536) $generated@@539) $generated@@538) ($generated@@233 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@89 ($generated@@374 $generated@@536) $generated@@539))
 :pattern ( ($generated@@89 ($generated@@284 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@81 $generated@@536 ($generated@@401 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@304 $generated@@79 $generated@@79)) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) (= ($generated@@81 $generated@@540 ($generated@@409 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@79) ($generated@@0 ($generated@@89 ($generated@@302 $generated@@540) $generated@@543))) (and ($generated@@233 ($generated@@89 ($generated@@384 $generated@@540) $generated@@543) $generated@@542) ($generated@@233 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@89 ($generated@@384 $generated@@540) $generated@@543))
 :pattern ( ($generated@@89 ($generated@@302 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@81 $generated@@540 ($generated@@409 $generated@@541 $generated@@542)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@350 $generated@@544 $generated@@545) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@545 ($generated@@82 $generated@@544)) (not ($generated@@83 $generated@@545 ($generated@@84 $generated@@79))))))) true)
 :pattern ( ($generated@@349 $generated@@544 $generated@@545))
))))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@80 $generated@@546 $generated@@547) (and (not (= 0 $generated@@72)) (and ($generated@@81 $generated@@547 ($generated@@82 $generated@@546)) (not ($generated@@83 $generated@@547 ($generated@@84 $generated@@79))))))) true)
 :pattern ( ($generated@@73 $generated@@546 $generated@@547))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@79) (= (type $generated@@551) $generated@@79)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@232 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@232 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@79) (= (type $generated@@553) $generated@@79)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@232 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@232 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) ($generated@@76 $generated@@79 $generated@@4))) ($generated@@351 $generated@@554 $generated@@555)) ($generated@@0 ($generated@@89 $generated@@555 ($generated@@352 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@352 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@64) (= (type $generated@@557) ($generated@@76 $generated@@79 $generated@@4))) ($generated@@85 $generated@@556 $generated@@557)) ($generated@@0 ($generated@@89 $generated@@557 ($generated@@86 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@86 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@79) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@233 $generated@@558 ($generated@@401 $generated@@559 $generated@@560))) (and (= ($generated@@273 ($generated@@373 ($generated@@286 $generated@@79 $generated@@79) $generated@@558)) $generated@@558) ($generated@@81 ($generated@@373 ($generated@@286 $generated@@79 $generated@@79) $generated@@558) ($generated@@401 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@233 $generated@@558 ($generated@@401 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@79) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@233 $generated@@561 ($generated@@409 $generated@@562 $generated@@563))) (and (= ($generated@@273 ($generated@@373 ($generated@@304 $generated@@79 $generated@@79) $generated@@561)) $generated@@561) ($generated@@81 ($generated@@373 ($generated@@304 $generated@@79 $generated@@79) $generated@@561) ($generated@@409 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@233 $generated@@561 ($generated@@409 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@64) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@79)) ($generated@@233 $generated@@566 ($generated@@157 $generated@@564 $generated@@565))) (and (= ($generated@@273 ($generated@@373 $generated@@158 $generated@@566)) $generated@@566) ($generated@@81 ($generated@@373 $generated@@158 $generated@@566) ($generated@@157 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@233 $generated@@566 ($generated@@157 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@89 ($generated@@84 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@89 ($generated@@84 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (not ($generated@@0 ($generated@@89 ($generated@@432 $generated@@570) $generated@@569))))
 :pattern ( (let (($generated@@570 (type $generated@@569)))
($generated@@89 ($generated@@432 $generated@@570) $generated@@569)))
)))
(assert  (=> (<= 0 $generated@@72) (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@64) (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@573) ($generated@@76 $generated@@79 $generated@@4))) (or ($generated@@350 $generated@@571 ($generated@@74 $generated@@573)) (and (not (= 0 $generated@@72)) (and (and ($generated@@75 $generated@@572) ($generated@@81 $generated@@573 ($generated@@82 $generated@@571))) (not ($generated@@83 $generated@@573 ($generated@@84 $generated@@79))))))) (and ($generated@@351 $generated@@571 ($generated@@74 $generated@@573)) (= ($generated@@349 $generated@@571 ($generated@@74 $generated@@573)) (let (($generated@@574 ($generated@@352 $generated@@571 ($generated@@74 $generated@@573))))
(= $generated@@574 $generated@@574)))))
 :weight 3
 :pattern ( ($generated@@349 $generated@@571 ($generated@@74 $generated@@573)) ($generated@@75 $generated@@572))
))))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@69)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@64) (= (type $generated@@578) $generated@@64)) (and (= ($generated@@148 ($generated@@157 $generated@@577 $generated@@578)) $generated@@62) (= ($generated@@575 ($generated@@157 $generated@@577 $generated@@578)) $generated@@63)))
 :pattern ( ($generated@@157 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@158) (= ($generated@@548 ($generated@@273 $generated@@579)) ($generated@@549 $generated@@579)))
 :pattern ( ($generated@@548 ($generated@@273 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@79) ($generated@@233 $generated@@580 ($generated@@151 0))) (and (= ($generated@@273 ($generated@@373 $generated@@2 $generated@@580)) $generated@@580) ($generated@@81 ($generated@@373 ($generated@@76 $generated@@79 $generated@@4) $generated@@580) ($generated@@151 0))))
 :pattern ( ($generated@@233 $generated@@580 ($generated@@151 0)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@79) (= (type $generated@@582) $generated@@64)) ($generated@@233 $generated@@581 ($generated@@82 $generated@@582))) (and (= ($generated@@273 ($generated@@373 ($generated@@76 $generated@@79 $generated@@4) $generated@@581)) $generated@@581) ($generated@@81 ($generated@@373 ($generated@@76 $generated@@79 $generated@@4) $generated@@581) ($generated@@82 $generated@@582))))
 :pattern ( ($generated@@233 $generated@@581 ($generated@@82 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@79) (= (type $generated@@584) $generated@@64)) ($generated@@233 $generated@@583 ($generated@@245 $generated@@584))) (and (= ($generated@@273 ($generated@@373 ($generated@@76 $generated@@79 $generated@@4) $generated@@583)) $generated@@583) ($generated@@81 ($generated@@373 ($generated@@76 $generated@@79 $generated@@4) $generated@@583) ($generated@@245 $generated@@584))))
 :pattern ( ($generated@@233 $generated@@583 ($generated@@245 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@79) (= (type $generated@@586) $generated@@64)) ($generated@@233 $generated@@585 ($generated@@171 $generated@@586))) (and (= ($generated@@273 ($generated@@373 ($generated@@76 $generated@@79 $generated@@2) $generated@@585)) $generated@@585) ($generated@@81 ($generated@@373 ($generated@@76 $generated@@79 $generated@@2) $generated@@585) ($generated@@171 $generated@@586))))
 :pattern ( ($generated@@233 $generated@@585 ($generated@@171 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@79) (= (type $generated@@588) $generated@@64)) ($generated@@233 $generated@@587 ($generated@@498 $generated@@588))) (and (= ($generated@@273 ($generated@@373 ($generated@@267 $generated@@79) $generated@@587)) $generated@@587) ($generated@@81 ($generated@@373 ($generated@@267 $generated@@79) $generated@@587) ($generated@@498 $generated@@588))))
 :pattern ( ($generated@@233 $generated@@587 ($generated@@498 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@76 $generated@@79 $generated@@2)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@150 $generated@@589 ($generated@@171 $generated@@590) $generated@@591) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@79) (< 0 ($generated ($generated@@89 $generated@@589 $generated@@592)))) ($generated@@253 $generated@@592 $generated@@590 $generated@@591))
 :pattern ( ($generated@@89 $generated@@589 $generated@@592))
))))
 :pattern ( ($generated@@150 $generated@@589 ($generated@@171 $generated@@590) $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@158) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@75 $generated@@595) (and ($generated@@156 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@64) ($generated@@150 $generated@@593 ($generated@@157 $generated@@594 $generated@@596) $generated@@595))
 :pattern ( ($generated@@150 $generated@@593 ($generated@@157 $generated@@594 $generated@@596) $generated@@595))
))))) ($generated@@253 ($generated@@165 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@253 ($generated@@165 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@158) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@75 $generated@@599) (and ($generated@@156 $generated@@597) (exists (($generated@@600 T@U) ) (!  (and (= (type $generated@@600) $generated@@64) ($generated@@150 $generated@@597 ($generated@@157 $generated@@600 $generated@@598) $generated@@599))
 :pattern ( ($generated@@150 $generated@@597 ($generated@@157 $generated@@600 $generated@@598) $generated@@599))
))))) ($generated@@253 ($generated@@166 $generated@@597) $generated@@598 $generated@@599))
 :pattern ( ($generated@@253 ($generated@@166 $generated@@597) $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@79) (= (type $generated@@602) $generated@@79)) (= ($generated@@232 ($generated@@74 $generated@@601) ($generated@@74 $generated@@602)) ($generated@@74 ($generated@@232 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@232 ($generated@@74 $generated@@601) ($generated@@74 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@273 ($generated@@8 ($generated@@250 $generated@@603))) ($generated@@74 ($generated@@273 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@273 ($generated@@8 ($generated@@250 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@273 ($generated@@74 $generated@@604)) ($generated@@74 ($generated@@273 $generated@@604)))
 :pattern ( ($generated@@273 ($generated@@74 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@268 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@267 $generated@@606)) (= ($generated@@266 $generated@@605) 0)) (= $generated@@605 ($generated@@265 $generated@@606))))
 :pattern ( ($generated@@266 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@76 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@278 ($generated@@90 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@278 $generated@@607) ($generated ($generated@@89 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@278 ($generated@@90 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@612) $generated@@2)) ($generated@@150 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@150 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@614) $generated@@3)) ($generated@@150 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@150 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@616) $generated@@4)) ($generated@@150 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@150 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) $generated@@456)) ($generated@@150 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@150 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@79)) ($generated@@150 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@150 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@267 $generated@@79)) (= (type $generated@@622) $generated@@64)) (= ($generated@@81 $generated@@621 ($generated@@498 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@266 $generated@@621))) ($generated@@233 ($generated@@499 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@499 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@498 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@267 $generated@@79)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@266 $generated@@625))) (< ($generated@@549 ($generated@@373 $generated@@158 ($generated@@499 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@549 ($generated@@373 $generated@@158 ($generated@@499 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@286 $generated@@79 $generated@@79)) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) $generated@@64)) ($generated@@81 $generated@@627 ($generated@@401 $generated@@628 $generated@@629))) (and (and ($generated@@81 ($generated@@284 $generated@@627) ($generated@@82 $generated@@628)) ($generated@@81 ($generated@@331 $generated@@627) ($generated@@82 $generated@@629))) ($generated@@81 ($generated@@372 $generated@@627) ($generated@@82 ($generated@@157 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@81 $generated@@627 ($generated@@401 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@304 $generated@@79 $generated@@79)) (= (type $generated@@631) $generated@@64)) (= (type $generated@@632) $generated@@64)) ($generated@@81 $generated@@630 ($generated@@409 $generated@@631 $generated@@632))) (and (and ($generated@@81 ($generated@@302 $generated@@630) ($generated@@245 $generated@@631)) ($generated@@81 ($generated@@342 $generated@@630) ($generated@@245 $generated@@632))) ($generated@@81 ($generated@@383 $generated@@630) ($generated@@245 ($generated@@157 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@81 $generated@@630 ($generated@@409 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@81 $generated@@633 $generated@@46))
 :pattern ( ($generated@@81 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@81 $generated@@634 $generated@@47))
 :pattern ( ($generated@@81 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@81 $generated@@635 $generated@@44))
 :pattern ( ($generated@@81 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@456) ($generated@@81 $generated@@636 $generated@@45))
 :pattern ( ($generated@@81 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@79) ($generated@@81 $generated@@637 $generated@@48))
 :pattern ( ($generated@@81 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Bool)
(declare-fun $generated@@643 (T@U) Bool)
(declare-fun $generated@@644 () T@U)
(assert  (and (and (and (and (= (type $generated@@638) ($generated@@178 $generated@@77 $generated@@4)) (= (type $generated@@639) $generated@@77)) (= (type $generated@@640) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@641) ($generated@@76 $generated@@79 $generated@@4))) (= (type $generated@@644) ($generated@@76 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@645  (=> (= $generated@@638 ($generated@@177 $generated@@639 $generated@@640 $generated@@60 false)) (=> (and (= $generated@@641 ($generated@@74 ($generated@@420 ($generated@@420 ($generated@@84 $generated@@79) ($generated@@273 ($generated@@8 ($generated@@250 12)))) ($generated@@273 ($generated@@8 ($generated@@250 20)))))) ($generated@@150 $generated@@641 ($generated@@82 $generated@@46) $generated@@640)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@83 $generated@@641 ($generated@@84 $generated@@79)))) (=> (and (not ($generated@@83 $generated@@641 ($generated@@84 $generated@@79))) ($generated@@350 $generated@@46 $generated@@641)) (=> (and (and ($generated@@350 $generated@@46 $generated@@641) (= $generated@@642 ($generated@@349 $generated@@46 $generated@@641))) (and ($generated@@150 $generated@@641 ($generated@@82 $generated@@46) $generated@@640) (= (ControlFlow 0 2) (- 0 1)))) (not ($generated@@83 $generated@@641 ($generated@@84 $generated@@79))))))))))
(let (($generated@@646  (=> (and ($generated@@75 $generated@@640) ($generated@@643 $generated@@640)) (=> (and (and (and ($generated@@81 $generated@@644 ($generated@@82 $generated@@46)) ($generated@@150 $generated@@644 ($generated@@82 $generated@@46) $generated@@640)) true) (and (= 1 $generated@@72) (= (ControlFlow 0 4) 2))) $generated@@645))))
$generated@@646)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
