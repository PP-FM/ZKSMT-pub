(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@309 (T@T T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> (= (type $generated@@135) $generated@@2) ($generated@@134 $generated@@135 ($generated@@77 0)))
 :pattern ( ($generated@@134 $generated@@135 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= (type ($generated@@137 $generated@@139 $generated@@140)) $generated@@66)
 :pattern ( ($generated@@137 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (and (= (type $generated@@141) $generated@@66) (= (type $generated@@142) $generated@@66)) (= (type $generated@@143) $generated@@138)) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142))) ($generated@@136 $generated@@143))
 :pattern ( ($generated@@136 $generated@@143) ($generated@@134 $generated@@143 ($generated@@137 $generated@@141 $generated@@142)))
)))
(assert  (and (and (= ($generated@@1 $generated@@147) 15) (forall (($generated@@148 T@U) ) (! (= (type ($generated@@145 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@145 $generated@@148))
))) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@147)
 :pattern ( ($generated@@146 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@138) (= (type $generated@@151) $generated@@138)) true) (= ($generated@@144 $generated@@150 $generated@@151)  (and (= ($generated@@145 $generated@@150) ($generated@@145 $generated@@151)) (= ($generated@@146 $generated@@150) ($generated@@146 $generated@@151)))))
 :pattern ( ($generated@@144 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@66)
 :pattern ( ($generated@@152 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@156) $generated@@66)) ($generated@@134 $generated@@155 ($generated@@152 $generated@@156))) ($generated@@153 $generated@@155))
 :pattern ( ($generated@@134 $generated@@155 ($generated@@152 $generated@@156)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@1 ($generated@@159 $generated@@163 $generated@@164)) 16)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@160 ($generated@@159 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@161 ($generated@@159 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@159 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@161 (type $generated@@169))))
(= (type ($generated@@157 $generated@@169 $generated@@170 $generated@@171)) $generated@@172))
 :pattern ( ($generated@@157 $generated@@169 $generated@@170 $generated@@171))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 (type $generated@@176)))
(let (($generated@@178 (type $generated@@174)))
(= (type ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176)) ($generated@@159 $generated@@178 $generated@@177))))
 :pattern ( ($generated@@162 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@161 (type $generated@@179))))
 (=> (= (type $generated@@182) $generated@@183) (= ($generated@@157 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@180 $generated@@181) $generated@@182)))
 :weight 0
))) (and (and (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@157 ($generated@@162 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@157 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@157 ($generated@@162 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@157 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or true (= ($generated@@157 ($generated@@162 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@157 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ) (! (= (type ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@159 $generated@@79 $generated@@4))
 :pattern ( ($generated@@158 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@69 (type $generated@@211))))
 (=> (and (and (and (and (= (type $generated@@206) $generated@@79) (= (type $generated@@207) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@208) ($generated@@68 $generated@@4))) (= (type $generated@@210) $generated@@79)) (= (type $generated@@211) ($generated@@68 $generated@@212))) (= ($generated@@0 ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))  (=> (and (not (= $generated@@210 $generated@@206)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@207 $generated@@210) $generated@@208))) $generated@@209))))
 :pattern ( ($generated@@157 ($generated@@158 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@215 $generated@@216)) $generated@@138)
 :pattern ( ($generated@@213 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@66) (= (type $generated@@218) $generated@@66)) (= (type $generated@@219) $generated@@147)) (= (type $generated@@220) $generated@@147)) (= ($generated@@134 ($generated@@213 $generated@@219 $generated@@220) ($generated@@137 $generated@@217 $generated@@218))  (and ($generated@@214 $generated@@219 $generated@@217) ($generated@@214 $generated@@220 $generated@@218))))
 :pattern ( ($generated@@134 ($generated@@213 $generated@@219 $generated@@220) ($generated@@137 $generated@@217 $generated@@218)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@138) (= (type $generated@@222) $generated@@138)) (= ($generated@@144 $generated@@221 $generated@@222) (= $generated@@221 $generated@@222)))
 :pattern ( ($generated@@144 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! (= (type ($generated@@223 $generated@@224)) $generated@@66)
 :pattern ( ($generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@226) $generated@@66)) (= ($generated@@134 $generated@@225 ($generated@@223 $generated@@226)) (forall (($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@147) ($generated@@0 ($generated@@83 $generated@@225 $generated@@227))) ($generated@@214 $generated@@227 $generated@@226))
 :pattern ( ($generated@@83 $generated@@225 $generated@@227))
))))
 :pattern ( ($generated@@134 $generated@@225 ($generated@@223 $generated@@226)))
)))
(assert (forall (($generated@@229 T@U) ) (! (= (type ($generated@@228 $generated@@229)) $generated@@66)
 :pattern ( ($generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@231) $generated@@66)) (= ($generated@@134 $generated@@230 ($generated@@228 $generated@@231)) (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@147) ($generated@@0 ($generated@@83 $generated@@230 $generated@@232))) ($generated@@214 $generated@@232 $generated@@231))
 :pattern ( ($generated@@83 $generated@@230 $generated@@232))
))))
 :pattern ( ($generated@@134 $generated@@230 ($generated@@228 $generated@@231)))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@66) (= (type $generated@@240) $generated@@66)) (= (type $generated@@241) $generated@@147)) (= (type $generated@@242) $generated@@147)) (= (type $generated@@243) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@237 $generated@@243)) (= ($generated@@76 ($generated@@213 $generated@@241 $generated@@242) ($generated@@137 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@76 ($generated@@213 $generated@@241 $generated@@242) ($generated@@137 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@70)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@138) (= ($generated@@136 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@136 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@138) ($generated@@136 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@147) (= (type $generated@@249) $generated@@147)) (= $generated@@247 ($generated@@213 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@136 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@147)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@76 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@78 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@81 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@78 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@83 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@78 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@83 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@83 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@81 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@78 $generated@@306 $generated@@2)) (= ($generated@@153 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@83 $generated@@305 $generated@@307))) (<= ($generated ($generated@@83 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@83 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@153 $generated@@305))
)))
(assert  (and (= (type $generated@@308) $generated@@66) (forall (($generated@@310 T@T) ($generated@@311 T@U) ) (! (= (type ($generated@@309 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@309 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@147) ($generated@@214 $generated@@312 $generated@@308)) (and (= ($generated@@258 ($generated@@309 $generated@@138 $generated@@312)) $generated@@312) ($generated@@134 ($generated@@309 $generated@@138 $generated@@312) $generated@@308)))
 :pattern ( ($generated@@214 $generated@@312 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(let (($generated@@315 ($generated@@272 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@271 $generated@@315 $generated@@314)) (or (= $generated@@313 ($generated@@270 $generated@@315 $generated@@314)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) ($generated@@0 ($generated@@83 ($generated@@269 $generated@@313) $generated@@316)))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@269 $generated@@313))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@273 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@273 (type $generated@@320))))
(let (($generated@@322 ($generated@@272 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@271 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@270 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@321) ($generated@@0 ($generated@@83 ($generated@@317 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(let (($generated@@326 ($generated@@290 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@289 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@288 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@287 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@291 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@78 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(let (($generated@@333 ($generated@@290 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@289 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@288 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@336) $generated@@66)) (= ($generated@@134 $generated@@335 ($generated@@152 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@335 $generated@@337)))) ($generated@@214 $generated@@337 $generated@@336))
 :pattern ( ($generated@@83 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@134 $generated@@335 ($generated@@152 $generated@@336)))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (and (= (type $generated@@338) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@339) $generated@@66)) (= (type $generated@@340) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@338 ($generated@@223 $generated@@339) $generated@@340) (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@147) ($generated@@0 ($generated@@83 $generated@@338 $generated@@341))) ($generated@@238 $generated@@341 $generated@@339 $generated@@340))
 :pattern ( ($generated@@83 $generated@@338 $generated@@341))
))))
 :pattern ( ($generated@@76 $generated@@338 ($generated@@223 $generated@@339) $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (and (= (type $generated@@342) ($generated@@78 $generated@@147 $generated@@4)) (= (type $generated@@343) $generated@@66)) (= (type $generated@@344) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@342 ($generated@@228 $generated@@343) $generated@@344) (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@147) ($generated@@0 ($generated@@83 $generated@@342 $generated@@345))) ($generated@@238 $generated@@345 $generated@@343 $generated@@344))
 :pattern ( ($generated@@83 $generated@@342 $generated@@345))
))))
 :pattern ( ($generated@@76 $generated@@342 ($generated@@228 $generated@@343) $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 (type $generated@@346)))
(= ($generated ($generated@@83 ($generated@@264 $generated@@347) $generated@@346)) 0))
 :pattern ( (let (($generated@@347 (type $generated@@346)))
($generated@@83 ($generated@@264 $generated@@347) $generated@@346)))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@273 (type $generated@@351))))
(let (($generated@@353 ($generated@@272 (type $generated@@351))))
(= (type ($generated@@349 $generated@@351)) ($generated@@78 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@355) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@83 ($generated@@269 $generated@@354) ($generated@@145 ($generated@@309 $generated@@138 $generated@@355)))) (= ($generated@@83 ($generated@@349 $generated@@354) ($generated@@145 ($generated@@309 $generated@@138 $generated@@355))) ($generated@@146 ($generated@@309 $generated@@138 $generated@@355))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@78 $generated@@147 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@291 (type $generated@@359))))
(let (($generated@@361 ($generated@@290 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@78 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@363) $generated@@147)) (= ($generated@@0 ($generated@@83 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@362) ($generated@@145 ($generated@@309 $generated@@138 $generated@@363)))) (= ($generated@@83 ($generated@@357 $generated@@362) ($generated@@145 ($generated@@309 $generated@@138 $generated@@363))) ($generated@@146 ($generated@@309 $generated@@138 $generated@@363))))))
 :pattern ( ($generated@@83 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@272 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@271 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@83 ($generated@@317 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@83 ($generated@@269 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@83 ($generated@@349 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@83 ($generated@@269 $generated@@364) $generated@@368))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@83 ($generated@@317 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@290 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@289 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@83 ($generated@@328 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@83 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@369) $generated@@373))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@83 ($generated@@328 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@66)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@378) $generated@@66)) (= (type $generated@@379) $generated@@66)) (= (type $generated@@380) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@269 $generated@@377) $generated@@381))) (and ($generated@@238 ($generated@@83 ($generated@@349 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@238 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@377) $generated@@381))
 :pattern ( ($generated@@83 ($generated@@269 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@76 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@66)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@386) $generated@@66)) (= (type $generated@@387) $generated@@66)) (= (type $generated@@388) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@385) $generated@@389))) (and ($generated@@238 ($generated@@83 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@238 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@76 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@78 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@291 (type $generated@@392))))
(let (($generated@@394 ($generated@@290 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@289 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@288 $generated@@394 $generated@@393)) (= ($generated@@287 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@287 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@291 (type $generated@@395))))
(let (($generated@@397 ($generated@@290 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@289 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@288 $generated@@397 $generated@@396)) (= ($generated@@328 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@328 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@291 (type $generated@@398))))
(let (($generated@@400 ($generated@@290 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@289 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@288 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@147))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@273 (type $generated@@401))))
(let (($generated@@403 ($generated@@272 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@271 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@270 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@147) (= (type $generated@@405) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@401) ($generated@@258 ($generated@@213 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@348 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@291 (type $generated@@406))))
(let (($generated@@408 ($generated@@290 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@289 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@288 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@147) (= (type $generated@@410) $generated@@147)) ($generated@@0 ($generated@@83 ($generated@@356 $generated@@406) ($generated@@258 ($generated@@213 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@147) ($generated@@214 $generated@@411 $generated@@46)) (and (= ($generated@@258 ($generated@@309 $generated@@2 $generated@@411)) $generated@@411) ($generated@@134 ($generated@@309 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@147) ($generated@@214 $generated@@412 $generated@@47)) (and (= ($generated@@258 ($generated@@309 $generated@@3 $generated@@412)) $generated@@412) ($generated@@134 ($generated@@309 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@147) ($generated@@214 $generated@@413 $generated@@44)) (and (= ($generated@@258 ($generated@@309 $generated@@4 $generated@@413)) $generated@@413) ($generated@@134 ($generated@@309 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@147) ($generated@@214 $generated@@415 $generated@@45)) (and (= ($generated@@258 ($generated@@309 $generated@@414 $generated@@415)) $generated@@415) ($generated@@134 ($generated@@309 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@66) (= ($generated@@214 ($generated@@258 $generated@@416) $generated@@417) ($generated@@134 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@214 ($generated@@258 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@81 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@78 $generated@@419 $generated@@2)) (<= 0 ($generated@@263 $generated@@418))))
 :pattern ( ($generated@@263 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@253 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@252 $generated@@421)) (<= 0 ($generated@@251 $generated@@420))))
 :pattern ( ($generated@@251 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@66)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@66) (= (type $generated@@425) $generated@@66)) (= ($generated@@422 ($generated@@374 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@374 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@66)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@66) (= (type $generated@@429) $generated@@66)) (= ($generated@@426 ($generated@@374 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@374 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@66) (= (type $generated@@431) $generated@@66)) (= ($generated@@74 ($generated@@374 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@66)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@66) (= (type $generated@@435) $generated@@66)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@66) (= (type $generated@@439) $generated@@66)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@66) (= (type $generated@@441) $generated@@66)) (= ($generated@@74 ($generated@@382 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@147) (= (type $generated@@443) $generated@@147)) (= ($generated@@244 ($generated@@213 $generated@@442 $generated@@443)) $generated@@61))
 :pattern ( ($generated@@213 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@66)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@66) (= (type $generated@@447) $generated@@66)) (= ($generated@@444 ($generated@@137 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@137 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@66)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@448 ($generated@@137 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@137 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@147) (= (type $generated@@453) $generated@@147)) (= ($generated@@145 ($generated@@213 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@213 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@147) (= (type $generated@@455) $generated@@147)) (= ($generated@@146 ($generated@@213 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@213 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@253 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@252 $generated@@147)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@251 $generated@@462))) ($generated@@238 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@76 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@77 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@77 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@66) (= ($generated@@468 ($generated@@223 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@223 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@66) (= ($generated@@74 ($generated@@223 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@223 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@66)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@66) (= ($generated@@472 ($generated@@228 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@228 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@66) (= ($generated@@74 ($generated@@228 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@228 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@66) (= ($generated@@476 ($generated@@152 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@152 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@66) (= ($generated@@74 ($generated@@152 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@152 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@66) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@66) (= ($generated@@74 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@309 $generated@@485 ($generated@@258 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@258 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@487) $generated@@66)) (= (type $generated@@488) $generated@@66)) (= ($generated@@134 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@269 $generated@@486) $generated@@489))) (and ($generated@@214 ($generated@@83 ($generated@@349 $generated@@486) $generated@@489) $generated@@488) ($generated@@214 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@486) $generated@@489))
 :pattern ( ($generated@@83 ($generated@@269 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@134 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@491) $generated@@66)) (= (type $generated@@492) $generated@@66)) (= ($generated@@134 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@147) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@490) $generated@@493))) (and ($generated@@214 ($generated@@83 ($generated@@357 $generated@@490) $generated@@493) $generated@@492) ($generated@@214 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@83 ($generated@@357 $generated@@490) $generated@@493))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@134 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@147) (= (type $generated@@497) $generated@@147)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@213 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@213 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@147) (= (type $generated@@499) $generated@@147)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@213 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@213 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@147) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) $generated@@66)) ($generated@@214 $generated@@500 ($generated@@374 $generated@@501 $generated@@502))) (and (= ($generated@@258 ($generated@@309 ($generated@@271 $generated@@147 $generated@@147) $generated@@500)) $generated@@500) ($generated@@134 ($generated@@309 ($generated@@271 $generated@@147 $generated@@147) $generated@@500) ($generated@@374 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@214 $generated@@500 ($generated@@374 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@147) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) $generated@@66)) ($generated@@214 $generated@@503 ($generated@@382 $generated@@504 $generated@@505))) (and (= ($generated@@258 ($generated@@309 ($generated@@289 $generated@@147 $generated@@147) $generated@@503)) $generated@@503) ($generated@@134 ($generated@@309 ($generated@@289 $generated@@147 $generated@@147) $generated@@503) ($generated@@382 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@214 $generated@@503 ($generated@@382 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@147)) ($generated@@214 $generated@@508 ($generated@@137 $generated@@506 $generated@@507))) (and (= ($generated@@258 ($generated@@309 $generated@@138 $generated@@508)) $generated@@508) ($generated@@134 ($generated@@309 $generated@@138 $generated@@508) ($generated@@137 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@214 $generated@@508 ($generated@@137 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@83 ($generated@@390 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@83 ($generated@@390 $generated@@510) $generated@@509)))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@71)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@66) (= (type $generated@@514) $generated@@66)) (and (= ($generated@@74 ($generated@@137 $generated@@513 $generated@@514)) $generated@@62) (= ($generated@@511 ($generated@@137 $generated@@513 $generated@@514)) $generated@@64)))
 :pattern ( ($generated@@137 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@138) (= ($generated@@494 ($generated@@258 $generated@@515)) ($generated@@495 $generated@@515)))
 :pattern ( ($generated@@494 ($generated@@258 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@147) ($generated@@214 $generated@@516 ($generated@@77 0))) (and (= ($generated@@258 ($generated@@309 $generated@@2 $generated@@516)) $generated@@516) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@516) ($generated@@77 0))))
 :pattern ( ($generated@@214 $generated@@516 ($generated@@77 0)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@147) (= (type $generated@@518) $generated@@66)) ($generated@@214 $generated@@517 ($generated@@223 $generated@@518))) (and (= ($generated@@258 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@517)) $generated@@517) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@517) ($generated@@223 $generated@@518))))
 :pattern ( ($generated@@214 $generated@@517 ($generated@@223 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@147) (= (type $generated@@520) $generated@@66)) ($generated@@214 $generated@@519 ($generated@@228 $generated@@520))) (and (= ($generated@@258 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@519)) $generated@@519) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@4) $generated@@519) ($generated@@228 $generated@@520))))
 :pattern ( ($generated@@214 $generated@@519 ($generated@@228 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@147) (= (type $generated@@522) $generated@@66)) ($generated@@214 $generated@@521 ($generated@@152 $generated@@522))) (and (= ($generated@@258 ($generated@@309 ($generated@@78 $generated@@147 $generated@@2) $generated@@521)) $generated@@521) ($generated@@134 ($generated@@309 ($generated@@78 $generated@@147 $generated@@2) $generated@@521) ($generated@@152 $generated@@522))))
 :pattern ( ($generated@@214 $generated@@521 ($generated@@152 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@147) (= (type $generated@@524) $generated@@66)) ($generated@@214 $generated@@523 ($generated@@456 $generated@@524))) (and (= ($generated@@258 ($generated@@309 ($generated@@252 $generated@@147) $generated@@523)) $generated@@523) ($generated@@134 ($generated@@309 ($generated@@252 $generated@@147) $generated@@523) ($generated@@456 $generated@@524))))
 :pattern ( ($generated@@214 $generated@@523 ($generated@@456 $generated@@524)))
)))
(assert (= ($generated@@74 $generated@@308) $generated@@63))
(assert (= ($generated@@511 $generated@@308) $generated@@65))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@78 $generated@@147 $generated@@2)) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@525 ($generated@@152 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@147) (< 0 ($generated ($generated@@83 $generated@@525 $generated@@528)))) ($generated@@238 $generated@@528 $generated@@526 $generated@@527))
 :pattern ( ($generated@@83 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@76 $generated@@525 ($generated@@152 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@138) (= (type $generated@@530) $generated@@66)) (= (type $generated@@531) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@237 $generated@@531) (and ($generated@@136 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@66) ($generated@@76 $generated@@529 ($generated@@137 $generated@@530 $generated@@532) $generated@@531))
 :pattern ( ($generated@@76 $generated@@529 ($generated@@137 $generated@@530 $generated@@532) $generated@@531))
))))) ($generated@@238 ($generated@@145 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@238 ($generated@@145 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@138) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@237 $generated@@535) (and ($generated@@136 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@66) ($generated@@76 $generated@@533 ($generated@@137 $generated@@536 $generated@@534) $generated@@535))
 :pattern ( ($generated@@76 $generated@@533 ($generated@@137 $generated@@536 $generated@@534) $generated@@535))
))))) ($generated@@238 ($generated@@146 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@238 ($generated@@146 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@147) (= (type $generated@@538) $generated@@147)) (= ($generated@@213 ($generated@@233 $generated@@537) ($generated@@233 $generated@@538)) ($generated@@233 ($generated@@213 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@213 ($generated@@233 $generated@@537) ($generated@@233 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@539)) ($generated@@233 ($generated@@258 $generated@@539)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@253 (type $generated@@540))))
 (=> (and (= (type $generated@@540) ($generated@@252 $generated@@541)) (= ($generated@@251 $generated@@540) 0)) (= $generated@@540 ($generated@@250 $generated@@541))))
 :pattern ( ($generated@@251 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@543)))
 (=> (and (and (= (type $generated@@542) ($generated@@78 $generated@@545 $generated@@2)) (= (type $generated@@544) $generated@@2)) (<= 0 ($generated $generated@@544))) (= ($generated@@263 ($generated@@84 $generated@@542 $generated@@543 $generated@@544)) (+ (- ($generated@@263 $generated@@542) ($generated ($generated@@83 $generated@@542 $generated@@543))) ($generated $generated@@544)))))
 :pattern ( ($generated@@263 ($generated@@84 $generated@@542 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@547) $generated@@2)) ($generated@@76 $generated@@547 $generated@@46 $generated@@546))
 :pattern ( ($generated@@76 $generated@@547 $generated@@46 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@549) $generated@@3)) ($generated@@76 $generated@@549 $generated@@47 $generated@@548))
 :pattern ( ($generated@@76 $generated@@549 $generated@@47 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@551) $generated@@4)) ($generated@@76 $generated@@551 $generated@@44 $generated@@550))
 :pattern ( ($generated@@76 $generated@@551 $generated@@44 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@553) $generated@@414)) ($generated@@76 $generated@@553 $generated@@45 $generated@@552))
 :pattern ( ($generated@@76 $generated@@553 $generated@@45 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@555) $generated@@147)) ($generated@@76 $generated@@555 $generated@@48 $generated@@554))
 :pattern ( ($generated@@76 $generated@@555 $generated@@48 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@252 $generated@@147)) (= (type $generated@@557) $generated@@66)) (= ($generated@@134 $generated@@556 ($generated@@456 $generated@@557)) (forall (($generated@@558 Int) ) (!  (=> (and (<= 0 $generated@@558) (< $generated@@558 ($generated@@251 $generated@@556))) ($generated@@214 ($generated@@457 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@457 $generated@@556 $generated@@558))
))))
 :pattern ( ($generated@@134 $generated@@556 ($generated@@456 $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 Int) ) (!  (=> (= (type $generated@@560) ($generated@@252 $generated@@147)) (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@251 $generated@@560))) (< ($generated@@495 ($generated@@309 $generated@@138 ($generated@@457 $generated@@560 $generated@@561))) ($generated@@559 $generated@@560))))
 :pattern ( ($generated@@495 ($generated@@309 $generated@@138 ($generated@@457 $generated@@560 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) ($generated@@271 $generated@@147 $generated@@147)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) ($generated@@134 $generated@@562 ($generated@@374 $generated@@563 $generated@@564))) (and (and ($generated@@134 ($generated@@269 $generated@@562) ($generated@@223 $generated@@563)) ($generated@@134 ($generated@@317 $generated@@562) ($generated@@223 $generated@@564))) ($generated@@134 ($generated@@348 $generated@@562) ($generated@@223 ($generated@@137 $generated@@563 $generated@@564)))))
 :pattern ( ($generated@@134 $generated@@562 ($generated@@374 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) ($generated@@289 $generated@@147 $generated@@147)) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) $generated@@66)) ($generated@@134 $generated@@565 ($generated@@382 $generated@@566 $generated@@567))) (and (and ($generated@@134 ($generated@@287 $generated@@565) ($generated@@228 $generated@@566)) ($generated@@134 ($generated@@328 $generated@@565) ($generated@@228 $generated@@567))) ($generated@@134 ($generated@@356 $generated@@565) ($generated@@228 ($generated@@137 $generated@@566 $generated@@567)))))
 :pattern ( ($generated@@134 $generated@@565 ($generated@@382 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@2) ($generated@@134 $generated@@568 $generated@@46))
 :pattern ( ($generated@@134 $generated@@568 $generated@@46))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@3) ($generated@@134 $generated@@569 $generated@@47))
 :pattern ( ($generated@@134 $generated@@569 $generated@@47))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@4) ($generated@@134 $generated@@570 $generated@@44))
 :pattern ( ($generated@@134 $generated@@570 $generated@@44))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@414) ($generated@@134 $generated@@571 $generated@@45))
 :pattern ( ($generated@@134 $generated@@571 $generated@@45))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@147) ($generated@@134 $generated@@572 $generated@@48))
 :pattern ( ($generated@@134 $generated@@572 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@573 () T@U)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () Int)
(declare-fun $generated@@577 (T@U) Bool)
(declare-fun $generated@@578 () T@U)
(declare-fun $generated@@579 () Int)
(assert  (and (and (and (= (type $generated@@573) ($generated@@159 $generated@@79 $generated@@4)) (= (type $generated@@574) $generated@@79)) (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@578) $generated@@138)))
(set-option :timeout 50000)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@580  (=> (and (= $generated@@573 ($generated@@158 $generated@@574 $generated@@575 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@576 $generated@@576))))
(let (($generated@@581  (=> (and ($generated@@237 $generated@@575) ($generated@@577 $generated@@575)) (=> (and (and ($generated@@134 $generated@@578 $generated@@308) ($generated@@76 $generated@@578 $generated@@308 $generated@@575)) (and (= 0 $generated@@579) (= (ControlFlow 0 3) 2))) $generated@@580))))
$generated@@581)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@157 ($generated@@171 0 ($generated@@157 2))) ($generated@@157 0)))))
(let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@157 2) 0)))))
(let (($generated@@185  (=> (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@184) (=> (= (ControlFlow 0 5) 4) $generated@@183)))))
(let (($generated@@186  (=> (and (and ($generated@@180 $generated@@178) ($generated@@181 $generated@@178)) (and (= 0 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@185)))
$generated@@186)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@171 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 Int) ) (! (= ($generated@@171 $generated@@172 $generated@@173) (mod $generated@@172 $generated@@173))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@174))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@175)) ($generated@@159 ($generated@@163 $generated@@175)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@175)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(assert  (and (and (and (= (type $generated@@176) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@177) $generated@@47)) (= (type $generated@@178) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@179) ($generated@@50 $generated@@4))))
(set-option :timeout 40000)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@185  (=> (and (= $generated@@176 ($generated@@45 $generated@@177 $generated@@178 $generated@@179 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@180 $generated@@180))))
(let (($generated@@186  (=> (and (and (and ($generated@@181 $generated@@178) ($generated@@182 $generated@@178)) (= ($generated@@171 $generated@@183 ($generated@@157 2)) ($generated@@157 0))) (and (= 0 $generated@@184) (= (ControlFlow 0 3) 2))) $generated@@185)))
$generated@@186)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (Int) T@U)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@197 (T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@199 (T@T T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@T) T@T)
(declare-fun $generated@@202 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@295 (T@U T@U T@U) Bool)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@330 (T@T) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@T T@T) T@U)
(declare-fun $generated@@358 (T@T T@T) T@T)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@374 (T@U) Bool)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@T T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@429 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@447 (T@U T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@537 (T@U Int) T@U)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(declare-fun $generated@@580 (T@U) Int)
(declare-fun $generated@@681 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@79) 11) (= ($generated@@1 $generated@@80) 12)) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@78 $generated@@91)) $generated@@80)
 :pattern ( ($generated@@78 $generated@@91))
))) (forall (($generated@@92 T@U) ) (! (= (type ($generated@@83 $generated@@92)) $generated@@67)
 :pattern ( ($generated@@83 $generated@@92))
))) (forall (($generated@@93 T@U) ) (! (= (type ($generated@@86 $generated@@93)) $generated@@79)
 :pattern ( ($generated@@86 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= (type ($generated@@87 $generated@@94 $generated@@95)) $generated@@79)
 :pattern ( ($generated@@87 $generated@@94 $generated@@95))
))) (forall (($generated@@96 Int) ) (! (= (type ($generated@@88 $generated@@96)) $generated@@79)
 :pattern ( ($generated@@88 $generated@@96))
))) (forall (($generated@@97 T@U) ) (! (= (type ($generated@@89 $generated@@97)) $generated@@81)
 :pattern ( ($generated@@89 $generated@@97))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@98) $generated@@67) (= (type $generated@@99) $generated@@67)) (= (type $generated@@100) $generated@@79)) (= (type $generated@@101) $generated@@80)) (= (type $generated@@102) $generated@@81)) (= (type $generated@@103) $generated@@81)) (and ($generated@@82 $generated@@102 ($generated@@83 $generated@@98)) ($generated@@82 $generated@@103 ($generated@@83 $generated@@99)))) (= ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103)  (and (=> (< 0 ($generated@@84 $generated@@100)) (and (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (=> (and ($generated@@85 $generated@@102) ($generated@@85 $generated@@103)) (and (= ($generated@@86 $generated@@102) ($generated@@86 $generated@@103)) ($generated@@77 $generated@@98 $generated@@99 ($generated@@87 $generated@@100 ($generated@@88 1)) $generated@@101 ($generated@@89 $generated@@102) ($generated@@89 $generated@@103)))))) (=> (and (not (= $generated@@100 ($generated@@88 0))) (= ($generated@@84 $generated@@100) 0)) ($generated@@90 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103)))))
 :pattern ( ($generated@@77 $generated@@98 $generated@@99 $generated@@100 ($generated@@78 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (= ($generated@@1 ($generated@@106 $generated@@115 $generated@@116)) 14)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@106 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@106 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@110 (type $generated@@121))))
(= (type ($generated@@111 $generated@@121 $generated@@122)) $generated@@123))
 :pattern ( ($generated@@111 $generated@@121 $generated@@122))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 (type $generated@@126)))
(let (($generated@@128 (type $generated@@125)))
(= (type ($generated@@112 $generated@@124 $generated@@125 $generated@@126)) ($generated@@106 $generated@@128 $generated@@127))))
 :pattern ( ($generated@@112 $generated@@124 $generated@@125 $generated@@126))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@129))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@111 ($generated@@112 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@111 ($generated@@112 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@111 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@111 ($generated@@112 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@111 $generated@@138 $generated@@140)))
 :weight 0
)))) (= ($generated@@1 $generated@@107) 15)) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@70 (type $generated@@142))))
(= (type ($generated@@113 $generated@@141 $generated@@142)) $generated@@143))
 :pattern ( ($generated@@113 $generated@@141 $generated@@142))
))) (= ($generated@@1 $generated@@108) 16)) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@114 $generated@@144 $generated@@145 $generated@@146)) $generated@@108)
 :pattern ( ($generated@@114 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@70 (type $generated@@148))))
 (=> (= (type $generated@@149) $generated@@150) (= ($generated@@113 ($generated@@114 $generated@@147 $generated@@148 $generated@@149) $generated@@148) $generated@@149)))
 :weight 0
))) (and (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 ($generated@@114 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@152 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or true (= ($generated@@113 ($generated@@114 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@113 $generated@@156 $generated@@158)))
 :weight 0
)))) (forall (($generated@@159 Int) ) (! (= (type ($generated@@105 $generated@@159)) $generated@@67)
 :pattern ( ($generated@@105 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@160) $generated@@2) (= (type $generated@@161) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
 :pattern ( ($generated@@104 $generated@@160 ($generated@@105 0) $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@162) $generated@@67) (= (type $generated@@163) $generated@@67)) (= (type $generated@@164) $generated@@79)) (= (type $generated@@165) $generated@@80)) (= (type $generated@@166) $generated@@81)) (= (type $generated@@167) $generated@@81)) (not (= $generated@@164 ($generated@@88 0)))) (= ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167) ($generated@@77 $generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@77 $generated@@162 $generated@@163 $generated@@164 ($generated@@78 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@79) (= (type $generated@@170) $generated@@79)) (= (type $generated@@171) $generated@@79)) (and ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))) ($generated@@168 $generated@@169 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@170 $generated@@171))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170) ($generated@@168 $generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@2) ($generated@@82 $generated@@172 ($generated@@105 0)))
 :pattern ( ($generated@@82 $generated@@172 ($generated@@105 0)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 Int) ($generated@@175 Int) ) (!  (=> (= (type $generated@@173) $generated@@79) (=> (and (and (<= 0 $generated@@174) (<= 0 $generated@@175)) (<= (+ $generated@@174 $generated@@175) ($generated@@84 $generated@@173))) (= ($generated@@87 ($generated@@87 $generated@@173 ($generated@@88 $generated@@174)) ($generated@@88 $generated@@175)) ($generated@@87 $generated@@173 ($generated@@88 (+ $generated@@174 $generated@@175))))))
 :pattern ( ($generated@@87 ($generated@@87 $generated@@173 ($generated@@88 $generated@@174)) ($generated@@88 $generated@@175)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@178 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@67) (= (type $generated@@181) $generated@@67)) (= (type $generated@@182) $generated@@81)) ($generated@@82 $generated@@182 ($generated@@177 $generated@@180 $generated@@181))) ($generated@@176 $generated@@182))
 :pattern ( ($generated@@176 $generated@@182) ($generated@@82 $generated@@182 ($generated@@177 $generated@@180 $generated@@181)))
)))
(assert  (and (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@79)
 :pattern ( ($generated@@184 $generated@@186))
)) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@187)) $generated@@79)
 :pattern ( ($generated@@185 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (and (= (type $generated@@188) $generated@@81) (= (type $generated@@189) $generated@@81)) true) (= ($generated@@183 $generated@@188 $generated@@189)  (and (= ($generated@@184 $generated@@188) ($generated@@184 $generated@@189)) (= ($generated@@185 $generated@@188) ($generated@@185 $generated@@189)))))
 :pattern ( ($generated@@183 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@67)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@194) $generated@@67)) ($generated@@82 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@82 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@67) (= (type $generated@@196) $generated@@81)) ($generated@@82 $generated@@196 ($generated@@83 $generated@@195))) ($generated@@85 $generated@@196))
 :pattern ( ($generated@@85 $generated@@196) ($generated@@82 $generated@@196 ($generated@@83 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (= ($generated@@1 ($generated@@199 $generated@@203 $generated@@204)) 17)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@200 ($generated@@199 $generated@@205 $generated@@206)) $generated@@205)
 :pattern ( ($generated@@199 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (! (= ($generated@@201 ($generated@@199 $generated@@207 $generated@@208)) $generated@@208)
 :pattern ( ($generated@@199 $generated@@207 $generated@@208))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@201 (type $generated@@209))))
(= (type ($generated@@197 $generated@@209 $generated@@210 $generated@@211)) $generated@@212))
 :pattern ( ($generated@@197 $generated@@209 $generated@@210 $generated@@211))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 (type $generated@@216)))
(let (($generated@@218 (type $generated@@214)))
(= (type ($generated@@202 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@199 $generated@@218 $generated@@217))))
 :pattern ( ($generated@@202 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@201 (type $generated@@219))))
 (=> (= (type $generated@@222) $generated@@223) (= ($generated@@197 ($generated@@202 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@220 $generated@@221) $generated@@222)))
 :weight 0
))) (and (and (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@197 ($generated@@202 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@197 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@233 $generated@@235) (= ($generated@@197 ($generated@@202 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@197 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (or true (= ($generated@@197 ($generated@@202 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@240 $generated@@241) ($generated@@197 $generated@@237 $generated@@240 $generated@@241)))
 :weight 0
)))) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ) (! (= (type ($generated@@198 $generated@@242 $generated@@243 $generated@@244 $generated@@245)) ($generated@@199 $generated@@107 $generated@@4))
 :pattern ( ($generated@@198 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@70 (type $generated@@251))))
 (=> (and (and (and (and (= (type $generated@@246) $generated@@107) (= (type $generated@@247) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@248) ($generated@@69 $generated@@4))) (= (type $generated@@250) $generated@@107)) (= (type $generated@@251) ($generated@@69 $generated@@252))) (= ($generated@@0 ($generated@@197 ($generated@@198 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))  (=> (and (not (= $generated@@250 $generated@@246)) ($generated@@0 ($generated@@113 ($generated@@111 $generated@@247 $generated@@250) $generated@@248))) $generated@@249))))
 :pattern ( ($generated@@197 ($generated@@198 $generated@@246 $generated@@247 $generated@@248 $generated@@249) $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@253) $generated@@67) (= (type $generated@@254) $generated@@67)) (= (type $generated@@255) $generated@@79)) (= (type $generated@@256) $generated@@80)) (= (type $generated@@257) $generated@@81)) (= (type $generated@@258) $generated@@81)) (= $generated@@257 $generated@@258)) ($generated@@77 $generated@@253 $generated@@254 $generated@@255 ($generated@@78 $generated@@256) $generated@@257 $generated@@258))
 :pattern ( ($generated@@77 $generated@@253 $generated@@254 $generated@@255 ($generated@@78 $generated@@256) $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@261 $generated@@262)) $generated@@81)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@67) (= (type $generated@@264) $generated@@67)) (= (type $generated@@265) $generated@@79)) (= (type $generated@@266) $generated@@79)) (= ($generated@@82 ($generated@@259 $generated@@265 $generated@@266) ($generated@@177 $generated@@263 $generated@@264))  (and ($generated@@260 $generated@@265 $generated@@263) ($generated@@260 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@82 ($generated@@259 $generated@@265 $generated@@266) ($generated@@177 $generated@@263 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@267) $generated@@67) (= (type $generated@@268) $generated@@67)) (= (type $generated@@269) $generated@@80)) (= (type $generated@@270) $generated@@81)) (= (type $generated@@271) $generated@@81)) (= ($generated@@90 $generated@@267 $generated@@268 ($generated@@78 $generated@@269) $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@90 $generated@@267 $generated@@268 ($generated@@78 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@81) (= (type $generated@@273) $generated@@81)) (= ($generated@@183 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@183 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@67)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@277) $generated@@67)) (= ($generated@@82 $generated@@276 ($generated@@274 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@79) ($generated@@0 ($generated@@111 $generated@@276 $generated@@278))) ($generated@@260 $generated@@278 $generated@@277))
 :pattern ( ($generated@@111 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@82 $generated@@276 ($generated@@274 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@67)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@282) $generated@@67)) (= ($generated@@82 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@79) ($generated@@0 ($generated@@111 $generated@@281 $generated@@283))) ($generated@@260 $generated@@283 $generated@@282))
 :pattern ( ($generated@@111 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@82 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= ($generated@@284 $generated@@287) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (! (= (type ($generated@@288 $generated@@289 $generated@@290)) $generated@@81)
 :pattern ( ($generated@@288 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@67) (= (type $generated@@292) $generated@@79)) (= (type $generated@@293) $generated@@81)) (= ($generated@@82 ($generated@@288 $generated@@292 $generated@@293) ($generated@@83 $generated@@291))  (and ($generated@@260 $generated@@292 $generated@@291) ($generated@@82 $generated@@293 ($generated@@83 $generated@@291)))))
 :pattern ( ($generated@@82 ($generated@@288 $generated@@292 $generated@@293) ($generated@@83 $generated@@291)))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) $generated@@67) (= (type $generated@@297) $generated@@67)) (= (type $generated@@298) $generated@@79)) (= (type $generated@@299) $generated@@79)) (= (type $generated@@300) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@294 $generated@@300)) (= ($generated@@104 ($generated@@259 $generated@@298 $generated@@299) ($generated@@177 $generated@@296 $generated@@297) $generated@@300)  (and ($generated@@295 $generated@@298 $generated@@296 $generated@@300) ($generated@@295 $generated@@299 $generated@@297 $generated@@300))))
 :pattern ( ($generated@@104 ($generated@@259 $generated@@298 $generated@@299) ($generated@@177 $generated@@296 $generated@@297) $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@71)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@81) (= ($generated@@176 $generated@@303) (= ($generated@@301 $generated@@303) $generated@@61)))
 :pattern ( ($generated@@176 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@81) (= ($generated@@85 $generated@@304) (= ($generated@@301 $generated@@304) $generated@@63)))
 :pattern ( ($generated@@85 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@81) ($generated@@176 $generated@@305)) (exists (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (and (and (= (type $generated@@306) $generated@@79) (= (type $generated@@307) $generated@@79)) (= $generated@@305 ($generated@@259 $generated@@306 $generated@@307)))
 :no-pattern (type $generated@@306)
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@176 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@81) ($generated@@85 $generated@@308)) (exists (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (and (and (= (type $generated@@309) $generated@@79) (= (type $generated@@310) $generated@@81)) (= $generated@@308 ($generated@@288 $generated@@309 $generated@@310)))
 :no-pattern (type $generated@@309)
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
)))
 :pattern ( ($generated@@85 $generated@@308))
)))
(assert  (and (and (forall (($generated@@315 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@315)) 18)) (forall (($generated@@316 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@313 $generated@@316))
))) (forall (($generated@@317 T@T) ) (! (= (type ($generated@@311 $generated@@317)) ($generated@@313 $generated@@317))
 :pattern ( ($generated@@311 $generated@@317))
))))
(assert (forall (($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@318)) 0)
 :pattern ( ($generated@@311 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@319) $generated@@67) (= (type $generated@@320) $generated@@67)) (= (type $generated@@321) $generated@@80)) (= (type $generated@@322) $generated@@81)) (= (type $generated@@323) $generated@@81)) (and ($generated@@82 $generated@@322 ($generated@@83 $generated@@319)) ($generated@@82 $generated@@323 ($generated@@83 $generated@@320)))) (= ($generated@@90 $generated@@319 $generated@@320 ($generated@@78 $generated@@321) $generated@@322 $generated@@323)  (and (and ($generated@@85 $generated@@322) ($generated@@85 $generated@@323)) (=> (and ($generated@@85 $generated@@322) ($generated@@85 $generated@@323)) (and (= ($generated@@86 $generated@@322) ($generated@@86 $generated@@323)) ($generated@@90 $generated@@319 $generated@@320 $generated@@321 ($generated@@89 $generated@@322) ($generated@@89 $generated@@323)))))))
 :pattern ( ($generated@@90 $generated@@319 $generated@@320 ($generated@@78 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@79)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@67) (= (type $generated@@328) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@295 ($generated@@324 $generated@@326) $generated@@327 $generated@@328) ($generated@@104 $generated@@326 $generated@@327 $generated@@328)))
 :pattern ( ($generated@@295 ($generated@@324 $generated@@326) $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@331 T@T) ) (! (= (type ($generated@@330 $generated@@331)) ($generated@@106 $generated@@331 $generated@@2))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@109 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@106 $generated@@333 $generated@@2)) (and (= (= ($generated@@329 $generated@@332) 0) (= $generated@@332 ($generated@@330 $generated@@333))) (=> (not (= ($generated@@329 $generated@@332) 0)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) (< 0 ($generated ($generated@@111 $generated@@332 $generated@@334))))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (= (type ($generated@@335 $generated@@336)) $generated@@72)
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@67) (and (= ($generated@@75 ($generated@@83 $generated@@337)) $generated@@64) (= ($generated@@335 ($generated@@83 $generated@@337)) $generated@@66)))
 :pattern ( ($generated@@83 $generated@@337))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@106 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@111 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@111 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert  (and (and (and (and (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (= ($generated@@1 ($generated@@358 $generated@@361 $generated@@362)) 20)) (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (! (= ($generated@@359 ($generated@@358 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@358 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@360 ($generated@@358 $generated@@365 $generated@@366)) $generated@@366)
 :pattern ( ($generated@@358 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@359 (type $generated@@367))))
(= (type ($generated@@356 $generated@@367)) ($generated@@106 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@367))
))) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= (type ($generated@@357 $generated@@369 $generated@@370)) ($generated@@358 $generated@@369 $generated@@370))
 :pattern ( ($generated@@357 $generated@@369 $generated@@370))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@T) ) (! (let (($generated@@373 (type $generated@@371)))
 (not ($generated@@0 ($generated@@111 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371))))
 :pattern ( (let (($generated@@373 (type $generated@@371)))
($generated@@111 ($generated@@356 ($generated@@357 $generated@@373 $generated@@372)) $generated@@371)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@79) (= (type $generated@@376) $generated@@79)) (and ($generated@@374 $generated@@376) (<= ($generated@@84 $generated@@376) ($generated@@84 $generated@@375)))) (and (= ($generated@@374 ($generated@@87 $generated@@375 $generated@@376)) ($generated@@374 $generated@@375)) (= ($generated@@84 ($generated@@87 $generated@@375 $generated@@376)) (- ($generated@@84 $generated@@375) ($generated@@84 $generated@@376)))))
 :pattern ( ($generated@@87 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 Int) ) (!  (=> (<= 0 $generated@@377) (and ($generated@@374 ($generated@@88 $generated@@377)) (= ($generated@@84 ($generated@@88 $generated@@377)) $generated@@377)))
 :pattern ( ($generated@@88 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@109 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@106 $generated@@379 $generated@@2)) (= ($generated@@191 $generated@@378) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@379) (and (<= 0 ($generated ($generated@@111 $generated@@378 $generated@@380))) (<= ($generated ($generated@@111 $generated@@378 $generated@@380)) ($generated@@329 $generated@@378))))
 :pattern ( ($generated@@111 $generated@@378 $generated@@380))
)))))
 :pattern ( ($generated@@191 $generated@@378))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@342 (type $generated@@381))))
(let (($generated@@383 ($generated@@341 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@340 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@339 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@111 ($generated@@338 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@338 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@342 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@106 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@342 (type $generated@@388))))
(let (($generated@@390 ($generated@@341 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@340 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@339 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@111 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@360 (type $generated@@392))))
(let (($generated@@394 ($generated@@359 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@358 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@357 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) ($generated@@0 ($generated@@111 ($generated@@356 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@356 $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@360 (type $generated@@397))))
(= (type ($generated@@396 $generated@@397)) ($generated@@106 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@360 (type $generated@@399))))
(let (($generated@@401 ($generated@@359 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@358 $generated@@401 $generated@@400)) (or (= $generated@@399 ($generated@@357 $generated@@401 $generated@@400)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@400) ($generated@@0 ($generated@@111 ($generated@@396 $generated@@399) $generated@@402)))
 :no-pattern (type $generated@@402)
 :no-pattern ($generated $generated@@402)
 :no-pattern ($generated@@0 $generated@@402)
))))))
 :pattern ( ($generated@@396 $generated@@399))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@404) $generated@@67)) (= ($generated@@82 $generated@@403 ($generated@@190 $generated@@404)) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@403 $generated@@405)))) ($generated@@260 $generated@@405 $generated@@404))
 :pattern ( ($generated@@111 $generated@@403 $generated@@405))
))))
 :pattern ( ($generated@@82 $generated@@403 ($generated@@190 $generated@@404)))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@79) (= (type $generated@@407) $generated@@79)) (or (or ($generated@@168 $generated@@406 $generated@@407) (= $generated@@406 $generated@@407)) ($generated@@168 $generated@@407 $generated@@406)))
 :pattern ( ($generated@@168 $generated@@406 $generated@@407) ($generated@@168 $generated@@407 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@408 ($generated@@274 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@79) ($generated@@0 ($generated@@111 $generated@@408 $generated@@411))) ($generated@@295 $generated@@411 $generated@@409 $generated@@410))
 :pattern ( ($generated@@111 $generated@@408 $generated@@411))
))))
 :pattern ( ($generated@@104 $generated@@408 ($generated@@274 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (= (type $generated@@412) ($generated@@106 $generated@@79 $generated@@4)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@412 ($generated@@279 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@79) ($generated@@0 ($generated@@111 $generated@@412 $generated@@415))) ($generated@@295 $generated@@415 $generated@@413 $generated@@414))
 :pattern ( ($generated@@111 $generated@@412 $generated@@415))
))))
 :pattern ( ($generated@@104 $generated@@412 ($generated@@279 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(= ($generated ($generated@@111 ($generated@@330 $generated@@417) $generated@@416)) 0))
 :pattern ( (let (($generated@@417 (type $generated@@416)))
($generated@@111 ($generated@@330 $generated@@417) $generated@@416)))
)))
(assert  (and (and (forall (($generated@@421 T@U) ) (! (= (type ($generated@@418 $generated@@421)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@418 $generated@@421))
)) (forall (($generated@@422 T@T) ($generated@@423 T@U) ) (! (= (type ($generated@@419 $generated@@422 $generated@@423)) $generated@@422)
 :pattern ( ($generated@@419 $generated@@422 $generated@@423))
))) (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@342 (type $generated@@424))))
(let (($generated@@426 ($generated@@341 (type $generated@@424))))
(= (type ($generated@@420 $generated@@424)) ($generated@@106 $generated@@426 $generated@@425))))
 :pattern ( ($generated@@420 $generated@@424))
))))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@340 $generated@@79 $generated@@79)) (= (type $generated@@428) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@418 $generated@@427) $generated@@428))  (and ($generated@@0 ($generated@@111 ($generated@@338 $generated@@427) ($generated@@184 ($generated@@419 $generated@@81 $generated@@428)))) (= ($generated@@111 ($generated@@420 $generated@@427) ($generated@@184 ($generated@@419 $generated@@81 $generated@@428))) ($generated@@185 ($generated@@419 $generated@@81 $generated@@428))))))
 :pattern ( ($generated@@111 ($generated@@418 $generated@@427) $generated@@428))
)))
(assert  (and (forall (($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@431)) ($generated@@106 $generated@@79 $generated@@4))
 :pattern ( ($generated@@429 $generated@@431))
)) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@360 (type $generated@@432))))
(let (($generated@@434 ($generated@@359 (type $generated@@432))))
(= (type ($generated@@430 $generated@@432)) ($generated@@106 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@430 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@358 $generated@@79 $generated@@79)) (= (type $generated@@436) $generated@@79)) (= ($generated@@0 ($generated@@111 ($generated@@429 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@111 ($generated@@356 $generated@@435) ($generated@@184 ($generated@@419 $generated@@81 $generated@@436)))) (= ($generated@@111 ($generated@@430 $generated@@435) ($generated@@184 ($generated@@419 $generated@@81 $generated@@436))) ($generated@@185 ($generated@@419 $generated@@81 $generated@@436))))))
 :pattern ( ($generated@@111 ($generated@@429 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@341 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@340 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@111 ($generated@@385 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@111 ($generated@@338 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@111 ($generated@@420 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@111 ($generated@@338 $generated@@437) $generated@@441))
 :pattern ( ($generated@@111 ($generated@@420 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@111 ($generated@@385 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@359 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@358 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@111 ($generated@@396 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@111 ($generated@@356 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@111 ($generated@@430 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@111 ($generated@@356 $generated@@442) $generated@@446))
 :pattern ( ($generated@@111 ($generated@@430 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@111 ($generated@@396 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@447 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (= (type $generated@@450) ($generated@@340 $generated@@79 $generated@@79)) (= (type $generated@@451) $generated@@67)) (= (type $generated@@452) $generated@@67)) (= (type $generated@@453) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453) (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@338 $generated@@450) $generated@@454))) (and ($generated@@295 ($generated@@111 ($generated@@420 $generated@@450) $generated@@454) $generated@@452 $generated@@453) ($generated@@295 $generated@@454 $generated@@451 $generated@@453)))
 :pattern ( ($generated@@111 ($generated@@420 $generated@@450) $generated@@454))
 :pattern ( ($generated@@111 ($generated@@338 $generated@@450) $generated@@454))
))))
 :pattern ( ($generated@@104 $generated@@450 ($generated@@447 $generated@@451 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@358 $generated@@79 $generated@@79)) (= (type $generated@@459) $generated@@67)) (= (type $generated@@460) $generated@@67)) (= (type $generated@@461) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@356 $generated@@458) $generated@@462))) (and ($generated@@295 ($generated@@111 ($generated@@430 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@295 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@111 ($generated@@430 $generated@@458) $generated@@462))
 :pattern ( ($generated@@111 ($generated@@356 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@104 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@106 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@360 (type $generated@@465))))
(let (($generated@@467 ($generated@@359 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@358 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@357 $generated@@467 $generated@@466)) (= ($generated@@356 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@356 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@360 (type $generated@@468))))
(let (($generated@@470 ($generated@@359 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@358 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@357 $generated@@470 $generated@@469)) (= ($generated@@396 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@396 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@360 (type $generated@@471))))
(let (($generated@@473 ($generated@@359 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@358 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@357 $generated@@473 $generated@@472)) (= ($generated@@429 $generated@@471) ($generated@@463 $generated@@79))))))
 :pattern ( ($generated@@429 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@342 (type $generated@@474))))
(let (($generated@@476 ($generated@@341 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@340 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@339 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@79) (= (type $generated@@478) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@418 $generated@@474) ($generated@@324 ($generated@@259 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@418 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@360 (type $generated@@479))))
(let (($generated@@481 ($generated@@359 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@358 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@357 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@79) (= (type $generated@@483) $generated@@79)) ($generated@@0 ($generated@@111 ($generated@@429 $generated@@479) ($generated@@324 ($generated@@259 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@429 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@79) ($generated@@260 $generated@@484 $generated@@46)) (and (= ($generated@@324 ($generated@@419 $generated@@2 $generated@@484)) $generated@@484) ($generated@@82 ($generated@@419 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@260 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@79) ($generated@@260 $generated@@485 $generated@@47)) (and (= ($generated@@324 ($generated@@419 $generated@@3 $generated@@485)) $generated@@485) ($generated@@82 ($generated@@419 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@260 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@79) ($generated@@260 $generated@@486 $generated@@44)) (and (= ($generated@@324 ($generated@@419 $generated@@4 $generated@@486)) $generated@@486) ($generated@@82 ($generated@@419 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@260 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 21))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@79) ($generated@@260 $generated@@488 $generated@@45)) (and (= ($generated@@324 ($generated@@419 $generated@@487 $generated@@488)) $generated@@488) ($generated@@82 ($generated@@419 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@260 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@67) (= ($generated@@260 ($generated@@324 $generated@@489) $generated@@490) ($generated@@82 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@260 ($generated@@324 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@79) (<= 0 ($generated@@84 $generated@@491)))
 :pattern ( ($generated@@84 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@109 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@106 $generated@@493 $generated@@2)) (<= 0 ($generated@@329 $generated@@492))))
 :pattern ( ($generated@@329 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@314 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@313 $generated@@495)) (<= 0 ($generated@@312 $generated@@494))))
 :pattern ( ($generated@@312 $generated@@494))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@67)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@67) (= (type $generated@@499) $generated@@67)) (= ($generated@@496 ($generated@@447 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@447 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@67) (= (type $generated@@503) $generated@@67)) (= ($generated@@500 ($generated@@447 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@447 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@67) (= (type $generated@@505) $generated@@67)) (= ($generated@@75 ($generated@@447 $generated@@504 $generated@@505)) $generated@@58))
 :pattern ( ($generated@@447 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@67)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@67) (= (type $generated@@509) $generated@@67)) (= ($generated@@506 ($generated@@455 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@455 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@67)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@67) (= (type $generated@@513) $generated@@67)) (= ($generated@@510 ($generated@@455 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@455 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@67) (= (type $generated@@515) $generated@@67)) (= ($generated@@75 ($generated@@455 $generated@@514 $generated@@515)) $generated@@59))
 :pattern ( ($generated@@455 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@79) (= (type $generated@@517) $generated@@79)) (= ($generated@@301 ($generated@@259 $generated@@516 $generated@@517)) $generated@@61))
 :pattern ( ($generated@@259 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@67)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@67) (= (type $generated@@521) $generated@@67)) (= ($generated@@518 ($generated@@177 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@177 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@67)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@67) (= (type $generated@@525) $generated@@67)) (= ($generated@@522 ($generated@@177 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@177 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@79) (= (type $generated@@527) $generated@@79)) (= ($generated@@184 ($generated@@259 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@259 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@79) (= (type $generated@@529) $generated@@79)) (= ($generated@@185 ($generated@@259 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@259 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@79) (= (type $generated@@531) $generated@@81)) (= ($generated@@301 ($generated@@288 $generated@@530 $generated@@531)) $generated@@63))
 :pattern ( ($generated@@288 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@79) (= (type $generated@@533) $generated@@81)) (= ($generated@@86 ($generated@@288 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@288 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@79) (= (type $generated@@535) $generated@@81)) (= ($generated@@89 ($generated@@288 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@288 $generated@@534 $generated@@535))
)))
(assert  (and (forall (($generated@@538 T@U) ) (! (= (type ($generated@@536 $generated@@538)) $generated@@67)
 :pattern ( ($generated@@536 $generated@@538))
)) (forall (($generated@@539 T@U) ($generated@@540 Int) ) (! (let (($generated@@541 ($generated@@314 (type $generated@@539))))
(= (type ($generated@@537 $generated@@539 $generated@@540)) $generated@@541))
 :pattern ( ($generated@@537 $generated@@539 $generated@@540))
))))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@313 $generated@@79)) (= (type $generated@@543) $generated@@67)) (= (type $generated@@544) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@542 ($generated@@536 $generated@@543) $generated@@544) (forall (($generated@@545 Int) ) (!  (=> (and (<= 0 $generated@@545) (< $generated@@545 ($generated@@312 $generated@@542))) ($generated@@295 ($generated@@537 $generated@@542 $generated@@545) $generated@@543 $generated@@544))
 :pattern ( ($generated@@537 $generated@@542 $generated@@545))
))))
 :pattern ( ($generated@@104 $generated@@542 ($generated@@536 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@546 ($generated@@105 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@105 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@67)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@67) (= ($generated@@548 ($generated@@274 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@274 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@67) (= ($generated@@75 ($generated@@274 $generated@@551)) $generated@@54))
 :pattern ( ($generated@@274 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@67)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@67) (= ($generated@@552 ($generated@@279 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@279 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@67) (= ($generated@@75 ($generated@@279 $generated@@555)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@67)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@67) (= ($generated@@556 ($generated@@190 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@190 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@67) (= ($generated@@75 ($generated@@190 $generated@@559)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@67)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@67) (= ($generated@@560 ($generated@@536 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@536 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@67) (= ($generated@@75 ($generated@@536 $generated@@563)) $generated@@57))
 :pattern ( ($generated@@536 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@67)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@67) (= ($generated@@564 ($generated@@83 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@83 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
(= ($generated@@419 $generated@@568 ($generated@@324 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@324 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@340 $generated@@79 $generated@@79)) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) $generated@@67)) (= ($generated@@82 $generated@@569 ($generated@@447 $generated@@570 $generated@@571)) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@338 $generated@@569) $generated@@572))) (and ($generated@@260 ($generated@@111 ($generated@@420 $generated@@569) $generated@@572) $generated@@571) ($generated@@260 $generated@@572 $generated@@570)))
 :pattern ( ($generated@@111 ($generated@@420 $generated@@569) $generated@@572))
 :pattern ( ($generated@@111 ($generated@@338 $generated@@569) $generated@@572))
))))
 :pattern ( ($generated@@82 $generated@@569 ($generated@@447 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@358 $generated@@79 $generated@@79)) (= (type $generated@@574) $generated@@67)) (= (type $generated@@575) $generated@@67)) (= ($generated@@82 $generated@@573 ($generated@@455 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@79) ($generated@@0 ($generated@@111 ($generated@@356 $generated@@573) $generated@@576))) (and ($generated@@260 ($generated@@111 ($generated@@430 $generated@@573) $generated@@576) $generated@@575) ($generated@@260 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@111 ($generated@@430 $generated@@573) $generated@@576))
 :pattern ( ($generated@@111 ($generated@@356 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@82 $generated@@573 ($generated@@455 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@79) (= (type $generated@@578) $generated@@79)) (and (and (and (=> ($generated@@168 $generated@@577 $generated@@578) (not (= $generated@@577 $generated@@578))) (=> (and ($generated@@374 $generated@@577) (not ($generated@@374 $generated@@578))) ($generated@@168 $generated@@577 $generated@@578))) (=> (and ($generated@@374 $generated@@577) ($generated@@374 $generated@@578)) (= ($generated@@168 $generated@@577 $generated@@578) (< ($generated@@84 $generated@@577) ($generated@@84 $generated@@578))))) (=> (and ($generated@@168 $generated@@577 $generated@@578) ($generated@@374 $generated@@578)) ($generated@@374 $generated@@577))))
 :pattern ( ($generated@@168 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@79) (= (type $generated@@582) $generated@@79)) (< ($generated@@579 $generated@@581) ($generated@@580 ($generated@@259 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@79) (= (type $generated@@584) $generated@@79)) (< ($generated@@579 $generated@@584) ($generated@@580 ($generated@@259 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@259 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@79) (= (type $generated@@586) $generated@@67)) (= (type $generated@@587) $generated@@67)) ($generated@@260 $generated@@585 ($generated@@447 $generated@@586 $generated@@587))) (and (= ($generated@@324 ($generated@@419 ($generated@@340 $generated@@79 $generated@@79) $generated@@585)) $generated@@585) ($generated@@82 ($generated@@419 ($generated@@340 $generated@@79 $generated@@79) $generated@@585) ($generated@@447 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@260 $generated@@585 ($generated@@447 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@79) (= (type $generated@@589) $generated@@67)) (= (type $generated@@590) $generated@@67)) ($generated@@260 $generated@@588 ($generated@@455 $generated@@589 $generated@@590))) (and (= ($generated@@324 ($generated@@419 ($generated@@358 $generated@@79 $generated@@79) $generated@@588)) $generated@@588) ($generated@@82 ($generated@@419 ($generated@@358 $generated@@79 $generated@@79) $generated@@588) ($generated@@455 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@260 $generated@@588 ($generated@@455 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@67) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) $generated@@79)) ($generated@@260 $generated@@593 ($generated@@177 $generated@@591 $generated@@592))) (and (= ($generated@@324 ($generated@@419 $generated@@81 $generated@@593)) $generated@@593) ($generated@@82 ($generated@@419 $generated@@81 $generated@@593) ($generated@@177 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@260 $generated@@593 ($generated@@177 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@594) $generated@@67) (= (type $generated@@595) $generated@@67)) (= (type $generated@@596) $generated@@80)) (= (type $generated@@597) $generated@@81)) (= (type $generated@@598) $generated@@81)) (= ($generated@@90 $generated@@594 $generated@@595 ($generated@@78 $generated@@596) $generated@@597 $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@79) ($generated@@77 $generated@@594 $generated@@595 $generated@@599 ($generated@@78 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@77 $generated@@594 $generated@@595 $generated@@599 ($generated@@78 $generated@@596) $generated@@597 $generated@@598))
))))
 :pattern ( ($generated@@90 $generated@@594 $generated@@595 ($generated@@78 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@81) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@294 $generated@@602) (and ($generated@@85 $generated@@600) ($generated@@104 $generated@@600 ($generated@@83 $generated@@601) $generated@@602)))) ($generated@@295 ($generated@@86 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@295 ($generated@@86 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
 (not ($generated@@0 ($generated@@111 ($generated@@463 $generated@@604) $generated@@603))))
 :pattern ( (let (($generated@@604 (type $generated@@603)))
($generated@@111 ($generated@@463 $generated@@604) $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@67) (= (type $generated@@606) $generated@@67)) (and (= ($generated@@75 ($generated@@177 $generated@@605 $generated@@606)) $generated@@62) (= ($generated@@335 ($generated@@177 $generated@@605 $generated@@606)) $generated@@65)))
 :pattern ( ($generated@@177 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@81) (= ($generated@@579 ($generated@@324 $generated@@607)) ($generated@@580 $generated@@607)))
 :pattern ( ($generated@@579 ($generated@@324 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@79) ($generated@@260 $generated@@608 ($generated@@105 0))) (and (= ($generated@@324 ($generated@@419 $generated@@2 $generated@@608)) $generated@@608) ($generated@@82 ($generated@@419 ($generated@@106 $generated@@79 $generated@@4) $generated@@608) ($generated@@105 0))))
 :pattern ( ($generated@@260 $generated@@608 ($generated@@105 0)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@79) (= (type $generated@@610) $generated@@67)) ($generated@@260 $generated@@609 ($generated@@274 $generated@@610))) (and (= ($generated@@324 ($generated@@419 ($generated@@106 $generated@@79 $generated@@4) $generated@@609)) $generated@@609) ($generated@@82 ($generated@@419 ($generated@@106 $generated@@79 $generated@@4) $generated@@609) ($generated@@274 $generated@@610))))
 :pattern ( ($generated@@260 $generated@@609 ($generated@@274 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@79) (= (type $generated@@612) $generated@@67)) ($generated@@260 $generated@@611 ($generated@@279 $generated@@612))) (and (= ($generated@@324 ($generated@@419 ($generated@@106 $generated@@79 $generated@@4) $generated@@611)) $generated@@611) ($generated@@82 ($generated@@419 ($generated@@106 $generated@@79 $generated@@4) $generated@@611) ($generated@@279 $generated@@612))))
 :pattern ( ($generated@@260 $generated@@611 ($generated@@279 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@613) $generated@@79) (= (type $generated@@614) $generated@@67)) ($generated@@260 $generated@@613 ($generated@@190 $generated@@614))) (and (= ($generated@@324 ($generated@@419 ($generated@@106 $generated@@79 $generated@@2) $generated@@613)) $generated@@613) ($generated@@82 ($generated@@419 ($generated@@106 $generated@@79 $generated@@2) $generated@@613) ($generated@@190 $generated@@614))))
 :pattern ( ($generated@@260 $generated@@613 ($generated@@190 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@79) (= (type $generated@@616) $generated@@67)) ($generated@@260 $generated@@615 ($generated@@536 $generated@@616))) (and (= ($generated@@324 ($generated@@419 ($generated@@313 $generated@@79) $generated@@615)) $generated@@615) ($generated@@82 ($generated@@419 ($generated@@313 $generated@@79) $generated@@615) ($generated@@536 $generated@@616))))
 :pattern ( ($generated@@260 $generated@@615 ($generated@@536 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@67) (= (type $generated@@618) $generated@@79)) ($generated@@260 $generated@@618 ($generated@@83 $generated@@617))) (and (= ($generated@@324 ($generated@@419 $generated@@81 $generated@@618)) $generated@@618) ($generated@@82 ($generated@@419 $generated@@81 $generated@@618) ($generated@@83 $generated@@617))))
 :pattern ( ($generated@@260 $generated@@618 ($generated@@83 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@79) ($generated@@374 $generated@@619)) (= $generated@@619 ($generated@@88 ($generated@@84 $generated@@619))))
 :pattern ( ($generated@@84 $generated@@619))
 :pattern ( ($generated@@374 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@81) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@294 $generated@@622) (and ($generated@@85 $generated@@620) ($generated@@104 $generated@@620 ($generated@@83 $generated@@621) $generated@@622)))) ($generated@@104 ($generated@@89 $generated@@620) ($generated@@83 $generated@@621) $generated@@622))
 :pattern ( ($generated@@104 ($generated@@89 $generated@@620) ($generated@@83 $generated@@621) $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@106 $generated@@79 $generated@@2)) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) ($generated@@106 $generated@@107 $generated@@108))) (= ($generated@@104 $generated@@623 ($generated@@190 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@79) (< 0 ($generated ($generated@@111 $generated@@623 $generated@@626)))) ($generated@@295 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@111 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@104 $generated@@623 ($generated@@190 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@79) (= (type $generated@@628) $generated@@79)) (and ($generated@@374 $generated@@628) (<= ($generated@@84 $generated@@628) ($generated@@84 $generated@@627)))) (or (and (= $generated@@628 ($generated@@88 0)) (= ($generated@@87 $generated@@627 $generated@@628) $generated@@627)) (and (not (= $generated@@628 ($generated@@88 0))) ($generated@@168 ($generated@@87 $generated@@627 $generated@@628) $generated@@627))))
 :pattern ( ($generated@@87 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@629) $generated@@67) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@79)) (= (type $generated@@632) $generated@@80)) (= (type $generated@@633) $generated@@81)) (= (type $generated@@634) $generated@@81)) (= (type $generated@@635) $generated@@79)) (and ($generated@@168 $generated@@631 $generated@@635) ($generated@@77 $generated@@629 $generated@@630 $generated@@635 ($generated@@78 $generated@@632) $generated@@633 $generated@@634))) ($generated@@77 $generated@@629 $generated@@630 $generated@@631 ($generated@@78 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@77 $generated@@629 $generated@@630 $generated@@631 ($generated@@78 $generated@@632) $generated@@633 $generated@@634) ($generated@@77 $generated@@629 $generated@@630 $generated@@635 ($generated@@78 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@636) $generated@@67) (= (type $generated@@637) $generated@@67)) (= (type $generated@@638) $generated@@80)) (= (type $generated@@639) $generated@@81)) (= (type $generated@@640) $generated@@81)) (= ($generated@@90 $generated@@636 $generated@@637 ($generated@@78 $generated@@638) $generated@@639 $generated@@640) ($generated@@90 $generated@@636 $generated@@637 $generated@@638 $generated@@639 $generated@@640)))
 :pattern ( ($generated@@90 $generated@@636 $generated@@637 ($generated@@78 $generated@@638) $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) $generated@@81) (= (type $generated@@642) $generated@@67)) (= (type $generated@@643) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@294 $generated@@643) (and ($generated@@176 $generated@@641) (exists (($generated@@644 T@U) ) (!  (and (= (type $generated@@644) $generated@@67) ($generated@@104 $generated@@641 ($generated@@177 $generated@@642 $generated@@644) $generated@@643))
 :pattern ( ($generated@@104 $generated@@641 ($generated@@177 $generated@@642 $generated@@644) $generated@@643))
))))) ($generated@@295 ($generated@@184 $generated@@641) $generated@@642 $generated@@643))
 :pattern ( ($generated@@295 ($generated@@184 $generated@@641) $generated@@642 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) $generated@@81) (= (type $generated@@646) $generated@@67)) (= (type $generated@@647) ($generated@@106 $generated@@107 $generated@@108))) (and ($generated@@294 $generated@@647) (and ($generated@@176 $generated@@645) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@67) ($generated@@104 $generated@@645 ($generated@@177 $generated@@648 $generated@@646) $generated@@647))
 :pattern ( ($generated@@104 $generated@@645 ($generated@@177 $generated@@648 $generated@@646) $generated@@647))
))))) ($generated@@295 ($generated@@185 $generated@@645) $generated@@646 $generated@@647))
 :pattern ( ($generated@@295 ($generated@@185 $generated@@645) $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@79) (= (type $generated@@650) $generated@@79)) (= ($generated@@259 ($generated@@284 $generated@@649) ($generated@@284 $generated@@650)) ($generated@@284 ($generated@@259 $generated@@649 $generated@@650))))
 :pattern ( ($generated@@259 ($generated@@284 $generated@@649) ($generated@@284 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (= ($generated@@324 ($generated@@284 $generated@@651)) ($generated@@284 ($generated@@324 $generated@@651)))
 :pattern ( ($generated@@324 ($generated@@284 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@314 (type $generated@@652))))
 (=> (and (= (type $generated@@652) ($generated@@313 $generated@@653)) (= ($generated@@312 $generated@@652) 0)) (= $generated@@652 ($generated@@311 $generated@@653))))
 :pattern ( ($generated@@312 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ) (! (let (($generated@@657 (type $generated@@655)))
 (=> (and (and (= (type $generated@@654) ($generated@@106 $generated@@657 $generated@@2)) (= (type $generated@@656) $generated@@2)) (<= 0 ($generated $generated@@656))) (= ($generated@@329 ($generated@@112 $generated@@654 $generated@@655 $generated@@656)) (+ (- ($generated@@329 $generated@@654) ($generated ($generated@@111 $generated@@654 $generated@@655))) ($generated $generated@@656)))))
 :pattern ( ($generated@@329 ($generated@@112 $generated@@654 $generated@@655 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@658) $generated@@67) (= (type $generated@@659) $generated@@67)) (= (type $generated@@660) $generated@@80)) (= (type $generated@@661) $generated@@81)) (= (type $generated@@662) $generated@@81)) (forall (($generated@@663 Int) ) (!  (=> (<= 0 $generated@@663) ($generated@@77 $generated@@658 $generated@@659 ($generated@@88 $generated@@663) ($generated@@78 $generated@@660) $generated@@661 $generated@@662))
 :pattern ( ($generated@@77 $generated@@658 $generated@@659 ($generated@@88 $generated@@663) ($generated@@78 $generated@@660) $generated@@661 $generated@@662))
))) ($generated@@90 $generated@@658 $generated@@659 ($generated@@78 $generated@@660) $generated@@661 $generated@@662))
 :pattern ( ($generated@@90 $generated@@658 $generated@@659 ($generated@@78 $generated@@660) $generated@@661 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@665) $generated@@2)) ($generated@@104 $generated@@665 $generated@@46 $generated@@664))
 :pattern ( ($generated@@104 $generated@@665 $generated@@46 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@667) $generated@@3)) ($generated@@104 $generated@@667 $generated@@47 $generated@@666))
 :pattern ( ($generated@@104 $generated@@667 $generated@@47 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@669) $generated@@4)) ($generated@@104 $generated@@669 $generated@@44 $generated@@668))
 :pattern ( ($generated@@104 $generated@@669 $generated@@44 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@671) $generated@@487)) ($generated@@104 $generated@@671 $generated@@45 $generated@@670))
 :pattern ( ($generated@@104 $generated@@671 $generated@@45 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@106 $generated@@107 $generated@@108)) (= (type $generated@@673) $generated@@79)) ($generated@@104 $generated@@673 $generated@@48 $generated@@672))
 :pattern ( ($generated@@104 $generated@@673 $generated@@48 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@674) $generated@@67) (= (type $generated@@675) $generated@@79)) (= (type $generated@@676) $generated@@81)) (= (type $generated@@677) ($generated@@106 $generated@@107 $generated@@108))) ($generated@@294 $generated@@677)) (= ($generated@@104 ($generated@@288 $generated@@675 $generated@@676) ($generated@@83 $generated@@674) $generated@@677)  (and ($generated@@295 $generated@@675 $generated@@674 $generated@@677) ($generated@@104 $generated@@676 ($generated@@83 $generated@@674) $generated@@677))))
 :pattern ( ($generated@@104 ($generated@@288 $generated@@675 $generated@@676) ($generated@@83 $generated@@674) $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@313 $generated@@79)) (= (type $generated@@679) $generated@@67)) (= ($generated@@82 $generated@@678 ($generated@@536 $generated@@679)) (forall (($generated@@680 Int) ) (!  (=> (and (<= 0 $generated@@680) (< $generated@@680 ($generated@@312 $generated@@678))) ($generated@@260 ($generated@@537 $generated@@678 $generated@@680) $generated@@679))
 :pattern ( ($generated@@537 $generated@@678 $generated@@680))
))))
 :pattern ( ($generated@@82 $generated@@678 ($generated@@536 $generated@@679)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 Int) ) (!  (=> (= (type $generated@@682) ($generated@@313 $generated@@79)) (=> (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@312 $generated@@682))) (< ($generated@@580 ($generated@@419 $generated@@81 ($generated@@537 $generated@@682 $generated@@683))) ($generated@@681 $generated@@682))))
 :pattern ( ($generated@@580 ($generated@@419 $generated@@81 ($generated@@537 $generated@@682 $generated@@683))))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (and (= (type $generated@@684) ($generated@@340 $generated@@79 $generated@@79)) (= (type $generated@@685) $generated@@67)) (= (type $generated@@686) $generated@@67)) ($generated@@82 $generated@@684 ($generated@@447 $generated@@685 $generated@@686))) (and (and ($generated@@82 ($generated@@338 $generated@@684) ($generated@@274 $generated@@685)) ($generated@@82 ($generated@@385 $generated@@684) ($generated@@274 $generated@@686))) ($generated@@82 ($generated@@418 $generated@@684) ($generated@@274 ($generated@@177 $generated@@685 $generated@@686)))))
 :pattern ( ($generated@@82 $generated@@684 ($generated@@447 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@358 $generated@@79 $generated@@79)) (= (type $generated@@688) $generated@@67)) (= (type $generated@@689) $generated@@67)) ($generated@@82 $generated@@687 ($generated@@455 $generated@@688 $generated@@689))) (and (and ($generated@@82 ($generated@@356 $generated@@687) ($generated@@279 $generated@@688)) ($generated@@82 ($generated@@396 $generated@@687) ($generated@@279 $generated@@689))) ($generated@@82 ($generated@@429 $generated@@687) ($generated@@279 ($generated@@177 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@82 $generated@@687 ($generated@@455 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@2) ($generated@@82 $generated@@690 $generated@@46))
 :pattern ( ($generated@@82 $generated@@690 $generated@@46))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@3) ($generated@@82 $generated@@691 $generated@@47))
 :pattern ( ($generated@@82 $generated@@691 $generated@@47))
)))
(assert (forall (($generated@@692 T@U) ) (!  (=> (= (type $generated@@692) $generated@@4) ($generated@@82 $generated@@692 $generated@@44))
 :pattern ( ($generated@@82 $generated@@692 $generated@@44))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@487) ($generated@@82 $generated@@693 $generated@@45))
 :pattern ( ($generated@@82 $generated@@693 $generated@@45))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@79) ($generated@@82 $generated@@694 $generated@@48))
 :pattern ( ($generated@@82 $generated@@694 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 (T@U) Bool)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () Int)
(assert  (and (and (and (and (= (type $generated@@695) ($generated@@199 $generated@@107 $generated@@4)) (= (type $generated@@696) $generated@@107)) (= (type $generated@@697) ($generated@@106 $generated@@107 $generated@@108))) (= (type $generated@@700) $generated@@81)) (= (type $generated@@701) $generated@@67)))
(set-option :timeout 30000)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@703  (=> (and (= $generated@@695 ($generated@@198 $generated@@696 $generated@@697 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@698 $generated@@698))))
(let (($generated@@704  (=> (and ($generated@@294 $generated@@697) ($generated@@699 $generated@@697)) (=> (and (and ($generated@@82 $generated@@700 ($generated@@83 $generated@@701)) ($generated@@104 $generated@@700 ($generated@@83 $generated@@701) $generated@@697)) (and (= 0 $generated@@702) (= (ControlFlow 0 3) 2))) $generated@@703))))
$generated@@704)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
