(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@204 (T@U T@U) T@U)
(declare-fun $generated@@211 (T@T T@U T@U) T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@231 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@243 (T@T) T@U)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@T) T@T)
(declare-fun $generated@@246 (T@T) T@T)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@U)
(declare-fun $generated@@276 (T@T T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U T@U) Bool)
(declare-fun $generated@@316 (T@U T@U) Bool)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@402 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U Int) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@540 (T@T) T@U)
(declare-fun $generated@@546 (T@U T@U T@U) T@U)
(declare-fun $generated@@547 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@548 (T@T T@T) T@T)
(declare-fun $generated@@549 (T@T) T@T)
(declare-fun $generated@@550 (T@T) T@T)
(declare-fun $generated@@551 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@602 (T@U) T@U)
(declare-fun $generated@@645 (T@U T@U T@U) T@U)
(declare-fun $generated@@666 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert  (and (= (type $generated@@150) $generated@@73) (= (type $generated@@151) $generated@@91)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@91) (= (type $generated@@153) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@152 $generated@@150 $generated@@153)  (or (= $generated@@152 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@152 $generated@@150 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@73))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@91) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@155 $generated@@154 $generated@@156))
)))
(assert  (and (= (type $generated@@157) ($generated@@75 $generated@@2)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@163) $generated@@91)) (and ($generated@@158 $generated@@162) (and (not (= $generated@@163 $generated@@151)) (= ($generated@@159 $generated@@163) $generated@@154)))) ($generated@@160 ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@157) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@157))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@160 $generated@@164 ($generated@@89 0)))
 :pattern ( ($generated@@160 $generated@@164 ($generated@@89 0)))
)))
(assert ($generated@@165 $generated@@154))
(assert  (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@73)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@73) (= (type $generated@@172) $generated@@73)) (= (type $generated@@173) $generated@@168)) ($generated@@160 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@160 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 17) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(= (type ($generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert  (=> (<= 0 $generated@@182) (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@73) (= (type $generated@@190) $generated@@177)) (or ($generated@@184 $generated@@189 $generated@@190) (and (not (= 0 $generated@@182)) ($generated@@185 $generated@@190 $generated@@189)))) (= ($generated@@183 $generated@@189 $generated@@190) ($generated@@0 ($generated@@186 ($generated@@11 true)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
))))
(assert (= (type $generated@@191) $generated@@73))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@91) (=> (and (not (= $generated@@192 $generated@@151)) ($generated@@160 $generated@@192 $generated@@154)) ($generated@@160 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@160 $generated@@192 $generated@@154))
)))
(assert (forall (($generated@@195 T@U) ) (! (= (type ($generated@@193 $generated@@195)) $generated@@73)
 :pattern ( ($generated@@193 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (= (type $generated@@196) ($generated@@90 $generated@@177 $generated@@2)) (= (type $generated@@197) $generated@@73)) ($generated@@160 $generated@@196 ($generated@@193 $generated@@197))) ($generated@@194 $generated@@196))
 :pattern ( ($generated@@160 $generated@@196 ($generated@@193 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ) (!  (=> (= (type $generated@@198) $generated@@91) (= ($generated@@160 $generated@@198 $generated@@154)  (or (= $generated@@198 $generated@@151) (= ($generated@@159 $generated@@198) $generated@@154))))
 :pattern ( ($generated@@160 $generated@@198 $generated@@154))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (= (type $generated@@199) $generated@@91) (= (type $generated@@200) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@199 $generated@@191 $generated@@200) ($generated@@88 $generated@@199 $generated@@150 $generated@@200)))
 :pattern ( ($generated@@88 $generated@@199 $generated@@191 $generated@@200))
)))
(assert (= (type $generated@@201) $generated@@73))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and (= (type $generated@@202) $generated@@91) (= (type $generated@@203) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@202 $generated@@201 $generated@@203) ($generated@@88 $generated@@202 $generated@@154 $generated@@203)))
 :pattern ( ($generated@@88 $generated@@202 $generated@@201 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@205 $generated@@206)) $generated@@168)
 :pattern ( ($generated@@204 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (and (and (= (type $generated@@207) $generated@@73) (= (type $generated@@208) $generated@@73)) (= (type $generated@@209) $generated@@177)) (= (type $generated@@210) $generated@@177)) (= ($generated@@160 ($generated@@204 $generated@@209 $generated@@210) ($generated@@167 $generated@@207 $generated@@208))  (and ($generated@@185 $generated@@209 $generated@@207) ($generated@@185 $generated@@210 $generated@@208))))
 :pattern ( ($generated@@160 ($generated@@204 $generated@@209 $generated@@210) ($generated@@167 $generated@@207 $generated@@208)))
)))
(assert (= ($generated@@83 $generated@@157) 0))
(assert (forall (($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@75 $generated@@212))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214))
)))
(assert (= ($generated@@211 $generated@@2 $generated@@66 $generated@@72) $generated@@157))
(assert  (not ($generated@@215 $generated@@157)))
(assert  (=> (<= 0 $generated@@182) (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (= (type $generated@@216) $generated@@73) (= (type $generated@@217) $generated@@177)) (or ($generated@@184 $generated@@216 ($generated@@186 $generated@@217)) (and (not (= 0 $generated@@182)) ($generated@@185 $generated@@217 $generated@@216)))) (= ($generated@@183 $generated@@216 ($generated@@186 $generated@@217)) ($generated@@0 ($generated@@186 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@183 $generated@@216 ($generated@@186 $generated@@217)))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@168) (= (type $generated@@219) $generated@@168)) (= ($generated@@174 $generated@@218 $generated@@219) (= $generated@@218 $generated@@219)))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (! (= (type ($generated@@220 $generated@@221)) $generated@@73)
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) ($generated@@90 $generated@@177 $generated@@4)) (= (type $generated@@223) $generated@@73)) (= ($generated@@160 $generated@@222 ($generated@@220 $generated@@223)) (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@177) ($generated@@0 ($generated@@95 $generated@@222 $generated@@224))) ($generated@@185 $generated@@224 $generated@@223))
 :pattern ( ($generated@@95 $generated@@222 $generated@@224))
))))
 :pattern ( ($generated@@160 $generated@@222 ($generated@@220 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@73)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@90 $generated@@177 $generated@@4)) (= (type $generated@@228) $generated@@73)) (= ($generated@@160 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@177) ($generated@@0 ($generated@@95 $generated@@227 $generated@@229))) ($generated@@185 $generated@@229 $generated@@228))
 :pattern ( ($generated@@95 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@160 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= ($generated@@186 $generated@@230) $generated@@230)
 :pattern ( ($generated@@186 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@232) $generated@@73) (= (type $generated@@233) $generated@@73)) (= (type $generated@@234) $generated@@177)) (= (type $generated@@235) $generated@@177)) (= (type $generated@@236) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@158 $generated@@236)) (= ($generated@@88 ($generated@@204 $generated@@234 $generated@@235) ($generated@@167 $generated@@232 $generated@@233) $generated@@236)  (and ($generated@@231 $generated@@234 $generated@@232 $generated@@236) ($generated@@231 $generated@@235 $generated@@233 $generated@@236))))
 :pattern ( ($generated@@88 ($generated@@204 $generated@@234 $generated@@235) ($generated@@167 $generated@@232 $generated@@233) $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@78)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@168) (= ($generated@@166 $generated@@239) (= ($generated@@237 $generated@@239) $generated@@62)))
 :pattern ( ($generated@@166 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@168) ($generated@@166 $generated@@240)) (exists (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (and (and (= (type $generated@@241) $generated@@177) (= (type $generated@@242) $generated@@177)) (= $generated@@240 ($generated@@204 $generated@@241 $generated@@242)))
 :no-pattern (type $generated@@241)
 :no-pattern (type $generated@@242)
 :no-pattern ($generated $generated@@241)
 :no-pattern ($generated@@0 $generated@@241)
 :no-pattern ($generated $generated@@242)
 :no-pattern ($generated@@0 $generated@@242)
)))
 :pattern ( ($generated@@166 $generated@@240))
)))
(assert  (and (and (forall (($generated@@247 T@T) ) (= ($generated@@1 ($generated@@245 $generated@@247)) 18)) (forall (($generated@@248 T@T) ) (! (= ($generated@@246 ($generated@@245 $generated@@248)) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
))) (forall (($generated@@249 T@T) ) (! (= (type ($generated@@243 $generated@@249)) ($generated@@245 $generated@@249))
 :pattern ( ($generated@@243 $generated@@249))
))))
(assert (forall (($generated@@250 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@250)) 0)
 :pattern ( ($generated@@243 $generated@@250))
)))
(assert  (=> (<= 0 $generated@@182) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (= (type $generated@@251) $generated@@73) (= (type $generated@@252) $generated@@177)) (or ($generated@@184 $generated@@251 $generated@@252) (and (not (= 0 $generated@@182)) ($generated@@185 $generated@@252 $generated@@251)))) true)
 :pattern ( ($generated@@183 $generated@@251 $generated@@252))
))))
(assert ($generated@@215 $generated@@60))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@177)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@73) (= (type $generated@@257) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@231 ($generated@@253 $generated@@255) $generated@@256 $generated@@257) ($generated@@88 $generated@@255 $generated@@256 $generated@@257)))
 :pattern ( ($generated@@231 ($generated@@253 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@259) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@260) $generated@@177)) (= (type $generated@@261) $generated@@73)) ($generated@@146 $generated@@258 $generated@@259)) ($generated@@231 $generated@@260 $generated@@261 $generated@@258)) ($generated@@231 $generated@@260 $generated@@261 $generated@@259))
 :pattern ( ($generated@@146 $generated@@258 $generated@@259) ($generated@@231 $generated@@260 $generated@@261 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@262) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@263) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@265) $generated@@73)) ($generated@@146 $generated@@262 $generated@@263)) ($generated@@88 $generated@@264 $generated@@265 $generated@@262)) ($generated@@88 $generated@@264 $generated@@265 $generated@@263))
 :pattern ( ($generated@@146 $generated@@262 $generated@@263) ($generated@@88 $generated@@264 $generated@@265 $generated@@262))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@267) $generated@@91)) (=> (and (and ($generated@@158 $generated@@266) (and (not (= $generated@@267 $generated@@151)) (= ($generated@@159 $generated@@267) $generated@@154))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@266 $generated@@267) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@266 $generated@@267) $generated@@157) $generated@@46 $generated@@266)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@266 $generated@@267) $generated@@157))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@90 $generated@@270 $generated@@2))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 ($generated@@93 (type $generated@@271))))
 (=> (= (type $generated@@271) ($generated@@90 $generated@@272 $generated@@2)) (and (= (= ($generated@@268 $generated@@271) 0) (= $generated@@271 ($generated@@269 $generated@@272))) (=> (not (= ($generated@@268 $generated@@271) 0)) (exists (($generated@@273 T@U) ) (!  (and (= (type $generated@@273) $generated@@272) (< 0 ($generated ($generated@@95 $generated@@271 $generated@@273))))
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
))))))
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert  (and (and (and (and (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@279 $generated@@280)) 19)) (forall (($generated@@281 T@T) ($generated@@282 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@281 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@276 $generated@@281 $generated@@282))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@276 $generated@@283 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@276 $generated@@283 $generated@@284))
))) (forall (($generated@@285 T@U) ) (! (let (($generated@@286 ($generated@@277 (type $generated@@285))))
(= (type ($generated@@274 $generated@@285)) ($generated@@90 $generated@@286 $generated@@4)))
 :pattern ( ($generated@@274 $generated@@285))
))) (forall (($generated@@287 T@T) ($generated@@288 T@T) ) (! (= (type ($generated@@275 $generated@@287 $generated@@288)) ($generated@@276 $generated@@287 $generated@@288))
 :pattern ( ($generated@@275 $generated@@287 $generated@@288))
))))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@T) ) (! (let (($generated@@291 (type $generated@@289)))
 (not ($generated@@0 ($generated@@95 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289))))
 :pattern ( (let (($generated@@291 (type $generated@@289)))
($generated@@95 ($generated@@274 ($generated@@275 $generated@@291 $generated@@290)) $generated@@289)))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 20)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@90 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@95 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@95 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@312) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@310 $generated@@311 $generated@@312)) (and ($generated@@146 $generated@@311 $generated@@312) (forall (($generated@@313 T@U) ($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@76 (type $generated@@314))))
 (=> (and (and (= (type $generated@@313) $generated@@91) (= (type $generated@@314) ($generated@@75 $generated@@315))) (not ($generated@@215 $generated@@314))) (= ($generated@@97 ($generated@@95 $generated@@311 $generated@@313) $generated@@314) ($generated@@97 ($generated@@95 $generated@@312 $generated@@313) $generated@@314))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@312 $generated@@313) $generated@@314))
))))
 :pattern ( ($generated@@310 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@93 (type $generated@@317))))
 (=> (and (= (type $generated@@317) ($generated@@90 $generated@@319 $generated@@4)) (= (type $generated@@318) ($generated@@90 $generated@@319 $generated@@4))) (= ($generated@@316 $generated@@317 $generated@@318) (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@319) (= ($generated@@0 ($generated@@95 $generated@@317 $generated@@320)) ($generated@@0 ($generated@@95 $generated@@318 $generated@@320))))
 :pattern ( ($generated@@95 $generated@@317 $generated@@320))
 :pattern ( ($generated@@95 $generated@@318 $generated@@320))
)))))
 :pattern ( ($generated@@316 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@93 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@90 $generated@@322 $generated@@2)) (= ($generated@@194 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@95 $generated@@321 $generated@@323))) (<= ($generated ($generated@@95 $generated@@321 $generated@@323)) ($generated@@268 $generated@@321))))
 :pattern ( ($generated@@95 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@194 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@177) ($generated@@185 $generated@@327 $generated@@150)) (and (= ($generated@@253 ($generated@@324 $generated@@91 $generated@@327)) $generated@@327) ($generated@@160 ($generated@@324 $generated@@91 $generated@@327) $generated@@150)))
 :pattern ( ($generated@@185 $generated@@327 $generated@@150))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@177) ($generated@@185 $generated@@328 $generated@@191)) (and (= ($generated@@253 ($generated@@324 $generated@@91 $generated@@328)) $generated@@328) ($generated@@160 ($generated@@324 $generated@@91 $generated@@328) $generated@@191)))
 :pattern ( ($generated@@185 $generated@@328 $generated@@191))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@177) ($generated@@185 $generated@@329 $generated@@154)) (and (= ($generated@@253 ($generated@@324 $generated@@91 $generated@@329)) $generated@@329) ($generated@@160 ($generated@@324 $generated@@91 $generated@@329) $generated@@154)))
 :pattern ( ($generated@@185 $generated@@329 $generated@@154))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@177) ($generated@@185 $generated@@330 $generated@@201)) (and (= ($generated@@253 ($generated@@324 $generated@@91 $generated@@330)) $generated@@330) ($generated@@160 ($generated@@324 $generated@@91 $generated@@330) $generated@@201)))
 :pattern ( ($generated@@185 $generated@@330 $generated@@201))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@91) (= ($generated@@160 $generated@@331 $generated@@191)  (and ($generated@@160 $generated@@331 $generated@@150) (not (= $generated@@331 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@331 $generated@@191))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@91) (= ($generated@@160 $generated@@332 $generated@@201)  (and ($generated@@160 $generated@@332 $generated@@154) (not (= $generated@@332 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@332 $generated@@201))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@278 (type $generated@@333))))
(let (($generated@@335 ($generated@@277 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@276 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@275 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@95 ($generated@@274 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@274 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@278 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@90 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@278 (type $generated@@340))))
(let (($generated@@342 ($generated@@277 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@276 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@275 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@95 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@95 ($generated@@292 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@292 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@296 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@90 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@296 (type $generated@@351))))
(let (($generated@@353 ($generated@@295 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@294 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@293 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@95 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@90 $generated@@177 $generated@@2)) (= (type $generated@@356) $generated@@73)) (= ($generated@@160 $generated@@355 ($generated@@193 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@177) (< 0 ($generated ($generated@@95 $generated@@355 $generated@@357)))) ($generated@@185 $generated@@357 $generated@@356))
 :pattern ( ($generated@@95 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@160 $generated@@355 ($generated@@193 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@90 $generated@@177 $generated@@4)) (= (type $generated@@359) $generated@@73)) (= (type $generated@@360) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@358 ($generated@@220 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@177) ($generated@@0 ($generated@@95 $generated@@358 $generated@@361))) ($generated@@231 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@95 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@88 $generated@@358 ($generated@@220 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@90 $generated@@177 $generated@@4)) (= (type $generated@@363) $generated@@73)) (= (type $generated@@364) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@362 ($generated@@225 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@177) ($generated@@0 ($generated@@95 $generated@@362 $generated@@365))) ($generated@@231 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@95 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@88 $generated@@362 ($generated@@225 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@95 ($generated@@269 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@95 ($generated@@269 $generated@@367) $generated@@366)))
)))
(assert  (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@368 $generated@@370)) ($generated@@90 $generated@@177 $generated@@4))
 :pattern ( ($generated@@368 $generated@@370))
)) (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@278 (type $generated@@371))))
(let (($generated@@373 ($generated@@277 (type $generated@@371))))
(= (type ($generated@@369 $generated@@371)) ($generated@@90 $generated@@373 $generated@@372))))
 :pattern ( ($generated@@369 $generated@@371))
))))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@276 $generated@@177 $generated@@177)) (= (type $generated@@375) $generated@@177)) (= ($generated@@0 ($generated@@95 ($generated@@368 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@95 ($generated@@274 $generated@@374) ($generated@@175 ($generated@@324 $generated@@168 $generated@@375)))) (= ($generated@@95 ($generated@@369 $generated@@374) ($generated@@175 ($generated@@324 $generated@@168 $generated@@375))) ($generated@@176 ($generated@@324 $generated@@168 $generated@@375))))))
 :pattern ( ($generated@@95 ($generated@@368 $generated@@374) $generated@@375))
)))
(assert  (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@378)) ($generated@@90 $generated@@177 $generated@@4))
 :pattern ( ($generated@@376 $generated@@378))
)) (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@296 (type $generated@@379))))
(let (($generated@@381 ($generated@@295 (type $generated@@379))))
(= (type ($generated@@377 $generated@@379)) ($generated@@90 $generated@@381 $generated@@380))))
 :pattern ( ($generated@@377 $generated@@379))
))))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@294 $generated@@177 $generated@@177)) (= (type $generated@@383) $generated@@177)) (= ($generated@@0 ($generated@@95 ($generated@@376 $generated@@382) $generated@@383))  (and ($generated@@0 ($generated@@95 ($generated@@292 $generated@@382) ($generated@@175 ($generated@@324 $generated@@168 $generated@@383)))) (= ($generated@@95 ($generated@@377 $generated@@382) ($generated@@175 ($generated@@324 $generated@@168 $generated@@383))) ($generated@@176 ($generated@@324 $generated@@168 $generated@@383))))))
 :pattern ( ($generated@@95 ($generated@@376 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@277 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@276 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@95 ($generated@@337 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@95 ($generated@@274 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@95 ($generated@@369 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@95 ($generated@@274 $generated@@384) $generated@@388))
 :pattern ( ($generated@@95 ($generated@@369 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@95 ($generated@@337 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@295 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@294 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@95 ($generated@@348 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@95 ($generated@@292 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@95 ($generated@@377 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@95 ($generated@@292 $generated@@389) $generated@@393))
 :pattern ( ($generated@@95 ($generated@@377 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@95 ($generated@@348 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@73)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@276 $generated@@177 $generated@@177)) (= (type $generated@@398) $generated@@73)) (= (type $generated@@399) $generated@@73)) (= (type $generated@@400) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@177) ($generated@@0 ($generated@@95 ($generated@@274 $generated@@397) $generated@@401))) (and ($generated@@231 ($generated@@95 ($generated@@369 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@231 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@95 ($generated@@369 $generated@@397) $generated@@401))
 :pattern ( ($generated@@95 ($generated@@274 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@88 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@403 $generated@@404)) $generated@@73)
 :pattern ( ($generated@@402 $generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) ($generated@@294 $generated@@177 $generated@@177)) (= (type $generated@@406) $generated@@73)) (= (type $generated@@407) $generated@@73)) (= (type $generated@@408) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@177) ($generated@@0 ($generated@@95 ($generated@@292 $generated@@405) $generated@@409))) (and ($generated@@231 ($generated@@95 ($generated@@377 $generated@@405) $generated@@409) $generated@@407 $generated@@408) ($generated@@231 $generated@@409 $generated@@406 $generated@@408)))
 :pattern ( ($generated@@95 ($generated@@377 $generated@@405) $generated@@409))
 :pattern ( ($generated@@95 ($generated@@292 $generated@@405) $generated@@409))
))))
 :pattern ( ($generated@@88 $generated@@405 ($generated@@402 $generated@@406 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@93 (type $generated@@410))))
 (=> (and (and (= (type $generated@@410) ($generated@@90 $generated@@412 $generated@@4)) (= (type $generated@@411) ($generated@@90 $generated@@412 $generated@@4))) ($generated@@316 $generated@@410 $generated@@411)) (= $generated@@410 $generated@@411)))
 :pattern ( ($generated@@316 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@413) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@414) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@415) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@413 $generated@@415))) (and ($generated@@146 $generated@@413 $generated@@414) ($generated@@146 $generated@@414 $generated@@415))) ($generated@@146 $generated@@413 $generated@@415))
 :pattern ( ($generated@@146 $generated@@413 $generated@@414) ($generated@@146 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@90 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@296 (type $generated@@418))))
(let (($generated@@420 ($generated@@295 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@294 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@293 $generated@@420 $generated@@419)) (= ($generated@@292 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@292 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@296 (type $generated@@421))))
(let (($generated@@423 ($generated@@295 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@294 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@293 $generated@@423 $generated@@422)) (= ($generated@@348 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@348 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@296 (type $generated@@424))))
(let (($generated@@426 ($generated@@295 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@294 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@293 $generated@@426 $generated@@425)) (= ($generated@@376 $generated@@424) ($generated@@416 $generated@@177))))))
 :pattern ( ($generated@@376 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@278 (type $generated@@427))))
(let (($generated@@429 ($generated@@277 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@276 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@275 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@177) (= (type $generated@@431) $generated@@177)) ($generated@@0 ($generated@@95 ($generated@@368 $generated@@427) ($generated@@253 ($generated@@204 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@368 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@296 (type $generated@@432))))
(let (($generated@@434 ($generated@@295 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@294 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@293 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@177) (= (type $generated@@436) $generated@@177)) ($generated@@0 ($generated@@95 ($generated@@376 $generated@@432) ($generated@@253 ($generated@@204 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@376 $generated@@432))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@79)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@T) ) (!  (=> (and (= (type $generated@@439) $generated@@79) (= (type $generated@@440) $generated@@77)) (and (= ($generated@@437 ($generated@@211 $generated@@441 $generated@@439 $generated@@440)) $generated@@439) (= ($generated@@86 ($generated@@211 $generated@@441 $generated@@439 $generated@@440)) $generated@@440)))
 :pattern ( ($generated@@211 $generated@@441 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@177) ($generated@@185 $generated@@442 $generated@@46)) (and (= ($generated@@253 ($generated@@324 $generated@@2 $generated@@442)) $generated@@442) ($generated@@160 ($generated@@324 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@185 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@177) ($generated@@185 $generated@@443 $generated@@47)) (and (= ($generated@@253 ($generated@@324 $generated@@3 $generated@@443)) $generated@@443) ($generated@@160 ($generated@@324 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@185 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@177) ($generated@@185 $generated@@444 $generated@@44)) (and (= ($generated@@253 ($generated@@324 $generated@@4 $generated@@444)) $generated@@444) ($generated@@160 ($generated@@324 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@185 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 21))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@177) ($generated@@185 $generated@@446 $generated@@45)) (and (= ($generated@@253 ($generated@@324 $generated@@445 $generated@@446)) $generated@@446) ($generated@@160 ($generated@@324 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@185 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@73) (= ($generated@@185 ($generated@@253 $generated@@447) $generated@@448) ($generated@@160 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@185 ($generated@@253 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@93 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@90 $generated@@450 $generated@@2)) (<= 0 ($generated@@268 $generated@@449))))
 :pattern ( ($generated@@268 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@246 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@245 $generated@@452)) (<= 0 ($generated@@244 $generated@@451))))
 :pattern ( ($generated@@244 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@73)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@73) (= (type $generated@@456) $generated@@73)) (= ($generated@@453 ($generated@@394 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@394 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@73)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@73) (= (type $generated@@460) $generated@@73)) (= ($generated@@457 ($generated@@394 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@394 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@73) (= (type $generated@@462) $generated@@73)) (= ($generated@@84 ($generated@@394 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@394 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@73)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@73) (= (type $generated@@466) $generated@@73)) (= ($generated@@463 ($generated@@402 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@402 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@73)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@73) (= (type $generated@@470) $generated@@73)) (= ($generated@@467 ($generated@@402 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@402 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@73) (= (type $generated@@472) $generated@@73)) (= ($generated@@84 ($generated@@402 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@402 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@177) (= (type $generated@@474) $generated@@177)) (= ($generated@@237 ($generated@@204 $generated@@473 $generated@@474)) $generated@@62))
 :pattern ( ($generated@@204 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@73)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@73) (= (type $generated@@478) $generated@@73)) (= ($generated@@475 ($generated@@167 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@167 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@73)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@73) (= (type $generated@@482) $generated@@73)) (= ($generated@@479 ($generated@@167 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@167 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@177) (= (type $generated@@484) $generated@@177)) (= ($generated@@175 ($generated@@204 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@204 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@177) (= (type $generated@@486) $generated@@177)) (= ($generated@@176 ($generated@@204 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@204 $generated@@485 $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) $generated@@73)
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ($generated@@491 Int) ) (! (let (($generated@@492 ($generated@@246 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490 $generated@@491)) $generated@@492))
 :pattern ( ($generated@@488 $generated@@490 $generated@@491))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@245 $generated@@177)) (= (type $generated@@494) $generated@@73)) (= (type $generated@@495) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@493 ($generated@@487 $generated@@494) $generated@@495) (forall (($generated@@496 Int) ) (!  (=> (and (<= 0 $generated@@496) (< $generated@@496 ($generated@@244 $generated@@493))) ($generated@@231 ($generated@@488 $generated@@493 $generated@@496) $generated@@494 $generated@@495))
 :pattern ( ($generated@@488 $generated@@493 $generated@@496))
))))
 :pattern ( ($generated@@88 $generated@@493 ($generated@@487 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 Int) ) (! (= ($generated@@497 ($generated@@89 $generated@@498)) $generated@@498)
 :pattern ( ($generated@@89 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@73)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@73) (= ($generated@@499 ($generated@@220 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@220 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@73) (= ($generated@@84 ($generated@@220 $generated@@502)) $generated@@54))
 :pattern ( ($generated@@220 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@73)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@73) (= ($generated@@503 ($generated@@225 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@225 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@73) (= ($generated@@84 ($generated@@225 $generated@@506)) $generated@@55))
 :pattern ( ($generated@@225 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@73)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@73) (= ($generated@@507 ($generated@@193 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@193 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@73) (= ($generated@@84 ($generated@@193 $generated@@510)) $generated@@56))
 :pattern ( ($generated@@193 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@73) (= ($generated@@511 ($generated@@487 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@487 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@73) (= ($generated@@84 ($generated@@487 $generated@@514)) $generated@@57))
 :pattern ( ($generated@@487 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@324 $generated@@516 ($generated@@253 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@253 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@276 $generated@@177 $generated@@177)) (= (type $generated@@518) $generated@@73)) (= (type $generated@@519) $generated@@73)) (= ($generated@@160 $generated@@517 ($generated@@394 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@177) ($generated@@0 ($generated@@95 ($generated@@274 $generated@@517) $generated@@520))) (and ($generated@@185 ($generated@@95 ($generated@@369 $generated@@517) $generated@@520) $generated@@519) ($generated@@185 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@95 ($generated@@369 $generated@@517) $generated@@520))
 :pattern ( ($generated@@95 ($generated@@274 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@160 $generated@@517 ($generated@@394 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@294 $generated@@177 $generated@@177)) (= (type $generated@@522) $generated@@73)) (= (type $generated@@523) $generated@@73)) (= ($generated@@160 $generated@@521 ($generated@@402 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@177) ($generated@@0 ($generated@@95 ($generated@@292 $generated@@521) $generated@@524))) (and ($generated@@185 ($generated@@95 ($generated@@377 $generated@@521) $generated@@524) $generated@@523) ($generated@@185 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@95 ($generated@@377 $generated@@521) $generated@@524))
 :pattern ( ($generated@@95 ($generated@@292 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@160 $generated@@521 ($generated@@402 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@177) (= (type $generated@@528) $generated@@177)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@204 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@204 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@177) (= (type $generated@@530) $generated@@177)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@204 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@204 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@177) (= (type $generated@@532) $generated@@73)) (= (type $generated@@533) $generated@@73)) ($generated@@185 $generated@@531 ($generated@@394 $generated@@532 $generated@@533))) (and (= ($generated@@253 ($generated@@324 ($generated@@276 $generated@@177 $generated@@177) $generated@@531)) $generated@@531) ($generated@@160 ($generated@@324 ($generated@@276 $generated@@177 $generated@@177) $generated@@531) ($generated@@394 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@185 $generated@@531 ($generated@@394 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@177) (= (type $generated@@535) $generated@@73)) (= (type $generated@@536) $generated@@73)) ($generated@@185 $generated@@534 ($generated@@402 $generated@@535 $generated@@536))) (and (= ($generated@@253 ($generated@@324 ($generated@@294 $generated@@177 $generated@@177) $generated@@534)) $generated@@534) ($generated@@160 ($generated@@324 ($generated@@294 $generated@@177 $generated@@177) $generated@@534) ($generated@@402 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@185 $generated@@534 ($generated@@402 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@73) (= (type $generated@@538) $generated@@73)) (= (type $generated@@539) $generated@@177)) ($generated@@185 $generated@@539 ($generated@@167 $generated@@537 $generated@@538))) (and (= ($generated@@253 ($generated@@324 $generated@@168 $generated@@539)) $generated@@539) ($generated@@160 ($generated@@324 $generated@@168 $generated@@539) ($generated@@167 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@185 $generated@@539 ($generated@@167 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@541 T@T) ) (! (= (type ($generated@@540 $generated@@541)) ($generated@@90 $generated@@541 $generated@@4))
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@95 ($generated@@540 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@95 ($generated@@540 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@95 ($generated@@416 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@95 ($generated@@416 $generated@@545) $generated@@544)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@552 T@T) ($generated@@553 T@T) ) (= ($generated@@1 ($generated@@548 $generated@@552 $generated@@553)) 22)) (forall (($generated@@554 T@T) ($generated@@555 T@T) ) (! (= ($generated@@549 ($generated@@548 $generated@@554 $generated@@555)) $generated@@554)
 :pattern ( ($generated@@548 $generated@@554 $generated@@555))
))) (forall (($generated@@556 T@T) ($generated@@557 T@T) ) (! (= ($generated@@550 ($generated@@548 $generated@@556 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@548 $generated@@556 $generated@@557))
))) (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@550 (type $generated@@558))))
(= (type ($generated@@546 $generated@@558 $generated@@559 $generated@@560)) $generated@@561))
 :pattern ( ($generated@@546 $generated@@558 $generated@@559 $generated@@560))
))) (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
(let (($generated@@567 (type $generated@@563)))
(= (type ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565)) ($generated@@548 $generated@@567 $generated@@566))))
 :pattern ( ($generated@@551 $generated@@562 $generated@@563 $generated@@564 $generated@@565))
))) (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@550 (type $generated@@568))))
 (=> (= (type $generated@@571) $generated@@572) (= ($generated@@546 ($generated@@551 $generated@@568 $generated@@569 $generated@@570 $generated@@571) $generated@@569 $generated@@570) $generated@@571)))
 :weight 0
))) (and (and (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (or (= $generated@@575 $generated@@577) (= ($generated@@546 ($generated@@551 $generated@@574 $generated@@575 $generated@@576 $generated@@573) $generated@@577 $generated@@578) ($generated@@546 $generated@@574 $generated@@577 $generated@@578)))
 :weight 0
)) (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (or (= $generated@@582 $generated@@584) (= ($generated@@546 ($generated@@551 $generated@@580 $generated@@581 $generated@@582 $generated@@579) $generated@@583 $generated@@584) ($generated@@546 $generated@@580 $generated@@583 $generated@@584)))
 :weight 0
))) (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (or true (= ($generated@@546 ($generated@@551 $generated@@586 $generated@@587 $generated@@588 $generated@@585) $generated@@589 $generated@@590) ($generated@@546 $generated@@586 $generated@@589 $generated@@590)))
 :weight 0
)))) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (= (type ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594)) ($generated@@548 $generated@@91 $generated@@4))
 :pattern ( ($generated@@547 $generated@@591 $generated@@592 $generated@@593 $generated@@594))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@76 (type $generated@@600))))
 (=> (and (and (and (and (and (= (type $generated@@595) $generated@@91) (= (type $generated@@596) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@597) ($generated@@75 $generated@@4))) (= (type $generated@@598) $generated@@91)) (= (type $generated@@599) $generated@@91)) (= (type $generated@@600) ($generated@@75 $generated@@601))) (= ($generated@@0 ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))  (=> (and (not (= $generated@@599 $generated@@595)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@596 $generated@@599) $generated@@597))) (= $generated@@599 $generated@@598)))))
 :pattern ( ($generated@@546 ($generated@@547 $generated@@595 $generated@@596 $generated@@597 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@603 T@U) ) (! (= (type ($generated@@602 $generated@@603)) $generated@@80)
 :pattern ( ($generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@73) (= (type $generated@@605) $generated@@73)) (and (= ($generated@@84 ($generated@@167 $generated@@604 $generated@@605)) $generated@@63) (= ($generated@@602 ($generated@@167 $generated@@604 $generated@@605)) $generated@@69)))
 :pattern ( ($generated@@167 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@168) (= ($generated@@525 ($generated@@253 $generated@@606)) ($generated@@526 $generated@@606)))
 :pattern ( ($generated@@525 ($generated@@253 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@177) ($generated@@185 $generated@@607 ($generated@@89 0))) (and (= ($generated@@253 ($generated@@324 $generated@@2 $generated@@607)) $generated@@607) ($generated@@160 ($generated@@324 ($generated@@90 $generated@@177 $generated@@4) $generated@@607) ($generated@@89 0))))
 :pattern ( ($generated@@185 $generated@@607 ($generated@@89 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@177) (= (type $generated@@609) $generated@@73)) ($generated@@185 $generated@@608 ($generated@@220 $generated@@609))) (and (= ($generated@@253 ($generated@@324 ($generated@@90 $generated@@177 $generated@@4) $generated@@608)) $generated@@608) ($generated@@160 ($generated@@324 ($generated@@90 $generated@@177 $generated@@4) $generated@@608) ($generated@@220 $generated@@609))))
 :pattern ( ($generated@@185 $generated@@608 ($generated@@220 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@177) (= (type $generated@@611) $generated@@73)) ($generated@@185 $generated@@610 ($generated@@225 $generated@@611))) (and (= ($generated@@253 ($generated@@324 ($generated@@90 $generated@@177 $generated@@4) $generated@@610)) $generated@@610) ($generated@@160 ($generated@@324 ($generated@@90 $generated@@177 $generated@@4) $generated@@610) ($generated@@225 $generated@@611))))
 :pattern ( ($generated@@185 $generated@@610 ($generated@@225 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@177) (= (type $generated@@613) $generated@@73)) ($generated@@185 $generated@@612 ($generated@@193 $generated@@613))) (and (= ($generated@@253 ($generated@@324 ($generated@@90 $generated@@177 $generated@@2) $generated@@612)) $generated@@612) ($generated@@160 ($generated@@324 ($generated@@90 $generated@@177 $generated@@2) $generated@@612) ($generated@@193 $generated@@613))))
 :pattern ( ($generated@@185 $generated@@612 ($generated@@193 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@177) (= (type $generated@@615) $generated@@73)) ($generated@@185 $generated@@614 ($generated@@487 $generated@@615))) (and (= ($generated@@253 ($generated@@324 ($generated@@245 $generated@@177) $generated@@614)) $generated@@614) ($generated@@160 ($generated@@324 ($generated@@245 $generated@@177) $generated@@614) ($generated@@487 $generated@@615))))
 :pattern ( ($generated@@185 $generated@@614 ($generated@@487 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@91) (= (type $generated@@617) ($generated@@90 $generated@@91 $generated@@92))) (and (not (= $generated@@616 $generated@@151)) ($generated@@88 $generated@@616 $generated@@154 $generated@@617))) ($generated@@88 $generated@@616 $generated@@191 $generated@@617))
 :pattern ( ($generated@@88 $generated@@616 $generated@@154 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
 (=> (and (and (and (= (type $generated@@618) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@619) $generated@@91)) (= (type $generated@@620) ($generated@@75 $generated@@622))) ($generated@@158 ($generated@@96 $generated@@618 $generated@@619 ($generated@@98 ($generated@@95 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))) ($generated@@146 $generated@@618 ($generated@@96 $generated@@618 $generated@@619 ($generated@@98 ($generated@@95 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@96 $generated@@618 $generated@@619 ($generated@@98 ($generated@@95 $generated@@618 $generated@@619) $generated@@620 $generated@@621)))
)))
(assert (= ($generated@@84 $generated@@150) $generated@@64))
(assert (= ($generated@@602 $generated@@150) $generated@@70))
(assert (= ($generated@@84 $generated@@191) $generated@@65))
(assert (= ($generated@@602 $generated@@191) $generated@@70))
(assert (= ($generated@@84 $generated@@154) $generated@@67))
(assert (= ($generated@@602 $generated@@154) $generated@@71))
(assert (= ($generated@@84 $generated@@201) $generated@@68))
(assert (= ($generated@@602 $generated@@201) $generated@@71))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@90 $generated@@177 $generated@@2)) (= (type $generated@@624) $generated@@73)) (= (type $generated@@625) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@623 ($generated@@193 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@177) (< 0 ($generated ($generated@@95 $generated@@623 $generated@@626)))) ($generated@@231 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@95 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@88 $generated@@623 ($generated@@193 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@91) (= ($generated@@160 $generated@@627 $generated@@150)  (or (= $generated@@627 $generated@@151) ($generated@@165 ($generated@@159 $generated@@627)))))
 :pattern ( ($generated@@160 $generated@@627 $generated@@150))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@168) (= (type $generated@@629) $generated@@73)) (= (type $generated@@630) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@158 $generated@@630) (and ($generated@@166 $generated@@628) (exists (($generated@@631 T@U) ) (!  (and (= (type $generated@@631) $generated@@73) ($generated@@88 $generated@@628 ($generated@@167 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@88 $generated@@628 ($generated@@167 $generated@@629 $generated@@631) $generated@@630))
))))) ($generated@@231 ($generated@@175 $generated@@628) $generated@@629 $generated@@630))
 :pattern ( ($generated@@231 ($generated@@175 $generated@@628) $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@168) (= (type $generated@@633) $generated@@73)) (= (type $generated@@634) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@158 $generated@@634) (and ($generated@@166 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@73) ($generated@@88 $generated@@632 ($generated@@167 $generated@@635 $generated@@633) $generated@@634))
 :pattern ( ($generated@@88 $generated@@632 ($generated@@167 $generated@@635 $generated@@633) $generated@@634))
))))) ($generated@@231 ($generated@@176 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@231 ($generated@@176 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@177) (= (type $generated@@637) $generated@@177)) (= ($generated@@204 ($generated@@186 $generated@@636) ($generated@@186 $generated@@637)) ($generated@@186 ($generated@@204 $generated@@636 $generated@@637))))
 :pattern ( ($generated@@204 ($generated@@186 $generated@@636) ($generated@@186 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@253 ($generated@@186 $generated@@638)) ($generated@@186 ($generated@@253 $generated@@638)))
 :pattern ( ($generated@@253 ($generated@@186 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@246 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@245 $generated@@640)) (= ($generated@@244 $generated@@639) 0)) (= $generated@@639 ($generated@@243 $generated@@640))))
 :pattern ( ($generated@@244 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@90 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@268 ($generated@@96 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@268 $generated@@641) ($generated ($generated@@95 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@268 ($generated@@96 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (! (= (type ($generated@@645 $generated@@646 $generated@@647 $generated@@648)) ($generated@@90 $generated@@177 $generated@@4))
 :pattern ( ($generated@@645 $generated@@646 $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) $generated@@73) (= (type $generated@@650) $generated@@91)) (= (type $generated@@651) $generated@@73)) (= (type $generated@@652) $generated@@177)) (= ($generated@@0 ($generated@@95 ($generated@@645 $generated@@649 $generated@@650 $generated@@651) $generated@@652))  (and ($generated@@185 $generated@@652 $generated@@649) (and (= ($generated@@324 $generated@@91 $generated@@652) $generated@@650) ($generated@@183 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@95 ($generated@@645 $generated@@649 $generated@@650 $generated@@651) $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@654) $generated@@2)) ($generated@@88 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@88 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@656) $generated@@3)) ($generated@@88 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@88 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@658) $generated@@4)) ($generated@@88 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@88 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@660) $generated@@445)) ($generated@@88 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@88 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@662) $generated@@177)) ($generated@@88 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@88 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@245 $generated@@177)) (= (type $generated@@664) $generated@@73)) (= ($generated@@160 $generated@@663 ($generated@@487 $generated@@664)) (forall (($generated@@665 Int) ) (!  (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@244 $generated@@663))) ($generated@@185 ($generated@@488 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@488 $generated@@663 $generated@@665))
))))
 :pattern ( ($generated@@160 $generated@@663 ($generated@@487 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ) (!  (=> (= (type $generated@@667) ($generated@@245 $generated@@177)) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@244 $generated@@667))) (< ($generated@@526 ($generated@@324 $generated@@168 ($generated@@488 $generated@@667 $generated@@668))) ($generated@@666 $generated@@667))))
 :pattern ( ($generated@@526 ($generated@@324 $generated@@168 ($generated@@488 $generated@@667 $generated@@668))))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@276 $generated@@177 $generated@@177)) (= (type $generated@@670) $generated@@73)) (= (type $generated@@671) $generated@@73)) ($generated@@160 $generated@@669 ($generated@@394 $generated@@670 $generated@@671))) (and (and ($generated@@160 ($generated@@274 $generated@@669) ($generated@@220 $generated@@670)) ($generated@@160 ($generated@@337 $generated@@669) ($generated@@220 $generated@@671))) ($generated@@160 ($generated@@368 $generated@@669) ($generated@@220 ($generated@@167 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@160 $generated@@669 ($generated@@394 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@294 $generated@@177 $generated@@177)) (= (type $generated@@673) $generated@@73)) (= (type $generated@@674) $generated@@73)) ($generated@@160 $generated@@672 ($generated@@402 $generated@@673 $generated@@674))) (and (and ($generated@@160 ($generated@@292 $generated@@672) ($generated@@225 $generated@@673)) ($generated@@160 ($generated@@348 $generated@@672) ($generated@@225 $generated@@674))) ($generated@@160 ($generated@@376 $generated@@672) ($generated@@225 ($generated@@167 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@160 $generated@@672 ($generated@@402 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@2) ($generated@@160 $generated@@675 $generated@@46))
 :pattern ( ($generated@@160 $generated@@675 $generated@@46))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@3) ($generated@@160 $generated@@676 $generated@@47))
 :pattern ( ($generated@@160 $generated@@676 $generated@@47))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@4) ($generated@@160 $generated@@677 $generated@@44))
 :pattern ( ($generated@@160 $generated@@677 $generated@@44))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@445) ($generated@@160 $generated@@678 $generated@@45))
 :pattern ( ($generated@@160 $generated@@678 $generated@@45))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@177) ($generated@@160 $generated@@679 $generated@@48))
 :pattern ( ($generated@@160 $generated@@679 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 (T@U) Bool)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () Bool)
(declare-fun $generated@@690 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@680) ($generated@@90 $generated@@177 $generated@@4)) (= (type $generated@@681) $generated@@91)) (= (type $generated@@682) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@683) ($generated@@548 $generated@@91 $generated@@4))) (= (type $generated@@684) $generated@@91)) (= (type $generated@@685) $generated@@91)) (= (type $generated@@686) $generated@@91)) (= (type $generated@@688) ($generated@@90 $generated@@177 $generated@@4))) (= (type $generated@@690) $generated@@91)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@691  (and (=> (= (ControlFlow 0 3) (- 0 10)) (or (and ($generated@@160 $generated@@151 $generated@@201) ($generated@@0 ($generated@@95 $generated@@680 ($generated@@253 $generated@@151)))) (exists (($generated@@692 T@U) ) (!  (and (= (type $generated@@692) $generated@@91) (and ($generated@@160 $generated@@692 $generated@@201) ($generated@@0 ($generated@@95 $generated@@680 ($generated@@253 $generated@@692)))))
 :no-pattern (type $generated@@692)
 :no-pattern ($generated $generated@@692)
 :no-pattern ($generated@@0 $generated@@692)
)))) (=> (or (and ($generated@@160 $generated@@151 $generated@@201) ($generated@@0 ($generated@@95 $generated@@680 ($generated@@253 $generated@@151)))) (exists (($generated@@693 T@U) ) (!  (and (= (type $generated@@693) $generated@@91) (and ($generated@@160 $generated@@693 $generated@@201) ($generated@@0 ($generated@@95 $generated@@680 ($generated@@253 $generated@@693)))))
 :no-pattern (type $generated@@693)
 :no-pattern ($generated $generated@@693)
 :no-pattern ($generated@@0 $generated@@693)
))) (=> (and (=> true (and ($generated@@160 $generated@@681 $generated@@201) ($generated@@88 $generated@@681 $generated@@201 $generated@@682))) ($generated@@0 ($generated@@95 $generated@@680 ($generated@@253 $generated@@681)))) (and (=> (= (ControlFlow 0 3) (- 0 9)) true) (and (=> (= (ControlFlow 0 3) (- 0 8)) (not (= $generated@@681 $generated@@151))) (and (=> (= (ControlFlow 0 3) (- 0 7)) true) (and (=> (= (ControlFlow 0 3) (- 0 6)) (not (= $generated@@681 $generated@@151))) (=> (not (= $generated@@681 $generated@@151)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@0 ($generated@@546 $generated@@683 $generated@@681 $generated@@157))) (=> ($generated@@0 ($generated@@546 $generated@@683 $generated@@681 $generated@@157)) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (=> (= (ControlFlow 0 3) (- 0 2)) (not (= $generated@@681 $generated@@151))))))))))))))))
(let (($generated@@694  (=> (and (not (and ($generated@@160 $generated@@684 $generated@@201) ($generated@@88 $generated@@684 $generated@@201 $generated@@682))) (= (ControlFlow 0 12) 3)) $generated@@691)))
(let (($generated@@695  (=> (and (and ($generated@@160 $generated@@684 $generated@@201) ($generated@@88 $generated@@684 $generated@@201 $generated@@682)) (= (ControlFlow 0 11) 3)) $generated@@691)))
(let (($generated@@696  (=> (not ($generated@@316 $generated@@680 ($generated@@540 $generated@@177))) (and (=> (= (ControlFlow 0 13) 11) $generated@@695) (=> (= (ControlFlow 0 13) 12) $generated@@694)))))
(let (($generated@@697 true))
(let (($generated@@698  (=> (and (forall (($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@91) ($generated@@160 $generated@@699 $generated@@201)) (= $generated@@699 $generated@@685)) ($generated@@184 $generated@@201 ($generated@@253 $generated@@699)))
 :pattern ( ($generated@@183 $generated@@201 ($generated@@253 $generated@@699)))
)) (= $generated@@680 ($generated@@645 $generated@@201 $generated@@685 $generated@@201))) (and (=> (= (ControlFlow 0 14) 1) $generated@@697) (=> (= (ControlFlow 0 14) 13) $generated@@696)))))
(let (($generated@@700  (=> (and (not (and (= $generated@@686 $generated@@685) ($generated@@183 $generated@@201 ($generated@@253 $generated@@686)))) (= (ControlFlow 0 17) 14)) $generated@@698)))
(let (($generated@@701  (=> (and (and (= $generated@@686 $generated@@685) ($generated@@183 $generated@@201 ($generated@@253 $generated@@686))) (= (ControlFlow 0 16) 14)) $generated@@698)))
(let (($generated@@702  (=> (not (= $generated@@686 $generated@@685)) (and (=> (= (ControlFlow 0 19) 16) $generated@@701) (=> (= (ControlFlow 0 19) 17) $generated@@700)))))
(let (($generated@@703  (=> (= $generated@@686 $generated@@685) (=> (and ($generated@@88 $generated@@686 $generated@@201 $generated@@682) ($generated@@184 $generated@@201 ($generated@@253 $generated@@686))) (and (=> (= (ControlFlow 0 18) 16) $generated@@701) (=> (= (ControlFlow 0 18) 17) $generated@@700))))))
(let (($generated@@704  (=> (and ($generated@@160 $generated@@686 $generated@@201) ($generated@@88 $generated@@686 $generated@@201 $generated@@682)) (and (=> (= (ControlFlow 0 20) 18) $generated@@703) (=> (= (ControlFlow 0 20) 19) $generated@@702)))))
(let (($generated@@705  (=> (and (not (and ($generated@@160 $generated@@686 $generated@@201) ($generated@@88 $generated@@686 $generated@@201 $generated@@682))) (= (ControlFlow 0 15) 14)) $generated@@698)))
(let (($generated@@706  (=> (= $generated@@683 ($generated@@547 $generated@@151 $generated@@682 $generated@@60 $generated@@685)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (not (= $generated@@685 $generated@@151))) (and (=> (= (ControlFlow 0 21) 20) $generated@@704) (=> (= (ControlFlow 0 21) 15) $generated@@705))))))
(let (($generated@@707  (=> (and (and ($generated@@158 $generated@@682) ($generated@@687 $generated@@682)) (and ($generated@@160 $generated@@685 $generated@@191) ($generated@@88 $generated@@685 $generated@@191 $generated@@682))) (=> (and (and (and ($generated@@160 $generated@@688 ($generated@@220 $generated@@201)) ($generated@@88 $generated@@688 ($generated@@220 $generated@@201) $generated@@682)) true) (and (and (=> $generated@@689 (and ($generated@@160 $generated@@690 $generated@@201) ($generated@@88 $generated@@690 $generated@@201 $generated@@682))) true) (and (= 1 $generated@@182) (= (ControlFlow 0 23) 21)))) $generated@@706))))
$generated@@707)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@90 (T@U) Int)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U) T@U)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@187 (T@U T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@205 (T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@269 (T@U T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 (T@T T@U T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@295 (Int) Int)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (T@U T@U T@U) Bool)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@T) T@U)
(declare-fun $generated@@364 (T@T T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@380 (T@U T@U) Bool)
(declare-fun $generated@@389 (T@T T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@472 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@T) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 () T@T)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@555 (T@U Int) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@611 (T@U) T@U)
(declare-fun $generated@@670 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@80) 6) (= (type $generated@@44) $generated@@80)) (= (type $generated@@45) $generated@@80)) (= (type $generated@@46) $generated@@80)) (= (type $generated@@47) $generated@@80)) (= (type $generated@@48) $generated@@80)) (= ($generated@@1 $generated@@81) 7)) (= (type $generated@@49) $generated@@81)) (= (type $generated@@50) $generated@@81)) (= (type $generated@@51) $generated@@81)) (= (type $generated@@52) $generated@@81)) (= (type $generated@@53) $generated@@81)) (= (type $generated@@54) $generated@@81)) (= (type $generated@@55) $generated@@81)) (= (type $generated@@56) $generated@@81)) (= (type $generated@@57) $generated@@81)) (= (type $generated@@58) $generated@@81)) (= (type $generated@@59) $generated@@81)) (forall (($generated@@88 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@88)) 8))) (forall (($generated@@89 T@T) ) (! (= ($generated@@83 ($generated@@82 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@82 $generated@@89))
))) (= (type $generated@@60) ($generated@@82 $generated@@4))) (= ($generated@@1 $generated@@84) 9)) (= (type $generated@@61) $generated@@84)) (= ($generated@@1 $generated@@85) 10)) (= (type $generated@@62) $generated@@85)) (= (type $generated@@63) $generated@@81)) (= ($generated@@1 $generated@@86) 11)) (= (type $generated@@64) $generated@@86)) (= (type $generated@@65) $generated@@81)) (= (type $generated@@66) $generated@@81)) (= (type $generated@@67) $generated@@86)) (= (type $generated@@68) $generated@@81)) (= (type $generated@@69) $generated@@81)) (= (type $generated@@70) $generated@@86)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@81)) (= ($generated@@1 $generated@@87) 12)) (= (type $generated@@73) $generated@@87)) (= (type $generated@@74) $generated@@87)) (= (type $generated@@75) $generated@@87)) (= (type $generated@@76) $generated@@87)) (= (type $generated@@77) $generated@@84)) (= (type $generated@@78) $generated@@84)) (= (type $generated@@79) $generated@@84)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79)
)
(assert (= ($generated@@90 $generated@@60) 0))
(assert (forall (($generated@@92 T@U) ) (! (= (type ($generated@@91 $generated@@92)) $generated@@81)
 :pattern ( ($generated@@91 $generated@@92))
)))
(assert (= ($generated@@91 $generated@@44) $generated@@49))
(assert (= ($generated@@91 $generated@@45) $generated@@50))
(assert (= ($generated@@91 $generated@@46) $generated@@51))
(assert (= ($generated@@91 $generated@@47) $generated@@52))
(assert (= ($generated@@91 $generated@@48) $generated@@53))
(assert (forall (($generated@@94 T@U) ) (! (= (type ($generated@@93 $generated@@94)) $generated@@84)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (= ($generated@@93 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (= ($generated@@1 ($generated@@97 $generated@@106 $generated@@107)) 13)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@97 $generated@@108 $generated@@109))
))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@97 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@101 (type $generated@@112))))
(= (type ($generated@@102 $generated@@112 $generated@@113)) $generated@@114))
 :pattern ( ($generated@@102 $generated@@112 $generated@@113))
))) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 (type $generated@@117)))
(let (($generated@@119 (type $generated@@116)))
(= (type ($generated@@103 $generated@@115 $generated@@116 $generated@@117)) ($generated@@97 $generated@@119 $generated@@118))))
 :pattern ( ($generated@@103 $generated@@115 $generated@@116 $generated@@117))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@101 (type $generated@@120))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@102 ($generated@@103 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@102 ($generated@@103 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@102 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@102 ($generated@@103 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@102 $generated@@129 $generated@@131)))
 :weight 0
)))) (= ($generated@@1 $generated@@98) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@83 (type $generated@@133))))
(= (type ($generated@@104 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@104 $generated@@132 $generated@@133))
))) (= ($generated@@1 $generated@@99) 15)) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= (type ($generated@@105 $generated@@135 $generated@@136 $generated@@137)) $generated@@99)
 :pattern ( ($generated@@105 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@83 (type $generated@@139))))
 (=> (= (type $generated@@140) $generated@@141) (= ($generated@@104 ($generated@@105 $generated@@138 $generated@@139 $generated@@140) $generated@@139) $generated@@140)))
 :weight 0
))) (and (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@104 ($generated@@105 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@104 $generated@@143 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@104 $generated@@147 $generated@@149)))
 :weight 0
)))) (forall (($generated@@150 Int) ) (! (= (type ($generated@@96 $generated@@150)) $generated@@80)
 :pattern ( ($generated@@96 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@2) (= (type $generated@@152) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
 :pattern ( ($generated@@95 $generated@@151 ($generated@@96 0) $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@155) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@153 $generated@@154 $generated@@155)) (forall (($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@98) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@154 $generated@@156) $generated@@60))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@155 $generated@@156) $generated@@60)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@155 $generated@@156) $generated@@60))
)))
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert  (and (= (type $generated@@157) $generated@@80) (= (type $generated@@158) $generated@@98)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (= (type $generated@@159) $generated@@98) (= (type $generated@@160) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@159 $generated@@157 $generated@@160)  (or (= $generated@@159 $generated@@158) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@160 $generated@@159) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@159 $generated@@157 $generated@@160))
)))
(assert (= (type $generated@@161) $generated@@80))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@162) $generated@@98) (= (type $generated@@163) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@162 $generated@@161 $generated@@163)  (or (= $generated@@162 $generated@@158) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@163 $generated@@162) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@162 $generated@@161 $generated@@163))
)))
(assert (= (type $generated@@164) $generated@@80))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@98) (= (type $generated@@166) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@165 $generated@@164 $generated@@166)  (or (= $generated@@165 $generated@@158) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@166 $generated@@165) $generated@@60)))))
 :pattern ( ($generated@@95 $generated@@165 $generated@@164 $generated@@166))
)))
(assert  (and (= (type $generated@@167) ($generated@@82 $generated@@2)) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@80)
 :pattern ( ($generated@@169 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@173) $generated@@98)) (and ($generated@@168 $generated@@172) (and (not (= $generated@@173 $generated@@158)) (= ($generated@@169 $generated@@173) $generated@@161)))) ($generated@@170 ($generated@@104 ($generated@@102 $generated@@172 $generated@@173) $generated@@167) $generated@@46))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@172 $generated@@173) $generated@@167))
)))
(assert (= (type $generated@@174) ($generated@@82 $generated@@2)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@176) $generated@@98)) (and ($generated@@168 $generated@@175) (and (not (= $generated@@176 $generated@@158)) (= ($generated@@169 $generated@@176) $generated@@164)))) ($generated@@170 ($generated@@104 ($generated@@102 $generated@@175 $generated@@176) $generated@@174) $generated@@46))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@175 $generated@@176) $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> (= (type $generated@@177) $generated@@2) ($generated@@170 $generated@@177 ($generated@@96 0)))
 :pattern ( ($generated@@170 $generated@@177 ($generated@@96 0)))
)))
(assert ($generated@@178 $generated@@161))
(assert ($generated@@178 $generated@@164))
(assert  (and (= ($generated@@1 $generated@@181) 16) (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= (type ($generated@@180 $generated@@182 $generated@@183)) $generated@@80)
 :pattern ( ($generated@@180 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@184) $generated@@80) (= (type $generated@@185) $generated@@80)) (= (type $generated@@186) $generated@@181)) ($generated@@170 $generated@@186 ($generated@@180 $generated@@184 $generated@@185))) ($generated@@179 $generated@@186))
 :pattern ( ($generated@@179 $generated@@186) ($generated@@170 $generated@@186 ($generated@@180 $generated@@184 $generated@@185)))
)))
(assert  (and (and (= ($generated@@1 $generated@@190) 17) (forall (($generated@@191 T@U) ) (! (= (type ($generated@@188 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@188 $generated@@191))
))) (forall (($generated@@192 T@U) ) (! (= (type ($generated@@189 $generated@@192)) $generated@@190)
 :pattern ( ($generated@@189 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) $generated@@181) (= (type $generated@@194) $generated@@181)) true) (= ($generated@@187 $generated@@193 $generated@@194)  (and (= ($generated@@188 $generated@@193) ($generated@@188 $generated@@194)) (= ($generated@@189 $generated@@193) ($generated@@189 $generated@@194)))))
 :pattern ( ($generated@@187 $generated@@193 $generated@@194))
)))
(assert (= (type $generated@@195) $generated@@80))
(assert (forall (($generated@@196 T@U) ) (!  (=> (= (type $generated@@196) $generated@@98) (=> (and (not (= $generated@@196 $generated@@158)) ($generated@@170 $generated@@196 $generated@@161)) ($generated@@170 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@170 $generated@@196 $generated@@161))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@98) (=> (and (not (= $generated@@197 $generated@@158)) ($generated@@170 $generated@@197 $generated@@164)) ($generated@@170 $generated@@197 $generated@@195)))
 :pattern ( ($generated@@170 $generated@@197 $generated@@164))
)))
(assert (forall (($generated@@200 T@U) ) (! (= (type ($generated@@198 $generated@@200)) $generated@@80)
 :pattern ( ($generated@@198 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and (and (= (type $generated@@201) ($generated@@97 $generated@@190 $generated@@2)) (= (type $generated@@202) $generated@@80)) ($generated@@170 $generated@@201 ($generated@@198 $generated@@202))) ($generated@@199 $generated@@201))
 :pattern ( ($generated@@170 $generated@@201 ($generated@@198 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ) (!  (=> (= (type $generated@@203) $generated@@98) (= ($generated@@170 $generated@@203 $generated@@161)  (or (= $generated@@203 $generated@@158) (= ($generated@@169 $generated@@203) $generated@@161))))
 :pattern ( ($generated@@170 $generated@@203 $generated@@161))
)))
(assert (forall (($generated@@204 T@U) ) (!  (=> (= (type $generated@@204) $generated@@98) (= ($generated@@170 $generated@@204 $generated@@164)  (or (= $generated@@204 $generated@@158) (= ($generated@@169 $generated@@204) $generated@@164))))
 :pattern ( ($generated@@170 $generated@@204 $generated@@164))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@1 ($generated@@207 $generated@@211 $generated@@212)) 18)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@208 ($generated@@207 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@207 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@209 ($generated@@207 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@207 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@209 (type $generated@@217))))
(= (type ($generated@@205 $generated@@217 $generated@@218 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@205 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 (type $generated@@224)))
(let (($generated@@226 (type $generated@@222)))
(= (type ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@207 $generated@@226 $generated@@225))))
 :pattern ( ($generated@@210 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@209 (type $generated@@227))))
 (=> (= (type $generated@@230) $generated@@231) (= ($generated@@205 ($generated@@210 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@228 $generated@@229) $generated@@230)))
 :weight 0
))) (and (and (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@205 ($generated@@210 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@205 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@205 ($generated@@210 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@205 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
))) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (or true (= ($generated@@205 ($generated@@210 $generated@@245 $generated@@246 $generated@@247 $generated@@244) $generated@@248 $generated@@249) ($generated@@205 $generated@@245 $generated@@248 $generated@@249)))
 :weight 0
)))) (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ) (! (= (type ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253)) ($generated@@207 $generated@@98 $generated@@4))
 :pattern ( ($generated@@206 $generated@@250 $generated@@251 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@83 (type $generated@@259))))
 (=> (and (and (and (and (= (type $generated@@254) $generated@@98) (= (type $generated@@255) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@256) ($generated@@82 $generated@@4))) (= (type $generated@@258) $generated@@98)) (= (type $generated@@259) ($generated@@82 $generated@@260))) (= ($generated@@0 ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (not (= $generated@@258 $generated@@254)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@255 $generated@@258) $generated@@256))) $generated@@257))))
 :pattern ( ($generated@@205 ($generated@@206 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@98) (= (type $generated@@262) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@261 $generated@@195 $generated@@262) ($generated@@95 $generated@@261 $generated@@157 $generated@@262)))
 :pattern ( ($generated@@95 $generated@@261 $generated@@195 $generated@@262))
)))
(assert (= (type $generated@@263) $generated@@80))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@98) (= (type $generated@@265) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@264 $generated@@263 $generated@@265) ($generated@@95 $generated@@264 $generated@@161 $generated@@265)))
 :pattern ( ($generated@@95 $generated@@264 $generated@@263 $generated@@265))
)))
(assert (= (type $generated@@266) $generated@@80))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@98) (= (type $generated@@268) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@267 $generated@@266 $generated@@268) ($generated@@95 $generated@@267 $generated@@164 $generated@@268)))
 :pattern ( ($generated@@95 $generated@@267 $generated@@266 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (type ($generated@@269 $generated@@271 $generated@@272)) $generated@@181)
 :pattern ( ($generated@@269 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) $generated@@80) (= (type $generated@@274) $generated@@80)) (= (type $generated@@275) $generated@@190)) (= (type $generated@@276) $generated@@190)) (= ($generated@@170 ($generated@@269 $generated@@275 $generated@@276) ($generated@@180 $generated@@273 $generated@@274))  (and ($generated@@270 $generated@@275 $generated@@273) ($generated@@270 $generated@@276 $generated@@274))))
 :pattern ( ($generated@@170 ($generated@@269 $generated@@275 $generated@@276) ($generated@@180 $generated@@273 $generated@@274)))
)))
(assert (= (type $generated@@277) ($generated@@82 $generated@@2)))
(assert (= ($generated@@90 $generated@@277) 0))
(assert (forall (($generated@@279 T@T) ($generated@@280 T@U) ($generated@@281 T@U) ) (! (= (type ($generated@@278 $generated@@279 $generated@@280 $generated@@281)) ($generated@@82 $generated@@279))
 :pattern ( ($generated@@278 $generated@@279 $generated@@280 $generated@@281))
)))
(assert (= ($generated@@278 $generated@@2 $generated@@64 $generated@@77) $generated@@277))
(assert  (not ($generated@@282 $generated@@277)))
(assert (= ($generated@@90 $generated@@167) 0))
(assert (= ($generated@@278 $generated@@2 $generated@@67 $generated@@78) $generated@@167))
(assert  (not ($generated@@282 $generated@@167)))
(assert (= ($generated@@90 $generated@@174) 0))
(assert (= ($generated@@278 $generated@@2 $generated@@70 $generated@@79) $generated@@174))
(assert  (not ($generated@@282 $generated@@174)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@181) (= (type $generated@@284) $generated@@181)) (= ($generated@@187 $generated@@283 $generated@@284) (= $generated@@283 $generated@@284)))
 :pattern ( ($generated@@187 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@80)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@97 $generated@@190 $generated@@4)) (= (type $generated@@288) $generated@@80)) (= ($generated@@170 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@190) ($generated@@0 ($generated@@102 $generated@@287 $generated@@289))) ($generated@@270 $generated@@289 $generated@@288))
 :pattern ( ($generated@@102 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@170 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@80)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) ($generated@@97 $generated@@190 $generated@@4)) (= (type $generated@@293) $generated@@80)) (= ($generated@@170 $generated@@292 ($generated@@290 $generated@@293)) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@190) ($generated@@0 ($generated@@102 $generated@@292 $generated@@294))) ($generated@@270 $generated@@294 $generated@@293))
 :pattern ( ($generated@@102 $generated@@292 $generated@@294))
))))
 :pattern ( ($generated@@170 $generated@@292 ($generated@@290 $generated@@293)))
)))
(assert (forall (($generated@@296 Int) ) (! (= ($generated@@295 $generated@@296) $generated@@296)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 (type $generated@@298)))
(= (type ($generated@@297 $generated@@298)) $generated@@299))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= ($generated@@297 $generated@@300) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) $generated@@80) (= (type $generated@@303) $generated@@80)) (= (type $generated@@304) $generated@@190)) (= (type $generated@@305) $generated@@190)) (= (type $generated@@306) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@168 $generated@@306)) (= ($generated@@95 ($generated@@269 $generated@@304 $generated@@305) ($generated@@180 $generated@@302 $generated@@303) $generated@@306)  (and ($generated@@301 $generated@@304 $generated@@302 $generated@@306) ($generated@@301 $generated@@305 $generated@@303 $generated@@306))))
 :pattern ( ($generated@@95 ($generated@@269 $generated@@304 $generated@@305) ($generated@@180 $generated@@302 $generated@@303) $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@85)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@181) (= ($generated@@179 $generated@@309) (= ($generated@@307 $generated@@309) $generated@@62)))
 :pattern ( ($generated@@179 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@181) ($generated@@179 $generated@@310)) (exists (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (and (and (= (type $generated@@311) $generated@@190) (= (type $generated@@312) $generated@@190)) (= $generated@@310 ($generated@@269 $generated@@311 $generated@@312)))
 :no-pattern (type $generated@@311)
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
)))
 :pattern ( ($generated@@179 $generated@@310))
)))
(assert  (and (and (forall (($generated@@317 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@317)) 19)) (forall (($generated@@318 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@315 $generated@@318))
))) (forall (($generated@@319 T@T) ) (! (= (type ($generated@@313 $generated@@319)) ($generated@@315 $generated@@319))
 :pattern ( ($generated@@313 $generated@@319))
))))
(assert (forall (($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@320)) 0)
 :pattern ( ($generated@@313 $generated@@320))
)))
(assert ($generated@@282 $generated@@60))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@190)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@80) (= (type $generated@@325) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@301 ($generated@@321 $generated@@323) $generated@@324 $generated@@325) ($generated@@95 $generated@@323 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@301 ($generated@@321 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@326) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@327) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@328) $generated@@190)) (= (type $generated@@329) $generated@@80)) ($generated@@153 $generated@@326 $generated@@327)) ($generated@@301 $generated@@328 $generated@@329 $generated@@326)) ($generated@@301 $generated@@328 $generated@@329 $generated@@327))
 :pattern ( ($generated@@153 $generated@@326 $generated@@327) ($generated@@301 $generated@@328 $generated@@329 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@330) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@331) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@333) $generated@@80)) ($generated@@153 $generated@@330 $generated@@331)) ($generated@@95 $generated@@332 $generated@@333 $generated@@330)) ($generated@@95 $generated@@332 $generated@@333 $generated@@331))
 :pattern ( ($generated@@153 $generated@@330 $generated@@331) ($generated@@95 $generated@@332 $generated@@333 $generated@@330))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@335) $generated@@98)) (=> (and (and ($generated@@168 $generated@@334) (and (not (= $generated@@335 $generated@@158)) (= ($generated@@169 $generated@@335) $generated@@161))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@334 $generated@@335) $generated@@60))) ($generated@@95 ($generated@@104 ($generated@@102 $generated@@334 $generated@@335) $generated@@167) $generated@@46 $generated@@334)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@334 $generated@@335) $generated@@167))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@337) $generated@@98)) (=> (and (and ($generated@@168 $generated@@336) (and (not (= $generated@@337 $generated@@158)) (= ($generated@@169 $generated@@337) $generated@@164))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@336 $generated@@337) $generated@@60))) ($generated@@95 ($generated@@104 ($generated@@102 $generated@@336 $generated@@337) $generated@@174) $generated@@46 $generated@@336)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@336 $generated@@337) $generated@@174))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@97 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@100 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@97 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@102 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 20)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@97 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@102 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@102 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert  (and (and (and (and (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (= ($generated@@1 ($generated@@364 $generated@@367 $generated@@368)) 21)) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@365 ($generated@@364 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@364 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@364 $generated@@371 $generated@@372)) $generated@@372)
 :pattern ( ($generated@@364 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@365 (type $generated@@373))))
(= (type ($generated@@362 $generated@@373)) ($generated@@97 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@373))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= (type ($generated@@363 $generated@@375 $generated@@376)) ($generated@@364 $generated@@375 $generated@@376))
 :pattern ( ($generated@@363 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@T) ) (! (let (($generated@@379 (type $generated@@377)))
 (not ($generated@@0 ($generated@@102 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377))))
 :pattern ( (let (($generated@@379 (type $generated@@377)))
($generated@@102 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@382) ($generated@@97 $generated@@98 $generated@@99))) ($generated@@380 $generated@@381 $generated@@382)) (and ($generated@@153 $generated@@381 $generated@@382) (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@83 (type $generated@@384))))
 (=> (and (and (= (type $generated@@383) $generated@@98) (= (type $generated@@384) ($generated@@82 $generated@@385))) (not ($generated@@282 $generated@@384))) (= ($generated@@104 ($generated@@102 $generated@@381 $generated@@383) $generated@@384) ($generated@@104 ($generated@@102 $generated@@382 $generated@@383) $generated@@384))))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@382 $generated@@383) $generated@@384))
))))
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@100 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@97 $generated@@387 $generated@@2)) (= ($generated@@199 $generated@@386) (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@387) (and (<= 0 ($generated ($generated@@102 $generated@@386 $generated@@388))) (<= ($generated ($generated@@102 $generated@@386 $generated@@388)) ($generated@@338 $generated@@386))))
 :pattern ( ($generated@@102 $generated@@386 $generated@@388))
)))))
 :pattern ( ($generated@@199 $generated@@386))
)))
(assert (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@190) ($generated@@270 $generated@@392 $generated@@157)) (and (= ($generated@@321 ($generated@@389 $generated@@98 $generated@@392)) $generated@@392) ($generated@@170 ($generated@@389 $generated@@98 $generated@@392) $generated@@157)))
 :pattern ( ($generated@@270 $generated@@392 $generated@@157))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@190) ($generated@@270 $generated@@393 $generated@@195)) (and (= ($generated@@321 ($generated@@389 $generated@@98 $generated@@393)) $generated@@393) ($generated@@170 ($generated@@389 $generated@@98 $generated@@393) $generated@@195)))
 :pattern ( ($generated@@270 $generated@@393 $generated@@195))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@190) ($generated@@270 $generated@@394 $generated@@161)) (and (= ($generated@@321 ($generated@@389 $generated@@98 $generated@@394)) $generated@@394) ($generated@@170 ($generated@@389 $generated@@98 $generated@@394) $generated@@161)))
 :pattern ( ($generated@@270 $generated@@394 $generated@@161))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@190) ($generated@@270 $generated@@395 $generated@@263)) (and (= ($generated@@321 ($generated@@389 $generated@@98 $generated@@395)) $generated@@395) ($generated@@170 ($generated@@389 $generated@@98 $generated@@395) $generated@@263)))
 :pattern ( ($generated@@270 $generated@@395 $generated@@263))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@190) ($generated@@270 $generated@@396 $generated@@164)) (and (= ($generated@@321 ($generated@@389 $generated@@98 $generated@@396)) $generated@@396) ($generated@@170 ($generated@@389 $generated@@98 $generated@@396) $generated@@164)))
 :pattern ( ($generated@@270 $generated@@396 $generated@@164))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@190) ($generated@@270 $generated@@397 $generated@@266)) (and (= ($generated@@321 ($generated@@389 $generated@@98 $generated@@397)) $generated@@397) ($generated@@170 ($generated@@389 $generated@@98 $generated@@397) $generated@@266)))
 :pattern ( ($generated@@270 $generated@@397 $generated@@266))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (= (type $generated@@398) $generated@@98) (= ($generated@@170 $generated@@398 $generated@@195)  (and ($generated@@170 $generated@@398 $generated@@157) (not (= $generated@@398 $generated@@158)))))
 :pattern ( ($generated@@170 $generated@@398 $generated@@195))
)))
(assert (forall (($generated@@399 T@U) ) (!  (=> (= (type $generated@@399) $generated@@98) (= ($generated@@170 $generated@@399 $generated@@263)  (and ($generated@@170 $generated@@399 $generated@@161) (not (= $generated@@399 $generated@@158)))))
 :pattern ( ($generated@@170 $generated@@399 $generated@@263))
)))
(assert (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@98) (= ($generated@@170 $generated@@400 $generated@@266)  (and ($generated@@170 $generated@@400 $generated@@164) (not (= $generated@@400 $generated@@158)))))
 :pattern ( ($generated@@170 $generated@@400 $generated@@266))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@402) $generated@@98)) (and ($generated@@168 $generated@@401) (and (not (= $generated@@402 $generated@@158)) ($generated@@170 $generated@@402 $generated@@157)))) ($generated@@170 ($generated@@104 ($generated@@102 $generated@@401 $generated@@402) $generated@@277) $generated@@46))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@401 $generated@@402) $generated@@277))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@348 (type $generated@@403))))
(let (($generated@@405 ($generated@@347 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@346 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@345 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) ($generated@@0 ($generated@@102 ($generated@@344 $generated@@403) $generated@@406)))
 :no-pattern (type $generated@@406)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
))))))
 :pattern ( ($generated@@344 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@348 (type $generated@@408))))
(= (type ($generated@@407 $generated@@408)) ($generated@@97 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@348 (type $generated@@410))))
(let (($generated@@412 ($generated@@347 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@346 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@345 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@411) ($generated@@0 ($generated@@102 ($generated@@407 $generated@@410) $generated@@413)))
 :no-pattern (type $generated@@413)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
))))))
 :pattern ( ($generated@@407 $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@366 (type $generated@@414))))
(let (($generated@@416 ($generated@@365 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@364 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@363 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) ($generated@@0 ($generated@@102 ($generated@@362 $generated@@414) $generated@@417)))
 :no-pattern (type $generated@@417)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
))))))
 :pattern ( ($generated@@362 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@366 (type $generated@@419))))
(= (type ($generated@@418 $generated@@419)) ($generated@@97 $generated@@420 $generated@@4)))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@366 (type $generated@@421))))
(let (($generated@@423 ($generated@@365 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@364 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@363 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@422) ($generated@@0 ($generated@@102 ($generated@@418 $generated@@421) $generated@@424)))
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@418 $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@97 $generated@@190 $generated@@2)) (= (type $generated@@426) $generated@@80)) (= ($generated@@170 $generated@@425 ($generated@@198 $generated@@426)) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@190) (< 0 ($generated ($generated@@102 $generated@@425 $generated@@427)))) ($generated@@270 $generated@@427 $generated@@426))
 :pattern ( ($generated@@102 $generated@@425 $generated@@427))
))))
 :pattern ( ($generated@@170 $generated@@425 ($generated@@198 $generated@@426)))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@428) ($generated@@97 $generated@@190 $generated@@4)) (= (type $generated@@429) $generated@@80)) (= (type $generated@@430) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@428 ($generated@@285 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@190) ($generated@@0 ($generated@@102 $generated@@428 $generated@@431))) ($generated@@301 $generated@@431 $generated@@429 $generated@@430))
 :pattern ( ($generated@@102 $generated@@428 $generated@@431))
))))
 :pattern ( ($generated@@95 $generated@@428 ($generated@@285 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@97 $generated@@190 $generated@@4)) (= (type $generated@@433) $generated@@80)) (= (type $generated@@434) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@432 ($generated@@290 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@190) ($generated@@0 ($generated@@102 $generated@@432 $generated@@435))) ($generated@@301 $generated@@435 $generated@@433 $generated@@434))
 :pattern ( ($generated@@102 $generated@@432 $generated@@435))
))))
 :pattern ( ($generated@@95 $generated@@432 ($generated@@290 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(= ($generated ($generated@@102 ($generated@@339 $generated@@437) $generated@@436)) 0))
 :pattern ( (let (($generated@@437 (type $generated@@436)))
($generated@@102 ($generated@@339 $generated@@437) $generated@@436)))
)))
(assert  (and (forall (($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@440)) ($generated@@97 $generated@@190 $generated@@4))
 :pattern ( ($generated@@438 $generated@@440))
)) (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@348 (type $generated@@441))))
(let (($generated@@443 ($generated@@347 (type $generated@@441))))
(= (type ($generated@@439 $generated@@441)) ($generated@@97 $generated@@443 $generated@@442))))
 :pattern ( ($generated@@439 $generated@@441))
))))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@346 $generated@@190 $generated@@190)) (= (type $generated@@445) $generated@@190)) (= ($generated@@0 ($generated@@102 ($generated@@438 $generated@@444) $generated@@445))  (and ($generated@@0 ($generated@@102 ($generated@@344 $generated@@444) ($generated@@188 ($generated@@389 $generated@@181 $generated@@445)))) (= ($generated@@102 ($generated@@439 $generated@@444) ($generated@@188 ($generated@@389 $generated@@181 $generated@@445))) ($generated@@189 ($generated@@389 $generated@@181 $generated@@445))))))
 :pattern ( ($generated@@102 ($generated@@438 $generated@@444) $generated@@445))
)))
(assert  (and (forall (($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@448)) ($generated@@97 $generated@@190 $generated@@4))
 :pattern ( ($generated@@446 $generated@@448))
)) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@366 (type $generated@@449))))
(let (($generated@@451 ($generated@@365 (type $generated@@449))))
(= (type ($generated@@447 $generated@@449)) ($generated@@97 $generated@@451 $generated@@450))))
 :pattern ( ($generated@@447 $generated@@449))
))))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) ($generated@@364 $generated@@190 $generated@@190)) (= (type $generated@@453) $generated@@190)) (= ($generated@@0 ($generated@@102 ($generated@@446 $generated@@452) $generated@@453))  (and ($generated@@0 ($generated@@102 ($generated@@362 $generated@@452) ($generated@@188 ($generated@@389 $generated@@181 $generated@@453)))) (= ($generated@@102 ($generated@@447 $generated@@452) ($generated@@188 ($generated@@389 $generated@@181 $generated@@453))) ($generated@@189 ($generated@@389 $generated@@181 $generated@@453))))))
 :pattern ( ($generated@@102 ($generated@@446 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@347 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@346 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@102 ($generated@@407 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@102 ($generated@@344 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@102 ($generated@@439 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@102 ($generated@@344 $generated@@454) $generated@@458))
 :pattern ( ($generated@@102 ($generated@@439 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@102 ($generated@@407 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
(let (($generated@@462 ($generated@@365 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@364 $generated@@462 $generated@@461)) (= ($generated@@0 ($generated@@102 ($generated@@418 $generated@@459) $generated@@460)) (exists (($generated@@463 T@U) ) (!  (and (= (type $generated@@463) $generated@@462) (and ($generated@@0 ($generated@@102 ($generated@@362 $generated@@459) $generated@@463)) (= $generated@@460 ($generated@@102 ($generated@@447 $generated@@459) $generated@@463))))
 :pattern ( ($generated@@102 ($generated@@362 $generated@@459) $generated@@463))
 :pattern ( ($generated@@102 ($generated@@447 $generated@@459) $generated@@463))
))))))
 :pattern ( ($generated@@102 ($generated@@418 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@80)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@346 $generated@@190 $generated@@190)) (= (type $generated@@468) $generated@@80)) (= (type $generated@@469) $generated@@80)) (= (type $generated@@470) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@190) ($generated@@0 ($generated@@102 ($generated@@344 $generated@@467) $generated@@471))) (and ($generated@@301 ($generated@@102 ($generated@@439 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@301 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@102 ($generated@@439 $generated@@467) $generated@@471))
 :pattern ( ($generated@@102 ($generated@@344 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@95 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@473 $generated@@474)) $generated@@80)
 :pattern ( ($generated@@472 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (and (= (type $generated@@475) ($generated@@364 $generated@@190 $generated@@190)) (= (type $generated@@476) $generated@@80)) (= (type $generated@@477) $generated@@80)) (= (type $generated@@478) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@190) ($generated@@0 ($generated@@102 ($generated@@362 $generated@@475) $generated@@479))) (and ($generated@@301 ($generated@@102 ($generated@@447 $generated@@475) $generated@@479) $generated@@477 $generated@@478) ($generated@@301 $generated@@479 $generated@@476 $generated@@478)))
 :pattern ( ($generated@@102 ($generated@@447 $generated@@475) $generated@@479))
 :pattern ( ($generated@@102 ($generated@@362 $generated@@475) $generated@@479))
))))
 :pattern ( ($generated@@95 $generated@@475 ($generated@@472 $generated@@476 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@480) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@481) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@482) ($generated@@97 $generated@@98 $generated@@99))) (not (= $generated@@480 $generated@@482))) (and ($generated@@153 $generated@@480 $generated@@481) ($generated@@153 $generated@@481 $generated@@482))) ($generated@@153 $generated@@480 $generated@@482))
 :pattern ( ($generated@@153 $generated@@480 $generated@@481) ($generated@@153 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@T) ) (! (= (type ($generated@@483 $generated@@484)) ($generated@@97 $generated@@484 $generated@@4))
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@366 (type $generated@@485))))
(let (($generated@@487 ($generated@@365 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@364 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@363 $generated@@487 $generated@@486)) (= ($generated@@362 $generated@@485) ($generated@@483 $generated@@487))))))
 :pattern ( ($generated@@362 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@366 (type $generated@@488))))
(let (($generated@@490 ($generated@@365 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@364 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@363 $generated@@490 $generated@@489)) (= ($generated@@418 $generated@@488) ($generated@@483 $generated@@489))))))
 :pattern ( ($generated@@418 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@366 (type $generated@@491))))
(let (($generated@@493 ($generated@@365 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@364 $generated@@493 $generated@@492)) (= (= $generated@@491 ($generated@@363 $generated@@493 $generated@@492)) (= ($generated@@446 $generated@@491) ($generated@@483 $generated@@190))))))
 :pattern ( ($generated@@446 $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@348 (type $generated@@494))))
(let (($generated@@496 ($generated@@347 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@346 $generated@@496 $generated@@495)) (or (= $generated@@494 ($generated@@345 $generated@@496 $generated@@495)) (exists (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (and (and (= (type $generated@@497) $generated@@190) (= (type $generated@@498) $generated@@190)) ($generated@@0 ($generated@@102 ($generated@@438 $generated@@494) ($generated@@321 ($generated@@269 $generated@@497 $generated@@498)))))
 :no-pattern (type $generated@@497)
 :no-pattern (type $generated@@498)
 :no-pattern ($generated $generated@@497)
 :no-pattern ($generated@@0 $generated@@497)
 :no-pattern ($generated $generated@@498)
 :no-pattern ($generated@@0 $generated@@498)
))))))
 :pattern ( ($generated@@438 $generated@@494))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 ($generated@@366 (type $generated@@499))))
(let (($generated@@501 ($generated@@365 (type $generated@@499))))
 (=> (= (type $generated@@499) ($generated@@364 $generated@@501 $generated@@500)) (or (= $generated@@499 ($generated@@363 $generated@@501 $generated@@500)) (exists (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (and (and (= (type $generated@@502) $generated@@190) (= (type $generated@@503) $generated@@190)) ($generated@@0 ($generated@@102 ($generated@@446 $generated@@499) ($generated@@321 ($generated@@269 $generated@@502 $generated@@503)))))
 :no-pattern (type $generated@@502)
 :no-pattern (type $generated@@503)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
 :no-pattern ($generated $generated@@503)
 :no-pattern ($generated@@0 $generated@@503)
))))))
 :pattern ( ($generated@@446 $generated@@499))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@86)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@T) ) (!  (=> (and (= (type $generated@@506) $generated@@86) (= (type $generated@@507) $generated@@84)) (and (= ($generated@@504 ($generated@@278 $generated@@508 $generated@@506 $generated@@507)) $generated@@506) (= ($generated@@93 ($generated@@278 $generated@@508 $generated@@506 $generated@@507)) $generated@@507)))
 :pattern ( ($generated@@278 $generated@@508 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@190) ($generated@@270 $generated@@509 $generated@@46)) (and (= ($generated@@321 ($generated@@389 $generated@@2 $generated@@509)) $generated@@509) ($generated@@170 ($generated@@389 $generated@@2 $generated@@509) $generated@@46)))
 :pattern ( ($generated@@270 $generated@@509 $generated@@46))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@190) ($generated@@270 $generated@@510 $generated@@47)) (and (= ($generated@@321 ($generated@@389 $generated@@3 $generated@@510)) $generated@@510) ($generated@@170 ($generated@@389 $generated@@3 $generated@@510) $generated@@47)))
 :pattern ( ($generated@@270 $generated@@510 $generated@@47))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@190) ($generated@@270 $generated@@511 $generated@@44)) (and (= ($generated@@321 ($generated@@389 $generated@@4 $generated@@511)) $generated@@511) ($generated@@170 ($generated@@389 $generated@@4 $generated@@511) $generated@@44)))
 :pattern ( ($generated@@270 $generated@@511 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@512) 22))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@190) ($generated@@270 $generated@@513 $generated@@45)) (and (= ($generated@@321 ($generated@@389 $generated@@512 $generated@@513)) $generated@@513) ($generated@@170 ($generated@@389 $generated@@512 $generated@@513) $generated@@45)))
 :pattern ( ($generated@@270 $generated@@513 $generated@@45))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@80) (= ($generated@@270 ($generated@@321 $generated@@514) $generated@@515) ($generated@@170 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@270 ($generated@@321 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@100 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@97 $generated@@517 $generated@@2)) (<= 0 ($generated@@338 $generated@@516))))
 :pattern ( ($generated@@338 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@316 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@315 $generated@@519)) (<= 0 ($generated@@314 $generated@@518))))
 :pattern ( ($generated@@314 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@80)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@80) (= (type $generated@@523) $generated@@80)) (= ($generated@@520 ($generated@@464 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@464 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@80)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@80) (= (type $generated@@527) $generated@@80)) (= ($generated@@524 ($generated@@464 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@464 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@80) (= (type $generated@@529) $generated@@80)) (= ($generated@@91 ($generated@@464 $generated@@528 $generated@@529)) $generated@@58))
 :pattern ( ($generated@@464 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@80)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@80) (= (type $generated@@533) $generated@@80)) (= ($generated@@530 ($generated@@472 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@472 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@80)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@80) (= (type $generated@@537) $generated@@80)) (= ($generated@@534 ($generated@@472 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@472 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@80) (= (type $generated@@539) $generated@@80)) (= ($generated@@91 ($generated@@472 $generated@@538 $generated@@539)) $generated@@59))
 :pattern ( ($generated@@472 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@190) (= (type $generated@@541) $generated@@190)) (= ($generated@@307 ($generated@@269 $generated@@540 $generated@@541)) $generated@@62))
 :pattern ( ($generated@@269 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@80)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@80) (= (type $generated@@545) $generated@@80)) (= ($generated@@542 ($generated@@180 $generated@@544 $generated@@545)) $generated@@544))
 :pattern ( ($generated@@180 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@80)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@80) (= (type $generated@@549) $generated@@80)) (= ($generated@@546 ($generated@@180 $generated@@548 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@180 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@190) (= (type $generated@@551) $generated@@190)) (= ($generated@@188 ($generated@@269 $generated@@550 $generated@@551)) $generated@@550))
 :pattern ( ($generated@@269 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@190) (= (type $generated@@553) $generated@@190)) (= ($generated@@189 ($generated@@269 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@269 $generated@@552 $generated@@553))
)))
(assert  (and (forall (($generated@@556 T@U) ) (! (= (type ($generated@@554 $generated@@556)) $generated@@80)
 :pattern ( ($generated@@554 $generated@@556))
)) (forall (($generated@@557 T@U) ($generated@@558 Int) ) (! (let (($generated@@559 ($generated@@316 (type $generated@@557))))
(= (type ($generated@@555 $generated@@557 $generated@@558)) $generated@@559))
 :pattern ( ($generated@@555 $generated@@557 $generated@@558))
))))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@315 $generated@@190)) (= (type $generated@@561) $generated@@80)) (= (type $generated@@562) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@560 ($generated@@554 $generated@@561) $generated@@562) (forall (($generated@@563 Int) ) (!  (=> (and (<= 0 $generated@@563) (< $generated@@563 ($generated@@314 $generated@@560))) ($generated@@301 ($generated@@555 $generated@@560 $generated@@563) $generated@@561 $generated@@562))
 :pattern ( ($generated@@555 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@95 $generated@@560 ($generated@@554 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@564 ($generated@@96 $generated@@565)) $generated@@565)
 :pattern ( ($generated@@96 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@80)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@80) (= ($generated@@566 ($generated@@285 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@285 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@80) (= ($generated@@91 ($generated@@285 $generated@@569)) $generated@@54))
 :pattern ( ($generated@@285 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@80)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@80) (= ($generated@@570 ($generated@@290 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@290 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@80) (= ($generated@@91 ($generated@@290 $generated@@573)) $generated@@55))
 :pattern ( ($generated@@290 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@80)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@80) (= ($generated@@574 ($generated@@198 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@198 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@80) (= ($generated@@91 ($generated@@198 $generated@@577)) $generated@@56))
 :pattern ( ($generated@@198 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@80)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@80) (= ($generated@@578 ($generated@@554 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@554 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@80) (= ($generated@@91 ($generated@@554 $generated@@581)) $generated@@57))
 :pattern ( ($generated@@554 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
(= ($generated@@389 $generated@@583 ($generated@@321 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@321 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@346 $generated@@190 $generated@@190)) (= (type $generated@@585) $generated@@80)) (= (type $generated@@586) $generated@@80)) (= ($generated@@170 $generated@@584 ($generated@@464 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@190) ($generated@@0 ($generated@@102 ($generated@@344 $generated@@584) $generated@@587))) (and ($generated@@270 ($generated@@102 ($generated@@439 $generated@@584) $generated@@587) $generated@@586) ($generated@@270 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@102 ($generated@@439 $generated@@584) $generated@@587))
 :pattern ( ($generated@@102 ($generated@@344 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@170 $generated@@584 ($generated@@464 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@364 $generated@@190 $generated@@190)) (= (type $generated@@589) $generated@@80)) (= (type $generated@@590) $generated@@80)) (= ($generated@@170 $generated@@588 ($generated@@472 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@190) ($generated@@0 ($generated@@102 ($generated@@362 $generated@@588) $generated@@591))) (and ($generated@@270 ($generated@@102 ($generated@@447 $generated@@588) $generated@@591) $generated@@590) ($generated@@270 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@102 ($generated@@447 $generated@@588) $generated@@591))
 :pattern ( ($generated@@102 ($generated@@362 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@170 $generated@@588 ($generated@@472 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@593) $generated@@98)) (=> (and (and ($generated@@168 $generated@@592) (and (not (= $generated@@593 $generated@@158)) ($generated@@170 $generated@@593 $generated@@157))) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@592 $generated@@593) $generated@@60))) ($generated@@95 ($generated@@104 ($generated@@102 $generated@@592 $generated@@593) $generated@@277) $generated@@46 $generated@@592)))
 :pattern ( ($generated@@104 ($generated@@102 $generated@@592 $generated@@593) $generated@@277))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@190) (= (type $generated@@597) $generated@@190)) (< ($generated@@594 $generated@@596) ($generated@@595 ($generated@@269 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@269 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@190) (= (type $generated@@599) $generated@@190)) (< ($generated@@594 $generated@@599) ($generated@@595 ($generated@@269 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@269 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@190) (= (type $generated@@601) $generated@@80)) (= (type $generated@@602) $generated@@80)) ($generated@@270 $generated@@600 ($generated@@464 $generated@@601 $generated@@602))) (and (= ($generated@@321 ($generated@@389 ($generated@@346 $generated@@190 $generated@@190) $generated@@600)) $generated@@600) ($generated@@170 ($generated@@389 ($generated@@346 $generated@@190 $generated@@190) $generated@@600) ($generated@@464 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@270 $generated@@600 ($generated@@464 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@190) (= (type $generated@@604) $generated@@80)) (= (type $generated@@605) $generated@@80)) ($generated@@270 $generated@@603 ($generated@@472 $generated@@604 $generated@@605))) (and (= ($generated@@321 ($generated@@389 ($generated@@364 $generated@@190 $generated@@190) $generated@@603)) $generated@@603) ($generated@@170 ($generated@@389 ($generated@@364 $generated@@190 $generated@@190) $generated@@603) ($generated@@472 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@270 $generated@@603 ($generated@@472 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@80) (= (type $generated@@607) $generated@@80)) (= (type $generated@@608) $generated@@190)) ($generated@@270 $generated@@608 ($generated@@180 $generated@@606 $generated@@607))) (and (= ($generated@@321 ($generated@@389 $generated@@181 $generated@@608)) $generated@@608) ($generated@@170 ($generated@@389 $generated@@181 $generated@@608) ($generated@@180 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@270 $generated@@608 ($generated@@180 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (not ($generated@@0 ($generated@@102 ($generated@@483 $generated@@610) $generated@@609))))
 :pattern ( (let (($generated@@610 (type $generated@@609)))
($generated@@102 ($generated@@483 $generated@@610) $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ) (! (= (type ($generated@@611 $generated@@612)) $generated@@87)
 :pattern ( ($generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@80) (= (type $generated@@614) $generated@@80)) (and (= ($generated@@91 ($generated@@180 $generated@@613 $generated@@614)) $generated@@63) (= ($generated@@611 ($generated@@180 $generated@@613 $generated@@614)) $generated@@73)))
 :pattern ( ($generated@@180 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@181) (= ($generated@@594 ($generated@@321 $generated@@615)) ($generated@@595 $generated@@615)))
 :pattern ( ($generated@@594 ($generated@@321 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@190) ($generated@@270 $generated@@616 ($generated@@96 0))) (and (= ($generated@@321 ($generated@@389 $generated@@2 $generated@@616)) $generated@@616) ($generated@@170 ($generated@@389 ($generated@@97 $generated@@190 $generated@@4) $generated@@616) ($generated@@96 0))))
 :pattern ( ($generated@@270 $generated@@616 ($generated@@96 0)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@190) (= (type $generated@@618) $generated@@80)) ($generated@@270 $generated@@617 ($generated@@285 $generated@@618))) (and (= ($generated@@321 ($generated@@389 ($generated@@97 $generated@@190 $generated@@4) $generated@@617)) $generated@@617) ($generated@@170 ($generated@@389 ($generated@@97 $generated@@190 $generated@@4) $generated@@617) ($generated@@285 $generated@@618))))
 :pattern ( ($generated@@270 $generated@@617 ($generated@@285 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@190) (= (type $generated@@620) $generated@@80)) ($generated@@270 $generated@@619 ($generated@@290 $generated@@620))) (and (= ($generated@@321 ($generated@@389 ($generated@@97 $generated@@190 $generated@@4) $generated@@619)) $generated@@619) ($generated@@170 ($generated@@389 ($generated@@97 $generated@@190 $generated@@4) $generated@@619) ($generated@@290 $generated@@620))))
 :pattern ( ($generated@@270 $generated@@619 ($generated@@290 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@190) (= (type $generated@@622) $generated@@80)) ($generated@@270 $generated@@621 ($generated@@198 $generated@@622))) (and (= ($generated@@321 ($generated@@389 ($generated@@97 $generated@@190 $generated@@2) $generated@@621)) $generated@@621) ($generated@@170 ($generated@@389 ($generated@@97 $generated@@190 $generated@@2) $generated@@621) ($generated@@198 $generated@@622))))
 :pattern ( ($generated@@270 $generated@@621 ($generated@@198 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@190) (= (type $generated@@624) $generated@@80)) ($generated@@270 $generated@@623 ($generated@@554 $generated@@624))) (and (= ($generated@@321 ($generated@@389 ($generated@@315 $generated@@190) $generated@@623)) $generated@@623) ($generated@@170 ($generated@@389 ($generated@@315 $generated@@190) $generated@@623) ($generated@@554 $generated@@624))))
 :pattern ( ($generated@@270 $generated@@623 ($generated@@554 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@98) (= (type $generated@@626) ($generated@@97 $generated@@98 $generated@@99))) (and (not (= $generated@@625 $generated@@158)) ($generated@@95 $generated@@625 $generated@@161 $generated@@626))) ($generated@@95 $generated@@625 $generated@@195 $generated@@626))
 :pattern ( ($generated@@95 $generated@@625 $generated@@161 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@98) (= (type $generated@@628) ($generated@@97 $generated@@98 $generated@@99))) (and (not (= $generated@@627 $generated@@158)) ($generated@@95 $generated@@627 $generated@@164 $generated@@628))) ($generated@@95 $generated@@627 $generated@@195 $generated@@628))
 :pattern ( ($generated@@95 $generated@@627 $generated@@164 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (! (let (($generated@@633 (type $generated@@632)))
 (=> (and (and (and (= (type $generated@@629) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@630) $generated@@98)) (= (type $generated@@631) ($generated@@82 $generated@@633))) ($generated@@168 ($generated@@103 $generated@@629 $generated@@630 ($generated@@105 ($generated@@102 $generated@@629 $generated@@630) $generated@@631 $generated@@632)))) ($generated@@153 $generated@@629 ($generated@@103 $generated@@629 $generated@@630 ($generated@@105 ($generated@@102 $generated@@629 $generated@@630) $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@103 $generated@@629 $generated@@630 ($generated@@105 ($generated@@102 $generated@@629 $generated@@630) $generated@@631 $generated@@632)))
)))
(assert (= ($generated@@91 $generated@@157) $generated@@65))
(assert (= ($generated@@611 $generated@@157) $generated@@74))
(assert (= ($generated@@91 $generated@@195) $generated@@66))
(assert (= ($generated@@611 $generated@@195) $generated@@74))
(assert (= ($generated@@91 $generated@@161) $generated@@68))
(assert (= ($generated@@611 $generated@@161) $generated@@75))
(assert (= ($generated@@91 $generated@@263) $generated@@69))
(assert (= ($generated@@611 $generated@@263) $generated@@75))
(assert (= ($generated@@91 $generated@@164) $generated@@71))
(assert (= ($generated@@611 $generated@@164) $generated@@76))
(assert (= ($generated@@91 $generated@@266) $generated@@72))
(assert (= ($generated@@611 $generated@@266) $generated@@76))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@634) ($generated@@97 $generated@@190 $generated@@2)) (= (type $generated@@635) $generated@@80)) (= (type $generated@@636) ($generated@@97 $generated@@98 $generated@@99))) (= ($generated@@95 $generated@@634 ($generated@@198 $generated@@635) $generated@@636) (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@190) (< 0 ($generated ($generated@@102 $generated@@634 $generated@@637)))) ($generated@@301 $generated@@637 $generated@@635 $generated@@636))
 :pattern ( ($generated@@102 $generated@@634 $generated@@637))
))))
 :pattern ( ($generated@@95 $generated@@634 ($generated@@198 $generated@@635) $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@98) (= ($generated@@170 $generated@@638 $generated@@157)  (or (= $generated@@638 $generated@@158) ($generated@@178 ($generated@@169 $generated@@638)))))
 :pattern ( ($generated@@170 $generated@@638 $generated@@157))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@181) (= (type $generated@@640) $generated@@80)) (= (type $generated@@641) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@168 $generated@@641) (and ($generated@@179 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@80) ($generated@@95 $generated@@639 ($generated@@180 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@95 $generated@@639 ($generated@@180 $generated@@640 $generated@@642) $generated@@641))
))))) ($generated@@301 ($generated@@188 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@301 ($generated@@188 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@181) (= (type $generated@@644) $generated@@80)) (= (type $generated@@645) ($generated@@97 $generated@@98 $generated@@99))) (and ($generated@@168 $generated@@645) (and ($generated@@179 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@80) ($generated@@95 $generated@@643 ($generated@@180 $generated@@646 $generated@@644) $generated@@645))
 :pattern ( ($generated@@95 $generated@@643 ($generated@@180 $generated@@646 $generated@@644) $generated@@645))
))))) ($generated@@301 ($generated@@189 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@301 ($generated@@189 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@190) (= (type $generated@@648) $generated@@190)) (= ($generated@@269 ($generated@@297 $generated@@647) ($generated@@297 $generated@@648)) ($generated@@297 ($generated@@269 $generated@@647 $generated@@648))))
 :pattern ( ($generated@@269 ($generated@@297 $generated@@647) ($generated@@297 $generated@@648)))
)))
(assert (forall (($generated@@649 Int) ) (! (= ($generated@@321 ($generated@@8 ($generated@@295 $generated@@649))) ($generated@@297 ($generated@@321 ($generated@@8 $generated@@649))))
 :pattern ( ($generated@@321 ($generated@@8 ($generated@@295 $generated@@649))))
)))
(assert (forall (($generated@@650 T@U) ) (! (= ($generated@@321 ($generated@@297 $generated@@650)) ($generated@@297 ($generated@@321 $generated@@650)))
 :pattern ( ($generated@@321 ($generated@@297 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (! (let (($generated@@652 ($generated@@316 (type $generated@@651))))
 (=> (and (= (type $generated@@651) ($generated@@315 $generated@@652)) (= ($generated@@314 $generated@@651) 0)) (= $generated@@651 ($generated@@313 $generated@@652))))
 :pattern ( ($generated@@314 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (! (let (($generated@@656 (type $generated@@654)))
 (=> (and (and (= (type $generated@@653) ($generated@@97 $generated@@656 $generated@@2)) (= (type $generated@@655) $generated@@2)) (<= 0 ($generated $generated@@655))) (= ($generated@@338 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)) (+ (- ($generated@@338 $generated@@653) ($generated ($generated@@102 $generated@@653 $generated@@654))) ($generated $generated@@655)))))
 :pattern ( ($generated@@338 ($generated@@103 $generated@@653 $generated@@654 $generated@@655)))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@658) $generated@@2)) ($generated@@95 $generated@@658 $generated@@46 $generated@@657))
 :pattern ( ($generated@@95 $generated@@658 $generated@@46 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@660) $generated@@3)) ($generated@@95 $generated@@660 $generated@@47 $generated@@659))
 :pattern ( ($generated@@95 $generated@@660 $generated@@47 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@662) $generated@@4)) ($generated@@95 $generated@@662 $generated@@44 $generated@@661))
 :pattern ( ($generated@@95 $generated@@662 $generated@@44 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@664) $generated@@512)) ($generated@@95 $generated@@664 $generated@@45 $generated@@663))
 :pattern ( ($generated@@95 $generated@@664 $generated@@45 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@97 $generated@@98 $generated@@99)) (= (type $generated@@666) $generated@@190)) ($generated@@95 $generated@@666 $generated@@48 $generated@@665))
 :pattern ( ($generated@@95 $generated@@666 $generated@@48 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@315 $generated@@190)) (= (type $generated@@668) $generated@@80)) (= ($generated@@170 $generated@@667 ($generated@@554 $generated@@668)) (forall (($generated@@669 Int) ) (!  (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@314 $generated@@667))) ($generated@@270 ($generated@@555 $generated@@667 $generated@@669) $generated@@668))
 :pattern ( ($generated@@555 $generated@@667 $generated@@669))
))))
 :pattern ( ($generated@@170 $generated@@667 ($generated@@554 $generated@@668)))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 Int) ) (!  (=> (= (type $generated@@671) ($generated@@315 $generated@@190)) (=> (and (<= 0 $generated@@672) (< $generated@@672 ($generated@@314 $generated@@671))) (< ($generated@@595 ($generated@@389 $generated@@181 ($generated@@555 $generated@@671 $generated@@672))) ($generated@@670 $generated@@671))))
 :pattern ( ($generated@@595 ($generated@@389 $generated@@181 ($generated@@555 $generated@@671 $generated@@672))))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@346 $generated@@190 $generated@@190)) (= (type $generated@@674) $generated@@80)) (= (type $generated@@675) $generated@@80)) ($generated@@170 $generated@@673 ($generated@@464 $generated@@674 $generated@@675))) (and (and ($generated@@170 ($generated@@344 $generated@@673) ($generated@@285 $generated@@674)) ($generated@@170 ($generated@@407 $generated@@673) ($generated@@285 $generated@@675))) ($generated@@170 ($generated@@438 $generated@@673) ($generated@@285 ($generated@@180 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@170 $generated@@673 ($generated@@464 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (and (= (type $generated@@676) ($generated@@364 $generated@@190 $generated@@190)) (= (type $generated@@677) $generated@@80)) (= (type $generated@@678) $generated@@80)) ($generated@@170 $generated@@676 ($generated@@472 $generated@@677 $generated@@678))) (and (and ($generated@@170 ($generated@@362 $generated@@676) ($generated@@290 $generated@@677)) ($generated@@170 ($generated@@418 $generated@@676) ($generated@@290 $generated@@678))) ($generated@@170 ($generated@@446 $generated@@676) ($generated@@290 ($generated@@180 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@170 $generated@@676 ($generated@@472 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@2) ($generated@@170 $generated@@679 $generated@@46))
 :pattern ( ($generated@@170 $generated@@679 $generated@@46))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@3) ($generated@@170 $generated@@680 $generated@@47))
 :pattern ( ($generated@@170 $generated@@680 $generated@@47))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@4) ($generated@@170 $generated@@681 $generated@@44))
 :pattern ( ($generated@@170 $generated@@681 $generated@@44))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@512) ($generated@@170 $generated@@682 $generated@@45))
 :pattern ( ($generated@@170 $generated@@682 $generated@@45))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@190) ($generated@@170 $generated@@683 $generated@@48))
 :pattern ( ($generated@@170 $generated@@683 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 (T@U) Bool)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () Int)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () Bool)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Bool)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@684) ($generated@@207 $generated@@98 $generated@@4)) (= (type $generated@@685) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@686) $generated@@98)) (= (type $generated@@687) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@689) $generated@@98)) (= (type $generated@@690) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@693) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@694) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@697) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@698) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@699) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@700) ($generated@@97 $generated@@98 $generated@@99))) (= (type $generated@@702) $generated@@98)) (= (type $generated@@704) $generated@@98)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@706  (=> (= $generated@@684 ($generated@@206 $generated@@158 $generated@@685 $generated@@60 false)) (=> (and (and (not (= $generated@@686 $generated@@158)) (= ($generated@@169 $generated@@686) $generated@@161)) (and (not ($generated@@0 ($generated@@104 ($generated@@102 $generated@@685 $generated@@686) $generated@@60))) (= $generated@@687 ($generated@@103 $generated@@685 $generated@@686 ($generated@@105 ($generated@@102 $generated@@685 $generated@@686) $generated@@60 ($generated@@11 true)))))) (=> (and (and (and ($generated@@168 $generated@@687) ($generated@@688 $generated@@687)) (and (not (= $generated@@689 $generated@@158)) (= ($generated@@169 $generated@@689) $generated@@164))) (and (and (not ($generated@@0 ($generated@@104 ($generated@@102 $generated@@687 $generated@@689) $generated@@60))) (= $generated@@690 ($generated@@103 $generated@@687 $generated@@689 ($generated@@105 ($generated@@102 $generated@@687 $generated@@689) $generated@@60 ($generated@@11 true))))) (and ($generated@@168 $generated@@690) ($generated@@688 $generated@@690)))) (and (=> (= (ControlFlow 0 2) (- 0 19)) true) (and (=> (= (ControlFlow 0 2) (- 0 18)) (not (= $generated@@686 $generated@@158))) (=> (not (= $generated@@686 $generated@@158)) (and (=> (= (ControlFlow 0 2) (- 0 17)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@686 $generated@@277))) (=> ($generated@@0 ($generated@@205 $generated@@684 $generated@@686 $generated@@277)) (and (=> (= (ControlFlow 0 2) (- 0 16)) true) (and (=> (= (ControlFlow 0 2) (- 0 15)) (not (= $generated@@686 $generated@@158))) (=> (not (= $generated@@686 $generated@@158)) (and (=> (= (ControlFlow 0 2) (- 0 14)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@686 $generated@@167))) (=> ($generated@@0 ($generated@@205 $generated@@684 $generated@@686 $generated@@167)) (=> (and (= $generated@@691 ($generated@@295 5)) (= $generated@@692 ($generated@@295 6))) (=> (and (and (= $generated@@693 ($generated@@103 $generated@@690 $generated@@686 ($generated@@105 ($generated@@102 $generated@@690 $generated@@686) $generated@@277 ($generated@@8 $generated@@691)))) ($generated@@168 $generated@@693)) (and (= $generated@@694 ($generated@@103 $generated@@693 $generated@@686 ($generated@@105 ($generated@@102 $generated@@693 $generated@@686) $generated@@167 ($generated@@8 $generated@@692)))) ($generated@@168 $generated@@694))) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) (not (= $generated@@689 $generated@@158))) (=> (not (= $generated@@689 $generated@@158)) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@689 $generated@@277))) (=> ($generated@@0 ($generated@@205 $generated@@684 $generated@@689 $generated@@277)) (and (=> (= (ControlFlow 0 2) (- 0 10)) true) (and (=> (= (ControlFlow 0 2) (- 0 9)) (not (= $generated@@689 $generated@@158))) (=> (not (= $generated@@689 $generated@@158)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@689 $generated@@174))) (=> ($generated@@0 ($generated@@205 $generated@@684 $generated@@689 $generated@@174)) (=> (and (= $generated@@695 ($generated@@295 100)) (= $generated@@696 ($generated@@295 102))) (=> (and (and (= $generated@@697 ($generated@@103 $generated@@694 $generated@@689 ($generated@@105 ($generated@@102 $generated@@694 $generated@@689) $generated@@277 ($generated@@8 $generated@@695)))) ($generated@@168 $generated@@697)) (and (= $generated@@698 ($generated@@103 $generated@@697 $generated@@689 ($generated@@105 ($generated@@102 $generated@@697 $generated@@689) $generated@@174 ($generated@@8 $generated@@696)))) ($generated@@168 $generated@@698))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@83 (type $generated@@708))))
 (=> (and (= (type $generated@@707) $generated@@98) (= (type $generated@@708) ($generated@@82 $generated@@709))) (=> (and (and (not (= $generated@@707 $generated@@158)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@698 $generated@@707) $generated@@60))) (= $generated@@707 $generated@@686)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@707 $generated@@708)))))
 :no-pattern (type $generated@@707)
 :no-pattern (type $generated@@708)
 :no-pattern ($generated $generated@@707)
 :no-pattern ($generated@@0 $generated@@707)
 :no-pattern ($generated $generated@@708)
 :no-pattern ($generated@@0 $generated@@708)
))) (=> (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (! (let (($generated@@712 ($generated@@83 (type $generated@@711))))
 (=> (and (= (type $generated@@710) $generated@@98) (= (type $generated@@711) ($generated@@82 $generated@@712))) (=> (and (and (not (= $generated@@710 $generated@@158)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@698 $generated@@710) $generated@@60))) (= $generated@@710 $generated@@686)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@710 $generated@@711)))))
 :no-pattern (type $generated@@710)
 :no-pattern (type $generated@@711)
 :no-pattern ($generated $generated@@710)
 :no-pattern ($generated@@0 $generated@@710)
 :no-pattern ($generated $generated@@711)
 :no-pattern ($generated@@0 $generated@@711)
)) (=> (and (and ($generated@@168 $generated@@699) ($generated@@688 $generated@@699)) (and (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@98) (=> (and (not (= $generated@@713 $generated@@158)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@698 $generated@@713) $generated@@60))) (or (= ($generated@@102 $generated@@699 $generated@@713) ($generated@@102 $generated@@698 $generated@@713)) (= $generated@@713 $generated@@686))))
 :pattern ( ($generated@@102 $generated@@699 $generated@@713))
)) ($generated@@153 $generated@@698 $generated@@699))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (! (let (($generated@@716 ($generated@@83 (type $generated@@715))))
 (=> (and (= (type $generated@@714) $generated@@98) (= (type $generated@@715) ($generated@@82 $generated@@716))) (=> (and (and (not (= $generated@@714 $generated@@158)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@699 $generated@@714) $generated@@60))) (= $generated@@714 $generated@@689)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@714 $generated@@715)))))
 :no-pattern (type $generated@@714)
 :no-pattern (type $generated@@715)
 :no-pattern ($generated $generated@@714)
 :no-pattern ($generated@@0 $generated@@714)
 :no-pattern ($generated $generated@@715)
 :no-pattern ($generated@@0 $generated@@715)
))) (=> (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (! (let (($generated@@719 ($generated@@83 (type $generated@@718))))
 (=> (and (= (type $generated@@717) $generated@@98) (= (type $generated@@718) ($generated@@82 $generated@@719))) (=> (and (and (not (= $generated@@717 $generated@@158)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@699 $generated@@717) $generated@@60))) (= $generated@@717 $generated@@689)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@717 $generated@@718)))))
 :no-pattern (type $generated@@717)
 :no-pattern (type $generated@@718)
 :no-pattern ($generated $generated@@717)
 :no-pattern ($generated@@0 $generated@@717)
 :no-pattern ($generated $generated@@718)
 :no-pattern ($generated@@0 $generated@@718)
)) (=> (and (and ($generated@@168 $generated@@700) ($generated@@688 $generated@@700)) (and (forall (($generated@@720 T@U) ) (!  (=> (= (type $generated@@720) $generated@@98) (=> (and (not (= $generated@@720 $generated@@158)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@699 $generated@@720) $generated@@60))) (or (= ($generated@@102 $generated@@700 $generated@@720) ($generated@@102 $generated@@699 $generated@@720)) (= $generated@@720 $generated@@689))))
 :pattern ( ($generated@@102 $generated@@700 $generated@@720))
)) ($generated@@153 $generated@@699 $generated@@700))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (! (let (($generated@@723 ($generated@@83 (type $generated@@722))))
 (=> (and (= (type $generated@@721) $generated@@98) (= (type $generated@@722) ($generated@@82 $generated@@723))) (=> (and (and (not (= $generated@@721 $generated@@158)) ($generated@@0 ($generated@@104 ($generated@@102 $generated@@700 $generated@@721) $generated@@60))) (= $generated@@721 $generated@@686)) ($generated@@0 ($generated@@205 $generated@@684 $generated@@721 $generated@@722)))))
 :no-pattern (type $generated@@721)
 :no-pattern (type $generated@@722)
 :no-pattern ($generated $generated@@721)
 :no-pattern ($generated@@0 $generated@@721)
 :no-pattern ($generated $generated@@722)
 :no-pattern ($generated@@0 $generated@@722)
)))))))))))))))))))))))))))))))))))))))))
(let (($generated@@724  (=> (and (and (and ($generated@@168 $generated@@685) ($generated@@688 $generated@@685)) (and (=> $generated@@701 (and ($generated@@170 $generated@@702 $generated@@263) ($generated@@95 $generated@@702 $generated@@263 $generated@@685))) true)) (and (and (=> $generated@@703 (and ($generated@@170 $generated@@704 $generated@@266) ($generated@@95 $generated@@704 $generated@@266 $generated@@685))) true) (and (= 2 $generated@@705) (= (ControlFlow 0 20) 2)))) $generated@@706)))
$generated@@724)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
