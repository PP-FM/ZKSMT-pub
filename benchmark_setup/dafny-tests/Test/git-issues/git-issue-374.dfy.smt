(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@364 () Int)
(declare-fun $generated@@365 () Bool)
(declare-fun $generated@@366 () Int)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@156)) (= (type $generated@@259) $generated@@156)) (= (type $generated@@260) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@254 $generated@@260)) (= ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@147) (= ($generated@@145 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@147) ($generated@@145 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@156) (= (type $generated@@266) $generated@@156)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@145 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@156)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@67)) ($generated@@135 $generated@@280 $generated@@281)) ($generated@@255 $generated@@282 $generated@@283 $generated@@280)) ($generated@@255 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@135 $generated@@280 $generated@@281) ($generated@@255 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@77 $generated@@286 $generated@@287 $generated@@284)) ($generated@@77 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@77 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@79 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@82 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@79 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@84 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@82 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@79 $generated@@331 $generated@@2)) (= ($generated@@162 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@84 $generated@@330 $generated@@332))) (<= ($generated ($generated@@84 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@84 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@162 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@156) ($generated@@229 $generated@@336 $generated@@139)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@336)) $generated@@336) ($generated@@143 ($generated@@333 $generated@@80 $generated@@336) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@336 $generated@@139))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@156) ($generated@@229 $generated@@337 $generated@@225)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@337)) $generated@@337) ($generated@@143 ($generated@@333 $generated@@80 $generated@@337) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@337 $generated@@225))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@80) (= ($generated@@143 $generated@@338 $generated@@225)  (and ($generated@@143 $generated@@338 $generated@@139) (not (= $generated@@338 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@338 $generated@@225))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@298 (type $generated@@339))))
(let (($generated@@341 ($generated@@297 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@296 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@295 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@294 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@298 (type $generated@@346))))
(let (($generated@@348 ($generated@@297 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@296 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@295 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@316 (type $generated@@350))))
(let (($generated@@352 ($generated@@315 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@314 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@313 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@312 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@362) $generated@@67)) (= ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@361 $generated@@363)))) ($generated@@229 $generated@@363 $generated@@362))
 :pattern ( ($generated@@84 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)))
)))
(assert  (=> (<= 0 $generated@@364) (=> (or $generated@@365 (not (= 0 $generated@@364))) (= $generated@@366 ($generated@@248 0)))))
(assert  (=> (<= 0 $generated@@364) (=> (or $generated@@365 (not (= 0 $generated@@364))) (= $generated@@366 ($generated@@248 0)))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@368) $generated@@67)) (= (type $generated@@369) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@238 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@156) ($generated@@0 ($generated@@84 $generated@@367 $generated@@370))) ($generated@@255 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@84 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@238 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@372) $generated@@67)) (= (type $generated@@373) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@371 ($generated@@243 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@156) ($generated@@0 ($generated@@84 $generated@@371 $generated@@374))) ($generated@@255 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@84 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@77 $generated@@371 ($generated@@243 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@84 ($generated@@289 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@84 ($generated@@289 $generated@@376) $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@298 (type $generated@@380))))
(let (($generated@@382 ($generated@@297 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@79 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@384) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@383) ($generated@@154 ($generated@@333 $generated@@147 $generated@@384)))) (= ($generated@@84 ($generated@@378 $generated@@383) ($generated@@154 ($generated@@333 $generated@@147 $generated@@384))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@384))))))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@316 (type $generated@@388))))
(let (($generated@@390 ($generated@@315 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@79 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@392) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@391) ($generated@@154 ($generated@@333 $generated@@147 $generated@@392)))) (= ($generated@@84 ($generated@@386 $generated@@391) ($generated@@154 ($generated@@333 $generated@@147 $generated@@392))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@392))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@297 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@296 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@343 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@378 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@315 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@314 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@84 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@398) $generated@@402))
 :pattern ( ($generated@@84 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@67)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) $generated@@67)) (= (type $generated@@409) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@406) $generated@@410))) (and ($generated@@255 ($generated@@84 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@255 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@77 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@67)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@415) $generated@@67)) (= (type $generated@@416) $generated@@67)) (= (type $generated@@417) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@414) $generated@@418))) (and ($generated@@255 ($generated@@84 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@255 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@84 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@77 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@419) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@419 $generated@@421))) (and ($generated@@135 $generated@@419 $generated@@420) ($generated@@135 $generated@@420 $generated@@421))) ($generated@@135 $generated@@419 $generated@@421))
 :pattern ( ($generated@@135 $generated@@419 $generated@@420) ($generated@@135 $generated@@420 $generated@@421))
)))
(assert  (=> (<= 0 $generated@@364) (=> (or $generated@@365 (not (= 0 $generated@@364))) true)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@79 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@312 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@312 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@354 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@354 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@316 (type $generated@@430))))
(let (($generated@@432 ($generated@@315 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@314 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@313 $generated@@432 $generated@@431)) (= ($generated@@385 $generated@@430) ($generated@@422 $generated@@156))))))
 :pattern ( ($generated@@385 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@298 (type $generated@@433))))
(let (($generated@@435 ($generated@@297 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@296 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@295 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@377 $generated@@433) ($generated@@275 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@377 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@316 (type $generated@@438))))
(let (($generated@@440 ($generated@@315 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@314 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@313 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@156) (= (type $generated@@442) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@438) ($generated@@275 ($generated@@228 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@156) ($generated@@229 $generated@@443 $generated@@46)) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@443)) $generated@@443) ($generated@@143 ($generated@@333 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@156) ($generated@@229 $generated@@444 $generated@@47)) (and (= ($generated@@275 ($generated@@333 $generated@@3 $generated@@444)) $generated@@444) ($generated@@143 ($generated@@333 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@156) ($generated@@229 $generated@@445 $generated@@44)) (and (= ($generated@@275 ($generated@@333 $generated@@4 $generated@@445)) $generated@@445) ($generated@@143 ($generated@@333 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@156) ($generated@@229 $generated@@447 $generated@@45)) (and (= ($generated@@275 ($generated@@333 $generated@@446 $generated@@447)) $generated@@447) ($generated@@143 ($generated@@333 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@67) (= ($generated@@229 ($generated@@275 $generated@@448) $generated@@449) ($generated@@143 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@229 ($generated@@275 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@82 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@79 $generated@@451 $generated@@2)) (<= 0 ($generated@@288 $generated@@450))))
 :pattern ( ($generated@@288 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@270 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@269 $generated@@453)) (<= 0 ($generated@@268 $generated@@452))))
 :pattern ( ($generated@@268 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@403 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@403 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@403 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@403 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@75 ($generated@@403 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@411 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@411 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@75 ($generated@@411 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@156) (= (type $generated@@475) $generated@@156)) (= ($generated@@261 ($generated@@228 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@146 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@146 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@146 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@156) (= (type $generated@@485) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@156) (= (type $generated@@487) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@228 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@270 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@269 $generated@@156)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@268 $generated@@494))) ($generated@@255 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@77 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@78 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@78 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@238 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@504 ($generated@@243 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@508 ($generated@@161 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@161 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@333 $generated@@517 ($generated@@275 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@275 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) (= ($generated@@143 $generated@@518 ($generated@@403 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@518) $generated@@521))) (and ($generated@@229 ($generated@@84 ($generated@@378 $generated@@518) $generated@@521) $generated@@520) ($generated@@229 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@518) $generated@@521))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@143 $generated@@518 ($generated@@403 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@523) $generated@@67)) (= (type $generated@@524) $generated@@67)) (= ($generated@@143 $generated@@522 ($generated@@411 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@522) $generated@@525))) (and ($generated@@229 ($generated@@84 ($generated@@386 $generated@@522) $generated@@525) $generated@@524) ($generated@@229 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@84 ($generated@@386 $generated@@522) $generated@@525))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@143 $generated@@522 ($generated@@411 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@156) (= (type $generated@@529) $generated@@156)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@228 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@228 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@156)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@156) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@229 $generated@@532 ($generated@@403 $generated@@533 $generated@@534))) (and (= ($generated@@275 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@532)) $generated@@532) ($generated@@143 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@532) ($generated@@403 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@403 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@156) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) ($generated@@229 $generated@@535 ($generated@@411 $generated@@536 $generated@@537))) (and (= ($generated@@275 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@535)) $generated@@535) ($generated@@143 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@535) ($generated@@411 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@411 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@156)) ($generated@@229 $generated@@540 ($generated@@146 $generated@@538 $generated@@539))) (and (= ($generated@@275 ($generated@@333 $generated@@147 $generated@@540)) $generated@@540) ($generated@@143 ($generated@@333 $generated@@147 $generated@@540) ($generated@@146 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@540 ($generated@@146 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@84 ($generated@@422 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@84 ($generated@@422 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@72)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@67) (= (type $generated@@546) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@146 $generated@@545 $generated@@546)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@147) (= ($generated@@526 ($generated@@275 $generated@@547)) ($generated@@527 $generated@@547)))
 :pattern ( ($generated@@526 ($generated@@275 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@156) ($generated@@229 $generated@@548 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@548)) $generated@@548) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@78 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@156) (= (type $generated@@550) $generated@@67)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@549)) $generated@@549) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@156) (= (type $generated@@552) $generated@@67)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@551)) $generated@@551) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@156) (= (type $generated@@554) $generated@@67)) ($generated@@229 $generated@@553 ($generated@@161 $generated@@554))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@553)) $generated@@553) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@553) ($generated@@161 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@161 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@67)) ($generated@@229 $generated@@555 ($generated@@488 $generated@@556))) (and (= ($generated@@275 ($generated@@333 ($generated@@269 $generated@@156) $generated@@555)) $generated@@555) ($generated@@143 ($generated@@333 ($generated@@269 $generated@@156) $generated@@555) ($generated@@488 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@488 $generated@@556)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@543 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@543 $generated@@225) $generated@@66))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@557 $generated@@560)))) ($generated@@255 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@84 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@147) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@563) (and ($generated@@145 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@67) ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@255 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@255 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@255 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@255 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@156)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@275 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@275 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@275 $generated@@572)))
 :pattern ( ($generated@@275 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@270 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@269 $generated@@574)) (= ($generated@@268 $generated@@573) 0)) (= $generated@@573 ($generated@@267 $generated@@574))))
 :pattern ( ($generated@@268 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@288 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@288 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@288 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@446)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@156)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@269 $generated@@156)) (= (type $generated@@590) $generated@@67)) (= ($generated@@143 $generated@@589 ($generated@@488 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@268 $generated@@589))) ($generated@@229 ($generated@@489 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@489 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@143 $generated@@589 ($generated@@488 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@269 $generated@@156)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@268 $generated@@593))) (< ($generated@@527 ($generated@@333 $generated@@147 ($generated@@489 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@527 ($generated@@333 $generated@@147 ($generated@@489 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@143 $generated@@595 ($generated@@403 $generated@@596 $generated@@597))) (and (and ($generated@@143 ($generated@@294 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@143 ($generated@@343 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@143 ($generated@@377 $generated@@595) ($generated@@238 ($generated@@146 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@143 $generated@@595 ($generated@@403 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@143 $generated@@598 ($generated@@411 $generated@@599 $generated@@600))) (and (and ($generated@@143 ($generated@@312 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@143 ($generated@@354 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@143 ($generated@@385 $generated@@598) ($generated@@243 ($generated@@146 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@143 $generated@@598 ($generated@@411 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@143 $generated@@601 $generated@@46))
 :pattern ( ($generated@@143 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@143 $generated@@602 $generated@@47))
 :pattern ( ($generated@@143 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@143 $generated@@603 $generated@@44))
 :pattern ( ($generated@@143 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@446) ($generated@@143 $generated@@604 $generated@@45))
 :pattern ( ($generated@@143 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@156) ($generated@@143 $generated@@605 $generated@@48))
 :pattern ( ($generated@@143 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
