(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@528 (T@U T@U T@U) T@U)
(declare-fun $generated@@549 (T@T) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@604 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(= (type ($generated@@400 $generated@@401 $generated@@402)) ($generated@@76 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@405)))
 (=> (and (and (= (type $generated@@404) ($generated@@76 $generated@@407 $generated@@4)) (= (type $generated@@406) $generated@@407)) ($generated@@0 ($generated@@81 $generated@@404 $generated@@406))) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))))
 :pattern ( ($generated@@400 $generated@@404 $generated@@405) ($generated@@81 $generated@@404 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@409)))
 (=> (and (= (type $generated@@408) ($generated@@76 $generated@@411 $generated@@4)) (= (type $generated@@410) $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))  (or (= $generated@@410 $generated@@409) ($generated@@0 ($generated@@81 $generated@@408 $generated@@410))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@412) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@414) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@412 $generated@@414))) (and ($generated@@132 $generated@@412 $generated@@413) ($generated@@132 $generated@@413 $generated@@414))) ($generated@@132 $generated@@412 $generated@@414))
 :pattern ( ($generated@@132 $generated@@412 $generated@@413) ($generated@@132 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@303 (type $generated@@417))))
(let (($generated@@419 ($generated@@302 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@301 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@300 $generated@@419 $generated@@418)) (= ($generated@@299 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@299 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@303 (type $generated@@420))))
(let (($generated@@422 ($generated@@302 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@301 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@300 $generated@@422 $generated@@421)) (= ($generated@@335 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@335 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@303 (type $generated@@423))))
(let (($generated@@425 ($generated@@302 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@301 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@300 $generated@@425 $generated@@424)) (= ($generated@@366 $generated@@423) ($generated@@415 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@285 (type $generated@@426))))
(let (($generated@@428 ($generated@@284 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@283 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@282 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@149) (= (type $generated@@430) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@426) ($generated@@262 ($generated@@215 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@355 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@303 (type $generated@@431))))
(let (($generated@@433 ($generated@@302 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@301 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@300 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@149) (= (type $generated@@435) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@431) ($generated@@262 ($generated@@215 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@366 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@149) ($generated@@216 $generated@@436 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@436)) $generated@@436) ($generated@@136 ($generated@@356 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@149) ($generated@@216 $generated@@437 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@437)) $generated@@437) ($generated@@136 ($generated@@356 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@149) ($generated@@216 $generated@@438 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@438)) $generated@@438) ($generated@@136 ($generated@@356 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@149) ($generated@@216 $generated@@440 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@439 $generated@@440)) $generated@@440) ($generated@@136 ($generated@@356 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@441) $generated@@442) ($generated@@136 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@275 $generated@@443))))
 :pattern ( ($generated@@275 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@257 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@256 $generated@@446)) (<= 0 ($generated@@255 $generated@@445))))
 :pattern ( ($generated@@255 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@384 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@384 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@384 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@384 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@392 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@392 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@392 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@392 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@139 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@139 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@139 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@139 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@149) (= (type $generated@@478) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@215 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@149) (= (type $generated@@480) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@215 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@257 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@256 $generated@@149)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@255 $generated@@487))) ($generated@@242 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (! (let (($generated@@493 (type $generated@@492)))
 (=> (= (type $generated@@491) ($generated@@76 $generated@@493 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@491 $generated@@492) $generated@@492))))
 :pattern ( ($generated@@400 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@495 Int) ) (! (= ($generated@@494 ($generated@@75 $generated@@495)) $generated@@495)
 :pattern ( ($generated@@75 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@225 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@225 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@499)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@230 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@230 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@503)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@154 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@154 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@507)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@481 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@481 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@511)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@356 $generated@@513 ($generated@@262 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@262 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@136 $generated@@514 ($generated@@384 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@514) $generated@@517))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@514) $generated@@517) $generated@@516) ($generated@@216 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@136 $generated@@514 ($generated@@384 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@136 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@518) $generated@@521))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@518) $generated@@521) $generated@@520) ($generated@@216 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@136 $generated@@518 ($generated@@392 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@149)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@215 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@215 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@149) (= (type $generated@@527) $generated@@149)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@215 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@215 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(let (($generated@@533 (type $generated@@530)))
(= (type ($generated@@528 $generated@@529 $generated@@530 $generated@@531)) ($generated@@283 $generated@@533 $generated@@532))))
 :pattern ( ($generated@@528 $generated@@529 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(let (($generated@@539 (type $generated@@535)))
 (=> (and (= (type $generated@@534) ($generated@@283 $generated@@539 $generated@@538)) (= (type $generated@@536) $generated@@539)) (and (=> (= $generated@@536 $generated@@535) (and ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536)) (= ($generated@@81 ($generated@@357 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536) $generated@@537))) (=> (not (= $generated@@536 $generated@@535)) (and (= ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536)) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@534) $generated@@536))) (= ($generated@@81 ($generated@@357 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536) ($generated@@81 ($generated@@357 $generated@@534) $generated@@536))))))))
 :pattern ( ($generated@@81 ($generated@@281 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@81 ($generated@@357 ($generated@@528 $generated@@534 $generated@@535 $generated@@537)) $generated@@536))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@149) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@64)) ($generated@@216 $generated@@540 ($generated@@384 $generated@@541 $generated@@542))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@540)) $generated@@540) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@540) ($generated@@384 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@216 $generated@@540 ($generated@@384 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) $generated@@64)) ($generated@@216 $generated@@543 ($generated@@392 $generated@@544 $generated@@545))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@543)) $generated@@543) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@543) ($generated@@392 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@216 $generated@@543 ($generated@@392 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@64) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) $generated@@149)) ($generated@@216 $generated@@548 ($generated@@139 $generated@@546 $generated@@547))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@548)) $generated@@548) ($generated@@136 ($generated@@356 $generated@@140 $generated@@548) ($generated@@139 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@216 $generated@@548 ($generated@@139 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@550 T@T) ) (! (= (type ($generated@@549 $generated@@550)) ($generated@@76 $generated@@550 $generated@@4))
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@81 ($generated@@549 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@81 ($generated@@549 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@554) $generated@@553))))
 :pattern ( (let (($generated@@554 (type $generated@@553)))
($generated@@81 ($generated@@415 $generated@@554) $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@69)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@64) (= (type $generated@@558) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@557 $generated@@558)) $generated@@62) (= ($generated@@555 ($generated@@139 $generated@@557 $generated@@558)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@140) (= ($generated@@522 ($generated@@262 $generated@@559)) ($generated@@523 $generated@@559)))
 :pattern ( ($generated@@522 ($generated@@262 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@149) ($generated@@216 $generated@@560 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@560)) $generated@@560) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@560) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@560 ($generated@@75 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@64)) ($generated@@216 $generated@@561 ($generated@@225 $generated@@562))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@561)) $generated@@561) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@561) ($generated@@225 $generated@@562))))
 :pattern ( ($generated@@216 $generated@@561 ($generated@@225 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@149) (= (type $generated@@564) $generated@@64)) ($generated@@216 $generated@@563 ($generated@@230 $generated@@564))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@563)) $generated@@563) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@563) ($generated@@230 $generated@@564))))
 :pattern ( ($generated@@216 $generated@@563 ($generated@@230 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@149) (= (type $generated@@566) $generated@@64)) ($generated@@216 $generated@@565 ($generated@@154 $generated@@566))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@565)) $generated@@565) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@565) ($generated@@154 $generated@@566))))
 :pattern ( ($generated@@216 $generated@@565 ($generated@@154 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@149) (= (type $generated@@568) $generated@@64)) ($generated@@216 $generated@@567 ($generated@@481 $generated@@568))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@567)) $generated@@567) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@567) ($generated@@481 $generated@@568))))
 :pattern ( ($generated@@216 $generated@@567 ($generated@@481 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@569 ($generated@@154 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@569 $generated@@572)))) ($generated@@242 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@81 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@154 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@140) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@575) (and ($generated@@138 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@64) ($generated@@74 $generated@@573 ($generated@@139 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@139 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@242 ($generated@@147 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@140) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@579) (and ($generated@@138 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@64) ($generated@@74 $generated@@577 ($generated@@139 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@74 $generated@@577 ($generated@@139 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@242 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@149) (= (type $generated@@582) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@581) ($generated@@237 $generated@@582)) ($generated@@237 ($generated@@215 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@581) ($generated@@237 $generated@@582)))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@583))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@583))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@584)) ($generated@@237 ($generated@@262 $generated@@584)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@257 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@256 $generated@@586)) (= ($generated@@255 $generated@@585) 0)) (= $generated@@585 ($generated@@254 $generated@@586))))
 :pattern ( ($generated@@255 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@76 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@275 ($generated@@82 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@275 $generated@@587) ($generated ($generated@@81 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@2)) ($generated@@74 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@3)) ($generated@@74 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@4)) ($generated@@74 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@439)) ($generated@@74 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@149)) ($generated@@74 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@256 $generated@@149)) (= (type $generated@@602) $generated@@64)) (= ($generated@@136 $generated@@601 ($generated@@481 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@255 $generated@@601))) ($generated@@216 ($generated@@482 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@482 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@136 $generated@@601 ($generated@@481 $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 Int) ) (!  (=> (= (type $generated@@605) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@606) (< $generated@@606 ($generated@@255 $generated@@605))) (< ($generated@@523 ($generated@@356 $generated@@140 ($generated@@482 $generated@@605 $generated@@606))) ($generated@@604 $generated@@605))))
 :pattern ( ($generated@@523 ($generated@@356 $generated@@140 ($generated@@482 $generated@@605 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@64)) ($generated@@136 $generated@@607 ($generated@@384 $generated@@608 $generated@@609))) (and (and ($generated@@136 ($generated@@281 $generated@@607) ($generated@@225 $generated@@608)) ($generated@@136 ($generated@@324 $generated@@607) ($generated@@225 $generated@@609))) ($generated@@136 ($generated@@355 $generated@@607) ($generated@@225 ($generated@@139 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@136 $generated@@607 ($generated@@384 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@611) $generated@@64)) (= (type $generated@@612) $generated@@64)) ($generated@@136 $generated@@610 ($generated@@392 $generated@@611 $generated@@612))) (and (and ($generated@@136 ($generated@@299 $generated@@610) ($generated@@230 $generated@@611)) ($generated@@136 ($generated@@335 $generated@@610) ($generated@@230 $generated@@612))) ($generated@@136 ($generated@@366 $generated@@610) ($generated@@230 ($generated@@139 $generated@@611 $generated@@612)))))
 :pattern ( ($generated@@136 $generated@@610 ($generated@@392 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@2) ($generated@@136 $generated@@613 $generated@@46))
 :pattern ( ($generated@@136 $generated@@613 $generated@@46))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@3) ($generated@@136 $generated@@614 $generated@@47))
 :pattern ( ($generated@@136 $generated@@614 $generated@@47))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@4) ($generated@@136 $generated@@615 $generated@@44))
 :pattern ( ($generated@@136 $generated@@615 $generated@@44))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@439) ($generated@@136 $generated@@616 $generated@@45))
 :pattern ( ($generated@@136 $generated@@616 $generated@@45))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@149) ($generated@@136 $generated@@617 $generated@@48))
 :pattern ( ($generated@@136 $generated@@617 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U T@U) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) Bool)
(declare-fun $generated@@369 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U) Int)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@497 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@548 (T@U Int) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@612 (T@T) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@690 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@79 (type $generated@@216))))
(= (type ($generated@@215 $generated@@216 $generated@@217)) ($generated@@76 $generated@@218 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@79 (type $generated@@219))))
 (=> (and (= (type $generated@@219) ($generated@@76 $generated@@221 $generated@@4)) (= (type $generated@@220) ($generated@@76 $generated@@221 $generated@@4))) (= ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220) ($generated@@215 $generated@@219 $generated@@220))))
 :pattern ( ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@79 (type $generated@@223))))
(= (type ($generated@@222 $generated@@223 $generated@@224)) ($generated@@76 $generated@@225 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@79 (type $generated@@226))))
 (=> (and (= (type $generated@@226) ($generated@@76 $generated@@228 $generated@@4)) (= (type $generated@@227) ($generated@@76 $generated@@228 $generated@@4))) (= ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227) ($generated@@222 $generated@@226 $generated@@227))))
 :pattern ( ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@140)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@149)) (= (type $generated@@236) $generated@@149)) (= ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@139 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@139 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@79 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@76 $generated@@240 $generated@@4)) (= (type $generated@@239) ($generated@@76 $generated@@240 $generated@@4))) (= (+ ($generated@@237 ($generated@@215 $generated@@238 $generated@@239)) ($generated@@237 ($generated@@222 $generated@@238 $generated@@239))) (+ ($generated@@237 $generated@@238) ($generated@@237 $generated@@239)))))
 :pattern ( ($generated@@237 ($generated@@215 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 ($generated@@222 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@140) (= (type $generated@@242) $generated@@140)) (= ($generated@@146 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@146 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@149) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@230 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@136 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@149) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@230 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@136 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) $generated@@64)) (= (type $generated@@263) $generated@@149)) (= (type $generated@@264) $generated@@149)) (= (type $generated@@265) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@259 $generated@@265)) (= ($generated@@74 ($generated@@229 $generated@@263 $generated@@264) ($generated@@139 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@263 $generated@@264) ($generated@@139 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@140) (= ($generated@@138 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@140) ($generated@@138 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@149) (= (type $generated@@271) $generated@@149)) (= $generated@@269 ($generated@@229 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@138 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@149)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@64) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@74 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@260 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@287) $generated@@149)) (= (type $generated@@288) $generated@@64)) ($generated@@132 $generated@@285 $generated@@286)) ($generated@@260 $generated@@287 $generated@@288 $generated@@285)) ($generated@@260 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@132 $generated@@285 $generated@@286) ($generated@@260 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@292) $generated@@64)) ($generated@@132 $generated@@289 $generated@@290)) ($generated@@74 $generated@@291 $generated@@292 $generated@@289)) ($generated@@74 $generated@@291 $generated@@292 $generated@@290))
 :pattern ( ($generated@@132 $generated@@289 $generated@@290) ($generated@@74 $generated@@291 $generated@@292 $generated@@289))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@76 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@79 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@76 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@81 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 18)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@79 (type $generated@@336))))
 (=> (and (= (type $generated@@336) ($generated@@76 $generated@@338 $generated@@4)) (= (type $generated@@337) ($generated@@76 $generated@@338 $generated@@4))) (= ($generated@@335 $generated@@336 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (= ($generated@@0 ($generated@@81 $generated@@336 $generated@@339)) ($generated@@0 ($generated@@81 $generated@@337 $generated@@339))))
 :pattern ( ($generated@@81 $generated@@336 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@79 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@76 $generated@@341 $generated@@2)) (= ($generated@@155 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@81 $generated@@340 $generated@@342))) (<= ($generated ($generated@@81 $generated@@340 $generated@@342)) ($generated@@293 $generated@@340))))
 :pattern ( ($generated@@81 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@155 $generated@@340))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(let (($generated@@345 ($generated@@302 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@301 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@300 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@299 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@303 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@303 (type $generated@@350))))
(let (($generated@@352 ($generated@@302 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@301 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@300 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@321 (type $generated@@354))))
(let (($generated@@356 ($generated@@320 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@319 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@318 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@317 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@321 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@76 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@321 (type $generated@@361))))
(let (($generated@@363 ($generated@@320 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@319 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@318 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@366) $generated@@64)) (= ($generated@@136 $generated@@365 ($generated@@154 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@365 $generated@@367)))) ($generated@@230 $generated@@367 $generated@@366))
 :pattern ( ($generated@@81 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@136 $generated@@365 ($generated@@154 $generated@@366)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@79 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370 $generated@@371)) ($generated@@76 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@79 (type $generated@@373))))
 (=> (and (and (= (type $generated@@373) ($generated@@76 $generated@@375 $generated@@4)) (= (type $generated@@374) ($generated@@76 $generated@@375 $generated@@4))) ($generated@@368 $generated@@373 $generated@@374)) (and (= ($generated@@369 ($generated@@215 $generated@@373 $generated@@374) $generated@@373) $generated@@374) (= ($generated@@369 ($generated@@215 $generated@@373 $generated@@374) $generated@@374) $generated@@373))))
 :pattern ( ($generated@@215 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@303 (type $generated@@377))))
(let (($generated@@379 ($generated@@302 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@301 $generated@@379 $generated@@378)) (= (= ($generated@@376 $generated@@377) 0) (= $generated@@377 ($generated@@300 $generated@@379 $generated@@378))))))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
 (=> (and (= (type $generated@@380) ($generated@@76 $generated@@383 $generated@@4)) (= (type $generated@@381) ($generated@@76 $generated@@383 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@222 $generated@@380 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 $generated@@380 $generated@@382)) ($generated@@0 ($generated@@81 $generated@@381 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@222 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
 (=> (and (= (type $generated@@384) ($generated@@76 $generated@@387 $generated@@4)) (= (type $generated@@385) ($generated@@76 $generated@@387 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@369 $generated@@384 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 $generated@@384 $generated@@386)) (not ($generated@@0 ($generated@@81 $generated@@385 $generated@@386)))))))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@243 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 $generated@@388 $generated@@391))) ($generated@@260 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@81 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@243 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@248 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@149) ($generated@@0 ($generated@@81 $generated@@392 $generated@@395))) ($generated@@260 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@81 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@248 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@81 ($generated@@294 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@81 ($generated@@294 $generated@@397) $generated@@396)))
)))
(assert  (and (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@398 $generated@@401)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@398 $generated@@401))
)) (forall (($generated@@402 T@T) ($generated@@403 T@U) ) (! (= (type ($generated@@399 $generated@@402 $generated@@403)) $generated@@402)
 :pattern ( ($generated@@399 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@303 (type $generated@@404))))
(let (($generated@@406 ($generated@@302 (type $generated@@404))))
(= (type ($generated@@400 $generated@@404)) ($generated@@76 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@400 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@408) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@398 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@407) ($generated@@147 ($generated@@399 $generated@@140 $generated@@408)))) (= ($generated@@81 ($generated@@400 $generated@@407) ($generated@@147 ($generated@@399 $generated@@140 $generated@@408))) ($generated@@148 ($generated@@399 $generated@@140 $generated@@408))))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@321 (type $generated@@412))))
(let (($generated@@414 ($generated@@320 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@76 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@416) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@415) ($generated@@147 ($generated@@399 $generated@@140 $generated@@416)))) (= ($generated@@81 ($generated@@410 $generated@@415) ($generated@@147 ($generated@@399 $generated@@140 $generated@@416))) ($generated@@148 ($generated@@399 $generated@@140 $generated@@416))))))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@302 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@301 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@81 ($generated@@400 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@320 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@319 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@81 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) $generated@@64)) (= (type $generated@@433) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@430) $generated@@434))) (and ($generated@@260 ($generated@@81 ($generated@@400 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@260 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@430) $generated@@434))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@74 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@439) $generated@@64)) (= (type $generated@@440) $generated@@64)) (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@438) $generated@@442))) (and ($generated@@260 ($generated@@81 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@260 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@74 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@443))))
 (=> (and (and (= (type $generated@@443) ($generated@@76 $generated@@445 $generated@@4)) (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@4))) ($generated@@335 $generated@@443 $generated@@444)) (= $generated@@443 $generated@@444)))
 :pattern ( ($generated@@335 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(= (type ($generated@@446 $generated@@447 $generated@@448)) ($generated@@76 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@451)))
 (=> (and (and (= (type $generated@@450) ($generated@@76 $generated@@453 $generated@@4)) (= (type $generated@@452) $generated@@453)) ($generated@@0 ($generated@@81 $generated@@450 $generated@@452))) ($generated@@0 ($generated@@81 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))))
 :pattern ( ($generated@@446 $generated@@450 $generated@@451) ($generated@@81 $generated@@450 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
 (=> (and (and (= (type $generated@@454) ($generated@@76 $generated@@457 $generated@@4)) (= (type $generated@@455) ($generated@@76 $generated@@457 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@454 $generated@@456))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@454 $generated@@455) $generated@@456))))
 :pattern ( ($generated@@215 $generated@@454 $generated@@455) ($generated@@81 $generated@@454 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (! (let (($generated@@461 (type $generated@@460)))
 (=> (and (and (= (type $generated@@458) ($generated@@76 $generated@@461 $generated@@4)) (= (type $generated@@459) ($generated@@76 $generated@@461 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@459 $generated@@460))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@458 $generated@@459) $generated@@460))))
 :pattern ( ($generated@@215 $generated@@458 $generated@@459) ($generated@@81 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@463)))
 (=> (and (= (type $generated@@462) ($generated@@76 $generated@@465 $generated@@4)) (= (type $generated@@464) $generated@@465)) (= ($generated@@0 ($generated@@81 ($generated@@446 $generated@@462 $generated@@463) $generated@@464))  (or (= $generated@@464 $generated@@463) ($generated@@0 ($generated@@81 $generated@@462 $generated@@464))))))
 :pattern ( ($generated@@81 ($generated@@446 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@466) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@467) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@468) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@466 $generated@@468))) (and ($generated@@132 $generated@@466 $generated@@467) ($generated@@132 $generated@@467 $generated@@468))) ($generated@@132 $generated@@466 $generated@@468))
 :pattern ( ($generated@@132 $generated@@466 $generated@@467) ($generated@@132 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@471)))
 (=> (and (and (= (type $generated@@469) ($generated@@76 $generated@@472 $generated@@4)) (= (type $generated@@470) ($generated@@76 $generated@@472 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@470 $generated@@471))) (not ($generated@@0 ($generated@@81 ($generated@@369 $generated@@469 $generated@@470) $generated@@471)))))
 :pattern ( ($generated@@369 $generated@@469 $generated@@470) ($generated@@81 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@76 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@321 (type $generated@@475))))
(let (($generated@@477 ($generated@@320 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@319 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@318 $generated@@477 $generated@@476)) (= ($generated@@317 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@317 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@321 (type $generated@@478))))
(let (($generated@@480 ($generated@@320 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@319 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@318 $generated@@480 $generated@@479)) (= ($generated@@358 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@358 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@321 (type $generated@@481))))
(let (($generated@@483 ($generated@@320 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@319 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@318 $generated@@483 $generated@@482)) (= ($generated@@409 $generated@@481) ($generated@@473 $generated@@149))))))
 :pattern ( ($generated@@409 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@303 (type $generated@@484))))
(let (($generated@@486 ($generated@@302 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@301 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@300 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@149) (= (type $generated@@488) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@484) ($generated@@280 ($generated@@229 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@398 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@321 (type $generated@@489))))
(let (($generated@@491 ($generated@@320 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@319 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@318 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@149) (= (type $generated@@493) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@409 $generated@@489) ($generated@@280 ($generated@@229 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@409 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) ($generated@@230 $generated@@494 $generated@@46)) (and (= ($generated@@280 ($generated@@399 $generated@@2 $generated@@494)) $generated@@494) ($generated@@136 ($generated@@399 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@149) ($generated@@230 $generated@@495 $generated@@47)) (and (= ($generated@@280 ($generated@@399 $generated@@3 $generated@@495)) $generated@@495) ($generated@@136 ($generated@@399 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) ($generated@@230 $generated@@496 $generated@@44)) (and (= ($generated@@280 ($generated@@399 $generated@@4 $generated@@496)) $generated@@496) ($generated@@136 ($generated@@399 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@496 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@497) 20))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@149) ($generated@@230 $generated@@498 $generated@@45)) (and (= ($generated@@280 ($generated@@399 $generated@@497 $generated@@498)) $generated@@498) ($generated@@136 ($generated@@399 $generated@@497 $generated@@498) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@498 $generated@@45))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@79 (type $generated@@499))))
 (=> (and (= (type $generated@@499) ($generated@@76 $generated@@501 $generated@@4)) (= (type $generated@@500) ($generated@@76 $generated@@501 $generated@@4))) (and (= (+ (+ ($generated@@237 ($generated@@369 $generated@@499 $generated@@500)) ($generated@@237 ($generated@@369 $generated@@500 $generated@@499))) ($generated@@237 ($generated@@222 $generated@@499 $generated@@500))) ($generated@@237 ($generated@@215 $generated@@499 $generated@@500))) (= ($generated@@237 ($generated@@369 $generated@@499 $generated@@500)) (- ($generated@@237 $generated@@499) ($generated@@237 ($generated@@222 $generated@@499 $generated@@500)))))))
 :pattern ( ($generated@@237 ($generated@@369 $generated@@499 $generated@@500)))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@230 ($generated@@280 $generated@@502) $generated@@503) ($generated@@136 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@230 ($generated@@280 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@79 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@76 $generated@@505 $generated@@4)) (<= 0 ($generated@@237 $generated@@504))))
 :pattern ( ($generated@@237 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@79 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@76 $generated@@507 $generated@@2)) (<= 0 ($generated@@293 $generated@@506))))
 :pattern ( ($generated@@293 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@275 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@274 $generated@@509)) (<= 0 ($generated@@273 $generated@@508))))
 :pattern ( ($generated@@273 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@303 (type $generated@@510))))
(let (($generated@@512 ($generated@@302 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@301 $generated@@512 $generated@@511)) (<= 0 ($generated@@376 $generated@@510)))))
 :pattern ( ($generated@@376 $generated@@510))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@427 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@427 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@517 ($generated@@427 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@427 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (= ($generated@@72 ($generated@@427 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@64) (= (type $generated@@526) $generated@@64)) (= ($generated@@523 ($generated@@435 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@435 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= ($generated@@527 ($generated@@435 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@435 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= ($generated@@72 ($generated@@435 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@149) (= (type $generated@@534) $generated@@149)) (= ($generated@@266 ($generated@@229 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@64)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= ($generated@@535 ($generated@@139 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@139 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (= ($generated@@539 ($generated@@139 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@139 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@149)) (= ($generated@@147 ($generated@@229 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@229 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@149)) (= ($generated@@148 ($generated@@229 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@229 $generated@@545 $generated@@546))
)))
(assert  (and (forall (($generated@@549 T@U) ) (! (= (type ($generated@@547 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@547 $generated@@549))
)) (forall (($generated@@550 T@U) ($generated@@551 Int) ) (! (let (($generated@@552 ($generated@@275 (type $generated@@550))))
(= (type ($generated@@548 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@548 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@274 $generated@@149)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@547 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@273 $generated@@553))) ($generated@@260 ($generated@@548 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@548 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@547 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (=> (= (type $generated@@557) ($generated@@76 $generated@@559 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@446 $generated@@557 $generated@@558) $generated@@558))))
 :pattern ( ($generated@@446 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (=> (and (= (type $generated@@560) ($generated@@76 $generated@@562 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@560 $generated@@561))) (= ($generated@@237 ($generated@@446 $generated@@560 $generated@@561)) ($generated@@237 $generated@@560))))
 :pattern ( ($generated@@237 ($generated@@446 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@75 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@75 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@64)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@64) (= ($generated@@565 ($generated@@243 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@243 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@568)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@64)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@64) (= ($generated@@569 ($generated@@248 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@248 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@572)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@64)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@64) (= ($generated@@573 ($generated@@154 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@154 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@576)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@64)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@64) (= ($generated@@577 ($generated@@547 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@547 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@64) (= ($generated@@72 ($generated@@547 $generated@@580)) $generated@@57))
 :pattern ( ($generated@@547 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
(= ($generated@@399 $generated@@582 ($generated@@280 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@280 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@584) $generated@@64)) (= (type $generated@@585) $generated@@64)) (= ($generated@@136 $generated@@583 ($generated@@427 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@583) $generated@@586))) (and ($generated@@230 ($generated@@81 ($generated@@400 $generated@@583) $generated@@586) $generated@@585) ($generated@@230 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@583) $generated@@586))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@136 $generated@@583 ($generated@@427 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) (= ($generated@@136 $generated@@587 ($generated@@435 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@587) $generated@@590))) (and ($generated@@230 ($generated@@81 ($generated@@410 $generated@@587) $generated@@590) $generated@@589) ($generated@@230 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@587) $generated@@590))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@136 $generated@@587 ($generated@@435 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@149) (= (type $generated@@594) $generated@@149)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@229 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@229 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@149) (= (type $generated@@596) $generated@@149)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@229 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@229 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@79 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@76 $generated@@599 $generated@@4)) (= (type $generated@@598) ($generated@@76 $generated@@599 $generated@@4))) (= ($generated@@215 $generated@@597 ($generated@@215 $generated@@597 $generated@@598)) ($generated@@215 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@215 $generated@@597 ($generated@@215 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@79 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@76 $generated@@602 $generated@@4)) (= (type $generated@@601) ($generated@@76 $generated@@602 $generated@@4))) (= ($generated@@222 $generated@@600 ($generated@@222 $generated@@600 $generated@@601)) ($generated@@222 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@222 $generated@@600 ($generated@@222 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@149) (= (type $generated@@604) $generated@@64)) (= (type $generated@@605) $generated@@64)) ($generated@@230 $generated@@603 ($generated@@427 $generated@@604 $generated@@605))) (and (= ($generated@@280 ($generated@@399 ($generated@@301 $generated@@149 $generated@@149) $generated@@603)) $generated@@603) ($generated@@136 ($generated@@399 ($generated@@301 $generated@@149 $generated@@149) $generated@@603) ($generated@@427 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@230 $generated@@603 ($generated@@427 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@149) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@230 $generated@@606 ($generated@@435 $generated@@607 $generated@@608))) (and (= ($generated@@280 ($generated@@399 ($generated@@319 $generated@@149 $generated@@149) $generated@@606)) $generated@@606) ($generated@@136 ($generated@@399 ($generated@@319 $generated@@149 $generated@@149) $generated@@606) ($generated@@435 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@230 $generated@@606 ($generated@@435 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@64) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@149)) ($generated@@230 $generated@@611 ($generated@@139 $generated@@609 $generated@@610))) (and (= ($generated@@280 ($generated@@399 $generated@@140 $generated@@611)) $generated@@611) ($generated@@136 ($generated@@399 $generated@@140 $generated@@611) ($generated@@139 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@230 $generated@@611 ($generated@@139 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@613 T@T) ) (! (= (type ($generated@@612 $generated@@613)) ($generated@@76 $generated@@613 $generated@@4))
 :pattern ( ($generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@81 ($generated@@612 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@81 ($generated@@612 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@616)))
 (not ($generated@@0 ($generated@@81 ($generated@@473 $generated@@617) $generated@@616))))
 :pattern ( (let (($generated@@617 (type $generated@@616)))
($generated@@81 ($generated@@473 $generated@@617) $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@69)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@64) (= (type $generated@@621) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@620 $generated@@621)) $generated@@62) (= ($generated@@618 ($generated@@139 $generated@@620 $generated@@621)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@140) (= ($generated@@591 ($generated@@280 $generated@@622)) ($generated@@592 $generated@@622)))
 :pattern ( ($generated@@591 ($generated@@280 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@303 (type $generated@@623))))
(let (($generated@@625 ($generated@@302 (type $generated@@623))))
 (=> (= (type $generated@@623) ($generated@@301 $generated@@625 $generated@@624)) (= ($generated@@237 ($generated@@299 $generated@@623)) ($generated@@376 $generated@@623)))))
 :pattern ( ($generated@@237 ($generated@@299 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@303 (type $generated@@626))))
(let (($generated@@628 ($generated@@302 (type $generated@@626))))
 (=> (= (type $generated@@626) ($generated@@301 $generated@@628 $generated@@627)) (= ($generated@@237 ($generated@@398 $generated@@626)) ($generated@@376 $generated@@626)))))
 :pattern ( ($generated@@237 ($generated@@398 $generated@@626)))
)))
(assert (forall (($generated@@629 T@U) ) (! (let (($generated@@630 ($generated@@303 (type $generated@@629))))
(let (($generated@@631 ($generated@@302 (type $generated@@629))))
 (=> (= (type $generated@@629) ($generated@@301 $generated@@631 $generated@@630)) (<= ($generated@@237 ($generated@@347 $generated@@629)) ($generated@@376 $generated@@629)))))
 :pattern ( ($generated@@237 ($generated@@347 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@149) ($generated@@230 $generated@@632 ($generated@@75 0))) (and (= ($generated@@280 ($generated@@399 $generated@@2 $generated@@632)) $generated@@632) ($generated@@136 ($generated@@399 ($generated@@76 $generated@@149 $generated@@4) $generated@@632) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@632 ($generated@@75 0)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@149) (= (type $generated@@634) $generated@@64)) ($generated@@230 $generated@@633 ($generated@@243 $generated@@634))) (and (= ($generated@@280 ($generated@@399 ($generated@@76 $generated@@149 $generated@@4) $generated@@633)) $generated@@633) ($generated@@136 ($generated@@399 ($generated@@76 $generated@@149 $generated@@4) $generated@@633) ($generated@@243 $generated@@634))))
 :pattern ( ($generated@@230 $generated@@633 ($generated@@243 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@149) (= (type $generated@@636) $generated@@64)) ($generated@@230 $generated@@635 ($generated@@248 $generated@@636))) (and (= ($generated@@280 ($generated@@399 ($generated@@76 $generated@@149 $generated@@4) $generated@@635)) $generated@@635) ($generated@@136 ($generated@@399 ($generated@@76 $generated@@149 $generated@@4) $generated@@635) ($generated@@248 $generated@@636))))
 :pattern ( ($generated@@230 $generated@@635 ($generated@@248 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@149) (= (type $generated@@638) $generated@@64)) ($generated@@230 $generated@@637 ($generated@@154 $generated@@638))) (and (= ($generated@@280 ($generated@@399 ($generated@@76 $generated@@149 $generated@@2) $generated@@637)) $generated@@637) ($generated@@136 ($generated@@399 ($generated@@76 $generated@@149 $generated@@2) $generated@@637) ($generated@@154 $generated@@638))))
 :pattern ( ($generated@@230 $generated@@637 ($generated@@154 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@639) $generated@@149) (= (type $generated@@640) $generated@@64)) ($generated@@230 $generated@@639 ($generated@@547 $generated@@640))) (and (= ($generated@@280 ($generated@@399 ($generated@@274 $generated@@149) $generated@@639)) $generated@@639) ($generated@@136 ($generated@@399 ($generated@@274 $generated@@149) $generated@@639) ($generated@@547 $generated@@640))))
 :pattern ( ($generated@@230 $generated@@639 ($generated@@547 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@79 (type $generated@@641))))
 (=> (= (type $generated@@641) ($generated@@76 $generated@@642 $generated@@4)) (and (= (= ($generated@@237 $generated@@641) 0) (= $generated@@641 ($generated@@612 $generated@@642))) (=> (not (= ($generated@@237 $generated@@641) 0)) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@642) ($generated@@0 ($generated@@81 $generated@@641 $generated@@643)))
 :no-pattern (type $generated@@643)
 :no-pattern ($generated $generated@@643)
 :no-pattern ($generated@@0 $generated@@643)
))))))
 :pattern ( ($generated@@237 $generated@@641))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@645) $generated@@64)) (= (type $generated@@646) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@644 ($generated@@154 $generated@@645) $generated@@646) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@644 $generated@@647)))) ($generated@@260 $generated@@647 $generated@@645 $generated@@646))
 :pattern ( ($generated@@81 $generated@@644 $generated@@647))
))))
 :pattern ( ($generated@@74 $generated@@644 ($generated@@154 $generated@@645) $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@649)))
 (=> (and (= (type $generated@@648) ($generated@@76 $generated@@650 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@648 $generated@@649)))) (= ($generated@@237 ($generated@@446 $generated@@648 $generated@@649)) (+ ($generated@@237 $generated@@648) 1))))
 :pattern ( ($generated@@237 ($generated@@446 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 ($generated@@79 (type $generated@@651))))
 (=> (and (= (type $generated@@651) ($generated@@76 $generated@@653 $generated@@4)) (= (type $generated@@652) ($generated@@76 $generated@@653 $generated@@4))) (= ($generated@@368 $generated@@651 $generated@@652) (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@653) (or (not ($generated@@0 ($generated@@81 $generated@@651 $generated@@654))) (not ($generated@@0 ($generated@@81 $generated@@652 $generated@@654)))))
 :pattern ( ($generated@@81 $generated@@651 $generated@@654))
 :pattern ( ($generated@@81 $generated@@652 $generated@@654))
)))))
 :pattern ( ($generated@@368 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@140) (= (type $generated@@656) $generated@@64)) (= (type $generated@@657) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@657) (and ($generated@@138 $generated@@655) (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) $generated@@64) ($generated@@74 $generated@@655 ($generated@@139 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@74 $generated@@655 ($generated@@139 $generated@@656 $generated@@658) $generated@@657))
))))) ($generated@@260 ($generated@@147 $generated@@655) $generated@@656 $generated@@657))
 :pattern ( ($generated@@260 ($generated@@147 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@140) (= (type $generated@@660) $generated@@64)) (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@259 $generated@@661) (and ($generated@@138 $generated@@659) (exists (($generated@@662 T@U) ) (!  (and (= (type $generated@@662) $generated@@64) ($generated@@74 $generated@@659 ($generated@@139 $generated@@662 $generated@@660) $generated@@661))
 :pattern ( ($generated@@74 $generated@@659 ($generated@@139 $generated@@662 $generated@@660) $generated@@661))
))))) ($generated@@260 ($generated@@148 $generated@@659) $generated@@660 $generated@@661))
 :pattern ( ($generated@@260 ($generated@@148 $generated@@659) $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@149) (= (type $generated@@664) $generated@@149)) (= ($generated@@229 ($generated@@255 $generated@@663) ($generated@@255 $generated@@664)) ($generated@@255 ($generated@@229 $generated@@663 $generated@@664))))
 :pattern ( ($generated@@229 ($generated@@255 $generated@@663) ($generated@@255 $generated@@664)))
)))
(assert (forall (($generated@@665 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@253 $generated@@665))) ($generated@@255 ($generated@@280 ($generated@@8 $generated@@665))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@253 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ) (! (= ($generated@@280 ($generated@@255 $generated@@666)) ($generated@@255 ($generated@@280 $generated@@666)))
 :pattern ( ($generated@@280 ($generated@@255 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (! (let (($generated@@668 ($generated@@275 (type $generated@@667))))
 (=> (and (= (type $generated@@667) ($generated@@274 $generated@@668)) (= ($generated@@273 $generated@@667) 0)) (= $generated@@667 ($generated@@272 $generated@@668))))
 :pattern ( ($generated@@273 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (! (let (($generated@@672 (type $generated@@670)))
 (=> (and (and (= (type $generated@@669) ($generated@@76 $generated@@672 $generated@@2)) (= (type $generated@@671) $generated@@2)) (<= 0 ($generated $generated@@671))) (= ($generated@@293 ($generated@@82 $generated@@669 $generated@@670 $generated@@671)) (+ (- ($generated@@293 $generated@@669) ($generated ($generated@@81 $generated@@669 $generated@@670))) ($generated $generated@@671)))))
 :pattern ( ($generated@@293 ($generated@@82 $generated@@669 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 (type $generated@@675)))
 (=> (and (= (type $generated@@673) ($generated@@76 $generated@@676 $generated@@4)) (= (type $generated@@674) ($generated@@76 $generated@@676 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@215 $generated@@673 $generated@@674) $generated@@675))  (or ($generated@@0 ($generated@@81 $generated@@673 $generated@@675)) ($generated@@0 ($generated@@81 $generated@@674 $generated@@675))))))
 :pattern ( ($generated@@81 ($generated@@215 $generated@@673 $generated@@674) $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@678) $generated@@2)) ($generated@@74 $generated@@678 $generated@@46 $generated@@677))
 :pattern ( ($generated@@74 $generated@@678 $generated@@46 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@680) $generated@@3)) ($generated@@74 $generated@@680 $generated@@47 $generated@@679))
 :pattern ( ($generated@@74 $generated@@680 $generated@@47 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@682) $generated@@4)) ($generated@@74 $generated@@682 $generated@@44 $generated@@681))
 :pattern ( ($generated@@74 $generated@@682 $generated@@44 $generated@@681))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@683) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@684) $generated@@497)) ($generated@@74 $generated@@684 $generated@@45 $generated@@683))
 :pattern ( ($generated@@74 $generated@@684 $generated@@45 $generated@@683))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (= (type $generated@@685) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@686) $generated@@149)) ($generated@@74 $generated@@686 $generated@@48 $generated@@685))
 :pattern ( ($generated@@74 $generated@@686 $generated@@48 $generated@@685))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@274 $generated@@149)) (= (type $generated@@688) $generated@@64)) (= ($generated@@136 $generated@@687 ($generated@@547 $generated@@688)) (forall (($generated@@689 Int) ) (!  (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@273 $generated@@687))) ($generated@@230 ($generated@@548 $generated@@687 $generated@@689) $generated@@688))
 :pattern ( ($generated@@548 $generated@@687 $generated@@689))
))))
 :pattern ( ($generated@@136 $generated@@687 ($generated@@547 $generated@@688)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 Int) ) (!  (=> (= (type $generated@@691) ($generated@@274 $generated@@149)) (=> (and (<= 0 $generated@@692) (< $generated@@692 ($generated@@273 $generated@@691))) (< ($generated@@592 ($generated@@399 $generated@@140 ($generated@@548 $generated@@691 $generated@@692))) ($generated@@690 $generated@@691))))
 :pattern ( ($generated@@592 ($generated@@399 $generated@@140 ($generated@@548 $generated@@691 $generated@@692))))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@694) $generated@@64)) (= (type $generated@@695) $generated@@64)) ($generated@@136 $generated@@693 ($generated@@427 $generated@@694 $generated@@695))) (and (and ($generated@@136 ($generated@@299 $generated@@693) ($generated@@243 $generated@@694)) ($generated@@136 ($generated@@347 $generated@@693) ($generated@@243 $generated@@695))) ($generated@@136 ($generated@@398 $generated@@693) ($generated@@243 ($generated@@139 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@136 $generated@@693 ($generated@@427 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) ($generated@@319 $generated@@149 $generated@@149)) (= (type $generated@@697) $generated@@64)) (= (type $generated@@698) $generated@@64)) ($generated@@136 $generated@@696 ($generated@@435 $generated@@697 $generated@@698))) (and (and ($generated@@136 ($generated@@317 $generated@@696) ($generated@@248 $generated@@697)) ($generated@@136 ($generated@@358 $generated@@696) ($generated@@248 $generated@@698))) ($generated@@136 ($generated@@409 $generated@@696) ($generated@@248 ($generated@@139 $generated@@697 $generated@@698)))))
 :pattern ( ($generated@@136 $generated@@696 ($generated@@435 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@2) ($generated@@136 $generated@@699 $generated@@46))
 :pattern ( ($generated@@136 $generated@@699 $generated@@46))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@3) ($generated@@136 $generated@@700 $generated@@47))
 :pattern ( ($generated@@136 $generated@@700 $generated@@47))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (= (type $generated@@701) $generated@@4) ($generated@@136 $generated@@701 $generated@@44))
 :pattern ( ($generated@@136 $generated@@701 $generated@@44))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@497) ($generated@@136 $generated@@702 $generated@@45))
 :pattern ( ($generated@@136 $generated@@702 $generated@@45))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@149) ($generated@@136 $generated@@703 $generated@@48))
 :pattern ( ($generated@@136 $generated@@703 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () Int)
(declare-fun $generated@@708 () Bool)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () Int)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 (T@U) Bool)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@704) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@706) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@709) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@710) $generated@@77)) (= (type $generated@@711) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@713) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@715) ($generated@@76 $generated@@149 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@717 true))
(let (($generated@@718  (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (and ($generated@@136 ($generated@@8 ($generated@@253 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@704 ($generated@@280 ($generated@@8 ($generated@@253 0)))))) (exists (($generated@@719 T@U) ) (!  (and (= (type $generated@@719) $generated@@2) ($generated@@0 ($generated@@81 $generated@@704 ($generated@@280 $generated@@719))))
 :no-pattern (type $generated@@719)
 :no-pattern ($generated $generated@@719)
 :no-pattern ($generated@@0 $generated@@719)
)))) (=> (or (and ($generated@@136 ($generated@@8 ($generated@@253 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@704 ($generated@@280 ($generated@@8 ($generated@@253 0)))))) (exists (($generated@@720 Int) ) ($generated@@0 ($generated@@81 $generated@@704 ($generated@@280 ($generated@@8 $generated@@720)))))) (=> (and ($generated@@0 ($generated@@81 $generated@@704 ($generated@@280 ($generated@@8 $generated@@705)))) (= $generated@@706 ($generated@@369 $generated@@704 ($generated@@446 ($generated@@612 $generated@@149) ($generated@@280 ($generated@@8 $generated@@705)))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@707) (= ($generated@@237 $generated@@706) $generated@@707))) (=> (or (<= 0 $generated@@707) (= ($generated@@237 $generated@@706) $generated@@707)) (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@237 $generated@@706) $generated@@707)))))))))
(let (($generated@@721  (=> (and (not ($generated@@335 $generated@@704 ($generated@@612 $generated@@149))) (= $generated@@707 ($generated@@237 $generated@@704))) (and (=> (= (ControlFlow 0 9) 5) $generated@@718) (=> (= (ControlFlow 0 9) 8) $generated@@717)))))
(let (($generated@@722 true))
(let (($generated@@723  (=> $generated@@708 (and (=> (= (ControlFlow 0 10) 3) $generated@@722) (=> (= (ControlFlow 0 10) 9) $generated@@721)))))
(let (($generated@@724 true))
(let (($generated@@725  (and (=> (= (ControlFlow 0 11) 2) $generated@@724) (=> (= (ControlFlow 0 11) 10) $generated@@723))))
(let (($generated@@726 true))
(let (($generated@@727  (=> (and (and (and ($generated@@136 $generated@@704 ($generated@@243 $generated@@46)) ($generated@@74 $generated@@704 ($generated@@243 $generated@@46) $generated@@709)) (and (not false) (forall (($generated@@728 T@U) ) (!  (=> (= (type $generated@@728) $generated@@77) (=> (and (not (= $generated@@728 $generated@@710)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@709 $generated@@728) $generated@@60))) (= ($generated@@81 $generated@@709 $generated@@728) ($generated@@81 $generated@@709 $generated@@728))))
 :pattern ( ($generated@@81 $generated@@709 $generated@@728))
)))) (and (and ($generated@@132 $generated@@709 $generated@@709) (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (! (let (($generated@@731 ($generated@@67 (type $generated@@730))))
 (=> (and (and (= (type $generated@@729) $generated@@77) (= (type $generated@@730) ($generated@@66 $generated@@731))) (and (not (= $generated@@729 $generated@@710)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@709 $generated@@729) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@709 $generated@@729) $generated@@730) ($generated@@83 ($generated@@81 $generated@@709 $generated@@729) $generated@@730)) ($generated@@0 ($generated@@159 $generated@@711 $generated@@729 $generated@@730)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@709 $generated@@729) $generated@@730))
))) (and (<= ($generated@@237 $generated@@704) $generated@@712) (=> (= ($generated@@237 $generated@@704) $generated@@712) true)))) (and (=> (= (ControlFlow 0 12) 1) $generated@@726) (=> (= (ControlFlow 0 12) 11) $generated@@725)))))
(let (($generated@@732  (=> (= $generated@@711 ($generated@@160 $generated@@710 $generated@@709 $generated@@60 false)) (=> (and (= $generated@@712 ($generated@@237 $generated@@713)) (= (ControlFlow 0 13) 12)) $generated@@727))))
(let (($generated@@733  (=> (and (and ($generated@@259 $generated@@709) ($generated@@714 $generated@@709)) (and ($generated@@136 $generated@@713 ($generated@@243 $generated@@46)) ($generated@@74 $generated@@713 ($generated@@243 $generated@@46) $generated@@709))) (=> (and (and (and ($generated@@136 $generated@@715 ($generated@@243 $generated@@46)) ($generated@@74 $generated@@715 ($generated@@243 $generated@@46) $generated@@709)) true) (and (= 1 $generated@@716) (= (ControlFlow 0 14) 13))) $generated@@732))))
$generated@@733))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Int)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U T@U) Bool)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@366 (T@U T@U) Bool)
(declare-fun $generated@@367 (T@U T@U) T@U)
(declare-fun $generated@@374 (T@U) Int)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@471 (T@T) T@U)
(declare-fun $generated@@495 () T@T)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U Int) T@U)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@590 (T@U) Int)
(declare-fun $generated@@610 (T@T) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@687 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@79 (type $generated@@216))))
(= (type ($generated@@215 $generated@@216 $generated@@217)) ($generated@@76 $generated@@218 $generated@@4)))
 :pattern ( ($generated@@215 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@79 (type $generated@@219))))
 (=> (and (= (type $generated@@219) ($generated@@76 $generated@@221 $generated@@4)) (= (type $generated@@220) ($generated@@76 $generated@@221 $generated@@4))) (= ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220) ($generated@@215 $generated@@219 $generated@@220))))
 :pattern ( ($generated@@215 ($generated@@215 $generated@@219 $generated@@220) $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@79 (type $generated@@223))))
(= (type ($generated@@222 $generated@@223 $generated@@224)) ($generated@@76 $generated@@225 $generated@@4)))
 :pattern ( ($generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@79 (type $generated@@226))))
 (=> (and (= (type $generated@@226) ($generated@@76 $generated@@228 $generated@@4)) (= (type $generated@@227) ($generated@@76 $generated@@228 $generated@@4))) (= ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227) ($generated@@222 $generated@@226 $generated@@227))))
 :pattern ( ($generated@@222 ($generated@@222 $generated@@226 $generated@@227) $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@140)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@149)) (= (type $generated@@236) $generated@@149)) (= ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@139 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@136 ($generated@@229 $generated@@235 $generated@@236) ($generated@@139 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@79 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@76 $generated@@240 $generated@@4)) (= (type $generated@@239) ($generated@@76 $generated@@240 $generated@@4))) (= (+ ($generated@@237 ($generated@@215 $generated@@238 $generated@@239)) ($generated@@237 ($generated@@222 $generated@@238 $generated@@239))) (+ ($generated@@237 $generated@@238) ($generated@@237 $generated@@239)))))
 :pattern ( ($generated@@237 ($generated@@215 $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 ($generated@@222 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@140) (= (type $generated@@242) $generated@@140)) (= ($generated@@146 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@146 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@149) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@230 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@136 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@136 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@149) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@230 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@136 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) $generated@@64)) (= (type $generated@@261) $generated@@149)) (= (type $generated@@262) $generated@@149)) (= (type $generated@@263) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@257 $generated@@263)) (= ($generated@@74 ($generated@@229 $generated@@261 $generated@@262) ($generated@@139 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@261 $generated@@262) ($generated@@139 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@140) (= ($generated@@138 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@140) ($generated@@138 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@149) (= (type $generated@@269) $generated@@149)) (= $generated@@267 ($generated@@229 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@138 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@149)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@74 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@285) $generated@@149)) (= (type $generated@@286) $generated@@64)) ($generated@@132 $generated@@283 $generated@@284)) ($generated@@258 $generated@@285 $generated@@286 $generated@@283)) ($generated@@258 $generated@@285 $generated@@286 $generated@@284))
 :pattern ( ($generated@@132 $generated@@283 $generated@@284) ($generated@@258 $generated@@285 $generated@@286 $generated@@283))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@288) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@290) $generated@@64)) ($generated@@132 $generated@@287 $generated@@288)) ($generated@@74 $generated@@289 $generated@@290 $generated@@287)) ($generated@@74 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@132 $generated@@287 $generated@@288) ($generated@@74 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@334))))
 (=> (and (= (type $generated@@334) ($generated@@76 $generated@@336 $generated@@4)) (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@4))) (= ($generated@@333 $generated@@334 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (= ($generated@@0 ($generated@@81 $generated@@334 $generated@@337)) ($generated@@0 ($generated@@81 $generated@@335 $generated@@337))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@79 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@76 $generated@@339 $generated@@2)) (= ($generated@@155 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@81 $generated@@338 $generated@@340))) (<= ($generated ($generated@@81 $generated@@338 $generated@@340)) ($generated@@291 $generated@@338))))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@155 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@301 (type $generated@@341))))
(let (($generated@@343 ($generated@@300 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@299 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@298 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@297 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@301 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@76 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@301 (type $generated@@348))))
(let (($generated@@350 ($generated@@300 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@299 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@298 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@319 (type $generated@@352))))
(let (($generated@@354 ($generated@@318 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@317 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@316 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@315 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@319 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@319 (type $generated@@359))))
(let (($generated@@361 ($generated@@318 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@317 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@316 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@364) $generated@@64)) (= ($generated@@136 $generated@@363 ($generated@@154 $generated@@364)) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@363 $generated@@365)))) ($generated@@230 $generated@@365 $generated@@364))
 :pattern ( ($generated@@81 $generated@@363 $generated@@365))
))))
 :pattern ( ($generated@@136 $generated@@363 ($generated@@154 $generated@@364)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@79 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368 $generated@@369)) ($generated@@76 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@79 (type $generated@@371))))
 (=> (and (and (= (type $generated@@371) ($generated@@76 $generated@@373 $generated@@4)) (= (type $generated@@372) ($generated@@76 $generated@@373 $generated@@4))) ($generated@@366 $generated@@371 $generated@@372)) (and (= ($generated@@367 ($generated@@215 $generated@@371 $generated@@372) $generated@@371) $generated@@372) (= ($generated@@367 ($generated@@215 $generated@@371 $generated@@372) $generated@@372) $generated@@371))))
 :pattern ( ($generated@@215 $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@301 (type $generated@@375))))
(let (($generated@@377 ($generated@@300 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@299 $generated@@377 $generated@@376)) (= (= ($generated@@374 $generated@@375) 0) (= $generated@@375 ($generated@@298 $generated@@377 $generated@@376))))))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
 (=> (and (= (type $generated@@378) ($generated@@76 $generated@@381 $generated@@4)) (= (type $generated@@379) ($generated@@76 $generated@@381 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@222 $generated@@378 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 $generated@@378 $generated@@380)) ($generated@@0 ($generated@@81 $generated@@379 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@222 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
 (=> (and (= (type $generated@@382) ($generated@@76 $generated@@385 $generated@@4)) (= (type $generated@@383) ($generated@@76 $generated@@385 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@382 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 $generated@@382 $generated@@384)) (not ($generated@@0 ($generated@@81 $generated@@383 $generated@@384)))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@243 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@149) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@258 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@243 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@248 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@149) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@258 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@248 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@81 ($generated@@292 $generated@@395) $generated@@394)))
)))
(assert  (and (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@396 $generated@@399)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@396 $generated@@399))
)) (forall (($generated@@400 T@T) ($generated@@401 T@U) ) (! (= (type ($generated@@397 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@397 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@301 (type $generated@@402))))
(let (($generated@@404 ($generated@@300 (type $generated@@402))))
(= (type ($generated@@398 $generated@@402)) ($generated@@76 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@398 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@406) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@405) ($generated@@147 ($generated@@397 $generated@@140 $generated@@406)))) (= ($generated@@81 ($generated@@398 $generated@@405) ($generated@@147 ($generated@@397 $generated@@140 $generated@@406))) ($generated@@148 ($generated@@397 $generated@@140 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@319 (type $generated@@410))))
(let (($generated@@412 ($generated@@318 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@76 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@414) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@413) ($generated@@147 ($generated@@397 $generated@@140 $generated@@414)))) (= ($generated@@81 ($generated@@408 $generated@@413) ($generated@@147 ($generated@@397 $generated@@140 $generated@@414))) ($generated@@148 ($generated@@397 $generated@@140 $generated@@414))))))
 :pattern ( ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@300 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@299 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@318 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@317 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@428) $generated@@432))) (and ($generated@@258 ($generated@@81 ($generated@@398 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@258 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@428) $generated@@432))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) $generated@@64)) (= (type $generated@@439) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@436) $generated@@440))) (and ($generated@@258 ($generated@@81 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@258 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@441))))
 (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@443 $generated@@4)) (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@4))) ($generated@@333 $generated@@441 $generated@@442)) (= $generated@@441 $generated@@442)))
 :pattern ( ($generated@@333 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(= (type ($generated@@444 $generated@@445 $generated@@446)) ($generated@@76 $generated@@447 $generated@@4)))
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@449)))
 (=> (and (and (= (type $generated@@448) ($generated@@76 $generated@@451 $generated@@4)) (= (type $generated@@450) $generated@@451)) ($generated@@0 ($generated@@81 $generated@@448 $generated@@450))) ($generated@@0 ($generated@@81 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))))
 :pattern ( ($generated@@444 $generated@@448 $generated@@449) ($generated@@81 $generated@@448 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@454)))
 (=> (and (and (= (type $generated@@452) ($generated@@76 $generated@@455 $generated@@4)) (= (type $generated@@453) ($generated@@76 $generated@@455 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@452 $generated@@454))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@452 $generated@@453) $generated@@454))))
 :pattern ( ($generated@@215 $generated@@452 $generated@@453) ($generated@@81 $generated@@452 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
 (=> (and (and (= (type $generated@@456) ($generated@@76 $generated@@459 $generated@@4)) (= (type $generated@@457) ($generated@@76 $generated@@459 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@457 $generated@@458))) ($generated@@0 ($generated@@81 ($generated@@215 $generated@@456 $generated@@457) $generated@@458))))
 :pattern ( ($generated@@215 $generated@@456 $generated@@457) ($generated@@81 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (! (let (($generated@@463 (type $generated@@461)))
 (=> (and (= (type $generated@@460) ($generated@@76 $generated@@463 $generated@@4)) (= (type $generated@@462) $generated@@463)) (= ($generated@@0 ($generated@@81 ($generated@@444 $generated@@460 $generated@@461) $generated@@462))  (or (= $generated@@462 $generated@@461) ($generated@@0 ($generated@@81 $generated@@460 $generated@@462))))))
 :pattern ( ($generated@@81 ($generated@@444 $generated@@460 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@464) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@465) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@466) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@464 $generated@@466))) (and ($generated@@132 $generated@@464 $generated@@465) ($generated@@132 $generated@@465 $generated@@466))) ($generated@@132 $generated@@464 $generated@@466))
 :pattern ( ($generated@@132 $generated@@464 $generated@@465) ($generated@@132 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@469)))
 (=> (and (and (= (type $generated@@467) ($generated@@76 $generated@@470 $generated@@4)) (= (type $generated@@468) ($generated@@76 $generated@@470 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@468 $generated@@469))) (not ($generated@@0 ($generated@@81 ($generated@@367 $generated@@467 $generated@@468) $generated@@469)))))
 :pattern ( ($generated@@367 $generated@@467 $generated@@468) ($generated@@81 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@472 T@T) ) (! (= (type ($generated@@471 $generated@@472)) ($generated@@76 $generated@@472 $generated@@4))
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@319 (type $generated@@473))))
(let (($generated@@475 ($generated@@318 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@317 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@316 $generated@@475 $generated@@474)) (= ($generated@@315 $generated@@473) ($generated@@471 $generated@@475))))))
 :pattern ( ($generated@@315 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@319 (type $generated@@476))))
(let (($generated@@478 ($generated@@318 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@317 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@316 $generated@@478 $generated@@477)) (= ($generated@@356 $generated@@476) ($generated@@471 $generated@@477))))))
 :pattern ( ($generated@@356 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@319 (type $generated@@479))))
(let (($generated@@481 ($generated@@318 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@317 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@316 $generated@@481 $generated@@480)) (= ($generated@@407 $generated@@479) ($generated@@471 $generated@@149))))))
 :pattern ( ($generated@@407 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@301 (type $generated@@482))))
(let (($generated@@484 ($generated@@300 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@299 $generated@@484 $generated@@483)) (or (= $generated@@482 ($generated@@298 $generated@@484 $generated@@483)) (exists (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (and (and (= (type $generated@@485) $generated@@149) (= (type $generated@@486) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@482) ($generated@@278 ($generated@@229 $generated@@485 $generated@@486)))))
 :no-pattern (type $generated@@485)
 :no-pattern (type $generated@@486)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
))))))
 :pattern ( ($generated@@396 $generated@@482))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@319 (type $generated@@487))))
(let (($generated@@489 ($generated@@318 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@317 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@316 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@149) (= (type $generated@@491) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@407 $generated@@487) ($generated@@278 ($generated@@229 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@407 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@149) ($generated@@230 $generated@@492 $generated@@46)) (and (= ($generated@@278 ($generated@@397 $generated@@2 $generated@@492)) $generated@@492) ($generated@@136 ($generated@@397 $generated@@2 $generated@@492) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@492 $generated@@46))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@149) ($generated@@230 $generated@@493 $generated@@47)) (and (= ($generated@@278 ($generated@@397 $generated@@3 $generated@@493)) $generated@@493) ($generated@@136 ($generated@@397 $generated@@3 $generated@@493) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@493 $generated@@47))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) ($generated@@230 $generated@@494 $generated@@44)) (and (= ($generated@@278 ($generated@@397 $generated@@4 $generated@@494)) $generated@@494) ($generated@@136 ($generated@@397 $generated@@4 $generated@@494) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@494 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@495) 20))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) ($generated@@230 $generated@@496 $generated@@45)) (and (= ($generated@@278 ($generated@@397 $generated@@495 $generated@@496)) $generated@@496) ($generated@@136 ($generated@@397 $generated@@495 $generated@@496) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@496 $generated@@45))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@79 (type $generated@@497))))
 (=> (and (= (type $generated@@497) ($generated@@76 $generated@@499 $generated@@4)) (= (type $generated@@498) ($generated@@76 $generated@@499 $generated@@4))) (and (= (+ (+ ($generated@@237 ($generated@@367 $generated@@497 $generated@@498)) ($generated@@237 ($generated@@367 $generated@@498 $generated@@497))) ($generated@@237 ($generated@@222 $generated@@497 $generated@@498))) ($generated@@237 ($generated@@215 $generated@@497 $generated@@498))) (= ($generated@@237 ($generated@@367 $generated@@497 $generated@@498)) (- ($generated@@237 $generated@@497) ($generated@@237 ($generated@@222 $generated@@497 $generated@@498)))))))
 :pattern ( ($generated@@237 ($generated@@367 $generated@@497 $generated@@498)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@230 ($generated@@278 $generated@@500) $generated@@501) ($generated@@136 $generated@@500 $generated@@501)))
 :pattern ( ($generated@@230 ($generated@@278 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@79 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@76 $generated@@503 $generated@@4)) (<= 0 ($generated@@237 $generated@@502))))
 :pattern ( ($generated@@237 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@79 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@76 $generated@@505 $generated@@2)) (<= 0 ($generated@@291 $generated@@504))))
 :pattern ( ($generated@@291 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@273 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@272 $generated@@507)) (<= 0 ($generated@@271 $generated@@506))))
 :pattern ( ($generated@@271 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@301 (type $generated@@508))))
(let (($generated@@510 ($generated@@300 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@299 $generated@@510 $generated@@509)) (<= 0 ($generated@@374 $generated@@508)))))
 :pattern ( ($generated@@374 $generated@@508))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (= ($generated@@511 ($generated@@425 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@425 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@64) (= (type $generated@@518) $generated@@64)) (= ($generated@@515 ($generated@@425 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@425 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@72 ($generated@@425 $generated@@519 $generated@@520)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= ($generated@@521 ($generated@@433 $generated@@523 $generated@@524)) $generated@@523))
 :pattern ( ($generated@@433 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= ($generated@@525 ($generated@@433 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@433 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= ($generated@@72 ($generated@@433 $generated@@529 $generated@@530)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@149) (= (type $generated@@532) $generated@@149)) (= ($generated@@264 ($generated@@229 $generated@@531 $generated@@532)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@64)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= ($generated@@533 ($generated@@139 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@139 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@64)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@64) (= (type $generated@@540) $generated@@64)) (= ($generated@@537 ($generated@@139 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@139 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@149) (= (type $generated@@542) $generated@@149)) (= ($generated@@147 ($generated@@229 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@229 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@149)) (= ($generated@@148 ($generated@@229 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@229 $generated@@543 $generated@@544))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ($generated@@549 Int) ) (! (let (($generated@@550 ($generated@@273 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548 $generated@@549)) $generated@@550))
 :pattern ( ($generated@@546 $generated@@548 $generated@@549))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@272 $generated@@149)) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@551 ($generated@@545 $generated@@552) $generated@@553) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@271 $generated@@551))) ($generated@@258 ($generated@@546 $generated@@551 $generated@@554) $generated@@552 $generated@@553))
 :pattern ( ($generated@@546 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@545 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (=> (= (type $generated@@555) ($generated@@76 $generated@@557 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@444 $generated@@555 $generated@@556) $generated@@556))))
 :pattern ( ($generated@@444 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (=> (and (= (type $generated@@558) ($generated@@76 $generated@@560 $generated@@4)) ($generated@@0 ($generated@@81 $generated@@558 $generated@@559))) (= ($generated@@237 ($generated@@444 $generated@@558 $generated@@559)) ($generated@@237 $generated@@558))))
 :pattern ( ($generated@@237 ($generated@@444 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@561 ($generated@@75 $generated@@562)) $generated@@562)
 :pattern ( ($generated@@75 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@64)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@64) (= ($generated@@563 ($generated@@243 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@243 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@566)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@64)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@64) (= ($generated@@567 ($generated@@248 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@248 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@570)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@64)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@64) (= ($generated@@571 ($generated@@154 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@154 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@574)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ) (! (= (type ($generated@@575 $generated@@576)) $generated@@64)
 :pattern ( ($generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@64) (= ($generated@@575 ($generated@@545 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@545 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@64) (= ($generated@@72 ($generated@@545 $generated@@578)) $generated@@57))
 :pattern ( ($generated@@545 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated@@397 $generated@@580 ($generated@@278 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@278 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) (= ($generated@@136 $generated@@581 ($generated@@425 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@581) $generated@@584))) (and ($generated@@230 ($generated@@81 ($generated@@398 $generated@@581) $generated@@584) $generated@@583) ($generated@@230 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@581) $generated@@584))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@136 $generated@@581 ($generated@@425 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) (= ($generated@@136 $generated@@585 ($generated@@433 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@585) $generated@@588))) (and ($generated@@230 ($generated@@81 ($generated@@408 $generated@@585) $generated@@588) $generated@@587) ($generated@@230 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@585) $generated@@588))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@136 $generated@@585 ($generated@@433 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@149) (= (type $generated@@592) $generated@@149)) (< ($generated@@589 $generated@@591) ($generated@@590 ($generated@@229 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@229 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@149) (= (type $generated@@594) $generated@@149)) (< ($generated@@589 $generated@@594) ($generated@@590 ($generated@@229 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@229 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@79 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@76 $generated@@597 $generated@@4)) (= (type $generated@@596) ($generated@@76 $generated@@597 $generated@@4))) (= ($generated@@215 $generated@@595 ($generated@@215 $generated@@595 $generated@@596)) ($generated@@215 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@215 $generated@@595 ($generated@@215 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@79 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@76 $generated@@600 $generated@@4)) (= (type $generated@@599) ($generated@@76 $generated@@600 $generated@@4))) (= ($generated@@222 $generated@@598 ($generated@@222 $generated@@598 $generated@@599)) ($generated@@222 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@222 $generated@@598 ($generated@@222 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@149) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@230 $generated@@601 ($generated@@425 $generated@@602 $generated@@603))) (and (= ($generated@@278 ($generated@@397 ($generated@@299 $generated@@149 $generated@@149) $generated@@601)) $generated@@601) ($generated@@136 ($generated@@397 ($generated@@299 $generated@@149 $generated@@149) $generated@@601) ($generated@@425 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@230 $generated@@601 ($generated@@425 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@149) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@230 $generated@@604 ($generated@@433 $generated@@605 $generated@@606))) (and (= ($generated@@278 ($generated@@397 ($generated@@317 $generated@@149 $generated@@149) $generated@@604)) $generated@@604) ($generated@@136 ($generated@@397 ($generated@@317 $generated@@149 $generated@@149) $generated@@604) ($generated@@433 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@230 $generated@@604 ($generated@@433 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@64) (= (type $generated@@608) $generated@@64)) (= (type $generated@@609) $generated@@149)) ($generated@@230 $generated@@609 ($generated@@139 $generated@@607 $generated@@608))) (and (= ($generated@@278 ($generated@@397 $generated@@140 $generated@@609)) $generated@@609) ($generated@@136 ($generated@@397 $generated@@140 $generated@@609) ($generated@@139 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@230 $generated@@609 ($generated@@139 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@611 T@T) ) (! (= (type ($generated@@610 $generated@@611)) ($generated@@76 $generated@@611 $generated@@4))
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@612)))
 (not ($generated@@0 ($generated@@81 ($generated@@610 $generated@@613) $generated@@612))))
 :pattern ( (let (($generated@@613 (type $generated@@612)))
($generated@@81 ($generated@@610 $generated@@613) $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@81 ($generated@@471 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@81 ($generated@@471 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@69)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@64) (= (type $generated@@619) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@618 $generated@@619)) $generated@@62) (= ($generated@@616 ($generated@@139 $generated@@618 $generated@@619)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@140) (= ($generated@@589 ($generated@@278 $generated@@620)) ($generated@@590 $generated@@620)))
 :pattern ( ($generated@@589 ($generated@@278 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@301 (type $generated@@621))))
(let (($generated@@623 ($generated@@300 (type $generated@@621))))
 (=> (= (type $generated@@621) ($generated@@299 $generated@@623 $generated@@622)) (= ($generated@@237 ($generated@@297 $generated@@621)) ($generated@@374 $generated@@621)))))
 :pattern ( ($generated@@237 ($generated@@297 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@301 (type $generated@@624))))
(let (($generated@@626 ($generated@@300 (type $generated@@624))))
 (=> (= (type $generated@@624) ($generated@@299 $generated@@626 $generated@@625)) (= ($generated@@237 ($generated@@396 $generated@@624)) ($generated@@374 $generated@@624)))))
 :pattern ( ($generated@@237 ($generated@@396 $generated@@624)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@301 (type $generated@@627))))
(let (($generated@@629 ($generated@@300 (type $generated@@627))))
 (=> (= (type $generated@@627) ($generated@@299 $generated@@629 $generated@@628)) (<= ($generated@@237 ($generated@@345 $generated@@627)) ($generated@@374 $generated@@627)))))
 :pattern ( ($generated@@237 ($generated@@345 $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@149) ($generated@@230 $generated@@630 ($generated@@75 0))) (and (= ($generated@@278 ($generated@@397 $generated@@2 $generated@@630)) $generated@@630) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@630) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@630 ($generated@@75 0)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@149) (= (type $generated@@632) $generated@@64)) ($generated@@230 $generated@@631 ($generated@@243 $generated@@632))) (and (= ($generated@@278 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@631)) $generated@@631) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@631) ($generated@@243 $generated@@632))))
 :pattern ( ($generated@@230 $generated@@631 ($generated@@243 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@149) (= (type $generated@@634) $generated@@64)) ($generated@@230 $generated@@633 ($generated@@248 $generated@@634))) (and (= ($generated@@278 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@633)) $generated@@633) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@633) ($generated@@248 $generated@@634))))
 :pattern ( ($generated@@230 $generated@@633 ($generated@@248 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (= (type $generated@@635) $generated@@149) (= (type $generated@@636) $generated@@64)) ($generated@@230 $generated@@635 ($generated@@154 $generated@@636))) (and (= ($generated@@278 ($generated@@397 ($generated@@76 $generated@@149 $generated@@2) $generated@@635)) $generated@@635) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@2) $generated@@635) ($generated@@154 $generated@@636))))
 :pattern ( ($generated@@230 $generated@@635 ($generated@@154 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (= (type $generated@@637) $generated@@149) (= (type $generated@@638) $generated@@64)) ($generated@@230 $generated@@637 ($generated@@545 $generated@@638))) (and (= ($generated@@278 ($generated@@397 ($generated@@272 $generated@@149) $generated@@637)) $generated@@637) ($generated@@136 ($generated@@397 ($generated@@272 $generated@@149) $generated@@637) ($generated@@545 $generated@@638))))
 :pattern ( ($generated@@230 $generated@@637 ($generated@@545 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@79 (type $generated@@639))))
 (=> (= (type $generated@@639) ($generated@@76 $generated@@640 $generated@@4)) (and (= (= ($generated@@237 $generated@@639) 0) (= $generated@@639 ($generated@@610 $generated@@640))) (=> (not (= ($generated@@237 $generated@@639) 0)) (exists (($generated@@641 T@U) ) (!  (and (= (type $generated@@641) $generated@@640) ($generated@@0 ($generated@@81 $generated@@639 $generated@@641)))
 :no-pattern (type $generated@@641)
 :no-pattern ($generated $generated@@641)
 :no-pattern ($generated@@0 $generated@@641)
))))))
 :pattern ( ($generated@@237 $generated@@639))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@643) $generated@@64)) (= (type $generated@@644) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@642 ($generated@@154 $generated@@643) $generated@@644) (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@642 $generated@@645)))) ($generated@@258 $generated@@645 $generated@@643 $generated@@644))
 :pattern ( ($generated@@81 $generated@@642 $generated@@645))
))))
 :pattern ( ($generated@@74 $generated@@642 ($generated@@154 $generated@@643) $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@647)))
 (=> (and (= (type $generated@@646) ($generated@@76 $generated@@648 $generated@@4)) (not ($generated@@0 ($generated@@81 $generated@@646 $generated@@647)))) (= ($generated@@237 ($generated@@444 $generated@@646 $generated@@647)) (+ ($generated@@237 $generated@@646) 1))))
 :pattern ( ($generated@@237 ($generated@@444 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 ($generated@@79 (type $generated@@649))))
 (=> (and (= (type $generated@@649) ($generated@@76 $generated@@651 $generated@@4)) (= (type $generated@@650) ($generated@@76 $generated@@651 $generated@@4))) (= ($generated@@366 $generated@@649 $generated@@650) (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@651) (or (not ($generated@@0 ($generated@@81 $generated@@649 $generated@@652))) (not ($generated@@0 ($generated@@81 $generated@@650 $generated@@652)))))
 :pattern ( ($generated@@81 $generated@@649 $generated@@652))
 :pattern ( ($generated@@81 $generated@@650 $generated@@652))
)))))
 :pattern ( ($generated@@366 $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@653) $generated@@140) (= (type $generated@@654) $generated@@64)) (= (type $generated@@655) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@655) (and ($generated@@138 $generated@@653) (exists (($generated@@656 T@U) ) (!  (and (= (type $generated@@656) $generated@@64) ($generated@@74 $generated@@653 ($generated@@139 $generated@@654 $generated@@656) $generated@@655))
 :pattern ( ($generated@@74 $generated@@653 ($generated@@139 $generated@@654 $generated@@656) $generated@@655))
))))) ($generated@@258 ($generated@@147 $generated@@653) $generated@@654 $generated@@655))
 :pattern ( ($generated@@258 ($generated@@147 $generated@@653) $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (and (and (= (type $generated@@657) $generated@@140) (= (type $generated@@658) $generated@@64)) (= (type $generated@@659) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@257 $generated@@659) (and ($generated@@138 $generated@@657) (exists (($generated@@660 T@U) ) (!  (and (= (type $generated@@660) $generated@@64) ($generated@@74 $generated@@657 ($generated@@139 $generated@@660 $generated@@658) $generated@@659))
 :pattern ( ($generated@@74 $generated@@657 ($generated@@139 $generated@@660 $generated@@658) $generated@@659))
))))) ($generated@@258 ($generated@@148 $generated@@657) $generated@@658 $generated@@659))
 :pattern ( ($generated@@258 ($generated@@148 $generated@@657) $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@149) (= (type $generated@@662) $generated@@149)) (= ($generated@@229 ($generated@@253 $generated@@661) ($generated@@253 $generated@@662)) ($generated@@253 ($generated@@229 $generated@@661 $generated@@662))))
 :pattern ( ($generated@@229 ($generated@@253 $generated@@661) ($generated@@253 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ) (! (= ($generated@@278 ($generated@@253 $generated@@663)) ($generated@@253 ($generated@@278 $generated@@663)))
 :pattern ( ($generated@@278 ($generated@@253 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ) (! (let (($generated@@665 ($generated@@273 (type $generated@@664))))
 (=> (and (= (type $generated@@664) ($generated@@272 $generated@@665)) (= ($generated@@271 $generated@@664) 0)) (= $generated@@664 ($generated@@270 $generated@@665))))
 :pattern ( ($generated@@271 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (! (let (($generated@@669 (type $generated@@667)))
 (=> (and (and (= (type $generated@@666) ($generated@@76 $generated@@669 $generated@@2)) (= (type $generated@@668) $generated@@2)) (<= 0 ($generated $generated@@668))) (= ($generated@@291 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)) (+ (- ($generated@@291 $generated@@666) ($generated ($generated@@81 $generated@@666 $generated@@667))) ($generated $generated@@668)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@666 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@672)))
 (=> (and (= (type $generated@@670) ($generated@@76 $generated@@673 $generated@@4)) (= (type $generated@@671) ($generated@@76 $generated@@673 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@215 $generated@@670 $generated@@671) $generated@@672))  (or ($generated@@0 ($generated@@81 $generated@@670 $generated@@672)) ($generated@@0 ($generated@@81 $generated@@671 $generated@@672))))))
 :pattern ( ($generated@@81 ($generated@@215 $generated@@670 $generated@@671) $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@675) $generated@@2)) ($generated@@74 $generated@@675 $generated@@46 $generated@@674))
 :pattern ( ($generated@@74 $generated@@675 $generated@@46 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@677) $generated@@3)) ($generated@@74 $generated@@677 $generated@@47 $generated@@676))
 :pattern ( ($generated@@74 $generated@@677 $generated@@47 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@679) $generated@@4)) ($generated@@74 $generated@@679 $generated@@44 $generated@@678))
 :pattern ( ($generated@@74 $generated@@679 $generated@@44 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@681) $generated@@495)) ($generated@@74 $generated@@681 $generated@@45 $generated@@680))
 :pattern ( ($generated@@74 $generated@@681 $generated@@45 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@683) $generated@@149)) ($generated@@74 $generated@@683 $generated@@48 $generated@@682))
 :pattern ( ($generated@@74 $generated@@683 $generated@@48 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@272 $generated@@149)) (= (type $generated@@685) $generated@@64)) (= ($generated@@136 $generated@@684 ($generated@@545 $generated@@685)) (forall (($generated@@686 Int) ) (!  (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@271 $generated@@684))) ($generated@@230 ($generated@@546 $generated@@684 $generated@@686) $generated@@685))
 :pattern ( ($generated@@546 $generated@@684 $generated@@686))
))))
 :pattern ( ($generated@@136 $generated@@684 ($generated@@545 $generated@@685)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 Int) ) (!  (=> (= (type $generated@@688) ($generated@@272 $generated@@149)) (=> (and (<= 0 $generated@@689) (< $generated@@689 ($generated@@271 $generated@@688))) (< ($generated@@590 ($generated@@397 $generated@@140 ($generated@@546 $generated@@688 $generated@@689))) ($generated@@687 $generated@@688))))
 :pattern ( ($generated@@590 ($generated@@397 $generated@@140 ($generated@@546 $generated@@688 $generated@@689))))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@299 $generated@@149 $generated@@149)) (= (type $generated@@691) $generated@@64)) (= (type $generated@@692) $generated@@64)) ($generated@@136 $generated@@690 ($generated@@425 $generated@@691 $generated@@692))) (and (and ($generated@@136 ($generated@@297 $generated@@690) ($generated@@243 $generated@@691)) ($generated@@136 ($generated@@345 $generated@@690) ($generated@@243 $generated@@692))) ($generated@@136 ($generated@@396 $generated@@690) ($generated@@243 ($generated@@139 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@136 $generated@@690 ($generated@@425 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (and (= (type $generated@@693) ($generated@@317 $generated@@149 $generated@@149)) (= (type $generated@@694) $generated@@64)) (= (type $generated@@695) $generated@@64)) ($generated@@136 $generated@@693 ($generated@@433 $generated@@694 $generated@@695))) (and (and ($generated@@136 ($generated@@315 $generated@@693) ($generated@@248 $generated@@694)) ($generated@@136 ($generated@@356 $generated@@693) ($generated@@248 $generated@@695))) ($generated@@136 ($generated@@407 $generated@@693) ($generated@@248 ($generated@@139 $generated@@694 $generated@@695)))))
 :pattern ( ($generated@@136 $generated@@693 ($generated@@433 $generated@@694 $generated@@695)))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@2) ($generated@@136 $generated@@696 $generated@@46))
 :pattern ( ($generated@@136 $generated@@696 $generated@@46))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@3) ($generated@@136 $generated@@697 $generated@@47))
 :pattern ( ($generated@@136 $generated@@697 $generated@@47))
)))
(assert (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@4) ($generated@@136 $generated@@698 $generated@@44))
 :pattern ( ($generated@@136 $generated@@698 $generated@@44))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (= (type $generated@@699) $generated@@495) ($generated@@136 $generated@@699 $generated@@45))
 :pattern ( ($generated@@136 $generated@@699 $generated@@45))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@149) ($generated@@136 $generated@@700 $generated@@48))
 :pattern ( ($generated@@136 $generated@@700 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () Int)
(declare-fun $generated@@706 () T@U)
(declare-fun $generated@@707 () Bool)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () Int)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 (T@U) Bool)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@701) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@702) $generated@@140)) (= (type $generated@@703) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@704) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@706) $generated@@140)) (= (type $generated@@708) $generated@@140)) (= (type $generated@@709) $generated@@77)) (= (type $generated@@710) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@712) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@713) ($generated@@299 $generated@@149 $generated@@149))) (= (type $generated@@715) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@716) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@718  (and (=> (= (ControlFlow 0 5) (- 0 7)) (exists (($generated@@719 T@U) ) (!  (and (= (type $generated@@719) $generated@@140) (and ($generated@@136 $generated@@719 ($generated@@139 $generated@@46 $generated@@46)) ($generated@@0 ($generated@@81 $generated@@701 ($generated@@278 $generated@@719)))))
 :no-pattern (type $generated@@719)
 :no-pattern ($generated $generated@@719)
 :no-pattern ($generated@@0 $generated@@719)
))) (=> (exists (($generated@@720 T@U) ) (!  (and (= (type $generated@@720) $generated@@140) (and ($generated@@136 $generated@@720 ($generated@@139 $generated@@46 $generated@@46)) ($generated@@0 ($generated@@81 $generated@@701 ($generated@@278 $generated@@720)))))
 :no-pattern (type $generated@@720)
 :no-pattern ($generated $generated@@720)
 :no-pattern ($generated@@0 $generated@@720)
)) (=> (and (and (and ($generated@@136 $generated@@702 ($generated@@139 $generated@@46 $generated@@46)) ($generated@@74 $generated@@702 ($generated@@139 $generated@@46 $generated@@46) $generated@@703)) (and ($generated@@0 ($generated@@81 $generated@@701 ($generated@@278 $generated@@702))) (= $generated@@704 ($generated@@367 $generated@@701 ($generated@@444 ($generated@@610 $generated@@149) ($generated@@278 $generated@@702)))))) (and (and ($generated@@138 $generated@@702) ($generated@@138 $generated@@702)) (and ($generated@@138 $generated@@702) ($generated@@138 $generated@@702)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@705) (= ($generated@@237 $generated@@704) $generated@@705))) (=> (or (<= 0 $generated@@705) (= ($generated@@237 $generated@@704) $generated@@705)) (=> (= (ControlFlow 0 5) (- 0 4)) (< ($generated@@237 $generated@@704) $generated@@705)))))))))
(let (($generated@@721  (=> (and (not (and ($generated@@136 $generated@@706 ($generated@@139 $generated@@46 $generated@@46)) ($generated@@74 $generated@@706 ($generated@@139 $generated@@46 $generated@@46) $generated@@703))) (= (ControlFlow 0 9) 5)) $generated@@718)))
(let (($generated@@722  (=> (and (and ($generated@@136 $generated@@706 ($generated@@139 $generated@@46 $generated@@46)) ($generated@@74 $generated@@706 ($generated@@139 $generated@@46 $generated@@46) $generated@@703)) (= (ControlFlow 0 8) 5)) $generated@@718)))
(let (($generated@@723  (=> (and (not ($generated@@333 $generated@@701 ($generated@@610 $generated@@149))) (= $generated@@705 ($generated@@237 $generated@@701))) (and (=> (= (ControlFlow 0 10) 8) $generated@@722) (=> (= (ControlFlow 0 10) 9) $generated@@721)))))
(let (($generated@@724 true))
(let (($generated@@725  (=> $generated@@707 (and (=> (= (ControlFlow 0 11) 3) $generated@@724) (=> (= (ControlFlow 0 11) 10) $generated@@723)))))
(let (($generated@@726 true))
(let (($generated@@727  (and (=> (= (ControlFlow 0 12) 2) $generated@@726) (=> (= (ControlFlow 0 12) 11) $generated@@725))))
(let (($generated@@728 true))
(let (($generated@@729  (=> (and ($generated@@136 $generated@@708 ($generated@@139 $generated@@46 $generated@@46)) ($generated@@74 $generated@@708 ($generated@@139 $generated@@46 $generated@@46) $generated@@703)) (=> (and (and (and ($generated@@136 $generated@@701 ($generated@@243 ($generated@@139 $generated@@46 $generated@@46))) ($generated@@74 $generated@@701 ($generated@@243 ($generated@@139 $generated@@46 $generated@@46)) $generated@@703)) (and (not false) (forall (($generated@@730 T@U) ) (!  (=> (= (type $generated@@730) $generated@@77) (=> (and (not (= $generated@@730 $generated@@709)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@703 $generated@@730) $generated@@60))) (= ($generated@@81 $generated@@703 $generated@@730) ($generated@@81 $generated@@703 $generated@@730))))
 :pattern ( ($generated@@81 $generated@@703 $generated@@730))
)))) (and (and ($generated@@132 $generated@@703 $generated@@703) (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (! (let (($generated@@733 ($generated@@67 (type $generated@@732))))
 (=> (and (and (= (type $generated@@731) $generated@@77) (= (type $generated@@732) ($generated@@66 $generated@@733))) (and (not (= $generated@@731 $generated@@709)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@703 $generated@@731) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@703 $generated@@731) $generated@@732) ($generated@@83 ($generated@@81 $generated@@703 $generated@@731) $generated@@732)) ($generated@@0 ($generated@@159 $generated@@710 $generated@@731 $generated@@732)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@703 $generated@@731) $generated@@732))
))) (and (<= ($generated@@237 $generated@@701) $generated@@711) (=> (= ($generated@@237 $generated@@701) $generated@@711) true)))) (and (=> (= (ControlFlow 0 13) 1) $generated@@728) (=> (= (ControlFlow 0 13) 12) $generated@@727))))))
(let (($generated@@734  (=> (and (and (= $generated@@710 ($generated@@160 $generated@@709 $generated@@703 $generated@@60 false)) (= $generated@@712 ($generated@@396 $generated@@713))) (and (= $generated@@711 ($generated@@237 $generated@@712)) (= (ControlFlow 0 14) 13))) $generated@@729)))
(let (($generated@@735  (=> (and (and (and (and ($generated@@257 $generated@@703) ($generated@@714 $generated@@703)) (and ($generated@@136 $generated@@713 ($generated@@425 $generated@@46 $generated@@46)) ($generated@@74 $generated@@713 ($generated@@425 $generated@@46 $generated@@46) $generated@@703))) (and (and ($generated@@136 $generated@@715 ($generated@@243 ($generated@@139 $generated@@46 $generated@@46))) ($generated@@74 $generated@@715 ($generated@@243 ($generated@@139 $generated@@46 $generated@@46)) $generated@@703)) true)) (and (and (and ($generated@@136 $generated@@716 ($generated@@139 $generated@@46 $generated@@46)) ($generated@@74 $generated@@716 ($generated@@139 $generated@@46 $generated@@46) $generated@@703)) true) (and (= 1 $generated@@717) (= (ControlFlow 0 15) 14)))) $generated@@734)))
$generated@@735)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@400 $generated@@402))) (and ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))) ($generated@@132 $generated@@400 $generated@@402))
 :pattern ( ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@366 $generated@@411) ($generated@@403 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@149) (= (type $generated@@418) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@414) ($generated@@262 ($generated@@215 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@355 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@149) (= (type $generated@@423) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@419) ($generated@@262 ($generated@@215 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@216 $generated@@424 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@356 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@216 $generated@@425 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@356 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@149) ($generated@@216 $generated@@426 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@356 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@257 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@256 $generated@@434)) (<= 0 ($generated@@255 $generated@@433))))
 :pattern ( ($generated@@255 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@384 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@384 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@384 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@392 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@139 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@139 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@139 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@215 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@257 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@256 $generated@@149)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@255 $generated@@475))) ($generated@@242 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@225 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@225 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@230 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@154 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@154 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@356 $generated@@498 ($generated@@262 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@262 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@499) $generated@@502) $generated@@501) ($generated@@216 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@216 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@215 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@215 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@215 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513) ($generated@@384 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516) ($generated@@392 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@149)) ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@356 $generated@@140 $generated@@521) ($generated@@139 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@139 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@140) (= ($generated@@507 ($generated@@262 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@262 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@149) ($generated@@216 $generated@@529 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@149) (= (type $generated@@531) $generated@@64)) ($generated@@216 $generated@@530 ($generated@@225 $generated@@531))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@530)) $generated@@530) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@530) ($generated@@225 $generated@@531))))
 :pattern ( ($generated@@216 $generated@@530 ($generated@@225 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@149) (= (type $generated@@533) $generated@@64)) ($generated@@216 $generated@@532 ($generated@@230 $generated@@533))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@230 $generated@@533))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@230 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@149) (= (type $generated@@535) $generated@@64)) ($generated@@216 $generated@@534 ($generated@@154 $generated@@535))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@534)) $generated@@534) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@534) ($generated@@154 $generated@@535))))
 :pattern ( ($generated@@216 $generated@@534 ($generated@@154 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@149) (= (type $generated@@537) $generated@@64)) ($generated@@216 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@216 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@154 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@242 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@154 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@544) (and ($generated@@138 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@139 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@139 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@242 ($generated@@147 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@140) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@548) (and ($generated@@138 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@139 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@139 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@242 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@149) (= (type $generated@@551) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@550) ($generated@@237 $generated@@551)) ($generated@@237 ($generated@@215 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@550) ($generated@@237 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@552))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@553)) ($generated@@237 ($generated@@262 $generated@@553)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@257 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@256 $generated@@555)) (= ($generated@@255 $generated@@554) 0)) (= $generated@@554 ($generated@@254 $generated@@555))))
 :pattern ( ($generated@@255 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@275 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@427)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@149)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@256 $generated@@149)) (= (type $generated@@571) $generated@@64)) (= ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@255 $generated@@570))) ($generated@@216 ($generated@@470 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@470 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@574))) (< ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@136 $generated@@576 ($generated@@384 $generated@@577 $generated@@578))) (and (and ($generated@@136 ($generated@@281 $generated@@576) ($generated@@225 $generated@@577)) ($generated@@136 ($generated@@324 $generated@@576) ($generated@@225 $generated@@578))) ($generated@@136 ($generated@@355 $generated@@576) ($generated@@225 ($generated@@139 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@136 $generated@@576 ($generated@@384 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@392 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@299 $generated@@579) ($generated@@230 $generated@@580)) ($generated@@136 ($generated@@335 $generated@@579) ($generated@@230 $generated@@581))) ($generated@@136 ($generated@@366 $generated@@579) ($generated@@230 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@392 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@136 $generated@@582 $generated@@46))
 :pattern ( ($generated@@136 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@136 $generated@@583 $generated@@47))
 :pattern ( ($generated@@136 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@136 $generated@@584 $generated@@44))
 :pattern ( ($generated@@136 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@427) ($generated@@136 $generated@@585 $generated@@45))
 :pattern ( ($generated@@136 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@149) ($generated@@136 $generated@@586 $generated@@48))
 :pattern ( ($generated@@136 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Int)
(declare-fun $generated@@592 () Int)
(declare-fun $generated@@593 () Bool)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () Int)
(assert  (and (and (and (= (type $generated@@588) ($generated@@256 $generated@@149)) (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@595) $generated@@77)) (= (type $generated@@596) ($generated@@161 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@602  (=> (and (< $generated@@587 ($generated@@255 $generated@@588)) (= $generated@@589 (- ($generated@@255 $generated@@588) $generated@@587))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@255 $generated@@588)))) (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@255 $generated@@588))) (=> (and (= $generated@@590 (+ $generated@@591 ($generated ($generated@@356 $generated@@2 ($generated@@470 $generated@@588 $generated@@587))))) (= $generated@@592 (+ $generated@@587 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@589) (= (- ($generated@@255 $generated@@588) $generated@@592) $generated@@589))) (=> (or (<= 0 $generated@@589) (= (- ($generated@@255 $generated@@588) $generated@@592) $generated@@589)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- ($generated@@255 $generated@@588) $generated@@592) $generated@@589))))))))))
(let (($generated@@603 true))
(let (($generated@@604  (=> $generated@@593 (and (=> (= (ControlFlow 0 8) 3) $generated@@603) (=> (= (ControlFlow 0 8) 5) $generated@@602)))))
(let (($generated@@605 true))
(let (($generated@@606  (and (=> (= (ControlFlow 0 9) 2) $generated@@605) (=> (= (ControlFlow 0 9) 8) $generated@@604))))
(let (($generated@@607 true))
(let (($generated@@608  (=> (and (and (and (not false) (<= 0 $generated@@587)) (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@77) (=> (and (not (= $generated@@609 $generated@@595)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@594 $generated@@609) $generated@@60))) (= ($generated@@81 $generated@@594 $generated@@609) ($generated@@81 $generated@@594 $generated@@609))))
 :pattern ( ($generated@@81 $generated@@594 $generated@@609))
))) (and (and ($generated@@132 $generated@@594 $generated@@594) (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@67 (type $generated@@611))))
 (=> (and (and (= (type $generated@@610) $generated@@77) (= (type $generated@@611) ($generated@@66 $generated@@612))) (and (not (= $generated@@610 $generated@@595)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@594 $generated@@610) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@594 $generated@@610) $generated@@611) ($generated@@83 ($generated@@81 $generated@@594 $generated@@610) $generated@@611)) ($generated@@0 ($generated@@159 $generated@@596 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@594 $generated@@610) $generated@@611))
))) (and (<= (- ($generated@@255 $generated@@588) $generated@@587) $generated@@597) (=> (= (- ($generated@@255 $generated@@588) $generated@@587) $generated@@597) true)))) (and (=> (= (ControlFlow 0 10) 1) $generated@@607) (=> (= (ControlFlow 0 10) 9) $generated@@606)))))
(let (($generated@@613  (=> (= $generated@@596 ($generated@@160 $generated@@595 $generated@@594 $generated@@60 false)) (=> (and (and (= $generated@@598 ($generated@@235 0)) (= $generated@@599 ($generated@@235 0))) (and (= $generated@@597 (- ($generated@@255 $generated@@588) $generated@@598)) (= (ControlFlow 0 11) 10))) $generated@@608))))
(let (($generated@@614  (=> (and ($generated@@241 $generated@@594) ($generated@@600 $generated@@594)) (=> (and (and ($generated@@136 $generated@@588 ($generated@@469 $generated@@46)) ($generated@@74 $generated@@588 ($generated@@469 $generated@@46) $generated@@594)) (and (= 0 $generated@@601) (= (ControlFlow 0 12) 11))) $generated@@613))))
$generated@@614))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@577)) ($generated@@559 $generated@@577)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@240 $generated@@578 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@240 $generated@@579 ($generated@@249 $generated@@580))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@249 $generated@@580))))
 :pattern ( ($generated@@240 $generated@@579 ($generated@@249 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@240 $generated@@581 ($generated@@254 $generated@@582))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@254 $generated@@582))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@240 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@240 $generated@@585 ($generated@@507 $generated@@586))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585) ($generated@@507 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 ($generated@@507 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@240 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@387 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@240 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@265 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)) ($generated@@261 ($generated@@239 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@611)) ($generated@@261 ($generated@@287 $generated@@611)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@280 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@279 $generated@@613)) (= ($generated@@278 $generated@@612) 0)) (= $generated@@612 ($generated@@277 $generated@@613))))
 :pattern ( ($generated@@278 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@300 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@464)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@279 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@278 $generated@@628))) ($generated@@240 ($generated@@508 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@508 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@278 $generated@@632))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@310 $generated@@634) ($generated@@249 $generated@@635)) ($generated@@140 ($generated@@355 $generated@@634) ($generated@@249 $generated@@636))) ($generated@@140 ($generated@@386 $generated@@634) ($generated@@249 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@328 $generated@@637) ($generated@@254 $generated@@638)) ($generated@@140 ($generated@@366 $generated@@637) ($generated@@254 $generated@@639))) ($generated@@140 ($generated@@397 $generated@@637) ($generated@@254 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@464) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Bool)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(assert  (and (and (and (and (and (= (type $generated@@646) $generated@@81) (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@81)) (= (type $generated@@648) ($generated@@185 $generated@@81 $generated@@4))) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@662) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@664  (=> (and (<= ($generated@@259 0) $generated@@645) (< $generated@@645 ($generated@@136 $generated@@646))) (and (=> (= (ControlFlow 0 11) (- 0 17)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 11) (- 0 16)) (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@136 $generated@@647)))) (and (=> (= (ControlFlow 0 11) (- 0 15)) ($generated@@0 ($generated@@183 $generated@@648 $generated@@647 ($generated@@434 $generated@@645)))) (=> ($generated@@0 ($generated@@183 $generated@@648 $generated@@647 ($generated@@434 $generated@@645))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (not (= $generated@@646 $generated@@138))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 (- (- ($generated@@136 $generated@@646) $generated@@645) 1)) (< (- (- ($generated@@136 $generated@@646) $generated@@645) 1) ($generated@@136 $generated@@646)))) (=> (and (and (<= ($generated@@259 0) $generated@@649) (< $generated@@649 ($generated@@136 $generated@@646))) (and (not (= $generated@@645 $generated@@649)) (= (ControlFlow 0 11) (- 0 10)))) (or (or (not (= $generated@@647 $generated@@647)) (not (= ($generated@@434 $generated@@645) ($generated@@434 $generated@@649)))) (= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@650 $generated@@646) ($generated@@434 (- (- ($generated@@136 $generated@@646) $generated@@645) 1))))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@650 $generated@@646) ($generated@@434 (- (- ($generated@@136 $generated@@646) $generated@@649) 1))))))))))))))))))))
(let (($generated@@665  (=> (and (< $generated@@645 ($generated@@259 0)) (= (ControlFlow 0 20) 11)) $generated@@664)))
(let (($generated@@666  (=> (<= ($generated@@259 0) $generated@@645) (and (=> (= (ControlFlow 0 18) (- 0 19)) (not (= $generated@@646 $generated@@138))) (=> (= (ControlFlow 0 18) 11) $generated@@664)))))
(let (($generated@@667  (and (=> (= (ControlFlow 0 21) 18) $generated@@666) (=> (= (ControlFlow 0 21) 20) $generated@@665))))
(let (($generated@@668 true))
(let (($generated@@669  (=> (<= ($generated@@136 $generated@@646) $generated@@651) (and (=> (= (ControlFlow 0 22) (- 0 24)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 22) (- 0 23)) (<= 0 ($generated@@136 $generated@@646))) (=> (<= 0 ($generated@@136 $generated@@646)) (=> (and (and (and (not (= $generated@@647 $generated@@138)) (= ($generated@@139 $generated@@647) ($generated@@137 $generated@@46))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@652 $generated@@647) $generated@@60)))) (and (and (= ($generated@@136 $generated@@647) ($generated@@136 $generated@@646)) (= $generated@@650 ($generated@@86 $generated@@652 $generated@@647 ($generated@@88 ($generated@@85 $generated@@652 $generated@@647) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@650) ($generated@@653 $generated@@650)))) (and (=> (= (ControlFlow 0 22) 21) $generated@@667) (=> (= (ControlFlow 0 22) 9) $generated@@668))))))))))
(let (($generated@@670  (=> (and (< $generated@@651 ($generated@@136 $generated@@646)) (= $generated@@654 (- ($generated@@136 $generated@@646) $generated@@651))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@646)))) (=> (and (<= 0 $generated@@651) (< $generated@@651 ($generated@@136 $generated@@646))) (=> (and (= $generated@@655 (+ $generated@@656 ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@652 $generated@@646) ($generated@@434 $generated@@651)))))) (= $generated@@657 (+ $generated@@651 1))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@654) (= (- ($generated@@136 $generated@@646) $generated@@657) $generated@@654))) (=> (or (<= 0 $generated@@654) (= (- ($generated@@136 $generated@@646) $generated@@657) $generated@@654)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- ($generated@@136 $generated@@646) $generated@@657) $generated@@654))))))))))))
(let (($generated@@671  (=> $generated@@658 (and (=> (= (ControlFlow 0 25) (- 0 26)) (not (= $generated@@646 $generated@@138))) (=> (not (= $generated@@646 $generated@@138)) (and (=> (= (ControlFlow 0 25) 22) $generated@@669) (=> (= (ControlFlow 0 25) 5) $generated@@670)))))))
(let (($generated@@672  (=> (and (not $generated@@658) (= (ControlFlow 0 3) (- 0 2))) (not (= $generated@@646 $generated@@138)))))
(let (($generated@@673  (and (=> (= (ControlFlow 0 27) 3) $generated@@672) (=> (= (ControlFlow 0 27) 25) $generated@@671))))
(let (($generated@@674 true))
(let (($generated@@675  (=> (and (and (and (not false) (<= 0 $generated@@651)) (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@81) (=> (and (not (= $generated@@676 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@652 $generated@@676) $generated@@60))) (= ($generated@@85 $generated@@652 $generated@@676) ($generated@@85 $generated@@652 $generated@@676))))
 :pattern ( ($generated@@85 $generated@@652 $generated@@676))
))) (and (and ($generated@@145 $generated@@652 $generated@@652) (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (! (let (($generated@@679 ($generated@@70 (type $generated@@678))))
 (=> (and (and (= (type $generated@@677) $generated@@81) (= (type $generated@@678) ($generated@@69 $generated@@679))) (and (not (= $generated@@677 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@652 $generated@@677) $generated@@60)))) (or (= ($generated@@87 ($generated@@85 $generated@@652 $generated@@677) $generated@@678) ($generated@@87 ($generated@@85 $generated@@652 $generated@@677) $generated@@678)) ($generated@@0 ($generated@@183 $generated@@648 $generated@@677 $generated@@678)))))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@652 $generated@@677) $generated@@678))
))) (and (<= (- ($generated@@136 $generated@@646) $generated@@651) $generated@@659) (=> (= (- ($generated@@136 $generated@@646) $generated@@651) $generated@@659) true)))) (and (=> (= (ControlFlow 0 28) 1) $generated@@674) (=> (= (ControlFlow 0 28) 27) $generated@@673)))))
(let (($generated@@680  (=> (= $generated@@648 ($generated@@184 $generated@@138 $generated@@652 $generated@@60 false)) (=> (and (and (= $generated@@660 ($generated@@259 0)) (= $generated@@661 ($generated@@259 0))) (and (= $generated@@659 (- ($generated@@136 $generated@@646) $generated@@660)) (= (ControlFlow 0 29) 28))) $generated@@675))))
(let (($generated@@681  (=> (and (and ($generated@@152 $generated@@652) ($generated@@653 $generated@@652)) (and ($generated@@140 $generated@@646 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@646 ($generated@@157 $generated@@46) $generated@@652))) (=> (and (and (and ($generated@@140 $generated@@662 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@662 ($generated@@157 $generated@@46) $generated@@652)) true) (and (= 1 $generated@@663) (= (ControlFlow 0 30) 29))) $generated@@680))))
$generated@@681)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
