(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U Int) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@T T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (Int) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 () T@T)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@294 (T@U T@U) Bool)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@342 (T@T T@T) T@U)
(declare-fun $generated@@343 (T@T T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@567 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@145 T@T) ) (= ($generated@@1 ($generated@@138 $generated@@145)) 14)) (forall (($generated@@146 T@T) ) (! (= ($generated@@144 ($generated@@138 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@138 $generated@@146))
))) (= ($generated@@1 $generated@@139) 15)) (forall (($generated@@147 T@U) ($generated@@148 Int) ) (! (let (($generated@@149 ($generated@@144 (type $generated@@147))))
(= (type ($generated@@136 $generated@@147 $generated@@148)) $generated@@149))
 :pattern ( ($generated@@136 $generated@@147 $generated@@148))
))) (= ($generated@@1 $generated@@143) 16)) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@137 $generated@@150)) $generated@@143)
 :pattern ( ($generated@@137 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@U) ) (! (= (type ($generated@@142 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@142 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ) (!  (=> (= (type $generated@@153) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@140 $generated@@153))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@153 $generated@@154))) ($generated@@141 ($generated@@137 $generated@@153)))))
 :pattern ( ($generated@@136 $generated@@153 $generated@@154) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@155 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@155 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@159 $generated@@160)) $generated@@68)
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@68) (= (type $generated@@162) $generated@@68)) (= (type $generated@@163) $generated@@143)) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162))) ($generated@@157 $generated@@163))
 :pattern ( ($generated@@157 $generated@@163) ($generated@@155 $generated@@163 ($generated@@158 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@139)
 :pattern ( ($generated@@165 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@139)
 :pattern ( ($generated@@166 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@143) (= (type $generated@@170) $generated@@143)) true) (= ($generated@@164 $generated@@169 $generated@@170)  (and (= ($generated@@165 $generated@@169) ($generated@@165 $generated@@170)) (= ($generated@@166 $generated@@169) ($generated@@166 $generated@@170)))))
 :pattern ( ($generated@@164 $generated@@169 $generated@@170))
)))
(assert  (and (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@171 $generated@@173))
)) (= (type $generated@@172) $generated@@143)))
(assert (= ($generated@@171 $generated@@172) $generated@@65))
(assert (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@68)
 :pattern ( ($generated@@174 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@178) $generated@@68)) ($generated@@155 $generated@@177 ($generated@@174 $generated@@178))) ($generated@@175 $generated@@177))
 :pattern ( ($generated@@155 $generated@@177 ($generated@@174 $generated@@178)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 17)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@81 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@71 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@81) (= (type $generated@@229) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@230) ($generated@@70 $generated@@4))) (= (type $generated@@232) $generated@@81)) (= (type $generated@@233) ($generated@@70 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@143)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@68) (= (type $generated@@240) $generated@@68)) (= (type $generated@@241) $generated@@139)) (= (type $generated@@242) $generated@@139)) (= ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@155 ($generated@@235 $generated@@241 $generated@@242) ($generated@@158 $generated@@239 $generated@@240)))
)))
(assert (= (type $generated@@243) $generated@@68))
(assert ($generated@@155 $generated@@172 $generated@@243))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@245)) ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
 :pattern ( ($generated@@78 $generated@@172 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@143) (= (type $generated@@247) $generated@@143)) (= ($generated@@164 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@164 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@143) (= (type $generated@@250) $generated@@143)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@68)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@254) $generated@@68)) (= ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@139) ($generated@@0 ($generated@@85 $generated@@253 $generated@@255))) ($generated@@236 $generated@@255 $generated@@254))
 :pattern ( ($generated@@85 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@155 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@139) ($generated@@0 ($generated@@85 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@85 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@155 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@267 $generated@@269 $generated@@270)) ($generated@@138 $generated@@271)))
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)) (forall (($generated@@272 T@U) ) (! (= (type ($generated@@268 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) ($generated@@138 $generated@@139)) (= (type $generated@@274) $generated@@139)) (= (type $generated@@275) $generated@@68)) (and ($generated@@155 $generated@@273 ($generated@@268 $generated@@275)) ($generated@@236 $generated@@274 $generated@@275))) ($generated@@155 ($generated@@267 $generated@@273 $generated@@274) ($generated@@268 $generated@@275)))
 :pattern ( ($generated@@155 ($generated@@267 $generated@@273 $generated@@274) ($generated@@268 $generated@@275)))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@143) (= (type $generated@@278) $generated@@143)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@248 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@248 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@248 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert  (and (= ($generated@@1 $generated@@281) 18) (forall (($generated@@282 Int) ) (! (= (type ($generated@@279 $generated@@282)) $generated@@281)
 :pattern ( ($generated@@279 $generated@@282))
))))
(assert (forall (($generated@@283 Int) ) (!  (=> (and (<= 0 $generated@@283) (< $generated@@283 65536)) (= ($generated@@280 ($generated@@279 $generated@@283)) $generated@@283))
 :pattern ( ($generated@@279 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@139)) (= (type $generated@@288) $generated@@139)) (= (type $generated@@289) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@289)) (= ($generated@@78 ($generated@@235 $generated@@287 $generated@@288) ($generated@@158 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@78 ($generated@@235 $generated@@287 $generated@@288) ($generated@@158 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@143) (= ($generated@@157 $generated@@290) (= ($generated@@171 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@143) (= ($generated@@291 $generated@@292) (= ($generated@@171 $generated@@292) $generated@@63)))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@143) (= ($generated@@276 $generated@@293) (= ($generated@@171 $generated@@293) $generated@@65)))
 :pattern ( ($generated@@276 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@144 (type $generated@@295))))
 (=> (and (= (type $generated@@295) ($generated@@138 $generated@@297)) (= (type $generated@@296) ($generated@@138 $generated@@297))) (= ($generated@@294 $generated@@295 $generated@@296)  (and (= ($generated@@140 $generated@@295) ($generated@@140 $generated@@296)) (forall (($generated@@298 Int) ) (!  (=> (and (<= 0 $generated@@298) (< $generated@@298 ($generated@@140 $generated@@295))) (= ($generated@@136 $generated@@295 $generated@@298) ($generated@@136 $generated@@296 $generated@@298)))
 :pattern ( ($generated@@136 $generated@@295 $generated@@298))
 :pattern ( ($generated@@136 $generated@@296 $generated@@298))
))))))
 :pattern ( ($generated@@294 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@143) ($generated@@157 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@139) (= (type $generated@@301) $generated@@139)) (= $generated@@299 ($generated@@235 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@157 $generated@@299))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@138 $generated@@303))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@140 ($generated@@302 $generated@@304)) 0)
 :pattern ( ($generated@@302 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@143) ($generated@@276 $generated@@305)) (= $generated@@305 $generated@@172))
 :pattern ( ($generated@@276 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@143) ($generated@@291 $generated@@306)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) ($generated@@138 $generated@@139)) (= $generated@@306 ($generated@@137 $generated@@307)))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@291 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (let (($generated@@310 (type $generated@@309)))
 (=> (= (type $generated@@308) ($generated@@138 $generated@@310)) (= ($generated@@140 ($generated@@267 $generated@@308 $generated@@309)) (+ 1 ($generated@@140 $generated@@308)))))
 :pattern ( ($generated@@267 $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@281) (and (and (= ($generated@@279 ($generated@@280 $generated@@311)) $generated@@311) (<= 0 ($generated@@280 $generated@@311))) (< ($generated@@280 $generated@@311) 65536)))
 :pattern ( ($generated@@280 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@139)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@284 ($generated@@312 $generated@@314) $generated@@315 $generated@@316) ($generated@@78 $generated@@314 $generated@@315 $generated@@316)))
 :pattern ( ($generated@@284 ($generated@@312 $generated@@314) $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@319 T@T) ) (! (= (type ($generated@@318 $generated@@319)) ($generated@@80 $generated@@319 $generated@@2))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@83 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@80 $generated@@321 $generated@@2)) (and (= (= ($generated@@317 $generated@@320) 0) (= $generated@@320 ($generated@@318 $generated@@321))) (=> (not (= ($generated@@317 $generated@@320) 0)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) (< 0 ($generated ($generated@@85 $generated@@320 $generated@@322))))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@80 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert  (and (and (and (and (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (= ($generated@@1 ($generated@@343 $generated@@346 $generated@@347)) 20)) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@344 ($generated@@343 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@343 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= ($generated@@345 ($generated@@343 $generated@@350 $generated@@351)) $generated@@351)
 :pattern ( ($generated@@343 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@344 (type $generated@@352))))
(= (type ($generated@@341 $generated@@352)) ($generated@@80 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@352))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= (type ($generated@@342 $generated@@354 $generated@@355)) ($generated@@343 $generated@@354 $generated@@355))
 :pattern ( ($generated@@342 $generated@@354 $generated@@355))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@T) ) (! (let (($generated@@358 (type $generated@@356)))
 (not ($generated@@0 ($generated@@85 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356))))
 :pattern ( (let (($generated@@358 (type $generated@@356)))
($generated@@85 ($generated@@341 ($generated@@342 $generated@@358 $generated@@357)) $generated@@356)))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@83 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@80 $generated@@360 $generated@@2)) (= ($generated@@175 $generated@@359) (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@360) (and (<= 0 ($generated ($generated@@85 $generated@@359 $generated@@361))) (<= ($generated ($generated@@85 $generated@@359 $generated@@361)) ($generated@@317 $generated@@359))))
 :pattern ( ($generated@@85 $generated@@359 $generated@@361))
)))))
 :pattern ( ($generated@@175 $generated@@359))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@139) ($generated@@236 $generated@@362 $generated@@243)) (and (= ($generated@@312 ($generated@@142 $generated@@143 $generated@@362)) $generated@@362) ($generated@@155 ($generated@@142 $generated@@143 $generated@@362) $generated@@243)))
 :pattern ( ($generated@@236 $generated@@362 $generated@@243))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (=> (= (type $generated@@363) ($generated@@138 $generated@@366)) (and (=> (= $generated@@364 ($generated@@140 $generated@@363)) (= ($generated@@136 ($generated@@267 $generated@@363 $generated@@365) $generated@@364) $generated@@365)) (=> (not (= $generated@@364 ($generated@@140 $generated@@363))) (= ($generated@@136 ($generated@@267 $generated@@363 $generated@@365) $generated@@364) ($generated@@136 $generated@@363 $generated@@364))))))
 :pattern ( ($generated@@136 ($generated@@267 $generated@@363 $generated@@365) $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (= (type ($generated@@367 $generated@@368)) ($generated@@138 $generated@@139))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@369) $generated@@143) (= (type $generated@@370) $generated@@143)) (and ($generated@@291 $generated@@369) ($generated@@291 $generated@@370))) (= ($generated@@248 $generated@@369 $generated@@370) ($generated@@294 ($generated@@367 $generated@@369) ($generated@@367 $generated@@370))))
 :pattern ( ($generated@@248 $generated@@369 $generated@@370) ($generated@@291 $generated@@369))
 :pattern ( ($generated@@248 $generated@@369 $generated@@370) ($generated@@291 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@327 (type $generated@@371))))
(let (($generated@@373 ($generated@@326 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@325 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@324 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@323 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@327 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@327 (type $generated@@378))))
(let (($generated@@380 ($generated@@326 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@325 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@324 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@345 (type $generated@@382))))
(let (($generated@@384 ($generated@@344 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@343 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@342 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@341 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@345 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@80 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@345 (type $generated@@389))))
(let (($generated@@391 ($generated@@344 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@343 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@342 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@394) $generated@@68)) (= ($generated@@155 $generated@@393 ($generated@@174 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@393 $generated@@395)))) ($generated@@236 $generated@@395 $generated@@394))
 :pattern ( ($generated@@85 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@155 $generated@@393 ($generated@@174 $generated@@394)))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@397) $generated@@68)) (= (type $generated@@398) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@396 ($generated@@251 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@139) ($generated@@0 ($generated@@85 $generated@@396 $generated@@399))) ($generated@@284 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@85 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@78 $generated@@396 ($generated@@251 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@80 $generated@@139 $generated@@4)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@400 ($generated@@256 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@139) ($generated@@0 ($generated@@85 $generated@@400 $generated@@403))) ($generated@@284 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@85 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@78 $generated@@400 ($generated@@256 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@85 ($generated@@318 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@85 ($generated@@318 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@327 (type $generated@@409))))
(let (($generated@@411 ($generated@@326 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@80 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@413) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@412) ($generated@@165 ($generated@@142 $generated@@143 $generated@@413)))) (= ($generated@@85 ($generated@@407 $generated@@412) ($generated@@165 ($generated@@142 $generated@@143 $generated@@413))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@413))))))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@80 $generated@@139 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@345 (type $generated@@417))))
(let (($generated@@419 ($generated@@344 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@80 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@343 $generated@@139 $generated@@139)) (= (type $generated@@421) $generated@@139)) (= ($generated@@0 ($generated@@85 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@85 ($generated@@341 $generated@@420) ($generated@@165 ($generated@@142 $generated@@143 $generated@@421)))) (= ($generated@@85 ($generated@@415 $generated@@420) ($generated@@165 ($generated@@142 $generated@@143 $generated@@421))) ($generated@@166 ($generated@@142 $generated@@143 $generated@@421))))))
 :pattern ( ($generated@@85 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@326 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@325 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@344 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@343 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@85 ($generated@@341 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@85 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@427) $generated@@431))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@432) ($generated@@138 $generated@@139)) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@433)) (= ($generated@@78 ($generated@@137 $generated@@432) $generated@@243 $generated@@433) ($generated@@78 $generated@@432 ($generated@@268 $generated@@45) $generated@@433)))
 :pattern ( ($generated@@78 ($generated@@137 $generated@@432) $generated@@243 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@68)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@437) $generated@@441))) (and ($generated@@284 ($generated@@85 ($generated@@407 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@284 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@437) $generated@@441))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@78 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@68)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@343 $generated@@139 $generated@@139)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@445) $generated@@449))) (and ($generated@@284 ($generated@@85 ($generated@@415 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@284 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@445) $generated@@449))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@78 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@144 (type $generated@@450))))
 (=> (and (and (= (type $generated@@450) ($generated@@138 $generated@@452)) (= (type $generated@@451) ($generated@@138 $generated@@452))) ($generated@@294 $generated@@450 $generated@@451)) (= $generated@@450 $generated@@451)))
 :pattern ( ($generated@@294 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@143) ($generated@@155 $generated@@453 $generated@@243)) (or ($generated@@291 $generated@@453) ($generated@@276 $generated@@453)))
 :pattern ( ($generated@@276 $generated@@453) ($generated@@155 $generated@@453 $generated@@243))
 :pattern ( ($generated@@291 $generated@@453) ($generated@@155 $generated@@453 $generated@@243))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@345 (type $generated@@456))))
(let (($generated@@458 ($generated@@344 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@343 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@342 $generated@@458 $generated@@457)) (= ($generated@@341 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@341 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@345 (type $generated@@459))))
(let (($generated@@461 ($generated@@344 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@343 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@342 $generated@@461 $generated@@460)) (= ($generated@@386 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@386 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@345 (type $generated@@462))))
(let (($generated@@464 ($generated@@344 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@343 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@342 $generated@@464 $generated@@463)) (= ($generated@@414 $generated@@462) ($generated@@454 $generated@@139))))))
 :pattern ( ($generated@@414 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@327 (type $generated@@465))))
(let (($generated@@467 ($generated@@326 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@325 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@324 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@139) (= (type $generated@@469) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@406 $generated@@465) ($generated@@312 ($generated@@235 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@406 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@345 (type $generated@@470))))
(let (($generated@@472 ($generated@@344 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@343 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@342 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@139) (= (type $generated@@474) $generated@@139)) ($generated@@0 ($generated@@85 ($generated@@414 $generated@@470) ($generated@@312 ($generated@@235 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@414 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@139) ($generated@@236 $generated@@475 $generated@@46)) (and (= ($generated@@312 ($generated@@142 $generated@@2 $generated@@475)) $generated@@475) ($generated@@155 ($generated@@142 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@139) ($generated@@236 $generated@@476 $generated@@47)) (and (= ($generated@@312 ($generated@@142 $generated@@3 $generated@@476)) $generated@@476) ($generated@@155 ($generated@@142 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@139) ($generated@@236 $generated@@477 $generated@@44)) (and (= ($generated@@312 ($generated@@142 $generated@@4 $generated@@477)) $generated@@477) ($generated@@155 ($generated@@142 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@477 $generated@@44))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@139) ($generated@@236 $generated@@478 $generated@@45)) (and (= ($generated@@312 ($generated@@142 $generated@@281 $generated@@478)) $generated@@478) ($generated@@155 ($generated@@142 $generated@@281 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@68) (= ($generated@@236 ($generated@@312 $generated@@479) $generated@@480) ($generated@@155 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@236 ($generated@@312 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@83 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@80 $generated@@482 $generated@@2)) (<= 0 ($generated@@317 $generated@@481))))
 :pattern ( ($generated@@317 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@144 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@138 $generated@@484)) (<= 0 ($generated@@140 $generated@@483))))
 :pattern ( ($generated@@140 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@434 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@434 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@434 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@434 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@76 ($generated@@434 $generated@@493 $generated@@494)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@442 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@442 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@442 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@442 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@76 ($generated@@442 $generated@@503 $generated@@504)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@139) (= (type $generated@@506) $generated@@139)) (= ($generated@@171 ($generated@@235 $generated@@505 $generated@@506)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@158 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@158 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@158 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@158 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@139) (= (type $generated@@516) $generated@@139)) (= ($generated@@165 ($generated@@235 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@235 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@139) (= (type $generated@@518) $generated@@139)) (= ($generated@@166 ($generated@@235 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@235 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@138 $generated@@139)) (= (type $generated@@520) $generated@@68)) (= (type $generated@@521) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@519 ($generated@@268 $generated@@520) $generated@@521) (forall (($generated@@522 Int) ) (!  (=> (and (<= 0 $generated@@522) (< $generated@@522 ($generated@@140 $generated@@519))) ($generated@@284 ($generated@@136 $generated@@519 $generated@@522) $generated@@520 $generated@@521))
 :pattern ( ($generated@@136 $generated@@519 $generated@@522))
))))
 :pattern ( ($generated@@78 $generated@@519 ($generated@@268 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@523 ($generated@@79 $generated@@524)) $generated@@524)
 :pattern ( ($generated@@79 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@251 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@251 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@76 ($generated@@251 $generated@@528)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@256 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@256 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@256 $generated@@532)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@174 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@174 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@174 $generated@@536)) $generated@@56))
 :pattern ( ($generated@@174 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@268 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@268 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@540)) $generated@@57))
 :pattern ( ($generated@@268 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) ($generated@@138 $generated@@139)) (= ($generated@@171 ($generated@@137 $generated@@541)) $generated@@63))
 :pattern ( ($generated@@137 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@138 $generated@@139)) (= ($generated@@367 ($generated@@137 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@137 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
(= ($generated@@142 $generated@@544 ($generated@@312 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@312 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) (= ($generated@@155 $generated@@545 ($generated@@434 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@545) $generated@@548))) (and ($generated@@236 ($generated@@85 ($generated@@407 $generated@@545) $generated@@548) $generated@@547) ($generated@@236 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@545) $generated@@548))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@155 $generated@@545 ($generated@@434 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@343 $generated@@139 $generated@@139)) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) (= ($generated@@155 $generated@@549 ($generated@@442 $generated@@550 $generated@@551)) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@139) ($generated@@0 ($generated@@85 ($generated@@341 $generated@@549) $generated@@552))) (and ($generated@@236 ($generated@@85 ($generated@@415 $generated@@549) $generated@@552) $generated@@551) ($generated@@236 $generated@@552 $generated@@550)))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@549) $generated@@552))
 :pattern ( ($generated@@85 ($generated@@341 $generated@@549) $generated@@552))
))))
 :pattern ( ($generated@@155 $generated@@549 ($generated@@442 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@139) (= (type $generated@@555) $generated@@139)) (< ($generated@@553 $generated@@554) ($generated@@141 ($generated@@235 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@235 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@139) (= (type $generated@@557) $generated@@139)) (< ($generated@@553 $generated@@557) ($generated@@141 ($generated@@235 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@235 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@139) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@236 $generated@@558 ($generated@@434 $generated@@559 $generated@@560))) (and (= ($generated@@312 ($generated@@142 ($generated@@325 $generated@@139 $generated@@139) $generated@@558)) $generated@@558) ($generated@@155 ($generated@@142 ($generated@@325 $generated@@139 $generated@@139) $generated@@558) ($generated@@434 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@236 $generated@@558 ($generated@@434 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@139) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) ($generated@@236 $generated@@561 ($generated@@442 $generated@@562 $generated@@563))) (and (= ($generated@@312 ($generated@@142 ($generated@@343 $generated@@139 $generated@@139) $generated@@561)) $generated@@561) ($generated@@155 ($generated@@142 ($generated@@343 $generated@@139 $generated@@139) $generated@@561) ($generated@@442 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@236 $generated@@561 ($generated@@442 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@139)) ($generated@@236 $generated@@566 ($generated@@158 $generated@@564 $generated@@565))) (and (= ($generated@@312 ($generated@@142 $generated@@143 $generated@@566)) $generated@@566) ($generated@@155 ($generated@@142 $generated@@143 $generated@@566) ($generated@@158 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@236 $generated@@566 ($generated@@158 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) ($generated@@138 $generated@@139)) (< ($generated@@567 $generated@@568) ($generated@@141 ($generated@@137 $generated@@568))))
 :pattern ( ($generated@@137 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (not ($generated@@0 ($generated@@85 ($generated@@454 $generated@@570) $generated@@569))))
 :pattern ( (let (($generated@@570 (type $generated@@569)))
($generated@@85 ($generated@@454 $generated@@570) $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@73)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@68) (= (type $generated@@574) $generated@@68)) (and (= ($generated@@76 ($generated@@158 $generated@@573 $generated@@574)) $generated@@62) (= ($generated@@571 ($generated@@158 $generated@@573 $generated@@574)) $generated@@66)))
 :pattern ( ($generated@@158 $generated@@573 $generated@@574))
)))
(assert  (and (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@144 (type $generated@@577))))
(= (type ($generated@@575 $generated@@577)) ($generated@@138 $generated@@578)))
 :pattern ( ($generated@@575 $generated@@577))
)) (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@144 (type $generated@@579))))
(= (type ($generated@@576 $generated@@579)) $generated@@580))
 :pattern ( ($generated@@576 $generated@@579))
))))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
 (=> (= (type $generated@@581) ($generated@@138 $generated@@583)) (and (= ($generated@@575 ($generated@@267 $generated@@581 $generated@@582)) $generated@@581) (= ($generated@@576 ($generated@@267 $generated@@581 $generated@@582)) $generated@@582))))
 :pattern ( ($generated@@267 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@143) (= ($generated@@553 ($generated@@312 $generated@@584)) ($generated@@141 $generated@@584)))
 :pattern ( ($generated@@553 ($generated@@312 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@139) ($generated@@236 $generated@@585 ($generated@@79 0))) (and (= ($generated@@312 ($generated@@142 $generated@@2 $generated@@585)) $generated@@585) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@585) ($generated@@79 0))))
 :pattern ( ($generated@@236 $generated@@585 ($generated@@79 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@139) (= (type $generated@@587) $generated@@68)) ($generated@@236 $generated@@586 ($generated@@251 $generated@@587))) (and (= ($generated@@312 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@586)) $generated@@586) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@586) ($generated@@251 $generated@@587))))
 :pattern ( ($generated@@236 $generated@@586 ($generated@@251 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@139) (= (type $generated@@589) $generated@@68)) ($generated@@236 $generated@@588 ($generated@@256 $generated@@589))) (and (= ($generated@@312 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@588)) $generated@@588) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@4) $generated@@588) ($generated@@256 $generated@@589))))
 :pattern ( ($generated@@236 $generated@@588 ($generated@@256 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@139) (= (type $generated@@591) $generated@@68)) ($generated@@236 $generated@@590 ($generated@@174 $generated@@591))) (and (= ($generated@@312 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@590)) $generated@@590) ($generated@@155 ($generated@@142 ($generated@@80 $generated@@139 $generated@@2) $generated@@590) ($generated@@174 $generated@@591))))
 :pattern ( ($generated@@236 $generated@@590 ($generated@@174 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@139) (= (type $generated@@593) $generated@@68)) ($generated@@236 $generated@@592 ($generated@@268 $generated@@593))) (and (= ($generated@@312 ($generated@@142 ($generated@@138 $generated@@139) $generated@@592)) $generated@@592) ($generated@@155 ($generated@@142 ($generated@@138 $generated@@139) $generated@@592) ($generated@@268 $generated@@593))))
 :pattern ( ($generated@@236 $generated@@592 ($generated@@268 $generated@@593)))
)))
(assert (= ($generated@@76 $generated@@243) $generated@@64))
(assert (= ($generated@@571 $generated@@243) $generated@@67))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@80 $generated@@139 $generated@@2)) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@594 ($generated@@174 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@139) (< 0 ($generated ($generated@@85 $generated@@594 $generated@@597)))) ($generated@@284 $generated@@597 $generated@@595 $generated@@596))
 :pattern ( ($generated@@85 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@174 $generated@@595) $generated@@596))
)))
(assert (= $generated@@172 ($generated@@263 $generated@@172)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) ($generated@@138 $generated@@139)) (= ($generated@@155 ($generated@@137 $generated@@598) $generated@@243) ($generated@@155 $generated@@598 ($generated@@268 $generated@@45))))
 :pattern ( ($generated@@155 ($generated@@137 $generated@@598) $generated@@243))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@143) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@600) (and ($generated@@291 $generated@@599) ($generated@@78 $generated@@599 $generated@@243 $generated@@600)))) ($generated@@78 ($generated@@367 $generated@@599) ($generated@@268 $generated@@45) $generated@@600))
 :pattern ( ($generated@@78 ($generated@@367 $generated@@599) ($generated@@268 $generated@@45) $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@143) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@603) (and ($generated@@157 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@68) ($generated@@78 $generated@@601 ($generated@@158 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@78 $generated@@601 ($generated@@158 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@284 ($generated@@165 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@284 ($generated@@165 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@143) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@607) (and ($generated@@157 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@68) ($generated@@78 $generated@@605 ($generated@@158 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@78 $generated@@605 ($generated@@158 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@284 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@284 ($generated@@166 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@139) (= (type $generated@@610) $generated@@139)) (= ($generated@@235 ($generated@@263 $generated@@609) ($generated@@263 $generated@@610)) ($generated@@263 ($generated@@235 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@235 ($generated@@263 $generated@@609) ($generated@@263 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@312 ($generated@@8 ($generated@@261 $generated@@611))) ($generated@@263 ($generated@@312 ($generated@@8 $generated@@611))))
 :pattern ( ($generated@@312 ($generated@@8 ($generated@@261 $generated@@611))))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) ($generated@@138 $generated@@139)) (= ($generated@@137 ($generated@@263 $generated@@612)) ($generated@@263 ($generated@@137 $generated@@612))))
 :pattern ( ($generated@@137 ($generated@@263 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (= ($generated@@312 ($generated@@263 $generated@@613)) ($generated@@263 ($generated@@312 $generated@@613)))
 :pattern ( ($generated@@312 ($generated@@263 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@144 (type $generated@@614))))
 (=> (and (= (type $generated@@614) ($generated@@138 $generated@@615)) (= ($generated@@140 $generated@@614) 0)) (= $generated@@614 ($generated@@302 $generated@@615))))
 :pattern ( ($generated@@140 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (! (let (($generated@@619 (type $generated@@617)))
 (=> (and (and (= (type $generated@@616) ($generated@@80 $generated@@619 $generated@@2)) (= (type $generated@@618) $generated@@2)) (<= 0 ($generated $generated@@618))) (= ($generated@@317 ($generated@@86 $generated@@616 $generated@@617 $generated@@618)) (+ (- ($generated@@317 $generated@@616) ($generated ($generated@@85 $generated@@616 $generated@@617))) ($generated $generated@@618)))))
 :pattern ( ($generated@@317 ($generated@@86 $generated@@616 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@2)) ($generated@@78 $generated@@621 $generated@@46 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@46 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@3)) ($generated@@78 $generated@@623 $generated@@47 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@47 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@4)) ($generated@@78 $generated@@625 $generated@@44 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@44 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@281)) ($generated@@78 $generated@@627 $generated@@45 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@45 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@139)) ($generated@@78 $generated@@629 $generated@@48 $generated@@628))
 :pattern ( ($generated@@78 $generated@@629 $generated@@48 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@138 $generated@@139)) (= (type $generated@@631) $generated@@68)) (= ($generated@@155 $generated@@630 ($generated@@268 $generated@@631)) (forall (($generated@@632 Int) ) (!  (=> (and (<= 0 $generated@@632) (< $generated@@632 ($generated@@140 $generated@@630))) ($generated@@236 ($generated@@136 $generated@@630 $generated@@632) $generated@@631))
 :pattern ( ($generated@@136 $generated@@630 $generated@@632))
))))
 :pattern ( ($generated@@155 $generated@@630 ($generated@@268 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@138 $generated@@139)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@140 $generated@@633))) (< ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@633 $generated@@634))) ($generated@@567 $generated@@633))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@143 ($generated@@136 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@325 $generated@@139 $generated@@139)) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) $generated@@68)) ($generated@@155 $generated@@635 ($generated@@434 $generated@@636 $generated@@637))) (and (and ($generated@@155 ($generated@@323 $generated@@635) ($generated@@251 $generated@@636)) ($generated@@155 ($generated@@375 $generated@@635) ($generated@@251 $generated@@637))) ($generated@@155 ($generated@@406 $generated@@635) ($generated@@251 ($generated@@158 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@155 $generated@@635 ($generated@@434 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@343 $generated@@139 $generated@@139)) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) $generated@@68)) ($generated@@155 $generated@@638 ($generated@@442 $generated@@639 $generated@@640))) (and (and ($generated@@155 ($generated@@341 $generated@@638) ($generated@@256 $generated@@639)) ($generated@@155 ($generated@@386 $generated@@638) ($generated@@256 $generated@@640))) ($generated@@155 ($generated@@414 $generated@@638) ($generated@@256 ($generated@@158 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@155 $generated@@638 ($generated@@442 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@155 $generated@@641 $generated@@46))
 :pattern ( ($generated@@155 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@155 $generated@@642 $generated@@47))
 :pattern ( ($generated@@155 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@155 $generated@@643 $generated@@44))
 :pattern ( ($generated@@155 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@281) ($generated@@155 $generated@@644 $generated@@45))
 :pattern ( ($generated@@155 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@139) ($generated@@155 $generated@@645 $generated@@48))
 :pattern ( ($generated@@155 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 (T@U) Bool)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@647) $generated@@143) (= (type $generated@@649) $generated@@143)) (= (type $generated@@648) $generated@@143)) (= (type $generated@@650) ($generated@@181 $generated@@81 $generated@@4))) (= (type $generated@@651) $generated@@81)) (= (type $generated@@652) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@654) $generated@@143)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@656  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (= $generated@@646 ($generated@@261 1)) (not ($generated@@291 $generated@@647)))) (=> (=> (= $generated@@646 ($generated@@261 1)) (not ($generated@@291 $generated@@647))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (= $generated@@646 ($generated@@261 2)) ($generated@@291 $generated@@647)))))))
(let (($generated@@657  (=> (and (and (not (= $generated@@646 ($generated@@261 2))) (= $generated@@648 ($generated@@263 $generated@@172))) (and (= $generated@@647 $generated@@648) (= (ControlFlow 0 5) 2))) $generated@@656)))
(let (($generated@@658  (=> (and (and (= $generated@@646 ($generated@@261 2)) (= $generated@@649 ($generated@@263 ($generated@@137 ($generated@@263 ($generated@@267 ($generated@@302 $generated@@139) ($generated@@312 ($generated@@279 90)))))))) (and (= $generated@@647 $generated@@649) (= (ControlFlow 0 4) 2))) $generated@@656)))
(let (($generated@@659  (=> (= $generated@@650 ($generated@@180 $generated@@651 $generated@@652 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@658) (=> (= (ControlFlow 0 6) 5) $generated@@657)))))
(let (($generated@@660  (=> (and ($generated@@244 $generated@@652) ($generated@@653 $generated@@652)) (=> (and (and ($generated@@155 $generated@@654 $generated@@243) ($generated@@78 $generated@@654 $generated@@243 $generated@@652)) (and (= 2 $generated@@655) (= (ControlFlow 0 7) 6))) $generated@@659))))
$generated@@660))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@T T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@149 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@149)) 14)) (forall (($generated@@150 T@T) ) (! (= ($generated@@148 ($generated@@142 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@150))
))) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (! (let (($generated@@153 ($generated@@148 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152))
))) (= ($generated@@1 $generated@@147) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@141 $generated@@154)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@U) ) (! (= (type ($generated@@146 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@146 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= (type $generated@@157) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@144 $generated@@157))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@157 $generated@@158))) ($generated@@145 ($generated@@141 $generated@@157)))))
 :pattern ( ($generated@@140 $generated@@157 $generated@@158) ($generated@@141 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@79 0)))
)))
(assert (= (type $generated@@164) $generated@@68))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@147) (or ($generated@@163 $generated@@165) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@165 $generated@@164)))) true)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@147)) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@143)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@143)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@147) (= (type $generated@@179) $generated@@147)) true) (= ($generated@@173 $generated@@178 $generated@@179)  (and (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)) (= ($generated@@175 $generated@@178) ($generated@@175 $generated@@179)))))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@72)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@147)))
(assert (= ($generated@@180 $generated@@181) $generated@@65))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@68)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@187) $generated@@68)) ($generated@@159 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@159 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@81 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@81) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@81)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@244 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@147) (or ($generated@@163 ($generated@@244 $generated@@248)) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@248 $generated@@164)))) (= ($generated@@162 ($generated@@244 $generated@@248)) ($generated@@0 ($generated@@244 ($generated@@11 ($generated@@245 ($generated@@244 $generated@@248)))))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@244 $generated@@248)))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@147)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) $generated@@143)) (= ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254)))
)))
(assert ($generated@@159 $generated@@181 $generated@@164))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@257 $generated@@258)) ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
 :pattern ( ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) (= (type $generated@@260) $generated@@147)) (= ($generated@@173 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@173 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) (= (type $generated@@263) $generated@@147)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@143) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@143) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@244 $generated@@276) $generated@@276)
 :pattern ( ($generated@@244 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@147) (= (type $generated@@279) $generated@@147)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@261 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@68)) (= (type $generated@@283) $generated@@143)) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@285)) (= ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@147) (= ($generated@@166 $generated@@286) (= ($generated@@180 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@147) (= ($generated@@245 $generated@@287) (= ($generated@@180 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@245 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@147) (= ($generated@@277 $generated@@288) (= ($generated@@180 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@148 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@142 $generated@@292)) (= (type $generated@@291) ($generated@@142 $generated@@292))) (= ($generated@@289 $generated@@290 $generated@@291)  (and (= ($generated@@144 $generated@@290) ($generated@@144 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@144 $generated@@290))) (= ($generated@@140 $generated@@290 $generated@@293) ($generated@@140 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@140 $generated@@290 $generated@@293))
 :pattern ( ($generated@@140 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@147) ($generated@@166 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) (= $generated@@294 ($generated@@249 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@166 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@142 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@144 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@147) ($generated@@277 $generated@@300)) (= $generated@@300 $generated@@181))
 :pattern ( ($generated@@277 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@147) ($generated@@245 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) ($generated@@142 $generated@@143)) (= $generated@@301 ($generated@@141 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@245 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@143)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@78 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@143)) (= (type $generated@@311) $generated@@68)) ($generated@@136 $generated@@308 $generated@@309)) ($generated@@280 $generated@@310 $generated@@311 $generated@@308)) ($generated@@280 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@136 $generated@@308 $generated@@309) ($generated@@280 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@315) $generated@@68)) ($generated@@136 $generated@@312 $generated@@313)) ($generated@@78 $generated@@314 $generated@@315 $generated@@312)) ($generated@@78 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@136 $generated@@312 $generated@@313) ($generated@@78 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 18)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@80 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@83 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@80 $generated@@359 $generated@@2)) (= ($generated@@184 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@85 $generated@@358 $generated@@360))) (<= ($generated ($generated@@85 $generated@@358 $generated@@360)) ($generated@@316 $generated@@358))))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@184 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@143) ($generated@@250 $generated@@361 $generated@@164)) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@361)) $generated@@361) ($generated@@159 ($generated@@146 $generated@@147 $generated@@361) $generated@@164)))
 :pattern ( ($generated@@250 $generated@@361 $generated@@164))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@142 $generated@@143))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@147) (= (type $generated@@365) $generated@@147)) (and ($generated@@245 $generated@@364) ($generated@@245 $generated@@365))) (= ($generated@@261 $generated@@364 $generated@@365) ($generated@@289 ($generated@@362 $generated@@364) ($generated@@362 $generated@@365))))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@364))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@344 (type $generated@@377))))
(let (($generated@@379 ($generated@@343 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@342 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@341 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@340 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@344 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@250 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@143) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@280 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@143) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@280 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@317 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@326 (type $generated@@404))))
(let (($generated@@406 ($generated@@325 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@408) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@344 (type $generated@@412))))
(let (($generated@@414 ($generated@@343 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@416) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@343 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@342 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@142 $generated@@143)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@430)) (= ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430) ($generated@@78 $generated@@429 ($generated@@427 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))) (and ($generated@@280 ($generated@@85 ($generated@@402 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@280 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))) (and ($generated@@280 ($generated@@85 ($generated@@410 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@280 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@148 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@142 $generated@@449)) (= (type $generated@@448) ($generated@@142 $generated@@449))) ($generated@@289 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@289 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@147) ($generated@@159 $generated@@450 $generated@@164)) (or ($generated@@245 $generated@@450) ($generated@@277 $generated@@450)))
 :pattern ( ($generated@@277 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
 :pattern ( ($generated@@245 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@451 $generated@@453))) (and ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))) ($generated@@136 $generated@@451 $generated@@453))
 :pattern ( ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@344 (type $generated@@456))))
(let (($generated@@458 ($generated@@343 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@342 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@341 $generated@@458 $generated@@457)) (= ($generated@@340 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@340 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@381 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@381 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@344 (type $generated@@462))))
(let (($generated@@464 ($generated@@343 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@342 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@341 $generated@@464 $generated@@463)) (= ($generated@@409 $generated@@462) ($generated@@454 $generated@@143))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@326 (type $generated@@465))))
(let (($generated@@467 ($generated@@325 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@324 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@323 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@143) (= (type $generated@@469) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@465) ($generated@@303 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@401 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@344 (type $generated@@470))))
(let (($generated@@472 ($generated@@343 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@342 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@341 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@143) (= (type $generated@@474) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@470) ($generated@@303 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@409 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@143) ($generated@@250 $generated@@475 $generated@@46)) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@146 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@143) ($generated@@250 $generated@@476 $generated@@47)) (and (= ($generated@@303 ($generated@@146 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@146 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@143) ($generated@@250 $generated@@477 $generated@@44)) (and (= ($generated@@303 ($generated@@146 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@146 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@143) ($generated@@250 $generated@@479 $generated@@45)) (and (= ($generated@@303 ($generated@@146 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@146 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@68) (= ($generated@@250 ($generated@@303 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@250 ($generated@@303 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@83 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@80 $generated@@483 $generated@@2)) (<= 0 ($generated@@316 $generated@@482))))
 :pattern ( ($generated@@316 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@148 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@142 $generated@@485)) (<= 0 ($generated@@144 $generated@@484))))
 :pattern ( ($generated@@144 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@431 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@439 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@439 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@439 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@439 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@143) (= (type $generated@@507) $generated@@143)) (= ($generated@@180 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@167 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@167 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@167 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@167 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@143) (= (type $generated@@517) $generated@@143)) (= ($generated@@174 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@143) (= (type $generated@@519) $generated@@143)) (= ($generated@@175 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@142 $generated@@143)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@144 $generated@@520))) ($generated@@280 ($generated@@140 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@140 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@79 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@79 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@264 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@264 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@269 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@269 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@183 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@183 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@427 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@427 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@427 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@427 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@142 $generated@@143)) (= ($generated@@180 ($generated@@141 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@141 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) ($generated@@142 $generated@@143)) (= ($generated@@362 ($generated@@141 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@141 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@146 $generated@@545 ($generated@@303 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@303 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))) (and ($generated@@250 ($generated@@85 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@250 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))) (and ($generated@@250 ($generated@@85 ($generated@@410 $generated@@550) $generated@@553) $generated@@552) ($generated@@250 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@143)) (< ($generated@@554 $generated@@555) ($generated@@145 ($generated@@249 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@249 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@143)) (< ($generated@@554 $generated@@558) ($generated@@145 ($generated@@249 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@249 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561))) (and (= ($generated@@303 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559)) $generated@@559) ($generated@@159 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559) ($generated@@431 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@143) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564))) (and (= ($generated@@303 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562)) $generated@@562) ($generated@@159 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562) ($generated@@439 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@143)) ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566))) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@567)) $generated@@567) ($generated@@159 ($generated@@146 $generated@@147 $generated@@567) ($generated@@167 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@142 $generated@@143)) (< ($generated@@568 $generated@@569) ($generated@@145 ($generated@@141 $generated@@569))))
 :pattern ( ($generated@@141 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@85 ($generated@@454 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@85 ($generated@@454 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@73)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@167 $generated@@574 $generated@@575)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@147) (= ($generated@@554 ($generated@@303 $generated@@576)) ($generated@@145 $generated@@576)))
 :pattern ( ($generated@@554 ($generated@@303 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) ($generated@@250 $generated@@577 ($generated@@79 0))) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@577)) $generated@@577) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@577) ($generated@@79 0))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@79 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@143) (= (type $generated@@579) $generated@@68)) ($generated@@250 $generated@@578 ($generated@@264 $generated@@579))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578)) $generated@@578) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578) ($generated@@264 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@578 ($generated@@264 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@143) (= (type $generated@@581) $generated@@68)) ($generated@@250 $generated@@580 ($generated@@269 $generated@@581))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580) ($generated@@269 $generated@@581))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@269 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@143) (= (type $generated@@583) $generated@@68)) ($generated@@250 $generated@@582 ($generated@@183 $generated@@583))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582)) $generated@@582) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582) ($generated@@183 $generated@@583))))
 :pattern ( ($generated@@250 $generated@@582 ($generated@@183 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@143) (= (type $generated@@585) $generated@@68)) ($generated@@250 $generated@@584 ($generated@@427 $generated@@585))) (and (= ($generated@@303 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584)) $generated@@584) ($generated@@159 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584) ($generated@@427 $generated@@585))))
 :pattern ( ($generated@@250 $generated@@584 ($generated@@427 $generated@@585)))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@147) (or ($generated@@163 $generated@@586) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@586 $generated@@164)))) (= ($generated@@162 $generated@@586) ($generated@@245 $generated@@586)))
 :pattern ( ($generated@@162 $generated@@586))
))))
(assert (= ($generated@@76 $generated@@164) $generated@@64))
(assert (= ($generated@@572 $generated@@164) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@280 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589))
)))
(assert (= $generated@@181 ($generated@@244 $generated@@181)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) ($generated@@142 $generated@@143)) (= ($generated@@159 ($generated@@141 $generated@@591) $generated@@164) ($generated@@159 $generated@@591 ($generated@@427 $generated@@45))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@591) $generated@@164))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@593) (and ($generated@@245 $generated@@592) ($generated@@78 $generated@@592 $generated@@164 $generated@@593)))) ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
 :pattern ( ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@147) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@596) (and ($generated@@166 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@68) ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@147) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@600) (and ($generated@@166 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@68) ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@143) (= (type $generated@@603) $generated@@143)) (= ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)) ($generated@@244 ($generated@@249 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))) ($generated@@244 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) ($generated@@142 $generated@@143)) (= ($generated@@141 ($generated@@244 $generated@@605)) ($generated@@244 ($generated@@141 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@244 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@303 ($generated@@244 $generated@@606)) ($generated@@244 ($generated@@303 $generated@@606)))
 :pattern ( ($generated@@303 ($generated@@244 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@148 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@142 $generated@@608)) (= ($generated@@144 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@144 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@316 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@478)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@143)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@142 $generated@@143)) (= (type $generated@@624) $generated@@68)) (= ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@144 $generated@@623))) ($generated@@250 ($generated@@140 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@140 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@144 $generated@@626))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))) ($generated@@568 $generated@@626))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630))) (and (and ($generated@@159 ($generated@@322 $generated@@628) ($generated@@264 $generated@@629)) ($generated@@159 ($generated@@370 $generated@@628) ($generated@@264 $generated@@630))) ($generated@@159 ($generated@@401 $generated@@628) ($generated@@264 ($generated@@167 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633))) (and (and ($generated@@159 ($generated@@340 $generated@@631) ($generated@@269 $generated@@632)) ($generated@@159 ($generated@@381 $generated@@631) ($generated@@269 $generated@@633))) ($generated@@159 ($generated@@409 $generated@@631) ($generated@@269 ($generated@@167 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@159 $generated@@634 $generated@@46))
 :pattern ( ($generated@@159 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@159 $generated@@635 $generated@@47))
 :pattern ( ($generated@@159 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@159 $generated@@636 $generated@@44))
 :pattern ( ($generated@@159 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@478) ($generated@@159 $generated@@637 $generated@@45))
 :pattern ( ($generated@@159 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@143) ($generated@@159 $generated@@638 $generated@@48))
 :pattern ( ($generated@@159 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@639) ($generated@@190 $generated@@81 $generated@@4)) (= (type $generated@@640) $generated@@81)) (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@643) $generated@@147)) (= (type $generated@@645) $generated@@147)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@648) $generated@@147)) (= (type $generated@@650) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@651  (=> (and (= $generated@@639 ($generated@@189 $generated@@640 $generated@@641 $generated@@60 false)) (= $generated@@642 ($generated@@274 0))) (=> (and (and (and ($generated@@159 $generated@@643 $generated@@164) ($generated@@78 $generated@@643 $generated@@164 $generated@@641)) (= $generated@@644 ($generated@@274 1))) (and (and ($generated@@159 $generated@@645 $generated@@164) ($generated@@78 $generated@@645 $generated@@164 $generated@@641)) (and ($generated@@257 $generated@@646) ($generated@@647 $generated@@646)))) (=> (and (and (and (and ($generated@@159 $generated@@648 $generated@@164) ($generated@@78 $generated@@648 $generated@@164 $generated@@646)) (=> (= $generated@@644 ($generated@@274 1)) (not ($generated@@245 $generated@@648)))) (and (=> (= $generated@@644 ($generated@@274 2)) ($generated@@245 $generated@@648)) (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@81) (=> (and (not (= $generated@@652 $generated@@640)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@641 $generated@@652) $generated@@60))) (= ($generated@@85 $generated@@646 $generated@@652) ($generated@@85 $generated@@641 $generated@@652))))
 :pattern ( ($generated@@85 $generated@@646 $generated@@652))
)))) (and (and ($generated@@136 $generated@@641 $generated@@646) ($generated@@78 $generated@@648 $generated@@164 $generated@@646)) (and ($generated@@163 $generated@@648) ($generated@@163 $generated@@648)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@162 $generated@@648))) (=> (not ($generated@@162 $generated@@648)) (=> (and (= $generated@@649 ($generated@@274 42)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@649 ($generated@@274 42))))))))))
(let (($generated@@653  (=> (and ($generated@@257 $generated@@641) ($generated@@647 $generated@@641)) (=> (and (and (and ($generated@@159 $generated@@650 $generated@@164) ($generated@@78 $generated@@650 $generated@@164 $generated@@641)) true) (and (= 3 $generated@@161) (= (ControlFlow 0 4) 2))) $generated@@651))))
$generated@@653)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@T T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@149 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@149)) 14)) (forall (($generated@@150 T@T) ) (! (= ($generated@@148 ($generated@@142 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@150))
))) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (! (let (($generated@@153 ($generated@@148 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152))
))) (= ($generated@@1 $generated@@147) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@141 $generated@@154)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@U) ) (! (= (type ($generated@@146 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@146 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= (type $generated@@157) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@144 $generated@@157))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@157 $generated@@158))) ($generated@@145 ($generated@@141 $generated@@157)))))
 :pattern ( ($generated@@140 $generated@@157 $generated@@158) ($generated@@141 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@79 0)))
)))
(assert (= (type $generated@@164) $generated@@68))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@147) (or ($generated@@163 $generated@@165) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@165 $generated@@164)))) true)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@147)) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@143)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@143)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@147) (= (type $generated@@179) $generated@@147)) true) (= ($generated@@173 $generated@@178 $generated@@179)  (and (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)) (= ($generated@@175 $generated@@178) ($generated@@175 $generated@@179)))))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@72)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@147)))
(assert (= ($generated@@180 $generated@@181) $generated@@65))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@68)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@187) $generated@@68)) ($generated@@159 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@159 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@81 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@81) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@81)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@244 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@147) (or ($generated@@163 ($generated@@244 $generated@@248)) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@248 $generated@@164)))) (= ($generated@@162 ($generated@@244 $generated@@248)) ($generated@@0 ($generated@@244 ($generated@@11 ($generated@@245 ($generated@@244 $generated@@248)))))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@244 $generated@@248)))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@147)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) $generated@@143)) (= ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254)))
)))
(assert ($generated@@159 $generated@@181 $generated@@164))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@257 $generated@@258)) ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
 :pattern ( ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) (= (type $generated@@260) $generated@@147)) (= ($generated@@173 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@173 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) (= (type $generated@@263) $generated@@147)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@143) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@143) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@244 $generated@@276) $generated@@276)
 :pattern ( ($generated@@244 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@147) (= (type $generated@@279) $generated@@147)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@261 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@68)) (= (type $generated@@283) $generated@@143)) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@285)) (= ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@147) (= ($generated@@166 $generated@@286) (= ($generated@@180 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@147) (= ($generated@@245 $generated@@287) (= ($generated@@180 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@245 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@147) (= ($generated@@277 $generated@@288) (= ($generated@@180 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@148 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@142 $generated@@292)) (= (type $generated@@291) ($generated@@142 $generated@@292))) (= ($generated@@289 $generated@@290 $generated@@291)  (and (= ($generated@@144 $generated@@290) ($generated@@144 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@144 $generated@@290))) (= ($generated@@140 $generated@@290 $generated@@293) ($generated@@140 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@140 $generated@@290 $generated@@293))
 :pattern ( ($generated@@140 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@147) ($generated@@166 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) (= $generated@@294 ($generated@@249 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@166 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@142 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@144 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@147) ($generated@@277 $generated@@300)) (= $generated@@300 $generated@@181))
 :pattern ( ($generated@@277 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@147) ($generated@@245 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) ($generated@@142 $generated@@143)) (= $generated@@301 ($generated@@141 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@245 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@143)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@78 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@143)) (= (type $generated@@311) $generated@@68)) ($generated@@136 $generated@@308 $generated@@309)) ($generated@@280 $generated@@310 $generated@@311 $generated@@308)) ($generated@@280 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@136 $generated@@308 $generated@@309) ($generated@@280 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@315) $generated@@68)) ($generated@@136 $generated@@312 $generated@@313)) ($generated@@78 $generated@@314 $generated@@315 $generated@@312)) ($generated@@78 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@136 $generated@@312 $generated@@313) ($generated@@78 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 18)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@80 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@83 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@80 $generated@@359 $generated@@2)) (= ($generated@@184 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@85 $generated@@358 $generated@@360))) (<= ($generated ($generated@@85 $generated@@358 $generated@@360)) ($generated@@316 $generated@@358))))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@184 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@143) ($generated@@250 $generated@@361 $generated@@164)) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@361)) $generated@@361) ($generated@@159 ($generated@@146 $generated@@147 $generated@@361) $generated@@164)))
 :pattern ( ($generated@@250 $generated@@361 $generated@@164))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@142 $generated@@143))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@147) (= (type $generated@@365) $generated@@147)) (and ($generated@@245 $generated@@364) ($generated@@245 $generated@@365))) (= ($generated@@261 $generated@@364 $generated@@365) ($generated@@289 ($generated@@362 $generated@@364) ($generated@@362 $generated@@365))))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@364))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@344 (type $generated@@377))))
(let (($generated@@379 ($generated@@343 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@342 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@341 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@340 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@344 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@250 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@143) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@280 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@143) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@280 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@317 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@326 (type $generated@@404))))
(let (($generated@@406 ($generated@@325 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@408) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@344 (type $generated@@412))))
(let (($generated@@414 ($generated@@343 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@416) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@343 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@342 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@142 $generated@@143)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@430)) (= ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430) ($generated@@78 $generated@@429 ($generated@@427 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))) (and ($generated@@280 ($generated@@85 ($generated@@402 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@280 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))) (and ($generated@@280 ($generated@@85 ($generated@@410 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@280 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@148 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@142 $generated@@449)) (= (type $generated@@448) ($generated@@142 $generated@@449))) ($generated@@289 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@289 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@147) ($generated@@159 $generated@@450 $generated@@164)) (or ($generated@@245 $generated@@450) ($generated@@277 $generated@@450)))
 :pattern ( ($generated@@277 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
 :pattern ( ($generated@@245 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@451 $generated@@453))) (and ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))) ($generated@@136 $generated@@451 $generated@@453))
 :pattern ( ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@344 (type $generated@@456))))
(let (($generated@@458 ($generated@@343 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@342 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@341 $generated@@458 $generated@@457)) (= ($generated@@340 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@340 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@381 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@381 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@344 (type $generated@@462))))
(let (($generated@@464 ($generated@@343 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@342 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@341 $generated@@464 $generated@@463)) (= ($generated@@409 $generated@@462) ($generated@@454 $generated@@143))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@326 (type $generated@@465))))
(let (($generated@@467 ($generated@@325 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@324 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@323 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@143) (= (type $generated@@469) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@465) ($generated@@303 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@401 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@344 (type $generated@@470))))
(let (($generated@@472 ($generated@@343 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@342 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@341 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@143) (= (type $generated@@474) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@470) ($generated@@303 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@409 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@143) ($generated@@250 $generated@@475 $generated@@46)) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@146 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@143) ($generated@@250 $generated@@476 $generated@@47)) (and (= ($generated@@303 ($generated@@146 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@146 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@143) ($generated@@250 $generated@@477 $generated@@44)) (and (= ($generated@@303 ($generated@@146 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@146 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@143) ($generated@@250 $generated@@479 $generated@@45)) (and (= ($generated@@303 ($generated@@146 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@146 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@68) (= ($generated@@250 ($generated@@303 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@250 ($generated@@303 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@83 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@80 $generated@@483 $generated@@2)) (<= 0 ($generated@@316 $generated@@482))))
 :pattern ( ($generated@@316 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@148 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@142 $generated@@485)) (<= 0 ($generated@@144 $generated@@484))))
 :pattern ( ($generated@@144 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@431 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@439 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@439 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@439 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@439 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@143) (= (type $generated@@507) $generated@@143)) (= ($generated@@180 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@167 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@167 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@167 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@167 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@143) (= (type $generated@@517) $generated@@143)) (= ($generated@@174 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@143) (= (type $generated@@519) $generated@@143)) (= ($generated@@175 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@142 $generated@@143)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@144 $generated@@520))) ($generated@@280 ($generated@@140 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@140 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@79 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@79 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@264 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@264 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@269 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@269 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@183 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@183 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@427 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@427 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@427 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@427 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@142 $generated@@143)) (= ($generated@@180 ($generated@@141 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@141 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) ($generated@@142 $generated@@143)) (= ($generated@@362 ($generated@@141 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@141 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@146 $generated@@545 ($generated@@303 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@303 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))) (and ($generated@@250 ($generated@@85 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@250 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))) (and ($generated@@250 ($generated@@85 ($generated@@410 $generated@@550) $generated@@553) $generated@@552) ($generated@@250 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@143)) (< ($generated@@554 $generated@@555) ($generated@@145 ($generated@@249 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@249 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@143)) (< ($generated@@554 $generated@@558) ($generated@@145 ($generated@@249 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@249 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561))) (and (= ($generated@@303 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559)) $generated@@559) ($generated@@159 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559) ($generated@@431 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@143) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564))) (and (= ($generated@@303 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562)) $generated@@562) ($generated@@159 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562) ($generated@@439 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@143)) ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566))) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@567)) $generated@@567) ($generated@@159 ($generated@@146 $generated@@147 $generated@@567) ($generated@@167 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@142 $generated@@143)) (< ($generated@@568 $generated@@569) ($generated@@145 ($generated@@141 $generated@@569))))
 :pattern ( ($generated@@141 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@85 ($generated@@454 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@85 ($generated@@454 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@73)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@167 $generated@@574 $generated@@575)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@147) (= ($generated@@554 ($generated@@303 $generated@@576)) ($generated@@145 $generated@@576)))
 :pattern ( ($generated@@554 ($generated@@303 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) ($generated@@250 $generated@@577 ($generated@@79 0))) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@577)) $generated@@577) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@577) ($generated@@79 0))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@79 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@143) (= (type $generated@@579) $generated@@68)) ($generated@@250 $generated@@578 ($generated@@264 $generated@@579))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578)) $generated@@578) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578) ($generated@@264 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@578 ($generated@@264 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@143) (= (type $generated@@581) $generated@@68)) ($generated@@250 $generated@@580 ($generated@@269 $generated@@581))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580) ($generated@@269 $generated@@581))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@269 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@143) (= (type $generated@@583) $generated@@68)) ($generated@@250 $generated@@582 ($generated@@183 $generated@@583))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582)) $generated@@582) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582) ($generated@@183 $generated@@583))))
 :pattern ( ($generated@@250 $generated@@582 ($generated@@183 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@143) (= (type $generated@@585) $generated@@68)) ($generated@@250 $generated@@584 ($generated@@427 $generated@@585))) (and (= ($generated@@303 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584)) $generated@@584) ($generated@@159 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584) ($generated@@427 $generated@@585))))
 :pattern ( ($generated@@250 $generated@@584 ($generated@@427 $generated@@585)))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@147) (or ($generated@@163 $generated@@586) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@586 $generated@@164)))) (= ($generated@@162 $generated@@586) ($generated@@245 $generated@@586)))
 :pattern ( ($generated@@162 $generated@@586))
))))
(assert (= ($generated@@76 $generated@@164) $generated@@64))
(assert (= ($generated@@572 $generated@@164) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@280 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589))
)))
(assert (= $generated@@181 ($generated@@244 $generated@@181)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) ($generated@@142 $generated@@143)) (= ($generated@@159 ($generated@@141 $generated@@591) $generated@@164) ($generated@@159 $generated@@591 ($generated@@427 $generated@@45))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@591) $generated@@164))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@593) (and ($generated@@245 $generated@@592) ($generated@@78 $generated@@592 $generated@@164 $generated@@593)))) ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
 :pattern ( ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@147) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@596) (and ($generated@@166 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@68) ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@147) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@600) (and ($generated@@166 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@68) ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@143) (= (type $generated@@603) $generated@@143)) (= ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)) ($generated@@244 ($generated@@249 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))) ($generated@@244 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) ($generated@@142 $generated@@143)) (= ($generated@@141 ($generated@@244 $generated@@605)) ($generated@@244 ($generated@@141 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@244 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@303 ($generated@@244 $generated@@606)) ($generated@@244 ($generated@@303 $generated@@606)))
 :pattern ( ($generated@@303 ($generated@@244 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@148 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@142 $generated@@608)) (= ($generated@@144 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@144 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@316 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@478)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@143)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@142 $generated@@143)) (= (type $generated@@624) $generated@@68)) (= ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@144 $generated@@623))) ($generated@@250 ($generated@@140 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@140 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@144 $generated@@626))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))) ($generated@@568 $generated@@626))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630))) (and (and ($generated@@159 ($generated@@322 $generated@@628) ($generated@@264 $generated@@629)) ($generated@@159 ($generated@@370 $generated@@628) ($generated@@264 $generated@@630))) ($generated@@159 ($generated@@401 $generated@@628) ($generated@@264 ($generated@@167 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633))) (and (and ($generated@@159 ($generated@@340 $generated@@631) ($generated@@269 $generated@@632)) ($generated@@159 ($generated@@381 $generated@@631) ($generated@@269 $generated@@633))) ($generated@@159 ($generated@@409 $generated@@631) ($generated@@269 ($generated@@167 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@159 $generated@@634 $generated@@46))
 :pattern ( ($generated@@159 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@159 $generated@@635 $generated@@47))
 :pattern ( ($generated@@159 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@159 $generated@@636 $generated@@44))
 :pattern ( ($generated@@159 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@478) ($generated@@159 $generated@@637 $generated@@45))
 :pattern ( ($generated@@159 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@143) ($generated@@159 $generated@@638 $generated@@48))
 :pattern ( ($generated@@159 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@639) ($generated@@190 $generated@@81 $generated@@4)) (= (type $generated@@640) $generated@@81)) (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@642) $generated@@147)) (= (type $generated@@644) $generated@@147)) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@147)) (= (type $generated@@648) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@649  (=> (= $generated@@639 ($generated@@189 $generated@@640 $generated@@641 $generated@@60 false)) (=> (and (and (and (and (and ($generated@@159 $generated@@642 $generated@@164) ($generated@@78 $generated@@642 $generated@@164 $generated@@641)) (= $generated@@643 ($generated@@274 0))) (and ($generated@@159 $generated@@644 $generated@@164) ($generated@@78 $generated@@644 $generated@@164 $generated@@641))) (and (and ($generated@@257 $generated@@645) ($generated@@646 $generated@@645)) (and ($generated@@159 $generated@@647 $generated@@164) ($generated@@78 $generated@@647 $generated@@164 $generated@@645)))) (and (and (and (=> (= $generated@@643 ($generated@@274 1)) (not ($generated@@245 $generated@@647))) (=> (= $generated@@643 ($generated@@274 2)) ($generated@@245 $generated@@647))) (and (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@81) (=> (and (not (= $generated@@650 $generated@@640)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@641 $generated@@650) $generated@@60))) (= ($generated@@85 $generated@@645 $generated@@650) ($generated@@85 $generated@@641 $generated@@650))))
 :pattern ( ($generated@@85 $generated@@645 $generated@@650))
)) ($generated@@136 $generated@@641 $generated@@645))) (and (and ($generated@@78 $generated@@647 $generated@@164 $generated@@645) ($generated@@163 $generated@@647)) (and ($generated@@163 $generated@@647) (= (ControlFlow 0 2) (- 0 1)))))) (not ($generated@@162 $generated@@647))))))
(let (($generated@@651  (=> (and ($generated@@257 $generated@@641) ($generated@@646 $generated@@641)) (=> (and (and (and ($generated@@159 $generated@@648 $generated@@164) ($generated@@78 $generated@@648 $generated@@164 $generated@@641)) true) (and (= 3 $generated@@161) (= (ControlFlow 0 3) 2))) $generated@@649))))
$generated@@651)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@T T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@149 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@149)) 14)) (forall (($generated@@150 T@T) ) (! (= ($generated@@148 ($generated@@142 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@150))
))) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (! (let (($generated@@153 ($generated@@148 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152))
))) (= ($generated@@1 $generated@@147) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@141 $generated@@154)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@U) ) (! (= (type ($generated@@146 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@146 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= (type $generated@@157) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@144 $generated@@157))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@157 $generated@@158))) ($generated@@145 ($generated@@141 $generated@@157)))))
 :pattern ( ($generated@@140 $generated@@157 $generated@@158) ($generated@@141 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@79 0)))
)))
(assert (= (type $generated@@164) $generated@@68))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@147) (or ($generated@@163 $generated@@165) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@165 $generated@@164)))) true)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@147)) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@143)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@143)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@147) (= (type $generated@@179) $generated@@147)) true) (= ($generated@@173 $generated@@178 $generated@@179)  (and (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)) (= ($generated@@175 $generated@@178) ($generated@@175 $generated@@179)))))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@72)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@147)))
(assert (= ($generated@@180 $generated@@181) $generated@@65))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@68)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@187) $generated@@68)) ($generated@@159 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@159 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@81 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@81) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@81)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@244 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@147) (or ($generated@@163 ($generated@@244 $generated@@248)) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@248 $generated@@164)))) (= ($generated@@162 ($generated@@244 $generated@@248)) ($generated@@0 ($generated@@244 ($generated@@11 ($generated@@245 ($generated@@244 $generated@@248)))))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@244 $generated@@248)))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@147)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) $generated@@143)) (= ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254)))
)))
(assert ($generated@@159 $generated@@181 $generated@@164))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@257 $generated@@258)) ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
 :pattern ( ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) (= (type $generated@@260) $generated@@147)) (= ($generated@@173 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@173 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) (= (type $generated@@263) $generated@@147)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@143) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@143) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@244 $generated@@276) $generated@@276)
 :pattern ( ($generated@@244 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@147) (= (type $generated@@279) $generated@@147)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@261 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@68)) (= (type $generated@@283) $generated@@143)) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@285)) (= ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@147) (= ($generated@@166 $generated@@286) (= ($generated@@180 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@147) (= ($generated@@245 $generated@@287) (= ($generated@@180 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@245 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@147) (= ($generated@@277 $generated@@288) (= ($generated@@180 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@148 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@142 $generated@@292)) (= (type $generated@@291) ($generated@@142 $generated@@292))) (= ($generated@@289 $generated@@290 $generated@@291)  (and (= ($generated@@144 $generated@@290) ($generated@@144 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@144 $generated@@290))) (= ($generated@@140 $generated@@290 $generated@@293) ($generated@@140 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@140 $generated@@290 $generated@@293))
 :pattern ( ($generated@@140 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@147) ($generated@@166 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) (= $generated@@294 ($generated@@249 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@166 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@142 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@144 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@147) ($generated@@277 $generated@@300)) (= $generated@@300 $generated@@181))
 :pattern ( ($generated@@277 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@147) ($generated@@245 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) ($generated@@142 $generated@@143)) (= $generated@@301 ($generated@@141 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@245 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@143)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@78 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@143)) (= (type $generated@@311) $generated@@68)) ($generated@@136 $generated@@308 $generated@@309)) ($generated@@280 $generated@@310 $generated@@311 $generated@@308)) ($generated@@280 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@136 $generated@@308 $generated@@309) ($generated@@280 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@315) $generated@@68)) ($generated@@136 $generated@@312 $generated@@313)) ($generated@@78 $generated@@314 $generated@@315 $generated@@312)) ($generated@@78 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@136 $generated@@312 $generated@@313) ($generated@@78 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 18)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@80 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@83 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@80 $generated@@359 $generated@@2)) (= ($generated@@184 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@85 $generated@@358 $generated@@360))) (<= ($generated ($generated@@85 $generated@@358 $generated@@360)) ($generated@@316 $generated@@358))))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@184 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@143) ($generated@@250 $generated@@361 $generated@@164)) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@361)) $generated@@361) ($generated@@159 ($generated@@146 $generated@@147 $generated@@361) $generated@@164)))
 :pattern ( ($generated@@250 $generated@@361 $generated@@164))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@142 $generated@@143))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@147) (= (type $generated@@365) $generated@@147)) (and ($generated@@245 $generated@@364) ($generated@@245 $generated@@365))) (= ($generated@@261 $generated@@364 $generated@@365) ($generated@@289 ($generated@@362 $generated@@364) ($generated@@362 $generated@@365))))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@364))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@344 (type $generated@@377))))
(let (($generated@@379 ($generated@@343 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@342 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@341 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@340 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@344 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@250 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@143) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@280 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@143) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@280 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@317 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@326 (type $generated@@404))))
(let (($generated@@406 ($generated@@325 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@408) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@344 (type $generated@@412))))
(let (($generated@@414 ($generated@@343 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@416) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@343 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@342 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@142 $generated@@143)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@430)) (= ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430) ($generated@@78 $generated@@429 ($generated@@427 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))) (and ($generated@@280 ($generated@@85 ($generated@@402 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@280 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))) (and ($generated@@280 ($generated@@85 ($generated@@410 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@280 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@148 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@142 $generated@@449)) (= (type $generated@@448) ($generated@@142 $generated@@449))) ($generated@@289 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@289 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@147) ($generated@@159 $generated@@450 $generated@@164)) (or ($generated@@245 $generated@@450) ($generated@@277 $generated@@450)))
 :pattern ( ($generated@@277 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
 :pattern ( ($generated@@245 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@451 $generated@@453))) (and ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))) ($generated@@136 $generated@@451 $generated@@453))
 :pattern ( ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@344 (type $generated@@456))))
(let (($generated@@458 ($generated@@343 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@342 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@341 $generated@@458 $generated@@457)) (= ($generated@@340 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@340 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@381 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@381 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@344 (type $generated@@462))))
(let (($generated@@464 ($generated@@343 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@342 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@341 $generated@@464 $generated@@463)) (= ($generated@@409 $generated@@462) ($generated@@454 $generated@@143))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@326 (type $generated@@465))))
(let (($generated@@467 ($generated@@325 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@324 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@323 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@143) (= (type $generated@@469) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@465) ($generated@@303 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@401 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@344 (type $generated@@470))))
(let (($generated@@472 ($generated@@343 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@342 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@341 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@143) (= (type $generated@@474) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@470) ($generated@@303 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@409 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@143) ($generated@@250 $generated@@475 $generated@@46)) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@146 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@143) ($generated@@250 $generated@@476 $generated@@47)) (and (= ($generated@@303 ($generated@@146 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@146 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@143) ($generated@@250 $generated@@477 $generated@@44)) (and (= ($generated@@303 ($generated@@146 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@146 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@143) ($generated@@250 $generated@@479 $generated@@45)) (and (= ($generated@@303 ($generated@@146 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@146 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@68) (= ($generated@@250 ($generated@@303 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@250 ($generated@@303 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@83 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@80 $generated@@483 $generated@@2)) (<= 0 ($generated@@316 $generated@@482))))
 :pattern ( ($generated@@316 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@148 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@142 $generated@@485)) (<= 0 ($generated@@144 $generated@@484))))
 :pattern ( ($generated@@144 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@431 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@439 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@439 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@439 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@439 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@143) (= (type $generated@@507) $generated@@143)) (= ($generated@@180 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@167 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@167 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@167 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@167 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@143) (= (type $generated@@517) $generated@@143)) (= ($generated@@174 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@143) (= (type $generated@@519) $generated@@143)) (= ($generated@@175 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@142 $generated@@143)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@144 $generated@@520))) ($generated@@280 ($generated@@140 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@140 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@79 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@79 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@264 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@264 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@269 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@269 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@183 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@183 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@427 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@427 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@427 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@427 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@142 $generated@@143)) (= ($generated@@180 ($generated@@141 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@141 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) ($generated@@142 $generated@@143)) (= ($generated@@362 ($generated@@141 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@141 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@146 $generated@@545 ($generated@@303 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@303 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))) (and ($generated@@250 ($generated@@85 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@250 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))) (and ($generated@@250 ($generated@@85 ($generated@@410 $generated@@550) $generated@@553) $generated@@552) ($generated@@250 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@143)) (< ($generated@@554 $generated@@555) ($generated@@145 ($generated@@249 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@249 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@143)) (< ($generated@@554 $generated@@558) ($generated@@145 ($generated@@249 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@249 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561))) (and (= ($generated@@303 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559)) $generated@@559) ($generated@@159 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559) ($generated@@431 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@143) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564))) (and (= ($generated@@303 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562)) $generated@@562) ($generated@@159 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562) ($generated@@439 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@143)) ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566))) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@567)) $generated@@567) ($generated@@159 ($generated@@146 $generated@@147 $generated@@567) ($generated@@167 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@142 $generated@@143)) (< ($generated@@568 $generated@@569) ($generated@@145 ($generated@@141 $generated@@569))))
 :pattern ( ($generated@@141 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@85 ($generated@@454 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@85 ($generated@@454 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@73)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@167 $generated@@574 $generated@@575)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@147) (= ($generated@@554 ($generated@@303 $generated@@576)) ($generated@@145 $generated@@576)))
 :pattern ( ($generated@@554 ($generated@@303 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) ($generated@@250 $generated@@577 ($generated@@79 0))) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@577)) $generated@@577) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@577) ($generated@@79 0))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@79 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@143) (= (type $generated@@579) $generated@@68)) ($generated@@250 $generated@@578 ($generated@@264 $generated@@579))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578)) $generated@@578) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578) ($generated@@264 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@578 ($generated@@264 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@143) (= (type $generated@@581) $generated@@68)) ($generated@@250 $generated@@580 ($generated@@269 $generated@@581))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580) ($generated@@269 $generated@@581))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@269 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@143) (= (type $generated@@583) $generated@@68)) ($generated@@250 $generated@@582 ($generated@@183 $generated@@583))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582)) $generated@@582) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582) ($generated@@183 $generated@@583))))
 :pattern ( ($generated@@250 $generated@@582 ($generated@@183 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@143) (= (type $generated@@585) $generated@@68)) ($generated@@250 $generated@@584 ($generated@@427 $generated@@585))) (and (= ($generated@@303 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584)) $generated@@584) ($generated@@159 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584) ($generated@@427 $generated@@585))))
 :pattern ( ($generated@@250 $generated@@584 ($generated@@427 $generated@@585)))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@147) (or ($generated@@163 $generated@@586) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@586 $generated@@164)))) (= ($generated@@162 $generated@@586) ($generated@@245 $generated@@586)))
 :pattern ( ($generated@@162 $generated@@586))
))))
(assert (= ($generated@@76 $generated@@164) $generated@@64))
(assert (= ($generated@@572 $generated@@164) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@280 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589))
)))
(assert (= $generated@@181 ($generated@@244 $generated@@181)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) ($generated@@142 $generated@@143)) (= ($generated@@159 ($generated@@141 $generated@@591) $generated@@164) ($generated@@159 $generated@@591 ($generated@@427 $generated@@45))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@591) $generated@@164))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@593) (and ($generated@@245 $generated@@592) ($generated@@78 $generated@@592 $generated@@164 $generated@@593)))) ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
 :pattern ( ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@147) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@596) (and ($generated@@166 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@68) ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@147) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@600) (and ($generated@@166 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@68) ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@143) (= (type $generated@@603) $generated@@143)) (= ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)) ($generated@@244 ($generated@@249 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))) ($generated@@244 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) ($generated@@142 $generated@@143)) (= ($generated@@141 ($generated@@244 $generated@@605)) ($generated@@244 ($generated@@141 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@244 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@303 ($generated@@244 $generated@@606)) ($generated@@244 ($generated@@303 $generated@@606)))
 :pattern ( ($generated@@303 ($generated@@244 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@148 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@142 $generated@@608)) (= ($generated@@144 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@144 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@316 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@478)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@143)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@142 $generated@@143)) (= (type $generated@@624) $generated@@68)) (= ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@144 $generated@@623))) ($generated@@250 ($generated@@140 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@140 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@144 $generated@@626))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))) ($generated@@568 $generated@@626))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630))) (and (and ($generated@@159 ($generated@@322 $generated@@628) ($generated@@264 $generated@@629)) ($generated@@159 ($generated@@370 $generated@@628) ($generated@@264 $generated@@630))) ($generated@@159 ($generated@@401 $generated@@628) ($generated@@264 ($generated@@167 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633))) (and (and ($generated@@159 ($generated@@340 $generated@@631) ($generated@@269 $generated@@632)) ($generated@@159 ($generated@@381 $generated@@631) ($generated@@269 $generated@@633))) ($generated@@159 ($generated@@409 $generated@@631) ($generated@@269 ($generated@@167 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@159 $generated@@634 $generated@@46))
 :pattern ( ($generated@@159 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@159 $generated@@635 $generated@@47))
 :pattern ( ($generated@@159 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@159 $generated@@636 $generated@@44))
 :pattern ( ($generated@@159 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@478) ($generated@@159 $generated@@637 $generated@@45))
 :pattern ( ($generated@@159 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@143) ($generated@@159 $generated@@638 $generated@@48))
 :pattern ( ($generated@@159 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@639) ($generated@@190 $generated@@81 $generated@@4)) (= (type $generated@@640) $generated@@81)) (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@642) $generated@@147)) (= (type $generated@@644) $generated@@147)) (= (type $generated@@645) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@147)) (= (type $generated@@648) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@649  (=> (= $generated@@639 ($generated@@189 $generated@@640 $generated@@641 $generated@@60 false)) (=> (and (and ($generated@@159 $generated@@642 $generated@@164) ($generated@@78 $generated@@642 $generated@@164 $generated@@641)) (= $generated@@643 ($generated@@274 2))) (=> (and (and (and (and ($generated@@159 $generated@@644 $generated@@164) ($generated@@78 $generated@@644 $generated@@164 $generated@@641)) (and ($generated@@257 $generated@@645) ($generated@@646 $generated@@645))) (and (and ($generated@@159 $generated@@647 $generated@@164) ($generated@@78 $generated@@647 $generated@@164 $generated@@645)) (=> (= $generated@@643 ($generated@@274 1)) (not ($generated@@245 $generated@@647))))) (and (and (and (=> (= $generated@@643 ($generated@@274 2)) ($generated@@245 $generated@@647)) (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@81) (=> (and (not (= $generated@@650 $generated@@640)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@641 $generated@@650) $generated@@60))) (= ($generated@@85 $generated@@645 $generated@@650) ($generated@@85 $generated@@641 $generated@@650))))
 :pattern ( ($generated@@85 $generated@@645 $generated@@650))
))) (and ($generated@@136 $generated@@641 $generated@@645) ($generated@@78 $generated@@647 $generated@@164 $generated@@645))) (and (and ($generated@@163 $generated@@647) ($generated@@163 $generated@@647)) (and (not ($generated@@162 $generated@@647)) (= (ControlFlow 0 2) (- 0 1)))))) ($generated@@0 ($generated@@244 ($generated@@11 false))))))))
(let (($generated@@651  (=> (and ($generated@@257 $generated@@641) ($generated@@646 $generated@@641)) (=> (and (and (and ($generated@@159 $generated@@648 $generated@@164) ($generated@@78 $generated@@648 $generated@@164 $generated@@641)) true) (and (= 3 $generated@@161) (= (ControlFlow 0 3) 2))) $generated@@649))))
$generated@@651)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@T T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@149 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@149)) 14)) (forall (($generated@@150 T@T) ) (! (= ($generated@@148 ($generated@@142 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@150))
))) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (! (let (($generated@@153 ($generated@@148 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152))
))) (= ($generated@@1 $generated@@147) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@141 $generated@@154)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@U) ) (! (= (type ($generated@@146 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@146 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= (type $generated@@157) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@144 $generated@@157))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@157 $generated@@158))) ($generated@@145 ($generated@@141 $generated@@157)))))
 :pattern ( ($generated@@140 $generated@@157 $generated@@158) ($generated@@141 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@79 0)))
)))
(assert (= (type $generated@@164) $generated@@68))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@147) (or ($generated@@163 $generated@@165) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@165 $generated@@164)))) true)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@147)) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@143)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@143)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@147) (= (type $generated@@179) $generated@@147)) true) (= ($generated@@173 $generated@@178 $generated@@179)  (and (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)) (= ($generated@@175 $generated@@178) ($generated@@175 $generated@@179)))))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@72)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@147)))
(assert (= ($generated@@180 $generated@@181) $generated@@65))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@68)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@187) $generated@@68)) ($generated@@159 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@159 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@81 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@81) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@81)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@244 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@147) (or ($generated@@163 ($generated@@244 $generated@@248)) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@248 $generated@@164)))) (= ($generated@@162 ($generated@@244 $generated@@248)) ($generated@@0 ($generated@@244 ($generated@@11 ($generated@@245 ($generated@@244 $generated@@248)))))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@244 $generated@@248)))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@147)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) $generated@@143)) (= ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254)))
)))
(assert ($generated@@159 $generated@@181 $generated@@164))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@257 $generated@@258)) ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
 :pattern ( ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) (= (type $generated@@260) $generated@@147)) (= ($generated@@173 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@173 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) (= (type $generated@@263) $generated@@147)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@143) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@143) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@244 $generated@@276) $generated@@276)
 :pattern ( ($generated@@244 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@147) (= (type $generated@@279) $generated@@147)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@261 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@68)) (= (type $generated@@283) $generated@@143)) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@285)) (= ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@147) (= ($generated@@166 $generated@@286) (= ($generated@@180 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@147) (= ($generated@@245 $generated@@287) (= ($generated@@180 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@245 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@147) (= ($generated@@277 $generated@@288) (= ($generated@@180 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@148 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@142 $generated@@292)) (= (type $generated@@291) ($generated@@142 $generated@@292))) (= ($generated@@289 $generated@@290 $generated@@291)  (and (= ($generated@@144 $generated@@290) ($generated@@144 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@144 $generated@@290))) (= ($generated@@140 $generated@@290 $generated@@293) ($generated@@140 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@140 $generated@@290 $generated@@293))
 :pattern ( ($generated@@140 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@147) ($generated@@166 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) (= $generated@@294 ($generated@@249 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@166 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@142 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@144 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@147) ($generated@@277 $generated@@300)) (= $generated@@300 $generated@@181))
 :pattern ( ($generated@@277 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@147) ($generated@@245 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) ($generated@@142 $generated@@143)) (= $generated@@301 ($generated@@141 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@245 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@143)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@78 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@143)) (= (type $generated@@311) $generated@@68)) ($generated@@136 $generated@@308 $generated@@309)) ($generated@@280 $generated@@310 $generated@@311 $generated@@308)) ($generated@@280 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@136 $generated@@308 $generated@@309) ($generated@@280 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@315) $generated@@68)) ($generated@@136 $generated@@312 $generated@@313)) ($generated@@78 $generated@@314 $generated@@315 $generated@@312)) ($generated@@78 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@136 $generated@@312 $generated@@313) ($generated@@78 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 18)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@80 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@83 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@80 $generated@@359 $generated@@2)) (= ($generated@@184 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@85 $generated@@358 $generated@@360))) (<= ($generated ($generated@@85 $generated@@358 $generated@@360)) ($generated@@316 $generated@@358))))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@184 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@143) ($generated@@250 $generated@@361 $generated@@164)) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@361)) $generated@@361) ($generated@@159 ($generated@@146 $generated@@147 $generated@@361) $generated@@164)))
 :pattern ( ($generated@@250 $generated@@361 $generated@@164))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@142 $generated@@143))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@147) (= (type $generated@@365) $generated@@147)) (and ($generated@@245 $generated@@364) ($generated@@245 $generated@@365))) (= ($generated@@261 $generated@@364 $generated@@365) ($generated@@289 ($generated@@362 $generated@@364) ($generated@@362 $generated@@365))))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@364))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@344 (type $generated@@377))))
(let (($generated@@379 ($generated@@343 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@342 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@341 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@340 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@344 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@250 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@143) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@280 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@143) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@280 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@317 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@326 (type $generated@@404))))
(let (($generated@@406 ($generated@@325 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@408) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@344 (type $generated@@412))))
(let (($generated@@414 ($generated@@343 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@416) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@343 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@342 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@142 $generated@@143)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@430)) (= ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430) ($generated@@78 $generated@@429 ($generated@@427 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))) (and ($generated@@280 ($generated@@85 ($generated@@402 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@280 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))) (and ($generated@@280 ($generated@@85 ($generated@@410 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@280 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@148 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@142 $generated@@449)) (= (type $generated@@448) ($generated@@142 $generated@@449))) ($generated@@289 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@289 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@147) ($generated@@159 $generated@@450 $generated@@164)) (or ($generated@@245 $generated@@450) ($generated@@277 $generated@@450)))
 :pattern ( ($generated@@277 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
 :pattern ( ($generated@@245 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@451 $generated@@453))) (and ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))) ($generated@@136 $generated@@451 $generated@@453))
 :pattern ( ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@344 (type $generated@@456))))
(let (($generated@@458 ($generated@@343 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@342 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@341 $generated@@458 $generated@@457)) (= ($generated@@340 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@340 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@381 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@381 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@344 (type $generated@@462))))
(let (($generated@@464 ($generated@@343 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@342 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@341 $generated@@464 $generated@@463)) (= ($generated@@409 $generated@@462) ($generated@@454 $generated@@143))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@326 (type $generated@@465))))
(let (($generated@@467 ($generated@@325 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@324 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@323 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@143) (= (type $generated@@469) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@465) ($generated@@303 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@401 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@344 (type $generated@@470))))
(let (($generated@@472 ($generated@@343 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@342 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@341 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@143) (= (type $generated@@474) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@470) ($generated@@303 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@409 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@143) ($generated@@250 $generated@@475 $generated@@46)) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@146 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@143) ($generated@@250 $generated@@476 $generated@@47)) (and (= ($generated@@303 ($generated@@146 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@146 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@143) ($generated@@250 $generated@@477 $generated@@44)) (and (= ($generated@@303 ($generated@@146 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@146 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@143) ($generated@@250 $generated@@479 $generated@@45)) (and (= ($generated@@303 ($generated@@146 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@146 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@68) (= ($generated@@250 ($generated@@303 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@250 ($generated@@303 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@83 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@80 $generated@@483 $generated@@2)) (<= 0 ($generated@@316 $generated@@482))))
 :pattern ( ($generated@@316 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@148 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@142 $generated@@485)) (<= 0 ($generated@@144 $generated@@484))))
 :pattern ( ($generated@@144 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@431 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@439 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@439 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@439 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@439 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@143) (= (type $generated@@507) $generated@@143)) (= ($generated@@180 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@167 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@167 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@167 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@167 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@143) (= (type $generated@@517) $generated@@143)) (= ($generated@@174 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@143) (= (type $generated@@519) $generated@@143)) (= ($generated@@175 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@142 $generated@@143)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@144 $generated@@520))) ($generated@@280 ($generated@@140 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@140 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@79 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@79 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@264 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@264 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@269 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@269 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@183 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@183 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@427 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@427 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@427 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@427 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@142 $generated@@143)) (= ($generated@@180 ($generated@@141 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@141 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) ($generated@@142 $generated@@143)) (= ($generated@@362 ($generated@@141 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@141 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@146 $generated@@545 ($generated@@303 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@303 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))) (and ($generated@@250 ($generated@@85 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@250 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))) (and ($generated@@250 ($generated@@85 ($generated@@410 $generated@@550) $generated@@553) $generated@@552) ($generated@@250 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@143)) (< ($generated@@554 $generated@@555) ($generated@@145 ($generated@@249 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@249 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@143)) (< ($generated@@554 $generated@@558) ($generated@@145 ($generated@@249 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@249 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561))) (and (= ($generated@@303 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559)) $generated@@559) ($generated@@159 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559) ($generated@@431 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@143) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564))) (and (= ($generated@@303 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562)) $generated@@562) ($generated@@159 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562) ($generated@@439 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@143)) ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566))) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@567)) $generated@@567) ($generated@@159 ($generated@@146 $generated@@147 $generated@@567) ($generated@@167 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@142 $generated@@143)) (< ($generated@@568 $generated@@569) ($generated@@145 ($generated@@141 $generated@@569))))
 :pattern ( ($generated@@141 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@85 ($generated@@454 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@85 ($generated@@454 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@73)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@167 $generated@@574 $generated@@575)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@147) (= ($generated@@554 ($generated@@303 $generated@@576)) ($generated@@145 $generated@@576)))
 :pattern ( ($generated@@554 ($generated@@303 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) ($generated@@250 $generated@@577 ($generated@@79 0))) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@577)) $generated@@577) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@577) ($generated@@79 0))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@79 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@143) (= (type $generated@@579) $generated@@68)) ($generated@@250 $generated@@578 ($generated@@264 $generated@@579))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578)) $generated@@578) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578) ($generated@@264 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@578 ($generated@@264 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@143) (= (type $generated@@581) $generated@@68)) ($generated@@250 $generated@@580 ($generated@@269 $generated@@581))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580) ($generated@@269 $generated@@581))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@269 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@143) (= (type $generated@@583) $generated@@68)) ($generated@@250 $generated@@582 ($generated@@183 $generated@@583))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582)) $generated@@582) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582) ($generated@@183 $generated@@583))))
 :pattern ( ($generated@@250 $generated@@582 ($generated@@183 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@143) (= (type $generated@@585) $generated@@68)) ($generated@@250 $generated@@584 ($generated@@427 $generated@@585))) (and (= ($generated@@303 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584)) $generated@@584) ($generated@@159 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584) ($generated@@427 $generated@@585))))
 :pattern ( ($generated@@250 $generated@@584 ($generated@@427 $generated@@585)))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@147) (or ($generated@@163 $generated@@586) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@586 $generated@@164)))) (= ($generated@@162 $generated@@586) ($generated@@245 $generated@@586)))
 :pattern ( ($generated@@162 $generated@@586))
))))
(assert (= ($generated@@76 $generated@@164) $generated@@64))
(assert (= ($generated@@572 $generated@@164) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@280 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589))
)))
(assert (= $generated@@181 ($generated@@244 $generated@@181)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) ($generated@@142 $generated@@143)) (= ($generated@@159 ($generated@@141 $generated@@591) $generated@@164) ($generated@@159 $generated@@591 ($generated@@427 $generated@@45))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@591) $generated@@164))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@593) (and ($generated@@245 $generated@@592) ($generated@@78 $generated@@592 $generated@@164 $generated@@593)))) ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
 :pattern ( ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@147) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@596) (and ($generated@@166 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@68) ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@147) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@600) (and ($generated@@166 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@68) ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@143) (= (type $generated@@603) $generated@@143)) (= ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)) ($generated@@244 ($generated@@249 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))) ($generated@@244 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) ($generated@@142 $generated@@143)) (= ($generated@@141 ($generated@@244 $generated@@605)) ($generated@@244 ($generated@@141 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@244 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@303 ($generated@@244 $generated@@606)) ($generated@@244 ($generated@@303 $generated@@606)))
 :pattern ( ($generated@@303 ($generated@@244 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@148 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@142 $generated@@608)) (= ($generated@@144 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@144 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@316 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@478)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@143)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@142 $generated@@143)) (= (type $generated@@624) $generated@@68)) (= ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@144 $generated@@623))) ($generated@@250 ($generated@@140 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@140 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@144 $generated@@626))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))) ($generated@@568 $generated@@626))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630))) (and (and ($generated@@159 ($generated@@322 $generated@@628) ($generated@@264 $generated@@629)) ($generated@@159 ($generated@@370 $generated@@628) ($generated@@264 $generated@@630))) ($generated@@159 ($generated@@401 $generated@@628) ($generated@@264 ($generated@@167 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633))) (and (and ($generated@@159 ($generated@@340 $generated@@631) ($generated@@269 $generated@@632)) ($generated@@159 ($generated@@381 $generated@@631) ($generated@@269 $generated@@633))) ($generated@@159 ($generated@@409 $generated@@631) ($generated@@269 ($generated@@167 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@159 $generated@@634 $generated@@46))
 :pattern ( ($generated@@159 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@159 $generated@@635 $generated@@47))
 :pattern ( ($generated@@159 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@159 $generated@@636 $generated@@44))
 :pattern ( ($generated@@159 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@478) ($generated@@159 $generated@@637 $generated@@45))
 :pattern ( ($generated@@159 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@143) ($generated@@159 $generated@@638 $generated@@48))
 :pattern ( ($generated@@159 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@639) ($generated@@190 $generated@@81 $generated@@4)) (= (type $generated@@640) $generated@@81)) (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@643) $generated@@147)) (= (type $generated@@645) $generated@@147)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@648) $generated@@147)) (= (type $generated@@650) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@651  (=> (and (= $generated@@639 ($generated@@189 $generated@@640 $generated@@641 $generated@@60 false)) (= $generated@@642 ($generated@@274 0))) (=> (and (and ($generated@@159 $generated@@643 $generated@@164) ($generated@@78 $generated@@643 $generated@@164 $generated@@641)) (= $generated@@644 ($generated@@274 0))) (=> (and (and (and (and ($generated@@159 $generated@@645 $generated@@164) ($generated@@78 $generated@@645 $generated@@164 $generated@@641)) (and ($generated@@257 $generated@@646) ($generated@@647 $generated@@646))) (and (and ($generated@@159 $generated@@648 $generated@@164) ($generated@@78 $generated@@648 $generated@@164 $generated@@646)) (and (=> (= $generated@@644 ($generated@@274 1)) (not ($generated@@245 $generated@@648))) (=> (= $generated@@644 ($generated@@274 2)) ($generated@@245 $generated@@648))))) (and (and (and (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@81) (=> (and (not (= $generated@@652 $generated@@640)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@641 $generated@@652) $generated@@60))) (= ($generated@@85 $generated@@646 $generated@@652) ($generated@@85 $generated@@641 $generated@@652))))
 :pattern ( ($generated@@85 $generated@@646 $generated@@652))
)) ($generated@@136 $generated@@641 $generated@@646)) (and ($generated@@78 $generated@@648 $generated@@164 $generated@@646) ($generated@@163 $generated@@648))) (and (and ($generated@@163 $generated@@648) (not ($generated@@162 $generated@@648))) (and (= $generated@@649 ($generated@@274 42)) (= (ControlFlow 0 2) (- 0 1)))))) (= $generated@@649 ($generated@@274 42)))))))
(let (($generated@@653  (=> (and ($generated@@257 $generated@@641) ($generated@@647 $generated@@641)) (=> (and (and (and ($generated@@159 $generated@@650 $generated@@164) ($generated@@78 $generated@@650 $generated@@164 $generated@@641)) true) (and (= 3 $generated@@161) (= (ControlFlow 0 3) 2))) $generated@@651))))
$generated@@653)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@T T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@149 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@149)) 14)) (forall (($generated@@150 T@T) ) (! (= ($generated@@148 ($generated@@142 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@150))
))) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (! (let (($generated@@153 ($generated@@148 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152))
))) (= ($generated@@1 $generated@@147) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@141 $generated@@154)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@U) ) (! (= (type ($generated@@146 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@146 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= (type $generated@@157) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@144 $generated@@157))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@157 $generated@@158))) ($generated@@145 ($generated@@141 $generated@@157)))))
 :pattern ( ($generated@@140 $generated@@157 $generated@@158) ($generated@@141 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@79 0)))
)))
(assert (= (type $generated@@164) $generated@@68))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@147) (or ($generated@@163 $generated@@165) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@165 $generated@@164)))) true)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@147)) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@143)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@143)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@147) (= (type $generated@@179) $generated@@147)) true) (= ($generated@@173 $generated@@178 $generated@@179)  (and (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)) (= ($generated@@175 $generated@@178) ($generated@@175 $generated@@179)))))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@72)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@147)))
(assert (= ($generated@@180 $generated@@181) $generated@@65))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@68)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@187) $generated@@68)) ($generated@@159 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@159 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@81 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@81) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@81)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@244 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@147) (or ($generated@@163 ($generated@@244 $generated@@248)) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@248 $generated@@164)))) (= ($generated@@162 ($generated@@244 $generated@@248)) ($generated@@0 ($generated@@244 ($generated@@11 ($generated@@245 ($generated@@244 $generated@@248)))))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@244 $generated@@248)))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@147)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) $generated@@143)) (= ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254)))
)))
(assert ($generated@@159 $generated@@181 $generated@@164))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@257 $generated@@258)) ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
 :pattern ( ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) (= (type $generated@@260) $generated@@147)) (= ($generated@@173 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@173 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) (= (type $generated@@263) $generated@@147)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@143) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@143) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@244 $generated@@276) $generated@@276)
 :pattern ( ($generated@@244 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@147) (= (type $generated@@279) $generated@@147)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@261 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@68)) (= (type $generated@@283) $generated@@143)) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@285)) (= ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@147) (= ($generated@@166 $generated@@286) (= ($generated@@180 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@147) (= ($generated@@245 $generated@@287) (= ($generated@@180 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@245 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@147) (= ($generated@@277 $generated@@288) (= ($generated@@180 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@148 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@142 $generated@@292)) (= (type $generated@@291) ($generated@@142 $generated@@292))) (= ($generated@@289 $generated@@290 $generated@@291)  (and (= ($generated@@144 $generated@@290) ($generated@@144 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@144 $generated@@290))) (= ($generated@@140 $generated@@290 $generated@@293) ($generated@@140 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@140 $generated@@290 $generated@@293))
 :pattern ( ($generated@@140 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@147) ($generated@@166 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) (= $generated@@294 ($generated@@249 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@166 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@142 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@144 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@147) ($generated@@277 $generated@@300)) (= $generated@@300 $generated@@181))
 :pattern ( ($generated@@277 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@147) ($generated@@245 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) ($generated@@142 $generated@@143)) (= $generated@@301 ($generated@@141 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@245 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@143)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@78 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@143)) (= (type $generated@@311) $generated@@68)) ($generated@@136 $generated@@308 $generated@@309)) ($generated@@280 $generated@@310 $generated@@311 $generated@@308)) ($generated@@280 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@136 $generated@@308 $generated@@309) ($generated@@280 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@315) $generated@@68)) ($generated@@136 $generated@@312 $generated@@313)) ($generated@@78 $generated@@314 $generated@@315 $generated@@312)) ($generated@@78 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@136 $generated@@312 $generated@@313) ($generated@@78 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 18)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@80 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@83 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@80 $generated@@359 $generated@@2)) (= ($generated@@184 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@85 $generated@@358 $generated@@360))) (<= ($generated ($generated@@85 $generated@@358 $generated@@360)) ($generated@@316 $generated@@358))))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@184 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@143) ($generated@@250 $generated@@361 $generated@@164)) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@361)) $generated@@361) ($generated@@159 ($generated@@146 $generated@@147 $generated@@361) $generated@@164)))
 :pattern ( ($generated@@250 $generated@@361 $generated@@164))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@142 $generated@@143))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@147) (= (type $generated@@365) $generated@@147)) (and ($generated@@245 $generated@@364) ($generated@@245 $generated@@365))) (= ($generated@@261 $generated@@364 $generated@@365) ($generated@@289 ($generated@@362 $generated@@364) ($generated@@362 $generated@@365))))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@364))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@344 (type $generated@@377))))
(let (($generated@@379 ($generated@@343 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@342 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@341 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@340 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@344 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@250 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@143) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@280 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@143) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@280 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@317 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@326 (type $generated@@404))))
(let (($generated@@406 ($generated@@325 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@408) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@344 (type $generated@@412))))
(let (($generated@@414 ($generated@@343 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@416) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@343 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@342 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@142 $generated@@143)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@430)) (= ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430) ($generated@@78 $generated@@429 ($generated@@427 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))) (and ($generated@@280 ($generated@@85 ($generated@@402 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@280 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))) (and ($generated@@280 ($generated@@85 ($generated@@410 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@280 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@148 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@142 $generated@@449)) (= (type $generated@@448) ($generated@@142 $generated@@449))) ($generated@@289 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@289 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@147) ($generated@@159 $generated@@450 $generated@@164)) (or ($generated@@245 $generated@@450) ($generated@@277 $generated@@450)))
 :pattern ( ($generated@@277 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
 :pattern ( ($generated@@245 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@451 $generated@@453))) (and ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))) ($generated@@136 $generated@@451 $generated@@453))
 :pattern ( ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@344 (type $generated@@456))))
(let (($generated@@458 ($generated@@343 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@342 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@341 $generated@@458 $generated@@457)) (= ($generated@@340 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@340 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@381 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@381 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@344 (type $generated@@462))))
(let (($generated@@464 ($generated@@343 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@342 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@341 $generated@@464 $generated@@463)) (= ($generated@@409 $generated@@462) ($generated@@454 $generated@@143))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@326 (type $generated@@465))))
(let (($generated@@467 ($generated@@325 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@324 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@323 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@143) (= (type $generated@@469) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@465) ($generated@@303 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@401 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@344 (type $generated@@470))))
(let (($generated@@472 ($generated@@343 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@342 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@341 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@143) (= (type $generated@@474) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@470) ($generated@@303 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@409 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@143) ($generated@@250 $generated@@475 $generated@@46)) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@146 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@143) ($generated@@250 $generated@@476 $generated@@47)) (and (= ($generated@@303 ($generated@@146 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@146 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@143) ($generated@@250 $generated@@477 $generated@@44)) (and (= ($generated@@303 ($generated@@146 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@146 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@143) ($generated@@250 $generated@@479 $generated@@45)) (and (= ($generated@@303 ($generated@@146 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@146 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@68) (= ($generated@@250 ($generated@@303 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@250 ($generated@@303 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@83 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@80 $generated@@483 $generated@@2)) (<= 0 ($generated@@316 $generated@@482))))
 :pattern ( ($generated@@316 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@148 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@142 $generated@@485)) (<= 0 ($generated@@144 $generated@@484))))
 :pattern ( ($generated@@144 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@431 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@439 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@439 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@439 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@439 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@143) (= (type $generated@@507) $generated@@143)) (= ($generated@@180 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@167 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@167 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@167 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@167 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@143) (= (type $generated@@517) $generated@@143)) (= ($generated@@174 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@143) (= (type $generated@@519) $generated@@143)) (= ($generated@@175 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@142 $generated@@143)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@144 $generated@@520))) ($generated@@280 ($generated@@140 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@140 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@79 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@79 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@264 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@264 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@269 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@269 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@183 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@183 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@427 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@427 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@427 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@427 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@142 $generated@@143)) (= ($generated@@180 ($generated@@141 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@141 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) ($generated@@142 $generated@@143)) (= ($generated@@362 ($generated@@141 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@141 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@146 $generated@@545 ($generated@@303 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@303 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))) (and ($generated@@250 ($generated@@85 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@250 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))) (and ($generated@@250 ($generated@@85 ($generated@@410 $generated@@550) $generated@@553) $generated@@552) ($generated@@250 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@143)) (< ($generated@@554 $generated@@555) ($generated@@145 ($generated@@249 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@249 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@143)) (< ($generated@@554 $generated@@558) ($generated@@145 ($generated@@249 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@249 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561))) (and (= ($generated@@303 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559)) $generated@@559) ($generated@@159 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559) ($generated@@431 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@143) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564))) (and (= ($generated@@303 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562)) $generated@@562) ($generated@@159 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562) ($generated@@439 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@143)) ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566))) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@567)) $generated@@567) ($generated@@159 ($generated@@146 $generated@@147 $generated@@567) ($generated@@167 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@142 $generated@@143)) (< ($generated@@568 $generated@@569) ($generated@@145 ($generated@@141 $generated@@569))))
 :pattern ( ($generated@@141 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@85 ($generated@@454 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@85 ($generated@@454 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@73)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@167 $generated@@574 $generated@@575)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@147) (= ($generated@@554 ($generated@@303 $generated@@576)) ($generated@@145 $generated@@576)))
 :pattern ( ($generated@@554 ($generated@@303 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) ($generated@@250 $generated@@577 ($generated@@79 0))) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@577)) $generated@@577) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@577) ($generated@@79 0))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@79 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@143) (= (type $generated@@579) $generated@@68)) ($generated@@250 $generated@@578 ($generated@@264 $generated@@579))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578)) $generated@@578) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578) ($generated@@264 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@578 ($generated@@264 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@143) (= (type $generated@@581) $generated@@68)) ($generated@@250 $generated@@580 ($generated@@269 $generated@@581))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580) ($generated@@269 $generated@@581))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@269 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@143) (= (type $generated@@583) $generated@@68)) ($generated@@250 $generated@@582 ($generated@@183 $generated@@583))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582)) $generated@@582) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582) ($generated@@183 $generated@@583))))
 :pattern ( ($generated@@250 $generated@@582 ($generated@@183 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@143) (= (type $generated@@585) $generated@@68)) ($generated@@250 $generated@@584 ($generated@@427 $generated@@585))) (and (= ($generated@@303 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584)) $generated@@584) ($generated@@159 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584) ($generated@@427 $generated@@585))))
 :pattern ( ($generated@@250 $generated@@584 ($generated@@427 $generated@@585)))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@147) (or ($generated@@163 $generated@@586) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@586 $generated@@164)))) (= ($generated@@162 $generated@@586) ($generated@@245 $generated@@586)))
 :pattern ( ($generated@@162 $generated@@586))
))))
(assert (= ($generated@@76 $generated@@164) $generated@@64))
(assert (= ($generated@@572 $generated@@164) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@280 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589))
)))
(assert (= $generated@@181 ($generated@@244 $generated@@181)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) ($generated@@142 $generated@@143)) (= ($generated@@159 ($generated@@141 $generated@@591) $generated@@164) ($generated@@159 $generated@@591 ($generated@@427 $generated@@45))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@591) $generated@@164))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@593) (and ($generated@@245 $generated@@592) ($generated@@78 $generated@@592 $generated@@164 $generated@@593)))) ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
 :pattern ( ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@147) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@596) (and ($generated@@166 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@68) ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@147) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@600) (and ($generated@@166 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@68) ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@143) (= (type $generated@@603) $generated@@143)) (= ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)) ($generated@@244 ($generated@@249 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))) ($generated@@244 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) ($generated@@142 $generated@@143)) (= ($generated@@141 ($generated@@244 $generated@@605)) ($generated@@244 ($generated@@141 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@244 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@303 ($generated@@244 $generated@@606)) ($generated@@244 ($generated@@303 $generated@@606)))
 :pattern ( ($generated@@303 ($generated@@244 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@148 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@142 $generated@@608)) (= ($generated@@144 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@144 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@316 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@478)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@143)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@142 $generated@@143)) (= (type $generated@@624) $generated@@68)) (= ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@144 $generated@@623))) ($generated@@250 ($generated@@140 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@140 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@144 $generated@@626))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))) ($generated@@568 $generated@@626))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630))) (and (and ($generated@@159 ($generated@@322 $generated@@628) ($generated@@264 $generated@@629)) ($generated@@159 ($generated@@370 $generated@@628) ($generated@@264 $generated@@630))) ($generated@@159 ($generated@@401 $generated@@628) ($generated@@264 ($generated@@167 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633))) (and (and ($generated@@159 ($generated@@340 $generated@@631) ($generated@@269 $generated@@632)) ($generated@@159 ($generated@@381 $generated@@631) ($generated@@269 $generated@@633))) ($generated@@159 ($generated@@409 $generated@@631) ($generated@@269 ($generated@@167 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@159 $generated@@634 $generated@@46))
 :pattern ( ($generated@@159 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@159 $generated@@635 $generated@@47))
 :pattern ( ($generated@@159 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@159 $generated@@636 $generated@@44))
 :pattern ( ($generated@@159 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@478) ($generated@@159 $generated@@637 $generated@@45))
 :pattern ( ($generated@@159 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@143) ($generated@@159 $generated@@638 $generated@@48))
 :pattern ( ($generated@@159 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@639) $generated@@147) (= (type $generated@@640) ($generated@@190 $generated@@81 $generated@@4))) (= (type $generated@@641) $generated@@81)) (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@643) $generated@@147)) (= (type $generated@@645) $generated@@147)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@648) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@649  (=> (and (not ($generated@@162 $generated@@639)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@244 ($generated@@11 false))))))
(let (($generated@@650 true))
(let (($generated@@651  (=> (= $generated@@640 ($generated@@189 $generated@@641 $generated@@642 $generated@@60 false)) (=> (and (and (and ($generated@@159 $generated@@643 $generated@@164) ($generated@@78 $generated@@643 $generated@@164 $generated@@642)) (= $generated@@644 ($generated@@274 2))) (and (and ($generated@@159 $generated@@645 $generated@@164) ($generated@@78 $generated@@645 $generated@@164 $generated@@642)) (and ($generated@@257 $generated@@646) ($generated@@647 $generated@@646)))) (=> (and (and (and (and ($generated@@159 $generated@@639 $generated@@164) ($generated@@78 $generated@@639 $generated@@164 $generated@@646)) (=> (= $generated@@644 ($generated@@274 1)) (not ($generated@@245 $generated@@639)))) (and (=> (= $generated@@644 ($generated@@274 2)) ($generated@@245 $generated@@639)) (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@81) (=> (and (not (= $generated@@652 $generated@@641)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@642 $generated@@652) $generated@@60))) (= ($generated@@85 $generated@@646 $generated@@652) ($generated@@85 $generated@@642 $generated@@652))))
 :pattern ( ($generated@@85 $generated@@646 $generated@@652))
)))) (and (and ($generated@@136 $generated@@642 $generated@@646) ($generated@@78 $generated@@639 $generated@@164 $generated@@646)) (and ($generated@@163 $generated@@639) ($generated@@163 $generated@@639)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@650) (=> (= (ControlFlow 0 4) 3) $generated@@649)))))))
(let (($generated@@653  (=> (and ($generated@@257 $generated@@642) ($generated@@647 $generated@@642)) (=> (and (and (and ($generated@@159 $generated@@648 $generated@@164) ($generated@@78 $generated@@648 $generated@@164 $generated@@642)) true) (and (= 3 $generated@@161) (= (ControlFlow 0 5) 4))) $generated@@651))))
$generated@@653)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U Int) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@T T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@188 (T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@439 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@572 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@149 T@T) ) (= ($generated@@1 ($generated@@142 $generated@@149)) 14)) (forall (($generated@@150 T@T) ) (! (= ($generated@@148 ($generated@@142 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@142 $generated@@150))
))) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@151 T@U) ($generated@@152 Int) ) (! (let (($generated@@153 ($generated@@148 (type $generated@@151))))
(= (type ($generated@@140 $generated@@151 $generated@@152)) $generated@@153))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152))
))) (= ($generated@@1 $generated@@147) 16)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@141 $generated@@154)) $generated@@147)
 :pattern ( ($generated@@141 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@U) ) (! (= (type ($generated@@146 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@146 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 Int) ) (!  (=> (= (type $generated@@157) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@158) (< $generated@@158 ($generated@@144 $generated@@157))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@157 $generated@@158))) ($generated@@145 ($generated@@141 $generated@@157)))))
 :pattern ( ($generated@@140 $generated@@157 $generated@@158) ($generated@@141 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@159 $generated@@160 ($generated@@79 0)))
 :pattern ( ($generated@@159 $generated@@160 ($generated@@79 0)))
)))
(assert (= (type $generated@@164) $generated@@68))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@165 T@U) ) (!  (=> (and (= (type $generated@@165) $generated@@147) (or ($generated@@163 $generated@@165) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@165 $generated@@164)))) true)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@168 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@68) (= (type $generated@@171) $generated@@68)) (= (type $generated@@172) $generated@@147)) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171))) ($generated@@166 $generated@@172))
 :pattern ( ($generated@@166 $generated@@172) ($generated@@159 $generated@@172 ($generated@@167 $generated@@170 $generated@@171)))
)))
(assert  (and (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@143)
 :pattern ( ($generated@@174 $generated@@176))
)) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@143)
 :pattern ( ($generated@@175 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) $generated@@147) (= (type $generated@@179) $generated@@147)) true) (= ($generated@@173 $generated@@178 $generated@@179)  (and (= ($generated@@174 $generated@@178) ($generated@@174 $generated@@179)) (= ($generated@@175 $generated@@178) ($generated@@175 $generated@@179)))))
 :pattern ( ($generated@@173 $generated@@178 $generated@@179))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@72)
 :pattern ( ($generated@@180 $generated@@182))
)) (= (type $generated@@181) $generated@@147)))
(assert (= ($generated@@180 $generated@@181) $generated@@65))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@68)
 :pattern ( ($generated@@183 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@187) $generated@@68)) ($generated@@159 $generated@@186 ($generated@@183 $generated@@187))) ($generated@@184 $generated@@186))
 :pattern ( ($generated@@159 $generated@@186 ($generated@@183 $generated@@187)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@1 ($generated@@190 $generated@@194 $generated@@195)) 17)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@191 ($generated@@190 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@190 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@192 ($generated@@190 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@190 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@192 (type $generated@@200))))
(= (type ($generated@@188 $generated@@200 $generated@@201 $generated@@202)) $generated@@203))
 :pattern ( ($generated@@188 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 (type $generated@@207)))
(let (($generated@@209 (type $generated@@205)))
(= (type ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@190 $generated@@209 $generated@@208))))
 :pattern ( ($generated@@193 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@192 (type $generated@@210))))
 (=> (= (type $generated@@213) $generated@@214) (= ($generated@@188 ($generated@@193 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@211 $generated@@212) $generated@@213)))
 :weight 0
))) (and (and (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@188 ($generated@@193 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@188 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@188 ($generated@@193 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@188 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or true (= ($generated@@188 ($generated@@193 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@188 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@190 $generated@@81 $generated@@4))
 :pattern ( ($generated@@189 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@81) (= (type $generated@@238) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@81)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@188 ($generated@@189 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@244 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@147) (or ($generated@@163 ($generated@@244 $generated@@248)) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@248 $generated@@164)))) (= ($generated@@162 ($generated@@244 $generated@@248)) ($generated@@0 ($generated@@244 ($generated@@11 ($generated@@245 ($generated@@244 $generated@@248)))))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@244 $generated@@248)))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@147)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@143)) (= (type $generated@@256) $generated@@143)) (= ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@159 ($generated@@249 $generated@@255 $generated@@256) ($generated@@167 $generated@@253 $generated@@254)))
)))
(assert ($generated@@159 $generated@@181 $generated@@164))
(assert (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@257 $generated@@258)) ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
 :pattern ( ($generated@@78 $generated@@181 $generated@@164 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) (= (type $generated@@260) $generated@@147)) (= ($generated@@173 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@173 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) (= (type $generated@@263) $generated@@147)) (= ($generated@@261 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@68)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@267) $generated@@68)) (= ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@143) ($generated@@0 ($generated@@85 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@85 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@159 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@68)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@272) $generated@@68)) (= ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@143) ($generated@@0 ($generated@@85 $generated@@271 $generated@@273))) ($generated@@250 $generated@@273 $generated@@272))
 :pattern ( ($generated@@85 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@159 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (! (= ($generated@@244 $generated@@276) $generated@@276)
 :pattern ( ($generated@@244 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@147) (= (type $generated@@279) $generated@@147)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@261 $generated@@278 $generated@@279) true))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@261 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@68)) (= (type $generated@@283) $generated@@143)) (= (type $generated@@284) $generated@@143)) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@285)) (= ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285)  (and ($generated@@280 $generated@@283 $generated@@281 $generated@@285) ($generated@@280 $generated@@284 $generated@@282 $generated@@285))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@283 $generated@@284) ($generated@@167 $generated@@281 $generated@@282) $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@147) (= ($generated@@166 $generated@@286) (= ($generated@@180 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@147) (= ($generated@@245 $generated@@287) (= ($generated@@180 $generated@@287) $generated@@63)))
 :pattern ( ($generated@@245 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@147) (= ($generated@@277 $generated@@288) (= ($generated@@180 $generated@@288) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@148 (type $generated@@290))))
 (=> (and (= (type $generated@@290) ($generated@@142 $generated@@292)) (= (type $generated@@291) ($generated@@142 $generated@@292))) (= ($generated@@289 $generated@@290 $generated@@291)  (and (= ($generated@@144 $generated@@290) ($generated@@144 $generated@@291)) (forall (($generated@@293 Int) ) (!  (=> (and (<= 0 $generated@@293) (< $generated@@293 ($generated@@144 $generated@@290))) (= ($generated@@140 $generated@@290 $generated@@293) ($generated@@140 $generated@@291 $generated@@293)))
 :pattern ( ($generated@@140 $generated@@290 $generated@@293))
 :pattern ( ($generated@@140 $generated@@291 $generated@@293))
))))))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@147) ($generated@@166 $generated@@294)) (exists (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) (= $generated@@294 ($generated@@249 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@295)
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@166 $generated@@294))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@142 $generated@@298))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@144 ($generated@@297 $generated@@299)) 0)
 :pattern ( ($generated@@297 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@147) ($generated@@277 $generated@@300)) (= $generated@@300 $generated@@181))
 :pattern ( ($generated@@277 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@147) ($generated@@245 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) ($generated@@142 $generated@@143)) (= $generated@@301 ($generated@@141 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@245 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@143)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@68) (= (type $generated@@307) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@78 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@280 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@308) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@310) $generated@@143)) (= (type $generated@@311) $generated@@68)) ($generated@@136 $generated@@308 $generated@@309)) ($generated@@280 $generated@@310 $generated@@311 $generated@@308)) ($generated@@280 $generated@@310 $generated@@311 $generated@@309))
 :pattern ( ($generated@@136 $generated@@308 $generated@@309) ($generated@@280 $generated@@310 $generated@@311 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@312) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@313) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@315) $generated@@68)) ($generated@@136 $generated@@312 $generated@@313)) ($generated@@78 $generated@@314 $generated@@315 $generated@@312)) ($generated@@78 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@136 $generated@@312 $generated@@313) ($generated@@78 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@318 T@T) ) (! (= (type ($generated@@317 $generated@@318)) ($generated@@80 $generated@@318 $generated@@2))
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@83 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@80 $generated@@320 $generated@@2)) (and (= (= ($generated@@316 $generated@@319) 0) (= $generated@@319 ($generated@@317 $generated@@320))) (=> (not (= ($generated@@316 $generated@@319) 0)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@320) (< 0 ($generated ($generated@@85 $generated@@319 $generated@@321))))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 18)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@80 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@85 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@85 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@83 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@80 $generated@@359 $generated@@2)) (= ($generated@@184 $generated@@358) (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@359) (and (<= 0 ($generated ($generated@@85 $generated@@358 $generated@@360))) (<= ($generated ($generated@@85 $generated@@358 $generated@@360)) ($generated@@316 $generated@@358))))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
)))))
 :pattern ( ($generated@@184 $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@143) ($generated@@250 $generated@@361 $generated@@164)) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@361)) $generated@@361) ($generated@@159 ($generated@@146 $generated@@147 $generated@@361) $generated@@164)))
 :pattern ( ($generated@@250 $generated@@361 $generated@@164))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) ($generated@@142 $generated@@143))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@364) $generated@@147) (= (type $generated@@365) $generated@@147)) (and ($generated@@245 $generated@@364) ($generated@@245 $generated@@365))) (= ($generated@@261 $generated@@364 $generated@@365) ($generated@@289 ($generated@@362 $generated@@364) ($generated@@362 $generated@@365))))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@364))
 :pattern ( ($generated@@261 $generated@@364 $generated@@365) ($generated@@245 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@322 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@326 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@326 (type $generated@@373))))
(let (($generated@@375 ($generated@@325 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@324 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@323 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@344 (type $generated@@377))))
(let (($generated@@379 ($generated@@343 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@342 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@341 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@340 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@344 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(let (($generated@@386 ($generated@@343 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@342 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@341 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@250 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@159 $generated@@388 ($generated@@183 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@143) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@280 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@264 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@143 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@143) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@280 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@269 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@317 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@317 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@326 (type $generated@@404))))
(let (($generated@@406 ($generated@@325 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@408) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@174 ($generated@@146 $generated@@147 $generated@@408))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@143 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@344 (type $generated@@412))))
(let (($generated@@414 ($generated@@343 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@416) $generated@@143)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@174 ($generated@@146 $generated@@147 $generated@@416))) ($generated@@175 ($generated@@146 $generated@@147 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@325 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@324 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@322 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@343 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@342 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@340 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) ($generated@@142 $generated@@143)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@430)) (= ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430) ($generated@@78 $generated@@429 ($generated@@427 $generated@@45) $generated@@430)))
 :pattern ( ($generated@@78 ($generated@@141 $generated@@429) $generated@@164 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))) (and ($generated@@280 ($generated@@85 ($generated@@402 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@280 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@434) $generated@@438))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (= (type ($generated@@439 $generated@@440 $generated@@441)) $generated@@68)
 :pattern ( ($generated@@439 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (= (type $generated@@442) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@443) $generated@@68)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))) (and ($generated@@280 ($generated@@85 ($generated@@410 $generated@@442) $generated@@446) $generated@@444 $generated@@445) ($generated@@280 $generated@@446 $generated@@443 $generated@@445)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@442) $generated@@446))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@442) $generated@@446))
))))
 :pattern ( ($generated@@78 $generated@@442 ($generated@@439 $generated@@443 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@148 (type $generated@@447))))
 (=> (and (and (= (type $generated@@447) ($generated@@142 $generated@@449)) (= (type $generated@@448) ($generated@@142 $generated@@449))) ($generated@@289 $generated@@447 $generated@@448)) (= $generated@@447 $generated@@448)))
 :pattern ( ($generated@@289 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@147) ($generated@@159 $generated@@450 $generated@@164)) (or ($generated@@245 $generated@@450) ($generated@@277 $generated@@450)))
 :pattern ( ($generated@@277 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
 :pattern ( ($generated@@245 $generated@@450) ($generated@@159 $generated@@450 $generated@@164))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@452) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@451 $generated@@453))) (and ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))) ($generated@@136 $generated@@451 $generated@@453))
 :pattern ( ($generated@@136 $generated@@451 $generated@@452) ($generated@@136 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@80 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@344 (type $generated@@456))))
(let (($generated@@458 ($generated@@343 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@342 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@341 $generated@@458 $generated@@457)) (= ($generated@@340 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@340 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@344 (type $generated@@459))))
(let (($generated@@461 ($generated@@343 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@342 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@341 $generated@@461 $generated@@460)) (= ($generated@@381 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@381 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@344 (type $generated@@462))))
(let (($generated@@464 ($generated@@343 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@342 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@341 $generated@@464 $generated@@463)) (= ($generated@@409 $generated@@462) ($generated@@454 $generated@@143))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@326 (type $generated@@465))))
(let (($generated@@467 ($generated@@325 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@324 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@323 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@143) (= (type $generated@@469) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@465) ($generated@@303 ($generated@@249 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@401 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@344 (type $generated@@470))))
(let (($generated@@472 ($generated@@343 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@342 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@341 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@143) (= (type $generated@@474) $generated@@143)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@470) ($generated@@303 ($generated@@249 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@409 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@143) ($generated@@250 $generated@@475 $generated@@46)) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@475)) $generated@@475) ($generated@@159 ($generated@@146 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@143) ($generated@@250 $generated@@476 $generated@@47)) (and (= ($generated@@303 ($generated@@146 $generated@@3 $generated@@476)) $generated@@476) ($generated@@159 ($generated@@146 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@143) ($generated@@250 $generated@@477 $generated@@44)) (and (= ($generated@@303 ($generated@@146 $generated@@4 $generated@@477)) $generated@@477) ($generated@@159 ($generated@@146 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@143) ($generated@@250 $generated@@479 $generated@@45)) (and (= ($generated@@303 ($generated@@146 $generated@@478 $generated@@479)) $generated@@479) ($generated@@159 ($generated@@146 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@68) (= ($generated@@250 ($generated@@303 $generated@@480) $generated@@481) ($generated@@159 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@250 ($generated@@303 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@83 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@80 $generated@@483 $generated@@2)) (<= 0 ($generated@@316 $generated@@482))))
 :pattern ( ($generated@@316 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@148 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@142 $generated@@485)) (<= 0 ($generated@@144 $generated@@484))))
 :pattern ( ($generated@@144 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@431 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@431 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@431 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@439 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@439 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@439 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@439 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@76 ($generated@@439 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@439 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@143) (= (type $generated@@507) $generated@@143)) (= ($generated@@180 ($generated@@249 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@167 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@167 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@167 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@167 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@143) (= (type $generated@@517) $generated@@143)) (= ($generated@@174 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@143) (= (type $generated@@519) $generated@@143)) (= ($generated@@175 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@142 $generated@@143)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@144 $generated@@520))) ($generated@@280 ($generated@@140 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@140 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@78 $generated@@520 ($generated@@427 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@79 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@79 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@264 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@264 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@264 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@269 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@269 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@269 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@183 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@183 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@183 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@183 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@427 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@427 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@427 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@427 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) ($generated@@142 $generated@@143)) (= ($generated@@180 ($generated@@141 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@141 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) ($generated@@142 $generated@@143)) (= ($generated@@362 ($generated@@141 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@141 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@146 $generated@@545 ($generated@@303 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@303 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))) (and ($generated@@250 ($generated@@85 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@250 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@322 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@159 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@143) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))) (and ($generated@@250 ($generated@@85 ($generated@@410 $generated@@550) $generated@@553) $generated@@552) ($generated@@250 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@159 $generated@@550 ($generated@@439 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@143) (= (type $generated@@556) $generated@@143)) (< ($generated@@554 $generated@@555) ($generated@@145 ($generated@@249 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@249 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@143) (= (type $generated@@558) $generated@@143)) (< ($generated@@554 $generated@@558) ($generated@@145 ($generated@@249 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@249 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@143) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561))) (and (= ($generated@@303 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559)) $generated@@559) ($generated@@159 ($generated@@146 ($generated@@324 $generated@@143 $generated@@143) $generated@@559) ($generated@@431 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@250 $generated@@559 ($generated@@431 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@143) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) $generated@@68)) ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564))) (and (= ($generated@@303 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562)) $generated@@562) ($generated@@159 ($generated@@146 ($generated@@342 $generated@@143 $generated@@143) $generated@@562) ($generated@@439 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@250 $generated@@562 ($generated@@439 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) $generated@@143)) ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566))) (and (= ($generated@@303 ($generated@@146 $generated@@147 $generated@@567)) $generated@@567) ($generated@@159 ($generated@@146 $generated@@147 $generated@@567) ($generated@@167 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@250 $generated@@567 ($generated@@167 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) ($generated@@142 $generated@@143)) (< ($generated@@568 $generated@@569) ($generated@@145 ($generated@@141 $generated@@569))))
 :pattern ( ($generated@@141 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (not ($generated@@0 ($generated@@85 ($generated@@454 $generated@@571) $generated@@570))))
 :pattern ( (let (($generated@@571 (type $generated@@570)))
($generated@@85 ($generated@@454 $generated@@571) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@73)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (and (= ($generated@@76 ($generated@@167 $generated@@574 $generated@@575)) $generated@@62) (= ($generated@@572 ($generated@@167 $generated@@574 $generated@@575)) $generated@@66)))
 :pattern ( ($generated@@167 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@147) (= ($generated@@554 ($generated@@303 $generated@@576)) ($generated@@145 $generated@@576)))
 :pattern ( ($generated@@554 ($generated@@303 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@143) ($generated@@250 $generated@@577 ($generated@@79 0))) (and (= ($generated@@303 ($generated@@146 $generated@@2 $generated@@577)) $generated@@577) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@577) ($generated@@79 0))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@79 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@143) (= (type $generated@@579) $generated@@68)) ($generated@@250 $generated@@578 ($generated@@264 $generated@@579))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578)) $generated@@578) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@578) ($generated@@264 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@578 ($generated@@264 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@143) (= (type $generated@@581) $generated@@68)) ($generated@@250 $generated@@580 ($generated@@269 $generated@@581))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580)) $generated@@580) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@4) $generated@@580) ($generated@@269 $generated@@581))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@269 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@143) (= (type $generated@@583) $generated@@68)) ($generated@@250 $generated@@582 ($generated@@183 $generated@@583))) (and (= ($generated@@303 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582)) $generated@@582) ($generated@@159 ($generated@@146 ($generated@@80 $generated@@143 $generated@@2) $generated@@582) ($generated@@183 $generated@@583))))
 :pattern ( ($generated@@250 $generated@@582 ($generated@@183 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@143) (= (type $generated@@585) $generated@@68)) ($generated@@250 $generated@@584 ($generated@@427 $generated@@585))) (and (= ($generated@@303 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584)) $generated@@584) ($generated@@159 ($generated@@146 ($generated@@142 $generated@@143) $generated@@584) ($generated@@427 $generated@@585))))
 :pattern ( ($generated@@250 $generated@@584 ($generated@@427 $generated@@585)))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@147) (or ($generated@@163 $generated@@586) (and (not (= 0 $generated@@161)) ($generated@@159 $generated@@586 $generated@@164)))) (= ($generated@@162 $generated@@586) ($generated@@245 $generated@@586)))
 :pattern ( ($generated@@162 $generated@@586))
))))
(assert (= ($generated@@76 $generated@@164) $generated@@64))
(assert (= ($generated@@572 $generated@@164) $generated@@67))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@80 $generated@@143 $generated@@2)) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@143) (< 0 ($generated ($generated@@85 $generated@@587 $generated@@590)))) ($generated@@280 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@85 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@183 $generated@@588) $generated@@589))
)))
(assert (= $generated@@181 ($generated@@244 $generated@@181)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) ($generated@@142 $generated@@143)) (= ($generated@@159 ($generated@@141 $generated@@591) $generated@@164) ($generated@@159 $generated@@591 ($generated@@427 $generated@@45))))
 :pattern ( ($generated@@159 ($generated@@141 $generated@@591) $generated@@164))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@147) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@593) (and ($generated@@245 $generated@@592) ($generated@@78 $generated@@592 $generated@@164 $generated@@593)))) ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
 :pattern ( ($generated@@78 ($generated@@362 $generated@@592) ($generated@@427 $generated@@45) $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@147) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@596) (and ($generated@@166 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@68) ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@167 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@280 ($generated@@174 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@147) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@600) (and ($generated@@166 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@68) ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@78 $generated@@598 ($generated@@167 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@280 ($generated@@175 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@143) (= (type $generated@@603) $generated@@143)) (= ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)) ($generated@@244 ($generated@@249 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@249 ($generated@@244 $generated@@602) ($generated@@244 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))) ($generated@@244 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) ($generated@@142 $generated@@143)) (= ($generated@@141 ($generated@@244 $generated@@605)) ($generated@@244 ($generated@@141 $generated@@605))))
 :pattern ( ($generated@@141 ($generated@@244 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@303 ($generated@@244 $generated@@606)) ($generated@@244 ($generated@@303 $generated@@606)))
 :pattern ( ($generated@@303 ($generated@@244 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@148 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@142 $generated@@608)) (= ($generated@@144 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@144 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@316 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@316 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@478)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@143)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@142 $generated@@143)) (= (type $generated@@624) $generated@@68)) (= ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@144 $generated@@623))) ($generated@@250 ($generated@@140 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@140 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@159 $generated@@623 ($generated@@427 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@142 $generated@@143)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@144 $generated@@626))) (< ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))) ($generated@@568 $generated@@626))))
 :pattern ( ($generated@@145 ($generated@@146 $generated@@147 ($generated@@140 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@324 $generated@@143 $generated@@143)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630))) (and (and ($generated@@159 ($generated@@322 $generated@@628) ($generated@@264 $generated@@629)) ($generated@@159 ($generated@@370 $generated@@628) ($generated@@264 $generated@@630))) ($generated@@159 ($generated@@401 $generated@@628) ($generated@@264 ($generated@@167 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@159 $generated@@628 ($generated@@431 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@342 $generated@@143 $generated@@143)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633))) (and (and ($generated@@159 ($generated@@340 $generated@@631) ($generated@@269 $generated@@632)) ($generated@@159 ($generated@@381 $generated@@631) ($generated@@269 $generated@@633))) ($generated@@159 ($generated@@409 $generated@@631) ($generated@@269 ($generated@@167 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@159 $generated@@631 ($generated@@439 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@159 $generated@@634 $generated@@46))
 :pattern ( ($generated@@159 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@159 $generated@@635 $generated@@47))
 :pattern ( ($generated@@159 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@159 $generated@@636 $generated@@44))
 :pattern ( ($generated@@159 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@478) ($generated@@159 $generated@@637 $generated@@45))
 :pattern ( ($generated@@159 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@143) ($generated@@159 $generated@@638 $generated@@48))
 :pattern ( ($generated@@159 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 (T@U) Bool)
(declare-fun $generated@@651 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@640) $generated@@147) (= (type $generated@@642) ($generated@@190 $generated@@81 $generated@@4))) (= (type $generated@@643) $generated@@81)) (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@646) $generated@@147)) (= (type $generated@@648) $generated@@147)) (= (type $generated@@649) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) $generated@@147)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@652  (=> (= (ControlFlow 0 3) (- 0 2)) (= $generated@@639 ($generated@@274 42)))))
(let (($generated@@653  (=> (and (and (not ($generated@@162 $generated@@640)) (= $generated@@641 ($generated@@274 42))) (and (= $generated@@639 $generated@@641) (= (ControlFlow 0 4) 3))) $generated@@652)))
(let (($generated@@654 true))
(let (($generated@@655  (=> (and (= $generated@@642 ($generated@@189 $generated@@643 $generated@@644 $generated@@60 false)) (= $generated@@645 ($generated@@274 0))) (=> (and (and (and ($generated@@159 $generated@@646 $generated@@164) ($generated@@78 $generated@@646 $generated@@164 $generated@@644)) (= $generated@@647 ($generated@@274 0))) (and (and ($generated@@159 $generated@@648 $generated@@164) ($generated@@78 $generated@@648 $generated@@164 $generated@@644)) (and ($generated@@257 $generated@@649) ($generated@@650 $generated@@649)))) (=> (and (and (and (and ($generated@@159 $generated@@640 $generated@@164) ($generated@@78 $generated@@640 $generated@@164 $generated@@649)) (=> (= $generated@@647 ($generated@@274 1)) (not ($generated@@245 $generated@@640)))) (and (=> (= $generated@@647 ($generated@@274 2)) ($generated@@245 $generated@@640)) (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@81) (=> (and (not (= $generated@@656 $generated@@643)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@644 $generated@@656) $generated@@60))) (= ($generated@@85 $generated@@649 $generated@@656) ($generated@@85 $generated@@644 $generated@@656))))
 :pattern ( ($generated@@85 $generated@@649 $generated@@656))
)))) (and (and ($generated@@136 $generated@@644 $generated@@649) ($generated@@78 $generated@@640 $generated@@164 $generated@@649)) (and ($generated@@163 $generated@@640) ($generated@@163 $generated@@640)))) (and (=> (= (ControlFlow 0 5) 1) $generated@@654) (=> (= (ControlFlow 0 5) 4) $generated@@653)))))))
(let (($generated@@657  (=> (and ($generated@@257 $generated@@644) ($generated@@650 $generated@@644)) (=> (and (and (and ($generated@@159 $generated@@651 $generated@@164) ($generated@@78 $generated@@651 $generated@@164 $generated@@644)) true) (and (= 3 $generated@@161) (= (ControlFlow 0 6) 5))) $generated@@655))))
$generated@@657))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U Int) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U) Int)
(declare-fun $generated@@157 (T@T T@U) T@U)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (Int) Int)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@293 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@576 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@85 T@U) ) (! (= (type ($generated@@79 $generated@@85)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(= (type ($generated@@80 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@80 $generated@@86))
))) (= (type $generated@@84) $generated@@68)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@88 T@U) ) (!  (=> (and (= (type $generated@@88) $generated@@81) (or ($generated@@82 ($generated@@80 $generated@@88)) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@88 $generated@@84)))) (= ($generated@@79 ($generated@@80 $generated@@88)) ($generated@@80 $generated@@88)))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@88)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@71 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@71 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@68)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (and (and (forall (($generated@@159 T@T) ) (= ($generated@@1 ($generated@@153 $generated@@159)) 15)) (forall (($generated@@160 T@T) ) (! (= ($generated@@158 ($generated@@153 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@153 $generated@@160))
))) (= ($generated@@1 $generated@@154) 16)) (forall (($generated@@161 T@U) ($generated@@162 Int) ) (! (let (($generated@@163 ($generated@@158 (type $generated@@161))))
(= (type ($generated@@151 $generated@@161 $generated@@162)) $generated@@163))
 :pattern ( ($generated@@151 $generated@@161 $generated@@162))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@152 $generated@@164)) $generated@@81)
 :pattern ( ($generated@@152 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@157 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (= (type $generated@@167) ($generated@@153 $generated@@154)) (=> (and (<= 0 $generated@@168) (< $generated@@168 ($generated@@155 $generated@@167))) (< ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@167 $generated@@168))) ($generated@@156 ($generated@@152 $generated@@167)))))
 :pattern ( ($generated@@151 $generated@@167 $generated@@168) ($generated@@152 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@83 $generated@@169 ($generated@@90 0)))
 :pattern ( ($generated@@83 $generated@@169 ($generated@@90 0)))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@81) (or ($generated@@171 $generated@@172) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@172 $generated@@84)))) true)
 :pattern ( ($generated@@170 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@175 $generated@@176)) $generated@@68)
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (and (= (type $generated@@177) $generated@@68) (= (type $generated@@178) $generated@@68)) (= (type $generated@@179) $generated@@81)) ($generated@@83 $generated@@179 ($generated@@174 $generated@@177 $generated@@178))) ($generated@@173 $generated@@179))
 :pattern ( ($generated@@173 $generated@@179) ($generated@@83 $generated@@179 ($generated@@174 $generated@@177 $generated@@178)))
)))
(assert  (and (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@154)
 :pattern ( ($generated@@181 $generated@@183))
)) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@154)
 :pattern ( ($generated@@182 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@81) (= (type $generated@@186) $generated@@81)) true) (= ($generated@@180 $generated@@185 $generated@@186)  (and (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)) (= ($generated@@182 $generated@@185) ($generated@@182 $generated@@186)))))
 :pattern ( ($generated@@180 $generated@@185 $generated@@186))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@72)
 :pattern ( ($generated@@187 $generated@@189))
)) (= (type $generated@@188) $generated@@81)))
(assert (= ($generated@@187 $generated@@188) $generated@@65))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@68)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@194) $generated@@68)) ($generated@@83 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@83 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@92 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@71 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@92) (= (type $generated@@245) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@246) ($generated@@70 $generated@@4))) (= (type $generated@@248) $generated@@92)) (= (type $generated@@249) ($generated@@70 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@81) (or ($generated@@171 ($generated@@80 $generated@@252)) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@252 $generated@@84)))) (= ($generated@@170 ($generated@@80 $generated@@252)) ($generated@@0 ($generated@@80 ($generated@@11 ($generated@@251 ($generated@@80 $generated@@252)))))))
 :weight 3
 :pattern ( ($generated@@170 ($generated@@80 $generated@@252)))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@255 $generated@@256)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) $generated@@68)) (= (type $generated@@259) $generated@@154)) (= (type $generated@@260) $generated@@154)) (= ($generated@@83 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258))  (and ($generated@@254 $generated@@259 $generated@@257) ($generated@@254 $generated@@260 $generated@@258))))
 :pattern ( ($generated@@83 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258)))
)))
(assert ($generated@@83 $generated@@188 $generated@@84))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@91 $generated@@92 $generated@@93)) ($generated@@261 $generated@@262)) ($generated@@89 $generated@@188 $generated@@84 $generated@@262))
 :pattern ( ($generated@@89 $generated@@188 $generated@@84 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@81) (= (type $generated@@264) $generated@@81)) (= ($generated@@180 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@180 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@81) (= (type $generated@@267) $generated@@81)) (= ($generated@@265 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@83 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@154) ($generated@@0 ($generated@@96 $generated@@270 $generated@@272))) ($generated@@254 $generated@@272 $generated@@271))
 :pattern ( ($generated@@96 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@83 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@68)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@276) $generated@@68)) (= ($generated@@83 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@154) ($generated@@0 ($generated@@96 $generated@@275 $generated@@277))) ($generated@@254 $generated@@277 $generated@@276))
 :pattern ( ($generated@@96 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@83 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 Int) ) (! (= ($generated@@278 $generated@@279) $generated@@279)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@80 $generated@@280) $generated@@280)
 :pattern ( ($generated@@80 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@81) (= (type $generated@@283) $generated@@81)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@265 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@265 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@265 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@154)) (= (type $generated@@288) $generated@@154)) (= (type $generated@@289) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@261 $generated@@289)) (= ($generated@@89 ($generated@@253 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@89 ($generated@@253 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@81) (= ($generated@@173 $generated@@290) (= ($generated@@187 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@173 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@81) (= ($generated@@251 $generated@@291) (= ($generated@@187 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@251 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@81) (= ($generated@@281 $generated@@292) (= ($generated@@187 $generated@@292) $generated@@65)))
 :pattern ( ($generated@@281 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@158 (type $generated@@294))))
 (=> (and (= (type $generated@@294) ($generated@@153 $generated@@296)) (= (type $generated@@295) ($generated@@153 $generated@@296))) (= ($generated@@293 $generated@@294 $generated@@295)  (and (= ($generated@@155 $generated@@294) ($generated@@155 $generated@@295)) (forall (($generated@@297 Int) ) (!  (=> (and (<= 0 $generated@@297) (< $generated@@297 ($generated@@155 $generated@@294))) (= ($generated@@151 $generated@@294 $generated@@297) ($generated@@151 $generated@@295 $generated@@297)))
 :pattern ( ($generated@@151 $generated@@294 $generated@@297))
 :pattern ( ($generated@@151 $generated@@295 $generated@@297))
))))))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@81) ($generated@@173 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@154) (= (type $generated@@300) $generated@@154)) (= $generated@@298 ($generated@@253 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@173 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@153 $generated@@302))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@155 ($generated@@301 $generated@@303)) 0)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@81) ($generated@@281 $generated@@304)) (= $generated@@304 $generated@@188))
 :pattern ( ($generated@@281 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@81) ($generated@@251 $generated@@305)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) ($generated@@153 $generated@@154)) (= $generated@@305 ($generated@@152 $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@251 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@154)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@89 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@313) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@314) $generated@@154)) (= (type $generated@@315) $generated@@68)) ($generated@@147 $generated@@312 $generated@@313)) ($generated@@284 $generated@@314 $generated@@315 $generated@@312)) ($generated@@284 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@147 $generated@@312 $generated@@313) ($generated@@284 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@316) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@317) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@319) $generated@@68)) ($generated@@147 $generated@@316 $generated@@317)) ($generated@@89 $generated@@318 $generated@@319 $generated@@316)) ($generated@@89 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@147 $generated@@316 $generated@@317) ($generated@@89 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@91 $generated@@322 $generated@@2))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@94 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@91 $generated@@324 $generated@@2)) (and (= (= ($generated@@320 $generated@@323) 0) (= $generated@@323 ($generated@@321 $generated@@324))) (=> (not (= ($generated@@320 $generated@@323) 0)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) (< 0 ($generated ($generated@@96 $generated@@323 $generated@@325))))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 18)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@91 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@91 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@94 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@91 $generated@@363 $generated@@2)) (= ($generated@@191 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@96 $generated@@362 $generated@@364))) (<= ($generated ($generated@@96 $generated@@362 $generated@@364)) ($generated@@320 $generated@@362))))
 :pattern ( ($generated@@96 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@191 $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) ($generated@@254 $generated@@365 $generated@@84)) (and (= ($generated@@307 ($generated@@157 $generated@@81 $generated@@365)) $generated@@365) ($generated@@83 ($generated@@157 $generated@@81 $generated@@365) $generated@@84)))
 :pattern ( ($generated@@254 $generated@@365 $generated@@84))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@153 $generated@@154))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@368) $generated@@81) (= (type $generated@@369) $generated@@81)) (and ($generated@@251 $generated@@368) ($generated@@251 $generated@@369))) (= ($generated@@265 $generated@@368 $generated@@369) ($generated@@293 ($generated@@366 $generated@@368) ($generated@@366 $generated@@369))))
 :pattern ( ($generated@@265 $generated@@368 $generated@@369) ($generated@@251 $generated@@368))
 :pattern ( ($generated@@265 $generated@@368 $generated@@369) ($generated@@251 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@330 (type $generated@@370))))
(let (($generated@@372 ($generated@@329 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@328 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@327 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@326 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@330 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@91 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@330 (type $generated@@377))))
(let (($generated@@379 ($generated@@329 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@328 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@327 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@96 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@348 (type $generated@@381))))
(let (($generated@@383 ($generated@@347 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@346 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@345 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@344 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@348 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@91 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@348 (type $generated@@388))))
(let (($generated@@390 ($generated@@347 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@346 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@345 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@96 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@393) $generated@@68)) (= ($generated@@83 $generated@@392 ($generated@@190 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@154) (< 0 ($generated ($generated@@96 $generated@@392 $generated@@394)))) ($generated@@254 $generated@@394 $generated@@393))
 :pattern ( ($generated@@96 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@83 $generated@@392 ($generated@@190 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@395 ($generated@@268 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@96 $generated@@395 $generated@@398))) ($generated@@284 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@96 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@89 $generated@@395 ($generated@@268 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@399 ($generated@@273 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@154) ($generated@@0 ($generated@@96 $generated@@399 $generated@@402))) ($generated@@284 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@96 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@89 $generated@@399 ($generated@@273 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@96 ($generated@@321 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@96 ($generated@@321 $generated@@404) $generated@@403)))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@91 $generated@@154 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@330 (type $generated@@408))))
(let (($generated@@410 ($generated@@329 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@91 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@412) $generated@@154)) (= ($generated@@0 ($generated@@96 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@411) ($generated@@181 ($generated@@157 $generated@@81 $generated@@412)))) (= ($generated@@96 ($generated@@406 $generated@@411) ($generated@@181 ($generated@@157 $generated@@81 $generated@@412))) ($generated@@182 ($generated@@157 $generated@@81 $generated@@412))))))
 :pattern ( ($generated@@96 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@91 $generated@@154 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@348 (type $generated@@416))))
(let (($generated@@418 ($generated@@347 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@91 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@420) $generated@@154)) (= ($generated@@0 ($generated@@96 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@419) ($generated@@181 ($generated@@157 $generated@@81 $generated@@420)))) (= ($generated@@96 ($generated@@414 $generated@@419) ($generated@@181 ($generated@@157 $generated@@81 $generated@@420))) ($generated@@182 ($generated@@157 $generated@@81 $generated@@420))))))
 :pattern ( ($generated@@96 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@329 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@328 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@96 ($generated@@374 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@96 ($generated@@406 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@421) $generated@@425))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@96 ($generated@@374 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@347 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@346 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@96 ($generated@@385 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@96 ($generated@@414 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@426) $generated@@430))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@96 ($generated@@385 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@153 $generated@@154)) (= (type $generated@@434) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@261 $generated@@434)) (= ($generated@@89 ($generated@@152 $generated@@433) $generated@@84 $generated@@434) ($generated@@89 $generated@@433 ($generated@@431 $generated@@45) $generated@@434)))
 :pattern ( ($generated@@89 ($generated@@152 $generated@@433) $generated@@84 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@438) $generated@@442))) (and ($generated@@284 ($generated@@96 ($generated@@406 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@284 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@438) $generated@@442))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@89 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@68)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@446) $generated@@450))) (and ($generated@@284 ($generated@@96 ($generated@@414 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@284 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@446) $generated@@450))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@89 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@158 (type $generated@@451))))
 (=> (and (and (= (type $generated@@451) ($generated@@153 $generated@@453)) (= (type $generated@@452) ($generated@@153 $generated@@453))) ($generated@@293 $generated@@451 $generated@@452)) (= $generated@@451 $generated@@452)))
 :pattern ( ($generated@@293 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@81) ($generated@@83 $generated@@454 $generated@@84)) (or ($generated@@251 $generated@@454) ($generated@@281 $generated@@454)))
 :pattern ( ($generated@@281 $generated@@454) ($generated@@83 $generated@@454 $generated@@84))
 :pattern ( ($generated@@251 $generated@@454) ($generated@@83 $generated@@454 $generated@@84))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@455) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@456) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@457) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@455 $generated@@457))) (and ($generated@@147 $generated@@455 $generated@@456) ($generated@@147 $generated@@456 $generated@@457))) ($generated@@147 $generated@@455 $generated@@457))
 :pattern ( ($generated@@147 $generated@@455 $generated@@456) ($generated@@147 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@91 $generated@@459 $generated@@4))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@348 (type $generated@@460))))
(let (($generated@@462 ($generated@@347 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@346 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@345 $generated@@462 $generated@@461)) (= ($generated@@344 $generated@@460) ($generated@@458 $generated@@462))))))
 :pattern ( ($generated@@344 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@348 (type $generated@@463))))
(let (($generated@@465 ($generated@@347 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@346 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@345 $generated@@465 $generated@@464)) (= ($generated@@385 $generated@@463) ($generated@@458 $generated@@464))))))
 :pattern ( ($generated@@385 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@348 (type $generated@@466))))
(let (($generated@@468 ($generated@@347 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@346 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@345 $generated@@468 $generated@@467)) (= ($generated@@413 $generated@@466) ($generated@@458 $generated@@154))))))
 :pattern ( ($generated@@413 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@330 (type $generated@@469))))
(let (($generated@@471 ($generated@@329 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@328 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@327 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) ($generated@@0 ($generated@@96 ($generated@@405 $generated@@469) ($generated@@307 ($generated@@253 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@405 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@348 (type $generated@@474))))
(let (($generated@@476 ($generated@@347 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@346 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@345 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@154) (= (type $generated@@478) $generated@@154)) ($generated@@0 ($generated@@96 ($generated@@413 $generated@@474) ($generated@@307 ($generated@@253 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@413 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@154) ($generated@@254 $generated@@479 $generated@@46)) (and (= ($generated@@307 ($generated@@157 $generated@@2 $generated@@479)) $generated@@479) ($generated@@83 ($generated@@157 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@254 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@154) ($generated@@254 $generated@@480 $generated@@47)) (and (= ($generated@@307 ($generated@@157 $generated@@3 $generated@@480)) $generated@@480) ($generated@@83 ($generated@@157 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@254 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) ($generated@@254 $generated@@481 $generated@@44)) (and (= ($generated@@307 ($generated@@157 $generated@@4 $generated@@481)) $generated@@481) ($generated@@83 ($generated@@157 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@254 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 20))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) ($generated@@254 $generated@@483 $generated@@45)) (and (= ($generated@@307 ($generated@@157 $generated@@482 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@157 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@254 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@254 ($generated@@307 $generated@@484) $generated@@485) ($generated@@83 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@254 ($generated@@307 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@94 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@91 $generated@@487 $generated@@2)) (<= 0 ($generated@@320 $generated@@486))))
 :pattern ( ($generated@@320 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@158 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@153 $generated@@489)) (<= 0 ($generated@@155 $generated@@488))))
 :pattern ( ($generated@@155 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@435 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@435 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@435 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@435 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@443 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@443 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@443 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@443 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@76 ($generated@@443 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@443 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) (= (type $generated@@511) $generated@@154)) (= ($generated@@187 ($generated@@253 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@253 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@174 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@174 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@174 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@174 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@154)) (= ($generated@@181 ($generated@@253 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@253 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@154)) (= ($generated@@182 ($generated@@253 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@253 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@153 $generated@@154)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@524 ($generated@@431 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@155 $generated@@524))) ($generated@@284 ($generated@@151 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@151 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@89 $generated@@524 ($generated@@431 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@90 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@90 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@268 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@268 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@273 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@273 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@273 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@190 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@190 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@190 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@431 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@431 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@431 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@431 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) ($generated@@153 $generated@@154)) (= ($generated@@187 ($generated@@152 $generated@@546)) $generated@@63))
 :pattern ( ($generated@@152 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) ($generated@@153 $generated@@154)) (= ($generated@@366 ($generated@@152 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@152 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
(= ($generated@@157 $generated@@549 ($generated@@307 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@307 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@83 $generated@@550 ($generated@@435 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@550) $generated@@553))) (and ($generated@@254 ($generated@@96 ($generated@@406 $generated@@550) $generated@@553) $generated@@552) ($generated@@254 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@550) $generated@@553))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@83 $generated@@550 ($generated@@435 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) (= ($generated@@83 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@554) $generated@@557))) (and ($generated@@254 ($generated@@96 ($generated@@414 $generated@@554) $generated@@557) $generated@@556) ($generated@@254 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@554) $generated@@557))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@83 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@154)) (< ($generated@@558 $generated@@559) ($generated@@156 ($generated@@253 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@253 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@154)) (< ($generated@@558 $generated@@562) ($generated@@156 ($generated@@253 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@253 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) ($generated@@254 $generated@@563 ($generated@@435 $generated@@564 $generated@@565))) (and (= ($generated@@307 ($generated@@157 ($generated@@328 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@83 ($generated@@157 ($generated@@328 $generated@@154 $generated@@154) $generated@@563) ($generated@@435 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@254 $generated@@563 ($generated@@435 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@68)) (= (type $generated@@568) $generated@@68)) ($generated@@254 $generated@@566 ($generated@@443 $generated@@567 $generated@@568))) (and (= ($generated@@307 ($generated@@157 ($generated@@346 $generated@@154 $generated@@154) $generated@@566)) $generated@@566) ($generated@@83 ($generated@@157 ($generated@@346 $generated@@154 $generated@@154) $generated@@566) ($generated@@443 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@254 $generated@@566 ($generated@@443 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@154)) ($generated@@254 $generated@@571 ($generated@@174 $generated@@569 $generated@@570))) (and (= ($generated@@307 ($generated@@157 $generated@@81 $generated@@571)) $generated@@571) ($generated@@83 ($generated@@157 $generated@@81 $generated@@571) ($generated@@174 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@254 $generated@@571 ($generated@@174 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) ($generated@@153 $generated@@154)) (< ($generated@@572 $generated@@573) ($generated@@156 ($generated@@152 $generated@@573))))
 :pattern ( ($generated@@152 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@96 ($generated@@458 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@96 ($generated@@458 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@73)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@68)) (and (= ($generated@@76 ($generated@@174 $generated@@578 $generated@@579)) $generated@@62) (= ($generated@@576 ($generated@@174 $generated@@578 $generated@@579)) $generated@@66)))
 :pattern ( ($generated@@174 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@81) (= ($generated@@558 ($generated@@307 $generated@@580)) ($generated@@156 $generated@@580)))
 :pattern ( ($generated@@558 ($generated@@307 $generated@@580)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@81) (or ($generated@@82 $generated@@581) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@581 $generated@@84)))) (= ($generated@@79 $generated@@581) $generated@@581))
 :pattern ( ($generated@@79 $generated@@581))
))))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@154) ($generated@@254 $generated@@582 ($generated@@90 0))) (and (= ($generated@@307 ($generated@@157 $generated@@2 $generated@@582)) $generated@@582) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@582) ($generated@@90 0))))
 :pattern ( ($generated@@254 $generated@@582 ($generated@@90 0)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@154) (= (type $generated@@584) $generated@@68)) ($generated@@254 $generated@@583 ($generated@@268 $generated@@584))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@583)) $generated@@583) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@583) ($generated@@268 $generated@@584))))
 :pattern ( ($generated@@254 $generated@@583 ($generated@@268 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@154) (= (type $generated@@586) $generated@@68)) ($generated@@254 $generated@@585 ($generated@@273 $generated@@586))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@585) ($generated@@273 $generated@@586))))
 :pattern ( ($generated@@254 $generated@@585 ($generated@@273 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@154) (= (type $generated@@588) $generated@@68)) ($generated@@254 $generated@@587 ($generated@@190 $generated@@588))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@2) $generated@@587)) $generated@@587) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@2) $generated@@587) ($generated@@190 $generated@@588))))
 :pattern ( ($generated@@254 $generated@@587 ($generated@@190 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@154) (= (type $generated@@590) $generated@@68)) ($generated@@254 $generated@@589 ($generated@@431 $generated@@590))) (and (= ($generated@@307 ($generated@@157 ($generated@@153 $generated@@154) $generated@@589)) $generated@@589) ($generated@@83 ($generated@@157 ($generated@@153 $generated@@154) $generated@@589) ($generated@@431 $generated@@590))))
 :pattern ( ($generated@@254 $generated@@589 ($generated@@431 $generated@@590)))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@81) (or ($generated@@171 $generated@@591) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@591 $generated@@84)))) (= ($generated@@170 $generated@@591) ($generated@@251 $generated@@591)))
 :pattern ( ($generated@@170 $generated@@591))
))))
(assert (= ($generated@@76 $generated@@84) $generated@@64))
(assert (= ($generated@@576 $generated@@84) $generated@@67))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@592 ($generated@@190 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@154) (< 0 ($generated ($generated@@96 $generated@@592 $generated@@595)))) ($generated@@284 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@96 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@89 $generated@@592 ($generated@@190 $generated@@593) $generated@@594))
)))
(assert (= $generated@@188 ($generated@@80 $generated@@188)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) ($generated@@153 $generated@@154)) (= ($generated@@83 ($generated@@152 $generated@@596) $generated@@84) ($generated@@83 $generated@@596 ($generated@@431 $generated@@45))))
 :pattern ( ($generated@@83 ($generated@@152 $generated@@596) $generated@@84))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@598) (and ($generated@@251 $generated@@597) ($generated@@89 $generated@@597 $generated@@84 $generated@@598)))) ($generated@@89 ($generated@@366 $generated@@597) ($generated@@431 $generated@@45) $generated@@598))
 :pattern ( ($generated@@89 ($generated@@366 $generated@@597) ($generated@@431 $generated@@45) $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@81) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@601) (and ($generated@@173 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@68) ($generated@@89 $generated@@599 ($generated@@174 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@89 $generated@@599 ($generated@@174 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@284 ($generated@@181 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@284 ($generated@@181 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@605) (and ($generated@@173 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@68) ($generated@@89 $generated@@603 ($generated@@174 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@89 $generated@@603 ($generated@@174 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@284 ($generated@@182 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@284 ($generated@@182 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@154) (= (type $generated@@608) $generated@@154)) (= ($generated@@253 ($generated@@80 $generated@@607) ($generated@@80 $generated@@608)) ($generated@@80 ($generated@@253 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@253 ($generated@@80 $generated@@607) ($generated@@80 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@278 $generated@@609))) ($generated@@80 ($generated@@307 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@278 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) ($generated@@153 $generated@@154)) (= ($generated@@152 ($generated@@80 $generated@@610)) ($generated@@80 ($generated@@152 $generated@@610))))
 :pattern ( ($generated@@152 ($generated@@80 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@307 ($generated@@80 $generated@@611)) ($generated@@80 ($generated@@307 $generated@@611)))
 :pattern ( ($generated@@307 ($generated@@80 $generated@@611)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@81) (or ($generated@@82 $generated@@612) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@612 $generated@@84)))) ($generated@@83 ($generated@@79 $generated@@612) $generated@@84))
 :pattern ( ($generated@@79 $generated@@612))
))))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@158 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@153 $generated@@614)) (= ($generated@@155 $generated@@613) 0)) (= $generated@@613 ($generated@@301 $generated@@614))))
 :pattern ( ($generated@@155 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@91 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@320 ($generated@@97 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@320 $generated@@615) ($generated ($generated@@96 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@320 ($generated@@97 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@620) $generated@@2)) ($generated@@89 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@89 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@622) $generated@@3)) ($generated@@89 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@89 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@624) $generated@@4)) ($generated@@89 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@89 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@626) $generated@@482)) ($generated@@89 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@89 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@628) $generated@@154)) ($generated@@89 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@89 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@153 $generated@@154)) (= (type $generated@@630) $generated@@68)) (= ($generated@@83 $generated@@629 ($generated@@431 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@155 $generated@@629))) ($generated@@254 ($generated@@151 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@151 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@83 $generated@@629 ($generated@@431 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@153 $generated@@154)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@155 $generated@@632))) (< ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@632 $generated@@633))) ($generated@@572 $generated@@632))))
 :pattern ( ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) $generated@@68)) ($generated@@83 $generated@@634 ($generated@@435 $generated@@635 $generated@@636))) (and (and ($generated@@83 ($generated@@326 $generated@@634) ($generated@@268 $generated@@635)) ($generated@@83 ($generated@@374 $generated@@634) ($generated@@268 $generated@@636))) ($generated@@83 ($generated@@405 $generated@@634) ($generated@@268 ($generated@@174 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@83 $generated@@634 ($generated@@435 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) $generated@@68)) ($generated@@83 $generated@@637 ($generated@@443 $generated@@638 $generated@@639))) (and (and ($generated@@83 ($generated@@344 $generated@@637) ($generated@@273 $generated@@638)) ($generated@@83 ($generated@@385 $generated@@637) ($generated@@273 $generated@@639))) ($generated@@83 ($generated@@413 $generated@@637) ($generated@@273 ($generated@@174 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@83 $generated@@637 ($generated@@443 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@83 $generated@@640 $generated@@46))
 :pattern ( ($generated@@83 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@83 $generated@@641 $generated@@47))
 :pattern ( ($generated@@83 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@83 $generated@@642 $generated@@44))
 :pattern ( ($generated@@83 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@482) ($generated@@83 $generated@@643 $generated@@45))
 :pattern ( ($generated@@83 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@154) ($generated@@83 $generated@@644 $generated@@48))
 :pattern ( ($generated@@83 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@645) $generated@@81) (= (type $generated@@647) $generated@@81)) (= (type $generated@@650) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@651) $generated@@81)) (= (type $generated@@649) $generated@@81)) (= (type $generated@@653) ($generated@@197 $generated@@92 $generated@@4))) (= (type $generated@@654) $generated@@92)) (= (type $generated@@655) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@656) $generated@@81)) (= (type $generated@@658) $generated@@81)) (= (type $generated@@660) $generated@@81)) (= (type $generated@@661) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@662  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@251 $generated@@645) (= $generated@@646 ($generated@@278 0)))) (=> (=> ($generated@@251 $generated@@645) (= $generated@@646 ($generated@@278 0))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (not ($generated@@251 $generated@@645)) (= $generated@@646 ($generated@@278 42))))))))
(let (($generated@@663  (=> (not ($generated@@170 $generated@@647)) (=> (and (and (= $generated@@648 ($generated@@278 42)) (= $generated@@645 $generated@@649)) (and (= $generated@@646 $generated@@648) (= (ControlFlow 0 5) 2))) $generated@@662))))
(let (($generated@@664  (=> (and (and (and ($generated@@170 $generated@@647) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (and ($generated@@82 $generated@@647) ($generated@@82 $generated@@647))) (and (and (= $generated@@651 ($generated@@79 $generated@@647)) (= $generated@@645 $generated@@651)) (and (= $generated@@646 $generated@@652) (= (ControlFlow 0 4) 2)))) $generated@@662)))
(let (($generated@@665  (=> (= $generated@@653 ($generated@@196 $generated@@654 $generated@@655 $generated@@60 false)) (=> (and (= $generated@@649 ($generated@@80 $generated@@188)) (= $generated@@652 ($generated@@278 0))) (=> (and (and (and ($generated@@83 $generated@@656 $generated@@84) ($generated@@89 $generated@@656 $generated@@84 $generated@@655)) (= $generated@@657 ($generated@@278 0))) (and (and ($generated@@83 $generated@@658 $generated@@84) ($generated@@89 $generated@@658 $generated@@84 $generated@@655)) (and ($generated@@261 $generated@@650) ($generated@@659 $generated@@650)))) (=> (and (and (and (and ($generated@@83 $generated@@647 $generated@@84) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (=> (= $generated@@657 ($generated@@278 1)) (not ($generated@@251 $generated@@647)))) (and (=> (= $generated@@657 ($generated@@278 2)) ($generated@@251 $generated@@647)) (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@92) (=> (and (not (= $generated@@666 $generated@@654)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@655 $generated@@666) $generated@@60))) (= ($generated@@96 $generated@@650 $generated@@666) ($generated@@96 $generated@@655 $generated@@666))))
 :pattern ( ($generated@@96 $generated@@650 $generated@@666))
)))) (and (and ($generated@@147 $generated@@655 $generated@@650) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (and ($generated@@171 $generated@@647) ($generated@@171 $generated@@647)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@664) (=> (= (ControlFlow 0 6) 5) $generated@@663))))))))
(let (($generated@@667  (=> (and (and ($generated@@261 $generated@@655) ($generated@@659 $generated@@655)) (and ($generated@@83 $generated@@660 $generated@@84) ($generated@@89 $generated@@660 $generated@@84 $generated@@655))) (=> (and (and (and ($generated@@83 $generated@@661 $generated@@84) ($generated@@89 $generated@@661 $generated@@84 $generated@@655)) true) (and (= 3 $generated@@78) (= (ControlFlow 0 7) 6))) $generated@@665))))
$generated@@667))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U Int) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U) Int)
(declare-fun $generated@@157 (T@T T@U) T@U)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (Int) Int)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@293 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@576 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@85 T@U) ) (! (= (type ($generated@@79 $generated@@85)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(= (type ($generated@@80 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@80 $generated@@86))
))) (= (type $generated@@84) $generated@@68)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@88 T@U) ) (!  (=> (and (= (type $generated@@88) $generated@@81) (or ($generated@@82 ($generated@@80 $generated@@88)) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@88 $generated@@84)))) (= ($generated@@79 ($generated@@80 $generated@@88)) ($generated@@80 $generated@@88)))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@88)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@71 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@71 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@68)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (and (and (forall (($generated@@159 T@T) ) (= ($generated@@1 ($generated@@153 $generated@@159)) 15)) (forall (($generated@@160 T@T) ) (! (= ($generated@@158 ($generated@@153 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@153 $generated@@160))
))) (= ($generated@@1 $generated@@154) 16)) (forall (($generated@@161 T@U) ($generated@@162 Int) ) (! (let (($generated@@163 ($generated@@158 (type $generated@@161))))
(= (type ($generated@@151 $generated@@161 $generated@@162)) $generated@@163))
 :pattern ( ($generated@@151 $generated@@161 $generated@@162))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@152 $generated@@164)) $generated@@81)
 :pattern ( ($generated@@152 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@157 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (= (type $generated@@167) ($generated@@153 $generated@@154)) (=> (and (<= 0 $generated@@168) (< $generated@@168 ($generated@@155 $generated@@167))) (< ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@167 $generated@@168))) ($generated@@156 ($generated@@152 $generated@@167)))))
 :pattern ( ($generated@@151 $generated@@167 $generated@@168) ($generated@@152 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@83 $generated@@169 ($generated@@90 0)))
 :pattern ( ($generated@@83 $generated@@169 ($generated@@90 0)))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@81) (or ($generated@@171 $generated@@172) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@172 $generated@@84)))) true)
 :pattern ( ($generated@@170 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@175 $generated@@176)) $generated@@68)
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (and (= (type $generated@@177) $generated@@68) (= (type $generated@@178) $generated@@68)) (= (type $generated@@179) $generated@@81)) ($generated@@83 $generated@@179 ($generated@@174 $generated@@177 $generated@@178))) ($generated@@173 $generated@@179))
 :pattern ( ($generated@@173 $generated@@179) ($generated@@83 $generated@@179 ($generated@@174 $generated@@177 $generated@@178)))
)))
(assert  (and (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@154)
 :pattern ( ($generated@@181 $generated@@183))
)) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@154)
 :pattern ( ($generated@@182 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@81) (= (type $generated@@186) $generated@@81)) true) (= ($generated@@180 $generated@@185 $generated@@186)  (and (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)) (= ($generated@@182 $generated@@185) ($generated@@182 $generated@@186)))))
 :pattern ( ($generated@@180 $generated@@185 $generated@@186))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@72)
 :pattern ( ($generated@@187 $generated@@189))
)) (= (type $generated@@188) $generated@@81)))
(assert (= ($generated@@187 $generated@@188) $generated@@65))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@68)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@194) $generated@@68)) ($generated@@83 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@83 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@92 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@71 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@92) (= (type $generated@@245) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@246) ($generated@@70 $generated@@4))) (= (type $generated@@248) $generated@@92)) (= (type $generated@@249) ($generated@@70 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@81) (or ($generated@@171 ($generated@@80 $generated@@252)) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@252 $generated@@84)))) (= ($generated@@170 ($generated@@80 $generated@@252)) ($generated@@0 ($generated@@80 ($generated@@11 ($generated@@251 ($generated@@80 $generated@@252)))))))
 :weight 3
 :pattern ( ($generated@@170 ($generated@@80 $generated@@252)))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@255 $generated@@256)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) $generated@@68)) (= (type $generated@@259) $generated@@154)) (= (type $generated@@260) $generated@@154)) (= ($generated@@83 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258))  (and ($generated@@254 $generated@@259 $generated@@257) ($generated@@254 $generated@@260 $generated@@258))))
 :pattern ( ($generated@@83 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258)))
)))
(assert ($generated@@83 $generated@@188 $generated@@84))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@91 $generated@@92 $generated@@93)) ($generated@@261 $generated@@262)) ($generated@@89 $generated@@188 $generated@@84 $generated@@262))
 :pattern ( ($generated@@89 $generated@@188 $generated@@84 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@81) (= (type $generated@@264) $generated@@81)) (= ($generated@@180 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@180 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@81) (= (type $generated@@267) $generated@@81)) (= ($generated@@265 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@83 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@154) ($generated@@0 ($generated@@96 $generated@@270 $generated@@272))) ($generated@@254 $generated@@272 $generated@@271))
 :pattern ( ($generated@@96 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@83 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@68)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@276) $generated@@68)) (= ($generated@@83 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@154) ($generated@@0 ($generated@@96 $generated@@275 $generated@@277))) ($generated@@254 $generated@@277 $generated@@276))
 :pattern ( ($generated@@96 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@83 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 Int) ) (! (= ($generated@@278 $generated@@279) $generated@@279)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@80 $generated@@280) $generated@@280)
 :pattern ( ($generated@@80 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@81) (= (type $generated@@283) $generated@@81)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@265 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@265 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@265 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@154)) (= (type $generated@@288) $generated@@154)) (= (type $generated@@289) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@261 $generated@@289)) (= ($generated@@89 ($generated@@253 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@89 ($generated@@253 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@81) (= ($generated@@173 $generated@@290) (= ($generated@@187 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@173 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@81) (= ($generated@@251 $generated@@291) (= ($generated@@187 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@251 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@81) (= ($generated@@281 $generated@@292) (= ($generated@@187 $generated@@292) $generated@@65)))
 :pattern ( ($generated@@281 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@158 (type $generated@@294))))
 (=> (and (= (type $generated@@294) ($generated@@153 $generated@@296)) (= (type $generated@@295) ($generated@@153 $generated@@296))) (= ($generated@@293 $generated@@294 $generated@@295)  (and (= ($generated@@155 $generated@@294) ($generated@@155 $generated@@295)) (forall (($generated@@297 Int) ) (!  (=> (and (<= 0 $generated@@297) (< $generated@@297 ($generated@@155 $generated@@294))) (= ($generated@@151 $generated@@294 $generated@@297) ($generated@@151 $generated@@295 $generated@@297)))
 :pattern ( ($generated@@151 $generated@@294 $generated@@297))
 :pattern ( ($generated@@151 $generated@@295 $generated@@297))
))))))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@81) ($generated@@173 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@154) (= (type $generated@@300) $generated@@154)) (= $generated@@298 ($generated@@253 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@173 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@153 $generated@@302))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@155 ($generated@@301 $generated@@303)) 0)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@81) ($generated@@281 $generated@@304)) (= $generated@@304 $generated@@188))
 :pattern ( ($generated@@281 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@81) ($generated@@251 $generated@@305)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) ($generated@@153 $generated@@154)) (= $generated@@305 ($generated@@152 $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@251 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@154)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@89 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@313) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@314) $generated@@154)) (= (type $generated@@315) $generated@@68)) ($generated@@147 $generated@@312 $generated@@313)) ($generated@@284 $generated@@314 $generated@@315 $generated@@312)) ($generated@@284 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@147 $generated@@312 $generated@@313) ($generated@@284 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@316) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@317) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@319) $generated@@68)) ($generated@@147 $generated@@316 $generated@@317)) ($generated@@89 $generated@@318 $generated@@319 $generated@@316)) ($generated@@89 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@147 $generated@@316 $generated@@317) ($generated@@89 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@91 $generated@@322 $generated@@2))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@94 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@91 $generated@@324 $generated@@2)) (and (= (= ($generated@@320 $generated@@323) 0) (= $generated@@323 ($generated@@321 $generated@@324))) (=> (not (= ($generated@@320 $generated@@323) 0)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) (< 0 ($generated ($generated@@96 $generated@@323 $generated@@325))))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 18)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@91 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@91 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@94 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@91 $generated@@363 $generated@@2)) (= ($generated@@191 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@96 $generated@@362 $generated@@364))) (<= ($generated ($generated@@96 $generated@@362 $generated@@364)) ($generated@@320 $generated@@362))))
 :pattern ( ($generated@@96 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@191 $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) ($generated@@254 $generated@@365 $generated@@84)) (and (= ($generated@@307 ($generated@@157 $generated@@81 $generated@@365)) $generated@@365) ($generated@@83 ($generated@@157 $generated@@81 $generated@@365) $generated@@84)))
 :pattern ( ($generated@@254 $generated@@365 $generated@@84))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@153 $generated@@154))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@368) $generated@@81) (= (type $generated@@369) $generated@@81)) (and ($generated@@251 $generated@@368) ($generated@@251 $generated@@369))) (= ($generated@@265 $generated@@368 $generated@@369) ($generated@@293 ($generated@@366 $generated@@368) ($generated@@366 $generated@@369))))
 :pattern ( ($generated@@265 $generated@@368 $generated@@369) ($generated@@251 $generated@@368))
 :pattern ( ($generated@@265 $generated@@368 $generated@@369) ($generated@@251 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@330 (type $generated@@370))))
(let (($generated@@372 ($generated@@329 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@328 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@327 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@326 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@330 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@91 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@330 (type $generated@@377))))
(let (($generated@@379 ($generated@@329 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@328 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@327 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@96 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@348 (type $generated@@381))))
(let (($generated@@383 ($generated@@347 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@346 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@345 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@344 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@348 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@91 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@348 (type $generated@@388))))
(let (($generated@@390 ($generated@@347 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@346 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@345 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@96 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@393) $generated@@68)) (= ($generated@@83 $generated@@392 ($generated@@190 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@154) (< 0 ($generated ($generated@@96 $generated@@392 $generated@@394)))) ($generated@@254 $generated@@394 $generated@@393))
 :pattern ( ($generated@@96 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@83 $generated@@392 ($generated@@190 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@395 ($generated@@268 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@96 $generated@@395 $generated@@398))) ($generated@@284 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@96 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@89 $generated@@395 ($generated@@268 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@399 ($generated@@273 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@154) ($generated@@0 ($generated@@96 $generated@@399 $generated@@402))) ($generated@@284 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@96 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@89 $generated@@399 ($generated@@273 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@96 ($generated@@321 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@96 ($generated@@321 $generated@@404) $generated@@403)))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@91 $generated@@154 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@330 (type $generated@@408))))
(let (($generated@@410 ($generated@@329 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@91 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@412) $generated@@154)) (= ($generated@@0 ($generated@@96 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@411) ($generated@@181 ($generated@@157 $generated@@81 $generated@@412)))) (= ($generated@@96 ($generated@@406 $generated@@411) ($generated@@181 ($generated@@157 $generated@@81 $generated@@412))) ($generated@@182 ($generated@@157 $generated@@81 $generated@@412))))))
 :pattern ( ($generated@@96 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@91 $generated@@154 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@348 (type $generated@@416))))
(let (($generated@@418 ($generated@@347 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@91 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@420) $generated@@154)) (= ($generated@@0 ($generated@@96 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@419) ($generated@@181 ($generated@@157 $generated@@81 $generated@@420)))) (= ($generated@@96 ($generated@@414 $generated@@419) ($generated@@181 ($generated@@157 $generated@@81 $generated@@420))) ($generated@@182 ($generated@@157 $generated@@81 $generated@@420))))))
 :pattern ( ($generated@@96 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@329 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@328 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@96 ($generated@@374 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@96 ($generated@@406 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@421) $generated@@425))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@96 ($generated@@374 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@347 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@346 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@96 ($generated@@385 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@96 ($generated@@414 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@426) $generated@@430))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@96 ($generated@@385 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@153 $generated@@154)) (= (type $generated@@434) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@261 $generated@@434)) (= ($generated@@89 ($generated@@152 $generated@@433) $generated@@84 $generated@@434) ($generated@@89 $generated@@433 ($generated@@431 $generated@@45) $generated@@434)))
 :pattern ( ($generated@@89 ($generated@@152 $generated@@433) $generated@@84 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@438) $generated@@442))) (and ($generated@@284 ($generated@@96 ($generated@@406 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@284 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@438) $generated@@442))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@89 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@68)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@446) $generated@@450))) (and ($generated@@284 ($generated@@96 ($generated@@414 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@284 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@446) $generated@@450))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@89 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@158 (type $generated@@451))))
 (=> (and (and (= (type $generated@@451) ($generated@@153 $generated@@453)) (= (type $generated@@452) ($generated@@153 $generated@@453))) ($generated@@293 $generated@@451 $generated@@452)) (= $generated@@451 $generated@@452)))
 :pattern ( ($generated@@293 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@81) ($generated@@83 $generated@@454 $generated@@84)) (or ($generated@@251 $generated@@454) ($generated@@281 $generated@@454)))
 :pattern ( ($generated@@281 $generated@@454) ($generated@@83 $generated@@454 $generated@@84))
 :pattern ( ($generated@@251 $generated@@454) ($generated@@83 $generated@@454 $generated@@84))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@455) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@456) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@457) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@455 $generated@@457))) (and ($generated@@147 $generated@@455 $generated@@456) ($generated@@147 $generated@@456 $generated@@457))) ($generated@@147 $generated@@455 $generated@@457))
 :pattern ( ($generated@@147 $generated@@455 $generated@@456) ($generated@@147 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@91 $generated@@459 $generated@@4))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@348 (type $generated@@460))))
(let (($generated@@462 ($generated@@347 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@346 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@345 $generated@@462 $generated@@461)) (= ($generated@@344 $generated@@460) ($generated@@458 $generated@@462))))))
 :pattern ( ($generated@@344 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@348 (type $generated@@463))))
(let (($generated@@465 ($generated@@347 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@346 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@345 $generated@@465 $generated@@464)) (= ($generated@@385 $generated@@463) ($generated@@458 $generated@@464))))))
 :pattern ( ($generated@@385 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@348 (type $generated@@466))))
(let (($generated@@468 ($generated@@347 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@346 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@345 $generated@@468 $generated@@467)) (= ($generated@@413 $generated@@466) ($generated@@458 $generated@@154))))))
 :pattern ( ($generated@@413 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@330 (type $generated@@469))))
(let (($generated@@471 ($generated@@329 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@328 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@327 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) ($generated@@0 ($generated@@96 ($generated@@405 $generated@@469) ($generated@@307 ($generated@@253 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@405 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@348 (type $generated@@474))))
(let (($generated@@476 ($generated@@347 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@346 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@345 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@154) (= (type $generated@@478) $generated@@154)) ($generated@@0 ($generated@@96 ($generated@@413 $generated@@474) ($generated@@307 ($generated@@253 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@413 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@154) ($generated@@254 $generated@@479 $generated@@46)) (and (= ($generated@@307 ($generated@@157 $generated@@2 $generated@@479)) $generated@@479) ($generated@@83 ($generated@@157 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@254 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@154) ($generated@@254 $generated@@480 $generated@@47)) (and (= ($generated@@307 ($generated@@157 $generated@@3 $generated@@480)) $generated@@480) ($generated@@83 ($generated@@157 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@254 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) ($generated@@254 $generated@@481 $generated@@44)) (and (= ($generated@@307 ($generated@@157 $generated@@4 $generated@@481)) $generated@@481) ($generated@@83 ($generated@@157 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@254 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 20))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) ($generated@@254 $generated@@483 $generated@@45)) (and (= ($generated@@307 ($generated@@157 $generated@@482 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@157 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@254 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@254 ($generated@@307 $generated@@484) $generated@@485) ($generated@@83 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@254 ($generated@@307 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@94 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@91 $generated@@487 $generated@@2)) (<= 0 ($generated@@320 $generated@@486))))
 :pattern ( ($generated@@320 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@158 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@153 $generated@@489)) (<= 0 ($generated@@155 $generated@@488))))
 :pattern ( ($generated@@155 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@435 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@435 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@435 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@435 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@443 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@443 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@443 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@443 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@76 ($generated@@443 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@443 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) (= (type $generated@@511) $generated@@154)) (= ($generated@@187 ($generated@@253 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@253 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@174 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@174 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@174 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@174 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@154)) (= ($generated@@181 ($generated@@253 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@253 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@154)) (= ($generated@@182 ($generated@@253 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@253 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@153 $generated@@154)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@524 ($generated@@431 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@155 $generated@@524))) ($generated@@284 ($generated@@151 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@151 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@89 $generated@@524 ($generated@@431 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@90 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@90 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@268 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@268 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@273 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@273 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@273 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@190 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@190 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@190 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@431 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@431 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@431 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@431 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) ($generated@@153 $generated@@154)) (= ($generated@@187 ($generated@@152 $generated@@546)) $generated@@63))
 :pattern ( ($generated@@152 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) ($generated@@153 $generated@@154)) (= ($generated@@366 ($generated@@152 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@152 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
(= ($generated@@157 $generated@@549 ($generated@@307 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@307 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@83 $generated@@550 ($generated@@435 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@550) $generated@@553))) (and ($generated@@254 ($generated@@96 ($generated@@406 $generated@@550) $generated@@553) $generated@@552) ($generated@@254 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@550) $generated@@553))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@83 $generated@@550 ($generated@@435 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) (= ($generated@@83 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@554) $generated@@557))) (and ($generated@@254 ($generated@@96 ($generated@@414 $generated@@554) $generated@@557) $generated@@556) ($generated@@254 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@554) $generated@@557))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@83 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@154)) (< ($generated@@558 $generated@@559) ($generated@@156 ($generated@@253 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@253 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@154)) (< ($generated@@558 $generated@@562) ($generated@@156 ($generated@@253 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@253 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) ($generated@@254 $generated@@563 ($generated@@435 $generated@@564 $generated@@565))) (and (= ($generated@@307 ($generated@@157 ($generated@@328 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@83 ($generated@@157 ($generated@@328 $generated@@154 $generated@@154) $generated@@563) ($generated@@435 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@254 $generated@@563 ($generated@@435 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@68)) (= (type $generated@@568) $generated@@68)) ($generated@@254 $generated@@566 ($generated@@443 $generated@@567 $generated@@568))) (and (= ($generated@@307 ($generated@@157 ($generated@@346 $generated@@154 $generated@@154) $generated@@566)) $generated@@566) ($generated@@83 ($generated@@157 ($generated@@346 $generated@@154 $generated@@154) $generated@@566) ($generated@@443 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@254 $generated@@566 ($generated@@443 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@154)) ($generated@@254 $generated@@571 ($generated@@174 $generated@@569 $generated@@570))) (and (= ($generated@@307 ($generated@@157 $generated@@81 $generated@@571)) $generated@@571) ($generated@@83 ($generated@@157 $generated@@81 $generated@@571) ($generated@@174 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@254 $generated@@571 ($generated@@174 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) ($generated@@153 $generated@@154)) (< ($generated@@572 $generated@@573) ($generated@@156 ($generated@@152 $generated@@573))))
 :pattern ( ($generated@@152 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@96 ($generated@@458 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@96 ($generated@@458 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@73)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@68)) (and (= ($generated@@76 ($generated@@174 $generated@@578 $generated@@579)) $generated@@62) (= ($generated@@576 ($generated@@174 $generated@@578 $generated@@579)) $generated@@66)))
 :pattern ( ($generated@@174 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@81) (= ($generated@@558 ($generated@@307 $generated@@580)) ($generated@@156 $generated@@580)))
 :pattern ( ($generated@@558 ($generated@@307 $generated@@580)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@81) (or ($generated@@82 $generated@@581) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@581 $generated@@84)))) (= ($generated@@79 $generated@@581) $generated@@581))
 :pattern ( ($generated@@79 $generated@@581))
))))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@154) ($generated@@254 $generated@@582 ($generated@@90 0))) (and (= ($generated@@307 ($generated@@157 $generated@@2 $generated@@582)) $generated@@582) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@582) ($generated@@90 0))))
 :pattern ( ($generated@@254 $generated@@582 ($generated@@90 0)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@154) (= (type $generated@@584) $generated@@68)) ($generated@@254 $generated@@583 ($generated@@268 $generated@@584))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@583)) $generated@@583) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@583) ($generated@@268 $generated@@584))))
 :pattern ( ($generated@@254 $generated@@583 ($generated@@268 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@154) (= (type $generated@@586) $generated@@68)) ($generated@@254 $generated@@585 ($generated@@273 $generated@@586))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@585) ($generated@@273 $generated@@586))))
 :pattern ( ($generated@@254 $generated@@585 ($generated@@273 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@154) (= (type $generated@@588) $generated@@68)) ($generated@@254 $generated@@587 ($generated@@190 $generated@@588))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@2) $generated@@587)) $generated@@587) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@2) $generated@@587) ($generated@@190 $generated@@588))))
 :pattern ( ($generated@@254 $generated@@587 ($generated@@190 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@154) (= (type $generated@@590) $generated@@68)) ($generated@@254 $generated@@589 ($generated@@431 $generated@@590))) (and (= ($generated@@307 ($generated@@157 ($generated@@153 $generated@@154) $generated@@589)) $generated@@589) ($generated@@83 ($generated@@157 ($generated@@153 $generated@@154) $generated@@589) ($generated@@431 $generated@@590))))
 :pattern ( ($generated@@254 $generated@@589 ($generated@@431 $generated@@590)))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@81) (or ($generated@@171 $generated@@591) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@591 $generated@@84)))) (= ($generated@@170 $generated@@591) ($generated@@251 $generated@@591)))
 :pattern ( ($generated@@170 $generated@@591))
))))
(assert (= ($generated@@76 $generated@@84) $generated@@64))
(assert (= ($generated@@576 $generated@@84) $generated@@67))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@592 ($generated@@190 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@154) (< 0 ($generated ($generated@@96 $generated@@592 $generated@@595)))) ($generated@@284 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@96 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@89 $generated@@592 ($generated@@190 $generated@@593) $generated@@594))
)))
(assert (= $generated@@188 ($generated@@80 $generated@@188)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) ($generated@@153 $generated@@154)) (= ($generated@@83 ($generated@@152 $generated@@596) $generated@@84) ($generated@@83 $generated@@596 ($generated@@431 $generated@@45))))
 :pattern ( ($generated@@83 ($generated@@152 $generated@@596) $generated@@84))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@598) (and ($generated@@251 $generated@@597) ($generated@@89 $generated@@597 $generated@@84 $generated@@598)))) ($generated@@89 ($generated@@366 $generated@@597) ($generated@@431 $generated@@45) $generated@@598))
 :pattern ( ($generated@@89 ($generated@@366 $generated@@597) ($generated@@431 $generated@@45) $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@81) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@601) (and ($generated@@173 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@68) ($generated@@89 $generated@@599 ($generated@@174 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@89 $generated@@599 ($generated@@174 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@284 ($generated@@181 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@284 ($generated@@181 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@605) (and ($generated@@173 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@68) ($generated@@89 $generated@@603 ($generated@@174 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@89 $generated@@603 ($generated@@174 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@284 ($generated@@182 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@284 ($generated@@182 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@154) (= (type $generated@@608) $generated@@154)) (= ($generated@@253 ($generated@@80 $generated@@607) ($generated@@80 $generated@@608)) ($generated@@80 ($generated@@253 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@253 ($generated@@80 $generated@@607) ($generated@@80 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@278 $generated@@609))) ($generated@@80 ($generated@@307 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@278 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) ($generated@@153 $generated@@154)) (= ($generated@@152 ($generated@@80 $generated@@610)) ($generated@@80 ($generated@@152 $generated@@610))))
 :pattern ( ($generated@@152 ($generated@@80 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@307 ($generated@@80 $generated@@611)) ($generated@@80 ($generated@@307 $generated@@611)))
 :pattern ( ($generated@@307 ($generated@@80 $generated@@611)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@81) (or ($generated@@82 $generated@@612) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@612 $generated@@84)))) ($generated@@83 ($generated@@79 $generated@@612) $generated@@84))
 :pattern ( ($generated@@79 $generated@@612))
))))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@158 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@153 $generated@@614)) (= ($generated@@155 $generated@@613) 0)) (= $generated@@613 ($generated@@301 $generated@@614))))
 :pattern ( ($generated@@155 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@91 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@320 ($generated@@97 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@320 $generated@@615) ($generated ($generated@@96 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@320 ($generated@@97 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@620) $generated@@2)) ($generated@@89 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@89 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@622) $generated@@3)) ($generated@@89 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@89 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@624) $generated@@4)) ($generated@@89 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@89 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@626) $generated@@482)) ($generated@@89 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@89 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@628) $generated@@154)) ($generated@@89 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@89 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@153 $generated@@154)) (= (type $generated@@630) $generated@@68)) (= ($generated@@83 $generated@@629 ($generated@@431 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@155 $generated@@629))) ($generated@@254 ($generated@@151 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@151 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@83 $generated@@629 ($generated@@431 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@153 $generated@@154)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@155 $generated@@632))) (< ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@632 $generated@@633))) ($generated@@572 $generated@@632))))
 :pattern ( ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) $generated@@68)) ($generated@@83 $generated@@634 ($generated@@435 $generated@@635 $generated@@636))) (and (and ($generated@@83 ($generated@@326 $generated@@634) ($generated@@268 $generated@@635)) ($generated@@83 ($generated@@374 $generated@@634) ($generated@@268 $generated@@636))) ($generated@@83 ($generated@@405 $generated@@634) ($generated@@268 ($generated@@174 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@83 $generated@@634 ($generated@@435 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) $generated@@68)) ($generated@@83 $generated@@637 ($generated@@443 $generated@@638 $generated@@639))) (and (and ($generated@@83 ($generated@@344 $generated@@637) ($generated@@273 $generated@@638)) ($generated@@83 ($generated@@385 $generated@@637) ($generated@@273 $generated@@639))) ($generated@@83 ($generated@@413 $generated@@637) ($generated@@273 ($generated@@174 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@83 $generated@@637 ($generated@@443 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@83 $generated@@640 $generated@@46))
 :pattern ( ($generated@@83 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@83 $generated@@641 $generated@@47))
 :pattern ( ($generated@@83 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@83 $generated@@642 $generated@@44))
 :pattern ( ($generated@@83 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@482) ($generated@@83 $generated@@643 $generated@@45))
 :pattern ( ($generated@@83 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@154) ($generated@@83 $generated@@644 $generated@@48))
 :pattern ( ($generated@@83 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@645) $generated@@81) (= (type $generated@@647) $generated@@81)) (= (type $generated@@650) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@651) $generated@@81)) (= (type $generated@@649) $generated@@81)) (= (type $generated@@653) ($generated@@197 $generated@@92 $generated@@4))) (= (type $generated@@654) $generated@@92)) (= (type $generated@@655) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@656) $generated@@81)) (= (type $generated@@658) $generated@@81)) (= (type $generated@@660) $generated@@81)) (= (type $generated@@661) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@662  (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@251 $generated@@645))) (=> (not ($generated@@251 $generated@@645)) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@646 ($generated@@278 42)))))))
(let (($generated@@663  (=> (not ($generated@@170 $generated@@647)) (=> (and (and (= $generated@@648 ($generated@@278 42)) (= $generated@@645 $generated@@649)) (and (= $generated@@646 $generated@@648) (= (ControlFlow 0 5) 2))) $generated@@662))))
(let (($generated@@664  (=> (and (and (and ($generated@@170 $generated@@647) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (and ($generated@@82 $generated@@647) ($generated@@82 $generated@@647))) (and (and (= $generated@@651 ($generated@@79 $generated@@647)) (= $generated@@645 $generated@@651)) (and (= $generated@@646 $generated@@652) (= (ControlFlow 0 4) 2)))) $generated@@662)))
(let (($generated@@665  (=> (= $generated@@653 ($generated@@196 $generated@@654 $generated@@655 $generated@@60 false)) (=> (and (= $generated@@649 ($generated@@80 $generated@@188)) (= $generated@@652 ($generated@@278 0))) (=> (and (and (and ($generated@@83 $generated@@656 $generated@@84) ($generated@@89 $generated@@656 $generated@@84 $generated@@655)) (= $generated@@657 ($generated@@278 1))) (and (and ($generated@@83 $generated@@658 $generated@@84) ($generated@@89 $generated@@658 $generated@@84 $generated@@655)) (and ($generated@@261 $generated@@650) ($generated@@659 $generated@@650)))) (=> (and (and (and (and ($generated@@83 $generated@@647 $generated@@84) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (=> (= $generated@@657 ($generated@@278 1)) (not ($generated@@251 $generated@@647)))) (and (=> (= $generated@@657 ($generated@@278 2)) ($generated@@251 $generated@@647)) (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@92) (=> (and (not (= $generated@@666 $generated@@654)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@655 $generated@@666) $generated@@60))) (= ($generated@@96 $generated@@650 $generated@@666) ($generated@@96 $generated@@655 $generated@@666))))
 :pattern ( ($generated@@96 $generated@@650 $generated@@666))
)))) (and (and ($generated@@147 $generated@@655 $generated@@650) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (and ($generated@@171 $generated@@647) ($generated@@171 $generated@@647)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@664) (=> (= (ControlFlow 0 6) 5) $generated@@663))))))))
(let (($generated@@667  (=> (and (and ($generated@@261 $generated@@655) ($generated@@659 $generated@@655)) (and ($generated@@83 $generated@@660 $generated@@84) ($generated@@89 $generated@@660 $generated@@84 $generated@@655))) (=> (and (and (and ($generated@@83 $generated@@661 $generated@@84) ($generated@@89 $generated@@661 $generated@@84 $generated@@655)) true) (and (= 3 $generated@@78) (= (ControlFlow 0 7) 6))) $generated@@665))))
$generated@@667))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 () Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U Int) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@156 (T@U) Int)
(declare-fun $generated@@157 (T@T T@U) T@U)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) T@U)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (Int) Int)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@293 (T@U T@U) Bool)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@320 (T@U) Int)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@576 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@85 T@U) ) (! (= (type ($generated@@79 $generated@@85)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (let (($generated@@87 (type $generated@@86)))
(= (type ($generated@@80 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@80 $generated@@86))
))) (= (type $generated@@84) $generated@@68)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@88 T@U) ) (!  (=> (and (= (type $generated@@88) $generated@@81) (or ($generated@@82 ($generated@@80 $generated@@88)) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@88 $generated@@84)))) (= ($generated@@79 ($generated@@80 $generated@@88)) ($generated@@80 $generated@@88)))
 :weight 3
 :pattern ( ($generated@@79 ($generated@@80 $generated@@88)))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@100 $generated@@101)) 12)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@91 $generated@@104 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@95 (type $generated@@106))))
(= (type ($generated@@96 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@96 $generated@@106 $generated@@107))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (let (($generated@@112 (type $generated@@111)))
(let (($generated@@113 (type $generated@@110)))
(= (type ($generated@@97 $generated@@109 $generated@@110 $generated@@111)) ($generated@@91 $generated@@113 $generated@@112))))
 :pattern ( ($generated@@97 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@95 (type $generated@@114))))
 (=> (= (type $generated@@116) $generated@@117) (= ($generated@@96 ($generated@@97 $generated@@114 $generated@@115 $generated@@116) $generated@@115) $generated@@116)))
 :weight 0
))) (and (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@96 ($generated@@97 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@96 $generated@@119 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@96 $generated@@123 $generated@@125)))
 :weight 0
)))) (= ($generated@@1 $generated@@92) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@71 (type $generated@@127))))
(= (type ($generated@@98 $generated@@126 $generated@@127)) $generated@@128))
 :pattern ( ($generated@@98 $generated@@126 $generated@@127))
))) (= ($generated@@1 $generated@@93) 14)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= (type ($generated@@99 $generated@@129 $generated@@130 $generated@@131)) $generated@@93)
 :pattern ( ($generated@@99 $generated@@129 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (let (($generated@@135 ($generated@@71 (type $generated@@133))))
 (=> (= (type $generated@@134) $generated@@135) (= ($generated@@98 ($generated@@99 $generated@@132 $generated@@133 $generated@@134) $generated@@133) $generated@@134)))
 :weight 0
))) (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@138 $generated@@139) (= ($generated@@98 ($generated@@99 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@98 $generated@@137 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or true (= ($generated@@98 ($generated@@99 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@98 $generated@@141 $generated@@143)))
 :weight 0
)))) (forall (($generated@@144 Int) ) (! (= (type ($generated@@90 $generated@@144)) $generated@@68)
 :pattern ( ($generated@@90 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@2) (= (type $generated@@146) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
 :pattern ( ($generated@@89 $generated@@145 ($generated@@90 0) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@149) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@147 $generated@@148 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@92) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@148 $generated@@150) $generated@@60))) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60)))
 :pattern ( ($generated@@98 ($generated@@96 $generated@@149 $generated@@150) $generated@@60))
)))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (and (and (forall (($generated@@159 T@T) ) (= ($generated@@1 ($generated@@153 $generated@@159)) 15)) (forall (($generated@@160 T@T) ) (! (= ($generated@@158 ($generated@@153 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@153 $generated@@160))
))) (= ($generated@@1 $generated@@154) 16)) (forall (($generated@@161 T@U) ($generated@@162 Int) ) (! (let (($generated@@163 ($generated@@158 (type $generated@@161))))
(= (type ($generated@@151 $generated@@161 $generated@@162)) $generated@@163))
 :pattern ( ($generated@@151 $generated@@161 $generated@@162))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@152 $generated@@164)) $generated@@81)
 :pattern ( ($generated@@152 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@U) ) (! (= (type ($generated@@157 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (= (type $generated@@167) ($generated@@153 $generated@@154)) (=> (and (<= 0 $generated@@168) (< $generated@@168 ($generated@@155 $generated@@167))) (< ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@167 $generated@@168))) ($generated@@156 ($generated@@152 $generated@@167)))))
 :pattern ( ($generated@@151 $generated@@167 $generated@@168) ($generated@@152 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> (= (type $generated@@169) $generated@@2) ($generated@@83 $generated@@169 ($generated@@90 0)))
 :pattern ( ($generated@@83 $generated@@169 ($generated@@90 0)))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@81) (or ($generated@@171 $generated@@172) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@172 $generated@@84)))) true)
 :pattern ( ($generated@@170 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@175 $generated@@176)) $generated@@68)
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (and (= (type $generated@@177) $generated@@68) (= (type $generated@@178) $generated@@68)) (= (type $generated@@179) $generated@@81)) ($generated@@83 $generated@@179 ($generated@@174 $generated@@177 $generated@@178))) ($generated@@173 $generated@@179))
 :pattern ( ($generated@@173 $generated@@179) ($generated@@83 $generated@@179 ($generated@@174 $generated@@177 $generated@@178)))
)))
(assert  (and (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@154)
 :pattern ( ($generated@@181 $generated@@183))
)) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@154)
 :pattern ( ($generated@@182 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@81) (= (type $generated@@186) $generated@@81)) true) (= ($generated@@180 $generated@@185 $generated@@186)  (and (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)) (= ($generated@@182 $generated@@185) ($generated@@182 $generated@@186)))))
 :pattern ( ($generated@@180 $generated@@185 $generated@@186))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@72)
 :pattern ( ($generated@@187 $generated@@189))
)) (= (type $generated@@188) $generated@@81)))
(assert (= ($generated@@187 $generated@@188) $generated@@65))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@68)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@194) $generated@@68)) ($generated@@83 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@83 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@92 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@71 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@92) (= (type $generated@@245) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@246) ($generated@@70 $generated@@4))) (= (type $generated@@248) $generated@@92)) (= (type $generated@@249) ($generated@@70 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@81) (or ($generated@@171 ($generated@@80 $generated@@252)) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@252 $generated@@84)))) (= ($generated@@170 ($generated@@80 $generated@@252)) ($generated@@0 ($generated@@80 ($generated@@11 ($generated@@251 ($generated@@80 $generated@@252)))))))
 :weight 3
 :pattern ( ($generated@@170 ($generated@@80 $generated@@252)))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@253 $generated@@255 $generated@@256)) $generated@@81)
 :pattern ( ($generated@@253 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) $generated@@68)) (= (type $generated@@259) $generated@@154)) (= (type $generated@@260) $generated@@154)) (= ($generated@@83 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258))  (and ($generated@@254 $generated@@259 $generated@@257) ($generated@@254 $generated@@260 $generated@@258))))
 :pattern ( ($generated@@83 ($generated@@253 $generated@@259 $generated@@260) ($generated@@174 $generated@@257 $generated@@258)))
)))
(assert ($generated@@83 $generated@@188 $generated@@84))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@91 $generated@@92 $generated@@93)) ($generated@@261 $generated@@262)) ($generated@@89 $generated@@188 $generated@@84 $generated@@262))
 :pattern ( ($generated@@89 $generated@@188 $generated@@84 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@81) (= (type $generated@@264) $generated@@81)) (= ($generated@@180 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@180 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@81) (= (type $generated@@267) $generated@@81)) (= ($generated@@265 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@265 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@83 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@154) ($generated@@0 ($generated@@96 $generated@@270 $generated@@272))) ($generated@@254 $generated@@272 $generated@@271))
 :pattern ( ($generated@@96 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@83 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@68)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@276) $generated@@68)) (= ($generated@@83 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@154) ($generated@@0 ($generated@@96 $generated@@275 $generated@@277))) ($generated@@254 $generated@@277 $generated@@276))
 :pattern ( ($generated@@96 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@83 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 Int) ) (! (= ($generated@@278 $generated@@279) $generated@@279)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@80 $generated@@280) $generated@@280)
 :pattern ( ($generated@@80 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@81) (= (type $generated@@283) $generated@@81)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@265 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@265 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@265 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@154)) (= (type $generated@@288) $generated@@154)) (= (type $generated@@289) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@261 $generated@@289)) (= ($generated@@89 ($generated@@253 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@89 ($generated@@253 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@81) (= ($generated@@173 $generated@@290) (= ($generated@@187 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@173 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@81) (= ($generated@@251 $generated@@291) (= ($generated@@187 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@251 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@81) (= ($generated@@281 $generated@@292) (= ($generated@@187 $generated@@292) $generated@@65)))
 :pattern ( ($generated@@281 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@158 (type $generated@@294))))
 (=> (and (= (type $generated@@294) ($generated@@153 $generated@@296)) (= (type $generated@@295) ($generated@@153 $generated@@296))) (= ($generated@@293 $generated@@294 $generated@@295)  (and (= ($generated@@155 $generated@@294) ($generated@@155 $generated@@295)) (forall (($generated@@297 Int) ) (!  (=> (and (<= 0 $generated@@297) (< $generated@@297 ($generated@@155 $generated@@294))) (= ($generated@@151 $generated@@294 $generated@@297) ($generated@@151 $generated@@295 $generated@@297)))
 :pattern ( ($generated@@151 $generated@@294 $generated@@297))
 :pattern ( ($generated@@151 $generated@@295 $generated@@297))
))))))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@81) ($generated@@173 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@154) (= (type $generated@@300) $generated@@154)) (= $generated@@298 ($generated@@253 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@173 $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@153 $generated@@302))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@155 ($generated@@301 $generated@@303)) 0)
 :pattern ( ($generated@@301 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@81) ($generated@@281 $generated@@304)) (= $generated@@304 $generated@@188))
 :pattern ( ($generated@@281 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@81) ($generated@@251 $generated@@305)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) ($generated@@153 $generated@@154)) (= $generated@@305 ($generated@@152 $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@251 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@154)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@68) (= (type $generated@@311) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@89 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@284 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@313) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@314) $generated@@154)) (= (type $generated@@315) $generated@@68)) ($generated@@147 $generated@@312 $generated@@313)) ($generated@@284 $generated@@314 $generated@@315 $generated@@312)) ($generated@@284 $generated@@314 $generated@@315 $generated@@313))
 :pattern ( ($generated@@147 $generated@@312 $generated@@313) ($generated@@284 $generated@@314 $generated@@315 $generated@@312))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@316) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@317) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@319) $generated@@68)) ($generated@@147 $generated@@316 $generated@@317)) ($generated@@89 $generated@@318 $generated@@319 $generated@@316)) ($generated@@89 $generated@@318 $generated@@319 $generated@@317))
 :pattern ( ($generated@@147 $generated@@316 $generated@@317) ($generated@@89 $generated@@318 $generated@@319 $generated@@316))
)))
(assert (forall (($generated@@322 T@T) ) (! (= (type ($generated@@321 $generated@@322)) ($generated@@91 $generated@@322 $generated@@2))
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@94 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@91 $generated@@324 $generated@@2)) (and (= (= ($generated@@320 $generated@@323) 0) (= $generated@@323 ($generated@@321 $generated@@324))) (=> (not (= ($generated@@320 $generated@@323) 0)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) (< 0 ($generated ($generated@@96 $generated@@323 $generated@@325))))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@320 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 18)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@91 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@96 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@91 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@96 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@94 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@91 $generated@@363 $generated@@2)) (= ($generated@@191 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@96 $generated@@362 $generated@@364))) (<= ($generated ($generated@@96 $generated@@362 $generated@@364)) ($generated@@320 $generated@@362))))
 :pattern ( ($generated@@96 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@191 $generated@@362))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@154) ($generated@@254 $generated@@365 $generated@@84)) (and (= ($generated@@307 ($generated@@157 $generated@@81 $generated@@365)) $generated@@365) ($generated@@83 ($generated@@157 $generated@@81 $generated@@365) $generated@@84)))
 :pattern ( ($generated@@254 $generated@@365 $generated@@84))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@153 $generated@@154))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@368) $generated@@81) (= (type $generated@@369) $generated@@81)) (and ($generated@@251 $generated@@368) ($generated@@251 $generated@@369))) (= ($generated@@265 $generated@@368 $generated@@369) ($generated@@293 ($generated@@366 $generated@@368) ($generated@@366 $generated@@369))))
 :pattern ( ($generated@@265 $generated@@368 $generated@@369) ($generated@@251 $generated@@368))
 :pattern ( ($generated@@265 $generated@@368 $generated@@369) ($generated@@251 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@330 (type $generated@@370))))
(let (($generated@@372 ($generated@@329 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@328 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@327 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@326 $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@330 (type $generated@@375))))
(= (type ($generated@@374 $generated@@375)) ($generated@@91 $generated@@376 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@330 (type $generated@@377))))
(let (($generated@@379 ($generated@@329 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@328 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@327 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@378) ($generated@@0 ($generated@@96 ($generated@@374 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@374 $generated@@377))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@348 (type $generated@@381))))
(let (($generated@@383 ($generated@@347 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@346 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@345 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@344 $generated@@381))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@348 (type $generated@@386))))
(= (type ($generated@@385 $generated@@386)) ($generated@@91 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@385 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@348 (type $generated@@388))))
(let (($generated@@390 ($generated@@347 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@346 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@345 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@389) ($generated@@0 ($generated@@96 ($generated@@385 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@385 $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@393) $generated@@68)) (= ($generated@@83 $generated@@392 ($generated@@190 $generated@@393)) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@154) (< 0 ($generated ($generated@@96 $generated@@392 $generated@@394)))) ($generated@@254 $generated@@394 $generated@@393))
 :pattern ( ($generated@@96 $generated@@392 $generated@@394))
))))
 :pattern ( ($generated@@83 $generated@@392 ($generated@@190 $generated@@393)))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@395 ($generated@@268 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@96 $generated@@395 $generated@@398))) ($generated@@284 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@96 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@89 $generated@@395 ($generated@@268 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@91 $generated@@154 $generated@@4)) (= (type $generated@@400) $generated@@68)) (= (type $generated@@401) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@399 ($generated@@273 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@154) ($generated@@0 ($generated@@96 $generated@@399 $generated@@402))) ($generated@@284 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@96 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@89 $generated@@399 ($generated@@273 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(= ($generated ($generated@@96 ($generated@@321 $generated@@404) $generated@@403)) 0))
 :pattern ( (let (($generated@@404 (type $generated@@403)))
($generated@@96 ($generated@@321 $generated@@404) $generated@@403)))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@91 $generated@@154 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@330 (type $generated@@408))))
(let (($generated@@410 ($generated@@329 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@91 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@412) $generated@@154)) (= ($generated@@0 ($generated@@96 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@411) ($generated@@181 ($generated@@157 $generated@@81 $generated@@412)))) (= ($generated@@96 ($generated@@406 $generated@@411) ($generated@@181 ($generated@@157 $generated@@81 $generated@@412))) ($generated@@182 ($generated@@157 $generated@@81 $generated@@412))))))
 :pattern ( ($generated@@96 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert  (and (forall (($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@415)) ($generated@@91 $generated@@154 $generated@@4))
 :pattern ( ($generated@@413 $generated@@415))
)) (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@348 (type $generated@@416))))
(let (($generated@@418 ($generated@@347 (type $generated@@416))))
(= (type ($generated@@414 $generated@@416)) ($generated@@91 $generated@@418 $generated@@417))))
 :pattern ( ($generated@@414 $generated@@416))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@419) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@420) $generated@@154)) (= ($generated@@0 ($generated@@96 ($generated@@413 $generated@@419) $generated@@420))  (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@419) ($generated@@181 ($generated@@157 $generated@@81 $generated@@420)))) (= ($generated@@96 ($generated@@414 $generated@@419) ($generated@@181 ($generated@@157 $generated@@81 $generated@@420))) ($generated@@182 ($generated@@157 $generated@@81 $generated@@420))))))
 :pattern ( ($generated@@96 ($generated@@413 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@329 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@328 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@96 ($generated@@374 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@96 ($generated@@326 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@96 ($generated@@406 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@421) $generated@@425))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@96 ($generated@@374 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@347 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@346 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@96 ($generated@@385 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@96 ($generated@@344 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@96 ($generated@@414 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@426) $generated@@430))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@96 ($generated@@385 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@153 $generated@@154)) (= (type $generated@@434) ($generated@@91 $generated@@92 $generated@@93))) ($generated@@261 $generated@@434)) (= ($generated@@89 ($generated@@152 $generated@@433) $generated@@84 $generated@@434) ($generated@@89 $generated@@433 ($generated@@431 $generated@@45) $generated@@434)))
 :pattern ( ($generated@@89 ($generated@@152 $generated@@433) $generated@@84 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@438) $generated@@442))) (and ($generated@@284 ($generated@@96 ($generated@@406 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@284 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@438) $generated@@442))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@89 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@68)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@446) $generated@@450))) (and ($generated@@284 ($generated@@96 ($generated@@414 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@284 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@446) $generated@@450))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@89 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@158 (type $generated@@451))))
 (=> (and (and (= (type $generated@@451) ($generated@@153 $generated@@453)) (= (type $generated@@452) ($generated@@153 $generated@@453))) ($generated@@293 $generated@@451 $generated@@452)) (= $generated@@451 $generated@@452)))
 :pattern ( ($generated@@293 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@81) ($generated@@83 $generated@@454 $generated@@84)) (or ($generated@@251 $generated@@454) ($generated@@281 $generated@@454)))
 :pattern ( ($generated@@281 $generated@@454) ($generated@@83 $generated@@454 $generated@@84))
 :pattern ( ($generated@@251 $generated@@454) ($generated@@83 $generated@@454 $generated@@84))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@455) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@456) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@457) ($generated@@91 $generated@@92 $generated@@93))) (not (= $generated@@455 $generated@@457))) (and ($generated@@147 $generated@@455 $generated@@456) ($generated@@147 $generated@@456 $generated@@457))) ($generated@@147 $generated@@455 $generated@@457))
 :pattern ( ($generated@@147 $generated@@455 $generated@@456) ($generated@@147 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@91 $generated@@459 $generated@@4))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@348 (type $generated@@460))))
(let (($generated@@462 ($generated@@347 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@346 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@345 $generated@@462 $generated@@461)) (= ($generated@@344 $generated@@460) ($generated@@458 $generated@@462))))))
 :pattern ( ($generated@@344 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@348 (type $generated@@463))))
(let (($generated@@465 ($generated@@347 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@346 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@345 $generated@@465 $generated@@464)) (= ($generated@@385 $generated@@463) ($generated@@458 $generated@@464))))))
 :pattern ( ($generated@@385 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@348 (type $generated@@466))))
(let (($generated@@468 ($generated@@347 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@346 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@345 $generated@@468 $generated@@467)) (= ($generated@@413 $generated@@466) ($generated@@458 $generated@@154))))))
 :pattern ( ($generated@@413 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@330 (type $generated@@469))))
(let (($generated@@471 ($generated@@329 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@328 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@327 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) ($generated@@0 ($generated@@96 ($generated@@405 $generated@@469) ($generated@@307 ($generated@@253 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@405 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@348 (type $generated@@474))))
(let (($generated@@476 ($generated@@347 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@346 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@345 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@154) (= (type $generated@@478) $generated@@154)) ($generated@@0 ($generated@@96 ($generated@@413 $generated@@474) ($generated@@307 ($generated@@253 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@413 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@154) ($generated@@254 $generated@@479 $generated@@46)) (and (= ($generated@@307 ($generated@@157 $generated@@2 $generated@@479)) $generated@@479) ($generated@@83 ($generated@@157 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@254 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@154) ($generated@@254 $generated@@480 $generated@@47)) (and (= ($generated@@307 ($generated@@157 $generated@@3 $generated@@480)) $generated@@480) ($generated@@83 ($generated@@157 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@254 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@154) ($generated@@254 $generated@@481 $generated@@44)) (and (= ($generated@@307 ($generated@@157 $generated@@4 $generated@@481)) $generated@@481) ($generated@@83 ($generated@@157 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@254 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 20))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@154) ($generated@@254 $generated@@483 $generated@@45)) (and (= ($generated@@307 ($generated@@157 $generated@@482 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@157 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@254 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@68) (= ($generated@@254 ($generated@@307 $generated@@484) $generated@@485) ($generated@@83 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@254 ($generated@@307 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@94 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@91 $generated@@487 $generated@@2)) (<= 0 ($generated@@320 $generated@@486))))
 :pattern ( ($generated@@320 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@158 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@153 $generated@@489)) (<= 0 ($generated@@155 $generated@@488))))
 :pattern ( ($generated@@155 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@435 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@435 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@435 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@435 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@443 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@443 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@504 ($generated@@443 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@443 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@76 ($generated@@443 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@443 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@154) (= (type $generated@@511) $generated@@154)) (= ($generated@@187 ($generated@@253 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@253 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@174 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@174 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@174 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@174 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@154)) (= ($generated@@181 ($generated@@253 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@253 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@154) (= (type $generated@@523) $generated@@154)) (= ($generated@@182 ($generated@@253 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@253 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@153 $generated@@154)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@524 ($generated@@431 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@155 $generated@@524))) ($generated@@284 ($generated@@151 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@151 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@89 $generated@@524 ($generated@@431 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@90 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@90 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@268 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@268 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@273 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@273 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@273 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@190 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@190 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@190 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@431 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@431 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@431 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@431 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) ($generated@@153 $generated@@154)) (= ($generated@@187 ($generated@@152 $generated@@546)) $generated@@63))
 :pattern ( ($generated@@152 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) ($generated@@153 $generated@@154)) (= ($generated@@366 ($generated@@152 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@152 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
(= ($generated@@157 $generated@@549 ($generated@@307 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@307 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@83 $generated@@550 ($generated@@435 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@326 $generated@@550) $generated@@553))) (and ($generated@@254 ($generated@@96 ($generated@@406 $generated@@550) $generated@@553) $generated@@552) ($generated@@254 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@96 ($generated@@406 $generated@@550) $generated@@553))
 :pattern ( ($generated@@96 ($generated@@326 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@83 $generated@@550 ($generated@@435 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) (= ($generated@@83 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) ($generated@@0 ($generated@@96 ($generated@@344 $generated@@554) $generated@@557))) (and ($generated@@254 ($generated@@96 ($generated@@414 $generated@@554) $generated@@557) $generated@@556) ($generated@@254 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@96 ($generated@@414 $generated@@554) $generated@@557))
 :pattern ( ($generated@@96 ($generated@@344 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@83 $generated@@554 ($generated@@443 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@154)) (< ($generated@@558 $generated@@559) ($generated@@156 ($generated@@253 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@253 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@154) (= (type $generated@@562) $generated@@154)) (< ($generated@@558 $generated@@562) ($generated@@156 ($generated@@253 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@253 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@154) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) ($generated@@254 $generated@@563 ($generated@@435 $generated@@564 $generated@@565))) (and (= ($generated@@307 ($generated@@157 ($generated@@328 $generated@@154 $generated@@154) $generated@@563)) $generated@@563) ($generated@@83 ($generated@@157 ($generated@@328 $generated@@154 $generated@@154) $generated@@563) ($generated@@435 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@254 $generated@@563 ($generated@@435 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@68)) (= (type $generated@@568) $generated@@68)) ($generated@@254 $generated@@566 ($generated@@443 $generated@@567 $generated@@568))) (and (= ($generated@@307 ($generated@@157 ($generated@@346 $generated@@154 $generated@@154) $generated@@566)) $generated@@566) ($generated@@83 ($generated@@157 ($generated@@346 $generated@@154 $generated@@154) $generated@@566) ($generated@@443 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@254 $generated@@566 ($generated@@443 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@68) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@154)) ($generated@@254 $generated@@571 ($generated@@174 $generated@@569 $generated@@570))) (and (= ($generated@@307 ($generated@@157 $generated@@81 $generated@@571)) $generated@@571) ($generated@@83 ($generated@@157 $generated@@81 $generated@@571) ($generated@@174 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@254 $generated@@571 ($generated@@174 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) ($generated@@153 $generated@@154)) (< ($generated@@572 $generated@@573) ($generated@@156 ($generated@@152 $generated@@573))))
 :pattern ( ($generated@@152 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@96 ($generated@@458 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@96 ($generated@@458 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@73)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@68)) (and (= ($generated@@76 ($generated@@174 $generated@@578 $generated@@579)) $generated@@62) (= ($generated@@576 ($generated@@174 $generated@@578 $generated@@579)) $generated@@66)))
 :pattern ( ($generated@@174 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@81) (= ($generated@@558 ($generated@@307 $generated@@580)) ($generated@@156 $generated@@580)))
 :pattern ( ($generated@@558 ($generated@@307 $generated@@580)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@81) (or ($generated@@82 $generated@@581) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@581 $generated@@84)))) (= ($generated@@79 $generated@@581) $generated@@581))
 :pattern ( ($generated@@79 $generated@@581))
))))
(assert (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@154) ($generated@@254 $generated@@582 ($generated@@90 0))) (and (= ($generated@@307 ($generated@@157 $generated@@2 $generated@@582)) $generated@@582) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@582) ($generated@@90 0))))
 :pattern ( ($generated@@254 $generated@@582 ($generated@@90 0)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@154) (= (type $generated@@584) $generated@@68)) ($generated@@254 $generated@@583 ($generated@@268 $generated@@584))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@583)) $generated@@583) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@583) ($generated@@268 $generated@@584))))
 :pattern ( ($generated@@254 $generated@@583 ($generated@@268 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@154) (= (type $generated@@586) $generated@@68)) ($generated@@254 $generated@@585 ($generated@@273 $generated@@586))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@4) $generated@@585) ($generated@@273 $generated@@586))))
 :pattern ( ($generated@@254 $generated@@585 ($generated@@273 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@154) (= (type $generated@@588) $generated@@68)) ($generated@@254 $generated@@587 ($generated@@190 $generated@@588))) (and (= ($generated@@307 ($generated@@157 ($generated@@91 $generated@@154 $generated@@2) $generated@@587)) $generated@@587) ($generated@@83 ($generated@@157 ($generated@@91 $generated@@154 $generated@@2) $generated@@587) ($generated@@190 $generated@@588))))
 :pattern ( ($generated@@254 $generated@@587 ($generated@@190 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@154) (= (type $generated@@590) $generated@@68)) ($generated@@254 $generated@@589 ($generated@@431 $generated@@590))) (and (= ($generated@@307 ($generated@@157 ($generated@@153 $generated@@154) $generated@@589)) $generated@@589) ($generated@@83 ($generated@@157 ($generated@@153 $generated@@154) $generated@@589) ($generated@@431 $generated@@590))))
 :pattern ( ($generated@@254 $generated@@589 ($generated@@431 $generated@@590)))
)))
(assert  (=> (<= 0 $generated@@78) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@81) (or ($generated@@171 $generated@@591) (and (not (= 0 $generated@@78)) ($generated@@83 $generated@@591 $generated@@84)))) (= ($generated@@170 $generated@@591) ($generated@@251 $generated@@591)))
 :pattern ( ($generated@@170 $generated@@591))
))))
(assert (= ($generated@@76 $generated@@84) $generated@@64))
(assert (= ($generated@@576 $generated@@84) $generated@@67))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@592) ($generated@@91 $generated@@154 $generated@@2)) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@91 $generated@@92 $generated@@93))) (= ($generated@@89 $generated@@592 ($generated@@190 $generated@@593) $generated@@594) (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@154) (< 0 ($generated ($generated@@96 $generated@@592 $generated@@595)))) ($generated@@284 $generated@@595 $generated@@593 $generated@@594))
 :pattern ( ($generated@@96 $generated@@592 $generated@@595))
))))
 :pattern ( ($generated@@89 $generated@@592 ($generated@@190 $generated@@593) $generated@@594))
)))
(assert (= $generated@@188 ($generated@@80 $generated@@188)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) ($generated@@153 $generated@@154)) (= ($generated@@83 ($generated@@152 $generated@@596) $generated@@84) ($generated@@83 $generated@@596 ($generated@@431 $generated@@45))))
 :pattern ( ($generated@@83 ($generated@@152 $generated@@596) $generated@@84))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@598) (and ($generated@@251 $generated@@597) ($generated@@89 $generated@@597 $generated@@84 $generated@@598)))) ($generated@@89 ($generated@@366 $generated@@597) ($generated@@431 $generated@@45) $generated@@598))
 :pattern ( ($generated@@89 ($generated@@366 $generated@@597) ($generated@@431 $generated@@45) $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@81) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@601) (and ($generated@@173 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@68) ($generated@@89 $generated@@599 ($generated@@174 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@89 $generated@@599 ($generated@@174 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@284 ($generated@@181 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@284 ($generated@@181 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@91 $generated@@92 $generated@@93))) (and ($generated@@261 $generated@@605) (and ($generated@@173 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@68) ($generated@@89 $generated@@603 ($generated@@174 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@89 $generated@@603 ($generated@@174 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@284 ($generated@@182 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@284 ($generated@@182 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@154) (= (type $generated@@608) $generated@@154)) (= ($generated@@253 ($generated@@80 $generated@@607) ($generated@@80 $generated@@608)) ($generated@@80 ($generated@@253 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@253 ($generated@@80 $generated@@607) ($generated@@80 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@307 ($generated@@8 ($generated@@278 $generated@@609))) ($generated@@80 ($generated@@307 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@307 ($generated@@8 ($generated@@278 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) ($generated@@153 $generated@@154)) (= ($generated@@152 ($generated@@80 $generated@@610)) ($generated@@80 ($generated@@152 $generated@@610))))
 :pattern ( ($generated@@152 ($generated@@80 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@307 ($generated@@80 $generated@@611)) ($generated@@80 ($generated@@307 $generated@@611)))
 :pattern ( ($generated@@307 ($generated@@80 $generated@@611)))
)))
(assert  (=> (<= 2 $generated@@78) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@81) (or ($generated@@82 $generated@@612) (and (not (= 2 $generated@@78)) ($generated@@83 $generated@@612 $generated@@84)))) ($generated@@83 ($generated@@79 $generated@@612) $generated@@84))
 :pattern ( ($generated@@79 $generated@@612))
))))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@158 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@153 $generated@@614)) (= ($generated@@155 $generated@@613) 0)) (= $generated@@613 ($generated@@301 $generated@@614))))
 :pattern ( ($generated@@155 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@91 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@320 ($generated@@97 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@320 $generated@@615) ($generated ($generated@@96 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@320 ($generated@@97 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@620) $generated@@2)) ($generated@@89 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@89 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@622) $generated@@3)) ($generated@@89 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@89 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@624) $generated@@4)) ($generated@@89 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@89 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@626) $generated@@482)) ($generated@@89 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@89 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@91 $generated@@92 $generated@@93)) (= (type $generated@@628) $generated@@154)) ($generated@@89 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@89 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@153 $generated@@154)) (= (type $generated@@630) $generated@@68)) (= ($generated@@83 $generated@@629 ($generated@@431 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@155 $generated@@629))) ($generated@@254 ($generated@@151 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@151 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@83 $generated@@629 ($generated@@431 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@153 $generated@@154)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@155 $generated@@632))) (< ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@632 $generated@@633))) ($generated@@572 $generated@@632))))
 :pattern ( ($generated@@156 ($generated@@157 $generated@@81 ($generated@@151 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@328 $generated@@154 $generated@@154)) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) $generated@@68)) ($generated@@83 $generated@@634 ($generated@@435 $generated@@635 $generated@@636))) (and (and ($generated@@83 ($generated@@326 $generated@@634) ($generated@@268 $generated@@635)) ($generated@@83 ($generated@@374 $generated@@634) ($generated@@268 $generated@@636))) ($generated@@83 ($generated@@405 $generated@@634) ($generated@@268 ($generated@@174 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@83 $generated@@634 ($generated@@435 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@346 $generated@@154 $generated@@154)) (= (type $generated@@638) $generated@@68)) (= (type $generated@@639) $generated@@68)) ($generated@@83 $generated@@637 ($generated@@443 $generated@@638 $generated@@639))) (and (and ($generated@@83 ($generated@@344 $generated@@637) ($generated@@273 $generated@@638)) ($generated@@83 ($generated@@385 $generated@@637) ($generated@@273 $generated@@639))) ($generated@@83 ($generated@@413 $generated@@637) ($generated@@273 ($generated@@174 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@83 $generated@@637 ($generated@@443 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@83 $generated@@640 $generated@@46))
 :pattern ( ($generated@@83 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@83 $generated@@641 $generated@@47))
 :pattern ( ($generated@@83 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@83 $generated@@642 $generated@@44))
 :pattern ( ($generated@@83 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@482) ($generated@@83 $generated@@643 $generated@@45))
 :pattern ( ($generated@@83 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@154) ($generated@@83 $generated@@644 $generated@@48))
 :pattern ( ($generated@@83 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@645) $generated@@81) (= (type $generated@@647) $generated@@81)) (= (type $generated@@650) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@651) $generated@@81)) (= (type $generated@@649) $generated@@81)) (= (type $generated@@653) ($generated@@197 $generated@@92 $generated@@4))) (= (type $generated@@654) $generated@@92)) (= (type $generated@@655) ($generated@@91 $generated@@92 $generated@@93))) (= (type $generated@@656) $generated@@81)) (= (type $generated@@658) $generated@@81)) (= (type $generated@@660) $generated@@81)) (= (type $generated@@661) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@662  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@251 $generated@@645)) (=> ($generated@@251 $generated@@645) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@646 ($generated@@278 0)))))))
(let (($generated@@663  (=> (not ($generated@@170 $generated@@647)) (=> (and (and (= $generated@@648 ($generated@@278 42)) (= $generated@@645 $generated@@649)) (and (= $generated@@646 $generated@@648) (= (ControlFlow 0 5) 2))) $generated@@662))))
(let (($generated@@664  (=> (and (and (and ($generated@@170 $generated@@647) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (and ($generated@@82 $generated@@647) ($generated@@82 $generated@@647))) (and (and (= $generated@@651 ($generated@@79 $generated@@647)) (= $generated@@645 $generated@@651)) (and (= $generated@@646 $generated@@652) (= (ControlFlow 0 4) 2)))) $generated@@662)))
(let (($generated@@665  (=> (= $generated@@653 ($generated@@196 $generated@@654 $generated@@655 $generated@@60 false)) (=> (and (= $generated@@649 ($generated@@80 $generated@@188)) (= $generated@@652 ($generated@@278 0))) (=> (and (and (and ($generated@@83 $generated@@656 $generated@@84) ($generated@@89 $generated@@656 $generated@@84 $generated@@655)) (= $generated@@657 ($generated@@278 2))) (and (and ($generated@@83 $generated@@658 $generated@@84) ($generated@@89 $generated@@658 $generated@@84 $generated@@655)) (and ($generated@@261 $generated@@650) ($generated@@659 $generated@@650)))) (=> (and (and (and (and ($generated@@83 $generated@@647 $generated@@84) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (=> (= $generated@@657 ($generated@@278 1)) (not ($generated@@251 $generated@@647)))) (and (=> (= $generated@@657 ($generated@@278 2)) ($generated@@251 $generated@@647)) (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@92) (=> (and (not (= $generated@@666 $generated@@654)) ($generated@@0 ($generated@@98 ($generated@@96 $generated@@655 $generated@@666) $generated@@60))) (= ($generated@@96 $generated@@650 $generated@@666) ($generated@@96 $generated@@655 $generated@@666))))
 :pattern ( ($generated@@96 $generated@@650 $generated@@666))
)))) (and (and ($generated@@147 $generated@@655 $generated@@650) ($generated@@89 $generated@@647 $generated@@84 $generated@@650)) (and ($generated@@171 $generated@@647) ($generated@@171 $generated@@647)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@664) (=> (= (ControlFlow 0 6) 5) $generated@@663))))))))
(let (($generated@@667  (=> (and (and ($generated@@261 $generated@@655) ($generated@@659 $generated@@655)) (and ($generated@@83 $generated@@660 $generated@@84) ($generated@@89 $generated@@660 $generated@@84 $generated@@655))) (=> (and (and (and ($generated@@83 $generated@@661 $generated@@84) ($generated@@89 $generated@@661 $generated@@84 $generated@@655)) true) (and (= 3 $generated@@78) (= (ControlFlow 0 7) 6))) $generated@@665))))
$generated@@667))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
