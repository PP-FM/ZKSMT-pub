(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (Int) T@U)
(declare-fun $generated@@236 (T@U) Int)
(declare-fun $generated@@237 () T@T)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 (T@U T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@253 (T@T) T@U)
(declare-fun $generated@@254 (T@U) Int)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@274 (T@T T@T) T@U)
(declare-fun $generated@@275 (T@T T@T) T@T)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@334 () Int)
(declare-fun $generated@@335 (T@U) Bool)
(declare-fun $generated@@336 (T@U) Bool)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@380 (T@U T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@T) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@431 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@462 (T@U Int) T@U)
(declare-fun $generated@@471 (T@U) Int)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@565 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert  (and (= ($generated@@1 $generated@@237) 17) (forall (($generated@@238 Int) ) (! (= (type ($generated@@235 $generated@@238)) $generated@@237)
 :pattern ( ($generated@@235 $generated@@238))
))))
(assert (forall (($generated@@239 Int) ) (!  (=> (and (<= 0 $generated@@239) (< $generated@@239 65536)) (= ($generated@@236 ($generated@@235 $generated@@239)) $generated@@239))
 :pattern ( ($generated@@235 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@242) $generated@@64) (= (type $generated@@243) $generated@@64)) (= (type $generated@@244) $generated@@145)) (= (type $generated@@245) $generated@@145)) (= (type $generated@@246) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@240 $generated@@246)) (= ($generated@@74 ($generated@@211 $generated@@244 $generated@@245) ($generated@@135 $generated@@242 $generated@@243) $generated@@246)  (and ($generated@@241 $generated@@244 $generated@@242 $generated@@246) ($generated@@241 $generated@@245 $generated@@243 $generated@@246))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@244 $generated@@245) ($generated@@135 $generated@@242 $generated@@243) $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@68)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (= (type $generated@@249) $generated@@136) (= ($generated@@134 $generated@@249) (= ($generated@@247 $generated@@249) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@136) ($generated@@134 $generated@@250)) (exists (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (and (and (= (type $generated@@251) $generated@@145) (= (type $generated@@252) $generated@@145)) (= $generated@@250 ($generated@@211 $generated@@251 $generated@@252)))
 :no-pattern (type $generated@@251)
 :no-pattern (type $generated@@252)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
)))
 :pattern ( ($generated@@134 $generated@@250))
)))
(assert  (and (and (forall (($generated@@257 T@T) ) (= ($generated@@1 ($generated@@255 $generated@@257)) 18)) (forall (($generated@@258 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
))) (forall (($generated@@259 T@T) ) (! (= (type ($generated@@253 $generated@@259)) ($generated@@255 $generated@@259))
 :pattern ( ($generated@@253 $generated@@259))
))))
(assert (forall (($generated@@260 T@T) ) (! (= ($generated@@254 ($generated@@253 $generated@@260)) 0)
 :pattern ( ($generated@@253 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@237) (and (and (= ($generated@@235 ($generated@@236 $generated@@261)) $generated@@261) (<= 0 ($generated@@236 $generated@@261))) (< ($generated@@236 $generated@@261) 65536)))
 :pattern ( ($generated@@236 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@145)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@241 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@241 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@269 T@T) ) (! (= (type ($generated@@268 $generated@@269)) ($generated@@76 $generated@@269 $generated@@2))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 ($generated@@79 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@76 $generated@@271 $generated@@2)) (and (= (= ($generated@@267 $generated@@270) 0) (= $generated@@270 ($generated@@268 $generated@@271))) (=> (not (= ($generated@@267 $generated@@270) 0)) (exists (($generated@@272 T@U) ) (!  (and (= (type $generated@@272) $generated@@271) (< 0 ($generated ($generated@@81 $generated@@270 $generated@@272))))
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
))))))
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert  (and (and (and (and (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (= ($generated@@1 ($generated@@275 $generated@@278 $generated@@279)) 19)) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@276 ($generated@@275 $generated@@280 $generated@@281)) $generated@@280)
 :pattern ( ($generated@@275 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@275 $generated@@282 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@275 $generated@@282 $generated@@283))
))) (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@276 (type $generated@@284))))
(= (type ($generated@@273 $generated@@284)) ($generated@@76 $generated@@285 $generated@@4)))
 :pattern ( ($generated@@273 $generated@@284))
))) (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (! (= (type ($generated@@274 $generated@@286 $generated@@287)) ($generated@@275 $generated@@286 $generated@@287))
 :pattern ( ($generated@@274 $generated@@286 $generated@@287))
))))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@T) ) (! (let (($generated@@290 (type $generated@@288)))
 (not ($generated@@0 ($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288))))
 :pattern ( (let (($generated@@290 (type $generated@@288)))
($generated@@81 ($generated@@273 ($generated@@274 $generated@@290 $generated@@289)) $generated@@288)))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 20)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@76 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@81 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@79 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@76 $generated@@310 $generated@@2)) (= ($generated@@151 $generated@@309) (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@310) (and (<= 0 ($generated ($generated@@81 $generated@@309 $generated@@311))) (<= ($generated ($generated@@81 $generated@@309 $generated@@311)) ($generated@@267 $generated@@309))))
 :pattern ( ($generated@@81 $generated@@309 $generated@@311))
)))))
 :pattern ( ($generated@@151 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@277 (type $generated@@312))))
(let (($generated@@314 ($generated@@276 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@275 $generated@@314 $generated@@313)) (or (= $generated@@312 ($generated@@274 $generated@@314 $generated@@313)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@312) $generated@@315)))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@273 $generated@@312))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@277 (type $generated@@317))))
(= (type ($generated@@316 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@277 (type $generated@@319))))
(let (($generated@@321 ($generated@@276 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@275 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@274 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@320) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@316 $generated@@319))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@295 (type $generated@@323))))
(let (($generated@@325 ($generated@@294 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@293 $generated@@325 $generated@@324)) (or (= $generated@@323 ($generated@@292 $generated@@325 $generated@@324)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@323) $generated@@326)))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@291 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@295 (type $generated@@328))))
(= (type ($generated@@327 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@295 (type $generated@@330))))
(let (($generated@@332 ($generated@@294 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@293 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@292 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@331) ($generated@@0 ($generated@@81 ($generated@@327 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert  (=> (<= 0 $generated@@334) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@237) (or ($generated@@336 $generated@@337) (and (not (= 0 $generated@@334)) ($generated@@132 $generated@@337 $generated@@45)))) (= ($generated@@335 $generated@@337)  (and (<= ($generated@@236 ($generated@@231 ($generated@@235 65))) ($generated@@236 $generated@@337)) (<= ($generated@@236 $generated@@337) ($generated@@236 ($generated@@231 ($generated@@235 90)))))))
 :pattern ( ($generated@@335 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@338) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@339) $generated@@64)) (= ($generated@@132 $generated@@338 ($generated@@150 $generated@@339)) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@338 $generated@@340)))) ($generated@@212 $generated@@340 $generated@@339))
 :pattern ( ($generated@@81 $generated@@338 $generated@@340))
))))
 :pattern ( ($generated@@132 $generated@@338 ($generated@@150 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (and (= (type $generated@@341) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@342) $generated@@64)) (= (type $generated@@343) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@341 ($generated@@221 $generated@@342) $generated@@343) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@145) ($generated@@0 ($generated@@81 $generated@@341 $generated@@344))) ($generated@@241 $generated@@344 $generated@@342 $generated@@343))
 :pattern ( ($generated@@81 $generated@@341 $generated@@344))
))))
 :pattern ( ($generated@@74 $generated@@341 ($generated@@221 $generated@@342) $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@226 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@241 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@226 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 (type $generated@@349)))
(= ($generated ($generated@@81 ($generated@@268 $generated@@350) $generated@@349)) 0))
 :pattern ( (let (($generated@@350 (type $generated@@349)))
($generated@@81 ($generated@@268 $generated@@350) $generated@@349)))
)))
(assert  (and (and (forall (($generated@@354 T@U) ) (! (= (type ($generated@@351 $generated@@354)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@351 $generated@@354))
)) (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@352 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@352 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@277 (type $generated@@357))))
(let (($generated@@359 ($generated@@276 (type $generated@@357))))
(= (type ($generated@@353 $generated@@357)) ($generated@@76 $generated@@359 $generated@@358))))
 :pattern ( ($generated@@353 $generated@@357))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@361) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@360) $generated@@361))  (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@360) ($generated@@143 ($generated@@352 $generated@@136 $generated@@361)))) (= ($generated@@81 ($generated@@353 $generated@@360) ($generated@@143 ($generated@@352 $generated@@136 $generated@@361))) ($generated@@144 ($generated@@352 $generated@@136 $generated@@361))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@360) $generated@@361))
)))
(assert  (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@362 $generated@@364)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@362 $generated@@364))
)) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@295 (type $generated@@365))))
(let (($generated@@367 ($generated@@294 (type $generated@@365))))
(= (type ($generated@@363 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@363 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@368) ($generated@@143 ($generated@@352 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@363 $generated@@368) ($generated@@143 ($generated@@352 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@352 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(let (($generated@@373 ($generated@@276 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@275 $generated@@373 $generated@@372)) (= ($generated@@0 ($generated@@81 ($generated@@316 $generated@@370) $generated@@371)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) (and ($generated@@0 ($generated@@81 ($generated@@273 $generated@@370) $generated@@374)) (= $generated@@371 ($generated@@81 ($generated@@353 $generated@@370) $generated@@374))))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@370) $generated@@374))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@370) $generated@@374))
))))))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(let (($generated@@378 ($generated@@294 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@293 $generated@@378 $generated@@377)) (= ($generated@@0 ($generated@@81 ($generated@@327 $generated@@375) $generated@@376)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) (and ($generated@@0 ($generated@@81 ($generated@@291 $generated@@375) $generated@@379)) (= $generated@@376 ($generated@@81 ($generated@@363 $generated@@375) $generated@@379))))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@375) $generated@@379))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@375) $generated@@379))
))))))
 :pattern ( ($generated@@81 ($generated@@327 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@381 $generated@@382)) $generated@@64)
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) $generated@@64)) (= (type $generated@@386) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@383) $generated@@387))) (and ($generated@@241 ($generated@@81 ($generated@@353 $generated@@383) $generated@@387) $generated@@385 $generated@@386) ($generated@@241 $generated@@387 $generated@@384 $generated@@386)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@383) $generated@@387))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@380 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@391) $generated@@395))) (and ($generated@@241 ($generated@@81 ($generated@@363 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@241 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@T) ) (! (= (type ($generated@@396 $generated@@397)) ($generated@@76 $generated@@397 $generated@@4))
 :pattern ( ($generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@295 (type $generated@@398))))
(let (($generated@@400 ($generated@@294 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@293 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@292 $generated@@400 $generated@@399)) (= ($generated@@291 $generated@@398) ($generated@@396 $generated@@400))))))
 :pattern ( ($generated@@291 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@295 (type $generated@@401))))
(let (($generated@@403 ($generated@@294 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@293 $generated@@403 $generated@@402)) (= (= $generated@@401 ($generated@@292 $generated@@403 $generated@@402)) (= ($generated@@327 $generated@@401) ($generated@@396 $generated@@402))))))
 :pattern ( ($generated@@327 $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@295 (type $generated@@404))))
(let (($generated@@406 ($generated@@294 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@293 $generated@@406 $generated@@405)) (= (= $generated@@404 ($generated@@292 $generated@@406 $generated@@405)) (= ($generated@@362 $generated@@404) ($generated@@396 $generated@@145))))))
 :pattern ( ($generated@@362 $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@277 (type $generated@@407))))
(let (($generated@@409 ($generated@@276 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@275 $generated@@409 $generated@@408)) (or (= $generated@@407 ($generated@@274 $generated@@409 $generated@@408)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@145) (= (type $generated@@411) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@351 $generated@@407) ($generated@@262 ($generated@@211 $generated@@410 $generated@@411)))))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@351 $generated@@407))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@295 (type $generated@@412))))
(let (($generated@@414 ($generated@@294 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@293 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@292 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (and (and (= (type $generated@@415) $generated@@145) (= (type $generated@@416) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@412) ($generated@@262 ($generated@@211 $generated@@415 $generated@@416)))))
 :no-pattern (type $generated@@415)
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@362 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@46)) (and (= ($generated@@262 ($generated@@352 $generated@@2 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@352 $generated@@2 $generated@@417) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@46))
)))
(assert (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@212 $generated@@418 $generated@@47)) (and (= ($generated@@262 ($generated@@352 $generated@@3 $generated@@418)) $generated@@418) ($generated@@132 ($generated@@352 $generated@@3 $generated@@418) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@418 $generated@@47))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@44)) (and (= ($generated@@262 ($generated@@352 $generated@@4 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@352 $generated@@4 $generated@@419) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@44))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@212 $generated@@420 $generated@@45)) (and (= ($generated@@262 ($generated@@352 $generated@@237 $generated@@420)) $generated@@420) ($generated@@132 ($generated@@352 $generated@@237 $generated@@420) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@420 $generated@@45))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (= (type $generated@@422) $generated@@64) (= ($generated@@212 ($generated@@262 $generated@@421) $generated@@422) ($generated@@132 $generated@@421 $generated@@422)))
 :pattern ( ($generated@@212 ($generated@@262 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@79 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@76 $generated@@424 $generated@@2)) (<= 0 ($generated@@267 $generated@@423))))
 :pattern ( ($generated@@267 $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@256 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@255 $generated@@426)) (<= 0 ($generated@@254 $generated@@425))))
 :pattern ( ($generated@@254 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (= (type ($generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@64) (= (type $generated@@430) $generated@@64)) (= ($generated@@427 ($generated@@380 $generated@@429 $generated@@430)) $generated@@429))
 :pattern ( ($generated@@380 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ) (! (= (type ($generated@@431 $generated@@432)) $generated@@64)
 :pattern ( ($generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@64) (= (type $generated@@434) $generated@@64)) (= ($generated@@431 ($generated@@380 $generated@@433 $generated@@434)) $generated@@434))
 :pattern ( ($generated@@380 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@64) (= (type $generated@@436) $generated@@64)) (= ($generated@@72 ($generated@@380 $generated@@435 $generated@@436)) $generated@@58))
 :pattern ( ($generated@@380 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@64)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@64) (= (type $generated@@440) $generated@@64)) (= ($generated@@437 ($generated@@388 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@388 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@64)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@441 ($generated@@388 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@388 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@445 $generated@@446)) $generated@@59))
 :pattern ( ($generated@@388 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@145) (= (type $generated@@448) $generated@@145)) (= ($generated@@247 ($generated@@211 $generated@@447 $generated@@448)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@135 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@135 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@135 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@135 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) (= (type $generated@@458) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@211 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@211 $generated@@459 $generated@@460))
)))
(assert  (and (forall (($generated@@463 T@U) ) (! (= (type ($generated@@461 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@463))
)) (forall (($generated@@464 T@U) ($generated@@465 Int) ) (! (let (($generated@@466 ($generated@@256 (type $generated@@464))))
(= (type ($generated@@462 $generated@@464 $generated@@465)) $generated@@466))
 :pattern ( ($generated@@462 $generated@@464 $generated@@465))
))))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@255 $generated@@145)) (= (type $generated@@468) $generated@@64)) (= (type $generated@@469) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@467 ($generated@@461 $generated@@468) $generated@@469) (forall (($generated@@470 Int) ) (!  (=> (and (<= 0 $generated@@470) (< $generated@@470 ($generated@@254 $generated@@467))) ($generated@@241 ($generated@@462 $generated@@467 $generated@@470) $generated@@468 $generated@@469))
 :pattern ( ($generated@@462 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@74 $generated@@467 ($generated@@461 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@472 Int) ) (! (= ($generated@@471 ($generated@@75 $generated@@472)) $generated@@472)
 :pattern ( ($generated@@75 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@473 ($generated@@221 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@221 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@476)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@477 ($generated@@226 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@226 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@480)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@150 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@150 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@484)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@461 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@461 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@461 $generated@@488)) $generated@@57))
 :pattern ( ($generated@@461 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 (type $generated@@489)))
(= ($generated@@352 $generated@@490 ($generated@@262 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@262 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) $generated@@64)) (= ($generated@@132 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)) (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@273 $generated@@491) $generated@@494))) (and ($generated@@212 ($generated@@81 ($generated@@353 $generated@@491) $generated@@494) $generated@@493) ($generated@@212 $generated@@494 $generated@@492)))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@491) $generated@@494))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@491) $generated@@494))
))))
 :pattern ( ($generated@@132 $generated@@491 ($generated@@380 $generated@@492 $generated@@493)))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@496) $generated@@64)) (= (type $generated@@497) $generated@@64)) (= ($generated@@132 $generated@@495 ($generated@@388 $generated@@496 $generated@@497)) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@291 $generated@@495) $generated@@498))) (and ($generated@@212 ($generated@@81 ($generated@@363 $generated@@495) $generated@@498) $generated@@497) ($generated@@212 $generated@@498 $generated@@496)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@495) $generated@@498))
 :pattern ( ($generated@@81 ($generated@@291 $generated@@495) $generated@@498))
))))
 :pattern ( ($generated@@132 $generated@@495 ($generated@@388 $generated@@496 $generated@@497)))
)))
(assert  (=> (<= 0 $generated@@334) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@237) (or ($generated@@336 ($generated@@231 $generated@@499)) (and (not (= 0 $generated@@334)) ($generated@@132 $generated@@499 $generated@@45)))) (= ($generated@@335 ($generated@@231 $generated@@499))  (and (<= ($generated@@236 ($generated@@231 ($generated@@235 65))) ($generated@@236 ($generated@@231 $generated@@499))) (<= ($generated@@236 ($generated@@231 $generated@@499)) ($generated@@236 ($generated@@231 ($generated@@235 90)))))))
 :weight 3
 :pattern ( ($generated@@335 ($generated@@231 $generated@@499)))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@500 $generated@@502) ($generated@@501 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) (= (type $generated@@505) $generated@@145)) (< ($generated@@500 $generated@@505) ($generated@@501 ($generated@@211 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@211 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) ($generated@@212 $generated@@506 ($generated@@380 $generated@@507 $generated@@508))) (and (= ($generated@@262 ($generated@@352 ($generated@@275 $generated@@145 $generated@@145) $generated@@506)) $generated@@506) ($generated@@132 ($generated@@352 ($generated@@275 $generated@@145 $generated@@145) $generated@@506) ($generated@@380 $generated@@507 $generated@@508))))
 :pattern ( ($generated@@212 $generated@@506 ($generated@@380 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) ($generated@@212 $generated@@509 ($generated@@388 $generated@@510 $generated@@511))) (and (= ($generated@@262 ($generated@@352 ($generated@@293 $generated@@145 $generated@@145) $generated@@509)) $generated@@509) ($generated@@132 ($generated@@352 ($generated@@293 $generated@@145 $generated@@145) $generated@@509) ($generated@@388 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@212 $generated@@509 ($generated@@388 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (and (= (type $generated@@512) $generated@@64) (= (type $generated@@513) $generated@@64)) (= (type $generated@@514) $generated@@145)) ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513))) (and (= ($generated@@262 ($generated@@352 $generated@@136 $generated@@514)) $generated@@514) ($generated@@132 ($generated@@352 $generated@@136 $generated@@514) ($generated@@135 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@212 $generated@@514 ($generated@@135 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
 (not ($generated@@0 ($generated@@81 ($generated@@396 $generated@@516) $generated@@515))))
 :pattern ( (let (($generated@@516 (type $generated@@515)))
($generated@@81 ($generated@@396 $generated@@516) $generated@@515)))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@69)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@519 $generated@@520)) $generated@@62) (= ($generated@@517 ($generated@@135 $generated@@519 $generated@@520)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@136) (= ($generated@@500 ($generated@@262 $generated@@521)) ($generated@@501 $generated@@521)))
 :pattern ( ($generated@@500 ($generated@@262 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) ($generated@@212 $generated@@522 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@352 $generated@@2 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@522) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@522 ($generated@@75 0)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@64)) ($generated@@212 $generated@@523 ($generated@@221 $generated@@524))) (and (= ($generated@@262 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@523)) $generated@@523) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@523) ($generated@@221 $generated@@524))))
 :pattern ( ($generated@@212 $generated@@523 ($generated@@221 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@226 $generated@@526))) (and (= ($generated@@262 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@226 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@226 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@150 $generated@@528))) (and (= ($generated@@262 ($generated@@352 ($generated@@76 $generated@@145 $generated@@2) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@352 ($generated@@76 $generated@@145 $generated@@2) $generated@@527) ($generated@@150 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@150 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@461 $generated@@530))) (and (= ($generated@@262 ($generated@@352 ($generated@@255 $generated@@145) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@352 ($generated@@255 $generated@@145) $generated@@529) ($generated@@461 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@461 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@531 $generated@@534)))) ($generated@@241 $generated@@534 $generated@@532 $generated@@533))
 :pattern ( ($generated@@81 $generated@@531 $generated@@534))
))))
 :pattern ( ($generated@@74 $generated@@531 ($generated@@150 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@136) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@240 $generated@@537) (and ($generated@@134 $generated@@535) (exists (($generated@@538 T@U) ) (!  (and (= (type $generated@@538) $generated@@64) ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@135 $generated@@536 $generated@@538) $generated@@537))
))))) ($generated@@241 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
 :pattern ( ($generated@@241 ($generated@@143 $generated@@535) $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@240 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@542 $generated@@540) $generated@@541))
))))) ($generated@@241 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@241 ($generated@@144 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@543) ($generated@@231 $generated@@544)) ($generated@@231 ($generated@@211 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@543) ($generated@@231 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= ($generated@@262 ($generated@@231 $generated@@545)) ($generated@@231 ($generated@@262 $generated@@545)))
 :pattern ( ($generated@@262 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@256 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@255 $generated@@547)) (= ($generated@@254 $generated@@546) 0)) (= $generated@@546 ($generated@@253 $generated@@547))))
 :pattern ( ($generated@@254 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@549)))
 (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@551 $generated@@2)) (= (type $generated@@550) $generated@@2)) (<= 0 ($generated $generated@@550))) (= ($generated@@267 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)) (+ (- ($generated@@267 $generated@@548) ($generated ($generated@@81 $generated@@548 $generated@@549))) ($generated $generated@@550)))))
 :pattern ( ($generated@@267 ($generated@@82 $generated@@548 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@553) $generated@@2)) ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
 :pattern ( ($generated@@74 $generated@@553 $generated@@46 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@555) $generated@@3)) ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
 :pattern ( ($generated@@74 $generated@@555 $generated@@47 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@4)) ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@44 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@237)) ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@45 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@145)) ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@48 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@255 $generated@@145)) (= (type $generated@@563) $generated@@64)) (= ($generated@@132 $generated@@562 ($generated@@461 $generated@@563)) (forall (($generated@@564 Int) ) (!  (=> (and (<= 0 $generated@@564) (< $generated@@564 ($generated@@254 $generated@@562))) ($generated@@212 ($generated@@462 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@462 $generated@@562 $generated@@564))
))))
 :pattern ( ($generated@@132 $generated@@562 ($generated@@461 $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) ($generated@@255 $generated@@145)) (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@254 $generated@@566))) (< ($generated@@501 ($generated@@352 $generated@@136 ($generated@@462 $generated@@566 $generated@@567))) ($generated@@565 $generated@@566))))
 :pattern ( ($generated@@501 ($generated@@352 $generated@@136 ($generated@@462 $generated@@566 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) ($generated@@275 $generated@@145 $generated@@145)) (= (type $generated@@569) $generated@@64)) (= (type $generated@@570) $generated@@64)) ($generated@@132 $generated@@568 ($generated@@380 $generated@@569 $generated@@570))) (and (and ($generated@@132 ($generated@@273 $generated@@568) ($generated@@221 $generated@@569)) ($generated@@132 ($generated@@316 $generated@@568) ($generated@@221 $generated@@570))) ($generated@@132 ($generated@@351 $generated@@568) ($generated@@221 ($generated@@135 $generated@@569 $generated@@570)))))
 :pattern ( ($generated@@132 $generated@@568 ($generated@@380 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@293 $generated@@145 $generated@@145)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@132 $generated@@571 ($generated@@388 $generated@@572 $generated@@573))) (and (and ($generated@@132 ($generated@@291 $generated@@571) ($generated@@226 $generated@@572)) ($generated@@132 ($generated@@327 $generated@@571) ($generated@@226 $generated@@573))) ($generated@@132 ($generated@@362 $generated@@571) ($generated@@226 ($generated@@135 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@132 $generated@@571 ($generated@@388 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@2) ($generated@@132 $generated@@574 $generated@@46))
 :pattern ( ($generated@@132 $generated@@574 $generated@@46))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@3) ($generated@@132 $generated@@575 $generated@@47))
 :pattern ( ($generated@@132 $generated@@575 $generated@@47))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@4) ($generated@@132 $generated@@576 $generated@@44))
 :pattern ( ($generated@@132 $generated@@576 $generated@@44))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@237) ($generated@@132 $generated@@577 $generated@@45))
 :pattern ( ($generated@@132 $generated@@577 $generated@@45))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@145) ($generated@@132 $generated@@578 $generated@@48))
 :pattern ( ($generated@@132 $generated@@578 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@334) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@237) (or ($generated@@336 $generated@@579) (and (not (= 0 $generated@@334)) ($generated@@132 $generated@@579 $generated@@45)))) true)
 :pattern ( ($generated@@335 $generated@@579))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@580 () T@U)
(declare-fun $generated@@581 () T@U)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 (T@U) Bool)
(declare-fun $generated@@584 () T@U)
(assert  (and (and (and (= (type $generated@@580) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@581) $generated@@77)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@584) $generated@@237)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@585  (=> ($generated@@336 ($generated@@231 ($generated@@235 65))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@336 ($generated@@231 ($generated@@235 65))) (or ($generated@@0 ($generated@@231 ($generated@@11 ($generated@@335 ($generated@@231 ($generated@@235 65)))))) (<= ($generated@@236 ($generated@@231 ($generated@@235 65))) ($generated@@236 ($generated@@231 ($generated@@235 65))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@336 ($generated@@231 ($generated@@235 65))) (or ($generated@@0 ($generated@@231 ($generated@@11 ($generated@@335 ($generated@@231 ($generated@@235 65)))))) (<= ($generated@@236 ($generated@@231 ($generated@@235 65))) ($generated@@236 ($generated@@231 ($generated@@235 90)))))))))))
(let (($generated@@586 true))
(let (($generated@@587  (=> (= $generated@@580 ($generated@@156 $generated@@581 $generated@@582 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@586) (=> (= (ControlFlow 0 5) 3) $generated@@585)))))
(let (($generated@@588  (=> (and (and (and ($generated@@240 $generated@@582) ($generated@@583 $generated@@582)) ($generated@@132 $generated@@584 $generated@@45)) (and (= 1 $generated@@334) (= (ControlFlow 0 6) 5))) $generated@@587)))
$generated@@588)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 (T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (Int) Int)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@255 (Int) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@370 (T@U) Bool)
(declare-fun $generated@@371 (T@U) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@503 (T@U) Int)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@600 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert  (and (= ($generated@@1 $generated@@135) 14) (= (type $generated@@134) $generated@@66)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@135) (= (type $generated@@137) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@136 $generated@@134 $generated@@137))
 :pattern ( ($generated@@76 $generated@@136 $generated@@134 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> (= (type $generated@@139) $generated@@2) ($generated@@138 $generated@@139 ($generated@@77 0)))
 :pattern ( ($generated@@138 $generated@@139 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@142) 15) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@141 $generated@@143 $generated@@144)) $generated@@66)
 :pattern ( ($generated@@141 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@66) (= (type $generated@@146) $generated@@66)) (= (type $generated@@147) $generated@@142)) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146))) ($generated@@140 $generated@@147))
 :pattern ( ($generated@@140 $generated@@147) ($generated@@138 $generated@@147 ($generated@@141 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 16) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@142) (= (type $generated@@155) $generated@@142)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@66)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@160) $generated@@66)) ($generated@@138 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@138 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 17)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@79 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@69 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@79) (= (type $generated@@211) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@212) ($generated@@68 $generated@@4))) (= (type $generated@@214) $generated@@79)) (= (type $generated@@215) ($generated@@68 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@79 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@69 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@79) (= (type $generated@@223) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@224) ($generated@@68 $generated@@4))) (= (type $generated@@226) $generated@@79)) (= (type $generated@@227) ($generated@@68 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@142)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@66) (= (type $generated@@234) $generated@@66)) (= (type $generated@@235) $generated@@151)) (= (type $generated@@236) $generated@@151)) (= ($generated@@138 ($generated@@229 $generated@@235 $generated@@236) ($generated@@141 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@138 ($generated@@229 $generated@@235 $generated@@236) ($generated@@141 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@66)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@242) $generated@@66)) (= ($generated@@138 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@151) ($generated@@0 ($generated@@83 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@83 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@138 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@138 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@151) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@138 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@249 $generated@@250) $generated@@250)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(= (type ($generated@@251 $generated@@252)) $generated@@253))
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= ($generated@@251 $generated@@254) $generated@@254)
 :pattern ( ($generated@@251 $generated@@254))
)))
(assert (forall (($generated@@257 Int) ) (! (= (type ($generated@@255 $generated@@257)) $generated@@135)
 :pattern ( ($generated@@255 $generated@@257))
)))
(assert (forall (($generated@@258 Int) ) (!  (=> (and (<= 0 $generated@@258) (< $generated@@258 65536)) (= ($generated@@256 ($generated@@255 $generated@@258)) $generated@@258))
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@66) (= (type $generated@@262) $generated@@66)) (= (type $generated@@263) $generated@@151)) (= (type $generated@@264) $generated@@151)) (= (type $generated@@265) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@259 $generated@@265)) (= ($generated@@76 ($generated@@229 $generated@@263 $generated@@264) ($generated@@141 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@263 $generated@@264) ($generated@@141 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@142) (= ($generated@@140 $generated@@268) (= ($generated@@266 $generated@@268) $generated@@61)))
 :pattern ( ($generated@@140 $generated@@268))
)))
(assert  (and (forall (($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@273)) $generated@@135)
 :pattern ( ($generated@@270 $generated@@273))
)) (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@135)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
))))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@135) (or ($generated@@271 $generated@@276) (and (not (= 2 $generated@@269)) ($generated@@138 $generated@@276 $generated@@134)))) (= ($generated@@270 $generated@@276) (let (($generated@@277 ($generated@@272 $generated@@276 ($generated@@255 ($generated@@249 1)))))
$generated@@277)))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@142) ($generated@@140 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@151) (= (type $generated@@280) $generated@@151)) (= $generated@@278 ($generated@@229 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@140 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 18)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@135) (and (and (= ($generated@@255 ($generated@@256 $generated@@289)) $generated@@289) (<= 0 ($generated@@256 $generated@@289))) (< ($generated@@256 $generated@@289) 65536)))
 :pattern ( ($generated@@256 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@151)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@66) (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@260 ($generated@@290 $generated@@292) $generated@@293 $generated@@294) ($generated@@76 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@260 ($generated@@290 $generated@@292) $generated@@293 $generated@@294))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@135) (or ($generated@@271 ($generated@@251 $generated@@295)) (and (not (= 2 $generated@@269)) ($generated@@138 $generated@@295 $generated@@134)))) (= ($generated@@270 ($generated@@251 $generated@@295)) (let (($generated@@296 ($generated@@272 $generated@@295 ($generated@@255 ($generated@@249 1)))))
$generated@@296)))
 :weight 3
 :pattern ( ($generated@@270 ($generated@@251 $generated@@295)))
))))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@78 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@81 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@78 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@83 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 20)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@78 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@81 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@78 $generated@@340 $generated@@2)) (= ($generated@@157 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@83 $generated@@339 $generated@@341))) (<= ($generated ($generated@@83 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@83 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@157 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@151) ($generated@@230 $generated@@345 $generated@@134)) (and (= ($generated@@290 ($generated@@342 $generated@@135 $generated@@345)) $generated@@345) ($generated@@138 ($generated@@342 $generated@@135 $generated@@345) $generated@@134)))
 :pattern ( ($generated@@230 $generated@@345 $generated@@134))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@135) (= (type $generated@@347) $generated@@135)) (= ($generated@@272 $generated@@346 $generated@@347) ($generated@@255 (+ ($generated@@256 $generated@@346) ($generated@@256 $generated@@347)))))
 :pattern ( ($generated@@272 $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@307 (type $generated@@348))))
(let (($generated@@350 ($generated@@306 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@305 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@304 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@303 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@78 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@307 (type $generated@@355))))
(let (($generated@@357 ($generated@@306 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@305 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@304 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@325 (type $generated@@359))))
(let (($generated@@361 ($generated@@324 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@323 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@322 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@321 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@78 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@325 (type $generated@@366))))
(let (($generated@@368 ($generated@@324 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@323 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@322 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert  (=> (<= 0 $generated@@269) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@135) (or ($generated@@371 $generated@@372) (and (not (= 0 $generated@@269)) ($generated@@138 $generated@@372 $generated@@45)))) (= ($generated@@370 $generated@@372)  (and (<= ($generated@@256 ($generated@@251 ($generated@@255 65))) ($generated@@256 $generated@@372)) (<= ($generated@@256 $generated@@372) ($generated@@256 ($generated@@251 ($generated@@255 90)))))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@374) $generated@@66)) (= ($generated@@138 $generated@@373 ($generated@@156 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@373 $generated@@375)))) ($generated@@230 $generated@@375 $generated@@374))
 :pattern ( ($generated@@83 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@138 $generated@@373 ($generated@@156 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@377) $generated@@66)) (= (type $generated@@378) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@376 ($generated@@239 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@151) ($generated@@0 ($generated@@83 $generated@@376 $generated@@379))) ($generated@@260 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@83 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@76 $generated@@376 ($generated@@239 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@78 $generated@@151 $generated@@4)) (= (type $generated@@381) $generated@@66)) (= (type $generated@@382) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@380 ($generated@@244 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@151) ($generated@@0 ($generated@@83 $generated@@380 $generated@@383))) ($generated@@260 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@83 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@76 $generated@@380 ($generated@@244 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@83 ($generated@@298 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@83 ($generated@@298 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@307 (type $generated@@389))))
(let (($generated@@391 ($generated@@306 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@305 $generated@@151 $generated@@151)) (= (type $generated@@393) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@392) ($generated@@149 ($generated@@342 $generated@@142 $generated@@393)))) (= ($generated@@83 ($generated@@387 $generated@@392) ($generated@@149 ($generated@@342 $generated@@142 $generated@@393))) ($generated@@150 ($generated@@342 $generated@@142 $generated@@393))))))
 :pattern ( ($generated@@83 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@78 $generated@@151 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@325 (type $generated@@397))))
(let (($generated@@399 ($generated@@324 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@78 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@323 $generated@@151 $generated@@151)) (= (type $generated@@401) $generated@@151)) (= ($generated@@0 ($generated@@83 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@400) ($generated@@149 ($generated@@342 $generated@@142 $generated@@401)))) (= ($generated@@83 ($generated@@395 $generated@@400) ($generated@@149 ($generated@@342 $generated@@142 $generated@@401))) ($generated@@150 ($generated@@342 $generated@@142 $generated@@401))))))
 :pattern ( ($generated@@83 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@306 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@305 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@83 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@324 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@323 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@83 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@407) $generated@@411))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@66)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@305 $generated@@151 $generated@@151)) (= (type $generated@@416) $generated@@66)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@415) $generated@@419))) (and ($generated@@260 ($generated@@83 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@260 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@76 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@66)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@323 $generated@@151 $generated@@151)) (= (type $generated@@424) $generated@@66)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@423) $generated@@427))) (and ($generated@@260 ($generated@@83 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@260 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@76 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@78 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@325 (type $generated@@430))))
(let (($generated@@432 ($generated@@324 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@323 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@322 $generated@@432 $generated@@431)) (= ($generated@@321 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@321 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@363 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@363 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@394 $generated@@436) ($generated@@428 $generated@@151))))))
 :pattern ( ($generated@@394 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@307 (type $generated@@439))))
(let (($generated@@441 ($generated@@306 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@305 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@304 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@151) (= (type $generated@@443) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@386 $generated@@439) ($generated@@290 ($generated@@229 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@325 (type $generated@@444))))
(let (($generated@@446 ($generated@@324 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@323 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@322 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@151) (= (type $generated@@448) $generated@@151)) ($generated@@0 ($generated@@83 ($generated@@394 $generated@@444) ($generated@@290 ($generated@@229 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@394 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@151) ($generated@@230 $generated@@449 $generated@@46)) (and (= ($generated@@290 ($generated@@342 $generated@@2 $generated@@449)) $generated@@449) ($generated@@138 ($generated@@342 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@151) ($generated@@230 $generated@@450 $generated@@47)) (and (= ($generated@@290 ($generated@@342 $generated@@3 $generated@@450)) $generated@@450) ($generated@@138 ($generated@@342 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@151) ($generated@@230 $generated@@451 $generated@@44)) (and (= ($generated@@290 ($generated@@342 $generated@@4 $generated@@451)) $generated@@451) ($generated@@138 ($generated@@342 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@451 $generated@@44))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@151) ($generated@@230 $generated@@452 $generated@@45)) (and (= ($generated@@290 ($generated@@342 $generated@@135 $generated@@452)) $generated@@452) ($generated@@138 ($generated@@342 $generated@@135 $generated@@452) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@452 $generated@@45))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (= (type $generated@@454) $generated@@66) (= ($generated@@230 ($generated@@290 $generated@@453) $generated@@454) ($generated@@138 $generated@@453 $generated@@454)))
 :pattern ( ($generated@@230 ($generated@@290 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@81 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@2)) (<= 0 ($generated@@297 $generated@@455))))
 :pattern ( ($generated@@297 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@284 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@283 $generated@@458)) (<= 0 ($generated@@282 $generated@@457))))
 :pattern ( ($generated@@282 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@412 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@412 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@412 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@412 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@74 ($generated@@412 $generated@@467 $generated@@468)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@420 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@420 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@420 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@420 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@74 ($generated@@420 $generated@@477 $generated@@478)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@151) (= (type $generated@@480) $generated@@151)) (= ($generated@@266 ($generated@@229 $generated@@479 $generated@@480)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@141 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@141 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@66) (= (type $generated@@488) $generated@@66)) (= ($generated@@485 ($generated@@141 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@141 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@151) (= (type $generated@@490) $generated@@151)) (= ($generated@@149 ($generated@@229 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@229 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@151) (= (type $generated@@492) $generated@@151)) (= ($generated@@150 ($generated@@229 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@229 $generated@@491 $generated@@492))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@284 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@151)) (= (type $generated@@500) $generated@@66)) (= (type $generated@@501) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@282 $generated@@499))) ($generated@@260 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@76 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@504 Int) ) (! (= ($generated@@503 ($generated@@77 $generated@@504)) $generated@@504)
 :pattern ( ($generated@@77 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@239 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@239 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@239 $generated@@508)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@244 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@244 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@512)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@156 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@156 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@156 $generated@@516)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@517 ($generated@@493 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@493 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@74 ($generated@@493 $generated@@520)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@342 $generated@@522 ($generated@@290 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@290 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@305 $generated@@151 $generated@@151)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) (= ($generated@@138 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@523) $generated@@526))) (and ($generated@@230 ($generated@@83 ($generated@@387 $generated@@523) $generated@@526) $generated@@525) ($generated@@230 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@523) $generated@@526))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@138 $generated@@523 ($generated@@412 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@323 $generated@@151 $generated@@151)) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) (= ($generated@@138 $generated@@527 ($generated@@420 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@151) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@527) $generated@@530))) (and ($generated@@230 ($generated@@83 ($generated@@395 $generated@@527) $generated@@530) $generated@@529) ($generated@@230 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@527) $generated@@530))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@138 $generated@@527 ($generated@@420 $generated@@528 $generated@@529)))
)))
(assert  (=> (<= 0 $generated@@269) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@135) (or ($generated@@371 ($generated@@251 $generated@@531)) (and (not (= 0 $generated@@269)) ($generated@@138 $generated@@531 $generated@@45)))) (= ($generated@@370 ($generated@@251 $generated@@531))  (and (<= ($generated@@256 ($generated@@251 ($generated@@255 65))) ($generated@@256 ($generated@@251 $generated@@531))) (<= ($generated@@256 ($generated@@251 $generated@@531)) ($generated@@256 ($generated@@251 ($generated@@255 90)))))))
 :weight 3
 :pattern ( ($generated@@370 ($generated@@251 $generated@@531)))
))))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@151) (= (type $generated@@535) $generated@@151)) (< ($generated@@532 $generated@@534) ($generated@@533 ($generated@@229 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@229 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@151) (= (type $generated@@537) $generated@@151)) (< ($generated@@532 $generated@@537) ($generated@@533 ($generated@@229 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@229 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@151) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) $generated@@66)) ($generated@@230 $generated@@538 ($generated@@412 $generated@@539 $generated@@540))) (and (= ($generated@@290 ($generated@@342 ($generated@@305 $generated@@151 $generated@@151) $generated@@538)) $generated@@538) ($generated@@138 ($generated@@342 ($generated@@305 $generated@@151 $generated@@151) $generated@@538) ($generated@@412 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@412 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@151) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@230 $generated@@541 ($generated@@420 $generated@@542 $generated@@543))) (and (= ($generated@@290 ($generated@@342 ($generated@@323 $generated@@151 $generated@@151) $generated@@541)) $generated@@541) ($generated@@138 ($generated@@342 ($generated@@323 $generated@@151 $generated@@151) $generated@@541) ($generated@@420 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@541 ($generated@@420 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@151)) ($generated@@230 $generated@@546 ($generated@@141 $generated@@544 $generated@@545))) (and (= ($generated@@290 ($generated@@342 $generated@@142 $generated@@546)) $generated@@546) ($generated@@138 ($generated@@342 $generated@@142 $generated@@546) ($generated@@141 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@230 $generated@@546 ($generated@@141 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@83 ($generated@@428 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@83 ($generated@@428 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (and (= ($generated@@74 ($generated@@141 $generated@@551 $generated@@552)) $generated@@62) (= ($generated@@549 ($generated@@141 $generated@@551 $generated@@552)) $generated@@64)))
 :pattern ( ($generated@@141 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@135) (= ($generated@@138 $generated@@553 $generated@@134)  (and ($generated@@138 $generated@@553 $generated@@45) ($generated@@370 $generated@@553))))
 :pattern ( ($generated@@138 $generated@@553 $generated@@134))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@142) (= ($generated@@532 ($generated@@290 $generated@@554)) ($generated@@533 $generated@@554)))
 :pattern ( ($generated@@532 ($generated@@290 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@151) ($generated@@230 $generated@@555 ($generated@@77 0))) (and (= ($generated@@290 ($generated@@342 $generated@@2 $generated@@555)) $generated@@555) ($generated@@138 ($generated@@342 ($generated@@78 $generated@@151 $generated@@4) $generated@@555) ($generated@@77 0))))
 :pattern ( ($generated@@230 $generated@@555 ($generated@@77 0)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@66)) ($generated@@230 $generated@@556 ($generated@@239 $generated@@557))) (and (= ($generated@@290 ($generated@@342 ($generated@@78 $generated@@151 $generated@@4) $generated@@556)) $generated@@556) ($generated@@138 ($generated@@342 ($generated@@78 $generated@@151 $generated@@4) $generated@@556) ($generated@@239 $generated@@557))))
 :pattern ( ($generated@@230 $generated@@556 ($generated@@239 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@151) (= (type $generated@@559) $generated@@66)) ($generated@@230 $generated@@558 ($generated@@244 $generated@@559))) (and (= ($generated@@290 ($generated@@342 ($generated@@78 $generated@@151 $generated@@4) $generated@@558)) $generated@@558) ($generated@@138 ($generated@@342 ($generated@@78 $generated@@151 $generated@@4) $generated@@558) ($generated@@244 $generated@@559))))
 :pattern ( ($generated@@230 $generated@@558 ($generated@@244 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@151) (= (type $generated@@561) $generated@@66)) ($generated@@230 $generated@@560 ($generated@@156 $generated@@561))) (and (= ($generated@@290 ($generated@@342 ($generated@@78 $generated@@151 $generated@@2) $generated@@560)) $generated@@560) ($generated@@138 ($generated@@342 ($generated@@78 $generated@@151 $generated@@2) $generated@@560) ($generated@@156 $generated@@561))))
 :pattern ( ($generated@@230 $generated@@560 ($generated@@156 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@151) (= (type $generated@@563) $generated@@66)) ($generated@@230 $generated@@562 ($generated@@493 $generated@@563))) (and (= ($generated@@290 ($generated@@342 ($generated@@283 $generated@@151) $generated@@562)) $generated@@562) ($generated@@138 ($generated@@342 ($generated@@283 $generated@@151) $generated@@562) ($generated@@493 $generated@@563))))
 :pattern ( ($generated@@230 $generated@@562 ($generated@@493 $generated@@563)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@549 $generated@@134) $generated@@65))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@78 $generated@@151 $generated@@2)) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@564 ($generated@@156 $generated@@565) $generated@@566) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@151) (< 0 ($generated ($generated@@83 $generated@@564 $generated@@567)))) ($generated@@260 $generated@@567 $generated@@565 $generated@@566))
 :pattern ( ($generated@@83 $generated@@564 $generated@@567))
))))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@156 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@142) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@570) (and ($generated@@140 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@76 $generated@@568 ($generated@@141 $generated@@569 $generated@@571) $generated@@570))
 :pattern ( ($generated@@76 $generated@@568 ($generated@@141 $generated@@569 $generated@@571) $generated@@570))
))))) ($generated@@260 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@260 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@142) (= (type $generated@@573) $generated@@66)) (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@259 $generated@@574) (and ($generated@@140 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@66) ($generated@@76 $generated@@572 ($generated@@141 $generated@@575 $generated@@573) $generated@@574))
 :pattern ( ($generated@@76 $generated@@572 ($generated@@141 $generated@@575 $generated@@573) $generated@@574))
))))) ($generated@@260 ($generated@@150 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@260 ($generated@@150 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@151) (= (type $generated@@577) $generated@@151)) (= ($generated@@229 ($generated@@251 $generated@@576) ($generated@@251 $generated@@577)) ($generated@@251 ($generated@@229 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@229 ($generated@@251 $generated@@576) ($generated@@251 $generated@@577)))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@290 ($generated@@8 ($generated@@249 $generated@@578))) ($generated@@251 ($generated@@290 ($generated@@8 $generated@@578))))
 :pattern ( ($generated@@290 ($generated@@8 ($generated@@249 $generated@@578))))
)))
(assert (forall (($generated@@579 T@U) ) (! (= ($generated@@290 ($generated@@251 $generated@@579)) ($generated@@251 ($generated@@290 $generated@@579)))
 :pattern ( ($generated@@290 ($generated@@251 $generated@@579)))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@135) (or ($generated@@271 $generated@@580) (and (not (= 2 $generated@@269)) ($generated@@138 $generated@@580 $generated@@134)))) ($generated@@138 ($generated@@270 $generated@@580) $generated@@134))
 :pattern ( ($generated@@270 $generated@@580))
))))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@284 (type $generated@@581))))
 (=> (and (= (type $generated@@581) ($generated@@283 $generated@@582)) (= ($generated@@282 $generated@@581) 0)) (= $generated@@581 ($generated@@281 $generated@@582))))
 :pattern ( ($generated@@282 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (! (let (($generated@@586 (type $generated@@584)))
 (=> (and (and (= (type $generated@@583) ($generated@@78 $generated@@586 $generated@@2)) (= (type $generated@@585) $generated@@2)) (<= 0 ($generated $generated@@585))) (= ($generated@@297 ($generated@@84 $generated@@583 $generated@@584 $generated@@585)) (+ (- ($generated@@297 $generated@@583) ($generated ($generated@@83 $generated@@583 $generated@@584))) ($generated $generated@@585)))))
 :pattern ( ($generated@@297 ($generated@@84 $generated@@583 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@2)) ($generated@@76 $generated@@588 $generated@@46 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@3)) ($generated@@76 $generated@@590 $generated@@47 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@47 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@4)) ($generated@@76 $generated@@592 $generated@@44 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@44 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@594) $generated@@135)) ($generated@@76 $generated@@594 $generated@@45 $generated@@593))
 :pattern ( ($generated@@76 $generated@@594 $generated@@45 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@151)) ($generated@@76 $generated@@596 $generated@@48 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@48 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@283 $generated@@151)) (= (type $generated@@598) $generated@@66)) (= ($generated@@138 $generated@@597 ($generated@@493 $generated@@598)) (forall (($generated@@599 Int) ) (!  (=> (and (<= 0 $generated@@599) (< $generated@@599 ($generated@@282 $generated@@597))) ($generated@@230 ($generated@@494 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@494 $generated@@597 $generated@@599))
))))
 :pattern ( ($generated@@138 $generated@@597 ($generated@@493 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 Int) ) (!  (=> (= (type $generated@@601) ($generated@@283 $generated@@151)) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@282 $generated@@601))) (< ($generated@@533 ($generated@@342 $generated@@142 ($generated@@494 $generated@@601 $generated@@602))) ($generated@@600 $generated@@601))))
 :pattern ( ($generated@@533 ($generated@@342 $generated@@142 ($generated@@494 $generated@@601 $generated@@602))))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) ($generated@@305 $generated@@151 $generated@@151)) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@66)) ($generated@@138 $generated@@603 ($generated@@412 $generated@@604 $generated@@605))) (and (and ($generated@@138 ($generated@@303 $generated@@603) ($generated@@239 $generated@@604)) ($generated@@138 ($generated@@352 $generated@@603) ($generated@@239 $generated@@605))) ($generated@@138 ($generated@@386 $generated@@603) ($generated@@239 ($generated@@141 $generated@@604 $generated@@605)))))
 :pattern ( ($generated@@138 $generated@@603 ($generated@@412 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@323 $generated@@151 $generated@@151)) (= (type $generated@@607) $generated@@66)) (= (type $generated@@608) $generated@@66)) ($generated@@138 $generated@@606 ($generated@@420 $generated@@607 $generated@@608))) (and (and ($generated@@138 ($generated@@321 $generated@@606) ($generated@@244 $generated@@607)) ($generated@@138 ($generated@@363 $generated@@606) ($generated@@244 $generated@@608))) ($generated@@138 ($generated@@394 $generated@@606) ($generated@@244 ($generated@@141 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@138 $generated@@606 ($generated@@420 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@2) ($generated@@138 $generated@@609 $generated@@46))
 :pattern ( ($generated@@138 $generated@@609 $generated@@46))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@3) ($generated@@138 $generated@@610 $generated@@47))
 :pattern ( ($generated@@138 $generated@@610 $generated@@47))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@4) ($generated@@138 $generated@@611 $generated@@44))
 :pattern ( ($generated@@138 $generated@@611 $generated@@44))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@135) ($generated@@138 $generated@@612 $generated@@45))
 :pattern ( ($generated@@138 $generated@@612 $generated@@45))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@151) ($generated@@138 $generated@@613 $generated@@48))
 :pattern ( ($generated@@138 $generated@@613 $generated@@48))
)))
(assert  (=> (<= 0 $generated@@269) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@135) (or ($generated@@371 $generated@@614) (and (not (= 0 $generated@@269)) ($generated@@138 $generated@@614 $generated@@45)))) true)
 :pattern ( ($generated@@370 $generated@@614))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@615) ($generated@@163 $generated@@79 $generated@@4)) (= (type $generated@@616) $generated@@79)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@618) $generated@@135)) (= (type $generated@@620) $generated@@135)) (= (type $generated@@621) $generated@@135)) (= (type $generated@@622) ($generated@@163 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@624  (=> (= $generated@@615 ($generated@@217 $generated@@616 $generated@@617 $generated@@60 false)) (=> (and ($generated@@138 $generated@@618 $generated@@45) (= $generated@@619 ($generated@@249 1))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (and (<= 0 $generated@@619) (< $generated@@619 65536))) (=> (and (<= 0 $generated@@619) (< $generated@@619 65536)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (< (+ ($generated@@256 $generated@@620) ($generated@@256 ($generated@@255 ($generated@@249 1)))) 65536)) (=> (< (+ ($generated@@256 $generated@@620) ($generated@@256 ($generated@@255 ($generated@@249 1)))) 65536) (=> (= $generated@@621 ($generated@@272 $generated@@620 ($generated@@255 ($generated@@249 1)))) (=> (and ($generated@@138 $generated@@621 $generated@@45) (= $generated@@618 $generated@@621)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@251 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@251 ($generated@@11 true))) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@138 $generated@@618 $generated@@134))))))))))))))
(let (($generated@@625 true))
(let (($generated@@626  (=> (= $generated@@622 ($generated@@162 $generated@@616 $generated@@617 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@625) (=> (= (ControlFlow 0 7) 3) $generated@@624)))))
(let (($generated@@627  (=> (and (and (and ($generated@@259 $generated@@617) ($generated@@623 $generated@@617)) ($generated@@138 $generated@@620 $generated@@134)) (and (= 2 $generated@@269) (= (ControlFlow 0 8) 7))) $generated@@626)))
$generated@@627)))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
