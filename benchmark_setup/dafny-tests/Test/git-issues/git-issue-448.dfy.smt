(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (Int) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (Int) T@U)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 (T@U T@U) T@U)
(declare-fun $generated@@208 (T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@225 (T@T T@T) T@T)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@228 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@288 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@296 (T@T T@U T@U) T@U)
(declare-fun $generated@@300 (T@U) Bool)
(declare-fun $generated@@306 () Int)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@U) Bool)
(declare-fun $generated@@309 (Int) Int)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@328 (T@U T@U) T@U)
(declare-fun $generated@@334 (T@U T@U T@U) Bool)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@T) T@U)
(declare-fun $generated@@352 (T@U) Int)
(declare-fun $generated@@353 (T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@380 (T@U) Int)
(declare-fun $generated@@381 (T@T) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@T T@T) T@U)
(declare-fun $generated@@391 (T@T T@T) T@T)
(declare-fun $generated@@392 (T@T) T@T)
(declare-fun $generated@@393 (T@T) T@T)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@T T@T) T@U)
(declare-fun $generated@@409 (T@T T@T) T@T)
(declare-fun $generated@@410 (T@T) T@T)
(declare-fun $generated@@411 (T@T) T@T)
(declare-fun $generated@@425 (T@U T@U) Bool)
(declare-fun $generated@@431 (T@U) Bool)
(declare-fun $generated@@438 (T@T T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@510 (T@U T@U) T@U)
(declare-fun $generated@@518 (T@U T@U) T@U)
(declare-fun $generated@@529 (T@T) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@558 () T@T)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@608 (T@U Int) T@U)
(declare-fun $generated@@617 (T@U) Int)
(declare-fun $generated@@619 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@627 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@650 (T@U) Int)
(declare-fun $generated@@651 (T@U) Int)
(declare-fun $generated@@750 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@62) $generated@@78)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@64) $generated@@79)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@78)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@90) 13) (= ($generated@@1 $generated@@91) 14)) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@102 T@U) ) (! (= (type ($generated@@89 $generated@@102)) $generated@@91)
 :pattern ( ($generated@@89 $generated@@102))
))) (forall (($generated@@103 T@U) ) (! (= (type ($generated@@94 $generated@@103)) $generated@@73)
 :pattern ( ($generated@@94 $generated@@103))
))) (forall (($generated@@104 T@U) ) (! (= (type ($generated@@97 $generated@@104)) $generated@@90)
 :pattern ( ($generated@@97 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= (type ($generated@@98 $generated@@105 $generated@@106)) $generated@@90)
 :pattern ( ($generated@@98 $generated@@105 $generated@@106))
))) (forall (($generated@@107 Int) ) (! (= (type ($generated@@99 $generated@@107)) $generated@@90)
 :pattern ( ($generated@@99 $generated@@107))
))) (forall (($generated@@108 T@U) ) (! (= (type ($generated@@100 $generated@@108)) $generated@@92)
 :pattern ( ($generated@@100 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@109) $generated@@73) (= (type $generated@@110) $generated@@73)) (= (type $generated@@111) $generated@@90)) (= (type $generated@@112) $generated@@91)) (= (type $generated@@113) $generated@@92)) (= (type $generated@@114) $generated@@92)) (and ($generated@@93 $generated@@113 ($generated@@94 $generated@@109)) ($generated@@93 $generated@@114 ($generated@@94 $generated@@110)))) (= ($generated@@88 $generated@@109 $generated@@110 $generated@@111 ($generated@@89 $generated@@112) $generated@@113 $generated@@114)  (and (=> (< 0 ($generated@@95 $generated@@111)) (and (and ($generated@@96 $generated@@113) ($generated@@96 $generated@@114)) (=> (and ($generated@@96 $generated@@113) ($generated@@96 $generated@@114)) (and (= ($generated@@97 $generated@@113) ($generated@@97 $generated@@114)) ($generated@@88 $generated@@46 $generated@@46 ($generated@@98 $generated@@111 ($generated@@99 1)) $generated@@112 ($generated@@100 $generated@@113) ($generated@@100 $generated@@114)))))) (=> (and (not (= $generated@@111 ($generated@@99 0))) (= ($generated@@95 $generated@@111) 0)) ($generated@@101 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114)))))
 :pattern ( ($generated@@88 $generated@@109 $generated@@110 $generated@@111 ($generated@@89 $generated@@112) $generated@@113 $generated@@114))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (= ($generated@@1 ($generated@@117 $generated@@126 $generated@@127)) 16)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@117 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@117 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@121 (type $generated@@132))))
(= (type ($generated@@122 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@122 $generated@@132 $generated@@133))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(let (($generated@@139 (type $generated@@136)))
(= (type ($generated@@123 $generated@@135 $generated@@136 $generated@@137)) ($generated@@117 $generated@@139 $generated@@138))))
 :pattern ( ($generated@@123 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@121 (type $generated@@140))))
 (=> (= (type $generated@@142) $generated@@143) (= ($generated@@122 ($generated@@123 $generated@@140 $generated@@141 $generated@@142) $generated@@141) $generated@@142)))
 :weight 0
))) (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@122 ($generated@@123 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@122 $generated@@145 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or true (= ($generated@@122 ($generated@@123 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@122 $generated@@149 $generated@@151)))
 :weight 0
)))) (= ($generated@@1 $generated@@118) 17)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@76 (type $generated@@153))))
(= (type ($generated@@124 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@124 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@119) 18)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@125 $generated@@155 $generated@@156 $generated@@157)) $generated@@119)
 :pattern ( ($generated@@125 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@76 (type $generated@@159))))
 (=> (= (type $generated@@160) $generated@@161) (= ($generated@@124 ($generated@@125 $generated@@158 $generated@@159 $generated@@160) $generated@@159) $generated@@160)))
 :weight 0
))) (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@124 ($generated@@125 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@124 $generated@@163 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or true (= ($generated@@124 ($generated@@125 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@124 $generated@@167 $generated@@169)))
 :weight 0
)))) (forall (($generated@@170 Int) ) (! (= (type ($generated@@116 $generated@@170)) $generated@@73)
 :pattern ( ($generated@@116 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@2) (= (type $generated@@172) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
 :pattern ( ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@173) $generated@@73) (= (type $generated@@174) $generated@@73)) (= (type $generated@@175) $generated@@90)) (= (type $generated@@176) $generated@@91)) (= (type $generated@@177) $generated@@92)) (= (type $generated@@178) $generated@@92)) (not (= $generated@@175 ($generated@@99 0)))) (= ($generated@@88 $generated@@173 $generated@@174 $generated@@175 ($generated@@89 $generated@@176) $generated@@177 $generated@@178) ($generated@@88 $generated@@173 $generated@@174 $generated@@175 $generated@@176 $generated@@177 $generated@@178)))
 :pattern ( ($generated@@88 $generated@@173 $generated@@174 $generated@@175 ($generated@@89 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@181) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@179 $generated@@180 $generated@@181)) (forall (($generated@@182 T@U) ) (!  (=> (and (= (type $generated@@182) $generated@@118) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@180 $generated@@182) $generated@@60))) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@181 $generated@@182) $generated@@60)))
 :pattern ( ($generated@@124 ($generated@@122 $generated@@181 $generated@@182) $generated@@60))
)))
 :pattern ( ($generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and (= (type $generated@@184) $generated@@90) (= (type $generated@@185) $generated@@90)) (= (type $generated@@186) $generated@@90)) (and ($generated@@183 $generated@@184 $generated@@185) ($generated@@183 $generated@@185 $generated@@186))) ($generated@@183 $generated@@184 $generated@@186))
 :pattern ( ($generated@@183 $generated@@184 $generated@@185) ($generated@@183 $generated@@185 $generated@@186))
 :pattern ( ($generated@@183 $generated@@184 $generated@@185) ($generated@@183 $generated@@184 $generated@@186))
)))
(assert  (and (= (type $generated@@187) $generated@@73) (= (type $generated@@188) $generated@@118)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (= (type $generated@@189) $generated@@118) (= (type $generated@@190) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@189 $generated@@187 $generated@@190)  (or (= $generated@@189 $generated@@188) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@190 $generated@@189) $generated@@60)))))
 :pattern ( ($generated@@115 $generated@@189 $generated@@187 $generated@@190))
)))
(assert  (and (= (type $generated@@191) ($generated@@75 $generated@@2)) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@193 $generated@@194)) $generated@@73)
 :pattern ( ($generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@196) $generated@@118)) (and ($generated@@192 $generated@@195) (and (not (= $generated@@196 $generated@@188)) (= ($generated@@193 $generated@@196) $generated@@187)))) ($generated@@93 ($generated@@124 ($generated@@122 $generated@@195 $generated@@196) $generated@@191) $generated@@46))
 :pattern ( ($generated@@124 ($generated@@122 $generated@@195 $generated@@196) $generated@@191))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= (type $generated@@197) $generated@@2) ($generated@@93 $generated@@197 ($generated@@116 0)))
 :pattern ( ($generated@@93 $generated@@197 ($generated@@116 0)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 Int) ) (!  (=> (= (type $generated@@198) $generated@@90) (=> (and (and (<= 0 $generated@@199) (<= 0 $generated@@200)) (<= (+ $generated@@199 $generated@@200) ($generated@@95 $generated@@198))) (= ($generated@@98 ($generated@@98 $generated@@198 ($generated@@99 $generated@@199)) ($generated@@99 $generated@@200)) ($generated@@98 $generated@@198 ($generated@@99 (+ $generated@@199 $generated@@200))))))
 :pattern ( ($generated@@98 ($generated@@98 $generated@@198 ($generated@@99 $generated@@199)) ($generated@@99 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= (type ($generated@@202 $generated@@203 $generated@@204)) $generated@@73)
 :pattern ( ($generated@@202 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (= (type $generated@@205) $generated@@73) (= (type $generated@@206) $generated@@73)) (= (type $generated@@207) $generated@@92)) ($generated@@93 $generated@@207 ($generated@@202 $generated@@205 $generated@@206))) ($generated@@201 $generated@@207))
 :pattern ( ($generated@@201 $generated@@207) ($generated@@93 $generated@@207 ($generated@@202 $generated@@205 $generated@@206)))
)))
(assert  (and (forall (($generated@@211 T@U) ) (! (= (type ($generated@@209 $generated@@211)) $generated@@90)
 :pattern ( ($generated@@209 $generated@@211))
)) (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@90)
 :pattern ( ($generated@@210 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (and (= (type $generated@@213) $generated@@92) (= (type $generated@@214) $generated@@92)) true) (= ($generated@@208 $generated@@213 $generated@@214)  (and (= ($generated@@209 $generated@@213) ($generated@@209 $generated@@214)) (= ($generated@@210 $generated@@213) ($generated@@210 $generated@@214)))))
 :pattern ( ($generated@@208 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ) (! (= (type ($generated@@215 $generated@@217)) $generated@@73)
 :pattern ( ($generated@@215 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and (= (type $generated@@218) ($generated@@117 $generated@@90 $generated@@2)) (= (type $generated@@219) $generated@@73)) ($generated@@93 $generated@@218 ($generated@@215 $generated@@219))) ($generated@@216 $generated@@218))
 :pattern ( ($generated@@93 $generated@@218 ($generated@@215 $generated@@219)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (= (type $generated@@220) $generated@@73) (= (type $generated@@221) $generated@@92)) ($generated@@93 $generated@@221 ($generated@@94 $generated@@220))) ($generated@@96 $generated@@221))
 :pattern ( ($generated@@96 $generated@@221) ($generated@@93 $generated@@221 ($generated@@94 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ) (!  (=> (= (type $generated@@222) $generated@@118) (= ($generated@@93 $generated@@222 $generated@@187)  (or (= $generated@@222 $generated@@188) (= ($generated@@193 $generated@@222) $generated@@187))))
 :pattern ( ($generated@@93 $generated@@222 $generated@@187))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (= ($generated@@1 ($generated@@225 $generated@@229 $generated@@230)) 19)) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (! (= ($generated@@226 ($generated@@225 $generated@@231 $generated@@232)) $generated@@231)
 :pattern ( ($generated@@225 $generated@@231 $generated@@232))
))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@227 ($generated@@225 $generated@@233 $generated@@234)) $generated@@234)
 :pattern ( ($generated@@225 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@227 (type $generated@@235))))
(= (type ($generated@@223 $generated@@235 $generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@223 $generated@@235 $generated@@236 $generated@@237))
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 (type $generated@@242)))
(let (($generated@@244 (type $generated@@240)))
(= (type ($generated@@228 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@225 $generated@@244 $generated@@243))))
 :pattern ( ($generated@@228 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@227 (type $generated@@245))))
 (=> (= (type $generated@@248) $generated@@249) (= ($generated@@223 ($generated@@228 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@246 $generated@@247) $generated@@248)))
 :weight 0
))) (and (and (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (or (= $generated@@252 $generated@@254) (= ($generated@@223 ($generated@@228 $generated@@251 $generated@@252 $generated@@253 $generated@@250) $generated@@254 $generated@@255) ($generated@@223 $generated@@251 $generated@@254 $generated@@255)))
 :weight 0
)) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (or (= $generated@@259 $generated@@261) (= ($generated@@223 ($generated@@228 $generated@@257 $generated@@258 $generated@@259 $generated@@256) $generated@@260 $generated@@261) ($generated@@223 $generated@@257 $generated@@260 $generated@@261)))
 :weight 0
))) (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (or true (= ($generated@@223 ($generated@@228 $generated@@263 $generated@@264 $generated@@265 $generated@@262) $generated@@266 $generated@@267) ($generated@@223 $generated@@263 $generated@@266 $generated@@267)))
 :weight 0
)))) (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 Bool) ) (! (= (type ($generated@@224 $generated@@268 $generated@@269 $generated@@270 $generated@@271)) ($generated@@225 $generated@@118 $generated@@4))
 :pattern ( ($generated@@224 $generated@@268 $generated@@269 $generated@@270 $generated@@271))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 Bool) ($generated@@276 T@U) ($generated@@277 T@U) ) (! (let (($generated@@278 ($generated@@76 (type $generated@@277))))
 (=> (and (and (and (and (= (type $generated@@272) $generated@@118) (= (type $generated@@273) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@274) ($generated@@75 $generated@@4))) (= (type $generated@@276) $generated@@118)) (= (type $generated@@277) ($generated@@75 $generated@@278))) (= ($generated@@0 ($generated@@223 ($generated@@224 $generated@@272 $generated@@273 $generated@@274 $generated@@275) $generated@@276 $generated@@277))  (=> (and (not (= $generated@@276 $generated@@272)) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@273 $generated@@276) $generated@@274))) $generated@@275))))
 :pattern ( ($generated@@223 ($generated@@224 $generated@@272 $generated@@273 $generated@@274 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@279) $generated@@73) (= (type $generated@@280) $generated@@73)) (= (type $generated@@281) $generated@@90)) (= (type $generated@@282) $generated@@91)) (= (type $generated@@283) $generated@@92)) (= (type $generated@@284) $generated@@92)) (= $generated@@283 $generated@@284)) ($generated@@88 $generated@@279 $generated@@280 $generated@@281 ($generated@@89 $generated@@282) $generated@@283 $generated@@284))
 :pattern ( ($generated@@88 $generated@@279 $generated@@280 $generated@@281 ($generated@@89 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (= (type $generated@@285) $generated@@73))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@118) (= (type $generated@@287) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@286 $generated@@285 $generated@@287) ($generated@@115 $generated@@286 $generated@@187 $generated@@287)))
 :pattern ( ($generated@@115 $generated@@286 $generated@@285 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (! (= (type ($generated@@288 $generated@@290 $generated@@291)) $generated@@92)
 :pattern ( ($generated@@288 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (= (type $generated@@292) $generated@@73) (= (type $generated@@293) $generated@@73)) (= (type $generated@@294) $generated@@90)) (= (type $generated@@295) $generated@@90)) (= ($generated@@93 ($generated@@288 $generated@@294 $generated@@295) ($generated@@202 $generated@@292 $generated@@293))  (and ($generated@@289 $generated@@294 $generated@@292) ($generated@@289 $generated@@295 $generated@@293))))
 :pattern ( ($generated@@93 ($generated@@288 $generated@@294 $generated@@295) ($generated@@202 $generated@@292 $generated@@293)))
)))
(assert (= ($generated@@83 $generated@@191) 0))
(assert (forall (($generated@@297 T@T) ($generated@@298 T@U) ($generated@@299 T@U) ) (! (= (type ($generated@@296 $generated@@297 $generated@@298 $generated@@299)) ($generated@@75 $generated@@297))
 :pattern ( ($generated@@296 $generated@@297 $generated@@298 $generated@@299))
)))
(assert (= ($generated@@296 $generated@@2 $generated@@64 $generated@@72) $generated@@191))
(assert  (not ($generated@@300 $generated@@191)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@301) $generated@@73) (= (type $generated@@302) $generated@@73)) (= (type $generated@@303) $generated@@91)) (= (type $generated@@304) $generated@@92)) (= (type $generated@@305) $generated@@92)) (= ($generated@@101 $generated@@301 $generated@@302 ($generated@@89 $generated@@303) $generated@@304 $generated@@305) (= $generated@@304 $generated@@305)))
 :pattern ( ($generated@@101 $generated@@301 $generated@@302 ($generated@@89 $generated@@303) $generated@@304 $generated@@305))
)))
(assert  (=> (<= 0 $generated@@306) (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@118) (or ($generated@@308 $generated@@310) (and (not (= 0 $generated@@306)) (and (not (= $generated@@310 $generated@@188)) ($generated@@93 $generated@@310 $generated@@285))))) (= ($generated@@307 $generated@@310) ($generated@@309 5)))
 :pattern ( ($generated@@307 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@92) (= (type $generated@@312) $generated@@92)) (= ($generated@@208 $generated@@311 $generated@@312) (= $generated@@311 $generated@@312)))
 :pattern ( ($generated@@208 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@73)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@117 $generated@@90 $generated@@4)) (= (type $generated@@316) $generated@@73)) (= ($generated@@93 $generated@@315 ($generated@@313 $generated@@316)) (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@90) ($generated@@0 ($generated@@122 $generated@@315 $generated@@317))) ($generated@@289 $generated@@317 $generated@@316))
 :pattern ( ($generated@@122 $generated@@315 $generated@@317))
))))
 :pattern ( ($generated@@93 $generated@@315 ($generated@@313 $generated@@316)))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@73)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@320) ($generated@@117 $generated@@90 $generated@@4)) (= (type $generated@@321) $generated@@73)) (= ($generated@@93 $generated@@320 ($generated@@318 $generated@@321)) (forall (($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@90) ($generated@@0 ($generated@@122 $generated@@320 $generated@@322))) ($generated@@289 $generated@@322 $generated@@321))
 :pattern ( ($generated@@122 $generated@@320 $generated@@322))
))))
 :pattern ( ($generated@@93 $generated@@320 ($generated@@318 $generated@@321)))
)))
(assert (forall (($generated@@323 Int) ) (! (= ($generated@@309 $generated@@323) $generated@@323)
 :pattern ( ($generated@@309 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 (type $generated@@325)))
(= (type ($generated@@324 $generated@@325)) $generated@@326))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= ($generated@@324 $generated@@327) $generated@@327)
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@92)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (and (= (type $generated@@331) $generated@@73) (= (type $generated@@332) $generated@@90)) (= (type $generated@@333) $generated@@92)) (= ($generated@@93 ($generated@@328 $generated@@332 $generated@@333) ($generated@@94 $generated@@331))  (and ($generated@@289 $generated@@332 $generated@@331) ($generated@@93 $generated@@333 ($generated@@94 $generated@@46)))))
 :pattern ( ($generated@@93 ($generated@@328 $generated@@332 $generated@@333) ($generated@@94 $generated@@331)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@335) $generated@@73) (= (type $generated@@336) $generated@@73)) (= (type $generated@@337) $generated@@90)) (= (type $generated@@338) $generated@@90)) (= (type $generated@@339) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@192 $generated@@339)) (= ($generated@@115 ($generated@@288 $generated@@337 $generated@@338) ($generated@@202 $generated@@335 $generated@@336) $generated@@339)  (and ($generated@@334 $generated@@337 $generated@@335 $generated@@339) ($generated@@334 $generated@@338 $generated@@336 $generated@@339))))
 :pattern ( ($generated@@115 ($generated@@288 $generated@@337 $generated@@338) ($generated@@202 $generated@@335 $generated@@336) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@78)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@92) (= ($generated@@201 $generated@@342) (= ($generated@@340 $generated@@342) $generated@@62)))
 :pattern ( ($generated@@201 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@92) (= ($generated@@96 $generated@@343) (= ($generated@@340 $generated@@343) $generated@@67)))
 :pattern ( ($generated@@96 $generated@@343))
)))
(assert  (=> (<= 0 $generated@@306) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@118) (or ($generated@@308 ($generated@@324 $generated@@344)) (and (not (= 0 $generated@@306)) (and (not (= $generated@@344 $generated@@188)) ($generated@@93 $generated@@344 $generated@@285))))) (= ($generated@@307 ($generated@@324 $generated@@344)) ($generated@@309 5)))
 :weight 3
 :pattern ( ($generated@@307 ($generated@@324 $generated@@344)))
))))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@92) ($generated@@201 $generated@@345)) (exists (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (and (and (= (type $generated@@346) $generated@@90) (= (type $generated@@347) $generated@@90)) (= $generated@@345 ($generated@@288 $generated@@346 $generated@@347)))
 :no-pattern (type $generated@@346)
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
)))
 :pattern ( ($generated@@201 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@92) ($generated@@96 $generated@@348)) (exists (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (and (and (= (type $generated@@349) $generated@@90) (= (type $generated@@350) $generated@@92)) (= $generated@@348 ($generated@@328 $generated@@349 $generated@@350)))
 :no-pattern (type $generated@@349)
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
)))
 :pattern ( ($generated@@96 $generated@@348))
)))
(assert  (and (and (forall (($generated@@355 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@355)) 20)) (forall (($generated@@356 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@353 $generated@@356))
))) (forall (($generated@@357 T@T) ) (! (= (type ($generated@@351 $generated@@357)) ($generated@@353 $generated@@357))
 :pattern ( ($generated@@351 $generated@@357))
))))
(assert (forall (($generated@@358 T@T) ) (! (= ($generated@@352 ($generated@@351 $generated@@358)) 0)
 :pattern ( ($generated@@351 $generated@@358))
)))
(assert  (=> (<= 0 $generated@@306) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@118) (or ($generated@@308 $generated@@359) (and (not (= 0 $generated@@306)) (and (not (= $generated@@359 $generated@@188)) ($generated@@93 $generated@@359 $generated@@285))))) true)
 :pattern ( ($generated@@307 $generated@@359))
))))
(assert ($generated@@300 $generated@@60))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@360) $generated@@73) (= (type $generated@@361) $generated@@73)) (= (type $generated@@362) $generated@@91)) (= (type $generated@@363) $generated@@92)) (= (type $generated@@364) $generated@@92)) (and ($generated@@93 $generated@@363 ($generated@@94 $generated@@360)) ($generated@@93 $generated@@364 ($generated@@94 $generated@@361)))) (= ($generated@@101 $generated@@360 $generated@@361 ($generated@@89 $generated@@362) $generated@@363 $generated@@364)  (and (and ($generated@@96 $generated@@363) ($generated@@96 $generated@@364)) (=> (and ($generated@@96 $generated@@363) ($generated@@96 $generated@@364)) (and (= ($generated@@97 $generated@@363) ($generated@@97 $generated@@364)) ($generated@@101 $generated@@46 $generated@@46 $generated@@362 ($generated@@100 $generated@@363) ($generated@@100 $generated@@364)))))))
 :pattern ( ($generated@@101 $generated@@360 $generated@@361 ($generated@@89 $generated@@362) $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (= (type ($generated@@365 $generated@@366)) $generated@@90)
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@73) (= (type $generated@@369) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@334 ($generated@@365 $generated@@367) $generated@@368 $generated@@369) ($generated@@115 $generated@@367 $generated@@368 $generated@@369)))
 :pattern ( ($generated@@334 ($generated@@365 $generated@@367) $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@370) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@371) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@372) $generated@@90)) (= (type $generated@@373) $generated@@73)) ($generated@@179 $generated@@370 $generated@@371)) ($generated@@334 $generated@@372 $generated@@373 $generated@@370)) ($generated@@334 $generated@@372 $generated@@373 $generated@@371))
 :pattern ( ($generated@@179 $generated@@370 $generated@@371) ($generated@@334 $generated@@372 $generated@@373 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@374) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@375) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@377) $generated@@73)) ($generated@@179 $generated@@374 $generated@@375)) ($generated@@115 $generated@@376 $generated@@377 $generated@@374)) ($generated@@115 $generated@@376 $generated@@377 $generated@@375))
 :pattern ( ($generated@@179 $generated@@374 $generated@@375) ($generated@@115 $generated@@376 $generated@@377 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@379) $generated@@118)) (=> (and (and ($generated@@192 $generated@@378) (and (not (= $generated@@379 $generated@@188)) (= ($generated@@193 $generated@@379) $generated@@187))) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@378 $generated@@379) $generated@@60))) ($generated@@115 ($generated@@124 ($generated@@122 $generated@@378 $generated@@379) $generated@@191) $generated@@46 $generated@@378)))
 :pattern ( ($generated@@124 ($generated@@122 $generated@@378 $generated@@379) $generated@@191))
)))
(assert (forall (($generated@@382 T@T) ) (! (= (type ($generated@@381 $generated@@382)) ($generated@@117 $generated@@382 $generated@@2))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@120 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@117 $generated@@384 $generated@@2)) (and (= (= ($generated@@380 $generated@@383) 0) (= $generated@@383 ($generated@@381 $generated@@384))) (=> (not (= ($generated@@380 $generated@@383) 0)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (< 0 ($generated ($generated@@122 $generated@@383 $generated@@385))))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (= (type ($generated@@386 $generated@@387)) $generated@@80)
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (= (type $generated@@388) $generated@@73) (and (= ($generated@@84 ($generated@@94 $generated@@388)) $generated@@68) (= ($generated@@386 ($generated@@94 $generated@@388)) $generated@@71)))
 :pattern ( ($generated@@94 $generated@@388))
)))
(assert  (and (and (and (and (forall (($generated@@394 T@T) ($generated@@395 T@T) ) (= ($generated@@1 ($generated@@391 $generated@@394 $generated@@395)) 21)) (forall (($generated@@396 T@T) ($generated@@397 T@T) ) (! (= ($generated@@392 ($generated@@391 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@391 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@T) ($generated@@399 T@T) ) (! (= ($generated@@393 ($generated@@391 $generated@@398 $generated@@399)) $generated@@399)
 :pattern ( ($generated@@391 $generated@@398 $generated@@399))
))) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@392 (type $generated@@400))))
(= (type ($generated@@389 $generated@@400)) ($generated@@117 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@400))
))) (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (! (= (type ($generated@@390 $generated@@402 $generated@@403)) ($generated@@391 $generated@@402 $generated@@403))
 :pattern ( ($generated@@390 $generated@@402 $generated@@403))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@T) ) (! (let (($generated@@406 (type $generated@@404)))
 (not ($generated@@0 ($generated@@122 ($generated@@389 ($generated@@390 $generated@@406 $generated@@405)) $generated@@404))))
 :pattern ( (let (($generated@@406 (type $generated@@404)))
($generated@@122 ($generated@@389 ($generated@@390 $generated@@406 $generated@@405)) $generated@@404)))
)))
(assert  (and (and (and (and (forall (($generated@@412 T@T) ($generated@@413 T@T) ) (= ($generated@@1 ($generated@@409 $generated@@412 $generated@@413)) 22)) (forall (($generated@@414 T@T) ($generated@@415 T@T) ) (! (= ($generated@@410 ($generated@@409 $generated@@414 $generated@@415)) $generated@@414)
 :pattern ( ($generated@@409 $generated@@414 $generated@@415))
))) (forall (($generated@@416 T@T) ($generated@@417 T@T) ) (! (= ($generated@@411 ($generated@@409 $generated@@416 $generated@@417)) $generated@@417)
 :pattern ( ($generated@@409 $generated@@416 $generated@@417))
))) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@410 (type $generated@@418))))
(= (type ($generated@@407 $generated@@418)) ($generated@@117 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@407 $generated@@418))
))) (forall (($generated@@420 T@T) ($generated@@421 T@T) ) (! (= (type ($generated@@408 $generated@@420 $generated@@421)) ($generated@@409 $generated@@420 $generated@@421))
 :pattern ( ($generated@@408 $generated@@420 $generated@@421))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@T) ) (! (let (($generated@@424 (type $generated@@422)))
 (not ($generated@@0 ($generated@@122 ($generated@@407 ($generated@@408 $generated@@424 $generated@@423)) $generated@@422))))
 :pattern ( (let (($generated@@424 (type $generated@@422)))
($generated@@122 ($generated@@407 ($generated@@408 $generated@@424 $generated@@423)) $generated@@422)))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@427) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@425 $generated@@426 $generated@@427)) (and ($generated@@179 $generated@@426 $generated@@427) (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@76 (type $generated@@429))))
 (=> (and (and (= (type $generated@@428) $generated@@118) (= (type $generated@@429) ($generated@@75 $generated@@430))) (not ($generated@@300 $generated@@429))) (= ($generated@@124 ($generated@@122 $generated@@426 $generated@@428) $generated@@429) ($generated@@124 ($generated@@122 $generated@@427 $generated@@428) $generated@@429))))
 :pattern ( ($generated@@124 ($generated@@122 $generated@@427 $generated@@428) $generated@@429))
))))
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (= (type $generated@@432) $generated@@90) (= (type $generated@@433) $generated@@90)) (and ($generated@@431 $generated@@433) (<= ($generated@@95 $generated@@433) ($generated@@95 $generated@@432)))) (and (= ($generated@@431 ($generated@@98 $generated@@432 $generated@@433)) ($generated@@431 $generated@@432)) (= ($generated@@95 ($generated@@98 $generated@@432 $generated@@433)) (- ($generated@@95 $generated@@432) ($generated@@95 $generated@@433)))))
 :pattern ( ($generated@@98 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 Int) ) (!  (=> (<= 0 $generated@@434) (and ($generated@@431 ($generated@@99 $generated@@434)) (= ($generated@@95 ($generated@@99 $generated@@434)) $generated@@434)))
 :pattern ( ($generated@@99 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@120 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@117 $generated@@436 $generated@@2)) (= ($generated@@216 $generated@@435) (forall (($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@436) (and (<= 0 ($generated ($generated@@122 $generated@@435 $generated@@437))) (<= ($generated ($generated@@122 $generated@@435 $generated@@437)) ($generated@@380 $generated@@435))))
 :pattern ( ($generated@@122 $generated@@435 $generated@@437))
)))))
 :pattern ( ($generated@@216 $generated@@435))
)))
(assert (forall (($generated@@439 T@T) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@439)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@90) ($generated@@289 $generated@@441 $generated@@187)) (and (= ($generated@@365 ($generated@@438 $generated@@118 $generated@@441)) $generated@@441) ($generated@@93 ($generated@@438 $generated@@118 $generated@@441) $generated@@187)))
 :pattern ( ($generated@@289 $generated@@441 $generated@@187))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@90) ($generated@@289 $generated@@442 $generated@@285)) (and (= ($generated@@365 ($generated@@438 $generated@@118 $generated@@442)) $generated@@442) ($generated@@93 ($generated@@438 $generated@@118 $generated@@442) $generated@@285)))
 :pattern ( ($generated@@289 $generated@@442 $generated@@285))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@118) (= ($generated@@93 $generated@@443 $generated@@285)  (and ($generated@@93 $generated@@443 $generated@@187) (not (= $generated@@443 $generated@@188)))))
 :pattern ( ($generated@@93 $generated@@443 $generated@@285))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@393 (type $generated@@444))))
(let (($generated@@446 ($generated@@392 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@391 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@390 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@446) ($generated@@0 ($generated@@122 ($generated@@389 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@389 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@393 (type $generated@@449))))
(= (type ($generated@@448 $generated@@449)) ($generated@@117 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@393 (type $generated@@451))))
(let (($generated@@453 ($generated@@392 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@391 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@390 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@452) ($generated@@0 ($generated@@122 ($generated@@448 $generated@@451) $generated@@454)))
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@448 $generated@@451))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@411 (type $generated@@455))))
(let (($generated@@457 ($generated@@410 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@409 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@408 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) ($generated@@0 ($generated@@122 ($generated@@407 $generated@@455) $generated@@458)))
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@407 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@411 (type $generated@@460))))
(= (type ($generated@@459 $generated@@460)) ($generated@@117 $generated@@461 $generated@@4)))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@411 (type $generated@@462))))
(let (($generated@@464 ($generated@@410 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@409 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@408 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ) (!  (and (= (type $generated@@465) $generated@@463) ($generated@@0 ($generated@@122 ($generated@@459 $generated@@462) $generated@@465)))
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@459 $generated@@462))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) ($generated@@117 $generated@@90 $generated@@2)) (= (type $generated@@467) $generated@@73)) (= ($generated@@93 $generated@@466 ($generated@@215 $generated@@467)) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@90) (< 0 ($generated ($generated@@122 $generated@@466 $generated@@468)))) ($generated@@289 $generated@@468 $generated@@467))
 :pattern ( ($generated@@122 $generated@@466 $generated@@468))
))))
 :pattern ( ($generated@@93 $generated@@466 ($generated@@215 $generated@@467)))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@90) (= (type $generated@@470) $generated@@90)) (or (or ($generated@@183 $generated@@469 $generated@@470) (= $generated@@469 $generated@@470)) ($generated@@183 $generated@@470 $generated@@469)))
 :pattern ( ($generated@@183 $generated@@469 $generated@@470) ($generated@@183 $generated@@470 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@471) $generated@@92) (= (type $generated@@472) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@192 $generated@@472) (and ($generated@@96 $generated@@471) (exists (($generated@@473 T@U) ) (!  (and (= (type $generated@@473) $generated@@73) ($generated@@115 $generated@@471 ($generated@@94 $generated@@473) $generated@@472))
 :pattern ( ($generated@@115 $generated@@471 ($generated@@94 $generated@@473) $generated@@472))
))))) ($generated@@115 ($generated@@100 $generated@@471) ($generated@@94 $generated@@46) $generated@@472))
 :pattern ( ($generated@@115 ($generated@@100 $generated@@471) ($generated@@94 $generated@@46) $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (= (type $generated@@474) ($generated@@117 $generated@@90 $generated@@4)) (= (type $generated@@475) $generated@@73)) (= (type $generated@@476) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@474 ($generated@@313 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@90) ($generated@@0 ($generated@@122 $generated@@474 $generated@@477))) ($generated@@334 $generated@@477 $generated@@475 $generated@@476))
 :pattern ( ($generated@@122 $generated@@474 $generated@@477))
))))
 :pattern ( ($generated@@115 $generated@@474 ($generated@@313 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@117 $generated@@90 $generated@@4)) (= (type $generated@@479) $generated@@73)) (= (type $generated@@480) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@478 ($generated@@318 $generated@@479) $generated@@480) (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@90) ($generated@@0 ($generated@@122 $generated@@478 $generated@@481))) ($generated@@334 $generated@@481 $generated@@479 $generated@@480))
 :pattern ( ($generated@@122 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@115 $generated@@478 ($generated@@318 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(= ($generated ($generated@@122 ($generated@@381 $generated@@483) $generated@@482)) 0))
 :pattern ( (let (($generated@@483 (type $generated@@482)))
($generated@@122 ($generated@@381 $generated@@483) $generated@@482)))
)))
(assert  (and (forall (($generated@@486 T@U) ) (! (= (type ($generated@@484 $generated@@486)) ($generated@@117 $generated@@90 $generated@@4))
 :pattern ( ($generated@@484 $generated@@486))
)) (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@393 (type $generated@@487))))
(let (($generated@@489 ($generated@@392 (type $generated@@487))))
(= (type ($generated@@485 $generated@@487)) ($generated@@117 $generated@@489 $generated@@488))))
 :pattern ( ($generated@@485 $generated@@487))
))))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) ($generated@@391 $generated@@90 $generated@@90)) (= (type $generated@@491) $generated@@90)) (= ($generated@@0 ($generated@@122 ($generated@@484 $generated@@490) $generated@@491))  (and ($generated@@0 ($generated@@122 ($generated@@389 $generated@@490) ($generated@@209 ($generated@@438 $generated@@92 $generated@@491)))) (= ($generated@@122 ($generated@@485 $generated@@490) ($generated@@209 ($generated@@438 $generated@@92 $generated@@491))) ($generated@@210 ($generated@@438 $generated@@92 $generated@@491))))))
 :pattern ( ($generated@@122 ($generated@@484 $generated@@490) $generated@@491))
)))
(assert  (and (forall (($generated@@494 T@U) ) (! (= (type ($generated@@492 $generated@@494)) ($generated@@117 $generated@@90 $generated@@4))
 :pattern ( ($generated@@492 $generated@@494))
)) (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@411 (type $generated@@495))))
(let (($generated@@497 ($generated@@410 (type $generated@@495))))
(= (type ($generated@@493 $generated@@495)) ($generated@@117 $generated@@497 $generated@@496))))
 :pattern ( ($generated@@493 $generated@@495))
))))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) ($generated@@409 $generated@@90 $generated@@90)) (= (type $generated@@499) $generated@@90)) (= ($generated@@0 ($generated@@122 ($generated@@492 $generated@@498) $generated@@499))  (and ($generated@@0 ($generated@@122 ($generated@@407 $generated@@498) ($generated@@209 ($generated@@438 $generated@@92 $generated@@499)))) (= ($generated@@122 ($generated@@493 $generated@@498) ($generated@@209 ($generated@@438 $generated@@92 $generated@@499))) ($generated@@210 ($generated@@438 $generated@@92 $generated@@499))))))
 :pattern ( ($generated@@122 ($generated@@492 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(let (($generated@@503 ($generated@@392 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@391 $generated@@503 $generated@@502)) (= ($generated@@0 ($generated@@122 ($generated@@448 $generated@@500) $generated@@501)) (exists (($generated@@504 T@U) ) (!  (and (= (type $generated@@504) $generated@@503) (and ($generated@@0 ($generated@@122 ($generated@@389 $generated@@500) $generated@@504)) (= $generated@@501 ($generated@@122 ($generated@@485 $generated@@500) $generated@@504))))
 :pattern ( ($generated@@122 ($generated@@389 $generated@@500) $generated@@504))
 :pattern ( ($generated@@122 ($generated@@485 $generated@@500) $generated@@504))
))))))
 :pattern ( ($generated@@122 ($generated@@448 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (let (($generated@@507 (type $generated@@506)))
(let (($generated@@508 ($generated@@410 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@409 $generated@@508 $generated@@507)) (= ($generated@@0 ($generated@@122 ($generated@@459 $generated@@505) $generated@@506)) (exists (($generated@@509 T@U) ) (!  (and (= (type $generated@@509) $generated@@508) (and ($generated@@0 ($generated@@122 ($generated@@407 $generated@@505) $generated@@509)) (= $generated@@506 ($generated@@122 ($generated@@493 $generated@@505) $generated@@509))))
 :pattern ( ($generated@@122 ($generated@@407 $generated@@505) $generated@@509))
 :pattern ( ($generated@@122 ($generated@@493 $generated@@505) $generated@@509))
))))))
 :pattern ( ($generated@@122 ($generated@@459 $generated@@505) $generated@@506))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@511 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@510 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) ($generated@@391 $generated@@90 $generated@@90)) (= (type $generated@@514) $generated@@73)) (= (type $generated@@515) $generated@@73)) (= (type $generated@@516) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@90) ($generated@@0 ($generated@@122 ($generated@@389 $generated@@513) $generated@@517))) (and ($generated@@334 ($generated@@122 ($generated@@485 $generated@@513) $generated@@517) $generated@@515 $generated@@516) ($generated@@334 $generated@@517 $generated@@514 $generated@@516)))
 :pattern ( ($generated@@122 ($generated@@485 $generated@@513) $generated@@517))
 :pattern ( ($generated@@122 ($generated@@389 $generated@@513) $generated@@517))
))))
 :pattern ( ($generated@@115 $generated@@513 ($generated@@510 $generated@@514 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@519 $generated@@520)) $generated@@73)
 :pattern ( ($generated@@518 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) ($generated@@409 $generated@@90 $generated@@90)) (= (type $generated@@522) $generated@@73)) (= (type $generated@@523) $generated@@73)) (= (type $generated@@524) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@90) ($generated@@0 ($generated@@122 ($generated@@407 $generated@@521) $generated@@525))) (and ($generated@@334 ($generated@@122 ($generated@@493 $generated@@521) $generated@@525) $generated@@523 $generated@@524) ($generated@@334 $generated@@525 $generated@@522 $generated@@524)))
 :pattern ( ($generated@@122 ($generated@@493 $generated@@521) $generated@@525))
 :pattern ( ($generated@@122 ($generated@@407 $generated@@521) $generated@@525))
))))
 :pattern ( ($generated@@115 $generated@@521 ($generated@@518 $generated@@522 $generated@@523) $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@526) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@527) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@528) ($generated@@117 $generated@@118 $generated@@119))) (not (= $generated@@526 $generated@@528))) (and ($generated@@179 $generated@@526 $generated@@527) ($generated@@179 $generated@@527 $generated@@528))) ($generated@@179 $generated@@526 $generated@@528))
 :pattern ( ($generated@@179 $generated@@526 $generated@@527) ($generated@@179 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@T) ) (! (= (type ($generated@@529 $generated@@530)) ($generated@@117 $generated@@530 $generated@@4))
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@411 (type $generated@@531))))
(let (($generated@@533 ($generated@@410 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@409 $generated@@533 $generated@@532)) (= (= $generated@@531 ($generated@@408 $generated@@533 $generated@@532)) (= ($generated@@407 $generated@@531) ($generated@@529 $generated@@533))))))
 :pattern ( ($generated@@407 $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@411 (type $generated@@534))))
(let (($generated@@536 ($generated@@410 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@409 $generated@@536 $generated@@535)) (= (= $generated@@534 ($generated@@408 $generated@@536 $generated@@535)) (= ($generated@@459 $generated@@534) ($generated@@529 $generated@@535))))))
 :pattern ( ($generated@@459 $generated@@534))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 ($generated@@411 (type $generated@@537))))
(let (($generated@@539 ($generated@@410 (type $generated@@537))))
 (=> (= (type $generated@@537) ($generated@@409 $generated@@539 $generated@@538)) (= (= $generated@@537 ($generated@@408 $generated@@539 $generated@@538)) (= ($generated@@492 $generated@@537) ($generated@@529 $generated@@90))))))
 :pattern ( ($generated@@492 $generated@@537))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 ($generated@@393 (type $generated@@540))))
(let (($generated@@542 ($generated@@392 (type $generated@@540))))
 (=> (= (type $generated@@540) ($generated@@391 $generated@@542 $generated@@541)) (or (= $generated@@540 ($generated@@390 $generated@@542 $generated@@541)) (exists (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (and (and (= (type $generated@@543) $generated@@90) (= (type $generated@@544) $generated@@90)) ($generated@@0 ($generated@@122 ($generated@@484 $generated@@540) ($generated@@365 ($generated@@288 $generated@@543 $generated@@544)))))
 :no-pattern (type $generated@@543)
 :no-pattern (type $generated@@544)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
 :no-pattern ($generated $generated@@544)
 :no-pattern ($generated@@0 $generated@@544)
))))))
 :pattern ( ($generated@@484 $generated@@540))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@411 (type $generated@@545))))
(let (($generated@@547 ($generated@@410 (type $generated@@545))))
 (=> (= (type $generated@@545) ($generated@@409 $generated@@547 $generated@@546)) (or (= $generated@@545 ($generated@@408 $generated@@547 $generated@@546)) (exists (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (and (and (= (type $generated@@548) $generated@@90) (= (type $generated@@549) $generated@@90)) ($generated@@0 ($generated@@122 ($generated@@492 $generated@@545) ($generated@@365 ($generated@@288 $generated@@548 $generated@@549)))))
 :no-pattern (type $generated@@548)
 :no-pattern (type $generated@@549)
 :no-pattern ($generated $generated@@548)
 :no-pattern ($generated@@0 $generated@@548)
 :no-pattern ($generated $generated@@549)
 :no-pattern ($generated@@0 $generated@@549)
))))))
 :pattern ( ($generated@@492 $generated@@545))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@79)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@T) ) (!  (=> (and (= (type $generated@@552) $generated@@79) (= (type $generated@@553) $generated@@77)) (and (= ($generated@@550 ($generated@@296 $generated@@554 $generated@@552 $generated@@553)) $generated@@552) (= ($generated@@86 ($generated@@296 $generated@@554 $generated@@552 $generated@@553)) $generated@@553)))
 :pattern ( ($generated@@296 $generated@@554 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@90) ($generated@@289 $generated@@555 $generated@@46)) (and (= ($generated@@365 ($generated@@438 $generated@@2 $generated@@555)) $generated@@555) ($generated@@93 ($generated@@438 $generated@@2 $generated@@555) $generated@@46)))
 :pattern ( ($generated@@289 $generated@@555 $generated@@46))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@90) ($generated@@289 $generated@@556 $generated@@47)) (and (= ($generated@@365 ($generated@@438 $generated@@3 $generated@@556)) $generated@@556) ($generated@@93 ($generated@@438 $generated@@3 $generated@@556) $generated@@47)))
 :pattern ( ($generated@@289 $generated@@556 $generated@@47))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@90) ($generated@@289 $generated@@557 $generated@@44)) (and (= ($generated@@365 ($generated@@438 $generated@@4 $generated@@557)) $generated@@557) ($generated@@93 ($generated@@438 $generated@@4 $generated@@557) $generated@@44)))
 :pattern ( ($generated@@289 $generated@@557 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@558) 23))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@90) ($generated@@289 $generated@@559 $generated@@45)) (and (= ($generated@@365 ($generated@@438 $generated@@558 $generated@@559)) $generated@@559) ($generated@@93 ($generated@@438 $generated@@558 $generated@@559) $generated@@45)))
 :pattern ( ($generated@@289 $generated@@559 $generated@@45))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@73) (= ($generated@@289 ($generated@@365 $generated@@560) $generated@@561) ($generated@@93 $generated@@560 $generated@@561)))
 :pattern ( ($generated@@289 ($generated@@365 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@90) (<= 0 ($generated@@95 $generated@@562)))
 :pattern ( ($generated@@95 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@120 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@117 $generated@@564 $generated@@2)) (<= 0 ($generated@@380 $generated@@563))))
 :pattern ( ($generated@@380 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@354 (type $generated@@565))))
 (=> (= (type $generated@@565) ($generated@@353 $generated@@566)) (<= 0 ($generated@@352 $generated@@565))))
 :pattern ( ($generated@@352 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@73)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@73) (= (type $generated@@570) $generated@@73)) (= ($generated@@567 ($generated@@510 $generated@@569 $generated@@570)) $generated@@569))
 :pattern ( ($generated@@510 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@73)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@73) (= (type $generated@@574) $generated@@73)) (= ($generated@@571 ($generated@@510 $generated@@573 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@510 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@73) (= (type $generated@@576) $generated@@73)) (= ($generated@@84 ($generated@@510 $generated@@575 $generated@@576)) $generated@@58))
 :pattern ( ($generated@@510 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@73)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@73) (= (type $generated@@580) $generated@@73)) (= ($generated@@577 ($generated@@518 $generated@@579 $generated@@580)) $generated@@579))
 :pattern ( ($generated@@518 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@73)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@73) (= (type $generated@@584) $generated@@73)) (= ($generated@@581 ($generated@@518 $generated@@583 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@518 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@73) (= (type $generated@@586) $generated@@73)) (= ($generated@@84 ($generated@@518 $generated@@585 $generated@@586)) $generated@@59))
 :pattern ( ($generated@@518 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@90) (= (type $generated@@588) $generated@@90)) (= ($generated@@340 ($generated@@288 $generated@@587 $generated@@588)) $generated@@62))
 :pattern ( ($generated@@288 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@73)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@73) (= (type $generated@@592) $generated@@73)) (= ($generated@@589 ($generated@@202 $generated@@591 $generated@@592)) $generated@@591))
 :pattern ( ($generated@@202 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@73)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@73) (= (type $generated@@596) $generated@@73)) (= ($generated@@593 ($generated@@202 $generated@@595 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@202 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@90) (= (type $generated@@598) $generated@@90)) (= ($generated@@209 ($generated@@288 $generated@@597 $generated@@598)) $generated@@597))
 :pattern ( ($generated@@288 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@90) (= (type $generated@@600) $generated@@90)) (= ($generated@@210 ($generated@@288 $generated@@599 $generated@@600)) $generated@@600))
 :pattern ( ($generated@@288 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@90) (= (type $generated@@602) $generated@@92)) (= ($generated@@340 ($generated@@328 $generated@@601 $generated@@602)) $generated@@67))
 :pattern ( ($generated@@328 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@90) (= (type $generated@@604) $generated@@92)) (= ($generated@@97 ($generated@@328 $generated@@603 $generated@@604)) $generated@@603))
 :pattern ( ($generated@@328 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@90) (= (type $generated@@606) $generated@@92)) (= ($generated@@100 ($generated@@328 $generated@@605 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@328 $generated@@605 $generated@@606))
)))
(assert  (and (forall (($generated@@609 T@U) ) (! (= (type ($generated@@607 $generated@@609)) $generated@@73)
 :pattern ( ($generated@@607 $generated@@609))
)) (forall (($generated@@610 T@U) ($generated@@611 Int) ) (! (let (($generated@@612 ($generated@@354 (type $generated@@610))))
(= (type ($generated@@608 $generated@@610 $generated@@611)) $generated@@612))
 :pattern ( ($generated@@608 $generated@@610 $generated@@611))
))))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@353 $generated@@90)) (= (type $generated@@614) $generated@@73)) (= (type $generated@@615) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@613 ($generated@@607 $generated@@614) $generated@@615) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@352 $generated@@613))) ($generated@@334 ($generated@@608 $generated@@613 $generated@@616) $generated@@614 $generated@@615))
 :pattern ( ($generated@@608 $generated@@613 $generated@@616))
))))
 :pattern ( ($generated@@115 $generated@@613 ($generated@@607 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@617 ($generated@@116 $generated@@618)) $generated@@618)
 :pattern ( ($generated@@116 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ) (! (= (type ($generated@@619 $generated@@620)) $generated@@73)
 :pattern ( ($generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@73) (= ($generated@@619 ($generated@@313 $generated@@621)) $generated@@621))
 :pattern ( ($generated@@313 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@73) (= ($generated@@84 ($generated@@313 $generated@@622)) $generated@@54))
 :pattern ( ($generated@@313 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ) (! (= (type ($generated@@623 $generated@@624)) $generated@@73)
 :pattern ( ($generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@73) (= ($generated@@623 ($generated@@318 $generated@@625)) $generated@@625))
 :pattern ( ($generated@@318 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@73) (= ($generated@@84 ($generated@@318 $generated@@626)) $generated@@55))
 :pattern ( ($generated@@318 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ) (! (= (type ($generated@@627 $generated@@628)) $generated@@73)
 :pattern ( ($generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@73) (= ($generated@@627 ($generated@@215 $generated@@629)) $generated@@629))
 :pattern ( ($generated@@215 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@73) (= ($generated@@84 ($generated@@215 $generated@@630)) $generated@@56))
 :pattern ( ($generated@@215 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (! (= (type ($generated@@631 $generated@@632)) $generated@@73)
 :pattern ( ($generated@@631 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@73) (= ($generated@@631 ($generated@@607 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@607 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@73) (= ($generated@@84 ($generated@@607 $generated@@634)) $generated@@57))
 :pattern ( ($generated@@607 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@73)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@73) (= ($generated@@635 ($generated@@94 $generated@@637)) $generated@@637))
 :pattern ( ($generated@@94 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (! (let (($generated@@639 (type $generated@@638)))
(= ($generated@@438 $generated@@639 ($generated@@365 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@365 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@391 $generated@@90 $generated@@90)) (= (type $generated@@641) $generated@@73)) (= (type $generated@@642) $generated@@73)) (= ($generated@@93 $generated@@640 ($generated@@510 $generated@@641 $generated@@642)) (forall (($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@90) ($generated@@0 ($generated@@122 ($generated@@389 $generated@@640) $generated@@643))) (and ($generated@@289 ($generated@@122 ($generated@@485 $generated@@640) $generated@@643) $generated@@642) ($generated@@289 $generated@@643 $generated@@641)))
 :pattern ( ($generated@@122 ($generated@@485 $generated@@640) $generated@@643))
 :pattern ( ($generated@@122 ($generated@@389 $generated@@640) $generated@@643))
))))
 :pattern ( ($generated@@93 $generated@@640 ($generated@@510 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@409 $generated@@90 $generated@@90)) (= (type $generated@@645) $generated@@73)) (= (type $generated@@646) $generated@@73)) (= ($generated@@93 $generated@@644 ($generated@@518 $generated@@645 $generated@@646)) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@90) ($generated@@0 ($generated@@122 ($generated@@407 $generated@@644) $generated@@647))) (and ($generated@@289 ($generated@@122 ($generated@@493 $generated@@644) $generated@@647) $generated@@646) ($generated@@289 $generated@@647 $generated@@645)))
 :pattern ( ($generated@@122 ($generated@@493 $generated@@644) $generated@@647))
 :pattern ( ($generated@@122 ($generated@@407 $generated@@644) $generated@@647))
))))
 :pattern ( ($generated@@93 $generated@@644 ($generated@@518 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@90) (= (type $generated@@649) $generated@@90)) (and (and (and (=> ($generated@@183 $generated@@648 $generated@@649) (not (= $generated@@648 $generated@@649))) (=> (and ($generated@@431 $generated@@648) (not ($generated@@431 $generated@@649))) ($generated@@183 $generated@@648 $generated@@649))) (=> (and ($generated@@431 $generated@@648) ($generated@@431 $generated@@649)) (= ($generated@@183 $generated@@648 $generated@@649) (< ($generated@@95 $generated@@648) ($generated@@95 $generated@@649))))) (=> (and ($generated@@183 $generated@@648 $generated@@649) ($generated@@431 $generated@@649)) ($generated@@431 $generated@@648))))
 :pattern ( ($generated@@183 $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@90) (= (type $generated@@653) $generated@@90)) (< ($generated@@650 $generated@@652) ($generated@@651 ($generated@@288 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@288 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@90) (= (type $generated@@655) $generated@@90)) (< ($generated@@650 $generated@@655) ($generated@@651 ($generated@@288 $generated@@654 $generated@@655))))
 :pattern ( ($generated@@288 $generated@@654 $generated@@655))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (and (= (type $generated@@656) $generated@@90) (= (type $generated@@657) $generated@@73)) (= (type $generated@@658) $generated@@73)) ($generated@@289 $generated@@656 ($generated@@510 $generated@@657 $generated@@658))) (and (= ($generated@@365 ($generated@@438 ($generated@@391 $generated@@90 $generated@@90) $generated@@656)) $generated@@656) ($generated@@93 ($generated@@438 ($generated@@391 $generated@@90 $generated@@90) $generated@@656) ($generated@@510 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@289 $generated@@656 ($generated@@510 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@90) (= (type $generated@@660) $generated@@73)) (= (type $generated@@661) $generated@@73)) ($generated@@289 $generated@@659 ($generated@@518 $generated@@660 $generated@@661))) (and (= ($generated@@365 ($generated@@438 ($generated@@409 $generated@@90 $generated@@90) $generated@@659)) $generated@@659) ($generated@@93 ($generated@@438 ($generated@@409 $generated@@90 $generated@@90) $generated@@659) ($generated@@518 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@289 $generated@@659 ($generated@@518 $generated@@660 $generated@@661)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@73) (= (type $generated@@663) $generated@@73)) (= (type $generated@@664) $generated@@90)) ($generated@@289 $generated@@664 ($generated@@202 $generated@@662 $generated@@663))) (and (= ($generated@@365 ($generated@@438 $generated@@92 $generated@@664)) $generated@@664) ($generated@@93 ($generated@@438 $generated@@92 $generated@@664) ($generated@@202 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@289 $generated@@664 ($generated@@202 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@665) $generated@@73) (= (type $generated@@666) $generated@@73)) (= (type $generated@@667) $generated@@91)) (= (type $generated@@668) $generated@@92)) (= (type $generated@@669) $generated@@92)) (= ($generated@@101 $generated@@665 $generated@@666 ($generated@@89 $generated@@667) $generated@@668 $generated@@669) (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@90) ($generated@@88 $generated@@665 $generated@@666 $generated@@670 ($generated@@89 $generated@@667) $generated@@668 $generated@@669))
 :pattern ( ($generated@@88 $generated@@665 $generated@@666 $generated@@670 ($generated@@89 $generated@@667) $generated@@668 $generated@@669))
))))
 :pattern ( ($generated@@101 $generated@@665 $generated@@666 ($generated@@89 $generated@@667) $generated@@668 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) $generated@@92) (= (type $generated@@672) $generated@@73)) (= (type $generated@@673) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@192 $generated@@673) (and ($generated@@96 $generated@@671) ($generated@@115 $generated@@671 ($generated@@94 $generated@@672) $generated@@673)))) ($generated@@334 ($generated@@97 $generated@@671) $generated@@672 $generated@@673))
 :pattern ( ($generated@@334 ($generated@@97 $generated@@671) $generated@@672 $generated@@673))
)))
(assert (forall (($generated@@674 T@U) ) (! (let (($generated@@675 (type $generated@@674)))
 (not ($generated@@0 ($generated@@122 ($generated@@529 $generated@@675) $generated@@674))))
 :pattern ( (let (($generated@@675 (type $generated@@674)))
($generated@@122 ($generated@@529 $generated@@675) $generated@@674)))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) $generated@@73) (= (type $generated@@677) $generated@@73)) (and (= ($generated@@84 ($generated@@202 $generated@@676 $generated@@677)) $generated@@63) (= ($generated@@386 ($generated@@202 $generated@@676 $generated@@677)) $generated@@69)))
 :pattern ( ($generated@@202 $generated@@676 $generated@@677))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@92) (= ($generated@@650 ($generated@@365 $generated@@678)) ($generated@@651 $generated@@678)))
 :pattern ( ($generated@@650 ($generated@@365 $generated@@678)))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@679) $generated@@90) ($generated@@289 $generated@@679 ($generated@@116 0))) (and (= ($generated@@365 ($generated@@438 $generated@@2 $generated@@679)) $generated@@679) ($generated@@93 ($generated@@438 ($generated@@117 $generated@@90 $generated@@4) $generated@@679) ($generated@@116 0))))
 :pattern ( ($generated@@289 $generated@@679 ($generated@@116 0)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) $generated@@90) (= (type $generated@@681) $generated@@73)) ($generated@@289 $generated@@680 ($generated@@313 $generated@@681))) (and (= ($generated@@365 ($generated@@438 ($generated@@117 $generated@@90 $generated@@4) $generated@@680)) $generated@@680) ($generated@@93 ($generated@@438 ($generated@@117 $generated@@90 $generated@@4) $generated@@680) ($generated@@313 $generated@@681))))
 :pattern ( ($generated@@289 $generated@@680 ($generated@@313 $generated@@681)))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@682) $generated@@90) (= (type $generated@@683) $generated@@73)) ($generated@@289 $generated@@682 ($generated@@318 $generated@@683))) (and (= ($generated@@365 ($generated@@438 ($generated@@117 $generated@@90 $generated@@4) $generated@@682)) $generated@@682) ($generated@@93 ($generated@@438 ($generated@@117 $generated@@90 $generated@@4) $generated@@682) ($generated@@318 $generated@@683))))
 :pattern ( ($generated@@289 $generated@@682 ($generated@@318 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) $generated@@90) (= (type $generated@@685) $generated@@73)) ($generated@@289 $generated@@684 ($generated@@215 $generated@@685))) (and (= ($generated@@365 ($generated@@438 ($generated@@117 $generated@@90 $generated@@2) $generated@@684)) $generated@@684) ($generated@@93 ($generated@@438 ($generated@@117 $generated@@90 $generated@@2) $generated@@684) ($generated@@215 $generated@@685))))
 :pattern ( ($generated@@289 $generated@@684 ($generated@@215 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@686) $generated@@90) (= (type $generated@@687) $generated@@73)) ($generated@@289 $generated@@686 ($generated@@607 $generated@@687))) (and (= ($generated@@365 ($generated@@438 ($generated@@353 $generated@@90) $generated@@686)) $generated@@686) ($generated@@93 ($generated@@438 ($generated@@353 $generated@@90) $generated@@686) ($generated@@607 $generated@@687))))
 :pattern ( ($generated@@289 $generated@@686 ($generated@@607 $generated@@687)))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (= (type $generated@@688) $generated@@73) (= (type $generated@@689) $generated@@90)) ($generated@@289 $generated@@689 ($generated@@94 $generated@@688))) (and (= ($generated@@365 ($generated@@438 $generated@@92 $generated@@689)) $generated@@689) ($generated@@93 ($generated@@438 $generated@@92 $generated@@689) ($generated@@94 $generated@@688))))
 :pattern ( ($generated@@289 $generated@@689 ($generated@@94 $generated@@688)))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@690) $generated@@90) ($generated@@431 $generated@@690)) (= $generated@@690 ($generated@@99 ($generated@@95 $generated@@690))))
 :pattern ( ($generated@@95 $generated@@690))
 :pattern ( ($generated@@431 $generated@@690))
)))
(assert (= ($generated@@84 $generated@@187) $generated@@65))
(assert (= ($generated@@386 $generated@@187) $generated@@70))
(assert (= ($generated@@84 $generated@@285) $generated@@66))
(assert (= ($generated@@386 $generated@@285) $generated@@70))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@691) ($generated@@117 $generated@@90 $generated@@2)) (= (type $generated@@692) $generated@@73)) (= (type $generated@@693) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@691 ($generated@@215 $generated@@692) $generated@@693) (forall (($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@694) $generated@@90) (< 0 ($generated ($generated@@122 $generated@@691 $generated@@694)))) ($generated@@334 $generated@@694 $generated@@692 $generated@@693))
 :pattern ( ($generated@@122 $generated@@691 $generated@@694))
))))
 :pattern ( ($generated@@115 $generated@@691 ($generated@@215 $generated@@692) $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) $generated@@90) (= (type $generated@@696) $generated@@90)) (and ($generated@@431 $generated@@696) (<= ($generated@@95 $generated@@696) ($generated@@95 $generated@@695)))) (or (and (= $generated@@696 ($generated@@99 0)) (= ($generated@@98 $generated@@695 $generated@@696) $generated@@695)) (and (not (= $generated@@696 ($generated@@99 0))) ($generated@@183 ($generated@@98 $generated@@695 $generated@@696) $generated@@695))))
 :pattern ( ($generated@@98 $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@697) $generated@@73) (= (type $generated@@698) $generated@@73)) (= (type $generated@@699) $generated@@90)) (= (type $generated@@700) $generated@@91)) (= (type $generated@@701) $generated@@92)) (= (type $generated@@702) $generated@@92)) (= (type $generated@@703) $generated@@90)) (and ($generated@@183 $generated@@699 $generated@@703) ($generated@@88 $generated@@697 $generated@@698 $generated@@703 ($generated@@89 $generated@@700) $generated@@701 $generated@@702))) ($generated@@88 $generated@@697 $generated@@698 $generated@@699 ($generated@@89 $generated@@700) $generated@@701 $generated@@702))
 :pattern ( ($generated@@88 $generated@@697 $generated@@698 $generated@@699 ($generated@@89 $generated@@700) $generated@@701 $generated@@702) ($generated@@88 $generated@@697 $generated@@698 $generated@@703 ($generated@@89 $generated@@700) $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@704) $generated@@73) (= (type $generated@@705) $generated@@73)) (= (type $generated@@706) $generated@@91)) (= (type $generated@@707) $generated@@92)) (= (type $generated@@708) $generated@@92)) (= ($generated@@101 $generated@@704 $generated@@705 ($generated@@89 $generated@@706) $generated@@707 $generated@@708) ($generated@@101 $generated@@704 $generated@@705 $generated@@706 $generated@@707 $generated@@708)))
 :pattern ( ($generated@@101 $generated@@704 $generated@@705 ($generated@@89 $generated@@706) $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) $generated@@92) (= (type $generated@@710) $generated@@73)) (= (type $generated@@711) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@192 $generated@@711) (and ($generated@@201 $generated@@709) (exists (($generated@@712 T@U) ) (!  (and (= (type $generated@@712) $generated@@73) ($generated@@115 $generated@@709 ($generated@@202 $generated@@710 $generated@@712) $generated@@711))
 :pattern ( ($generated@@115 $generated@@709 ($generated@@202 $generated@@710 $generated@@712) $generated@@711))
))))) ($generated@@334 ($generated@@209 $generated@@709) $generated@@710 $generated@@711))
 :pattern ( ($generated@@334 ($generated@@209 $generated@@709) $generated@@710 $generated@@711))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (and (= (type $generated@@713) $generated@@92) (= (type $generated@@714) $generated@@73)) (= (type $generated@@715) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@192 $generated@@715) (and ($generated@@201 $generated@@713) (exists (($generated@@716 T@U) ) (!  (and (= (type $generated@@716) $generated@@73) ($generated@@115 $generated@@713 ($generated@@202 $generated@@716 $generated@@714) $generated@@715))
 :pattern ( ($generated@@115 $generated@@713 ($generated@@202 $generated@@716 $generated@@714) $generated@@715))
))))) ($generated@@334 ($generated@@210 $generated@@713) $generated@@714 $generated@@715))
 :pattern ( ($generated@@334 ($generated@@210 $generated@@713) $generated@@714 $generated@@715))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (= (type $generated@@717) $generated@@90) (= (type $generated@@718) $generated@@90)) (= ($generated@@288 ($generated@@324 $generated@@717) ($generated@@324 $generated@@718)) ($generated@@324 ($generated@@288 $generated@@717 $generated@@718))))
 :pattern ( ($generated@@288 ($generated@@324 $generated@@717) ($generated@@324 $generated@@718)))
)))
(assert (forall (($generated@@719 Int) ) (! (= ($generated@@365 ($generated@@8 ($generated@@309 $generated@@719))) ($generated@@324 ($generated@@365 ($generated@@8 $generated@@719))))
 :pattern ( ($generated@@365 ($generated@@8 ($generated@@309 $generated@@719))))
)))
(assert (forall (($generated@@720 T@U) ) (! (= ($generated@@365 ($generated@@324 $generated@@720)) ($generated@@324 ($generated@@365 $generated@@720)))
 :pattern ( ($generated@@365 ($generated@@324 $generated@@720)))
)))
(assert (forall (($generated@@721 T@U) ) (! (let (($generated@@722 ($generated@@354 (type $generated@@721))))
 (=> (and (= (type $generated@@721) ($generated@@353 $generated@@722)) (= ($generated@@352 $generated@@721) 0)) (= $generated@@721 ($generated@@351 $generated@@722))))
 :pattern ( ($generated@@352 $generated@@721))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ($generated@@725 T@U) ) (! (let (($generated@@726 (type $generated@@724)))
 (=> (and (and (= (type $generated@@723) ($generated@@117 $generated@@726 $generated@@2)) (= (type $generated@@725) $generated@@2)) (<= 0 ($generated $generated@@725))) (= ($generated@@380 ($generated@@123 $generated@@723 $generated@@724 $generated@@725)) (+ (- ($generated@@380 $generated@@723) ($generated ($generated@@122 $generated@@723 $generated@@724))) ($generated $generated@@725)))))
 :pattern ( ($generated@@380 ($generated@@123 $generated@@723 $generated@@724 $generated@@725)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ($generated@@729 T@U) ($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@727) $generated@@73) (= (type $generated@@728) $generated@@73)) (= (type $generated@@729) $generated@@91)) (= (type $generated@@730) $generated@@92)) (= (type $generated@@731) $generated@@92)) (forall (($generated@@732 Int) ) (!  (=> (<= 0 $generated@@732) ($generated@@88 $generated@@727 $generated@@728 ($generated@@99 $generated@@732) ($generated@@89 $generated@@729) $generated@@730 $generated@@731))
 :pattern ( ($generated@@88 $generated@@727 $generated@@728 ($generated@@99 $generated@@732) ($generated@@89 $generated@@729) $generated@@730 $generated@@731))
))) ($generated@@101 $generated@@727 $generated@@728 ($generated@@89 $generated@@729) $generated@@730 $generated@@731))
 :pattern ( ($generated@@101 $generated@@727 $generated@@728 ($generated@@89 $generated@@729) $generated@@730 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@734) $generated@@2)) ($generated@@115 $generated@@734 $generated@@46 $generated@@733))
 :pattern ( ($generated@@115 $generated@@734 $generated@@46 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (= (type $generated@@735) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@736) $generated@@3)) ($generated@@115 $generated@@736 $generated@@47 $generated@@735))
 :pattern ( ($generated@@115 $generated@@736 $generated@@47 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ) (!  (=> (and (= (type $generated@@737) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@738) $generated@@4)) ($generated@@115 $generated@@738 $generated@@44 $generated@@737))
 :pattern ( ($generated@@115 $generated@@738 $generated@@44 $generated@@737))
)))
(assert (forall (($generated@@739 T@U) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@739) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@740) $generated@@558)) ($generated@@115 $generated@@740 $generated@@45 $generated@@739))
 :pattern ( ($generated@@115 $generated@@740 $generated@@45 $generated@@739))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (= (type $generated@@741) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@742) $generated@@90)) ($generated@@115 $generated@@742 $generated@@48 $generated@@741))
 :pattern ( ($generated@@115 $generated@@742 $generated@@48 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@743) $generated@@73) (= (type $generated@@744) $generated@@90)) (= (type $generated@@745) $generated@@92)) (= (type $generated@@746) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@192 $generated@@746)) (= ($generated@@115 ($generated@@328 $generated@@744 $generated@@745) ($generated@@94 $generated@@743) $generated@@746)  (and ($generated@@334 $generated@@744 $generated@@743 $generated@@746) ($generated@@115 $generated@@745 ($generated@@94 $generated@@46) $generated@@746))))
 :pattern ( ($generated@@115 ($generated@@328 $generated@@744 $generated@@745) ($generated@@94 $generated@@743) $generated@@746))
)))
(assert (forall (($generated@@747 T@U) ($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@747) ($generated@@353 $generated@@90)) (= (type $generated@@748) $generated@@73)) (= ($generated@@93 $generated@@747 ($generated@@607 $generated@@748)) (forall (($generated@@749 Int) ) (!  (=> (and (<= 0 $generated@@749) (< $generated@@749 ($generated@@352 $generated@@747))) ($generated@@289 ($generated@@608 $generated@@747 $generated@@749) $generated@@748))
 :pattern ( ($generated@@608 $generated@@747 $generated@@749))
))))
 :pattern ( ($generated@@93 $generated@@747 ($generated@@607 $generated@@748)))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 Int) ) (!  (=> (= (type $generated@@751) ($generated@@353 $generated@@90)) (=> (and (<= 0 $generated@@752) (< $generated@@752 ($generated@@352 $generated@@751))) (< ($generated@@651 ($generated@@438 $generated@@92 ($generated@@608 $generated@@751 $generated@@752))) ($generated@@750 $generated@@751))))
 :pattern ( ($generated@@651 ($generated@@438 $generated@@92 ($generated@@608 $generated@@751 $generated@@752))))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (and (= (type $generated@@753) ($generated@@391 $generated@@90 $generated@@90)) (= (type $generated@@754) $generated@@73)) (= (type $generated@@755) $generated@@73)) ($generated@@93 $generated@@753 ($generated@@510 $generated@@754 $generated@@755))) (and (and ($generated@@93 ($generated@@389 $generated@@753) ($generated@@313 $generated@@754)) ($generated@@93 ($generated@@448 $generated@@753) ($generated@@313 $generated@@755))) ($generated@@93 ($generated@@484 $generated@@753) ($generated@@313 ($generated@@202 $generated@@754 $generated@@755)))))
 :pattern ( ($generated@@93 $generated@@753 ($generated@@510 $generated@@754 $generated@@755)))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (and (and (= (type $generated@@756) ($generated@@409 $generated@@90 $generated@@90)) (= (type $generated@@757) $generated@@73)) (= (type $generated@@758) $generated@@73)) ($generated@@93 $generated@@756 ($generated@@518 $generated@@757 $generated@@758))) (and (and ($generated@@93 ($generated@@407 $generated@@756) ($generated@@318 $generated@@757)) ($generated@@93 ($generated@@459 $generated@@756) ($generated@@318 $generated@@758))) ($generated@@93 ($generated@@492 $generated@@756) ($generated@@318 ($generated@@202 $generated@@757 $generated@@758)))))
 :pattern ( ($generated@@93 $generated@@756 ($generated@@518 $generated@@757 $generated@@758)))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@2) ($generated@@93 $generated@@759 $generated@@46))
 :pattern ( ($generated@@93 $generated@@759 $generated@@46))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@3) ($generated@@93 $generated@@760 $generated@@47))
 :pattern ( ($generated@@93 $generated@@760 $generated@@47))
)))
(assert (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@4) ($generated@@93 $generated@@761 $generated@@44))
 :pattern ( ($generated@@93 $generated@@761 $generated@@44))
)))
(assert (forall (($generated@@762 T@U) ) (!  (=> (= (type $generated@@762) $generated@@558) ($generated@@93 $generated@@762 $generated@@45))
 :pattern ( ($generated@@93 $generated@@762 $generated@@45))
)))
(assert (forall (($generated@@763 T@U) ) (!  (=> (= (type $generated@@763) $generated@@90) ($generated@@93 $generated@@763 $generated@@48))
 :pattern ( ($generated@@93 $generated@@763 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@764 () Bool)
(declare-fun $generated@@765 () T@U)
(declare-fun $generated@@766 () T@U)
(declare-fun $generated@@767 () T@U)
(declare-fun $generated@@768 () Bool)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 (T@U) Bool)
(declare-fun $generated@@771 () T@U)
(declare-fun $generated@@772 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@765) $generated@@118) (= (type $generated@@766) ($generated@@225 $generated@@118 $generated@@4))) (= (type $generated@@767) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@769) $generated@@92)) (= (type $generated@@771) $generated@@118)) (= (type $generated@@772) $generated@@92)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@773 true))
(let (($generated@@774  (and (=> (= (ControlFlow 0 10) (- 0 11)) $generated@@764) (=> $generated@@764 (=> (= (ControlFlow 0 10) (- 0 9)) (not (= $generated@@765 $generated@@188)))))))
(let (($generated@@775  (=> (= (ControlFlow 0 8) (- 0 7)) $generated@@764)))
(let (($generated@@776  (and (=> (= (ControlFlow 0 5) (- 0 6)) $generated@@764) (=> $generated@@764 (=> (= (ControlFlow 0 5) (- 0 4)) (not (= $generated@@765 $generated@@188)))))))
(let (($generated@@777  (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@764) (=> $generated@@764 (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@765 $generated@@188)))))))
(let (($generated@@778  (=> (= $generated@@766 ($generated@@224 $generated@@188 $generated@@767 $generated@@60 false)) (=> (and (=> $generated@@764 (and ($generated@@93 $generated@@765 $generated@@285) ($generated@@115 $generated@@765 $generated@@285 $generated@@767))) (=> $generated@@768 (and ($generated@@93 $generated@@769 ($generated@@94 $generated@@44)) ($generated@@115 $generated@@769 ($generated@@94 $generated@@44) $generated@@767)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) $generated@@768) (=> $generated@@768 (=> (and ($generated@@96 $generated@@769) ($generated@@96 $generated@@769)) (and (and (and (and (=> (= (ControlFlow 0 13) 2) $generated@@777) (=> (= (ControlFlow 0 13) 5) $generated@@776)) (=> (= (ControlFlow 0 13) 8) $generated@@775)) (=> (= (ControlFlow 0 13) 10) $generated@@774)) (=> (= (ControlFlow 0 13) 12) $generated@@773)))))))))
(let (($generated@@779  (=> (and (and (and ($generated@@192 $generated@@767) ($generated@@770 $generated@@767)) (and (=> $generated@@764 (and ($generated@@93 $generated@@771 $generated@@285) ($generated@@115 $generated@@771 $generated@@285 $generated@@767))) true)) (and (and (=> $generated@@768 (and ($generated@@93 $generated@@772 ($generated@@94 $generated@@44)) ($generated@@115 $generated@@772 ($generated@@94 $generated@@44) $generated@@767))) true) (and (= 2 $generated@@306) (= (ControlFlow 0 15) 13)))) $generated@@778)))
$generated@@779))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 6))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :reason-unknown)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@67) (= (type $generated@@255) $generated@@67)) (= (type $generated@@256) $generated@@156)) (= (type $generated@@257) $generated@@156)) (= (type $generated@@258) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@252 $generated@@258)) (= ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@256 $generated@@257) ($generated@@146 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@71)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@147) (= ($generated@@145 $generated@@261) (= ($generated@@259 $generated@@261) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@147) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@156) (= (type $generated@@264) $generated@@156)) (= $generated@@262 ($generated@@228 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@156)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@67) (= (type $generated@@277) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277) ($generated@@77 $generated@@275 $generated@@276 $generated@@277)))
 :pattern ( ($generated@@253 ($generated@@273 $generated@@275) $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@280) $generated@@156)) (= (type $generated@@281) $generated@@67)) ($generated@@135 $generated@@278 $generated@@279)) ($generated@@253 $generated@@280 $generated@@281 $generated@@278)) ($generated@@253 $generated@@280 $generated@@281 $generated@@279))
 :pattern ( ($generated@@135 $generated@@278 $generated@@279) ($generated@@253 $generated@@280 $generated@@281 $generated@@278))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@285) $generated@@67)) ($generated@@135 $generated@@282 $generated@@283)) ($generated@@77 $generated@@284 $generated@@285 $generated@@282)) ($generated@@77 $generated@@284 $generated@@285 $generated@@283))
 :pattern ( ($generated@@135 $generated@@282 $generated@@283) ($generated@@77 $generated@@284 $generated@@285 $generated@@282))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@79 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@82 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@79 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@84 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@79 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@84 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@79 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@84 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@82 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@79 $generated@@329 $generated@@2)) (= ($generated@@162 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@84 $generated@@328 $generated@@330))) (<= ($generated ($generated@@84 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@84 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@162 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@156) ($generated@@229 $generated@@334 $generated@@139)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@334)) $generated@@334) ($generated@@143 ($generated@@331 $generated@@80 $generated@@334) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@334 $generated@@139))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@156) ($generated@@229 $generated@@335 $generated@@225)) (and (= ($generated@@273 ($generated@@331 $generated@@80 $generated@@335)) $generated@@335) ($generated@@143 ($generated@@331 $generated@@80 $generated@@335) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@335 $generated@@225))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@80) (= ($generated@@143 $generated@@336 $generated@@225)  (and ($generated@@143 $generated@@336 $generated@@139) (not (= $generated@@336 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@336 $generated@@225))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@296 (type $generated@@337))))
(let (($generated@@339 ($generated@@295 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@294 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@293 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@292 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@79 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@296 (type $generated@@344))))
(let (($generated@@346 ($generated@@295 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@294 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@293 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@84 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@314 (type $generated@@348))))
(let (($generated@@350 ($generated@@313 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@312 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@311 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@310 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@79 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@314 (type $generated@@355))))
(let (($generated@@357 ($generated@@313 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@312 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@311 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@84 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@360) $generated@@67)) (= ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@359 $generated@@361)))) ($generated@@229 $generated@@361 $generated@@360))
 :pattern ( ($generated@@84 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@143 $generated@@359 ($generated@@161 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@363) $generated@@67)) (= (type $generated@@364) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@156) ($generated@@0 ($generated@@84 $generated@@362 $generated@@365))) ($generated@@253 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@84 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@77 $generated@@362 ($generated@@238 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@367) $generated@@67)) (= (type $generated@@368) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@156) ($generated@@0 ($generated@@84 $generated@@366 $generated@@369))) ($generated@@253 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@84 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@77 $generated@@366 ($generated@@243 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@84 ($generated@@287 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@84 ($generated@@287 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@296 (type $generated@@375))))
(let (($generated@@377 ($generated@@295 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@79 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@379) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379)))) (= ($generated@@84 ($generated@@373 $generated@@378) ($generated@@154 ($generated@@331 $generated@@147 $generated@@379))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@379))))))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@314 (type $generated@@383))))
(let (($generated@@385 ($generated@@313 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@79 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@387) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387)))) (= ($generated@@84 ($generated@@381 $generated@@386) ($generated@@154 ($generated@@331 $generated@@147 $generated@@387))) ($generated@@155 ($generated@@331 $generated@@147 $generated@@387))))))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@295 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@294 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@84 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@84 ($generated@@292 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@388) $generated@@392))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@84 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@313 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@312 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@84 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@84 ($generated@@310 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@393) $generated@@397))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@84 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@67)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) $generated@@67)) (= (type $generated@@404) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))) (and ($generated@@253 ($generated@@84 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@253 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@77 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@67)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) $generated@@67)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))) (and ($generated@@253 ($generated@@84 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@253 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@415) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@416) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@414 $generated@@416))) (and ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))) ($generated@@135 $generated@@414 $generated@@416))
 :pattern ( ($generated@@135 $generated@@414 $generated@@415) ($generated@@135 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@79 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@314 (type $generated@@419))))
(let (($generated@@421 ($generated@@313 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@312 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@310 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@310 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@314 (type $generated@@422))))
(let (($generated@@424 ($generated@@313 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@312 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@311 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@314 (type $generated@@425))))
(let (($generated@@427 ($generated@@313 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@312 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@311 $generated@@427 $generated@@426)) (= ($generated@@380 $generated@@425) ($generated@@417 $generated@@156))))))
 :pattern ( ($generated@@380 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@296 (type $generated@@428))))
(let (($generated@@430 ($generated@@295 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@294 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@293 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@156) (= (type $generated@@432) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@372 $generated@@428) ($generated@@273 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@314 (type $generated@@433))))
(let (($generated@@435 ($generated@@313 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@312 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@311 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@380 $generated@@433) ($generated@@273 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@380 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@156) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@438)) $generated@@438) ($generated@@143 ($generated@@331 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@273 ($generated@@331 $generated@@3 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@331 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@156) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@273 ($generated@@331 $generated@@4 $generated@@440)) $generated@@440) ($generated@@143 ($generated@@331 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@156) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@273 ($generated@@331 $generated@@441 $generated@@442)) $generated@@442) ($generated@@143 ($generated@@331 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@67) (= ($generated@@229 ($generated@@273 $generated@@443) $generated@@444) ($generated@@143 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@273 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@82 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@79 $generated@@446 $generated@@2)) (<= 0 ($generated@@286 $generated@@445))))
 :pattern ( ($generated@@286 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@268 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@267 $generated@@448)) (<= 0 ($generated@@266 $generated@@447))))
 :pattern ( ($generated@@266 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@398 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@398 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@67)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@67) (= (type $generated@@456) $generated@@67)) (= ($generated@@453 ($generated@@398 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@75 ($generated@@398 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@406 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@406 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@67)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@463 ($generated@@406 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@67) (= (type $generated@@468) $generated@@67)) (= ($generated@@75 ($generated@@406 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@156) (= (type $generated@@470) $generated@@156)) (= ($generated@@259 ($generated@@228 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@67) (= (type $generated@@478) $generated@@67)) (= ($generated@@475 ($generated@@146 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@156) (= (type $generated@@480) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@156) (= (type $generated@@482) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@268 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@267 $generated@@156)) (= (type $generated@@490) $generated@@67)) (= (type $generated@@491) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@266 $generated@@489))) ($generated@@253 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@77 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@78 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@78 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@238 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@243 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@161 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@75 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@331 $generated@@512 ($generated@@273 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@273 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) $generated@@67)) (= ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))) (and ($generated@@229 ($generated@@84 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@229 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@84 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@84 ($generated@@292 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@143 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@518) $generated@@67)) (= (type $generated@@519) $generated@@67)) (= ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@84 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@84 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@84 ($generated@@310 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@143 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@228 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@228 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@156)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@228 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@228 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@156) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529))) (and (= ($generated@@273 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527)) $generated@@527) ($generated@@143 ($generated@@331 ($generated@@294 $generated@@156 $generated@@156) $generated@@527) ($generated@@398 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@229 $generated@@527 ($generated@@398 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@67)) (= (type $generated@@532) $generated@@67)) ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532))) (and (= ($generated@@273 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530)) $generated@@530) ($generated@@143 ($generated@@331 ($generated@@312 $generated@@156 $generated@@156) $generated@@530) ($generated@@406 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@67) (= (type $generated@@534) $generated@@67)) (= (type $generated@@535) $generated@@156)) ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534))) (and (= ($generated@@273 ($generated@@331 $generated@@147 $generated@@535)) $generated@@535) ($generated@@143 ($generated@@331 $generated@@147 $generated@@535) ($generated@@146 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@146 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@84 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@84 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@67) (= (type $generated@@541) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@146 $generated@@540 $generated@@541)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@147) (= ($generated@@521 ($generated@@273 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@273 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@156) ($generated@@229 $generated@@543 ($generated@@78 0))) (and (= ($generated@@273 ($generated@@331 $generated@@2 $generated@@543)) $generated@@543) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@543) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@543 ($generated@@78 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) ($generated@@229 $generated@@544 ($generated@@238 $generated@@545))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@544) ($generated@@238 $generated@@545))))
 :pattern ( ($generated@@229 $generated@@544 ($generated@@238 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@229 $generated@@546 ($generated@@243 $generated@@547))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@4) $generated@@546) ($generated@@243 $generated@@547))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@243 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@229 $generated@@548 ($generated@@161 $generated@@549))) (and (= ($generated@@273 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@331 ($generated@@79 $generated@@156 $generated@@2) $generated@@548) ($generated@@161 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@161 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@156) (= (type $generated@@551) $generated@@67)) ($generated@@229 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@273 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550)) $generated@@550) ($generated@@143 ($generated@@331 ($generated@@267 $generated@@156) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@538 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@538 $generated@@225) $generated@@66))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@552 ($generated@@161 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@552 $generated@@555)))) ($generated@@253 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@84 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@77 $generated@@552 ($generated@@161 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@147) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@558) (and ($generated@@145 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@67) ($generated@@77 $generated@@556 ($generated@@146 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@146 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@253 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@253 ($generated@@154 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@147) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@252 $generated@@562) (and ($generated@@145 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@67) ($generated@@77 $generated@@560 ($generated@@146 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@77 $generated@@560 ($generated@@146 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@253 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@156) (= (type $generated@@565) $generated@@156)) (= ($generated@@228 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)) ($generated@@248 ($generated@@228 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@228 ($generated@@248 $generated@@564) ($generated@@248 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@273 ($generated@@248 $generated@@566)) ($generated@@248 ($generated@@273 $generated@@566)))
 :pattern ( ($generated@@273 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@268 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@267 $generated@@568)) (= ($generated@@266 $generated@@567) 0)) (= $generated@@567 ($generated@@265 $generated@@568))))
 :pattern ( ($generated@@266 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@79 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@286 ($generated@@85 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@286 $generated@@569) ($generated ($generated@@84 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@286 ($generated@@85 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@2)) ($generated@@77 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@3)) ($generated@@77 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@4)) ($generated@@77 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@441)) ($generated@@77 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@156)) ($generated@@77 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@267 $generated@@156)) (= (type $generated@@584) $generated@@67)) (= ($generated@@143 $generated@@583 ($generated@@483 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@266 $generated@@583))) ($generated@@229 ($generated@@484 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@484 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@143 $generated@@583 ($generated@@483 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@267 $generated@@156)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@266 $generated@@587))) (< ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@522 ($generated@@331 $generated@@147 ($generated@@484 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@294 $generated@@156 $generated@@156)) (= (type $generated@@590) $generated@@67)) (= (type $generated@@591) $generated@@67)) ($generated@@143 $generated@@589 ($generated@@398 $generated@@590 $generated@@591))) (and (and ($generated@@143 ($generated@@292 $generated@@589) ($generated@@238 $generated@@590)) ($generated@@143 ($generated@@341 $generated@@589) ($generated@@238 $generated@@591))) ($generated@@143 ($generated@@372 $generated@@589) ($generated@@238 ($generated@@146 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@143 $generated@@589 ($generated@@398 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@312 $generated@@156 $generated@@156)) (= (type $generated@@593) $generated@@67)) (= (type $generated@@594) $generated@@67)) ($generated@@143 $generated@@592 ($generated@@406 $generated@@593 $generated@@594))) (and (and ($generated@@143 ($generated@@310 $generated@@592) ($generated@@243 $generated@@593)) ($generated@@143 ($generated@@352 $generated@@592) ($generated@@243 $generated@@594))) ($generated@@143 ($generated@@380 $generated@@592) ($generated@@243 ($generated@@146 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@143 $generated@@592 ($generated@@406 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@143 $generated@@595 $generated@@46))
 :pattern ( ($generated@@143 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@143 $generated@@596 $generated@@47))
 :pattern ( ($generated@@143 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@143 $generated@@597 $generated@@44))
 :pattern ( ($generated@@143 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@441) ($generated@@143 $generated@@598 $generated@@45))
 :pattern ( ($generated@@143 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@156) ($generated@@143 $generated@@599 $generated@@48))
 :pattern ( ($generated@@143 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 (T@U) Bool)
(declare-fun $generated@@604 () Int)
(assert  (and (and (= (type $generated@@600) ($generated@@171 $generated@@80 $generated@@4)) (= (type $generated@@601) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@602) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@605  (=> (and (= $generated@@600 ($generated@@170 $generated@@140 $generated@@601 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (not (= $generated@@602 $generated@@140)))))
(let (($generated@@606  (=> (and ($generated@@252 $generated@@601) ($generated@@603 $generated@@601)) (=> (and (and ($generated@@143 $generated@@602 $generated@@225) ($generated@@77 $generated@@602 $generated@@225 $generated@@601)) (and (= 1 $generated@@604) (= (ControlFlow 0 3) 2))) $generated@@605))))
$generated@@606)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@U T@U) T@U)
(declare-fun $generated@@416 (Int Int) Int)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@68)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@67)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> (= (type $generated@@168) $generated@@80) (= ($generated@@143 $generated@@168 $generated@@139)  (or (= $generated@@168 $generated@@140) (= ($generated@@166 $generated@@168) $generated@@139))))
 :pattern ( ($generated@@143 $generated@@168 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@80 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@70 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@80) (= (type $generated@@219) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@220) ($generated@@69 $generated@@4))) (= (type $generated@@222) $generated@@80)) (= (type $generated@@223) ($generated@@69 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (= (type $generated@@225) $generated@@67))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@80) (= (type $generated@@227) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@226 $generated@@225 $generated@@227) ($generated@@77 $generated@@226 $generated@@139 $generated@@227)))
 :pattern ( ($generated@@77 $generated@@226 $generated@@225 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@147)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@67) (= (type $generated@@233) $generated@@67)) (= (type $generated@@234) $generated@@156)) (= (type $generated@@235) $generated@@156)) (= ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@143 ($generated@@228 $generated@@234 $generated@@235) ($generated@@146 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@147) (= (type $generated@@237) $generated@@147)) (= ($generated@@153 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@153 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@67)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@241) $generated@@67)) (= ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@156) ($generated@@0 ($generated@@84 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@84 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@143 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@67)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@246) $generated@@67)) (= ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@156) ($generated@@0 ($generated@@84 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@84 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@143 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@67) (= (type $generated@@257) $generated@@67)) (= (type $generated@@258) $generated@@156)) (= (type $generated@@259) $generated@@156)) (= (type $generated@@260) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@254 $generated@@260)) (= ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@77 ($generated@@228 $generated@@258 $generated@@259) ($generated@@146 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@147) (= ($generated@@145 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@147) ($generated@@145 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@156) (= (type $generated@@266) $generated@@156)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@145 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@156)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@255 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@281) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@156)) (= (type $generated@@283) $generated@@67)) ($generated@@135 $generated@@280 $generated@@281)) ($generated@@255 $generated@@282 $generated@@283 $generated@@280)) ($generated@@255 $generated@@282 $generated@@283 $generated@@281))
 :pattern ( ($generated@@135 $generated@@280 $generated@@281) ($generated@@255 $generated@@282 $generated@@283 $generated@@280))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@284) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@285) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@287) $generated@@67)) ($generated@@135 $generated@@284 $generated@@285)) ($generated@@77 $generated@@286 $generated@@287 $generated@@284)) ($generated@@77 $generated@@286 $generated@@287 $generated@@285))
 :pattern ( ($generated@@135 $generated@@284 $generated@@285) ($generated@@77 $generated@@286 $generated@@287 $generated@@284))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@79 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@82 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@79 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@84 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@79 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@84 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@79 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@84 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@82 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@79 $generated@@331 $generated@@2)) (= ($generated@@162 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@84 $generated@@330 $generated@@332))) (<= ($generated ($generated@@84 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@84 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@162 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@156) ($generated@@229 $generated@@336 $generated@@139)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@336)) $generated@@336) ($generated@@143 ($generated@@333 $generated@@80 $generated@@336) $generated@@139)))
 :pattern ( ($generated@@229 $generated@@336 $generated@@139))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@156) ($generated@@229 $generated@@337 $generated@@225)) (and (= ($generated@@275 ($generated@@333 $generated@@80 $generated@@337)) $generated@@337) ($generated@@143 ($generated@@333 $generated@@80 $generated@@337) $generated@@225)))
 :pattern ( ($generated@@229 $generated@@337 $generated@@225))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@80) (= ($generated@@143 $generated@@338 $generated@@225)  (and ($generated@@143 $generated@@338 $generated@@139) (not (= $generated@@338 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@338 $generated@@225))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@298 (type $generated@@339))))
(let (($generated@@341 ($generated@@297 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@296 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@295 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@294 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@298 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@79 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@298 (type $generated@@346))))
(let (($generated@@348 ($generated@@297 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@296 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@295 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@316 (type $generated@@350))))
(let (($generated@@352 ($generated@@315 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@314 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@313 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@312 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@316 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@362) $generated@@67)) (= ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@361 $generated@@363)))) ($generated@@229 $generated@@363 $generated@@362))
 :pattern ( ($generated@@84 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@143 $generated@@361 ($generated@@161 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@156) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@255 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@238 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@369) $generated@@67)) (= (type $generated@@370) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@156) ($generated@@0 ($generated@@84 $generated@@368 $generated@@371))) ($generated@@255 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@84 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@77 $generated@@368 ($generated@@243 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@84 ($generated@@289 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@84 ($generated@@289 $generated@@373) $generated@@372)))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@298 (type $generated@@377))))
(let (($generated@@379 ($generated@@297 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@381) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@154 ($generated@@333 $generated@@147 $generated@@381))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert  (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@384)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@382 $generated@@384))
)) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@316 (type $generated@@385))))
(let (($generated@@387 ($generated@@315 (type $generated@@385))))
(= (type ($generated@@383 $generated@@385)) ($generated@@79 $generated@@387 $generated@@386))))
 :pattern ( ($generated@@383 $generated@@385))
))))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@389) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))  (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389)))) (= ($generated@@84 ($generated@@383 $generated@@388) ($generated@@154 ($generated@@333 $generated@@147 $generated@@389))) ($generated@@155 ($generated@@333 $generated@@147 $generated@@389))))))
 :pattern ( ($generated@@84 ($generated@@382 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@297 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@296 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@84 ($generated@@343 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@84 ($generated@@294 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@390) $generated@@394))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@84 ($generated@@343 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@315 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@314 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@84 ($generated@@312 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))) (and ($generated@@255 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@255 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@67)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@411) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@412) $generated@@67)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))) (and ($generated@@255 ($generated@@84 ($generated@@383 $generated@@411) $generated@@415) $generated@@413 $generated@@414) ($generated@@255 $generated@@415 $generated@@412 $generated@@414)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@411) $generated@@415))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@411) $generated@@415))
))))
 :pattern ( ($generated@@77 $generated@@411 ($generated@@408 $generated@@412 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@417 Int) ($generated@@418 Int) ) (! (= ($generated@@416 $generated@@417 $generated@@418) (div $generated@@417 $generated@@418))
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@419) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@421) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@419 $generated@@421))) (and ($generated@@135 $generated@@419 $generated@@420) ($generated@@135 $generated@@420 $generated@@421))) ($generated@@135 $generated@@419 $generated@@421))
 :pattern ( ($generated@@135 $generated@@419 $generated@@420) ($generated@@135 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@79 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@316 (type $generated@@424))))
(let (($generated@@426 ($generated@@315 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@314 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@313 $generated@@426 $generated@@425)) (= ($generated@@312 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@312 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@316 (type $generated@@427))))
(let (($generated@@429 ($generated@@315 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@314 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@313 $generated@@429 $generated@@428)) (= ($generated@@354 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@354 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@316 (type $generated@@430))))
(let (($generated@@432 ($generated@@315 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@314 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@313 $generated@@432 $generated@@431)) (= ($generated@@382 $generated@@430) ($generated@@422 $generated@@156))))))
 :pattern ( ($generated@@382 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@298 (type $generated@@433))))
(let (($generated@@435 ($generated@@297 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@296 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@295 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@156) (= (type $generated@@437) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@433) ($generated@@275 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@374 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@316 (type $generated@@438))))
(let (($generated@@440 ($generated@@315 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@314 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@313 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@156) (= (type $generated@@442) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@382 $generated@@438) ($generated@@275 ($generated@@228 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@382 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@156) ($generated@@229 $generated@@443 $generated@@46)) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@443)) $generated@@443) ($generated@@143 ($generated@@333 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@156) ($generated@@229 $generated@@444 $generated@@47)) (and (= ($generated@@275 ($generated@@333 $generated@@3 $generated@@444)) $generated@@444) ($generated@@143 ($generated@@333 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@156) ($generated@@229 $generated@@445 $generated@@44)) (and (= ($generated@@275 ($generated@@333 $generated@@4 $generated@@445)) $generated@@445) ($generated@@143 ($generated@@333 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@156) ($generated@@229 $generated@@447 $generated@@45)) (and (= ($generated@@275 ($generated@@333 $generated@@446 $generated@@447)) $generated@@447) ($generated@@143 ($generated@@333 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@67) (= ($generated@@229 ($generated@@275 $generated@@448) $generated@@449) ($generated@@143 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@229 ($generated@@275 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@82 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@79 $generated@@451 $generated@@2)) (<= 0 ($generated@@288 $generated@@450))))
 :pattern ( ($generated@@288 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@270 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@269 $generated@@453)) (<= 0 ($generated@@268 $generated@@452))))
 :pattern ( ($generated@@268 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@400 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@400 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@400 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@67)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@67) (= (type $generated@@467) $generated@@67)) (= ($generated@@464 ($generated@@408 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@408 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@408 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@408 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@75 ($generated@@408 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@408 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@156) (= (type $generated@@475) $generated@@156)) (= ($generated@@261 ($generated@@228 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@146 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@146 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@146 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@146 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@156) (= (type $generated@@485) $generated@@156)) (= ($generated@@154 ($generated@@228 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@228 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@156) (= (type $generated@@487) $generated@@156)) (= ($generated@@155 ($generated@@228 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@228 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@270 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@269 $generated@@156)) (= (type $generated@@495) $generated@@67)) (= (type $generated@@496) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@268 $generated@@494))) ($generated@@255 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@77 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@78 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@78 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@500 ($generated@@238 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@75 ($generated@@238 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@67)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@504 ($generated@@243 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@75 ($generated@@243 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@508 ($generated@@161 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@161 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@333 $generated@@517 ($generated@@275 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@275 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@519) $generated@@67)) (= (type $generated@@520) $generated@@67)) (= ($generated@@143 $generated@@518 ($generated@@400 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@294 $generated@@518) $generated@@521))) (and ($generated@@229 ($generated@@84 ($generated@@375 $generated@@518) $generated@@521) $generated@@520) ($generated@@229 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@518) $generated@@521))
 :pattern ( ($generated@@84 ($generated@@294 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@143 $generated@@518 ($generated@@400 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@523) $generated@@67)) (= (type $generated@@524) $generated@@67)) (= ($generated@@143 $generated@@522 ($generated@@408 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@312 $generated@@522) $generated@@525))) (and ($generated@@229 ($generated@@84 ($generated@@383 $generated@@522) $generated@@525) $generated@@524) ($generated@@229 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@84 ($generated@@383 $generated@@522) $generated@@525))
 :pattern ( ($generated@@84 ($generated@@312 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@143 $generated@@522 ($generated@@408 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@156) (= (type $generated@@529) $generated@@156)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@228 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@228 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@156) (= (type $generated@@531) $generated@@156)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@156) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@229 $generated@@532 ($generated@@400 $generated@@533 $generated@@534))) (and (= ($generated@@275 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@532)) $generated@@532) ($generated@@143 ($generated@@333 ($generated@@296 $generated@@156 $generated@@156) $generated@@532) ($generated@@400 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@229 $generated@@532 ($generated@@400 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@156) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@67)) ($generated@@229 $generated@@535 ($generated@@408 $generated@@536 $generated@@537))) (and (= ($generated@@275 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@535)) $generated@@535) ($generated@@143 ($generated@@333 ($generated@@314 $generated@@156 $generated@@156) $generated@@535) ($generated@@408 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@229 $generated@@535 ($generated@@408 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@156)) ($generated@@229 $generated@@540 ($generated@@146 $generated@@538 $generated@@539))) (and (= ($generated@@275 ($generated@@333 $generated@@147 $generated@@540)) $generated@@540) ($generated@@143 ($generated@@333 $generated@@147 $generated@@540) ($generated@@146 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@540 ($generated@@146 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@84 ($generated@@422 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@84 ($generated@@422 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@72)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@67) (= (type $generated@@546) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@146 $generated@@545 $generated@@546)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@147) (= ($generated@@526 ($generated@@275 $generated@@547)) ($generated@@527 $generated@@547)))
 :pattern ( ($generated@@526 ($generated@@275 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@156) ($generated@@229 $generated@@548 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@333 $generated@@2 $generated@@548)) $generated@@548) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@548) ($generated@@78 0))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@78 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@156) (= (type $generated@@550) $generated@@67)) ($generated@@229 $generated@@549 ($generated@@238 $generated@@550))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@549)) $generated@@549) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@549) ($generated@@238 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@238 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@156) (= (type $generated@@552) $generated@@67)) ($generated@@229 $generated@@551 ($generated@@243 $generated@@552))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@551)) $generated@@551) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@4) $generated@@551) ($generated@@243 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@243 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@156) (= (type $generated@@554) $generated@@67)) ($generated@@229 $generated@@553 ($generated@@161 $generated@@554))) (and (= ($generated@@275 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@553)) $generated@@553) ($generated@@143 ($generated@@333 ($generated@@79 $generated@@156 $generated@@2) $generated@@553) ($generated@@161 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@161 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@156) (= (type $generated@@556) $generated@@67)) ($generated@@229 $generated@@555 ($generated@@488 $generated@@556))) (and (= ($generated@@275 ($generated@@333 ($generated@@269 $generated@@156) $generated@@555)) $generated@@555) ($generated@@143 ($generated@@333 ($generated@@269 $generated@@156) $generated@@555) ($generated@@488 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@488 $generated@@556)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@63))
(assert (= ($generated@@543 $generated@@139) $generated@@66))
(assert (= ($generated@@75 $generated@@225) $generated@@64))
(assert (= ($generated@@543 $generated@@225) $generated@@66))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@557 $generated@@560)))) ($generated@@255 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@84 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@77 $generated@@557 ($generated@@161 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@147) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@563) (and ($generated@@145 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@67) ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@77 $generated@@561 ($generated@@146 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@255 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@255 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@147) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@254 $generated@@567) (and ($generated@@145 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@67) ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@77 $generated@@565 ($generated@@146 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@255 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@255 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@156) (= (type $generated@@570) $generated@@156)) (= ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)) ($generated@@250 ($generated@@228 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@569) ($generated@@250 $generated@@570)))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@248 $generated@@571))) ($generated@@250 ($generated@@275 ($generated@@8 $generated@@571))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@248 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@275 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@275 $generated@@572)))
 :pattern ( ($generated@@275 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@270 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@269 $generated@@574)) (= ($generated@@268 $generated@@573) 0)) (= $generated@@573 ($generated@@267 $generated@@574))))
 :pattern ( ($generated@@268 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@288 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@288 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@288 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@2)) ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@582) $generated@@3)) ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@77 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@584) $generated@@4)) ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@77 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@446)) ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@156)) ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@269 $generated@@156)) (= (type $generated@@590) $generated@@67)) (= ($generated@@143 $generated@@589 ($generated@@488 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@268 $generated@@589))) ($generated@@229 ($generated@@489 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@489 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@143 $generated@@589 ($generated@@488 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@269 $generated@@156)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@268 $generated@@593))) (< ($generated@@527 ($generated@@333 $generated@@147 ($generated@@489 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@527 ($generated@@333 $generated@@147 ($generated@@489 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@296 $generated@@156 $generated@@156)) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) $generated@@67)) ($generated@@143 $generated@@595 ($generated@@400 $generated@@596 $generated@@597))) (and (and ($generated@@143 ($generated@@294 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@143 ($generated@@343 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@143 ($generated@@374 $generated@@595) ($generated@@238 ($generated@@146 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@143 $generated@@595 ($generated@@400 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@314 $generated@@156 $generated@@156)) (= (type $generated@@599) $generated@@67)) (= (type $generated@@600) $generated@@67)) ($generated@@143 $generated@@598 ($generated@@408 $generated@@599 $generated@@600))) (and (and ($generated@@143 ($generated@@312 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@143 ($generated@@354 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@143 ($generated@@382 $generated@@598) ($generated@@243 ($generated@@146 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@143 $generated@@598 ($generated@@408 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@143 $generated@@601 $generated@@46))
 :pattern ( ($generated@@143 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@143 $generated@@602 $generated@@47))
 :pattern ( ($generated@@143 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@143 $generated@@603 $generated@@44))
 :pattern ( ($generated@@143 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@446) ($generated@@143 $generated@@604 $generated@@45))
 :pattern ( ($generated@@143 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@156) ($generated@@143 $generated@@605 $generated@@48))
 :pattern ( ($generated@@143 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Bool)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (= (type $generated@@606) $generated@@80) (= (type $generated@@608) ($generated@@171 $generated@@80 $generated@@4))) (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@611) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@613  (=> (= (ControlFlow 0 2) (- 0 1)) (not (= (ite (< ($generated@@416 3 ($generated@@248 0)) 7) $generated@@606 $generated@@606) $generated@@140)))))
(let (($generated@@614  (=> (not ($generated@@0 ($generated@@250 ($generated@@11 (< ($generated@@416 3 ($generated@@248 0)) 7))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) $generated@@607) (=> $generated@@607 (=> (= (ControlFlow 0 5) 2) $generated@@613))))))
(let (($generated@@615  (=> ($generated@@0 ($generated@@250 ($generated@@11 (< ($generated@@416 3 ($generated@@248 0)) 7)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@607) (=> $generated@@607 (=> (= (ControlFlow 0 3) 2) $generated@@613))))))
(let (($generated@@616  (=> (and (= $generated@@608 ($generated@@170 $generated@@140 $generated@@609 $generated@@60 false)) (=> $generated@@607 (and ($generated@@143 $generated@@606 $generated@@225) ($generated@@77 $generated@@606 $generated@@225 $generated@@609)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (not (= ($generated@@248 0) 0))) (=> (not (= ($generated@@248 0) 0)) (and (=> (= (ControlFlow 0 7) 3) $generated@@615) (=> (= (ControlFlow 0 7) 5) $generated@@614)))))))
(let (($generated@@617  (=> (and ($generated@@254 $generated@@609) ($generated@@610 $generated@@609)) (=> (and (and (=> $generated@@607 (and ($generated@@143 $generated@@611 $generated@@225) ($generated@@77 $generated@@611 $generated@@225 $generated@@609))) true) (and (= 1 $generated@@612) (= (ControlFlow 0 9) 7))) $generated@@616))))
$generated@@617))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
