(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 () Int)
(declare-fun $generated@@257 (T@U T@U) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@259 () T@T)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@T) T@U)
(declare-fun $generated@@482 () T@T)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@525 () T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@530 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@605 (T@U T@U) Bool)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@259) 17) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@258 $generated@@268)) $generated@@259)
 :pattern ( ($generated@@258 $generated@@268))
))) (forall (($generated@@269 T@T) ) (! (= (type ($generated@@262 $generated@@269)) ($generated@@76 $generated@@269 $generated@@4))
 :pattern ( ($generated@@262 $generated@@269))
))) (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@264 $generated@@270 $generated@@271)) ($generated@@76 $generated@@272 $generated@@4)))
 :pattern ( ($generated@@264 $generated@@270 $generated@@271))
))) (forall (($generated@@273 T@U) ) (! (= (type ($generated@@265 $generated@@273)) $generated@@145)
 :pattern ( ($generated@@265 $generated@@273))
))) (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 ($generated@@79 (type $generated@@274))))
(= (type ($generated@@267 $generated@@274 $generated@@275)) ($generated@@76 $generated@@276 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@274 $generated@@275))
))))
(assert  (=> (<= 0 $generated@@256) (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) $generated@@259) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@279) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@260 ($generated@@245 $generated@@279)) (and (not (= 0 $generated@@256)) (and (and ($generated@@249 $generated@@278) ($generated@@132 $generated@@279 ($generated@@233 $generated@@46))) (not ($generated@@261 $generated@@279 ($generated@@262 $generated@@145))))))) (and (and ($generated@@263 ($generated@@245 $generated@@279)) (=> (not ($generated@@261 $generated@@279 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 ($generated@@266 ($generated@@245 $generated@@279))))))) (let (($generated@@280 ($generated@@267 $generated@@279 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 ($generated@@266 ($generated@@245 $generated@@279))))))))
($generated@@260 $generated@@280)))) (= ($generated@@257 ($generated@@258 $generated@@277) ($generated@@245 $generated@@279)) (let (($generated@@281 ($generated@@266 ($generated@@245 $generated@@279))))
(ite ($generated@@261 $generated@@279 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 $generated@@281)))) $generated@@281 (let (($generated@@282 ($generated@@267 $generated@@279 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 $generated@@281))))))
(let (($generated@@283 ($generated@@257 ($generated@@258 $generated@@277) $generated@@282)))
$generated@@283)))))))
 :weight 3
 :pattern ( ($generated@@257 ($generated@@258 $generated@@277) ($generated@@245 $generated@@279)) ($generated@@249 $generated@@278))
))))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@136) (= ($generated@@134 $generated@@286) (= ($generated@@284 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@136) ($generated@@134 $generated@@287)) (exists (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (and (= (type $generated@@288) $generated@@145) (= (type $generated@@289) $generated@@145)) (= $generated@@287 ($generated@@223 $generated@@288 $generated@@289)))
 :no-pattern (type $generated@@288)
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
)))
 :pattern ( ($generated@@134 $generated@@287))
)))
(assert  (and (and (forall (($generated@@294 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@294)) 18)) (forall (($generated@@295 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@292 $generated@@295))
))) (forall (($generated@@296 T@T) ) (! (= (type ($generated@@290 $generated@@296)) ($generated@@292 $generated@@296))
 :pattern ( ($generated@@290 $generated@@296))
))))
(assert (forall (($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@297)) 0)
 :pattern ( ($generated@@290 $generated@@297))
)))
(assert  (=> (<= 0 $generated@@256) (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@298) $generated@@259) (= (type $generated@@299) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@260 $generated@@299) (and (not (= 0 $generated@@256)) (and ($generated@@132 $generated@@299 ($generated@@233 $generated@@46)) (not ($generated@@261 $generated@@299 ($generated@@262 $generated@@145))))))) true)
 :pattern ( ($generated@@257 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@64) (= (type $generated@@302) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@265 $generated@@300) $generated@@301 $generated@@302) ($generated@@74 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@250 ($generated@@265 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@76 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@79 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@76 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@81 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@76 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@81 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 20)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@81 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@81 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@79 (type $generated@@345))))
 (=> (and (= (type $generated@@345) ($generated@@76 $generated@@347 $generated@@4)) (= (type $generated@@346) ($generated@@76 $generated@@347 $generated@@4))) (= ($generated@@261 $generated@@345 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (= ($generated@@0 ($generated@@81 $generated@@345 $generated@@348)) ($generated@@0 ($generated@@81 $generated@@346 $generated@@348))))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@261 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@79 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@76 $generated@@350 $generated@@2)) (= ($generated@@151 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@81 $generated@@349 $generated@@351))) (<= ($generated ($generated@@81 $generated@@349 $generated@@351)) ($generated@@303 $generated@@349))))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@151 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@309 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@313 (type $generated@@359))))
(let (($generated@@361 ($generated@@312 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@311 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@310 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@331 (type $generated@@363))))
(let (($generated@@365 ($generated@@330 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@329 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@328 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@327 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@327 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@76 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@331 (type $generated@@370))))
(let (($generated@@372 ($generated@@330 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@329 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@328 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert  (=> (<= 0 $generated@@256) (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (and (= (type $generated@@374) $generated@@259) (= (type $generated@@375) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@376) ($generated@@76 $generated@@145 $generated@@4))) (or ($generated@@260 $generated@@376) (and (not (= 0 $generated@@256)) (and (and ($generated@@249 $generated@@375) ($generated@@132 $generated@@376 ($generated@@233 $generated@@46))) (not ($generated@@261 $generated@@376 ($generated@@262 $generated@@145))))))) (and (and ($generated@@263 $generated@@376) (=> (not ($generated@@261 $generated@@376 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 ($generated@@266 $generated@@376)))))) (let (($generated@@377 ($generated@@267 $generated@@376 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 ($generated@@266 $generated@@376)))))))
($generated@@260 $generated@@377)))) (= ($generated@@257 ($generated@@258 $generated@@374) $generated@@376) (let (($generated@@378 ($generated@@266 $generated@@376)))
(ite ($generated@@261 $generated@@376 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 $generated@@378)))) $generated@@378 (let (($generated@@379 ($generated@@267 $generated@@376 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 $generated@@378))))))
(let (($generated@@380 ($generated@@257 $generated@@374 $generated@@379)))
$generated@@380)))))))
 :pattern ( ($generated@@257 ($generated@@258 $generated@@374) $generated@@376) ($generated@@249 $generated@@375))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@382) $generated@@64)) (= ($generated@@132 $generated@@381 ($generated@@150 $generated@@382)) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@381 $generated@@383)))) ($generated@@224 $generated@@383 $generated@@382))
 :pattern ( ($generated@@81 $generated@@381 $generated@@383))
))))
 :pattern ( ($generated@@132 $generated@@381 ($generated@@150 $generated@@382)))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
 (=> (and (= (type $generated@@384) ($generated@@76 $generated@@387 $generated@@4)) (= (type $generated@@385) ($generated@@76 $generated@@387 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@267 $generated@@384 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 $generated@@384 $generated@@386)) (not ($generated@@0 ($generated@@81 $generated@@385 $generated@@386)))))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@384 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (= (type $generated@@388) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@388 ($generated@@233 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@145) ($generated@@0 ($generated@@81 $generated@@388 $generated@@391))) ($generated@@250 $generated@@391 $generated@@389 $generated@@390))
 :pattern ( ($generated@@81 $generated@@388 $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@388 ($generated@@233 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@238 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 $generated@@392 $generated@@395))) ($generated@@250 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@81 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@238 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(= ($generated ($generated@@81 ($generated@@304 $generated@@397) $generated@@396)) 0))
 :pattern ( (let (($generated@@397 (type $generated@@396)))
($generated@@81 ($generated@@304 $generated@@397) $generated@@396)))
)))
(assert  (and (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@398 $generated@@401)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@398 $generated@@401))
)) (forall (($generated@@402 T@T) ($generated@@403 T@U) ) (! (= (type ($generated@@399 $generated@@402 $generated@@403)) $generated@@402)
 :pattern ( ($generated@@399 $generated@@402 $generated@@403))
))) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@313 (type $generated@@404))))
(let (($generated@@406 ($generated@@312 (type $generated@@404))))
(= (type ($generated@@400 $generated@@404)) ($generated@@76 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@400 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@408) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@398 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@407) ($generated@@143 ($generated@@399 $generated@@136 $generated@@408)))) (= ($generated@@81 ($generated@@400 $generated@@407) ($generated@@143 ($generated@@399 $generated@@136 $generated@@408))) ($generated@@144 ($generated@@399 $generated@@136 $generated@@408))))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@331 (type $generated@@412))))
(let (($generated@@414 ($generated@@330 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@76 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@329 $generated@@145 $generated@@145)) (= (type $generated@@416) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@81 ($generated@@327 $generated@@415) ($generated@@143 ($generated@@399 $generated@@136 $generated@@416)))) (= ($generated@@81 ($generated@@410 $generated@@415) ($generated@@143 ($generated@@399 $generated@@136 $generated@@416))) ($generated@@144 ($generated@@399 $generated@@136 $generated@@416))))))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@312 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@311 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@81 ($generated@@309 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@81 ($generated@@400 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@330 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@329 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@81 ($generated@@327 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@81 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@81 ($generated@@327 $generated@@422) $generated@@426))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) $generated@@64)) (= (type $generated@@433) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@430) $generated@@434))) (and ($generated@@250 ($generated@@81 ($generated@@400 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@250 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@430) $generated@@434))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@74 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@329 $generated@@145 $generated@@145)) (= (type $generated@@439) $generated@@64)) (= (type $generated@@440) $generated@@64)) (= (type $generated@@441) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@327 $generated@@438) $generated@@442))) (and ($generated@@250 ($generated@@81 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@250 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@81 ($generated@@327 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@74 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@79 (type $generated@@443))))
 (=> (and (and (= (type $generated@@443) ($generated@@76 $generated@@445 $generated@@4)) (= (type $generated@@444) ($generated@@76 $generated@@445 $generated@@4))) ($generated@@261 $generated@@443 $generated@@444)) (= $generated@@443 $generated@@444)))
 :pattern ( ($generated@@261 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@447)))
 (=> (and (and (= (type $generated@@446) ($generated@@76 $generated@@449 $generated@@4)) (= (type $generated@@448) $generated@@449)) ($generated@@0 ($generated@@81 $generated@@446 $generated@@448))) ($generated@@0 ($generated@@81 ($generated@@264 $generated@@446 $generated@@447) $generated@@448))))
 :pattern ( ($generated@@264 $generated@@446 $generated@@447) ($generated@@81 $generated@@446 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@451)))
 (=> (and (= (type $generated@@450) ($generated@@76 $generated@@453 $generated@@4)) (= (type $generated@@452) $generated@@453)) (= ($generated@@0 ($generated@@81 ($generated@@264 $generated@@450 $generated@@451) $generated@@452))  (or (= $generated@@452 $generated@@451) ($generated@@0 ($generated@@81 $generated@@450 $generated@@452))))))
 :pattern ( ($generated@@81 ($generated@@264 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
 (=> (and (and (= (type $generated@@454) ($generated@@76 $generated@@457 $generated@@4)) (= (type $generated@@455) ($generated@@76 $generated@@457 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@455 $generated@@456))) (not ($generated@@0 ($generated@@81 ($generated@@267 $generated@@454 $generated@@455) $generated@@456)))))
 :pattern ( ($generated@@267 $generated@@454 $generated@@455) ($generated@@81 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@459 T@T) ) (! (= (type ($generated@@458 $generated@@459)) ($generated@@76 $generated@@459 $generated@@4))
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@331 (type $generated@@460))))
(let (($generated@@462 ($generated@@330 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@329 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@328 $generated@@462 $generated@@461)) (= ($generated@@327 $generated@@460) ($generated@@458 $generated@@462))))))
 :pattern ( ($generated@@327 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@331 (type $generated@@463))))
(let (($generated@@465 ($generated@@330 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@329 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@328 $generated@@465 $generated@@464)) (= ($generated@@367 $generated@@463) ($generated@@458 $generated@@464))))))
 :pattern ( ($generated@@367 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@331 (type $generated@@466))))
(let (($generated@@468 ($generated@@330 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@329 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@328 $generated@@468 $generated@@467)) (= ($generated@@409 $generated@@466) ($generated@@458 $generated@@145))))))
 :pattern ( ($generated@@409 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@313 (type $generated@@469))))
(let (($generated@@471 ($generated@@312 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@311 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@310 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@145) (= (type $generated@@473) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@469) ($generated@@265 ($generated@@223 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@398 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@331 (type $generated@@474))))
(let (($generated@@476 ($generated@@330 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@329 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@328 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@409 $generated@@474) ($generated@@265 ($generated@@223 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@409 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) ($generated@@224 $generated@@479 $generated@@46)) (and (= ($generated@@265 ($generated@@399 $generated@@2 $generated@@479)) $generated@@479) ($generated@@132 ($generated@@399 $generated@@2 $generated@@479) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@479 $generated@@46))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@145) ($generated@@224 $generated@@480 $generated@@47)) (and (= ($generated@@265 ($generated@@399 $generated@@3 $generated@@480)) $generated@@480) ($generated@@132 ($generated@@399 $generated@@3 $generated@@480) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@480 $generated@@47))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@145) ($generated@@224 $generated@@481 $generated@@44)) (and (= ($generated@@265 ($generated@@399 $generated@@4 $generated@@481)) $generated@@481) ($generated@@132 ($generated@@399 $generated@@4 $generated@@481) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@481 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@482) 21))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) ($generated@@224 $generated@@483 $generated@@45)) (and (= ($generated@@265 ($generated@@399 $generated@@482 $generated@@483)) $generated@@483) ($generated@@132 ($generated@@399 $generated@@482 $generated@@483) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@483 $generated@@45))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@224 ($generated@@265 $generated@@484) $generated@@485) ($generated@@132 $generated@@484 $generated@@485)))
 :pattern ( ($generated@@224 ($generated@@265 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@79 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@76 $generated@@487 $generated@@2)) (<= 0 ($generated@@303 $generated@@486))))
 :pattern ( ($generated@@303 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@293 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@292 $generated@@489)) (<= 0 ($generated@@291 $generated@@488))))
 :pattern ( ($generated@@291 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@427 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@427 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@427 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@427 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@64) (= (type $generated@@499) $generated@@64)) (= ($generated@@72 ($generated@@427 $generated@@498 $generated@@499)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@64) (= (type $generated@@503) $generated@@64)) (= ($generated@@500 ($generated@@435 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@435 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= ($generated@@504 ($generated@@435 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@435 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= ($generated@@72 ($generated@@435 $generated@@508 $generated@@509)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (= ($generated@@284 ($generated@@223 $generated@@510 $generated@@511)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@64) (= (type $generated@@515) $generated@@64)) (= ($generated@@512 ($generated@@135 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@135 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@64) (= (type $generated@@519) $generated@@64)) (= ($generated@@516 ($generated@@135 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@135 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@223 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@522 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@223 $generated@@522 $generated@@523))
)))
(assert  (and (forall (($generated@@526 T@U) ) (! (= (type ($generated@@524 $generated@@526)) $generated@@259)
 :pattern ( ($generated@@524 $generated@@526))
)) (= (type $generated@@525) $generated@@259)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@259) (= (type $generated@@528) ($generated@@76 $generated@@145 $generated@@4))) (= ($generated@@257 $generated@@527 $generated@@528) ($generated@@257 $generated@@525 $generated@@528)))
 :pattern ( ($generated@@257 ($generated@@524 $generated@@527) $generated@@528))
)))
(assert  (and (forall (($generated@@531 T@U) ) (! (= (type ($generated@@529 $generated@@531)) $generated@@64)
 :pattern ( ($generated@@529 $generated@@531))
)) (forall (($generated@@532 T@U) ($generated@@533 Int) ) (! (let (($generated@@534 ($generated@@293 (type $generated@@532))))
(= (type ($generated@@530 $generated@@532 $generated@@533)) $generated@@534))
 :pattern ( ($generated@@530 $generated@@532 $generated@@533))
))))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@292 $generated@@145)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@535 ($generated@@529 $generated@@536) $generated@@537) (forall (($generated@@538 Int) ) (!  (=> (and (<= 0 $generated@@538) (< $generated@@538 ($generated@@291 $generated@@535))) ($generated@@250 ($generated@@530 $generated@@535 $generated@@538) $generated@@536 $generated@@537))
 :pattern ( ($generated@@530 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@529 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (=> (= (type $generated@@539) ($generated@@76 $generated@@541 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@264 $generated@@539 $generated@@540) $generated@@540))))
 :pattern ( ($generated@@264 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@75 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@75 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@64)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@64) (= ($generated@@544 ($generated@@233 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@233 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@64)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@64) (= ($generated@@548 ($generated@@238 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@238 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@64)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@64) (= ($generated@@552 ($generated@@150 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@150 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@64) (= ($generated@@556 ($generated@@529 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@529 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@72 ($generated@@529 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@529 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@399 $generated@@561 ($generated@@265 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@265 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@563) $generated@@64)) (= (type $generated@@564) $generated@@64)) (= ($generated@@132 $generated@@562 ($generated@@427 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@309 $generated@@562) $generated@@565))) (and ($generated@@224 ($generated@@81 ($generated@@400 $generated@@562) $generated@@565) $generated@@564) ($generated@@224 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@562) $generated@@565))
 :pattern ( ($generated@@81 ($generated@@309 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@132 $generated@@562 ($generated@@427 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@329 $generated@@145 $generated@@145)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) (= ($generated@@132 $generated@@566 ($generated@@435 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@327 $generated@@566) $generated@@569))) (and ($generated@@224 ($generated@@81 ($generated@@410 $generated@@566) $generated@@569) $generated@@568) ($generated@@224 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@81 ($generated@@410 $generated@@566) $generated@@569))
 :pattern ( ($generated@@81 ($generated@@327 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@132 $generated@@566 ($generated@@435 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@145) (= (type $generated@@573) $generated@@145)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@223 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@223 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@145)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@223 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@223 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@259) (= (type $generated@@577) ($generated@@76 $generated@@145 $generated@@4))) (= ($generated@@257 ($generated@@258 $generated@@576) $generated@@577) ($generated@@257 $generated@@576 $generated@@577)))
 :pattern ( ($generated@@257 ($generated@@258 $generated@@576) $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@145) (= (type $generated@@579) $generated@@64)) (= (type $generated@@580) $generated@@64)) ($generated@@224 $generated@@578 ($generated@@427 $generated@@579 $generated@@580))) (and (= ($generated@@265 ($generated@@399 ($generated@@311 $generated@@145 $generated@@145) $generated@@578)) $generated@@578) ($generated@@132 ($generated@@399 ($generated@@311 $generated@@145 $generated@@145) $generated@@578) ($generated@@427 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@224 $generated@@578 ($generated@@427 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@145) (= (type $generated@@582) $generated@@64)) (= (type $generated@@583) $generated@@64)) ($generated@@224 $generated@@581 ($generated@@435 $generated@@582 $generated@@583))) (and (= ($generated@@265 ($generated@@399 ($generated@@329 $generated@@145 $generated@@145) $generated@@581)) $generated@@581) ($generated@@132 ($generated@@399 ($generated@@329 $generated@@145 $generated@@145) $generated@@581) ($generated@@435 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@224 $generated@@581 ($generated@@435 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@64) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@145)) ($generated@@224 $generated@@586 ($generated@@135 $generated@@584 $generated@@585))) (and (= ($generated@@265 ($generated@@399 $generated@@136 $generated@@586)) $generated@@586) ($generated@@132 ($generated@@399 $generated@@136 $generated@@586) ($generated@@135 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@224 $generated@@586 ($generated@@135 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (not ($generated@@0 ($generated@@81 ($generated@@262 $generated@@588) $generated@@587))))
 :pattern ( (let (($generated@@588 (type $generated@@587)))
($generated@@81 ($generated@@262 $generated@@588) $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@589)))
 (not ($generated@@0 ($generated@@81 ($generated@@458 $generated@@590) $generated@@589))))
 :pattern ( (let (($generated@@590 (type $generated@@589)))
($generated@@81 ($generated@@458 $generated@@590) $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@69)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@64) (= (type $generated@@594) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@593 $generated@@594)) $generated@@62) (= ($generated@@591 ($generated@@135 $generated@@593 $generated@@594)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@136) (= ($generated@@570 ($generated@@265 $generated@@595)) ($generated@@571 $generated@@595)))
 :pattern ( ($generated@@570 ($generated@@265 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@145) ($generated@@224 $generated@@596 ($generated@@75 0))) (and (= ($generated@@265 ($generated@@399 $generated@@2 $generated@@596)) $generated@@596) ($generated@@132 ($generated@@399 ($generated@@76 $generated@@145 $generated@@4) $generated@@596) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@596 ($generated@@75 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@145) (= (type $generated@@598) $generated@@64)) ($generated@@224 $generated@@597 ($generated@@233 $generated@@598))) (and (= ($generated@@265 ($generated@@399 ($generated@@76 $generated@@145 $generated@@4) $generated@@597)) $generated@@597) ($generated@@132 ($generated@@399 ($generated@@76 $generated@@145 $generated@@4) $generated@@597) ($generated@@233 $generated@@598))))
 :pattern ( ($generated@@224 $generated@@597 ($generated@@233 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@145) (= (type $generated@@600) $generated@@64)) ($generated@@224 $generated@@599 ($generated@@238 $generated@@600))) (and (= ($generated@@265 ($generated@@399 ($generated@@76 $generated@@145 $generated@@4) $generated@@599)) $generated@@599) ($generated@@132 ($generated@@399 ($generated@@76 $generated@@145 $generated@@4) $generated@@599) ($generated@@238 $generated@@600))))
 :pattern ( ($generated@@224 $generated@@599 ($generated@@238 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@145) (= (type $generated@@602) $generated@@64)) ($generated@@224 $generated@@601 ($generated@@150 $generated@@602))) (and (= ($generated@@265 ($generated@@399 ($generated@@76 $generated@@145 $generated@@2) $generated@@601)) $generated@@601) ($generated@@132 ($generated@@399 ($generated@@76 $generated@@145 $generated@@2) $generated@@601) ($generated@@150 $generated@@602))))
 :pattern ( ($generated@@224 $generated@@601 ($generated@@150 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@145) (= (type $generated@@604) $generated@@64)) ($generated@@224 $generated@@603 ($generated@@529 $generated@@604))) (and (= ($generated@@265 ($generated@@399 ($generated@@292 $generated@@145) $generated@@603)) $generated@@603) ($generated@@132 ($generated@@399 ($generated@@292 $generated@@145) $generated@@603) ($generated@@529 $generated@@604))))
 :pattern ( ($generated@@224 $generated@@603 ($generated@@529 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@79 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@76 $generated@@608 $generated@@4)) (= (type $generated@@607) ($generated@@76 $generated@@608 $generated@@4))) (= ($generated@@605 $generated@@606 $generated@@607) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@608) ($generated@@0 ($generated@@81 $generated@@606 $generated@@609))) ($generated@@0 ($generated@@81 $generated@@607 $generated@@609)))
 :pattern ( ($generated@@81 $generated@@606 $generated@@609))
 :pattern ( ($generated@@81 $generated@@607 $generated@@609))
)))))
 :pattern ( ($generated@@605 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@610) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@611) $generated@@64)) (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@610 ($generated@@150 $generated@@611) $generated@@612) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@610 $generated@@613)))) ($generated@@250 $generated@@613 $generated@@611 $generated@@612))
 :pattern ( ($generated@@81 $generated@@610 $generated@@613))
))))
 :pattern ( ($generated@@74 $generated@@610 ($generated@@150 $generated@@611) $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@136) (= (type $generated@@615) $generated@@64)) (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@616) (and ($generated@@134 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@64) ($generated@@74 $generated@@614 ($generated@@135 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@74 $generated@@614 ($generated@@135 $generated@@615 $generated@@617) $generated@@616))
))))) ($generated@@250 ($generated@@143 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@136) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@620) (and ($generated@@134 $generated@@618) (exists (($generated@@621 T@U) ) (!  (and (= (type $generated@@621) $generated@@64) ($generated@@74 $generated@@618 ($generated@@135 $generated@@621 $generated@@619) $generated@@620))
 :pattern ( ($generated@@74 $generated@@618 ($generated@@135 $generated@@621 $generated@@619) $generated@@620))
))))) ($generated@@250 ($generated@@144 $generated@@618) $generated@@619 $generated@@620))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@618) $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@145) (= (type $generated@@623) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@622) ($generated@@245 $generated@@623)) ($generated@@245 ($generated@@223 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@622) ($generated@@245 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@145 $generated@@4)) ($generated@@263 $generated@@624)) ($generated@@0 ($generated@@81 $generated@@624 ($generated@@265 ($generated@@8 ($generated@@266 $generated@@624))))))
 :pattern ( ($generated@@266 $generated@@624))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@265 ($generated@@8 ($generated@@243 $generated@@625))) ($generated@@245 ($generated@@265 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@265 ($generated@@8 ($generated@@243 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@265 ($generated@@245 $generated@@626)) ($generated@@245 ($generated@@265 $generated@@626)))
 :pattern ( ($generated@@265 ($generated@@245 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@293 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@292 $generated@@628)) (= ($generated@@291 $generated@@627) 0)) (= $generated@@627 ($generated@@290 $generated@@628))))
 :pattern ( ($generated@@291 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@76 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@303 ($generated@@82 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@303 $generated@@629) ($generated ($generated@@81 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@303 ($generated@@82 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@634) $generated@@2)) ($generated@@74 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@74 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@636) $generated@@3)) ($generated@@74 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@74 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@638) $generated@@4)) ($generated@@74 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@74 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@640) $generated@@482)) ($generated@@74 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@74 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@642) $generated@@145)) ($generated@@74 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@74 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@292 $generated@@145)) (= (type $generated@@644) $generated@@64)) (= ($generated@@132 $generated@@643 ($generated@@529 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@291 $generated@@643))) ($generated@@224 ($generated@@530 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@530 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@132 $generated@@643 ($generated@@529 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@292 $generated@@145)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@291 $generated@@647))) (< ($generated@@571 ($generated@@399 $generated@@136 ($generated@@530 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@571 ($generated@@399 $generated@@136 ($generated@@530 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@311 $generated@@145 $generated@@145)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@132 $generated@@649 ($generated@@427 $generated@@650 $generated@@651))) (and (and ($generated@@132 ($generated@@309 $generated@@649) ($generated@@233 $generated@@650)) ($generated@@132 ($generated@@356 $generated@@649) ($generated@@233 $generated@@651))) ($generated@@132 ($generated@@398 $generated@@649) ($generated@@233 ($generated@@135 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@132 $generated@@649 ($generated@@427 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@329 $generated@@145 $generated@@145)) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) $generated@@64)) ($generated@@132 $generated@@652 ($generated@@435 $generated@@653 $generated@@654))) (and (and ($generated@@132 ($generated@@327 $generated@@652) ($generated@@238 $generated@@653)) ($generated@@132 ($generated@@367 $generated@@652) ($generated@@238 $generated@@654))) ($generated@@132 ($generated@@409 $generated@@652) ($generated@@238 ($generated@@135 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@132 $generated@@652 ($generated@@435 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@132 $generated@@655 $generated@@46))
 :pattern ( ($generated@@132 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@132 $generated@@656 $generated@@47))
 :pattern ( ($generated@@132 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@132 $generated@@657 $generated@@44))
 :pattern ( ($generated@@132 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@482) ($generated@@132 $generated@@658 $generated@@45))
 :pattern ( ($generated@@132 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@145) ($generated@@132 $generated@@659 $generated@@48))
 :pattern ( ($generated@@132 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@660) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@662) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@663) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@664) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@667) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@668) $generated@@77)) (= (type $generated@@669) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@671 true))
(let (($generated@@672  (=> (not ($generated@@261 $generated@@660 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 $generated@@661))))) (=> (and ($generated@@132 $generated@@662 ($generated@@233 $generated@@46)) ($generated@@74 $generated@@662 ($generated@@233 $generated@@46) $generated@@663)) (=> (and (and (= $generated@@664 ($generated@@267 $generated@@660 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 $generated@@661))))) ($generated@@132 $generated@@664 ($generated@@233 $generated@@46))) (and (= $generated@@662 $generated@@664) ($generated@@74 $generated@@662 ($generated@@233 $generated@@46) $generated@@663))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (not ($generated@@261 $generated@@662 ($generated@@262 $generated@@145)))) (=> (not ($generated@@261 $generated@@662 ($generated@@262 $generated@@145))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and ($generated@@605 $generated@@662 $generated@@660) (not ($generated@@605 $generated@@660 $generated@@662)))) (=> (and ($generated@@605 $generated@@662 $generated@@660) (not ($generated@@605 $generated@@660 $generated@@662))) (=> (and ($generated@@260 $generated@@662) (= $generated@@665 ($generated@@257 ($generated@@258 $generated@@525) $generated@@662))) (=> (and (and ($generated@@260 $generated@@662) ($generated@@132 ($generated@@8 $generated@@665) $generated@@46)) (and (= $generated@@666 $generated@@665) (= (ControlFlow 0 5) 3))) $generated@@671)))))))))))
(let (($generated@@673  (=> (and ($generated@@261 $generated@@660 ($generated@@264 ($generated@@262 $generated@@145) ($generated@@265 ($generated@@8 $generated@@661)))) (= (ControlFlow 0 4) 3)) $generated@@671)))
(let (($generated@@674  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (and ($generated@@132 ($generated@@8 ($generated@@243 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@660 ($generated@@265 ($generated@@8 ($generated@@243 0)))))) (exists (($generated@@675 T@U) ) (!  (and (= (type $generated@@675) $generated@@2) ($generated@@0 ($generated@@81 $generated@@660 ($generated@@265 $generated@@675))))
 :no-pattern (type $generated@@675)
 :no-pattern ($generated $generated@@675)
 :no-pattern ($generated@@0 $generated@@675)
)))) (=> (or (and ($generated@@132 ($generated@@8 ($generated@@243 0)) $generated@@46) ($generated@@0 ($generated@@81 $generated@@660 ($generated@@265 ($generated@@8 ($generated@@243 0)))))) (exists (($generated@@676 Int) ) ($generated@@0 ($generated@@81 $generated@@660 ($generated@@265 ($generated@@8 $generated@@676)))))) (=> ($generated@@0 ($generated@@81 $generated@@660 ($generated@@265 ($generated@@8 $generated@@661)))) (and (=> (= (ControlFlow 0 8) 4) $generated@@673) (=> (= (ControlFlow 0 8) 5) $generated@@672)))))))
(let (($generated@@677 true))
(let (($generated@@678  (=> (= $generated@@667 ($generated@@211 $generated@@668 $generated@@663 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@674) (=> (= (ControlFlow 0 10) 2) $generated@@677)))))
(let (($generated@@679 true))
(let (($generated@@680  (=> (and (= $generated@@669 ($generated@@156 $generated@@668 $generated@@663 $generated@@60 false)) (not ($generated@@261 $generated@@660 ($generated@@262 $generated@@145)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@679) (=> (= (ControlFlow 0 11) 10) $generated@@678)))))
(let (($generated@@681  (=> (and (and (and ($generated@@249 $generated@@663) ($generated@@670 $generated@@663)) ($generated@@132 $generated@@660 ($generated@@233 $generated@@46))) (and (= 0 $generated@@256) (= (ControlFlow 0 12) 11))) $generated@@680)))
$generated@@681))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 (T@U T@U) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 () T@T)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@T) T@U)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 () T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 (T@U Int) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U T@U) Bool)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@235 $generated@@236)) $generated@@237))
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@235 $generated@@238) $generated@@238)
 :pattern ( ($generated@@235 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) $generated@@64)) (= (type $generated@@243) $generated@@149)) (= (type $generated@@244) $generated@@149)) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@239 $generated@@245)) (= ($generated@@74 ($generated@@215 $generated@@243 $generated@@244) ($generated@@139 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@243 $generated@@244) ($generated@@139 $generated@@241 $generated@@242) $generated@@245))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@249) 17) (forall (($generated@@258 T@U) ) (! (= (type ($generated@@248 $generated@@258)) $generated@@249)
 :pattern ( ($generated@@248 $generated@@258))
))) (forall (($generated@@259 T@T) ) (! (= (type ($generated@@252 $generated@@259)) ($generated@@76 $generated@@259 $generated@@4))
 :pattern ( ($generated@@252 $generated@@259))
))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@254 $generated@@260 $generated@@261)) ($generated@@76 $generated@@262 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@260 $generated@@261))
))) (forall (($generated@@263 T@U) ) (! (= (type ($generated@@255 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@255 $generated@@263))
))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@79 (type $generated@@264))))
(= (type ($generated@@257 $generated@@264 $generated@@265)) ($generated@@76 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@257 $generated@@264 $generated@@265))
))))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@249) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) ($generated@@76 $generated@@149 $generated@@4))) (or ($generated@@250 ($generated@@235 $generated@@269)) (and (not (= 0 $generated@@246)) (and (and ($generated@@239 $generated@@268) ($generated@@136 $generated@@269 ($generated@@225 $generated@@46))) (not ($generated@@251 $generated@@269 ($generated@@252 $generated@@149))))))) (and (and ($generated@@253 ($generated@@235 $generated@@269)) (=> (not ($generated@@251 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 ($generated@@235 $generated@@269))))))) (let (($generated@@270 ($generated@@257 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 ($generated@@235 $generated@@269))))))))
($generated@@250 $generated@@270)))) (= ($generated@@247 ($generated@@248 $generated@@267) ($generated@@235 $generated@@269)) (let (($generated@@271 ($generated@@256 ($generated@@235 $generated@@269))))
(ite ($generated@@251 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@271)))) $generated@@271 (let (($generated@@272 ($generated@@257 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@271))))))
(let (($generated@@273 ($generated@@247 ($generated@@248 $generated@@267) $generated@@272)))
$generated@@273)))))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@248 $generated@@267) ($generated@@235 $generated@@269)) ($generated@@239 $generated@@268))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@140) (= ($generated@@138 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@140) ($generated@@138 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@149) (= (type $generated@@279) $generated@@149)) (= $generated@@277 ($generated@@215 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@138 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 18)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@249) (= (type $generated@@289) ($generated@@76 $generated@@149 $generated@@4))) (or ($generated@@250 $generated@@289) (and (not (= 0 $generated@@246)) (and ($generated@@136 $generated@@289 ($generated@@225 $generated@@46)) (not ($generated@@251 $generated@@289 ($generated@@252 $generated@@149))))))) true)
 :pattern ( ($generated@@247 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@240 ($generated@@255 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@240 ($generated@@255 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@294) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@295) $generated@@149)) (= (type $generated@@296) $generated@@64)) ($generated@@132 $generated@@293 $generated@@294)) ($generated@@240 $generated@@295 $generated@@296 $generated@@293)) ($generated@@240 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@132 $generated@@293 $generated@@294) ($generated@@240 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@298) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@300) $generated@@64)) ($generated@@132 $generated@@297 $generated@@298)) ($generated@@74 $generated@@299 $generated@@300 $generated@@297)) ($generated@@74 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@132 $generated@@297 $generated@@298) ($generated@@74 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 20)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@79 (type $generated@@343))))
 (=> (and (= (type $generated@@343) ($generated@@76 $generated@@345 $generated@@4)) (= (type $generated@@344) ($generated@@76 $generated@@345 $generated@@4))) (= ($generated@@251 $generated@@343 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (= ($generated@@0 ($generated@@81 $generated@@343 $generated@@346)) ($generated@@0 ($generated@@81 $generated@@344 $generated@@346))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@251 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@79 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@76 $generated@@348 $generated@@2)) (= ($generated@@155 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@81 $generated@@347 $generated@@349))) (<= ($generated ($generated@@81 $generated@@347 $generated@@349)) ($generated@@301 $generated@@347))))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@155 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@307 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@329 (type $generated@@361))))
(let (($generated@@363 ($generated@@328 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@327 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@326 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@325 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@372) $generated@@249) (= (type $generated@@373) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@374) ($generated@@76 $generated@@149 $generated@@4))) (or ($generated@@250 $generated@@374) (and (not (= 0 $generated@@246)) (and (and ($generated@@239 $generated@@373) ($generated@@136 $generated@@374 ($generated@@225 $generated@@46))) (not ($generated@@251 $generated@@374 ($generated@@252 $generated@@149))))))) (and (and ($generated@@253 $generated@@374) (=> (not ($generated@@251 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 $generated@@374)))))) (let (($generated@@375 ($generated@@257 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 $generated@@374)))))))
($generated@@250 $generated@@375)))) (= ($generated@@247 ($generated@@248 $generated@@372) $generated@@374) (let (($generated@@376 ($generated@@256 $generated@@374)))
(ite ($generated@@251 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@376)))) $generated@@376 (let (($generated@@377 ($generated@@257 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@376))))))
(let (($generated@@378 ($generated@@247 $generated@@372 $generated@@377)))
$generated@@378)))))))
 :pattern ( ($generated@@247 ($generated@@248 $generated@@372) $generated@@374) ($generated@@239 $generated@@373))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@380) $generated@@64)) (= ($generated@@136 $generated@@379 ($generated@@154 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@379 $generated@@381)))) ($generated@@216 $generated@@381 $generated@@380))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@136 $generated@@379 ($generated@@154 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
 (=> (and (= (type $generated@@382) ($generated@@76 $generated@@385 $generated@@4)) (= (type $generated@@383) ($generated@@76 $generated@@385 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@257 $generated@@382 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 $generated@@382 $generated@@384)) (not ($generated@@0 ($generated@@81 $generated@@383 $generated@@384)))))))
 :pattern ( ($generated@@81 ($generated@@257 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@225 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@149) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@240 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@225 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@230 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@149) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@240 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@230 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@81 ($generated@@302 $generated@@395) $generated@@394)))
)))
(assert  (and (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@396 $generated@@399)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@396 $generated@@399))
)) (forall (($generated@@400 T@T) ($generated@@401 T@U) ) (! (= (type ($generated@@397 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@397 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@311 (type $generated@@402))))
(let (($generated@@404 ($generated@@310 (type $generated@@402))))
(= (type ($generated@@398 $generated@@402)) ($generated@@76 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@398 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@406) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@405) ($generated@@147 ($generated@@397 $generated@@140 $generated@@406)))) (= ($generated@@81 ($generated@@398 $generated@@405) ($generated@@147 ($generated@@397 $generated@@140 $generated@@406))) ($generated@@148 ($generated@@397 $generated@@140 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@329 (type $generated@@410))))
(let (($generated@@412 ($generated@@328 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@76 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@414) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@413) ($generated@@147 ($generated@@397 $generated@@140 $generated@@414)))) (= ($generated@@81 ($generated@@408 $generated@@413) ($generated@@147 ($generated@@397 $generated@@140 $generated@@414))) ($generated@@148 ($generated@@397 $generated@@140 $generated@@414))))))
 :pattern ( ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@310 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@309 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@328 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@327 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@428) $generated@@432))) (and ($generated@@240 ($generated@@81 ($generated@@398 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@240 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@428) $generated@@432))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) $generated@@64)) (= (type $generated@@439) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@436) $generated@@440))) (and ($generated@@240 ($generated@@81 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@240 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@441))))
 (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@443 $generated@@4)) (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@4))) ($generated@@251 $generated@@441 $generated@@442)) (= $generated@@441 $generated@@442)))
 :pattern ( ($generated@@251 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@445)))
 (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@447 $generated@@4)) (= (type $generated@@446) $generated@@447)) ($generated@@0 ($generated@@81 $generated@@444 $generated@@446))) ($generated@@0 ($generated@@81 ($generated@@254 $generated@@444 $generated@@445) $generated@@446))))
 :pattern ( ($generated@@254 $generated@@444 $generated@@445) ($generated@@81 $generated@@444 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@449)))
 (=> (and (= (type $generated@@448) ($generated@@76 $generated@@451 $generated@@4)) (= (type $generated@@450) $generated@@451)) (= ($generated@@0 ($generated@@81 ($generated@@254 $generated@@448 $generated@@449) $generated@@450))  (or (= $generated@@450 $generated@@449) ($generated@@0 ($generated@@81 $generated@@448 $generated@@450))))))
 :pattern ( ($generated@@81 ($generated@@254 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@452) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@453) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@454) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@452 $generated@@454))) (and ($generated@@132 $generated@@452 $generated@@453) ($generated@@132 $generated@@453 $generated@@454))) ($generated@@132 $generated@@452 $generated@@454))
 :pattern ( ($generated@@132 $generated@@452 $generated@@453) ($generated@@132 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
 (=> (and (and (= (type $generated@@455) ($generated@@76 $generated@@458 $generated@@4)) (= (type $generated@@456) ($generated@@76 $generated@@458 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@456 $generated@@457))) (not ($generated@@0 ($generated@@81 ($generated@@257 $generated@@455 $generated@@456) $generated@@457)))))
 :pattern ( ($generated@@257 $generated@@455 $generated@@456) ($generated@@81 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@460 T@T) ) (! (= (type ($generated@@459 $generated@@460)) ($generated@@76 $generated@@460 $generated@@4))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@329 (type $generated@@461))))
(let (($generated@@463 ($generated@@328 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@327 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@326 $generated@@463 $generated@@462)) (= ($generated@@325 $generated@@461) ($generated@@459 $generated@@463))))))
 :pattern ( ($generated@@325 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@329 (type $generated@@464))))
(let (($generated@@466 ($generated@@328 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@327 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@326 $generated@@466 $generated@@465)) (= ($generated@@365 $generated@@464) ($generated@@459 $generated@@465))))))
 :pattern ( ($generated@@365 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@329 (type $generated@@467))))
(let (($generated@@469 ($generated@@328 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@327 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@326 $generated@@469 $generated@@468)) (= ($generated@@407 $generated@@467) ($generated@@459 $generated@@149))))))
 :pattern ( ($generated@@407 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@311 (type $generated@@470))))
(let (($generated@@472 ($generated@@310 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@309 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@308 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@149) (= (type $generated@@474) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@470) ($generated@@255 ($generated@@215 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@396 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@329 (type $generated@@475))))
(let (($generated@@477 ($generated@@328 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@327 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@326 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@149) (= (type $generated@@479) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@407 $generated@@475) ($generated@@255 ($generated@@215 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@407 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@149) ($generated@@216 $generated@@480 $generated@@46)) (and (= ($generated@@255 ($generated@@397 $generated@@2 $generated@@480)) $generated@@480) ($generated@@136 ($generated@@397 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@149) ($generated@@216 $generated@@481 $generated@@47)) (and (= ($generated@@255 ($generated@@397 $generated@@3 $generated@@481)) $generated@@481) ($generated@@136 ($generated@@397 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@149) ($generated@@216 $generated@@482 $generated@@44)) (and (= ($generated@@255 ($generated@@397 $generated@@4 $generated@@482)) $generated@@482) ($generated@@136 ($generated@@397 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 21))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@149) ($generated@@216 $generated@@484 $generated@@45)) (and (= ($generated@@255 ($generated@@397 $generated@@483 $generated@@484)) $generated@@484) ($generated@@136 ($generated@@397 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@216 ($generated@@255 $generated@@485) $generated@@486) ($generated@@136 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@216 ($generated@@255 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@79 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@76 $generated@@488 $generated@@2)) (<= 0 ($generated@@301 $generated@@487))))
 :pattern ( ($generated@@301 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@283 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@282 $generated@@490)) (<= 0 ($generated@@281 $generated@@489))))
 :pattern ( ($generated@@281 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@425 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@425 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@425 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@425 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@72 ($generated@@425 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@64) (= (type $generated@@504) $generated@@64)) (= ($generated@@501 ($generated@@433 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@433 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@505 ($generated@@433 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@433 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= ($generated@@72 ($generated@@433 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (= ($generated@@274 ($generated@@215 $generated@@511 $generated@@512)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@139 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@139 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@517 ($generated@@139 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@139 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@215 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@149) (= (type $generated@@524) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@215 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@249)
 :pattern ( ($generated@@525 $generated@@527))
)) (= (type $generated@@526) $generated@@249)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@249) (= (type $generated@@529) ($generated@@76 $generated@@149 $generated@@4))) (= ($generated@@247 $generated@@528 $generated@@529) ($generated@@247 $generated@@526 $generated@@529)))
 :pattern ( ($generated@@247 ($generated@@525 $generated@@528) $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@532))
)) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (! (let (($generated@@535 ($generated@@283 (type $generated@@533))))
(= (type ($generated@@531 $generated@@533 $generated@@534)) $generated@@535))
 :pattern ( ($generated@@531 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@282 $generated@@149)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@536 ($generated@@530 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@281 $generated@@536))) ($generated@@240 ($generated@@531 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@531 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@530 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (=> (= (type $generated@@540) ($generated@@76 $generated@@542 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@254 $generated@@540 $generated@@541) $generated@@541))))
 :pattern ( ($generated@@254 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@543 ($generated@@75 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@75 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@545 ($generated@@225 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@225 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@548)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@549 ($generated@@230 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@230 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@552)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@64)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@553 ($generated@@154 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@154 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@556)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@557 ($generated@@530 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@530 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@64) (= ($generated@@72 ($generated@@530 $generated@@560)) $generated@@57))
 :pattern ( ($generated@@530 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@397 $generated@@562 ($generated@@255 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@255 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) (= ($generated@@136 $generated@@563 ($generated@@425 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@563) $generated@@566))) (and ($generated@@216 ($generated@@81 ($generated@@398 $generated@@563) $generated@@566) $generated@@565) ($generated@@216 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@563) $generated@@566))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@136 $generated@@563 ($generated@@425 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) (= ($generated@@136 $generated@@567 ($generated@@433 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@567) $generated@@570))) (and ($generated@@216 ($generated@@81 ($generated@@408 $generated@@567) $generated@@570) $generated@@569) ($generated@@216 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@567) $generated@@570))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@136 $generated@@567 ($generated@@433 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@149)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@215 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@215 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@149)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@215 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@215 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@249) (= (type $generated@@578) ($generated@@76 $generated@@149 $generated@@4))) (= ($generated@@247 ($generated@@248 $generated@@577) $generated@@578) ($generated@@247 $generated@@577 $generated@@578)))
 :pattern ( ($generated@@247 ($generated@@248 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@149) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@216 $generated@@579 ($generated@@425 $generated@@580 $generated@@581))) (and (= ($generated@@255 ($generated@@397 ($generated@@309 $generated@@149 $generated@@149) $generated@@579)) $generated@@579) ($generated@@136 ($generated@@397 ($generated@@309 $generated@@149 $generated@@149) $generated@@579) ($generated@@425 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@216 $generated@@579 ($generated@@425 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@149) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@216 $generated@@582 ($generated@@433 $generated@@583 $generated@@584))) (and (= ($generated@@255 ($generated@@397 ($generated@@327 $generated@@149 $generated@@149) $generated@@582)) $generated@@582) ($generated@@136 ($generated@@397 ($generated@@327 $generated@@149 $generated@@149) $generated@@582) ($generated@@433 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@216 $generated@@582 ($generated@@433 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@64) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@149)) ($generated@@216 $generated@@587 ($generated@@139 $generated@@585 $generated@@586))) (and (= ($generated@@255 ($generated@@397 $generated@@140 $generated@@587)) $generated@@587) ($generated@@136 ($generated@@397 $generated@@140 $generated@@587) ($generated@@139 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@216 $generated@@587 ($generated@@139 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (not ($generated@@0 ($generated@@81 ($generated@@252 $generated@@589) $generated@@588))))
 :pattern ( (let (($generated@@589 (type $generated@@588)))
($generated@@81 ($generated@@252 $generated@@589) $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@81 ($generated@@459 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@81 ($generated@@459 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@69)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@64) (= (type $generated@@595) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@594 $generated@@595)) $generated@@62) (= ($generated@@592 ($generated@@139 $generated@@594 $generated@@595)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@140) (= ($generated@@571 ($generated@@255 $generated@@596)) ($generated@@572 $generated@@596)))
 :pattern ( ($generated@@571 ($generated@@255 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@149) ($generated@@216 $generated@@597 ($generated@@75 0))) (and (= ($generated@@255 ($generated@@397 $generated@@2 $generated@@597)) $generated@@597) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@597) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@597 ($generated@@75 0)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@149) (= (type $generated@@599) $generated@@64)) ($generated@@216 $generated@@598 ($generated@@225 $generated@@599))) (and (= ($generated@@255 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@598)) $generated@@598) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@598) ($generated@@225 $generated@@599))))
 :pattern ( ($generated@@216 $generated@@598 ($generated@@225 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@149) (= (type $generated@@601) $generated@@64)) ($generated@@216 $generated@@600 ($generated@@230 $generated@@601))) (and (= ($generated@@255 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@600)) $generated@@600) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@600) ($generated@@230 $generated@@601))))
 :pattern ( ($generated@@216 $generated@@600 ($generated@@230 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@149) (= (type $generated@@603) $generated@@64)) ($generated@@216 $generated@@602 ($generated@@154 $generated@@603))) (and (= ($generated@@255 ($generated@@397 ($generated@@76 $generated@@149 $generated@@2) $generated@@602)) $generated@@602) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@2) $generated@@602) ($generated@@154 $generated@@603))))
 :pattern ( ($generated@@216 $generated@@602 ($generated@@154 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@149) (= (type $generated@@605) $generated@@64)) ($generated@@216 $generated@@604 ($generated@@530 $generated@@605))) (and (= ($generated@@255 ($generated@@397 ($generated@@282 $generated@@149) $generated@@604)) $generated@@604) ($generated@@136 ($generated@@397 ($generated@@282 $generated@@149) $generated@@604) ($generated@@530 $generated@@605))))
 :pattern ( ($generated@@216 $generated@@604 ($generated@@530 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@79 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@76 $generated@@609 $generated@@4)) (= (type $generated@@608) ($generated@@76 $generated@@609 $generated@@4))) (= ($generated@@606 $generated@@607 $generated@@608) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@609) ($generated@@0 ($generated@@81 $generated@@607 $generated@@610))) ($generated@@0 ($generated@@81 $generated@@608 $generated@@610)))
 :pattern ( ($generated@@81 $generated@@607 $generated@@610))
 :pattern ( ($generated@@81 $generated@@608 $generated@@610))
)))))
 :pattern ( ($generated@@606 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@611 ($generated@@154 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@611 $generated@@614)))) ($generated@@240 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@81 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@74 $generated@@611 ($generated@@154 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@140) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@239 $generated@@617) (and ($generated@@138 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@64) ($generated@@74 $generated@@615 ($generated@@139 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@74 $generated@@615 ($generated@@139 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@240 ($generated@@147 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@240 ($generated@@147 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@140) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@239 $generated@@621) (and ($generated@@138 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@64) ($generated@@74 $generated@@619 ($generated@@139 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@74 $generated@@619 ($generated@@139 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@240 ($generated@@148 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@240 ($generated@@148 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@149) (= (type $generated@@624) $generated@@149)) (= ($generated@@215 ($generated@@235 $generated@@623) ($generated@@235 $generated@@624)) ($generated@@235 ($generated@@215 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@623) ($generated@@235 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@149 $generated@@4)) ($generated@@253 $generated@@625)) ($generated@@0 ($generated@@81 $generated@@625 ($generated@@255 ($generated@@8 ($generated@@256 $generated@@625))))))
 :pattern ( ($generated@@256 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@255 ($generated@@235 $generated@@626)) ($generated@@235 ($generated@@255 $generated@@626)))
 :pattern ( ($generated@@255 ($generated@@235 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@283 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@282 $generated@@628)) (= ($generated@@281 $generated@@627) 0)) (= $generated@@627 ($generated@@280 $generated@@628))))
 :pattern ( ($generated@@281 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@76 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@301 ($generated@@82 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@301 $generated@@629) ($generated ($generated@@81 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@301 ($generated@@82 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@634) $generated@@2)) ($generated@@74 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@74 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@636) $generated@@3)) ($generated@@74 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@74 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@638) $generated@@4)) ($generated@@74 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@74 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@640) $generated@@483)) ($generated@@74 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@74 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@642) $generated@@149)) ($generated@@74 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@74 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@282 $generated@@149)) (= (type $generated@@644) $generated@@64)) (= ($generated@@136 $generated@@643 ($generated@@530 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@281 $generated@@643))) ($generated@@216 ($generated@@531 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@531 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@136 $generated@@643 ($generated@@530 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@282 $generated@@149)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@281 $generated@@647))) (< ($generated@@572 ($generated@@397 $generated@@140 ($generated@@531 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@572 ($generated@@397 $generated@@140 ($generated@@531 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@136 $generated@@649 ($generated@@425 $generated@@650 $generated@@651))) (and (and ($generated@@136 ($generated@@307 $generated@@649) ($generated@@225 $generated@@650)) ($generated@@136 ($generated@@354 $generated@@649) ($generated@@225 $generated@@651))) ($generated@@136 ($generated@@396 $generated@@649) ($generated@@225 ($generated@@139 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@136 $generated@@649 ($generated@@425 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) $generated@@64)) ($generated@@136 $generated@@652 ($generated@@433 $generated@@653 $generated@@654))) (and (and ($generated@@136 ($generated@@325 $generated@@652) ($generated@@230 $generated@@653)) ($generated@@136 ($generated@@365 $generated@@652) ($generated@@230 $generated@@654))) ($generated@@136 ($generated@@407 $generated@@652) ($generated@@230 ($generated@@139 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@136 $generated@@652 ($generated@@433 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@136 $generated@@655 $generated@@46))
 :pattern ( ($generated@@136 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@136 $generated@@656 $generated@@47))
 :pattern ( ($generated@@136 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@136 $generated@@657 $generated@@44))
 :pattern ( ($generated@@136 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@483) ($generated@@136 $generated@@658 $generated@@45))
 :pattern ( ($generated@@136 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@149) ($generated@@136 $generated@@659 $generated@@48))
 :pattern ( ($generated@@136 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@660) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@664) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@661) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@665) $generated@@77)) (= (type $generated@@666) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@667) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@669) ($generated@@76 $generated@@149 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@670  (=> (and (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149))) (= $generated@@661 ($generated@@257 $generated@@660 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@662)))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and ($generated@@606 $generated@@661 $generated@@660) (not ($generated@@606 $generated@@660 $generated@@661)))) (=> (and ($generated@@606 $generated@@661 $generated@@660) (not ($generated@@606 $generated@@660 $generated@@661))) (=> (=> (not ($generated@@251 $generated@@661 ($generated@@252 $generated@@149))) ($generated@@250 $generated@@661)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> $generated@@663 (not ($generated@@251 $generated@@661 ($generated@@252 $generated@@149))))) (=> (=> $generated@@663 (not ($generated@@251 $generated@@661 ($generated@@252 $generated@@149)))) (=> (= (ControlFlow 0 6) (- 0 5)) (=> $generated@@663 (= $generated@@662 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@661))))))))))))
(let (($generated@@671 true))
(let (($generated@@672  (=> $generated@@663 (and (=> (= (ControlFlow 0 9) 4) $generated@@671) (=> (= (ControlFlow 0 9) 6) $generated@@670)))))
(let (($generated@@673  (=> (and (and (not $generated@@663) (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149)))) (and ($generated@@74 $generated@@660 ($generated@@225 $generated@@46) $generated@@664) (= (ControlFlow 0 3) (- 0 2)))) (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149))))))
(let (($generated@@674  (and (=> (= (ControlFlow 0 10) 3) $generated@@673) (=> (= (ControlFlow 0 10) 9) $generated@@672))))
(let (($generated@@675 true))
(let (($generated@@676  (=> (and (and ($generated@@136 $generated@@660 ($generated@@225 $generated@@46)) ($generated@@74 $generated@@660 ($generated@@225 $generated@@46) $generated@@664)) (and (not false) (=> $generated@@663 true))) (=> (and (and (and (=> $generated@@663 (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149)))) (=> $generated@@663 ($generated@@250 $generated@@660))) (and (=> $generated@@663 (= $generated@@662 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@660))) (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@77) (=> (and (not (= $generated@@677 $generated@@665)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@664 $generated@@677) $generated@@60))) (= ($generated@@81 $generated@@664 $generated@@677) ($generated@@81 $generated@@664 $generated@@677))))
 :pattern ( ($generated@@81 $generated@@664 $generated@@677))
)))) (and (and ($generated@@132 $generated@@664 $generated@@664) (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@67 (type $generated@@679))))
 (=> (and (and (= (type $generated@@678) $generated@@77) (= (type $generated@@679) ($generated@@66 $generated@@680))) (and (not (= $generated@@678 $generated@@665)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@664 $generated@@678) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@664 $generated@@678) $generated@@679) ($generated@@83 ($generated@@81 $generated@@664 $generated@@678) $generated@@679)) ($generated@@0 ($generated@@159 $generated@@666 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@664 $generated@@678) $generated@@679))
))) (and ($generated@@606 $generated@@660 $generated@@667) (=> ($generated@@251 $generated@@660 $generated@@667) true)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@675) (=> (= (ControlFlow 0 11) 10) $generated@@674))))))
(let (($generated@@681  (=> (and (= $generated@@666 ($generated@@160 $generated@@665 $generated@@664 $generated@@60 false)) (= $generated@@667 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@662))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (=> $generated@@663 (not ($generated@@251 $generated@@667 ($generated@@252 $generated@@149))))) (=> (=> $generated@@663 (not ($generated@@251 $generated@@667 ($generated@@252 $generated@@149)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (=> $generated@@663 (= $generated@@662 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@667)))) (=> (=> $generated@@663 (= $generated@@662 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@667))) (=> (= (ControlFlow 0 12) 11) $generated@@676))))))))
(let (($generated@@682  (=> (and ($generated@@239 $generated@@664) ($generated@@668 $generated@@664)) (=> (and (and (and ($generated@@136 $generated@@669 ($generated@@225 $generated@@46)) ($generated@@74 $generated@@669 ($generated@@225 $generated@@46) $generated@@664)) true) (and (= 1 $generated@@246) (= (ControlFlow 0 15) 12))) $generated@@681))))
$generated@@682))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 (T@U T@U) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@249 () T@T)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@459 (T@T) T@U)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@526 () T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@531 (T@U Int) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@592 (T@U) T@U)
(declare-fun $generated@@606 (T@U T@U) Bool)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (let (($generated@@237 (type $generated@@236)))
(= (type ($generated@@235 $generated@@236)) $generated@@237))
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@235 $generated@@238) $generated@@238)
 :pattern ( ($generated@@235 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) $generated@@64)) (= (type $generated@@243) $generated@@149)) (= (type $generated@@244) $generated@@149)) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@239 $generated@@245)) (= ($generated@@74 ($generated@@215 $generated@@243 $generated@@244) ($generated@@139 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@243 $generated@@244) ($generated@@139 $generated@@241 $generated@@242) $generated@@245))
)))
(assert  (and (and (and (and (and (= ($generated@@1 $generated@@249) 17) (forall (($generated@@258 T@U) ) (! (= (type ($generated@@248 $generated@@258)) $generated@@249)
 :pattern ( ($generated@@248 $generated@@258))
))) (forall (($generated@@259 T@T) ) (! (= (type ($generated@@252 $generated@@259)) ($generated@@76 $generated@@259 $generated@@4))
 :pattern ( ($generated@@252 $generated@@259))
))) (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@254 $generated@@260 $generated@@261)) ($generated@@76 $generated@@262 $generated@@4)))
 :pattern ( ($generated@@254 $generated@@260 $generated@@261))
))) (forall (($generated@@263 T@U) ) (! (= (type ($generated@@255 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@255 $generated@@263))
))) (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@79 (type $generated@@264))))
(= (type ($generated@@257 $generated@@264 $generated@@265)) ($generated@@76 $generated@@266 $generated@@4)))
 :pattern ( ($generated@@257 $generated@@264 $generated@@265))
))))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@249) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) ($generated@@76 $generated@@149 $generated@@4))) (or ($generated@@250 ($generated@@235 $generated@@269)) (and (not (= 0 $generated@@246)) (and (and ($generated@@239 $generated@@268) ($generated@@136 $generated@@269 ($generated@@225 $generated@@46))) (not ($generated@@251 $generated@@269 ($generated@@252 $generated@@149))))))) (and (and ($generated@@253 ($generated@@235 $generated@@269)) (=> (not ($generated@@251 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 ($generated@@235 $generated@@269))))))) (let (($generated@@270 ($generated@@257 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 ($generated@@235 $generated@@269))))))))
($generated@@250 $generated@@270)))) (= ($generated@@247 ($generated@@248 $generated@@267) ($generated@@235 $generated@@269)) (let (($generated@@271 ($generated@@256 ($generated@@235 $generated@@269))))
(ite ($generated@@251 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@271)))) $generated@@271 (let (($generated@@272 ($generated@@257 $generated@@269 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@271))))))
(let (($generated@@273 ($generated@@247 ($generated@@248 $generated@@267) $generated@@272)))
$generated@@273)))))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@248 $generated@@267) ($generated@@235 $generated@@269)) ($generated@@239 $generated@@268))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@68)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@140) (= ($generated@@138 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@140) ($generated@@138 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@149) (= (type $generated@@279) $generated@@149)) (= $generated@@277 ($generated@@215 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@138 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 18)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@249) (= (type $generated@@289) ($generated@@76 $generated@@149 $generated@@4))) (or ($generated@@250 $generated@@289) (and (not (= 0 $generated@@246)) (and ($generated@@136 $generated@@289 ($generated@@225 $generated@@46)) (not ($generated@@251 $generated@@289 ($generated@@252 $generated@@149))))))) true)
 :pattern ( ($generated@@247 $generated@@288 $generated@@289))
))))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@240 ($generated@@255 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@240 ($generated@@255 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@294) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@295) $generated@@149)) (= (type $generated@@296) $generated@@64)) ($generated@@132 $generated@@293 $generated@@294)) ($generated@@240 $generated@@295 $generated@@296 $generated@@293)) ($generated@@240 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@132 $generated@@293 $generated@@294) ($generated@@240 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@298) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@300) $generated@@64)) ($generated@@132 $generated@@297 $generated@@298)) ($generated@@74 $generated@@299 $generated@@300 $generated@@297)) ($generated@@74 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@132 $generated@@297 $generated@@298) ($generated@@74 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 20)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@79 (type $generated@@343))))
 (=> (and (= (type $generated@@343) ($generated@@76 $generated@@345 $generated@@4)) (= (type $generated@@344) ($generated@@76 $generated@@345 $generated@@4))) (= ($generated@@251 $generated@@343 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (= ($generated@@0 ($generated@@81 $generated@@343 $generated@@346)) ($generated@@0 ($generated@@81 $generated@@344 $generated@@346))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@346))
 :pattern ( ($generated@@81 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@251 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@79 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@76 $generated@@348 $generated@@2)) (= ($generated@@155 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@81 $generated@@347 $generated@@349))) (<= ($generated ($generated@@81 $generated@@347 $generated@@349)) ($generated@@301 $generated@@347))))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@155 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@307 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@329 (type $generated@@361))))
(let (($generated@@363 ($generated@@328 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@327 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@326 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@325 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (and (= (type $generated@@372) $generated@@249) (= (type $generated@@373) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@374) ($generated@@76 $generated@@149 $generated@@4))) (or ($generated@@250 $generated@@374) (and (not (= 0 $generated@@246)) (and (and ($generated@@239 $generated@@373) ($generated@@136 $generated@@374 ($generated@@225 $generated@@46))) (not ($generated@@251 $generated@@374 ($generated@@252 $generated@@149))))))) (and (and ($generated@@253 $generated@@374) (=> (not ($generated@@251 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 $generated@@374)))))) (let (($generated@@375 ($generated@@257 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 ($generated@@256 $generated@@374)))))))
($generated@@250 $generated@@375)))) (= ($generated@@247 ($generated@@248 $generated@@372) $generated@@374) (let (($generated@@376 ($generated@@256 $generated@@374)))
(ite ($generated@@251 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@376)))) $generated@@376 (let (($generated@@377 ($generated@@257 $generated@@374 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@376))))))
(let (($generated@@378 ($generated@@247 $generated@@372 $generated@@377)))
$generated@@378)))))))
 :pattern ( ($generated@@247 ($generated@@248 $generated@@372) $generated@@374) ($generated@@239 $generated@@373))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@380) $generated@@64)) (= ($generated@@136 $generated@@379 ($generated@@154 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@379 $generated@@381)))) ($generated@@216 $generated@@381 $generated@@380))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@136 $generated@@379 ($generated@@154 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
 (=> (and (= (type $generated@@382) ($generated@@76 $generated@@385 $generated@@4)) (= (type $generated@@383) ($generated@@76 $generated@@385 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@257 $generated@@382 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 $generated@@382 $generated@@384)) (not ($generated@@0 ($generated@@81 $generated@@383 $generated@@384)))))))
 :pattern ( ($generated@@81 ($generated@@257 $generated@@382 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@225 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@149) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@240 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@225 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@230 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@149) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@240 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@230 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@81 ($generated@@302 $generated@@395) $generated@@394)))
)))
(assert  (and (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@396 $generated@@399)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@396 $generated@@399))
)) (forall (($generated@@400 T@T) ($generated@@401 T@U) ) (! (= (type ($generated@@397 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@397 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@311 (type $generated@@402))))
(let (($generated@@404 ($generated@@310 (type $generated@@402))))
(= (type ($generated@@398 $generated@@402)) ($generated@@76 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@398 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@406) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@405) ($generated@@147 ($generated@@397 $generated@@140 $generated@@406)))) (= ($generated@@81 ($generated@@398 $generated@@405) ($generated@@147 ($generated@@397 $generated@@140 $generated@@406))) ($generated@@148 ($generated@@397 $generated@@140 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@329 (type $generated@@410))))
(let (($generated@@412 ($generated@@328 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@76 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@414) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@413) ($generated@@147 ($generated@@397 $generated@@140 $generated@@414)))) (= ($generated@@81 ($generated@@408 $generated@@413) ($generated@@147 ($generated@@397 $generated@@140 $generated@@414))) ($generated@@148 ($generated@@397 $generated@@140 $generated@@414))))))
 :pattern ( ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@310 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@309 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@328 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@327 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@428) $generated@@432))) (and ($generated@@240 ($generated@@81 ($generated@@398 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@240 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@428) $generated@@432))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) $generated@@64)) (= (type $generated@@439) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@436) $generated@@440))) (and ($generated@@240 ($generated@@81 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@240 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@79 (type $generated@@441))))
 (=> (and (and (= (type $generated@@441) ($generated@@76 $generated@@443 $generated@@4)) (= (type $generated@@442) ($generated@@76 $generated@@443 $generated@@4))) ($generated@@251 $generated@@441 $generated@@442)) (= $generated@@441 $generated@@442)))
 :pattern ( ($generated@@251 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@445)))
 (=> (and (and (= (type $generated@@444) ($generated@@76 $generated@@447 $generated@@4)) (= (type $generated@@446) $generated@@447)) ($generated@@0 ($generated@@81 $generated@@444 $generated@@446))) ($generated@@0 ($generated@@81 ($generated@@254 $generated@@444 $generated@@445) $generated@@446))))
 :pattern ( ($generated@@254 $generated@@444 $generated@@445) ($generated@@81 $generated@@444 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@449)))
 (=> (and (= (type $generated@@448) ($generated@@76 $generated@@451 $generated@@4)) (= (type $generated@@450) $generated@@451)) (= ($generated@@0 ($generated@@81 ($generated@@254 $generated@@448 $generated@@449) $generated@@450))  (or (= $generated@@450 $generated@@449) ($generated@@0 ($generated@@81 $generated@@448 $generated@@450))))))
 :pattern ( ($generated@@81 ($generated@@254 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@452) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@453) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@454) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@452 $generated@@454))) (and ($generated@@132 $generated@@452 $generated@@453) ($generated@@132 $generated@@453 $generated@@454))) ($generated@@132 $generated@@452 $generated@@454))
 :pattern ( ($generated@@132 $generated@@452 $generated@@453) ($generated@@132 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
 (=> (and (and (= (type $generated@@455) ($generated@@76 $generated@@458 $generated@@4)) (= (type $generated@@456) ($generated@@76 $generated@@458 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@456 $generated@@457))) (not ($generated@@0 ($generated@@81 ($generated@@257 $generated@@455 $generated@@456) $generated@@457)))))
 :pattern ( ($generated@@257 $generated@@455 $generated@@456) ($generated@@81 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@460 T@T) ) (! (= (type ($generated@@459 $generated@@460)) ($generated@@76 $generated@@460 $generated@@4))
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@329 (type $generated@@461))))
(let (($generated@@463 ($generated@@328 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@327 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@326 $generated@@463 $generated@@462)) (= ($generated@@325 $generated@@461) ($generated@@459 $generated@@463))))))
 :pattern ( ($generated@@325 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@329 (type $generated@@464))))
(let (($generated@@466 ($generated@@328 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@327 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@326 $generated@@466 $generated@@465)) (= ($generated@@365 $generated@@464) ($generated@@459 $generated@@465))))))
 :pattern ( ($generated@@365 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@329 (type $generated@@467))))
(let (($generated@@469 ($generated@@328 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@327 $generated@@469 $generated@@468)) (= (= $generated@@467 ($generated@@326 $generated@@469 $generated@@468)) (= ($generated@@407 $generated@@467) ($generated@@459 $generated@@149))))))
 :pattern ( ($generated@@407 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@311 (type $generated@@470))))
(let (($generated@@472 ($generated@@310 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@309 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@308 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@149) (= (type $generated@@474) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@470) ($generated@@255 ($generated@@215 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@396 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@329 (type $generated@@475))))
(let (($generated@@477 ($generated@@328 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@327 $generated@@477 $generated@@476)) (or (= $generated@@475 ($generated@@326 $generated@@477 $generated@@476)) (exists (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (and (and (= (type $generated@@478) $generated@@149) (= (type $generated@@479) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@407 $generated@@475) ($generated@@255 ($generated@@215 $generated@@478 $generated@@479)))))
 :no-pattern (type $generated@@478)
 :no-pattern (type $generated@@479)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
 :no-pattern ($generated $generated@@479)
 :no-pattern ($generated@@0 $generated@@479)
))))))
 :pattern ( ($generated@@407 $generated@@475))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@149) ($generated@@216 $generated@@480 $generated@@46)) (and (= ($generated@@255 ($generated@@397 $generated@@2 $generated@@480)) $generated@@480) ($generated@@136 ($generated@@397 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@149) ($generated@@216 $generated@@481 $generated@@47)) (and (= ($generated@@255 ($generated@@397 $generated@@3 $generated@@481)) $generated@@481) ($generated@@136 ($generated@@397 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@149) ($generated@@216 $generated@@482 $generated@@44)) (and (= ($generated@@255 ($generated@@397 $generated@@4 $generated@@482)) $generated@@482) ($generated@@136 ($generated@@397 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 21))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@149) ($generated@@216 $generated@@484 $generated@@45)) (and (= ($generated@@255 ($generated@@397 $generated@@483 $generated@@484)) $generated@@484) ($generated@@136 ($generated@@397 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@216 ($generated@@255 $generated@@485) $generated@@486) ($generated@@136 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@216 ($generated@@255 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@79 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@76 $generated@@488 $generated@@2)) (<= 0 ($generated@@301 $generated@@487))))
 :pattern ( ($generated@@301 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@283 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@282 $generated@@490)) (<= 0 ($generated@@281 $generated@@489))))
 :pattern ( ($generated@@281 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@425 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@425 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@425 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@425 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@72 ($generated@@425 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@64) (= (type $generated@@504) $generated@@64)) (= ($generated@@501 ($generated@@433 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@433 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) $generated@@64)) (= ($generated@@505 ($generated@@433 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@433 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@64) (= (type $generated@@510) $generated@@64)) (= ($generated@@72 ($generated@@433 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (= ($generated@@274 ($generated@@215 $generated@@511 $generated@@512)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= ($generated@@513 ($generated@@139 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@139 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= ($generated@@517 ($generated@@139 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@139 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@215 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@149) (= (type $generated@@524) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@215 $generated@@523 $generated@@524))
)))
(assert  (and (forall (($generated@@527 T@U) ) (! (= (type ($generated@@525 $generated@@527)) $generated@@249)
 :pattern ( ($generated@@525 $generated@@527))
)) (= (type $generated@@526) $generated@@249)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@249) (= (type $generated@@529) ($generated@@76 $generated@@149 $generated@@4))) (= ($generated@@247 $generated@@528 $generated@@529) ($generated@@247 $generated@@526 $generated@@529)))
 :pattern ( ($generated@@247 ($generated@@525 $generated@@528) $generated@@529))
)))
(assert  (and (forall (($generated@@532 T@U) ) (! (= (type ($generated@@530 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@530 $generated@@532))
)) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (! (let (($generated@@535 ($generated@@283 (type $generated@@533))))
(= (type ($generated@@531 $generated@@533 $generated@@534)) $generated@@535))
 :pattern ( ($generated@@531 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@282 $generated@@149)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@536 ($generated@@530 $generated@@537) $generated@@538) (forall (($generated@@539 Int) ) (!  (=> (and (<= 0 $generated@@539) (< $generated@@539 ($generated@@281 $generated@@536))) ($generated@@240 ($generated@@531 $generated@@536 $generated@@539) $generated@@537 $generated@@538))
 :pattern ( ($generated@@531 $generated@@536 $generated@@539))
))))
 :pattern ( ($generated@@74 $generated@@536 ($generated@@530 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (=> (= (type $generated@@540) ($generated@@76 $generated@@542 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@254 $generated@@540 $generated@@541) $generated@@541))))
 :pattern ( ($generated@@254 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@543 ($generated@@75 $generated@@544)) $generated@@544)
 :pattern ( ($generated@@75 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@64)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@64) (= ($generated@@545 ($generated@@225 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@225 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@548)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@64)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@64) (= ($generated@@549 ($generated@@230 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@230 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@552)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@64)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@64) (= ($generated@@553 ($generated@@154 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@154 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@556)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@64)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@64) (= ($generated@@557 ($generated@@530 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@530 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@64) (= ($generated@@72 ($generated@@530 $generated@@560)) $generated@@57))
 :pattern ( ($generated@@530 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
(= ($generated@@397 $generated@@562 ($generated@@255 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@255 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) (= ($generated@@136 $generated@@563 ($generated@@425 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@563) $generated@@566))) (and ($generated@@216 ($generated@@81 ($generated@@398 $generated@@563) $generated@@566) $generated@@565) ($generated@@216 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@563) $generated@@566))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@136 $generated@@563 ($generated@@425 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@567) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) $generated@@64)) (= ($generated@@136 $generated@@567 ($generated@@433 $generated@@568 $generated@@569)) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@567) $generated@@570))) (and ($generated@@216 ($generated@@81 ($generated@@408 $generated@@567) $generated@@570) $generated@@569) ($generated@@216 $generated@@570 $generated@@568)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@567) $generated@@570))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@567) $generated@@570))
))))
 :pattern ( ($generated@@136 $generated@@567 ($generated@@433 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@149)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@215 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@215 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@149)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@215 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@215 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@249) (= (type $generated@@578) ($generated@@76 $generated@@149 $generated@@4))) (= ($generated@@247 ($generated@@248 $generated@@577) $generated@@578) ($generated@@247 $generated@@577 $generated@@578)))
 :pattern ( ($generated@@247 ($generated@@248 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@149) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@216 $generated@@579 ($generated@@425 $generated@@580 $generated@@581))) (and (= ($generated@@255 ($generated@@397 ($generated@@309 $generated@@149 $generated@@149) $generated@@579)) $generated@@579) ($generated@@136 ($generated@@397 ($generated@@309 $generated@@149 $generated@@149) $generated@@579) ($generated@@425 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@216 $generated@@579 ($generated@@425 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@149) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@216 $generated@@582 ($generated@@433 $generated@@583 $generated@@584))) (and (= ($generated@@255 ($generated@@397 ($generated@@327 $generated@@149 $generated@@149) $generated@@582)) $generated@@582) ($generated@@136 ($generated@@397 ($generated@@327 $generated@@149 $generated@@149) $generated@@582) ($generated@@433 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@216 $generated@@582 ($generated@@433 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@64) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@149)) ($generated@@216 $generated@@587 ($generated@@139 $generated@@585 $generated@@586))) (and (= ($generated@@255 ($generated@@397 $generated@@140 $generated@@587)) $generated@@587) ($generated@@136 ($generated@@397 $generated@@140 $generated@@587) ($generated@@139 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@216 $generated@@587 ($generated@@139 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@588)))
 (not ($generated@@0 ($generated@@81 ($generated@@252 $generated@@589) $generated@@588))))
 :pattern ( (let (($generated@@589 (type $generated@@588)))
($generated@@81 ($generated@@252 $generated@@589) $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@81 ($generated@@459 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@81 ($generated@@459 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ) (! (= (type ($generated@@592 $generated@@593)) $generated@@69)
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@64) (= (type $generated@@595) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@594 $generated@@595)) $generated@@62) (= ($generated@@592 ($generated@@139 $generated@@594 $generated@@595)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@140) (= ($generated@@571 ($generated@@255 $generated@@596)) ($generated@@572 $generated@@596)))
 :pattern ( ($generated@@571 ($generated@@255 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@149) ($generated@@216 $generated@@597 ($generated@@75 0))) (and (= ($generated@@255 ($generated@@397 $generated@@2 $generated@@597)) $generated@@597) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@597) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@597 ($generated@@75 0)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@149) (= (type $generated@@599) $generated@@64)) ($generated@@216 $generated@@598 ($generated@@225 $generated@@599))) (and (= ($generated@@255 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@598)) $generated@@598) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@598) ($generated@@225 $generated@@599))))
 :pattern ( ($generated@@216 $generated@@598 ($generated@@225 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@149) (= (type $generated@@601) $generated@@64)) ($generated@@216 $generated@@600 ($generated@@230 $generated@@601))) (and (= ($generated@@255 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@600)) $generated@@600) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@4) $generated@@600) ($generated@@230 $generated@@601))))
 :pattern ( ($generated@@216 $generated@@600 ($generated@@230 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@149) (= (type $generated@@603) $generated@@64)) ($generated@@216 $generated@@602 ($generated@@154 $generated@@603))) (and (= ($generated@@255 ($generated@@397 ($generated@@76 $generated@@149 $generated@@2) $generated@@602)) $generated@@602) ($generated@@136 ($generated@@397 ($generated@@76 $generated@@149 $generated@@2) $generated@@602) ($generated@@154 $generated@@603))))
 :pattern ( ($generated@@216 $generated@@602 ($generated@@154 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@149) (= (type $generated@@605) $generated@@64)) ($generated@@216 $generated@@604 ($generated@@530 $generated@@605))) (and (= ($generated@@255 ($generated@@397 ($generated@@282 $generated@@149) $generated@@604)) $generated@@604) ($generated@@136 ($generated@@397 ($generated@@282 $generated@@149) $generated@@604) ($generated@@530 $generated@@605))))
 :pattern ( ($generated@@216 $generated@@604 ($generated@@530 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@79 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@76 $generated@@609 $generated@@4)) (= (type $generated@@608) ($generated@@76 $generated@@609 $generated@@4))) (= ($generated@@606 $generated@@607 $generated@@608) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@609) ($generated@@0 ($generated@@81 $generated@@607 $generated@@610))) ($generated@@0 ($generated@@81 $generated@@608 $generated@@610)))
 :pattern ( ($generated@@81 $generated@@607 $generated@@610))
 :pattern ( ($generated@@81 $generated@@608 $generated@@610))
)))))
 :pattern ( ($generated@@606 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@612) $generated@@64)) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@611 ($generated@@154 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@611 $generated@@614)))) ($generated@@240 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@81 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@74 $generated@@611 ($generated@@154 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@140) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@239 $generated@@617) (and ($generated@@138 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@64) ($generated@@74 $generated@@615 ($generated@@139 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@74 $generated@@615 ($generated@@139 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@240 ($generated@@147 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@240 ($generated@@147 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@140) (= (type $generated@@620) $generated@@64)) (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@239 $generated@@621) (and ($generated@@138 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@64) ($generated@@74 $generated@@619 ($generated@@139 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@74 $generated@@619 ($generated@@139 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@240 ($generated@@148 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@240 ($generated@@148 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@149) (= (type $generated@@624) $generated@@149)) (= ($generated@@215 ($generated@@235 $generated@@623) ($generated@@235 $generated@@624)) ($generated@@235 ($generated@@215 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@215 ($generated@@235 $generated@@623) ($generated@@235 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@149 $generated@@4)) ($generated@@253 $generated@@625)) ($generated@@0 ($generated@@81 $generated@@625 ($generated@@255 ($generated@@8 ($generated@@256 $generated@@625))))))
 :pattern ( ($generated@@256 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@255 ($generated@@235 $generated@@626)) ($generated@@235 ($generated@@255 $generated@@626)))
 :pattern ( ($generated@@255 ($generated@@235 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@283 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@282 $generated@@628)) (= ($generated@@281 $generated@@627) 0)) (= $generated@@627 ($generated@@280 $generated@@628))))
 :pattern ( ($generated@@281 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@76 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@301 ($generated@@82 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@301 $generated@@629) ($generated ($generated@@81 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@301 ($generated@@82 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@634) $generated@@2)) ($generated@@74 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@74 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@636) $generated@@3)) ($generated@@74 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@74 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@638) $generated@@4)) ($generated@@74 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@74 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@640) $generated@@483)) ($generated@@74 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@74 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@642) $generated@@149)) ($generated@@74 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@74 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@282 $generated@@149)) (= (type $generated@@644) $generated@@64)) (= ($generated@@136 $generated@@643 ($generated@@530 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@281 $generated@@643))) ($generated@@216 ($generated@@531 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@531 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@136 $generated@@643 ($generated@@530 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@282 $generated@@149)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@281 $generated@@647))) (< ($generated@@572 ($generated@@397 $generated@@140 ($generated@@531 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@572 ($generated@@397 $generated@@140 ($generated@@531 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@650) $generated@@64)) (= (type $generated@@651) $generated@@64)) ($generated@@136 $generated@@649 ($generated@@425 $generated@@650 $generated@@651))) (and (and ($generated@@136 ($generated@@307 $generated@@649) ($generated@@225 $generated@@650)) ($generated@@136 ($generated@@354 $generated@@649) ($generated@@225 $generated@@651))) ($generated@@136 ($generated@@396 $generated@@649) ($generated@@225 ($generated@@139 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@136 $generated@@649 ($generated@@425 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@653) $generated@@64)) (= (type $generated@@654) $generated@@64)) ($generated@@136 $generated@@652 ($generated@@433 $generated@@653 $generated@@654))) (and (and ($generated@@136 ($generated@@325 $generated@@652) ($generated@@230 $generated@@653)) ($generated@@136 ($generated@@365 $generated@@652) ($generated@@230 $generated@@654))) ($generated@@136 ($generated@@407 $generated@@652) ($generated@@230 ($generated@@139 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@136 $generated@@652 ($generated@@433 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@136 $generated@@655 $generated@@46))
 :pattern ( ($generated@@136 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@136 $generated@@656 $generated@@47))
 :pattern ( ($generated@@136 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@136 $generated@@657 $generated@@44))
 :pattern ( ($generated@@136 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@483) ($generated@@136 $generated@@658 $generated@@45))
 :pattern ( ($generated@@136 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@149) ($generated@@136 $generated@@659 $generated@@48))
 :pattern ( ($generated@@136 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 (T@U) Bool)
(declare-fun $generated@@669 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@660) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@663) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@661) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@665) $generated@@77)) (= (type $generated@@666) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@667) ($generated@@76 $generated@@149 $generated@@4))) (= (type $generated@@669) ($generated@@76 $generated@@149 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@670 true))
(let (($generated@@671  (=> (and ($generated@@251 $generated@@660 ($generated@@252 $generated@@149)) (= (ControlFlow 0 11) 8)) $generated@@670)))
(let (($generated@@672  (=> (and (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149))) ($generated@@74 $generated@@660 ($generated@@225 $generated@@46) $generated@@661)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149)))) (=> (and ($generated@@250 $generated@@660) (= (ControlFlow 0 9) 8)) $generated@@670)))))
(let (($generated@@673  (=> (not $generated@@662) (and (=> (= (ControlFlow 0 12) 9) $generated@@672) (=> (= (ControlFlow 0 12) 11) $generated@@671)))))
(let (($generated@@674  (=> (and (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149))) (= $generated@@663 ($generated@@257 $generated@@660 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@664)))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and ($generated@@606 $generated@@663 $generated@@660) (not ($generated@@606 $generated@@660 $generated@@663)))) (=> (and ($generated@@606 $generated@@663 $generated@@660) (not ($generated@@606 $generated@@660 $generated@@663))) (=> (=> (not ($generated@@251 $generated@@663 ($generated@@252 $generated@@149))) ($generated@@250 $generated@@663)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> $generated@@662 (not ($generated@@251 $generated@@663 ($generated@@252 $generated@@149))))) (=> (=> $generated@@662 (not ($generated@@251 $generated@@663 ($generated@@252 $generated@@149)))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> $generated@@662 (= $generated@@664 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@663))))))))))))
(let (($generated@@675 true))
(let (($generated@@676  (=> $generated@@662 (and (=> (= (ControlFlow 0 7) 2) $generated@@675) (=> (= (ControlFlow 0 7) 4) $generated@@674)))))
(let (($generated@@677  (and (=> (= (ControlFlow 0 13) 12) $generated@@673) (=> (= (ControlFlow 0 13) 7) $generated@@676))))
(let (($generated@@678 true))
(let (($generated@@679  (=> (and (and ($generated@@136 $generated@@660 ($generated@@225 $generated@@46)) ($generated@@74 $generated@@660 ($generated@@225 $generated@@46) $generated@@661)) (not false)) (=> (and (and (and (=> $generated@@662 (=> (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149))) ($generated@@250 $generated@@660))) (=> $generated@@662 (not ($generated@@251 $generated@@660 ($generated@@252 $generated@@149))))) (and (=> $generated@@662 (= $generated@@664 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@660))) (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@77) (=> (and (not (= $generated@@680 $generated@@665)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@661 $generated@@680) $generated@@60))) (= ($generated@@81 $generated@@661 $generated@@680) ($generated@@81 $generated@@661 $generated@@680))))
 :pattern ( ($generated@@81 $generated@@661 $generated@@680))
)))) (and (and ($generated@@132 $generated@@661 $generated@@661) (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (! (let (($generated@@683 ($generated@@67 (type $generated@@682))))
 (=> (and (and (= (type $generated@@681) $generated@@77) (= (type $generated@@682) ($generated@@66 $generated@@683))) (and (not (= $generated@@681 $generated@@665)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@661 $generated@@681) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@661 $generated@@681) $generated@@682) ($generated@@83 ($generated@@81 $generated@@661 $generated@@681) $generated@@682)) ($generated@@0 ($generated@@159 $generated@@666 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@661 $generated@@681) $generated@@682))
))) (and ($generated@@606 $generated@@660 $generated@@667) (=> ($generated@@251 $generated@@660 $generated@@667) true)))) (and (=> (= (ControlFlow 0 14) 1) $generated@@678) (=> (= (ControlFlow 0 14) 13) $generated@@677))))))
(let (($generated@@684  (=> (and (= $generated@@666 ($generated@@160 $generated@@665 $generated@@661 $generated@@60 false)) (= $generated@@667 ($generated@@254 ($generated@@252 $generated@@149) ($generated@@255 ($generated@@8 $generated@@664))))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (=> $generated@@662 (not ($generated@@251 $generated@@667 ($generated@@252 $generated@@149))))) (=> (=> $generated@@662 (not ($generated@@251 $generated@@667 ($generated@@252 $generated@@149)))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (=> $generated@@662 (= $generated@@664 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@667)))) (=> (=> $generated@@662 (= $generated@@664 ($generated@@247 ($generated@@248 ($generated@@248 $generated@@526)) $generated@@667))) (=> (= (ControlFlow 0 15) 14) $generated@@679))))))))
(let (($generated@@685  (=> (and ($generated@@239 $generated@@661) ($generated@@668 $generated@@661)) (=> (and (and (and ($generated@@136 $generated@@669 ($generated@@225 $generated@@46)) ($generated@@74 $generated@@669 ($generated@@225 $generated@@46) $generated@@661)) true) (and (= 1 $generated@@246) (= (ControlFlow 0 18) 15))) $generated@@684))))
$generated@@685)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
