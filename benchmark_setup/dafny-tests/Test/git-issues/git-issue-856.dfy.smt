(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (forall (($generated@@140 T@U) ) (! (= (type ($generated@@136 $generated@@140)) $generated@@67)
 :pattern ( ($generated@@136 $generated@@140))
)) (= (type $generated@@137) $generated@@80)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@80)) (and (not (= $generated@@143 $generated@@137)) (= ($generated@@138 $generated@@143) ($generated@@136 $generated@@142)))) ($generated@@139 ($generated@@8 ($generated@@135 $generated@@143)) $generated@@46))
 :pattern ( ($generated@@135 $generated@@143) ($generated@@136 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@146) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@144 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@145 $generated@@147) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@146 $generated@@147) $generated@@60))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@67) (= (type $generated@@149) $generated@@80)) (= (type $generated@@150) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@137) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@149 ($generated@@136 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@67) (= (type $generated@@153) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@154) $generated@@80)) (and (and ($generated@@151 $generated@@153) (and (not (= $generated@@154 $generated@@137)) (= ($generated@@138 $generated@@154) ($generated@@136 $generated@@152)))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60)))) ($generated@@77 ($generated@@8 ($generated@@135 $generated@@154)) $generated@@46 $generated@@153))
 :pattern ( ($generated@@135 $generated@@154) ($generated@@86 ($generated@@84 $generated@@153 $generated@@154) $generated@@60) ($generated@@136 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@2) ($generated@@139 $generated@@155 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@155 ($generated@@78 0)))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@156 $generated@@157)) $generated@@67)
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@67) (= (type $generated@@159) $generated@@80)) (= (type $generated@@160) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160) ($generated@@77 $generated@@159 ($generated@@136 $generated@@158) $generated@@160)))
 :pattern ( ($generated@@77 $generated@@159 ($generated@@156 $generated@@158) $generated@@160))
)))
(assert  (and (= ($generated@@1 $generated@@163) 14) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@67)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@67) (= (type $generated@@167) $generated@@67)) (= (type $generated@@168) $generated@@163)) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@139 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@179)) $generated@@67)
 :pattern ( ($generated@@177 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@181) $generated@@67)) ($generated@@139 $generated@@180 ($generated@@177 $generated@@181))) ($generated@@178 $generated@@180))
 :pattern ( ($generated@@139 $generated@@180 ($generated@@177 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@80 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@70 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@80) (= (type $generated@@232) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@233) ($generated@@69 $generated@@4))) (= (type $generated@@235) $generated@@80)) (= (type $generated@@236) ($generated@@69 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@163)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@67) (= (type $generated@@243) $generated@@67)) (= (type $generated@@244) $generated@@172)) (= (type $generated@@245) $generated@@172)) (= ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@139 ($generated@@238 $generated@@244 $generated@@245) ($generated@@162 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@163) (= (type $generated@@247) $generated@@163)) (= ($generated@@169 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@169 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@67)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@251) $generated@@67)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@172) ($generated@@0 ($generated@@84 $generated@@250 $generated@@252))) ($generated@@239 $generated@@252 $generated@@251))
 :pattern ( ($generated@@84 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@67)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@256) $generated@@67)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@172) ($generated@@0 ($generated@@84 $generated@@255 $generated@@257))) ($generated@@239 $generated@@257 $generated@@256))
 :pattern ( ($generated@@84 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@172)) (= (type $generated@@268) $generated@@172)) (= (type $generated@@269) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@151 $generated@@269)) (= ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@77 ($generated@@238 $generated@@267 $generated@@268) ($generated@@162 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@163) (= ($generated@@161 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@161 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@163) ($generated@@161 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@172) (= (type $generated@@275) $generated@@172)) (= $generated@@273 ($generated@@238 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@161 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@67) (= (type $generated@@285) $generated@@80)) (= ($generated@@139 $generated@@285 ($generated@@156 $generated@@284))  (and ($generated@@139 $generated@@285 ($generated@@136 $generated@@284)) (not (= $generated@@285 $generated@@137)))))
 :pattern ( ($generated@@139 $generated@@285 ($generated@@156 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@172)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@67) (= (type $generated@@290) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@77 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@292) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@293) $generated@@172)) (= (type $generated@@294) $generated@@67)) ($generated@@144 $generated@@291 $generated@@292)) ($generated@@264 $generated@@293 $generated@@294 $generated@@291)) ($generated@@264 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@144 $generated@@291 $generated@@292) ($generated@@264 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@295) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@296) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@298) $generated@@67)) ($generated@@144 $generated@@295 $generated@@296)) ($generated@@77 $generated@@297 $generated@@298 $generated@@295)) ($generated@@77 $generated@@297 $generated@@298 $generated@@296))
 :pattern ( ($generated@@144 $generated@@295 $generated@@296) ($generated@@77 $generated@@297 $generated@@298 $generated@@295))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@79 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@82 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@79 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@84 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@72)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@67) (and (= ($generated@@75 ($generated@@136 $generated@@307)) $generated@@61) (= ($generated@@305 ($generated@@136 $generated@@307)) $generated@@65)))
 :pattern ( ($generated@@136 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@75 ($generated@@156 $generated@@308)) $generated@@62) (= ($generated@@305 ($generated@@156 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@156 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@79 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@84 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@84 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@82 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@79 $generated@@346 $generated@@2)) (= ($generated@@178 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@84 $generated@@345 $generated@@347))) (<= ($generated ($generated@@84 $generated@@345 $generated@@347)) ($generated@@299 $generated@@345))))
 :pattern ( ($generated@@84 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@178 $generated@@345))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@67) (= (type $generated@@349) $generated@@80)) (= ($generated@@139 $generated@@349 ($generated@@136 $generated@@348))  (or (= $generated@@349 $generated@@137) (= ($generated@@138 $generated@@349) ($generated@@136 $generated@@348)))))
 :pattern ( ($generated@@139 $generated@@349 ($generated@@136 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(let (($generated@@352 ($generated@@312 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@311 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@310 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@309 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@313 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@79 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@84 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@331 (type $generated@@361))))
(let (($generated@@363 ($generated@@330 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@329 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@328 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@327 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@79 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@84 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@373) $generated@@67)) (= ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@372 $generated@@374)))) ($generated@@239 $generated@@374 $generated@@373))
 :pattern ( ($generated@@84 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@139 $generated@@372 ($generated@@177 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@376) $generated@@67)) (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@172) ($generated@@0 ($generated@@84 $generated@@375 $generated@@378))) ($generated@@264 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@84 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@77 $generated@@375 ($generated@@248 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@79 $generated@@172 $generated@@4)) (= (type $generated@@380) $generated@@67)) (= (type $generated@@381) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) ($generated@@0 ($generated@@84 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@84 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@77 $generated@@379 ($generated@@253 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@84 ($generated@@300 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@84 ($generated@@300 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@313 (type $generated@@391))))
(let (($generated@@393 ($generated@@312 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@79 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@395) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395)))) (= ($generated@@84 ($generated@@387 $generated@@394) ($generated@@170 ($generated@@386 $generated@@163 $generated@@395))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@395))))))
 :pattern ( ($generated@@84 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@79 $generated@@172 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@331 (type $generated@@399))))
(let (($generated@@401 ($generated@@330 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@79 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@403) $generated@@172)) (= ($generated@@0 ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403)))) (= ($generated@@84 ($generated@@397 $generated@@402) ($generated@@170 ($generated@@386 $generated@@163 $generated@@403))) ($generated@@171 ($generated@@386 $generated@@163 $generated@@403))))))
 :pattern ( ($generated@@84 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@312 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@311 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@84 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@84 ($generated@@309 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@404) $generated@@408))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@84 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@330 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@329 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@84 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@84 ($generated@@327 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@409) $generated@@413))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@84 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@67)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@418) $generated@@67)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))) (and ($generated@@264 ($generated@@84 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@264 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@77 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@67)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@426) $generated@@67)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))) (and ($generated@@264 ($generated@@84 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@264 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@77 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@430) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@431) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@432) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@430 $generated@@432))) (and ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))) ($generated@@144 $generated@@430 $generated@@432))
 :pattern ( ($generated@@144 $generated@@430 $generated@@431) ($generated@@144 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@79 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@331 (type $generated@@435))))
(let (($generated@@437 ($generated@@330 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@329 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@328 $generated@@437 $generated@@436)) (= ($generated@@327 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@327 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@331 (type $generated@@438))))
(let (($generated@@440 ($generated@@330 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@329 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@328 $generated@@440 $generated@@439)) (= ($generated@@365 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@365 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@331 (type $generated@@441))))
(let (($generated@@443 ($generated@@330 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@329 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@328 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@172))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@313 (type $generated@@444))))
(let (($generated@@446 ($generated@@312 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@311 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@310 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@172) (= (type $generated@@448) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@385 $generated@@444) ($generated@@286 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@385 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@331 (type $generated@@449))))
(let (($generated@@451 ($generated@@330 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@329 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@328 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@84 ($generated@@396 $generated@@449) ($generated@@286 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@172) ($generated@@239 $generated@@454 $generated@@46)) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@454)) $generated@@454) ($generated@@139 ($generated@@386 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@172) ($generated@@239 $generated@@455 $generated@@47)) (and (= ($generated@@286 ($generated@@386 $generated@@3 $generated@@455)) $generated@@455) ($generated@@139 ($generated@@386 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@172) ($generated@@239 $generated@@456 $generated@@44)) (and (= ($generated@@286 ($generated@@386 $generated@@4 $generated@@456)) $generated@@456) ($generated@@139 ($generated@@386 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 20))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@172) ($generated@@239 $generated@@458 $generated@@45)) (and (= ($generated@@286 ($generated@@386 $generated@@457 $generated@@458)) $generated@@458) ($generated@@139 ($generated@@386 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@67) (= ($generated@@239 ($generated@@286 $generated@@459) $generated@@460) ($generated@@139 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@239 ($generated@@286 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@80) (<= 0 ($generated@@135 $generated@@461)))
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@82 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@79 $generated@@463 $generated@@2)) (<= 0 ($generated@@299 $generated@@462))))
 :pattern ( ($generated@@299 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@279 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@278 $generated@@465)) (<= 0 ($generated@@277 $generated@@464))))
 :pattern ( ($generated@@277 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@414 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@414 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@75 ($generated@@414 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@67)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@67) (= (type $generated@@479) $generated@@67)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@67) (= (type $generated@@483) $generated@@67)) (= ($generated@@480 ($generated@@422 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@67) (= (type $generated@@485) $generated@@67)) (= ($generated@@75 ($generated@@422 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@172) (= (type $generated@@487) $generated@@172)) (= ($generated@@270 ($generated@@238 $generated@@486 $generated@@487)) $generated@@63))
 :pattern ( ($generated@@238 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@67)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@67) (= (type $generated@@491) $generated@@67)) (= ($generated@@488 ($generated@@162 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@162 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@67) (= (type $generated@@495) $generated@@67)) (= ($generated@@492 ($generated@@162 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@162 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@172) (= (type $generated@@497) $generated@@172)) (= ($generated@@170 ($generated@@238 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@172) (= (type $generated@@499) $generated@@172)) (= ($generated@@171 ($generated@@238 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@279 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@278 $generated@@172)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@277 $generated@@506))) ($generated@@264 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@77 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@78 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@78 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@67)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@67) (= ($generated@@75 ($generated@@248 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@67)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@67) (= ($generated@@75 ($generated@@253 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@67)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@520 ($generated@@177 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@177 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@67) (= ($generated@@75 ($generated@@177 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@177 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@67)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@67) (= ($generated@@75 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@67)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@528 ($generated@@136 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@136 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@156 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@156 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@386 $generated@@535 ($generated@@286 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@286 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@67)) (= (type $generated@@538) $generated@@67)) (= ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))) (and ($generated@@239 ($generated@@84 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@239 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@84 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@84 ($generated@@309 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@139 $generated@@536 ($generated@@414 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@67)) (= (type $generated@@542) $generated@@67)) (= ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))) (and ($generated@@239 ($generated@@84 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@239 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@84 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@84 ($generated@@327 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@139 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552))) (and (= ($generated@@286 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@386 ($generated@@311 $generated@@172 $generated@@172) $generated@@550) ($generated@@414 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@239 $generated@@550 ($generated@@414 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) $generated@@67)) ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555))) (and (= ($generated@@286 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@139 ($generated@@386 ($generated@@329 $generated@@172 $generated@@172) $generated@@553) ($generated@@422 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@239 $generated@@553 ($generated@@422 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@67) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) $generated@@172)) ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@286 ($generated@@386 $generated@@163 $generated@@558)) $generated@@558) ($generated@@139 ($generated@@386 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@84 ($generated@@433 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@84 ($generated@@433 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@67) (= (type $generated@@562) $generated@@67)) (and (= ($generated@@75 ($generated@@162 $generated@@561 $generated@@562)) $generated@@64) (= ($generated@@305 ($generated@@162 $generated@@561 $generated@@562)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@163) (= ($generated@@544 ($generated@@286 $generated@@563)) ($generated@@545 $generated@@563)))
 :pattern ( ($generated@@544 ($generated@@286 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@172) ($generated@@239 $generated@@564 ($generated@@78 0))) (and (= ($generated@@286 ($generated@@386 $generated@@2 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@564) ($generated@@78 0))))
 :pattern ( ($generated@@239 $generated@@564 ($generated@@78 0)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@172) (= (type $generated@@566) $generated@@67)) ($generated@@239 $generated@@565 ($generated@@248 $generated@@566))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565)) $generated@@565) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@565) ($generated@@248 $generated@@566))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@248 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@67)) ($generated@@239 $generated@@567 ($generated@@253 $generated@@568))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@4) $generated@@567) ($generated@@253 $generated@@568))))
 :pattern ( ($generated@@239 $generated@@567 ($generated@@253 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@67)) ($generated@@239 $generated@@569 ($generated@@177 $generated@@570))) (and (= ($generated@@286 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569)) $generated@@569) ($generated@@139 ($generated@@386 ($generated@@79 $generated@@172 $generated@@2) $generated@@569) ($generated@@177 $generated@@570))))
 :pattern ( ($generated@@239 $generated@@569 ($generated@@177 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@67)) ($generated@@239 $generated@@571 ($generated@@500 $generated@@572))) (and (= ($generated@@286 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571)) $generated@@571) ($generated@@139 ($generated@@386 ($generated@@278 $generated@@172) $generated@@571) ($generated@@500 $generated@@572))))
 :pattern ( ($generated@@239 $generated@@571 ($generated@@500 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@67) (= (type $generated@@574) $generated@@172)) ($generated@@239 $generated@@574 ($generated@@136 $generated@@573))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@386 $generated@@80 $generated@@574) ($generated@@136 $generated@@573))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@136 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@172)) ($generated@@239 $generated@@576 ($generated@@156 $generated@@575))) (and (= ($generated@@286 ($generated@@386 $generated@@80 $generated@@576)) $generated@@576) ($generated@@139 ($generated@@386 $generated@@80 $generated@@576) ($generated@@156 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@156 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (=> (and (and (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@80)) (= (type $generated@@579) ($generated@@69 $generated@@581))) ($generated@@151 ($generated@@85 $generated@@577 $generated@@578 ($generated@@87 ($generated@@84 $generated@@577 $generated@@578) $generated@@579 $generated@@580)))) ($generated@@144 $generated@@577 ($generated@@85 $generated@@577 $generated@@578 ($generated@@87 ($generated@@84 $generated@@577 $generated@@578) $generated@@579 $generated@@580)))))
 :pattern ( ($generated@@85 $generated@@577 $generated@@578 ($generated@@87 ($generated@@84 $generated@@577 $generated@@578) $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@79 $generated@@172 $generated@@2)) (= (type $generated@@583) $generated@@67)) (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@582 ($generated@@177 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@172) (< 0 ($generated ($generated@@84 $generated@@582 $generated@@585)))) ($generated@@264 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@84 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@77 $generated@@582 ($generated@@177 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@163) (= (type $generated@@587) $generated@@67)) (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@588) (and ($generated@@161 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@67) ($generated@@77 $generated@@586 ($generated@@162 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@77 $generated@@586 ($generated@@162 $generated@@587 $generated@@589) $generated@@588))
))))) ($generated@@264 ($generated@@170 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@163) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@151 $generated@@592) (and ($generated@@161 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@67) ($generated@@77 $generated@@590 ($generated@@162 $generated@@593 $generated@@591) $generated@@592))
 :pattern ( ($generated@@77 $generated@@590 ($generated@@162 $generated@@593 $generated@@591) $generated@@592))
))))) ($generated@@264 ($generated@@171 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@264 ($generated@@171 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@172) (= (type $generated@@595) $generated@@172)) (= ($generated@@238 ($generated@@260 $generated@@594) ($generated@@260 $generated@@595)) ($generated@@260 ($generated@@238 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@238 ($generated@@260 $generated@@594) ($generated@@260 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@258 $generated@@596))) ($generated@@260 ($generated@@286 ($generated@@8 $generated@@596))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@258 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@286 ($generated@@260 $generated@@597)) ($generated@@260 ($generated@@286 $generated@@597)))
 :pattern ( ($generated@@286 ($generated@@260 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@279 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@278 $generated@@599)) (= ($generated@@277 $generated@@598) 0)) (= $generated@@598 ($generated@@276 $generated@@599))))
 :pattern ( ($generated@@277 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@79 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@299 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@299 $generated@@600) ($generated ($generated@@84 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@299 ($generated@@85 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@605) $generated@@2)) ($generated@@77 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@77 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@607) $generated@@3)) ($generated@@77 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@77 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@609) $generated@@4)) ($generated@@77 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@77 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@611) $generated@@457)) ($generated@@77 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@77 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@613) $generated@@172)) ($generated@@77 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@77 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@278 $generated@@172)) (= (type $generated@@615) $generated@@67)) (= ($generated@@139 $generated@@614 ($generated@@500 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@277 $generated@@614))) ($generated@@239 ($generated@@501 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@501 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@139 $generated@@614 ($generated@@500 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@278 $generated@@172)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@277 $generated@@618))) (< ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@545 ($generated@@386 $generated@@163 ($generated@@501 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@311 $generated@@172 $generated@@172)) (= (type $generated@@621) $generated@@67)) (= (type $generated@@622) $generated@@67)) ($generated@@139 $generated@@620 ($generated@@414 $generated@@621 $generated@@622))) (and (and ($generated@@139 ($generated@@309 $generated@@620) ($generated@@248 $generated@@621)) ($generated@@139 ($generated@@354 $generated@@620) ($generated@@248 $generated@@622))) ($generated@@139 ($generated@@385 $generated@@620) ($generated@@248 ($generated@@162 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@139 $generated@@620 ($generated@@414 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@329 $generated@@172 $generated@@172)) (= (type $generated@@624) $generated@@67)) (= (type $generated@@625) $generated@@67)) ($generated@@139 $generated@@623 ($generated@@422 $generated@@624 $generated@@625))) (and (and ($generated@@139 ($generated@@327 $generated@@623) ($generated@@253 $generated@@624)) ($generated@@139 ($generated@@365 $generated@@623) ($generated@@253 $generated@@625))) ($generated@@139 ($generated@@396 $generated@@623) ($generated@@253 ($generated@@162 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@139 $generated@@623 ($generated@@422 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@139 $generated@@626 $generated@@46))
 :pattern ( ($generated@@139 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@139 $generated@@627 $generated@@47))
 :pattern ( ($generated@@139 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@139 $generated@@628 $generated@@44))
 :pattern ( ($generated@@139 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@457) ($generated@@139 $generated@@629 $generated@@45))
 :pattern ( ($generated@@139 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@172) ($generated@@139 $generated@@630 $generated@@48))
 :pattern ( ($generated@@139 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Int)
(assert  (and (and (and (and (= (type $generated@@631) ($generated@@184 $generated@@80 $generated@@4)) (= (type $generated@@632) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@634) $generated@@80)) (= (type $generated@@635) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@637) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@639  (=> (and (= $generated@@631 ($generated@@183 $generated@@137 $generated@@632 $generated@@60 false)) (= $generated@@633 ($generated@@258 9223372036854775808))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= 0 $generated@@633)) (=> (<= 0 $generated@@633) (=> (and (and (and (not (= $generated@@634 $generated@@137)) (= ($generated@@138 $generated@@634) ($generated@@136 $generated@@46))) (not ($generated@@0 ($generated@@86 ($generated@@84 $generated@@632 $generated@@634) $generated@@60)))) (and (and (= ($generated@@135 $generated@@634) $generated@@633) (= $generated@@635 ($generated@@85 $generated@@632 $generated@@634 ($generated@@87 ($generated@@84 $generated@@632 $generated@@634) $generated@@60 ($generated@@11 true))))) (and ($generated@@151 $generated@@635) ($generated@@636 $generated@@635)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@634 $generated@@137))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@135 $generated@@634) $generated@@633)) (=> (= ($generated@@135 $generated@@634) $generated@@633) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@634 $generated@@137))))))))))))
(let (($generated@@640  (=> (and ($generated@@151 $generated@@632) ($generated@@636 $generated@@632)) (=> (and (and (and ($generated@@139 $generated@@637 ($generated@@156 $generated@@46)) ($generated@@77 $generated@@637 ($generated@@156 $generated@@46) $generated@@632)) true) (and (= 1 $generated@@638) (= (ControlFlow 0 6) 2))) $generated@@639))))
$generated@@640)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
