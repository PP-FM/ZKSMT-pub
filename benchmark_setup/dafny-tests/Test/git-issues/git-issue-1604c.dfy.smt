(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 (Int) Bool)
(declare-fun $generated@@152 (Int) Bool)
(declare-fun $generated@@153 (Int) Int)
(declare-fun $generated@@154 (Int Int) Int)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@155 Int) ) (!  (=> (or ($generated@@152 $generated@@155) (and (not (= 1 $generated@@150)) (<= ($generated@@153 0) $generated@@155))) (= ($generated@@151 $generated@@155) (= ($generated@@154 $generated@@155 ($generated@@153 2)) ($generated@@153 0))))
 :pattern ( ($generated@@151 $generated@@155))
))))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@64)
 :pattern ( ($generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@160) $generated@@64)) ($generated@@132 $generated@@159 ($generated@@156 $generated@@160))) ($generated@@157 $generated@@159))
 :pattern ( ($generated@@132 $generated@@159 ($generated@@156 $generated@@160)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@1 ($generated@@163 $generated@@167 $generated@@168)) 16)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@163 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@165 ($generated@@163 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@163 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (let (($generated@@176 ($generated@@165 (type $generated@@173))))
(= (type ($generated@@161 $generated@@173 $generated@@174 $generated@@175)) $generated@@176))
 :pattern ( ($generated@@161 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 (type $generated@@180)))
(let (($generated@@182 (type $generated@@178)))
(= (type ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) ($generated@@163 $generated@@182 $generated@@181))))
 :pattern ( ($generated@@166 $generated@@177 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@165 (type $generated@@183))))
 (=> (= (type $generated@@186) $generated@@187) (= ($generated@@161 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@184 $generated@@185) $generated@@186)))
 :weight 0
))) (and (and (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@161 ($generated@@166 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@161 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@161 ($generated@@166 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@161 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or true (= ($generated@@161 ($generated@@166 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@161 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 Bool) ) (! (= (type ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@162 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@67 (type $generated@@215))))
 (=> (and (and (and (and (= (type $generated@@210) $generated@@77) (= (type $generated@@211) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@212) ($generated@@66 $generated@@4))) (= (type $generated@@214) $generated@@77)) (= (type $generated@@215) ($generated@@66 $generated@@216))) (= ($generated@@0 ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (not (= $generated@@214 $generated@@210)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@211 $generated@@214) $generated@@212))) $generated@@213))))
 :pattern ( ($generated@@161 ($generated@@162 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@163 $generated@@77 $generated@@4))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@67 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@77) (= (type $generated@@223) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@224) ($generated@@66 $generated@@4))) (= (type $generated@@226) $generated@@77)) (= (type $generated@@227) ($generated@@66 $generated@@228))) (= ($generated@@0 ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@161 ($generated@@217 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@136)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@64) (= (type $generated@@234) $generated@@64)) (= (type $generated@@235) $generated@@145)) (= (type $generated@@236) $generated@@145)) (= ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@132 ($generated@@229 $generated@@235 $generated@@236) ($generated@@135 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@136) (= (type $generated@@238) $generated@@136)) (= ($generated@@142 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@142 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@145) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@64)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@247) $generated@@64)) (= ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@145) ($generated@@0 ($generated@@81 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@81 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@132 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@153 $generated@@249) $generated@@249)
 :pattern ( ($generated@@153 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@254 $generated@@260)) (= ($generated@@74 ($generated@@229 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@74 ($generated@@229 $generated@@258 $generated@@259) ($generated@@135 $generated@@256 $generated@@257) $generated@@260))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@261 Int) ) (!  (=> (or ($generated@@152 ($generated@@153 $generated@@261)) (and (not (= 1 $generated@@150)) (<= ($generated@@153 0) $generated@@261))) (= ($generated@@151 ($generated@@153 $generated@@261)) (= ($generated@@153 ($generated@@154 $generated@@261 ($generated@@153 2))) ($generated@@153 0))))
 :weight 3
 :pattern ( ($generated@@151 ($generated@@153 $generated@@261)))
))))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@136) (= ($generated@@134 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@136) ($generated@@134 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (= $generated@@265 ($generated@@229 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@134 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@145)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@74 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@255 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@76 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@79 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@76 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@81 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@157 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@157 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@132 $generated@@348 ($generated@@156 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@230 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@132 $generated@@348 ($generated@@156 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@239 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@255 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@239 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@244 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@255 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@244 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@282 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@282 $generated@@360) $generated@@359)))
)))
(assert  (=> (<= 1 $generated@@150) (forall (($generated@@361 Int) ) (!  (=> (or ($generated@@152 $generated@@361) (and (not (= 1 $generated@@150)) (<= ($generated@@153 0) $generated@@361))) true)
 :pattern ( ($generated@@151 $generated@@361))
))))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@255 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@255 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@255 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@255 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@76 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@309 (type $generated@@409))))
(let (($generated@@411 ($generated@@308 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@307 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@306 $generated@@411 $generated@@410)) (= ($generated@@305 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@305 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@341 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@341 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@145))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@291 (type $generated@@418))))
(let (($generated@@420 ($generated@@290 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@289 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@288 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@145) (= (type $generated@@422) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@418) ($generated@@276 ($generated@@229 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@362 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@309 (type $generated@@423))))
(let (($generated@@425 ($generated@@308 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@307 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@306 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@145) (= (type $generated@@427) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@423) ($generated@@276 ($generated@@229 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@230 $generated@@428 $generated@@46)) (and (= ($generated@@276 ($generated@@363 $generated@@2 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@363 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@230 $generated@@429 $generated@@47)) (and (= ($generated@@276 ($generated@@363 $generated@@3 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@363 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@230 $generated@@430 $generated@@44)) (and (= ($generated@@276 ($generated@@363 $generated@@4 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@363 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@230 $generated@@432 $generated@@45)) (and (= ($generated@@276 ($generated@@363 $generated@@431 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@363 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@230 ($generated@@276 $generated@@433) $generated@@434) ($generated@@132 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@230 ($generated@@276 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2)) (<= 0 ($generated@@281 $generated@@435))))
 :pattern ( ($generated@@281 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@271 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@270 $generated@@438)) (<= 0 ($generated@@269 $generated@@437))))
 :pattern ( ($generated@@269 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@391 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@391 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@391 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@391 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@399 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@399 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@399 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@262 ($generated@@229 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@135 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@135 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@143 ($generated@@229 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@229 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@144 ($generated@@229 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@229 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@271 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@270 $generated@@145)) (= (type $generated@@480) $generated@@64)) (= (type $generated@@481) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@269 $generated@@479))) ($generated@@255 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@74 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@75 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@75 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@239 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@239 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@244 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@244 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@244 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@156 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@156 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@156 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@156 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@473 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@473 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@473 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@363 $generated@@502 ($generated@@276 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@276 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@132 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@503) $generated@@506))) (and ($generated@@230 ($generated@@81 ($generated@@364 $generated@@503) $generated@@506) $generated@@505) ($generated@@230 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@132 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@507) $generated@@510))) (and ($generated@@230 ($generated@@81 ($generated@@374 $generated@@507) $generated@@510) $generated@@509) ($generated@@230 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@145)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@229 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@229 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@145) (= (type $generated@@516) $generated@@145)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@229 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@229 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@230 $generated@@517 ($generated@@391 $generated@@518 $generated@@519))) (and (= ($generated@@276 ($generated@@363 ($generated@@289 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@363 ($generated@@289 $generated@@145 $generated@@145) $generated@@517) ($generated@@391 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@230 $generated@@517 ($generated@@391 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) ($generated@@230 $generated@@520 ($generated@@399 $generated@@521 $generated@@522))) (and (= ($generated@@276 ($generated@@363 ($generated@@307 $generated@@145 $generated@@145) $generated@@520)) $generated@@520) ($generated@@132 ($generated@@363 ($generated@@307 $generated@@145 $generated@@145) $generated@@520) ($generated@@399 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@230 $generated@@520 ($generated@@399 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@145)) ($generated@@230 $generated@@525 ($generated@@135 $generated@@523 $generated@@524))) (and (= ($generated@@276 ($generated@@363 $generated@@136 $generated@@525)) $generated@@525) ($generated@@132 ($generated@@363 $generated@@136 $generated@@525) ($generated@@135 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@230 $generated@@525 ($generated@@135 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@81 ($generated@@407 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@81 ($generated@@407 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@528 Int) ($generated@@529 Int) ) (! (= ($generated@@154 $generated@@528 $generated@@529) (mod $generated@@528 $generated@@529))
 :pattern ( ($generated@@154 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@64) (= (type $generated@@533) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@532 $generated@@533)) $generated@@62) (= ($generated@@530 ($generated@@135 $generated@@532 $generated@@533)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@136) (= ($generated@@511 ($generated@@276 $generated@@534)) ($generated@@512 $generated@@534)))
 :pattern ( ($generated@@511 ($generated@@276 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) ($generated@@230 $generated@@535 ($generated@@75 0))) (and (= ($generated@@276 ($generated@@363 $generated@@2 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@75 0))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@75 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@145) (= (type $generated@@537) $generated@@64)) ($generated@@230 $generated@@536 ($generated@@239 $generated@@537))) (and (= ($generated@@276 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@536)) $generated@@536) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@536) ($generated@@239 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@239 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@230 $generated@@538 ($generated@@244 $generated@@539))) (and (= ($generated@@276 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@244 $generated@@539))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@244 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@230 $generated@@540 ($generated@@156 $generated@@541))) (and (= ($generated@@276 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@540) ($generated@@156 $generated@@541))))
 :pattern ( ($generated@@230 $generated@@540 ($generated@@156 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@230 $generated@@542 ($generated@@473 $generated@@543))) (and (= ($generated@@276 ($generated@@363 ($generated@@270 $generated@@145) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@363 ($generated@@270 $generated@@145) $generated@@542) ($generated@@473 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@542 ($generated@@473 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@544 ($generated@@156 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@544 $generated@@547)))) ($generated@@255 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@81 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@74 $generated@@544 ($generated@@156 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@136) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@550) (and ($generated@@134 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@64) ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@135 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@255 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@255 ($generated@@143 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@136) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@554) (and ($generated@@134 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@135 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@255 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@255 ($generated@@144 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@145) (= (type $generated@@557) $generated@@145)) (= ($generated@@229 ($generated@@250 $generated@@556) ($generated@@250 $generated@@557)) ($generated@@250 ($generated@@229 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@229 ($generated@@250 $generated@@556) ($generated@@250 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@153 $generated@@558))) ($generated@@250 ($generated@@276 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@153 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@276 ($generated@@250 $generated@@559)) ($generated@@250 ($generated@@276 $generated@@559)))
 :pattern ( ($generated@@276 ($generated@@250 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@76 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@281 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@281 $generated@@562) ($generated ($generated@@81 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@281 ($generated@@82 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@431)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@473 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@230 ($generated@@474 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@474 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@473 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@512 ($generated@@363 $generated@@136 ($generated@@474 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@512 ($generated@@363 $generated@@136 ($generated@@474 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@391 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@287 $generated@@582) ($generated@@239 $generated@@583)) ($generated@@132 ($generated@@330 $generated@@582) ($generated@@239 $generated@@584))) ($generated@@132 ($generated@@362 $generated@@582) ($generated@@239 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@391 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@399 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@305 $generated@@585) ($generated@@244 $generated@@586)) ($generated@@132 ($generated@@341 $generated@@585) ($generated@@244 $generated@@587))) ($generated@@132 ($generated@@373 $generated@@585) ($generated@@244 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@399 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@431) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () Int)
(assert  (and (and (and (= (type $generated@@593) ($generated@@163 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@596) ($generated@@163 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@599  (=> (and (= $generated@@593 ($generated@@217 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@153 2) 0)))))
(let (($generated@@600 true))
(let (($generated@@601  (=> (= $generated@@596 ($generated@@162 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@600) (=> (= (ControlFlow 0 4) 3) $generated@@599)))))
(let (($generated@@602  (=> (and (and (and ($generated@@254 $generated@@595) ($generated@@597 $generated@@595)) (<= ($generated@@153 0) $generated@@598)) (and (= 1 $generated@@150) (= (ControlFlow 0 5) 4))) $generated@@601)))
$generated@@602)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (Int) Bool)
(declare-fun $generated@@76 (Int) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (Int) Bool)
(declare-fun $generated@@163 (Int) Bool)
(declare-fun $generated@@164 (Int) Int)
(declare-fun $generated@@165 (Int Int) Int)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U Int) T@U)
(declare-fun $generated@@483 (T@U) Int)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@78 T@U) ) (! (let (($generated@@79 (type $generated@@78)))
(= (type ($generated@@77 $generated@@78)) $generated@@79))
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@80 Int) ) (!  (=> (or ($generated@@76 $generated@@80) (not (= 0 $generated@@74))) (= ($generated@@75 $generated@@80) ($generated@@0 ($generated@@77 ($generated@@11 true)))))
 :pattern ( ($generated@@75 $generated@@80))
))))
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@67)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@69 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (= (type $generated@@141) $generated@@66))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
 :pattern ( ($generated@@83 $generated@@142 $generated@@141 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@84 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@148) 14) (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@149 $generated@@150)) $generated@@66)
 :pattern ( ($generated@@147 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@66) (= (type $generated@@152) $generated@@66)) (= (type $generated@@153) $generated@@148)) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152))) ($generated@@146 $generated@@153))
 :pattern ( ($generated@@146 $generated@@153) ($generated@@144 $generated@@153 ($generated@@147 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@148) (= (type $generated@@161) $generated@@148)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@166 Int) ) (!  (=> (or ($generated@@163 $generated@@166) (and (not (= 1 $generated@@74)) (<= ($generated@@164 0) $generated@@166))) (= ($generated@@162 $generated@@166) (= ($generated@@165 $generated@@166 ($generated@@164 2)) ($generated@@164 0))))
 :pattern ( ($generated@@162 $generated@@166))
))))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@66)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@85 $generated@@157 $generated@@2)) (= (type $generated@@171) $generated@@66)) ($generated@@144 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@144 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@172 Int) ) (!  (=> (or ($generated@@76 ($generated@@164 $generated@@172)) (not (= 0 $generated@@74))) (= ($generated@@75 ($generated@@164 $generated@@172)) ($generated@@0 ($generated@@77 ($generated@@11 true)))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@164 $generated@@172)))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@86 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@69 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@86) (= (type $generated@@223) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@224) ($generated@@68 $generated@@4))) (= (type $generated@@226) $generated@@86)) (= (type $generated@@227) ($generated@@68 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@148)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@66) (= (type $generated@@234) $generated@@66)) (= (type $generated@@235) $generated@@157)) (= (type $generated@@236) $generated@@157)) (= ($generated@@144 ($generated@@229 $generated@@235 $generated@@236) ($generated@@147 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@144 ($generated@@229 $generated@@235 $generated@@236) ($generated@@147 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@148) (= (type $generated@@238) $generated@@148)) (= ($generated@@154 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@154 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@66)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@85 $generated@@157 $generated@@4)) (= (type $generated@@242) $generated@@66)) (= ($generated@@144 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@157) ($generated@@0 ($generated@@90 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@90 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@144 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@85 $generated@@157 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@157) ($generated@@0 ($generated@@90 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@90 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@164 $generated@@249) $generated@@249)
 :pattern ( ($generated@@164 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@77 $generated@@250) $generated@@250)
 :pattern ( ($generated@@77 $generated@@250))
)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@251 Int) ) (!  (=> (or ($generated@@76 $generated@@251) (not (= 0 $generated@@74))) true)
 :pattern ( ($generated@@75 $generated@@251))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@66) (= (type $generated@@255) $generated@@66)) (= (type $generated@@256) $generated@@157)) (= (type $generated@@257) $generated@@157)) (= (type $generated@@258) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@252 $generated@@258)) (= ($generated@@83 ($generated@@229 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@83 ($generated@@229 $generated@@256 $generated@@257) ($generated@@147 $generated@@254 $generated@@255) $generated@@258))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@259 Int) ) (!  (=> (or ($generated@@163 ($generated@@164 $generated@@259)) (and (not (= 1 $generated@@74)) (<= ($generated@@164 0) $generated@@259))) (= ($generated@@162 ($generated@@164 $generated@@259)) (= ($generated@@164 ($generated@@165 $generated@@259 ($generated@@164 2))) ($generated@@164 0))))
 :weight 3
 :pattern ( ($generated@@162 ($generated@@164 $generated@@259)))
))))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@70)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@148) (= ($generated@@146 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@62)))
 :pattern ( ($generated@@146 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@148) ($generated@@146 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@157) (= (type $generated@@265) $generated@@157)) (= $generated@@263 ($generated@@229 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@146 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@2) (= ($generated@@144 $generated@@274 $generated@@141) (<= ($generated@@164 0) ($generated $generated@@274))))
 :pattern ( ($generated@@144 $generated@@274 $generated@@141))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@157)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@66) (= (type $generated@@279) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@253 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@83 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@253 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@85 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@88 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@85 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@90 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@85 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@90 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@90 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@85 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@90 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@90 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@88 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@85 $generated@@323 $generated@@2)) (= ($generated@@168 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@90 $generated@@322 $generated@@324))) (<= ($generated ($generated@@90 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@90 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@168 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@157) ($generated@@230 $generated@@328 $generated@@141)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@328)) $generated@@328) ($generated@@144 ($generated@@325 $generated@@2 $generated@@328) $generated@@141)))
 :pattern ( ($generated@@230 $generated@@328 $generated@@141))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@90 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@85 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@90 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@90 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@85 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@90 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@85 $generated@@157 $generated@@2)) (= (type $generated@@352) $generated@@66)) (= ($generated@@144 $generated@@351 ($generated@@167 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@157) (< 0 ($generated ($generated@@90 $generated@@351 $generated@@353)))) ($generated@@230 $generated@@353 $generated@@352))
 :pattern ( ($generated@@90 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@144 $generated@@351 ($generated@@167 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@85 $generated@@157 $generated@@4)) (= (type $generated@@355) $generated@@66)) (= (type $generated@@356) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@354 ($generated@@239 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@157) ($generated@@0 ($generated@@90 $generated@@354 $generated@@357))) ($generated@@253 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@90 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@83 $generated@@354 ($generated@@239 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@85 $generated@@157 $generated@@4)) (= (type $generated@@359) $generated@@66)) (= (type $generated@@360) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@358 ($generated@@244 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@157) ($generated@@0 ($generated@@90 $generated@@358 $generated@@361))) ($generated@@253 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@90 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@83 $generated@@358 ($generated@@244 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@90 ($generated@@281 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@90 ($generated@@281 $generated@@363) $generated@@362)))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@364 Int) ) (!  (=> (or ($generated@@163 $generated@@364) (and (not (= 1 $generated@@74)) (<= ($generated@@164 0) $generated@@364))) true)
 :pattern ( ($generated@@162 $generated@@364))
))))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@85 $generated@@157 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@290 (type $generated@@368))))
(let (($generated@@370 ($generated@@289 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@85 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@288 $generated@@157 $generated@@157)) (= (type $generated@@372) $generated@@157)) (= ($generated@@0 ($generated@@90 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@90 ($generated@@286 $generated@@371) ($generated@@155 ($generated@@325 $generated@@148 $generated@@372)))) (= ($generated@@90 ($generated@@366 $generated@@371) ($generated@@155 ($generated@@325 $generated@@148 $generated@@372))) ($generated@@156 ($generated@@325 $generated@@148 $generated@@372))))))
 :pattern ( ($generated@@90 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@85 $generated@@157 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@308 (type $generated@@376))))
(let (($generated@@378 ($generated@@307 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@85 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@306 $generated@@157 $generated@@157)) (= (type $generated@@380) $generated@@157)) (= ($generated@@0 ($generated@@90 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@90 ($generated@@304 $generated@@379) ($generated@@155 ($generated@@325 $generated@@148 $generated@@380)))) (= ($generated@@90 ($generated@@374 $generated@@379) ($generated@@155 ($generated@@325 $generated@@148 $generated@@380))) ($generated@@156 ($generated@@325 $generated@@148 $generated@@380))))))
 :pattern ( ($generated@@90 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@289 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@288 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@90 ($generated@@333 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@90 ($generated@@286 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@90 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@90 ($generated@@286 $generated@@381) $generated@@385))
 :pattern ( ($generated@@90 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@90 ($generated@@333 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@307 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@306 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@90 ($generated@@344 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@90 ($generated@@304 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@90 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@90 ($generated@@304 $generated@@386) $generated@@390))
 :pattern ( ($generated@@90 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@90 ($generated@@344 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@288 $generated@@157 $generated@@157)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@157) ($generated@@0 ($generated@@90 ($generated@@286 $generated@@394) $generated@@398))) (and ($generated@@253 ($generated@@90 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@253 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@90 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@90 ($generated@@286 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@83 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@306 $generated@@157 $generated@@157)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@157) ($generated@@0 ($generated@@90 ($generated@@304 $generated@@402) $generated@@406))) (and ($generated@@253 ($generated@@90 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@253 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@90 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@90 ($generated@@304 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@83 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@85 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@308 (type $generated@@409))))
(let (($generated@@411 ($generated@@307 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@306 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@305 $generated@@411 $generated@@410)) (= ($generated@@304 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@304 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@308 (type $generated@@412))))
(let (($generated@@414 ($generated@@307 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@306 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@305 $generated@@414 $generated@@413)) (= ($generated@@344 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@344 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@308 (type $generated@@415))))
(let (($generated@@417 ($generated@@307 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@306 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@305 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@157))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@290 (type $generated@@418))))
(let (($generated@@420 ($generated@@289 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@288 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@287 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@157) (= (type $generated@@422) $generated@@157)) ($generated@@0 ($generated@@90 ($generated@@365 $generated@@418) ($generated@@275 ($generated@@229 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@365 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@308 (type $generated@@423))))
(let (($generated@@425 ($generated@@307 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@306 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@305 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@157) (= (type $generated@@427) $generated@@157)) ($generated@@0 ($generated@@90 ($generated@@373 $generated@@423) ($generated@@275 ($generated@@229 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@157) ($generated@@230 $generated@@428 $generated@@46)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@428)) $generated@@428) ($generated@@144 ($generated@@325 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@157) ($generated@@230 $generated@@429 $generated@@47)) (and (= ($generated@@275 ($generated@@325 $generated@@3 $generated@@429)) $generated@@429) ($generated@@144 ($generated@@325 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@157) ($generated@@230 $generated@@430 $generated@@44)) (and (= ($generated@@275 ($generated@@325 $generated@@4 $generated@@430)) $generated@@430) ($generated@@144 ($generated@@325 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@157) ($generated@@230 $generated@@432 $generated@@45)) (and (= ($generated@@275 ($generated@@325 $generated@@431 $generated@@432)) $generated@@432) ($generated@@144 ($generated@@325 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@66) (= ($generated@@230 ($generated@@275 $generated@@433) $generated@@434) ($generated@@144 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@230 ($generated@@275 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@88 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@85 $generated@@436 $generated@@2)) (<= 0 ($generated@@280 $generated@@435))))
 :pattern ( ($generated@@280 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@269 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@268 $generated@@438)) (<= 0 ($generated@@267 $generated@@437))))
 :pattern ( ($generated@@267 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@66) (= (type $generated@@442) $generated@@66)) (= ($generated@@439 ($generated@@391 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@391 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@66)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@443 ($generated@@391 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@391 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@81 ($generated@@391 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@399 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@399 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@399 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@81 ($generated@@399 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@157) (= (type $generated@@460) $generated@@157)) (= ($generated@@260 ($generated@@229 $generated@@459 $generated@@460)) $generated@@62))
 :pattern ( ($generated@@229 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@66)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@461 ($generated@@147 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@147 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@147 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@147 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@157) (= (type $generated@@470) $generated@@157)) (= ($generated@@155 ($generated@@229 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@229 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@157) (= (type $generated@@472) $generated@@157)) (= ($generated@@156 ($generated@@229 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@229 $generated@@471 $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ($generated@@477 Int) ) (! (let (($generated@@478 ($generated@@269 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476 $generated@@477)) $generated@@478))
 :pattern ( ($generated@@474 $generated@@476 $generated@@477))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@479) ($generated@@268 $generated@@157)) (= (type $generated@@480) $generated@@66)) (= (type $generated@@481) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@479 ($generated@@473 $generated@@480) $generated@@481) (forall (($generated@@482 Int) ) (!  (=> (and (<= 0 $generated@@482) (< $generated@@482 ($generated@@267 $generated@@479))) ($generated@@253 ($generated@@474 $generated@@479 $generated@@482) $generated@@480 $generated@@481))
 :pattern ( ($generated@@474 $generated@@479 $generated@@482))
))))
 :pattern ( ($generated@@83 $generated@@479 ($generated@@473 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 Int) ) (! (= ($generated@@483 ($generated@@84 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@84 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@66) (= ($generated@@485 ($generated@@239 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@239 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@81 ($generated@@239 $generated@@488)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@489 ($generated@@244 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@244 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@66) (= ($generated@@81 ($generated@@244 $generated@@492)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@66)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@493 ($generated@@167 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@167 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@66) (= ($generated@@81 ($generated@@167 $generated@@496)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@497 ($generated@@473 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@473 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@81 ($generated@@473 $generated@@500)) $generated@@57))
 :pattern ( ($generated@@473 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 (type $generated@@501)))
(= ($generated@@325 $generated@@502 ($generated@@275 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@275 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@288 $generated@@157 $generated@@157)) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) $generated@@66)) (= ($generated@@144 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@157) ($generated@@0 ($generated@@90 ($generated@@286 $generated@@503) $generated@@506))) (and ($generated@@230 ($generated@@90 ($generated@@366 $generated@@503) $generated@@506) $generated@@505) ($generated@@230 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@90 ($generated@@366 $generated@@503) $generated@@506))
 :pattern ( ($generated@@90 ($generated@@286 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@144 $generated@@503 ($generated@@391 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@306 $generated@@157 $generated@@157)) (= (type $generated@@508) $generated@@66)) (= (type $generated@@509) $generated@@66)) (= ($generated@@144 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@157) ($generated@@0 ($generated@@90 ($generated@@304 $generated@@507) $generated@@510))) (and ($generated@@230 ($generated@@90 ($generated@@374 $generated@@507) $generated@@510) $generated@@509) ($generated@@230 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@90 ($generated@@374 $generated@@507) $generated@@510))
 :pattern ( ($generated@@90 ($generated@@304 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@144 $generated@@507 ($generated@@399 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@157) (= (type $generated@@514) $generated@@157)) (< ($generated@@511 $generated@@513) ($generated@@512 ($generated@@229 $generated@@513 $generated@@514))))
 :pattern ( ($generated@@229 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@157) (= (type $generated@@516) $generated@@157)) (< ($generated@@511 $generated@@516) ($generated@@512 ($generated@@229 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@229 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@157) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@66)) ($generated@@230 $generated@@517 ($generated@@391 $generated@@518 $generated@@519))) (and (= ($generated@@275 ($generated@@325 ($generated@@288 $generated@@157 $generated@@157) $generated@@517)) $generated@@517) ($generated@@144 ($generated@@325 ($generated@@288 $generated@@157 $generated@@157) $generated@@517) ($generated@@391 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@230 $generated@@517 ($generated@@391 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@157) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@230 $generated@@520 ($generated@@399 $generated@@521 $generated@@522))) (and (= ($generated@@275 ($generated@@325 ($generated@@306 $generated@@157 $generated@@157) $generated@@520)) $generated@@520) ($generated@@144 ($generated@@325 ($generated@@306 $generated@@157 $generated@@157) $generated@@520) ($generated@@399 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@230 $generated@@520 ($generated@@399 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@157)) ($generated@@230 $generated@@525 ($generated@@147 $generated@@523 $generated@@524))) (and (= ($generated@@275 ($generated@@325 $generated@@148 $generated@@525)) $generated@@525) ($generated@@144 ($generated@@325 $generated@@148 $generated@@525) ($generated@@147 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@230 $generated@@525 ($generated@@147 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (not ($generated@@0 ($generated@@90 ($generated@@407 $generated@@527) $generated@@526))))
 :pattern ( (let (($generated@@527 (type $generated@@526)))
($generated@@90 ($generated@@407 $generated@@527) $generated@@526)))
)))
(assert (forall (($generated@@528 Int) ($generated@@529 Int) ) (! (= ($generated@@165 $generated@@528 $generated@@529) (mod $generated@@528 $generated@@529))
 :pattern ( ($generated@@165 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@81 ($generated@@147 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@530 ($generated@@147 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@147 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@148) (= ($generated@@511 ($generated@@275 $generated@@534)) ($generated@@512 $generated@@534)))
 :pattern ( ($generated@@511 ($generated@@275 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@157) ($generated@@230 $generated@@535 ($generated@@84 0))) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@535)) $generated@@535) ($generated@@144 ($generated@@325 ($generated@@85 $generated@@157 $generated@@4) $generated@@535) ($generated@@84 0))))
 :pattern ( ($generated@@230 $generated@@535 ($generated@@84 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@157) (= (type $generated@@537) $generated@@66)) ($generated@@230 $generated@@536 ($generated@@239 $generated@@537))) (and (= ($generated@@275 ($generated@@325 ($generated@@85 $generated@@157 $generated@@4) $generated@@536)) $generated@@536) ($generated@@144 ($generated@@325 ($generated@@85 $generated@@157 $generated@@4) $generated@@536) ($generated@@239 $generated@@537))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@239 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@157) (= (type $generated@@539) $generated@@66)) ($generated@@230 $generated@@538 ($generated@@244 $generated@@539))) (and (= ($generated@@275 ($generated@@325 ($generated@@85 $generated@@157 $generated@@4) $generated@@538)) $generated@@538) ($generated@@144 ($generated@@325 ($generated@@85 $generated@@157 $generated@@4) $generated@@538) ($generated@@244 $generated@@539))))
 :pattern ( ($generated@@230 $generated@@538 ($generated@@244 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@157) (= (type $generated@@541) $generated@@66)) ($generated@@230 $generated@@540 ($generated@@167 $generated@@541))) (and (= ($generated@@275 ($generated@@325 ($generated@@85 $generated@@157 $generated@@2) $generated@@540)) $generated@@540) ($generated@@144 ($generated@@325 ($generated@@85 $generated@@157 $generated@@2) $generated@@540) ($generated@@167 $generated@@541))))
 :pattern ( ($generated@@230 $generated@@540 ($generated@@167 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@157) (= (type $generated@@543) $generated@@66)) ($generated@@230 $generated@@542 ($generated@@473 $generated@@543))) (and (= ($generated@@275 ($generated@@325 ($generated@@268 $generated@@157) $generated@@542)) $generated@@542) ($generated@@144 ($generated@@325 ($generated@@268 $generated@@157) $generated@@542) ($generated@@473 $generated@@543))))
 :pattern ( ($generated@@230 $generated@@542 ($generated@@473 $generated@@543)))
)))
(assert (= ($generated@@81 $generated@@141) $generated@@61))
(assert (= ($generated@@530 $generated@@141) $generated@@64))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@85 $generated@@157 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@544 ($generated@@167 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@157) (< 0 ($generated ($generated@@90 $generated@@544 $generated@@547)))) ($generated@@253 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@90 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@83 $generated@@544 ($generated@@167 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@148) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@252 $generated@@550) (and ($generated@@146 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@83 $generated@@548 ($generated@@147 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@83 $generated@@548 ($generated@@147 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@253 ($generated@@155 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@253 ($generated@@155 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@148) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@252 $generated@@554) (and ($generated@@146 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@83 $generated@@552 ($generated@@147 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@83 $generated@@552 ($generated@@147 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@253 ($generated@@156 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@253 ($generated@@156 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@157) (= (type $generated@@557) $generated@@157)) (= ($generated@@229 ($generated@@77 $generated@@556) ($generated@@77 $generated@@557)) ($generated@@77 ($generated@@229 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@229 ($generated@@77 $generated@@556) ($generated@@77 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@164 $generated@@558))) ($generated@@77 ($generated@@275 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@164 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@275 ($generated@@77 $generated@@559)) ($generated@@77 ($generated@@275 $generated@@559)))
 :pattern ( ($generated@@275 ($generated@@77 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@269 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@268 $generated@@561)) (= ($generated@@267 $generated@@560) 0)) (= $generated@@560 ($generated@@266 $generated@@561))))
 :pattern ( ($generated@@267 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@85 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@280 ($generated@@91 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@280 $generated@@562) ($generated ($generated@@90 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@280 ($generated@@91 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@567) $generated@@2)) ($generated@@83 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@83 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@569) $generated@@3)) ($generated@@83 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@83 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@571) $generated@@4)) ($generated@@83 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@83 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@573) $generated@@431)) ($generated@@83 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@83 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@575) $generated@@157)) ($generated@@83 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@83 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@268 $generated@@157)) (= (type $generated@@577) $generated@@66)) (= ($generated@@144 $generated@@576 ($generated@@473 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@576))) ($generated@@230 ($generated@@474 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@474 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@144 $generated@@576 ($generated@@473 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@268 $generated@@157)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@267 $generated@@580))) (< ($generated@@512 ($generated@@325 $generated@@148 ($generated@@474 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@512 ($generated@@325 $generated@@148 ($generated@@474 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@288 $generated@@157 $generated@@157)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@144 $generated@@582 ($generated@@391 $generated@@583 $generated@@584))) (and (and ($generated@@144 ($generated@@286 $generated@@582) ($generated@@239 $generated@@583)) ($generated@@144 ($generated@@333 $generated@@582) ($generated@@239 $generated@@584))) ($generated@@144 ($generated@@365 $generated@@582) ($generated@@239 ($generated@@147 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@144 $generated@@582 ($generated@@391 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@306 $generated@@157 $generated@@157)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@144 $generated@@585 ($generated@@399 $generated@@586 $generated@@587))) (and (and ($generated@@144 ($generated@@304 $generated@@585) ($generated@@244 $generated@@586)) ($generated@@144 ($generated@@344 $generated@@585) ($generated@@244 $generated@@587))) ($generated@@144 ($generated@@373 $generated@@585) ($generated@@244 ($generated@@147 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@144 $generated@@585 ($generated@@399 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@144 $generated@@588 $generated@@46))
 :pattern ( ($generated@@144 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@144 $generated@@589 $generated@@47))
 :pattern ( ($generated@@144 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@144 $generated@@590 $generated@@44))
 :pattern ( ($generated@@144 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@431) ($generated@@144 $generated@@591 $generated@@45))
 :pattern ( ($generated@@144 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@157) ($generated@@144 $generated@@592 $generated@@48))
 :pattern ( ($generated@@144 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 (T@U) Bool)
(assert  (and (and (= (type $generated@@594) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@601) ($generated@@175 $generated@@86 $generated@@4))) (= (type $generated@@602) $generated@@86)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 52) (let (($generated@@604  (=> (and (forall (($generated@@605 Int) ) (!  (=> (<= ($generated@@164 0) $generated@@605) ($generated@@163 $generated@@605))
 :pattern ( ($generated@@162 $generated@@605))
)) (= (ControlFlow 0 6) (- 0 5))) (forall (($generated@@606 Int) ) (!  (=> (<= ($generated@@164 0) $generated@@606) (=> ($generated@@162 $generated@@606) true))
 :pattern ( ($generated@@162 $generated@@606))
)))))
(let (($generated@@607  (=> (and (not ($generated@@162 $generated@@593)) (= (ControlFlow 0 9) 6)) $generated@@604)))
(let (($generated@@608  (=> (and ($generated@@162 $generated@@593) (= (ControlFlow 0 8) 6)) $generated@@604)))
(let (($generated@@609  (=> (<= ($generated@@164 0) $generated@@593) (=> (and ($generated@@83 ($generated@@8 $generated@@593) $generated@@141 $generated@@594) ($generated@@163 $generated@@593)) (and (=> (= (ControlFlow 0 10) 8) $generated@@608) (=> (= (ControlFlow 0 10) 9) $generated@@607))))))
(let (($generated@@610  (=> (and (< $generated@@593 ($generated@@164 0)) (= (ControlFlow 0 7) 6)) $generated@@604)))
(let (($generated@@611  (=> (forall (($generated@@612 Int) ) (!  (=> (<= ($generated@@164 0) $generated@@612) ($generated@@163 $generated@@612))
 :pattern ( ($generated@@162 $generated@@612))
)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (forall (($generated@@613 Int) ) (!  (=> (and (<= ($generated@@164 0) $generated@@613) ($generated@@162 $generated@@613)) (= $generated@@613 $generated@@613))
 :pattern ( ($generated@@162 $generated@@613))
))) (=> (forall (($generated@@614 Int) ) (!  (=> (and (<= ($generated@@164 0) $generated@@614) ($generated@@162 $generated@@614)) (= $generated@@614 $generated@@614))
 :pattern ( ($generated@@162 $generated@@614))
)) (and (=> (= (ControlFlow 0 11) 10) $generated@@609) (=> (= (ControlFlow 0 11) 7) $generated@@610)))))))
(let (($generated@@615  (=> (and (not ($generated@@162 $generated@@595)) (= (ControlFlow 0 15) 11)) $generated@@611)))
(let (($generated@@616  (=> (and ($generated@@162 $generated@@595) (= (ControlFlow 0 14) 11)) $generated@@611)))
(let (($generated@@617  (=> (<= ($generated@@164 0) $generated@@595) (=> (and ($generated@@83 ($generated@@8 $generated@@595) $generated@@141 $generated@@594) ($generated@@163 $generated@@595)) (and (=> (= (ControlFlow 0 16) 14) $generated@@616) (=> (= (ControlFlow 0 16) 15) $generated@@615))))))
(let (($generated@@618  (=> (and (< $generated@@595 ($generated@@164 0)) (= (ControlFlow 0 13) 11)) $generated@@611)))
(let (($generated@@619  (=> (forall (($generated@@620 Int) ) (!  (and ($generated@@163 $generated@@620) (=> ($generated@@162 $generated@@620) ($generated@@76 $generated@@620)))
 :pattern ( ($generated@@75 $generated@@620))
 :pattern ( ($generated@@162 $generated@@620))
)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (forall (($generated@@621 Int) ) (!  (=> true (=> ($generated@@162 $generated@@621) ($generated@@75 $generated@@621)))
 :pattern ( ($generated@@75 $generated@@621))
 :pattern ( ($generated@@162 $generated@@621))
))) (=> (forall (($generated@@622 Int) ) (!  (=> true (=> ($generated@@162 $generated@@622) ($generated@@75 $generated@@622)))
 :pattern ( ($generated@@75 $generated@@622))
 :pattern ( ($generated@@162 $generated@@622))
)) (and (=> (= (ControlFlow 0 17) 16) $generated@@617) (=> (= (ControlFlow 0 17) 13) $generated@@618)))))))
(let (($generated@@623  (=> (and (not ($generated@@162 $generated@@596)) (= (ControlFlow 0 20) 17)) $generated@@619)))
(let (($generated@@624  (=> (and (and ($generated@@162 $generated@@596) ($generated@@83 ($generated@@8 $generated@@596) $generated@@46 $generated@@594)) (and ($generated@@76 $generated@@596) (= (ControlFlow 0 19) 17))) $generated@@619)))
(let (($generated@@625  (and (=> (= (ControlFlow 0 21) (- 0 22)) ($generated@@144 ($generated@@8 $generated@@596) $generated@@141)) (=> ($generated@@144 ($generated@@8 $generated@@596) $generated@@141) (=> (and ($generated@@83 ($generated@@8 $generated@@596) $generated@@141 $generated@@594) ($generated@@163 $generated@@596)) (and (=> (= (ControlFlow 0 21) 19) $generated@@624) (=> (= (ControlFlow 0 21) 20) $generated@@623)))))))
(let (($generated@@626 true))
(let (($generated@@627  (=> (forall (($generated@@628 Int) ) (!  (and ($generated@@163 $generated@@628) (=> ($generated@@162 $generated@@628) (=> (<= ($generated@@164 0) $generated@@628) ($generated@@76 $generated@@628))))
 :pattern ( ($generated@@75 $generated@@628))
 :pattern ( ($generated@@162 $generated@@628))
)) (and (=> (= (ControlFlow 0 23) (- 0 24)) (forall (($generated@@629 Int) ) (!  (=> true (=> (and ($generated@@162 $generated@@629) (<= ($generated@@164 0) $generated@@629)) ($generated@@75 $generated@@629)))
 :pattern ( ($generated@@75 $generated@@629))
 :pattern ( ($generated@@162 $generated@@629))
))) (=> (forall (($generated@@630 Int) ) (!  (=> true (=> (and ($generated@@162 $generated@@630) (<= ($generated@@164 0) $generated@@630)) ($generated@@75 $generated@@630)))
 :pattern ( ($generated@@75 $generated@@630))
 :pattern ( ($generated@@162 $generated@@630))
)) (and (=> (= (ControlFlow 0 23) 21) $generated@@625) (=> (= (ControlFlow 0 23) 4) $generated@@626)))))))
(let (($generated@@631  (=> (and (not (and ($generated@@162 $generated@@597) (<= ($generated@@164 0) $generated@@597))) (= (ControlFlow 0 26) 23)) $generated@@627)))
(let (($generated@@632  (=> (and (and (and ($generated@@162 $generated@@597) (<= ($generated@@164 0) $generated@@597)) ($generated@@83 ($generated@@8 $generated@@597) $generated@@46 $generated@@594)) (and ($generated@@76 $generated@@597) (= (ControlFlow 0 25) 23))) $generated@@627)))
(let (($generated@@633  (=> (not ($generated@@162 $generated@@597)) (and (=> (= (ControlFlow 0 28) 25) $generated@@632) (=> (= (ControlFlow 0 28) 26) $generated@@631)))))
(let (($generated@@634  (=> ($generated@@162 $generated@@597) (and (=> (= (ControlFlow 0 27) 25) $generated@@632) (=> (= (ControlFlow 0 27) 26) $generated@@631)))))
(let (($generated@@635  (and (=> (= (ControlFlow 0 29) (- 0 30)) ($generated@@144 ($generated@@8 $generated@@597) $generated@@141)) (=> ($generated@@144 ($generated@@8 $generated@@597) $generated@@141) (=> (and ($generated@@83 ($generated@@8 $generated@@597) $generated@@141 $generated@@594) ($generated@@163 $generated@@597)) (and (=> (= (ControlFlow 0 29) 27) $generated@@634) (=> (= (ControlFlow 0 29) 28) $generated@@633)))))))
(let (($generated@@636 true))
(let (($generated@@637  (=> (forall (($generated@@638 Int) ) (!  (=> (<= ($generated@@164 0) $generated@@638) (and ($generated@@163 $generated@@638) (=> ($generated@@162 $generated@@638) ($generated@@76 $generated@@638))))
 :pattern ( ($generated@@75 $generated@@638))
 :pattern ( ($generated@@162 $generated@@638))
)) (and (=> (= (ControlFlow 0 31) (- 0 32)) (forall (($generated@@639 Int) ) (!  (=> true (=> (and (<= ($generated@@164 0) $generated@@639) ($generated@@162 $generated@@639)) ($generated@@75 $generated@@639)))
 :pattern ( ($generated@@75 $generated@@639))
 :pattern ( ($generated@@162 $generated@@639))
))) (=> (forall (($generated@@640 Int) ) (!  (=> true (=> (and (<= ($generated@@164 0) $generated@@640) ($generated@@162 $generated@@640)) ($generated@@75 $generated@@640)))
 :pattern ( ($generated@@75 $generated@@640))
 :pattern ( ($generated@@162 $generated@@640))
)) (and (=> (= (ControlFlow 0 31) 29) $generated@@635) (=> (= (ControlFlow 0 31) 3) $generated@@636)))))))
(let (($generated@@641  (=> (and (not (and (<= ($generated@@164 0) $generated@@598) ($generated@@162 $generated@@598))) (= (ControlFlow 0 34) 31)) $generated@@637)))
(let (($generated@@642  (=> (and (and (and (<= ($generated@@164 0) $generated@@598) ($generated@@162 $generated@@598)) ($generated@@83 ($generated@@8 $generated@@598) $generated@@46 $generated@@594)) (and ($generated@@76 $generated@@598) (= (ControlFlow 0 33) 31))) $generated@@637)))
(let (($generated@@643  (=> (< $generated@@598 ($generated@@164 0)) (and (=> (= (ControlFlow 0 37) 33) $generated@@642) (=> (= (ControlFlow 0 37) 34) $generated@@641)))))
(let (($generated@@644  (=> (<= ($generated@@164 0) $generated@@598) (and (=> (= (ControlFlow 0 35) (- 0 36)) ($generated@@144 ($generated@@8 $generated@@598) $generated@@141)) (=> ($generated@@144 ($generated@@8 $generated@@598) $generated@@141) (=> (and ($generated@@83 ($generated@@8 $generated@@598) $generated@@141 $generated@@594) ($generated@@163 $generated@@598)) (and (=> (= (ControlFlow 0 35) 33) $generated@@642) (=> (= (ControlFlow 0 35) 34) $generated@@641))))))))
(let (($generated@@645  (and (=> (= (ControlFlow 0 38) 35) $generated@@644) (=> (= (ControlFlow 0 38) 37) $generated@@643))))
(let (($generated@@646 true))
(let (($generated@@647  (=> (forall (($generated@@648 Int) ) (!  (and ($generated@@163 $generated@@648) (=> ($generated@@162 $generated@@648) ($generated@@76 $generated@@648)))
 :pattern ( ($generated@@75 $generated@@648))
 :pattern ( ($generated@@162 $generated@@648))
)) (and (=> (= (ControlFlow 0 39) (- 0 40)) (forall (($generated@@649 Int) ) (!  (=> true (=> ($generated@@162 $generated@@649) ($generated@@75 $generated@@649)))
 :pattern ( ($generated@@75 $generated@@649))
 :pattern ( ($generated@@162 $generated@@649))
))) (=> (forall (($generated@@650 Int) ) (!  (=> true (=> ($generated@@162 $generated@@650) ($generated@@75 $generated@@650)))
 :pattern ( ($generated@@75 $generated@@650))
 :pattern ( ($generated@@162 $generated@@650))
)) (and (=> (= (ControlFlow 0 39) 38) $generated@@645) (=> (= (ControlFlow 0 39) 2) $generated@@646)))))))
(let (($generated@@651  (=> (and (not ($generated@@162 $generated@@599)) (= (ControlFlow 0 42) 39)) $generated@@647)))
(let (($generated@@652  (=> (and (and ($generated@@162 $generated@@599) ($generated@@83 ($generated@@8 $generated@@599) $generated@@46 $generated@@594)) (and ($generated@@76 $generated@@599) (= (ControlFlow 0 41) 39))) $generated@@647)))
(let (($generated@@653  (and (=> (= (ControlFlow 0 43) (- 0 44)) ($generated@@144 ($generated@@8 $generated@@599) $generated@@141)) (=> ($generated@@144 ($generated@@8 $generated@@599) $generated@@141) (=> (and ($generated@@83 ($generated@@8 $generated@@599) $generated@@141 $generated@@594) ($generated@@163 $generated@@599)) (and (=> (= (ControlFlow 0 43) 41) $generated@@652) (=> (= (ControlFlow 0 43) 42) $generated@@651)))))))
(let (($generated@@654 true))
(let (($generated@@655  (=> (forall (($generated@@656 Int) ) (!  (=> (<= ($generated@@164 0) $generated@@656) (and ($generated@@163 $generated@@656) (=> ($generated@@162 $generated@@656) ($generated@@76 $generated@@656))))
 :pattern ( ($generated@@75 $generated@@656))
 :pattern ( ($generated@@162 $generated@@656))
)) (and (=> (= (ControlFlow 0 45) (- 0 46)) (forall (($generated@@657 Int) ) (!  (=> (<= ($generated@@164 0) $generated@@657) (=> ($generated@@162 $generated@@657) ($generated@@75 $generated@@657)))
 :pattern ( ($generated@@75 $generated@@657))
 :pattern ( ($generated@@162 $generated@@657))
))) (=> (forall (($generated@@658 Int) ) (!  (=> (<= ($generated@@164 0) $generated@@658) (=> ($generated@@162 $generated@@658) ($generated@@75 $generated@@658)))
 :pattern ( ($generated@@75 $generated@@658))
 :pattern ( ($generated@@162 $generated@@658))
)) (and (=> (= (ControlFlow 0 45) 43) $generated@@653) (=> (= (ControlFlow 0 45) 1) $generated@@654)))))))
(let (($generated@@659  (=> (and (not ($generated@@162 $generated@@600)) (= (ControlFlow 0 49) 45)) $generated@@655)))
(let (($generated@@660  (=> (and (and ($generated@@162 $generated@@600) ($generated@@83 ($generated@@8 $generated@@600) $generated@@46 $generated@@594)) (and ($generated@@76 $generated@@600) (= (ControlFlow 0 48) 45))) $generated@@655)))
(let (($generated@@661  (=> (<= ($generated@@164 0) $generated@@600) (=> (and ($generated@@83 ($generated@@8 $generated@@600) $generated@@141 $generated@@594) ($generated@@163 $generated@@600)) (and (=> (= (ControlFlow 0 50) 48) $generated@@660) (=> (= (ControlFlow 0 50) 49) $generated@@659))))))
(let (($generated@@662  (=> (and (< $generated@@600 ($generated@@164 0)) (= (ControlFlow 0 47) 45)) $generated@@655)))
(let (($generated@@663  (=> (= $generated@@601 ($generated@@174 $generated@@602 $generated@@594 $generated@@60 false)) (and (=> (= (ControlFlow 0 51) 50) $generated@@661) (=> (= (ControlFlow 0 51) 47) $generated@@662)))))
(let (($generated@@664  (=> (and (and ($generated@@252 $generated@@594) ($generated@@603 $generated@@594)) (and (= 2 $generated@@74) (= (ControlFlow 0 52) 51))) $generated@@663)))
$generated@@664))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 43) (- 44))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 29) (- 30))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 21) (- 22))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
