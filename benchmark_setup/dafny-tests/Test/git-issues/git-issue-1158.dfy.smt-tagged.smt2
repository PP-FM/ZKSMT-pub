(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@190 (T@U) Bool)
(declare-fun $generated@@194 (T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@196 (T@T T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@293 (T@U) Bool)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U T@U) T@U)
(declare-fun $generated@@539 (T@U T@U) Bool)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@551 (T@U T@U T@U) T@U)
(declare-fun $generated@@572 (T@T) T@U)
(declare-fun $generated@@583 (T@U) T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@637 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@134) 14) (forall (($generated@@139 T@U) ) (! (= (type ($generated@@137 $generated@@139)) $generated@@64)
 :pattern ( ($generated@@137 $generated@@139))
))) (= (type $generated@@138) $generated@@64)))
(assert  (=> (<= 0 $generated@@132) (forall (($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@140) ($generated@@76 $generated@@134 $generated@@4)) (or ($generated@@135 $generated@@140) (and (not (= 0 $generated@@132)) ($generated@@136 $generated@@140 ($generated@@137 $generated@@138))))) true)
 :pattern ( ($generated@@133 $generated@@140))
))))
(assert  (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (= ($generated@@1 ($generated@@143 $generated@@146 $generated@@147)) 15)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@144 ($generated@@143 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@143 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@145 ($generated@@143 $generated@@150 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@143 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@144 (type $generated@@152))))
(= (type ($generated@@141 $generated@@152)) ($generated@@76 $generated@@153 $generated@@4)))
 :pattern ( ($generated@@141 $generated@@152))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@80 (type $generated@@155))))
(let (($generated@@158 ($generated@@79 (type $generated@@154))))
(= (type ($generated@@142 $generated@@154 $generated@@155 $generated@@156)) ($generated@@143 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@154 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@141 ($generated@@142 $generated@@159 $generated@@160 $generated@@161)) $generated@@159))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 ($generated@@145 (type $generated@@165))))
(let (($generated@@167 ($generated@@144 (type $generated@@165))))
(= (type ($generated@@164 $generated@@165)) ($generated@@76 $generated@@167 $generated@@166))))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@80 (type $generated@@169))))
(let (($generated@@172 ($generated@@79 (type $generated@@168))))
 (=> (and (and (= (type $generated@@168) ($generated@@76 $generated@@172 $generated@@4)) (= (type $generated@@169) ($generated@@76 $generated@@172 $generated@@171))) (= (type $generated@@170) $generated@@64)) (= ($generated@@164 ($generated@@142 $generated@@168 $generated@@169 $generated@@170)) $generated@@169))))
 :pattern ( ($generated@@164 ($generated@@142 $generated@@168 $generated@@169 $generated@@170)))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@136 $generated@@173 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@173 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@176) 16) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@177 $generated@@178)) $generated@@64)
 :pattern ( ($generated@@175 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (and (= (type $generated@@179) $generated@@64) (= (type $generated@@180) $generated@@64)) (= (type $generated@@181) $generated@@176)) ($generated@@136 $generated@@181 ($generated@@175 $generated@@179 $generated@@180))) ($generated@@174 $generated@@181))
 :pattern ( ($generated@@174 $generated@@181) ($generated@@136 $generated@@181 ($generated@@175 $generated@@179 $generated@@180)))
)))
(assert  (and (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@134)
 :pattern ( ($generated@@183 $generated@@185))
)) (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@134)
 :pattern ( ($generated@@184 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) $generated@@176) (= (type $generated@@188) $generated@@176)) true) (= ($generated@@182 $generated@@187 $generated@@188)  (and (= ($generated@@183 $generated@@187) ($generated@@183 $generated@@188)) (= ($generated@@184 $generated@@187) ($generated@@184 $generated@@188)))))
 :pattern ( ($generated@@182 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@191 T@U) ) (! (= (type ($generated@@189 $generated@@191)) $generated@@64)
 :pattern ( ($generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and (and (= (type $generated@@192) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@193) $generated@@64)) ($generated@@136 $generated@@192 ($generated@@189 $generated@@193))) ($generated@@190 $generated@@192))
 :pattern ( ($generated@@136 $generated@@192 ($generated@@189 $generated@@193)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (= ($generated@@1 ($generated@@196 $generated@@200 $generated@@201)) 17)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@197 ($generated@@196 $generated@@202 $generated@@203)) $generated@@202)
 :pattern ( ($generated@@196 $generated@@202 $generated@@203))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@198 ($generated@@196 $generated@@204 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@196 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@198 (type $generated@@206))))
(= (type ($generated@@194 $generated@@206 $generated@@207 $generated@@208)) $generated@@209))
 :pattern ( ($generated@@194 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 (type $generated@@213)))
(let (($generated@@215 (type $generated@@211)))
(= (type ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@196 $generated@@215 $generated@@214))))
 :pattern ( ($generated@@199 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@198 (type $generated@@216))))
 (=> (= (type $generated@@219) $generated@@220) (= ($generated@@194 ($generated@@199 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@217 $generated@@218) $generated@@219)))
 :weight 0
))) (and (and (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@194 ($generated@@199 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@194 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@194 ($generated@@199 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@194 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or true (= ($generated@@194 ($generated@@199 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@194 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@196 $generated@@77 $generated@@4))
 :pattern ( ($generated@@195 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@67 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@77) (= (type $generated@@244) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@245) ($generated@@66 $generated@@4))) (= (type $generated@@247) $generated@@77)) (= (type $generated@@248) ($generated@@66 $generated@@249))) (= ($generated@@0 ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@194 ($generated@@195 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@176)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@134)) (= (type $generated@@257) $generated@@134)) (= ($generated@@136 ($generated@@250 $generated@@256 $generated@@257) ($generated@@175 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@136 ($generated@@250 $generated@@256 $generated@@257) ($generated@@175 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@176) (= (type $generated@@259) $generated@@176)) (= ($generated@@182 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@182 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@261) $generated@@64)) (= ($generated@@136 $generated@@260 ($generated@@137 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@134) ($generated@@0 ($generated@@81 $generated@@260 $generated@@262))) ($generated@@251 $generated@@262 $generated@@261))
 :pattern ( ($generated@@81 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@136 $generated@@260 ($generated@@137 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@64)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@266) $generated@@64)) (= ($generated@@136 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@134) ($generated@@0 ($generated@@81 $generated@@265 $generated@@267))) ($generated@@251 $generated@@267 $generated@@266))
 :pattern ( ($generated@@81 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@136 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@64) (= (type $generated@@275) $generated@@64)) (= (type $generated@@276) $generated@@134)) (= (type $generated@@277) $generated@@134)) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@272 $generated@@278)) (= ($generated@@74 ($generated@@250 $generated@@276 $generated@@277) ($generated@@175 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@74 ($generated@@250 $generated@@276 $generated@@277) ($generated@@175 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@68)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@176) (= ($generated@@174 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@176) ($generated@@174 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@134) (= (type $generated@@284) $generated@@134)) (= $generated@@282 ($generated@@250 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@174 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 18)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert ($generated@@293 $generated@@138))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@134)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@273 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@74 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@273 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@76 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@79 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@76 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@81 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@305 $generated@@306 $generated@@307)) ($generated@@143 $generated@@306 $generated@@307))
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@141 ($generated@@305 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@141 ($generated@@305 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@79 (type $generated@@330))))
 (=> (and (= (type $generated@@330) ($generated@@76 $generated@@332 $generated@@4)) (= (type $generated@@331) ($generated@@76 $generated@@332 $generated@@4))) (= ($generated@@329 $generated@@330 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (= ($generated@@0 ($generated@@81 $generated@@330 $generated@@333)) ($generated@@0 ($generated@@81 $generated@@331 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@333))
 :pattern ( ($generated@@81 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@79 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@76 $generated@@335 $generated@@2)) (= ($generated@@190 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@81 $generated@@334 $generated@@336))) (<= ($generated ($generated@@81 $generated@@334 $generated@@336)) ($generated@@299 $generated@@334))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@190 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@145 (type $generated@@337))))
(let (($generated@@339 ($generated@@144 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@143 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@305 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@141 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@145 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@145 (type $generated@@344))))
(let (($generated@@346 ($generated@@144 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@143 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@305 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@315 (type $generated@@348))))
(let (($generated@@350 ($generated@@314 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@313 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@312 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@311 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@315 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@315 (type $generated@@355))))
(let (($generated@@357 ($generated@@314 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@313 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@312 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@360) $generated@@64)) (= ($generated@@136 $generated@@359 ($generated@@189 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@359 $generated@@361)))) ($generated@@251 $generated@@361 $generated@@360))
 :pattern ( ($generated@@81 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@136 $generated@@359 ($generated@@189 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@137 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@134) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@273 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@137 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@263 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@134) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@273 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@263 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@81 ($generated@@300 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@81 ($generated@@300 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@T) ($generated@@376 T@U) ) (! (= (type ($generated@@373 $generated@@375 $generated@@376)) $generated@@375)
 :pattern ( ($generated@@373 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@143 $generated@@134 $generated@@134)) (= (type $generated@@378) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@141 $generated@@377) ($generated@@183 ($generated@@373 $generated@@176 $generated@@378)))) (= ($generated@@81 ($generated@@164 $generated@@377) ($generated@@183 ($generated@@373 $generated@@176 $generated@@378))) ($generated@@184 ($generated@@373 $generated@@176 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@315 (type $generated@@382))))
(let (($generated@@384 ($generated@@314 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@313 $generated@@134 $generated@@134)) (= (type $generated@@386) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@385) ($generated@@183 ($generated@@373 $generated@@176 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@183 ($generated@@373 $generated@@176 $generated@@386))) ($generated@@184 ($generated@@373 $generated@@176 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@144 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@143 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@141 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@164 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@141 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@314 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@313 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@143 $generated@@134 $generated@@134)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@400) $generated@@404))) (and ($generated@@273 ($generated@@81 ($generated@@164 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@273 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@141 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@313 $generated@@134 $generated@@134)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@408) $generated@@412))) (and ($generated@@273 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@273 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@79 (type $generated@@413))))
 (=> (and (and (= (type $generated@@413) ($generated@@76 $generated@@415 $generated@@4)) (= (type $generated@@414) ($generated@@76 $generated@@415 $generated@@4))) ($generated@@329 $generated@@413 $generated@@414)) (= $generated@@413 $generated@@414)))
 :pattern ( ($generated@@329 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(= (type ($generated@@416 $generated@@417 $generated@@418)) ($generated@@76 $generated@@419 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@421)))
 (=> (and (and (= (type $generated@@420) ($generated@@76 $generated@@423 $generated@@4)) (= (type $generated@@422) $generated@@423)) ($generated@@0 ($generated@@81 $generated@@420 $generated@@422))) ($generated@@0 ($generated@@81 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))))
 :pattern ( ($generated@@416 $generated@@420 $generated@@421) ($generated@@81 $generated@@420 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@425)))
 (=> (and (= (type $generated@@424) ($generated@@76 $generated@@427 $generated@@4)) (= (type $generated@@426) $generated@@427)) (= ($generated@@0 ($generated@@81 ($generated@@416 $generated@@424 $generated@@425) $generated@@426))  (or (= $generated@@426 $generated@@425) ($generated@@0 ($generated@@81 $generated@@424 $generated@@426))))))
 :pattern ( ($generated@@81 ($generated@@416 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@76 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@315 (type $generated@@430))))
(let (($generated@@432 ($generated@@314 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@313 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@312 $generated@@432 $generated@@431)) (= ($generated@@311 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@311 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@315 (type $generated@@433))))
(let (($generated@@435 ($generated@@314 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@313 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@312 $generated@@435 $generated@@434)) (= ($generated@@352 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@352 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@315 (type $generated@@436))))
(let (($generated@@438 ($generated@@314 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@313 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@312 $generated@@438 $generated@@437)) (= ($generated@@379 $generated@@436) ($generated@@428 $generated@@134))))))
 :pattern ( ($generated@@379 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@145 (type $generated@@439))))
(let (($generated@@441 ($generated@@144 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@143 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@305 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@134) (= (type $generated@@443) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@439) ($generated@@294 ($generated@@250 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@372 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@315 (type $generated@@444))))
(let (($generated@@446 ($generated@@314 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@313 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@312 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@134) (= (type $generated@@448) $generated@@134)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@444) ($generated@@294 ($generated@@250 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@379 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@134) ($generated@@251 $generated@@449 $generated@@46)) (and (= ($generated@@294 ($generated@@373 $generated@@2 $generated@@449)) $generated@@449) ($generated@@136 ($generated@@373 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@134) ($generated@@251 $generated@@450 $generated@@47)) (and (= ($generated@@294 ($generated@@373 $generated@@3 $generated@@450)) $generated@@450) ($generated@@136 ($generated@@373 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@134) ($generated@@251 $generated@@451 $generated@@44)) (and (= ($generated@@294 ($generated@@373 $generated@@4 $generated@@451)) $generated@@451) ($generated@@136 ($generated@@373 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@134) ($generated@@251 $generated@@453 $generated@@45)) (and (= ($generated@@294 ($generated@@373 $generated@@452 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@373 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@64) (= ($generated@@251 ($generated@@294 $generated@@454) $generated@@455) ($generated@@136 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@251 ($generated@@294 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@79 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@76 $generated@@457 $generated@@2)) (<= 0 ($generated@@299 $generated@@456))))
 :pattern ( ($generated@@299 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@288 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@287 $generated@@459)) (<= 0 ($generated@@286 $generated@@458))))
 :pattern ( ($generated@@286 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) ($generated@@293 $generated@@460)) (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@461) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@462) $generated@@134)) ($generated@@251 $generated@@462 $generated@@460)) ($generated@@273 $generated@@462 $generated@@460 $generated@@461))
 :pattern ( ($generated@@273 $generated@@462 $generated@@460 $generated@@461))
)))
 :pattern ( ($generated@@293 $generated@@460))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@397 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@397 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@397 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@397 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@405 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@405 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@405 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@405 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@134) (= (type $generated@@484) $generated@@134)) (= ($generated@@279 ($generated@@250 $generated@@483 $generated@@484)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@175 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@175 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@175 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@175 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@134) (= (type $generated@@494) $generated@@134)) (= ($generated@@183 ($generated@@250 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@250 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@134) (= (type $generated@@496) $generated@@134)) (= ($generated@@184 ($generated@@250 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@250 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@288 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@287 $generated@@134)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@286 $generated@@503))) ($generated@@273 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@74 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
 (=> (= (type $generated@@507) ($generated@@76 $generated@@509 $generated@@4)) ($generated@@0 ($generated@@81 ($generated@@416 $generated@@507 $generated@@508) $generated@@508))))
 :pattern ( ($generated@@416 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@75 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@75 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@137 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@137 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@137 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@137 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@263 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@263 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@263 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@189 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@189 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@189 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@189 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@524 ($generated@@497 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@497 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@72 ($generated@@497 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@373 $generated@@529 ($generated@@294 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@294 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@143 $generated@@134 $generated@@134)) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) (= ($generated@@136 $generated@@530 ($generated@@397 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@530) $generated@@533))) (and ($generated@@251 ($generated@@81 ($generated@@164 $generated@@530) $generated@@533) $generated@@532) ($generated@@251 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@81 ($generated@@164 $generated@@530) $generated@@533))
 :pattern ( ($generated@@81 ($generated@@141 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@136 $generated@@530 ($generated@@397 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@313 $generated@@134 $generated@@134)) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) (= ($generated@@136 $generated@@534 ($generated@@405 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@134) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@534) $generated@@537))) (and ($generated@@251 ($generated@@81 ($generated@@380 $generated@@534) $generated@@537) $generated@@536) ($generated@@251 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@534) $generated@@537))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@136 $generated@@534 ($generated@@405 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (! (= (type ($generated@@538 $generated@@540 $generated@@541)) ($generated@@76 $generated@@134 $generated@@4))
 :pattern ( ($generated@@538 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@544) $generated@@134)) (= ($generated@@0 ($generated@@81 ($generated@@538 $generated@@542 $generated@@543) $generated@@544))  (and ($generated@@251 $generated@@544 $generated@@542) ($generated@@539 ($generated@@373 ($generated@@76 $generated@@134 $generated@@4) $generated@@544) $generated@@543))))
 :pattern ( ($generated@@81 ($generated@@538 $generated@@542 $generated@@543) $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@134) (= (type $generated@@548) $generated@@134)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@250 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@250 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@134) (= (type $generated@@550) $generated@@134)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@250 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@250 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(let (($generated@@556 (type $generated@@553)))
(= (type ($generated@@551 $generated@@552 $generated@@553 $generated@@554)) ($generated@@143 $generated@@556 $generated@@555))))
 :pattern ( ($generated@@551 $generated@@552 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(let (($generated@@562 (type $generated@@558)))
 (=> (and (= (type $generated@@557) ($generated@@143 $generated@@562 $generated@@561)) (= (type $generated@@559) $generated@@562)) (and (=> (= $generated@@559 $generated@@558) (and ($generated@@0 ($generated@@81 ($generated@@141 ($generated@@551 $generated@@557 $generated@@558 $generated@@560)) $generated@@559)) (= ($generated@@81 ($generated@@164 ($generated@@551 $generated@@557 $generated@@558 $generated@@560)) $generated@@559) $generated@@560))) (=> (not (= $generated@@559 $generated@@558)) (and (= ($generated@@0 ($generated@@81 ($generated@@141 ($generated@@551 $generated@@557 $generated@@558 $generated@@560)) $generated@@559)) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@557) $generated@@559))) (= ($generated@@81 ($generated@@164 ($generated@@551 $generated@@557 $generated@@558 $generated@@560)) $generated@@559) ($generated@@81 ($generated@@164 $generated@@557) $generated@@559))))))))
 :pattern ( ($generated@@81 ($generated@@141 ($generated@@551 $generated@@557 $generated@@558 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@81 ($generated@@164 ($generated@@551 $generated@@557 $generated@@558 $generated@@560)) $generated@@559))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@134) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@251 $generated@@563 ($generated@@397 $generated@@564 $generated@@565))) (and (= ($generated@@294 ($generated@@373 ($generated@@143 $generated@@134 $generated@@134) $generated@@563)) $generated@@563) ($generated@@136 ($generated@@373 ($generated@@143 $generated@@134 $generated@@134) $generated@@563) ($generated@@397 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@251 $generated@@563 ($generated@@397 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@134) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@251 $generated@@566 ($generated@@405 $generated@@567 $generated@@568))) (and (= ($generated@@294 ($generated@@373 ($generated@@313 $generated@@134 $generated@@134) $generated@@566)) $generated@@566) ($generated@@136 ($generated@@373 ($generated@@313 $generated@@134 $generated@@134) $generated@@566) ($generated@@405 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@251 $generated@@566 ($generated@@405 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@64) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) $generated@@134)) ($generated@@251 $generated@@571 ($generated@@175 $generated@@569 $generated@@570))) (and (= ($generated@@294 ($generated@@373 $generated@@176 $generated@@571)) $generated@@571) ($generated@@136 ($generated@@373 $generated@@176 $generated@@571) ($generated@@175 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@251 $generated@@571 ($generated@@175 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@573 T@T) ) (! (= (type ($generated@@572 $generated@@573)) ($generated@@76 $generated@@573 $generated@@4))
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@81 ($generated@@572 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@81 ($generated@@572 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@81 ($generated@@428 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@81 ($generated@@428 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@578) ($generated@@76 $generated@@134 $generated@@4)) (= (type $generated@@579) ($generated@@76 $generated@@134 $generated@@134))) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@134) ($generated@@0 ($generated@@81 $generated@@578 $generated@@582))) (and ($generated@@251 $generated@@582 $generated@@580) ($generated@@251 ($generated@@81 $generated@@579 $generated@@582) $generated@@581)))
 :no-pattern (type $generated@@582)
 :no-pattern ($generated $generated@@582)
 :no-pattern ($generated@@0 $generated@@582)
))) ($generated@@136 ($generated@@142 $generated@@578 $generated@@579 ($generated@@397 $generated@@580 $generated@@581)) ($generated@@397 $generated@@580 $generated@@581)))
 :pattern ( ($generated@@142 $generated@@578 $generated@@579 ($generated@@397 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@584 T@U) ) (! (= (type ($generated@@583 $generated@@584)) $generated@@69)
 :pattern ( ($generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@64) (= (type $generated@@586) $generated@@64)) (and (= ($generated@@72 ($generated@@175 $generated@@585 $generated@@586)) $generated@@62) (= ($generated@@583 ($generated@@175 $generated@@585 $generated@@586)) $generated@@63)))
 :pattern ( ($generated@@175 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@176) (= ($generated@@545 ($generated@@294 $generated@@587)) ($generated@@546 $generated@@587)))
 :pattern ( ($generated@@545 ($generated@@294 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@134) ($generated@@251 $generated@@588 ($generated@@75 0))) (and (= ($generated@@294 ($generated@@373 $generated@@2 $generated@@588)) $generated@@588) ($generated@@136 ($generated@@373 ($generated@@76 $generated@@134 $generated@@4) $generated@@588) ($generated@@75 0))))
 :pattern ( ($generated@@251 $generated@@588 ($generated@@75 0)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@134) (= (type $generated@@590) $generated@@64)) ($generated@@251 $generated@@589 ($generated@@137 $generated@@590))) (and (= ($generated@@294 ($generated@@373 ($generated@@76 $generated@@134 $generated@@4) $generated@@589)) $generated@@589) ($generated@@136 ($generated@@373 ($generated@@76 $generated@@134 $generated@@4) $generated@@589) ($generated@@137 $generated@@590))))
 :pattern ( ($generated@@251 $generated@@589 ($generated@@137 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@134) (= (type $generated@@592) $generated@@64)) ($generated@@251 $generated@@591 ($generated@@263 $generated@@592))) (and (= ($generated@@294 ($generated@@373 ($generated@@76 $generated@@134 $generated@@4) $generated@@591)) $generated@@591) ($generated@@136 ($generated@@373 ($generated@@76 $generated@@134 $generated@@4) $generated@@591) ($generated@@263 $generated@@592))))
 :pattern ( ($generated@@251 $generated@@591 ($generated@@263 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@134) (= (type $generated@@594) $generated@@64)) ($generated@@251 $generated@@593 ($generated@@189 $generated@@594))) (and (= ($generated@@294 ($generated@@373 ($generated@@76 $generated@@134 $generated@@2) $generated@@593)) $generated@@593) ($generated@@136 ($generated@@373 ($generated@@76 $generated@@134 $generated@@2) $generated@@593) ($generated@@189 $generated@@594))))
 :pattern ( ($generated@@251 $generated@@593 ($generated@@189 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@134) (= (type $generated@@596) $generated@@64)) ($generated@@251 $generated@@595 ($generated@@497 $generated@@596))) (and (= ($generated@@294 ($generated@@373 ($generated@@287 $generated@@134) $generated@@595)) $generated@@595) ($generated@@136 ($generated@@373 ($generated@@287 $generated@@134) $generated@@595) ($generated@@497 $generated@@596))))
 :pattern ( ($generated@@251 $generated@@595 ($generated@@497 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@79 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@76 $generated@@599 $generated@@4)) (= (type $generated@@598) ($generated@@76 $generated@@599 $generated@@4))) (= ($generated@@539 $generated@@597 $generated@@598) (forall (($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@599) ($generated@@0 ($generated@@81 $generated@@597 $generated@@600))) ($generated@@0 ($generated@@81 $generated@@598 $generated@@600)))
 :pattern ( ($generated@@81 $generated@@597 $generated@@600))
 :pattern ( ($generated@@81 $generated@@598 $generated@@600))
)))))
 :pattern ( ($generated@@539 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@76 $generated@@134 $generated@@2)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@601 ($generated@@189 $generated@@602) $generated@@603) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@134) (< 0 ($generated ($generated@@81 $generated@@601 $generated@@604)))) ($generated@@273 $generated@@604 $generated@@602 $generated@@603))
 :pattern ( ($generated@@81 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@74 $generated@@601 ($generated@@189 $generated@@602) $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@176) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@607) (and ($generated@@174 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@64) ($generated@@74 $generated@@605 ($generated@@175 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@74 $generated@@605 ($generated@@175 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@273 ($generated@@183 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@273 ($generated@@183 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@176) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@272 $generated@@611) (and ($generated@@174 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@64) ($generated@@74 $generated@@609 ($generated@@175 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@74 $generated@@609 ($generated@@175 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@273 ($generated@@184 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@273 ($generated@@184 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (= (type $generated@@613) ($generated@@76 $generated@@134 $generated@@134)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@134) (= ($generated@@81 $generated@@613 $generated@@614) ($generated@@294 ($generated@@8 ($generated@@133 ($generated@@373 ($generated@@76 $generated@@134 $generated@@4) $generated@@614))))))
 :pattern ( ($generated@@81 $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@134) (= (type $generated@@616) $generated@@134)) (= ($generated@@250 ($generated@@268 $generated@@615) ($generated@@268 $generated@@616)) ($generated@@268 ($generated@@250 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@250 ($generated@@268 $generated@@615) ($generated@@268 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (! (= ($generated@@294 ($generated@@268 $generated@@617)) ($generated@@268 ($generated@@294 $generated@@617)))
 :pattern ( ($generated@@294 ($generated@@268 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@288 (type $generated@@618))))
 (=> (and (= (type $generated@@618) ($generated@@287 $generated@@619)) (= ($generated@@286 $generated@@618) 0)) (= $generated@@618 ($generated@@285 $generated@@619))))
 :pattern ( ($generated@@286 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (! (let (($generated@@623 (type $generated@@621)))
 (=> (and (and (= (type $generated@@620) ($generated@@76 $generated@@623 $generated@@2)) (= (type $generated@@622) $generated@@2)) (<= 0 ($generated $generated@@622))) (= ($generated@@299 ($generated@@82 $generated@@620 $generated@@621 $generated@@622)) (+ (- ($generated@@299 $generated@@620) ($generated ($generated@@81 $generated@@620 $generated@@621))) ($generated $generated@@622)))))
 :pattern ( ($generated@@299 ($generated@@82 $generated@@620 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@625) $generated@@2)) ($generated@@74 $generated@@625 $generated@@46 $generated@@624))
 :pattern ( ($generated@@74 $generated@@625 $generated@@46 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@627) $generated@@3)) ($generated@@74 $generated@@627 $generated@@47 $generated@@626))
 :pattern ( ($generated@@74 $generated@@627 $generated@@47 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@629) $generated@@4)) ($generated@@74 $generated@@629 $generated@@44 $generated@@628))
 :pattern ( ($generated@@74 $generated@@629 $generated@@44 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@631) $generated@@452)) ($generated@@74 $generated@@631 $generated@@45 $generated@@630))
 :pattern ( ($generated@@74 $generated@@631 $generated@@45 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@633) $generated@@134)) ($generated@@74 $generated@@633 $generated@@48 $generated@@632))
 :pattern ( ($generated@@74 $generated@@633 $generated@@48 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@287 $generated@@134)) (= (type $generated@@635) $generated@@64)) (= ($generated@@136 $generated@@634 ($generated@@497 $generated@@635)) (forall (($generated@@636 Int) ) (!  (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@286 $generated@@634))) ($generated@@251 ($generated@@498 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@498 $generated@@634 $generated@@636))
))))
 :pattern ( ($generated@@136 $generated@@634 ($generated@@497 $generated@@635)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 Int) ) (!  (=> (= (type $generated@@638) ($generated@@287 $generated@@134)) (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@286 $generated@@638))) (< ($generated@@546 ($generated@@373 $generated@@176 ($generated@@498 $generated@@638 $generated@@639))) ($generated@@637 $generated@@638))))
 :pattern ( ($generated@@546 ($generated@@373 $generated@@176 ($generated@@498 $generated@@638 $generated@@639))))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@143 $generated@@134 $generated@@134)) (= (type $generated@@641) $generated@@64)) (= (type $generated@@642) $generated@@64)) ($generated@@136 $generated@@640 ($generated@@397 $generated@@641 $generated@@642))) (and (and ($generated@@136 ($generated@@141 $generated@@640) ($generated@@137 $generated@@641)) ($generated@@136 ($generated@@341 $generated@@640) ($generated@@137 $generated@@642))) ($generated@@136 ($generated@@372 $generated@@640) ($generated@@137 ($generated@@175 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@136 $generated@@640 ($generated@@397 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@313 $generated@@134 $generated@@134)) (= (type $generated@@644) $generated@@64)) (= (type $generated@@645) $generated@@64)) ($generated@@136 $generated@@643 ($generated@@405 $generated@@644 $generated@@645))) (and (and ($generated@@136 ($generated@@311 $generated@@643) ($generated@@263 $generated@@644)) ($generated@@136 ($generated@@352 $generated@@643) ($generated@@263 $generated@@645))) ($generated@@136 ($generated@@379 $generated@@643) ($generated@@263 ($generated@@175 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@136 $generated@@643 ($generated@@405 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@2) ($generated@@136 $generated@@646 $generated@@46))
 :pattern ( ($generated@@136 $generated@@646 $generated@@46))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@3) ($generated@@136 $generated@@647 $generated@@47))
 :pattern ( ($generated@@136 $generated@@647 $generated@@47))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@4) ($generated@@136 $generated@@648 $generated@@44))
 :pattern ( ($generated@@136 $generated@@648 $generated@@44))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@452) ($generated@@136 $generated@@649 $generated@@45))
 :pattern ( ($generated@@136 $generated@@649 $generated@@45))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@134) ($generated@@136 $generated@@650 $generated@@48))
 :pattern ( ($generated@@136 $generated@@650 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@653) ($generated@@143 $generated@@134 $generated@@134)) (= (type $generated@@654) ($generated@@143 $generated@@134 $generated@@134))) (= (type $generated@@651) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@652) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@655) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@656) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@657) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@658) ($generated@@196 $generated@@77 $generated@@4))) (= (type $generated@@659) $generated@@77)) (= (type $generated@@660) $generated@@134)) (= (type $generated@@662) ($generated@@76 $generated@@134 $generated@@4))) (= (type $generated@@663) ($generated@@143 $generated@@134 $generated@@134))) (= (type $generated@@664) ($generated@@143 $generated@@134 $generated@@134))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@665  (and (=> (= (ControlFlow 0 11) (- 0 12)) (= ($generated@@539 $generated@@651 $generated@@652)  (or ($generated@@329 $generated@@651 ($generated@@572 $generated@@134)) ($generated@@329 $generated@@651 $generated@@652)))) (=> (= ($generated@@539 $generated@@651 $generated@@652)  (or ($generated@@329 $generated@@651 ($generated@@572 $generated@@134)) ($generated@@329 $generated@@651 $generated@@652))) (=> (= (ControlFlow 0 11) (- 0 10)) (= ($generated@@539 $generated@@651 $generated@@652) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@653) ($generated@@294 $generated@@651)))))))))
(let (($generated@@666  (=> (and ($generated@@329 $generated@@651 ($generated@@572 $generated@@134)) (= (ControlFlow 0 14) 11)) $generated@@665)))
(let (($generated@@667  (=> (and (not ($generated@@329 $generated@@651 ($generated@@572 $generated@@134))) (= (ControlFlow 0 13) 11)) $generated@@665)))
(let (($generated@@668  (and (=> (= (ControlFlow 0 15) 13) $generated@@667) (=> (= (ControlFlow 0 15) 14) $generated@@666))))
(let (($generated@@669  (=> (and (= ($generated@@0 ($generated@@81 ($generated@@141 $generated@@654) ($generated@@294 $generated@@651))) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@653) ($generated@@294 $generated@@651)))) (= (ControlFlow 0 9) (- 0 8))) (= ($generated@@0 ($generated@@81 ($generated@@141 $generated@@654) ($generated@@294 $generated@@651))) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@653) ($generated@@294 $generated@@651)))))))
(let (($generated@@670  (=> (= (ControlFlow 0 7) (- 0 6)) (= ($generated@@0 ($generated@@81 ($generated@@141 $generated@@654) ($generated@@294 $generated@@651))) ($generated@@539 $generated@@651 $generated@@652)))))
(let (($generated@@671 true))
(let (($generated@@672 true))
(let (($generated@@673  (=> ($generated@@136 $generated@@651 ($generated@@137 $generated@@138)) (and (and (and (and (=> (= (ControlFlow 0 16) 4) $generated@@672) (=> (= (ControlFlow 0 16) 5) $generated@@671)) (=> (= (ControlFlow 0 16) 7) $generated@@670)) (=> (= (ControlFlow 0 16) 15) $generated@@668)) (=> (= (ControlFlow 0 16) 9) $generated@@669)))))
(let (($generated@@674  (=> (and (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) ($generated@@76 $generated@@134 $generated@@4)) (=> (and ($generated@@136 $generated@@675 ($generated@@137 $generated@@138)) ($generated@@0 ($generated@@268 ($generated@@11 true)))) (= ($generated@@0 ($generated@@81 ($generated@@141 $generated@@654) ($generated@@294 $generated@@675))) ($generated@@0 ($generated@@81 ($generated@@141 $generated@@653) ($generated@@294 $generated@@675))))))
 :pattern ( ($generated@@81 ($generated@@141 $generated@@653) ($generated@@294 $generated@@675)))
 :pattern ( ($generated@@81 ($generated@@141 $generated@@654) ($generated@@294 $generated@@675)))
)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@329 ($generated@@141 $generated@@654) ($generated@@141 $generated@@653)))))
(let (($generated@@676 true))
(let (($generated@@677  (=> (forall (($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@678) ($generated@@76 $generated@@134 $generated@@4)) ($generated@@136 $generated@@678 ($generated@@137 $generated@@138))) ($generated@@539 $generated@@678 $generated@@652)) ($generated@@135 $generated@@678))
 :pattern ( ($generated@@133 $generated@@678))
 :pattern ( ($generated@@539 $generated@@678 $generated@@652))
)) (=> (and (= $generated@@654 ($generated@@142 ($generated@@538 ($generated@@137 $generated@@138) $generated@@652) $generated@@613 ($generated@@397 ($generated@@137 $generated@@138) $generated@@46))) (= $generated@@655 ($generated@@268 ($generated@@572 $generated@@134)))) (=> (and (and (and ($generated@@74 $generated@@655 ($generated@@137 $generated@@138) $generated@@656) ($generated@@135 ($generated@@268 ($generated@@572 $generated@@134)))) (and ($generated@@74 $generated@@652 ($generated@@137 $generated@@138) $generated@@656) ($generated@@135 $generated@@652))) (and (and ($generated@@135 ($generated@@268 ($generated@@572 $generated@@134))) ($generated@@135 $generated@@652)) (= $generated@@653 ($generated@@551 ($generated@@551 ($generated@@305 $generated@@134 $generated@@134) ($generated@@294 ($generated@@268 ($generated@@572 $generated@@134))) ($generated@@294 ($generated@@8 ($generated@@133 ($generated@@268 ($generated@@572 $generated@@134)))))) ($generated@@294 $generated@@652) ($generated@@294 ($generated@@8 ($generated@@133 $generated@@652))))))) (and (and (=> (= (ControlFlow 0 17) 1) $generated@@676) (=> (= (ControlFlow 0 17) 16) $generated@@673)) (=> (= (ControlFlow 0 17) 3) $generated@@674)))))))
(let (($generated@@679  (=> (and (not ($generated@@539 $generated@@657 $generated@@652)) (= (ControlFlow 0 20) 17)) $generated@@677)))
(let (($generated@@680  (=> (and (and ($generated@@539 $generated@@657 $generated@@652) ($generated@@74 $generated@@657 ($generated@@137 $generated@@138) $generated@@656)) (and ($generated@@135 $generated@@657) (= (ControlFlow 0 19) 17))) $generated@@677)))
(let (($generated@@681  (=> (and ($generated@@136 $generated@@657 ($generated@@137 $generated@@138)) ($generated@@74 $generated@@657 ($generated@@137 $generated@@138) $generated@@656)) (and (=> (= (ControlFlow 0 21) 19) $generated@@680) (=> (= (ControlFlow 0 21) 20) $generated@@679)))))
(let (($generated@@682  (=> (and (not (and ($generated@@136 $generated@@657 ($generated@@137 $generated@@138)) ($generated@@74 $generated@@657 ($generated@@137 $generated@@138) $generated@@656))) (= (ControlFlow 0 18) 17)) $generated@@677)))
(let (($generated@@683  (=> (and (= $generated@@658 ($generated@@195 $generated@@659 $generated@@656 $generated@@60 false)) (= $generated@@652 ($generated@@416 ($generated@@572 $generated@@134) $generated@@660))) (and (=> (= (ControlFlow 0 22) 21) $generated@@681) (=> (= (ControlFlow 0 22) 18) $generated@@682)))))
(let (($generated@@684  (=> (and (and ($generated@@272 $generated@@656) ($generated@@661 $generated@@656)) (and ($generated@@251 $generated@@660 $generated@@138) ($generated@@273 $generated@@660 $generated@@138 $generated@@656))) (=> (and (and (and (and ($generated@@136 $generated@@662 ($generated@@137 $generated@@138)) ($generated@@74 $generated@@662 ($generated@@137 $generated@@138) $generated@@656)) true) (and (and ($generated@@136 $generated@@663 ($generated@@397 ($generated@@137 $generated@@138) $generated@@46)) ($generated@@74 $generated@@663 ($generated@@397 ($generated@@137 $generated@@138) $generated@@46) $generated@@656)) true)) (and (and (and ($generated@@136 $generated@@664 ($generated@@397 ($generated@@137 $generated@@138) $generated@@46)) ($generated@@74 $generated@@664 ($generated@@397 ($generated@@137 $generated@@138) $generated@@46) $generated@@656)) true) (and (= 1 $generated@@132) (= (ControlFlow 0 23) 22)))) $generated@@683))))
$generated@@684)))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
