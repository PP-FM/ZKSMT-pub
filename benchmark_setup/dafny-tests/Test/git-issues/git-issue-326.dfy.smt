(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U Int) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U Int) T@U)
(declare-fun $generated@@263 (T@U Int) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@152 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@152 $generated@@159)))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@151 $generated@@160 $generated@@161)) ($generated@@152 $generated@@162)))
 :pattern ( ($generated@@151 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (= (type $generated@@163) ($generated@@152 $generated@@166)) (=> (and (<= 0 $generated@@165) (<= $generated@@165 ($generated@@153 $generated@@163))) (= ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165) ($generated@@151 ($generated@@150 $generated@@163 $generated@@165) $generated@@164)))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@132 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@132 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@136)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@145)) (= (type $generated@@235) $generated@@145)) (= ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@136) (= (type $generated@@237) $generated@@136)) (= ($generated@@142 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@142 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (! (let (($generated@@240 ($generated@@154 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@152 $generated@@240)) (= $generated@@239 0)) (= ($generated@@150 $generated@@238 $generated@@239) $generated@@238)))
 :pattern ( ($generated@@150 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@229 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@145) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@229 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@152 $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) $generated@@64)) (and ($generated@@132 $generated@@259 ($generated@@257 $generated@@261)) ($generated@@229 $generated@@260 $generated@@261))) ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
 :pattern ( ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
)))
(assert  (and (forall (($generated@@264 T@U) ($generated@@265 Int) ) (! (let (($generated@@266 ($generated@@154 (type $generated@@264))))
(= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)) (forall (($generated@@267 T@U) ($generated@@268 Int) ) (! (let (($generated@@269 ($generated@@154 (type $generated@@267))))
(= (type ($generated@@263 $generated@@267 $generated@@268)) ($generated@@152 $generated@@269)))
 :pattern ( ($generated@@263 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 Int) ($generated@@272 Int) ) (! (let (($generated@@273 ($generated@@154 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@152 $generated@@273)) (=> (and (and (<= 0 $generated@@272) (< $generated@@272 $generated@@271)) (< $generated@@272 ($generated@@153 $generated@@270))) (= ($generated@@262 ($generated@@263 $generated@@270 $generated@@271) $generated@@272) ($generated@@262 $generated@@270 $generated@@272)))))
 :weight 25
 :pattern ( ($generated@@262 ($generated@@263 $generated@@270 $generated@@271) $generated@@272))
 :pattern ( ($generated@@262 $generated@@270 $generated@@272) ($generated@@263 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) $generated@@64)) (= (type $generated@@278) $generated@@145)) (= (type $generated@@279) $generated@@145)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@274 $generated@@280)) (= ($generated@@74 ($generated@@228 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 Int) ) (! (let (($generated@@283 ($generated@@154 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@152 $generated@@283)) (=> (and (<= 0 $generated@@282) (<= $generated@@282 ($generated@@153 $generated@@281))) (= ($generated@@153 ($generated@@150 $generated@@281 $generated@@282)) (- ($generated@@153 $generated@@281) $generated@@282)))))
 :pattern ( ($generated@@153 ($generated@@150 $generated@@281 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@136) (= ($generated@@134 $generated@@286) (= ($generated@@284 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@154 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@152 $generated@@290)) (=> (and (<= 0 $generated@@289) (< $generated@@289 ($generated@@153 $generated@@288))) (< ($generated@@287 ($generated@@263 $generated@@288 $generated@@289)) ($generated@@287 $generated@@288)))))
 :pattern ( ($generated@@287 ($generated@@263 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@136) ($generated@@134 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@145) (= (type $generated@@293) $generated@@145)) (= $generated@@291 ($generated@@228 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@134 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@152 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@153 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ) (! (let (($generated@@299 ($generated@@154 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@152 $generated@@299)) (=> (and (< 0 $generated@@298) (<= $generated@@298 ($generated@@153 $generated@@297))) (< ($generated@@287 ($generated@@150 $generated@@297 $generated@@298)) ($generated@@287 $generated@@297)))))
 :pattern ( ($generated@@287 ($generated@@150 $generated@@297 $generated@@298)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
 (=> (= (type $generated@@300) ($generated@@152 $generated@@302)) (= ($generated@@153 ($generated@@151 $generated@@300 $generated@@301)) (+ 1 ($generated@@153 $generated@@300)))))
 :pattern ( ($generated@@151 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@145)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@64) (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@275 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@74 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@275 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 Int) ($generated@@310 Int) ) (! (let (($generated@@311 ($generated@@154 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@152 $generated@@311)) (=> (and (and (<= 0 $generated@@309) (<= 0 $generated@@310)) (< $generated@@310 (- ($generated@@153 $generated@@308) $generated@@309))) (= ($generated@@262 ($generated@@150 $generated@@308 $generated@@309) $generated@@310) ($generated@@262 $generated@@308 (+ $generated@@310 $generated@@309))))))
 :weight 25
 :pattern ( ($generated@@262 ($generated@@150 $generated@@308 $generated@@309) $generated@@310))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@76 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@81 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@168 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@168 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 Int) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
 (=> (= (type $generated@@357) ($generated@@152 $generated@@360)) (and (=> (= $generated@@358 ($generated@@153 $generated@@357)) (= ($generated@@262 ($generated@@151 $generated@@357 $generated@@359) $generated@@358) $generated@@359)) (=> (not (= $generated@@358 ($generated@@153 $generated@@357))) (= ($generated@@262 ($generated@@151 $generated@@357 $generated@@359) $generated@@358) ($generated@@262 $generated@@357 $generated@@358))))))
 :pattern ( ($generated@@262 ($generated@@151 $generated@@357 $generated@@359) $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@318 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@322 (type $generated@@368))))
(let (($generated@@370 ($generated@@321 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@320 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@319 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@340 (type $generated@@372))))
(let (($generated@@374 ($generated@@339 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@338 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@337 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@336 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@340 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@76 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@340 (type $generated@@379))))
(let (($generated@@381 ($generated@@339 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@338 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@337 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@384) $generated@@64)) (= ($generated@@132 $generated@@383 ($generated@@167 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@383 $generated@@385)))) ($generated@@229 $generated@@385 $generated@@384))
 :pattern ( ($generated@@81 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@132 $generated@@383 ($generated@@167 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@241 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@145) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@275 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@241 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@246 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@145) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@275 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@246 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@81 ($generated@@313 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@81 ($generated@@313 $generated@@395) $generated@@394)))
)))
(assert  (and (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@396 $generated@@399)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@396 $generated@@399))
)) (forall (($generated@@400 T@T) ($generated@@401 T@U) ) (! (= (type ($generated@@397 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@397 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@322 (type $generated@@402))))
(let (($generated@@404 ($generated@@321 (type $generated@@402))))
(= (type ($generated@@398 $generated@@402)) ($generated@@76 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@398 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@406) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@405) ($generated@@143 ($generated@@397 $generated@@136 $generated@@406)))) (= ($generated@@81 ($generated@@398 $generated@@405) ($generated@@143 ($generated@@397 $generated@@136 $generated@@406))) ($generated@@144 ($generated@@397 $generated@@136 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@340 (type $generated@@410))))
(let (($generated@@412 ($generated@@339 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@76 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@414) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@413) ($generated@@143 ($generated@@397 $generated@@136 $generated@@414)))) (= ($generated@@81 ($generated@@408 $generated@@413) ($generated@@143 ($generated@@397 $generated@@136 $generated@@414))) ($generated@@144 ($generated@@397 $generated@@136 $generated@@414))))))
 :pattern ( ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@321 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@320 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@339 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@338 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@428) $generated@@432))) (and ($generated@@275 ($generated@@81 ($generated@@398 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@275 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@428) $generated@@432))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) $generated@@64)) (= (type $generated@@439) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@436) $generated@@440))) (and ($generated@@275 ($generated@@81 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@275 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 Int) ) (! (let (($generated@@443 ($generated@@154 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@152 $generated@@443)) (=> (and (<= 0 $generated@@442) (<= $generated@@442 ($generated@@153 $generated@@441))) (= ($generated@@153 ($generated@@263 $generated@@441 $generated@@442)) $generated@@442))))
 :pattern ( ($generated@@153 ($generated@@263 $generated@@441 $generated@@442)))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@76 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@340 (type $generated@@446))))
(let (($generated@@448 ($generated@@339 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@338 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@337 $generated@@448 $generated@@447)) (= ($generated@@336 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@336 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@340 (type $generated@@449))))
(let (($generated@@451 ($generated@@339 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@338 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@337 $generated@@451 $generated@@450)) (= ($generated@@376 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@376 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@340 (type $generated@@452))))
(let (($generated@@454 ($generated@@339 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@338 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@337 $generated@@454 $generated@@453)) (= ($generated@@407 $generated@@452) ($generated@@444 $generated@@145))))))
 :pattern ( ($generated@@407 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@322 (type $generated@@455))))
(let (($generated@@457 ($generated@@321 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@320 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@319 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@455) ($generated@@303 ($generated@@228 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@396 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@340 (type $generated@@460))))
(let (($generated@@462 ($generated@@339 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@338 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@337 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@407 $generated@@460) ($generated@@303 ($generated@@228 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@407 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) ($generated@@229 $generated@@465 $generated@@46)) (and (= ($generated@@303 ($generated@@397 $generated@@2 $generated@@465)) $generated@@465) ($generated@@132 ($generated@@397 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) ($generated@@229 $generated@@466 $generated@@47)) (and (= ($generated@@303 ($generated@@397 $generated@@3 $generated@@466)) $generated@@466) ($generated@@132 ($generated@@397 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) ($generated@@229 $generated@@467 $generated@@44)) (and (= ($generated@@303 ($generated@@397 $generated@@4 $generated@@467)) $generated@@467) ($generated@@132 ($generated@@397 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 20))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) ($generated@@229 $generated@@469 $generated@@45)) (and (= ($generated@@303 ($generated@@397 $generated@@468 $generated@@469)) $generated@@469) ($generated@@132 ($generated@@397 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@229 ($generated@@303 $generated@@470) $generated@@471) ($generated@@132 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@229 ($generated@@303 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@79 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@76 $generated@@473 $generated@@2)) (<= 0 ($generated@@312 $generated@@472))))
 :pattern ( ($generated@@312 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@154 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@152 $generated@@475)) (<= 0 ($generated@@153 $generated@@474))))
 :pattern ( ($generated@@153 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@425 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@425 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@425 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@425 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@72 ($generated@@425 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@433 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@433 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@433 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@433 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@72 ($generated@@433 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (= ($generated@@284 ($generated@@228 $generated@@496 $generated@@497)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@64) (= (type $generated@@501) $generated@@64)) (= ($generated@@498 ($generated@@135 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@135 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@502 ($generated@@135 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@135 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@145)) (= ($generated@@143 ($generated@@228 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@228 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@145)) (= ($generated@@144 ($generated@@228 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@228 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@152 $generated@@145)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@510 ($generated@@257 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@153 $generated@@510))) ($generated@@275 ($generated@@262 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@262 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@74 $generated@@510 ($generated@@257 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@75 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@75 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@241 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@241 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@246 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@246 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@524 ($generated@@167 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@167 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@528 ($generated@@257 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@257 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@257 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@397 $generated@@533 ($generated@@303 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@303 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) (= ($generated@@132 $generated@@534 ($generated@@425 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@534) $generated@@537))) (and ($generated@@229 ($generated@@81 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@229 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@132 $generated@@534 ($generated@@425 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) (= ($generated@@132 $generated@@538 ($generated@@433 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@538) $generated@@541))) (and ($generated@@229 ($generated@@81 ($generated@@408 $generated@@538) $generated@@541) $generated@@540) ($generated@@229 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@538) $generated@@541))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@132 $generated@@538 ($generated@@433 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@145)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@228 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@228 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@145)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@228 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@228 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@548 ($generated@@425 $generated@@549 $generated@@550))) (and (= ($generated@@303 ($generated@@397 ($generated@@320 $generated@@145 $generated@@145) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@397 ($generated@@320 $generated@@145 $generated@@145) $generated@@548) ($generated@@425 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@425 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@433 $generated@@552 $generated@@553))) (and (= ($generated@@303 ($generated@@397 ($generated@@338 $generated@@145 $generated@@145) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@397 ($generated@@338 $generated@@145 $generated@@145) $generated@@551) ($generated@@433 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@433 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) $generated@@145)) ($generated@@229 $generated@@556 ($generated@@135 $generated@@554 $generated@@555))) (and (= ($generated@@303 ($generated@@397 $generated@@136 $generated@@556)) $generated@@556) ($generated@@132 ($generated@@397 $generated@@136 $generated@@556) ($generated@@135 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@556 ($generated@@135 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@81 ($generated@@444 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@81 ($generated@@444 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@69)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@64) (= (type $generated@@562) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@135 $generated@@561 $generated@@562)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@561 $generated@@562))
)))
(assert  (and (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@154 (type $generated@@565))))
(= (type ($generated@@563 $generated@@565)) ($generated@@152 $generated@@566)))
 :pattern ( ($generated@@563 $generated@@565))
)) (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@154 (type $generated@@567))))
(= (type ($generated@@564 $generated@@567)) $generated@@568))
 :pattern ( ($generated@@564 $generated@@567))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (=> (= (type $generated@@569) ($generated@@152 $generated@@571)) (and (= ($generated@@563 ($generated@@151 $generated@@569 $generated@@570)) $generated@@569) (= ($generated@@564 ($generated@@151 $generated@@569 $generated@@570)) $generated@@570))))
 :pattern ( ($generated@@151 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@136) (= ($generated@@542 ($generated@@303 $generated@@572)) ($generated@@543 $generated@@572)))
 :pattern ( ($generated@@542 ($generated@@303 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@145) ($generated@@229 $generated@@573 ($generated@@75 0))) (and (= ($generated@@303 ($generated@@397 $generated@@2 $generated@@573)) $generated@@573) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@573) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@573 ($generated@@75 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@64)) ($generated@@229 $generated@@574 ($generated@@241 $generated@@575))) (and (= ($generated@@303 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@574)) $generated@@574) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@574) ($generated@@241 $generated@@575))))
 :pattern ( ($generated@@229 $generated@@574 ($generated@@241 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@64)) ($generated@@229 $generated@@576 ($generated@@246 $generated@@577))) (and (= ($generated@@303 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@576)) $generated@@576) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@576) ($generated@@246 $generated@@577))))
 :pattern ( ($generated@@229 $generated@@576 ($generated@@246 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@145) (= (type $generated@@579) $generated@@64)) ($generated@@229 $generated@@578 ($generated@@167 $generated@@579))) (and (= ($generated@@303 ($generated@@397 ($generated@@76 $generated@@145 $generated@@2) $generated@@578)) $generated@@578) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@2) $generated@@578) ($generated@@167 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@167 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@64)) ($generated@@229 $generated@@580 ($generated@@257 $generated@@581))) (and (= ($generated@@303 ($generated@@397 ($generated@@152 $generated@@145) $generated@@580)) $generated@@580) ($generated@@132 ($generated@@397 ($generated@@152 $generated@@145) $generated@@580) ($generated@@257 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@257 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ($generated@@584 Int) ) (! (let (($generated@@585 ($generated@@154 (type $generated@@582))))
 (=> (= (type $generated@@582) ($generated@@152 $generated@@585)) (=> (and (and (<= 0 $generated@@583) (<= $generated@@583 $generated@@584)) (< $generated@@584 ($generated@@153 $generated@@582))) (= ($generated@@262 ($generated@@150 $generated@@582 $generated@@583) (- $generated@@584 $generated@@583)) ($generated@@262 $generated@@582 $generated@@584)))))
 :weight 25
 :pattern ( ($generated@@262 $generated@@582 $generated@@584) ($generated@@150 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@586 ($generated@@167 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@586 $generated@@589)))) ($generated@@275 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@81 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@74 $generated@@586 ($generated@@167 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ($generated@@592 Int) ) (! (let (($generated@@593 ($generated@@154 (type $generated@@590))))
 (=> (= (type $generated@@590) ($generated@@152 $generated@@593)) (=> (and (and (<= 0 $generated@@591) (<= 0 $generated@@592)) (<= (+ $generated@@591 $generated@@592) ($generated@@153 $generated@@590))) (= ($generated@@150 ($generated@@150 $generated@@590 $generated@@591) $generated@@592) ($generated@@150 $generated@@590 (+ $generated@@591 $generated@@592))))))
 :pattern ( ($generated@@150 ($generated@@150 $generated@@590 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@136) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@596) (and ($generated@@134 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@64) ($generated@@74 $generated@@594 ($generated@@135 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@135 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@275 ($generated@@143 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@275 ($generated@@143 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@136) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@600) (and ($generated@@134 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@64) ($generated@@74 $generated@@598 ($generated@@135 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@74 $generated@@598 ($generated@@135 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@275 ($generated@@144 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@275 ($generated@@144 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@145) (= (type $generated@@603) $generated@@145)) (= ($generated@@228 ($generated@@253 $generated@@602) ($generated@@253 $generated@@603)) ($generated@@253 ($generated@@228 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@228 ($generated@@253 $generated@@602) ($generated@@253 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@251 $generated@@604))) ($generated@@253 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@251 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@303 ($generated@@253 $generated@@605)) ($generated@@253 ($generated@@303 $generated@@605)))
 :pattern ( ($generated@@303 ($generated@@253 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@154 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@152 $generated@@607)) (= ($generated@@153 $generated@@606) 0)) (= $generated@@606 ($generated@@294 $generated@@607))))
 :pattern ( ($generated@@153 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (! (let (($generated@@610 ($generated@@154 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@152 $generated@@610)) (= $generated@@609 0)) (= ($generated@@263 $generated@@608 $generated@@609) ($generated@@294 $generated@@610))))
 :pattern ( ($generated@@263 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@76 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@312 ($generated@@82 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@312 $generated@@611) ($generated ($generated@@81 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@312 ($generated@@82 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@616) $generated@@2)) ($generated@@74 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@74 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) $generated@@3)) ($generated@@74 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@74 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@4)) ($generated@@74 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) $generated@@468)) ($generated@@74 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@74 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) $generated@@145)) ($generated@@74 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@74 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@152 $generated@@145)) (= (type $generated@@626) $generated@@64)) (= ($generated@@132 $generated@@625 ($generated@@257 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@153 $generated@@625))) ($generated@@229 ($generated@@262 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@262 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@132 $generated@@625 ($generated@@257 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@153 $generated@@628))) (< ($generated@@543 ($generated@@397 $generated@@136 ($generated@@262 $generated@@628 $generated@@629))) ($generated@@287 $generated@@628))))
 :pattern ( ($generated@@543 ($generated@@397 $generated@@136 ($generated@@262 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@631) $generated@@64)) (= (type $generated@@632) $generated@@64)) ($generated@@132 $generated@@630 ($generated@@425 $generated@@631 $generated@@632))) (and (and ($generated@@132 ($generated@@318 $generated@@630) ($generated@@241 $generated@@631)) ($generated@@132 ($generated@@365 $generated@@630) ($generated@@241 $generated@@632))) ($generated@@132 ($generated@@396 $generated@@630) ($generated@@241 ($generated@@135 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@132 $generated@@630 ($generated@@425 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@634) $generated@@64)) (= (type $generated@@635) $generated@@64)) ($generated@@132 $generated@@633 ($generated@@433 $generated@@634 $generated@@635))) (and (and ($generated@@132 ($generated@@336 $generated@@633) ($generated@@246 $generated@@634)) ($generated@@132 ($generated@@376 $generated@@633) ($generated@@246 $generated@@635))) ($generated@@132 ($generated@@407 $generated@@633) ($generated@@246 ($generated@@135 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@132 $generated@@633 ($generated@@433 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@132 $generated@@636 $generated@@46))
 :pattern ( ($generated@@132 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@132 $generated@@637 $generated@@47))
 :pattern ( ($generated@@132 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@132 $generated@@638 $generated@@44))
 :pattern ( ($generated@@132 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@468) ($generated@@132 $generated@@639 $generated@@45))
 :pattern ( ($generated@@132 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@145) ($generated@@132 $generated@@640 $generated@@48))
 :pattern ( ($generated@@132 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@641) ($generated@@174 $generated@@77 $generated@@4)) (= (type $generated@@642) $generated@@77)) (= (type $generated@@643) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@644) ($generated@@152 $generated@@145))) (= (type $generated@@645) ($generated@@152 $generated@@145))) (= (type $generated@@646) ($generated@@152 $generated@@145))) (= (type $generated@@648) ($generated@@152 $generated@@145))) (= (type $generated@@649) ($generated@@152 $generated@@145))) (= (type $generated@@650) ($generated@@152 $generated@@145))) (= (type $generated@@651) ($generated@@152 $generated@@145))) (= (type $generated@@652) ($generated@@152 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@654  (=> (and (= $generated@@641 ($generated@@173 $generated@@642 $generated@@643 $generated@@60 false)) (= $generated@@644 ($generated@@253 ($generated@@151 ($generated@@151 ($generated@@151 ($generated@@294 $generated@@145) ($generated@@303 ($generated@@8 ($generated@@251 1)))) ($generated@@303 ($generated@@8 ($generated@@251 2)))) ($generated@@303 ($generated@@8 ($generated@@251 3))))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 ($generated@@251 0)) (<= ($generated@@251 0) ($generated@@153 $generated@@644)))) (=> (and (<= 0 ($generated@@251 0)) (<= ($generated@@251 0) ($generated@@153 $generated@@644))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= ($generated@@251 0) ($generated@@251 2)) (<= ($generated@@251 2) ($generated@@153 $generated@@644)))) (=> (and (<= ($generated@@251 0) ($generated@@251 2)) (<= ($generated@@251 2) ($generated@@153 $generated@@644))) (=> (= $generated@@645 ($generated@@150 ($generated@@263 $generated@@644 ($generated@@251 2)) ($generated@@251 0))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@251 1)) (<= ($generated@@251 1) ($generated@@153 $generated@@644)))) (=> (and (<= 0 ($generated@@251 1)) (<= ($generated@@251 1) ($generated@@153 $generated@@644))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= ($generated@@251 1) ($generated@@251 3)) (<= ($generated@@251 3) ($generated@@153 $generated@@644)))) (=> (and (<= ($generated@@251 1) ($generated@@251 3)) (<= ($generated@@251 3) ($generated@@153 $generated@@644))) (=> (= $generated@@646 ($generated@@150 ($generated@@263 $generated@@644 ($generated@@251 3)) ($generated@@251 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@251 1)) (<= ($generated@@251 1) ($generated@@153 $generated@@644)))) (=> (and (<= 0 ($generated@@251 1)) (<= ($generated@@251 1) ($generated@@153 $generated@@644))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= ($generated@@251 1) ($generated@@251 1)) (<= ($generated@@251 1) ($generated@@153 $generated@@644)))))))))))))))))))
(let (($generated@@655  (=> (and ($generated@@274 $generated@@643) ($generated@@647 $generated@@643)) (=> (and (and (and ($generated@@132 $generated@@648 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@648 ($generated@@257 $generated@@46) $generated@@643)) true) (and (and ($generated@@132 $generated@@649 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@649 ($generated@@257 $generated@@46) $generated@@643)) true)) (=> (and (and (and (and ($generated@@132 $generated@@650 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@650 ($generated@@257 $generated@@46) $generated@@643)) true) (and (and ($generated@@132 $generated@@651 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@651 ($generated@@257 $generated@@46) $generated@@643)) true)) (and (and (and ($generated@@132 $generated@@652 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@652 ($generated@@257 $generated@@46) $generated@@643)) true) (and (= 0 $generated@@653) (= (ControlFlow 0 8) 2)))) $generated@@654)))))
$generated@@655)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U Int) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U Int) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@152 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@152 $generated@@159)))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@151 $generated@@160 $generated@@161)) ($generated@@152 $generated@@162)))
 :pattern ( ($generated@@151 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (= (type $generated@@163) ($generated@@152 $generated@@166)) (=> (and (<= 0 $generated@@165) (<= $generated@@165 ($generated@@153 $generated@@163))) (= ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165) ($generated@@151 ($generated@@150 $generated@@163 $generated@@165) $generated@@164)))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@132 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@132 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@136)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@145)) (= (type $generated@@235) $generated@@145)) (= ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@136) (= (type $generated@@237) $generated@@136)) (= ($generated@@142 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@142 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (! (let (($generated@@240 ($generated@@154 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@152 $generated@@240)) (= $generated@@239 0)) (= ($generated@@150 $generated@@238 $generated@@239) $generated@@238)))
 :pattern ( ($generated@@150 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@229 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@145) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@229 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@152 $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) $generated@@64)) (and ($generated@@132 $generated@@259 ($generated@@257 $generated@@261)) ($generated@@229 $generated@@260 $generated@@261))) ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
 :pattern ( ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@64)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) $generated@@145)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@262 $generated@@268)) (= ($generated@@74 ($generated@@228 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ) (! (let (($generated@@271 ($generated@@154 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@152 $generated@@271)) (=> (and (<= 0 $generated@@270) (<= $generated@@270 ($generated@@153 $generated@@269))) (= ($generated@@153 ($generated@@150 $generated@@269 $generated@@270)) (- ($generated@@153 $generated@@269) $generated@@270)))))
 :pattern ( ($generated@@153 ($generated@@150 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@136) (= ($generated@@134 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@134 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@228 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@152 $generated@@279))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@153 ($generated@@278 $generated@@280)) 0)
 :pattern ( ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 Int) ) (! (let (($generated@@284 ($generated@@154 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@152 $generated@@284)) (=> (and (< 0 $generated@@283) (<= $generated@@283 ($generated@@153 $generated@@282))) (< ($generated@@281 ($generated@@150 $generated@@282 $generated@@283)) ($generated@@281 $generated@@282)))))
 :pattern ( ($generated@@281 ($generated@@150 $generated@@282 $generated@@283)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
 (=> (= (type $generated@@285) ($generated@@152 $generated@@287)) (= ($generated@@153 ($generated@@151 $generated@@285 $generated@@286)) (+ 1 ($generated@@153 $generated@@285)))))
 :pattern ( ($generated@@151 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@145)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@263 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@263 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@154 (type $generated@@294))))
(= (type ($generated@@293 $generated@@294 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (! (let (($generated@@300 ($generated@@154 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@152 $generated@@300)) (=> (and (and (<= 0 $generated@@298) (<= 0 $generated@@299)) (< $generated@@299 (- ($generated@@153 $generated@@297) $generated@@298))) (= ($generated@@293 ($generated@@150 $generated@@297 $generated@@298) $generated@@299) ($generated@@293 $generated@@297 (+ $generated@@299 $generated@@298))))))
 :weight 25
 :pattern ( ($generated@@293 ($generated@@150 $generated@@297 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@79 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@76 $generated@@344 $generated@@2)) (= ($generated@@168 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@81 $generated@@343 $generated@@345))) (<= ($generated ($generated@@81 $generated@@343 $generated@@345)) ($generated@@301 $generated@@343))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@168 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
 (=> (= (type $generated@@346) ($generated@@152 $generated@@349)) (and (=> (= $generated@@347 ($generated@@153 $generated@@346)) (= ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347) $generated@@348)) (=> (not (= $generated@@347 ($generated@@153 $generated@@346))) (= ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347) ($generated@@293 $generated@@346 $generated@@347))))))
 :pattern ( ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@307 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@329 (type $generated@@361))))
(let (($generated@@363 ($generated@@328 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@327 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@326 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@325 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@132 $generated@@372 ($generated@@167 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@372 $generated@@374)))) ($generated@@229 $generated@@374 $generated@@373))
 :pattern ( ($generated@@81 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@132 $generated@@372 ($generated@@167 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@241 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@145) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@263 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@241 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@246 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@263 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@246 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@81 ($generated@@302 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@311 (type $generated@@391))))
(let (($generated@@393 ($generated@@310 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@76 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@394) ($generated@@143 ($generated@@386 $generated@@136 $generated@@395)))) (= ($generated@@81 ($generated@@387 $generated@@394) ($generated@@143 ($generated@@386 $generated@@136 $generated@@395))) ($generated@@144 ($generated@@386 $generated@@136 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@329 (type $generated@@399))))
(let (($generated@@401 ($generated@@328 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@76 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@402) ($generated@@143 ($generated@@386 $generated@@136 $generated@@403)))) (= ($generated@@81 ($generated@@397 $generated@@402) ($generated@@143 ($generated@@386 $generated@@136 $generated@@403))) ($generated@@144 ($generated@@386 $generated@@136 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@310 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@309 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@328 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@327 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@417) $generated@@421))) (and ($generated@@263 ($generated@@81 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@263 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@425) $generated@@429))) (and ($generated@@263 ($generated@@81 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@263 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@329 (type $generated@@432))))
(let (($generated@@434 ($generated@@328 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@327 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@326 $generated@@434 $generated@@433)) (= ($generated@@325 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@325 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@329 (type $generated@@435))))
(let (($generated@@437 ($generated@@328 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@327 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@326 $generated@@437 $generated@@436)) (= ($generated@@365 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@365 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@396 $generated@@438) ($generated@@430 $generated@@145))))))
 :pattern ( ($generated@@396 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@145) (= (type $generated@@445) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@441) ($generated@@288 ($generated@@228 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@385 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@329 (type $generated@@446))))
(let (($generated@@448 ($generated@@328 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@327 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@326 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@145) (= (type $generated@@450) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@446) ($generated@@288 ($generated@@228 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@396 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) ($generated@@229 $generated@@451 $generated@@46)) (and (= ($generated@@288 ($generated@@386 $generated@@2 $generated@@451)) $generated@@451) ($generated@@132 ($generated@@386 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) ($generated@@229 $generated@@452 $generated@@47)) (and (= ($generated@@288 ($generated@@386 $generated@@3 $generated@@452)) $generated@@452) ($generated@@132 ($generated@@386 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@229 $generated@@453 $generated@@44)) (and (= ($generated@@288 ($generated@@386 $generated@@4 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@386 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) ($generated@@229 $generated@@455 $generated@@45)) (and (= ($generated@@288 ($generated@@386 $generated@@454 $generated@@455)) $generated@@455) ($generated@@132 ($generated@@386 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@229 ($generated@@288 $generated@@456) $generated@@457) ($generated@@132 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@229 ($generated@@288 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@301 $generated@@458))))
 :pattern ( ($generated@@301 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@154 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@152 $generated@@461)) (<= 0 ($generated@@153 $generated@@460))))
 :pattern ( ($generated@@153 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) (= ($generated@@272 ($generated@@228 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@135 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@135 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@135 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@135 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (= ($generated@@143 ($generated@@228 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@228 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (= ($generated@@144 ($generated@@228 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@228 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@152 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@257 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@153 $generated@@496))) ($generated@@263 ($generated@@293 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@293 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@257 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@241 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@241 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@246 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@246 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@167 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@167 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@257 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@257 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@257 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@386 $generated@@519 ($generated@@288 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@288 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@132 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@520) $generated@@523))) (and ($generated@@229 ($generated@@81 ($generated@@387 $generated@@520) $generated@@523) $generated@@522) ($generated@@229 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@132 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@132 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@524) $generated@@527))) (and ($generated@@229 ($generated@@81 ($generated@@397 $generated@@524) $generated@@527) $generated@@526) ($generated@@229 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@132 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@145)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@145)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@228 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@228 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536))) (and (= ($generated@@288 ($generated@@386 ($generated@@309 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@386 ($generated@@309 $generated@@145 $generated@@145) $generated@@534) ($generated@@414 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539))) (and (= ($generated@@288 ($generated@@386 ($generated@@327 $generated@@145 $generated@@145) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@386 ($generated@@327 $generated@@145 $generated@@145) $generated@@537) ($generated@@422 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@145)) ($generated@@229 $generated@@542 ($generated@@135 $generated@@540 $generated@@541))) (and (= ($generated@@288 ($generated@@386 $generated@@136 $generated@@542)) $generated@@542) ($generated@@132 ($generated@@386 $generated@@136 $generated@@542) ($generated@@135 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@135 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@430 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@135 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@547 $generated@@548))
)))
(assert  (and (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@154 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551)) ($generated@@152 $generated@@552)))
 :pattern ( ($generated@@549 $generated@@551))
)) (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@154 (type $generated@@553))))
(= (type ($generated@@550 $generated@@553)) $generated@@554))
 :pattern ( ($generated@@550 $generated@@553))
))))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (=> (= (type $generated@@555) ($generated@@152 $generated@@557)) (and (= ($generated@@549 ($generated@@151 $generated@@555 $generated@@556)) $generated@@555) (= ($generated@@550 ($generated@@151 $generated@@555 $generated@@556)) $generated@@556))))
 :pattern ( ($generated@@151 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@136) (= ($generated@@528 ($generated@@288 $generated@@558)) ($generated@@529 $generated@@558)))
 :pattern ( ($generated@@528 ($generated@@288 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) ($generated@@229 $generated@@559 ($generated@@75 0))) (and (= ($generated@@288 ($generated@@386 $generated@@2 $generated@@559)) $generated@@559) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@64)) ($generated@@229 $generated@@560 ($generated@@241 $generated@@561))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@560)) $generated@@560) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@560) ($generated@@241 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@241 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@64)) ($generated@@229 $generated@@562 ($generated@@246 $generated@@563))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@562)) $generated@@562) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@562) ($generated@@246 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@562 ($generated@@246 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@64)) ($generated@@229 $generated@@564 ($generated@@167 $generated@@565))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@2) $generated@@564)) $generated@@564) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@2) $generated@@564) ($generated@@167 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@564 ($generated@@167 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@64)) ($generated@@229 $generated@@566 ($generated@@257 $generated@@567))) (and (= ($generated@@288 ($generated@@386 ($generated@@152 $generated@@145) $generated@@566)) $generated@@566) ($generated@@132 ($generated@@386 ($generated@@152 $generated@@145) $generated@@566) ($generated@@257 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@566 ($generated@@257 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Int) ($generated@@570 Int) ) (! (let (($generated@@571 ($generated@@154 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@152 $generated@@571)) (=> (and (and (<= 0 $generated@@569) (<= $generated@@569 $generated@@570)) (< $generated@@570 ($generated@@153 $generated@@568))) (= ($generated@@293 ($generated@@150 $generated@@568 $generated@@569) (- $generated@@570 $generated@@569)) ($generated@@293 $generated@@568 $generated@@570)))))
 :weight 25
 :pattern ( ($generated@@293 $generated@@568 $generated@@570) ($generated@@150 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@572 ($generated@@167 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@572 $generated@@575)))) ($generated@@263 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@81 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@167 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ($generated@@578 Int) ) (! (let (($generated@@579 ($generated@@154 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@152 $generated@@579)) (=> (and (and (<= 0 $generated@@577) (<= 0 $generated@@578)) (<= (+ $generated@@577 $generated@@578) ($generated@@153 $generated@@576))) (= ($generated@@150 ($generated@@150 $generated@@576 $generated@@577) $generated@@578) ($generated@@150 $generated@@576 (+ $generated@@577 $generated@@578))))))
 :pattern ( ($generated@@150 ($generated@@150 $generated@@576 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@582) (and ($generated@@134 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@64) ($generated@@74 $generated@@580 ($generated@@135 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@74 $generated@@580 ($generated@@135 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@263 ($generated@@143 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@263 ($generated@@143 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@136) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@586) (and ($generated@@134 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@64) ($generated@@74 $generated@@584 ($generated@@135 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@74 $generated@@584 ($generated@@135 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@263 ($generated@@144 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@263 ($generated@@144 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@145)) (= ($generated@@228 ($generated@@253 $generated@@588) ($generated@@253 $generated@@589)) ($generated@@253 ($generated@@228 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@228 ($generated@@253 $generated@@588) ($generated@@253 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@251 $generated@@590))) ($generated@@253 ($generated@@288 ($generated@@8 $generated@@590))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@251 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@288 ($generated@@253 $generated@@591)) ($generated@@253 ($generated@@288 $generated@@591)))
 :pattern ( ($generated@@288 ($generated@@253 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@154 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@152 $generated@@593)) (= ($generated@@153 $generated@@592) 0)) (= $generated@@592 ($generated@@278 $generated@@593))))
 :pattern ( ($generated@@153 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@76 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@301 ($generated@@82 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@301 $generated@@594) ($generated ($generated@@81 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@301 ($generated@@82 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@2)) ($generated@@74 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@3)) ($generated@@74 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@4)) ($generated@@74 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@454)) ($generated@@74 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@145)) ($generated@@74 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@152 $generated@@145)) (= (type $generated@@609) $generated@@64)) (= ($generated@@132 $generated@@608 ($generated@@257 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@153 $generated@@608))) ($generated@@229 ($generated@@293 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@293 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@132 $generated@@608 ($generated@@257 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@153 $generated@@611))) (< ($generated@@529 ($generated@@386 $generated@@136 ($generated@@293 $generated@@611 $generated@@612))) ($generated@@281 $generated@@611))))
 :pattern ( ($generated@@529 ($generated@@386 $generated@@136 ($generated@@293 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@132 $generated@@613 ($generated@@414 $generated@@614 $generated@@615))) (and (and ($generated@@132 ($generated@@307 $generated@@613) ($generated@@241 $generated@@614)) ($generated@@132 ($generated@@354 $generated@@613) ($generated@@241 $generated@@615))) ($generated@@132 ($generated@@385 $generated@@613) ($generated@@241 ($generated@@135 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@132 $generated@@613 ($generated@@414 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@132 $generated@@616 ($generated@@422 $generated@@617 $generated@@618))) (and (and ($generated@@132 ($generated@@325 $generated@@616) ($generated@@246 $generated@@617)) ($generated@@132 ($generated@@365 $generated@@616) ($generated@@246 $generated@@618))) ($generated@@132 ($generated@@396 $generated@@616) ($generated@@246 ($generated@@135 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@132 $generated@@616 ($generated@@422 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@132 $generated@@619 $generated@@46))
 :pattern ( ($generated@@132 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@132 $generated@@620 $generated@@47))
 :pattern ( ($generated@@132 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@132 $generated@@621 $generated@@44))
 :pattern ( ($generated@@132 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@454) ($generated@@132 $generated@@622 $generated@@45))
 :pattern ( ($generated@@132 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@145) ($generated@@132 $generated@@623 $generated@@48))
 :pattern ( ($generated@@132 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(assert  (and (and (and (and (and (= (type $generated@@624) ($generated@@174 $generated@@77 $generated@@4)) (= (type $generated@@625) $generated@@77)) (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@627) ($generated@@152 $generated@@145))) (= (type $generated@@629) ($generated@@152 $generated@@145))) (= (type $generated@@630) ($generated@@152 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@632  (=> (= $generated@@624 ($generated@@173 $generated@@625 $generated@@626 $generated@@60 false)) (=> (and (= $generated@@627 ($generated@@253 ($generated@@151 ($generated@@151 ($generated@@151 ($generated@@278 $generated@@145) ($generated@@288 ($generated@@8 ($generated@@251 1)))) ($generated@@288 ($generated@@8 ($generated@@251 2)))) ($generated@@288 ($generated@@8 ($generated@@251 3)))))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@251 (- 0 1))) (<= ($generated@@251 (- 0 1)) ($generated@@153 $generated@@627)))))))
(let (($generated@@633  (=> (and ($generated@@262 $generated@@626) ($generated@@628 $generated@@626)) (=> (and (and ($generated@@132 $generated@@629 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@629 ($generated@@257 $generated@@46) $generated@@626)) true) (=> (and (and (and ($generated@@132 $generated@@630 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@630 ($generated@@257 $generated@@46) $generated@@626)) true) (and (= 0 $generated@@631) (= (ControlFlow 0 3) 2))) $generated@@632)))))
$generated@@633)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U Int) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U Int) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@152 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@152 $generated@@159)))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@151 $generated@@160 $generated@@161)) ($generated@@152 $generated@@162)))
 :pattern ( ($generated@@151 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (= (type $generated@@163) ($generated@@152 $generated@@166)) (=> (and (<= 0 $generated@@165) (<= $generated@@165 ($generated@@153 $generated@@163))) (= ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165) ($generated@@151 ($generated@@150 $generated@@163 $generated@@165) $generated@@164)))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@132 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@132 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@136)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@145)) (= (type $generated@@235) $generated@@145)) (= ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@136) (= (type $generated@@237) $generated@@136)) (= ($generated@@142 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@142 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (! (let (($generated@@240 ($generated@@154 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@152 $generated@@240)) (= $generated@@239 0)) (= ($generated@@150 $generated@@238 $generated@@239) $generated@@238)))
 :pattern ( ($generated@@150 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@229 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@145) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@229 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@152 $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) $generated@@64)) (and ($generated@@132 $generated@@259 ($generated@@257 $generated@@261)) ($generated@@229 $generated@@260 $generated@@261))) ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
 :pattern ( ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@64)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) $generated@@145)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@262 $generated@@268)) (= ($generated@@74 ($generated@@228 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ) (! (let (($generated@@271 ($generated@@154 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@152 $generated@@271)) (=> (and (<= 0 $generated@@270) (<= $generated@@270 ($generated@@153 $generated@@269))) (= ($generated@@153 ($generated@@150 $generated@@269 $generated@@270)) (- ($generated@@153 $generated@@269) $generated@@270)))))
 :pattern ( ($generated@@153 ($generated@@150 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@136) (= ($generated@@134 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@134 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@228 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@152 $generated@@279))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@153 ($generated@@278 $generated@@280)) 0)
 :pattern ( ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 Int) ) (! (let (($generated@@284 ($generated@@154 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@152 $generated@@284)) (=> (and (< 0 $generated@@283) (<= $generated@@283 ($generated@@153 $generated@@282))) (< ($generated@@281 ($generated@@150 $generated@@282 $generated@@283)) ($generated@@281 $generated@@282)))))
 :pattern ( ($generated@@281 ($generated@@150 $generated@@282 $generated@@283)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
 (=> (= (type $generated@@285) ($generated@@152 $generated@@287)) (= ($generated@@153 ($generated@@151 $generated@@285 $generated@@286)) (+ 1 ($generated@@153 $generated@@285)))))
 :pattern ( ($generated@@151 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@145)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@263 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@263 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@154 (type $generated@@294))))
(= (type ($generated@@293 $generated@@294 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (! (let (($generated@@300 ($generated@@154 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@152 $generated@@300)) (=> (and (and (<= 0 $generated@@298) (<= 0 $generated@@299)) (< $generated@@299 (- ($generated@@153 $generated@@297) $generated@@298))) (= ($generated@@293 ($generated@@150 $generated@@297 $generated@@298) $generated@@299) ($generated@@293 $generated@@297 (+ $generated@@299 $generated@@298))))))
 :weight 25
 :pattern ( ($generated@@293 ($generated@@150 $generated@@297 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@79 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@76 $generated@@344 $generated@@2)) (= ($generated@@168 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@81 $generated@@343 $generated@@345))) (<= ($generated ($generated@@81 $generated@@343 $generated@@345)) ($generated@@301 $generated@@343))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@168 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
 (=> (= (type $generated@@346) ($generated@@152 $generated@@349)) (and (=> (= $generated@@347 ($generated@@153 $generated@@346)) (= ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347) $generated@@348)) (=> (not (= $generated@@347 ($generated@@153 $generated@@346))) (= ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347) ($generated@@293 $generated@@346 $generated@@347))))))
 :pattern ( ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@307 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@329 (type $generated@@361))))
(let (($generated@@363 ($generated@@328 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@327 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@326 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@325 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@132 $generated@@372 ($generated@@167 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@372 $generated@@374)))) ($generated@@229 $generated@@374 $generated@@373))
 :pattern ( ($generated@@81 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@132 $generated@@372 ($generated@@167 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@241 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@145) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@263 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@241 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@246 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@263 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@246 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@81 ($generated@@302 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@311 (type $generated@@391))))
(let (($generated@@393 ($generated@@310 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@76 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@394) ($generated@@143 ($generated@@386 $generated@@136 $generated@@395)))) (= ($generated@@81 ($generated@@387 $generated@@394) ($generated@@143 ($generated@@386 $generated@@136 $generated@@395))) ($generated@@144 ($generated@@386 $generated@@136 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@329 (type $generated@@399))))
(let (($generated@@401 ($generated@@328 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@76 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@402) ($generated@@143 ($generated@@386 $generated@@136 $generated@@403)))) (= ($generated@@81 ($generated@@397 $generated@@402) ($generated@@143 ($generated@@386 $generated@@136 $generated@@403))) ($generated@@144 ($generated@@386 $generated@@136 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@310 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@309 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@328 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@327 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@417) $generated@@421))) (and ($generated@@263 ($generated@@81 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@263 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@425) $generated@@429))) (and ($generated@@263 ($generated@@81 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@263 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@329 (type $generated@@432))))
(let (($generated@@434 ($generated@@328 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@327 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@326 $generated@@434 $generated@@433)) (= ($generated@@325 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@325 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@329 (type $generated@@435))))
(let (($generated@@437 ($generated@@328 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@327 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@326 $generated@@437 $generated@@436)) (= ($generated@@365 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@365 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@396 $generated@@438) ($generated@@430 $generated@@145))))))
 :pattern ( ($generated@@396 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@145) (= (type $generated@@445) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@441) ($generated@@288 ($generated@@228 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@385 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@329 (type $generated@@446))))
(let (($generated@@448 ($generated@@328 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@327 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@326 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@145) (= (type $generated@@450) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@446) ($generated@@288 ($generated@@228 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@396 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) ($generated@@229 $generated@@451 $generated@@46)) (and (= ($generated@@288 ($generated@@386 $generated@@2 $generated@@451)) $generated@@451) ($generated@@132 ($generated@@386 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) ($generated@@229 $generated@@452 $generated@@47)) (and (= ($generated@@288 ($generated@@386 $generated@@3 $generated@@452)) $generated@@452) ($generated@@132 ($generated@@386 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@229 $generated@@453 $generated@@44)) (and (= ($generated@@288 ($generated@@386 $generated@@4 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@386 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) ($generated@@229 $generated@@455 $generated@@45)) (and (= ($generated@@288 ($generated@@386 $generated@@454 $generated@@455)) $generated@@455) ($generated@@132 ($generated@@386 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@229 ($generated@@288 $generated@@456) $generated@@457) ($generated@@132 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@229 ($generated@@288 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@301 $generated@@458))))
 :pattern ( ($generated@@301 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@154 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@152 $generated@@461)) (<= 0 ($generated@@153 $generated@@460))))
 :pattern ( ($generated@@153 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) (= ($generated@@272 ($generated@@228 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@135 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@135 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@135 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@135 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (= ($generated@@143 ($generated@@228 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@228 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (= ($generated@@144 ($generated@@228 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@228 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@152 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@257 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@153 $generated@@496))) ($generated@@263 ($generated@@293 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@293 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@257 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@241 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@241 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@246 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@246 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@167 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@167 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@257 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@257 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@257 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@386 $generated@@519 ($generated@@288 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@288 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@132 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@520) $generated@@523))) (and ($generated@@229 ($generated@@81 ($generated@@387 $generated@@520) $generated@@523) $generated@@522) ($generated@@229 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@132 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@132 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@524) $generated@@527))) (and ($generated@@229 ($generated@@81 ($generated@@397 $generated@@524) $generated@@527) $generated@@526) ($generated@@229 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@132 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@145)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@145)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@228 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@228 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536))) (and (= ($generated@@288 ($generated@@386 ($generated@@309 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@386 ($generated@@309 $generated@@145 $generated@@145) $generated@@534) ($generated@@414 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539))) (and (= ($generated@@288 ($generated@@386 ($generated@@327 $generated@@145 $generated@@145) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@386 ($generated@@327 $generated@@145 $generated@@145) $generated@@537) ($generated@@422 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@145)) ($generated@@229 $generated@@542 ($generated@@135 $generated@@540 $generated@@541))) (and (= ($generated@@288 ($generated@@386 $generated@@136 $generated@@542)) $generated@@542) ($generated@@132 ($generated@@386 $generated@@136 $generated@@542) ($generated@@135 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@135 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@430 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@135 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@547 $generated@@548))
)))
(assert  (and (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@154 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551)) ($generated@@152 $generated@@552)))
 :pattern ( ($generated@@549 $generated@@551))
)) (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@154 (type $generated@@553))))
(= (type ($generated@@550 $generated@@553)) $generated@@554))
 :pattern ( ($generated@@550 $generated@@553))
))))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (=> (= (type $generated@@555) ($generated@@152 $generated@@557)) (and (= ($generated@@549 ($generated@@151 $generated@@555 $generated@@556)) $generated@@555) (= ($generated@@550 ($generated@@151 $generated@@555 $generated@@556)) $generated@@556))))
 :pattern ( ($generated@@151 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@136) (= ($generated@@528 ($generated@@288 $generated@@558)) ($generated@@529 $generated@@558)))
 :pattern ( ($generated@@528 ($generated@@288 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) ($generated@@229 $generated@@559 ($generated@@75 0))) (and (= ($generated@@288 ($generated@@386 $generated@@2 $generated@@559)) $generated@@559) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@64)) ($generated@@229 $generated@@560 ($generated@@241 $generated@@561))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@560)) $generated@@560) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@560) ($generated@@241 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@241 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@64)) ($generated@@229 $generated@@562 ($generated@@246 $generated@@563))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@562)) $generated@@562) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@562) ($generated@@246 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@562 ($generated@@246 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@64)) ($generated@@229 $generated@@564 ($generated@@167 $generated@@565))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@2) $generated@@564)) $generated@@564) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@2) $generated@@564) ($generated@@167 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@564 ($generated@@167 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@64)) ($generated@@229 $generated@@566 ($generated@@257 $generated@@567))) (and (= ($generated@@288 ($generated@@386 ($generated@@152 $generated@@145) $generated@@566)) $generated@@566) ($generated@@132 ($generated@@386 ($generated@@152 $generated@@145) $generated@@566) ($generated@@257 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@566 ($generated@@257 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Int) ($generated@@570 Int) ) (! (let (($generated@@571 ($generated@@154 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@152 $generated@@571)) (=> (and (and (<= 0 $generated@@569) (<= $generated@@569 $generated@@570)) (< $generated@@570 ($generated@@153 $generated@@568))) (= ($generated@@293 ($generated@@150 $generated@@568 $generated@@569) (- $generated@@570 $generated@@569)) ($generated@@293 $generated@@568 $generated@@570)))))
 :weight 25
 :pattern ( ($generated@@293 $generated@@568 $generated@@570) ($generated@@150 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@572 ($generated@@167 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@572 $generated@@575)))) ($generated@@263 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@81 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@167 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ($generated@@578 Int) ) (! (let (($generated@@579 ($generated@@154 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@152 $generated@@579)) (=> (and (and (<= 0 $generated@@577) (<= 0 $generated@@578)) (<= (+ $generated@@577 $generated@@578) ($generated@@153 $generated@@576))) (= ($generated@@150 ($generated@@150 $generated@@576 $generated@@577) $generated@@578) ($generated@@150 $generated@@576 (+ $generated@@577 $generated@@578))))))
 :pattern ( ($generated@@150 ($generated@@150 $generated@@576 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@582) (and ($generated@@134 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@64) ($generated@@74 $generated@@580 ($generated@@135 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@74 $generated@@580 ($generated@@135 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@263 ($generated@@143 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@263 ($generated@@143 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@136) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@586) (and ($generated@@134 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@64) ($generated@@74 $generated@@584 ($generated@@135 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@74 $generated@@584 ($generated@@135 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@263 ($generated@@144 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@263 ($generated@@144 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@145)) (= ($generated@@228 ($generated@@253 $generated@@588) ($generated@@253 $generated@@589)) ($generated@@253 ($generated@@228 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@228 ($generated@@253 $generated@@588) ($generated@@253 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@251 $generated@@590))) ($generated@@253 ($generated@@288 ($generated@@8 $generated@@590))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@251 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@288 ($generated@@253 $generated@@591)) ($generated@@253 ($generated@@288 $generated@@591)))
 :pattern ( ($generated@@288 ($generated@@253 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@154 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@152 $generated@@593)) (= ($generated@@153 $generated@@592) 0)) (= $generated@@592 ($generated@@278 $generated@@593))))
 :pattern ( ($generated@@153 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@76 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@301 ($generated@@82 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@301 $generated@@594) ($generated ($generated@@81 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@301 ($generated@@82 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@2)) ($generated@@74 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@3)) ($generated@@74 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@4)) ($generated@@74 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@454)) ($generated@@74 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@145)) ($generated@@74 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@152 $generated@@145)) (= (type $generated@@609) $generated@@64)) (= ($generated@@132 $generated@@608 ($generated@@257 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@153 $generated@@608))) ($generated@@229 ($generated@@293 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@293 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@132 $generated@@608 ($generated@@257 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@153 $generated@@611))) (< ($generated@@529 ($generated@@386 $generated@@136 ($generated@@293 $generated@@611 $generated@@612))) ($generated@@281 $generated@@611))))
 :pattern ( ($generated@@529 ($generated@@386 $generated@@136 ($generated@@293 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@132 $generated@@613 ($generated@@414 $generated@@614 $generated@@615))) (and (and ($generated@@132 ($generated@@307 $generated@@613) ($generated@@241 $generated@@614)) ($generated@@132 ($generated@@354 $generated@@613) ($generated@@241 $generated@@615))) ($generated@@132 ($generated@@385 $generated@@613) ($generated@@241 ($generated@@135 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@132 $generated@@613 ($generated@@414 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@132 $generated@@616 ($generated@@422 $generated@@617 $generated@@618))) (and (and ($generated@@132 ($generated@@325 $generated@@616) ($generated@@246 $generated@@617)) ($generated@@132 ($generated@@365 $generated@@616) ($generated@@246 $generated@@618))) ($generated@@132 ($generated@@396 $generated@@616) ($generated@@246 ($generated@@135 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@132 $generated@@616 ($generated@@422 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@132 $generated@@619 $generated@@46))
 :pattern ( ($generated@@132 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@132 $generated@@620 $generated@@47))
 :pattern ( ($generated@@132 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@132 $generated@@621 $generated@@44))
 :pattern ( ($generated@@132 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@454) ($generated@@132 $generated@@622 $generated@@45))
 :pattern ( ($generated@@132 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@145) ($generated@@132 $generated@@623 $generated@@48))
 :pattern ( ($generated@@132 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(assert  (and (and (and (and (and (= (type $generated@@624) ($generated@@174 $generated@@77 $generated@@4)) (= (type $generated@@625) $generated@@77)) (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@627) ($generated@@152 $generated@@145))) (= (type $generated@@629) ($generated@@152 $generated@@145))) (= (type $generated@@630) ($generated@@152 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@632  (=> (= $generated@@624 ($generated@@173 $generated@@625 $generated@@626 $generated@@60 false)) (=> (and (= $generated@@627 ($generated@@253 ($generated@@151 ($generated@@151 ($generated@@151 ($generated@@278 $generated@@145) ($generated@@288 ($generated@@8 ($generated@@251 1)))) ($generated@@288 ($generated@@8 ($generated@@251 2)))) ($generated@@288 ($generated@@8 ($generated@@251 3)))))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@251 4)) (<= ($generated@@251 4) ($generated@@153 $generated@@627)))))))
(let (($generated@@633  (=> (and ($generated@@262 $generated@@626) ($generated@@628 $generated@@626)) (=> (and (and ($generated@@132 $generated@@629 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@629 ($generated@@257 $generated@@46) $generated@@626)) true) (=> (and (and (and ($generated@@132 $generated@@630 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@630 ($generated@@257 $generated@@46) $generated@@626)) true) (and (= 0 $generated@@631) (= (ControlFlow 0 3) 2))) $generated@@632)))))
$generated@@633)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U Int) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U Int) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@500 (T@U) Int)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@152 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@152 $generated@@159)))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@151 $generated@@160 $generated@@161)) ($generated@@152 $generated@@162)))
 :pattern ( ($generated@@151 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (= (type $generated@@163) ($generated@@152 $generated@@166)) (=> (and (<= 0 $generated@@165) (<= $generated@@165 ($generated@@153 $generated@@163))) (= ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165) ($generated@@151 ($generated@@150 $generated@@163 $generated@@165) $generated@@164)))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@132 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@132 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@136)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@145)) (= (type $generated@@235) $generated@@145)) (= ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@136) (= (type $generated@@237) $generated@@136)) (= ($generated@@142 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@142 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (! (let (($generated@@240 ($generated@@154 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@152 $generated@@240)) (= $generated@@239 0)) (= ($generated@@150 $generated@@238 $generated@@239) $generated@@238)))
 :pattern ( ($generated@@150 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@229 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@145) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@229 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@152 $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) $generated@@64)) (and ($generated@@132 $generated@@259 ($generated@@257 $generated@@261)) ($generated@@229 $generated@@260 $generated@@261))) ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
 :pattern ( ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@264) $generated@@64) (= (type $generated@@265) $generated@@64)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) $generated@@145)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@262 $generated@@268)) (= ($generated@@74 ($generated@@228 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268)  (and ($generated@@263 $generated@@266 $generated@@264 $generated@@268) ($generated@@263 $generated@@267 $generated@@265 $generated@@268))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@266 $generated@@267) ($generated@@135 $generated@@264 $generated@@265) $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 Int) ) (! (let (($generated@@271 ($generated@@154 (type $generated@@269))))
 (=> (= (type $generated@@269) ($generated@@152 $generated@@271)) (=> (and (<= 0 $generated@@270) (<= $generated@@270 ($generated@@153 $generated@@269))) (= ($generated@@153 ($generated@@150 $generated@@269 $generated@@270)) (- ($generated@@153 $generated@@269) $generated@@270)))))
 :pattern ( ($generated@@153 ($generated@@150 $generated@@269 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@136) (= ($generated@@134 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@134 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@228 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@152 $generated@@279))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@153 ($generated@@278 $generated@@280)) 0)
 :pattern ( ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 Int) ) (! (let (($generated@@284 ($generated@@154 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@152 $generated@@284)) (=> (and (< 0 $generated@@283) (<= $generated@@283 ($generated@@153 $generated@@282))) (< ($generated@@281 ($generated@@150 $generated@@282 $generated@@283)) ($generated@@281 $generated@@282)))))
 :pattern ( ($generated@@281 ($generated@@150 $generated@@282 $generated@@283)))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (! (let (($generated@@287 (type $generated@@286)))
 (=> (= (type $generated@@285) ($generated@@152 $generated@@287)) (= ($generated@@153 ($generated@@151 $generated@@285 $generated@@286)) (+ 1 ($generated@@153 $generated@@285)))))
 :pattern ( ($generated@@151 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@145)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@263 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@263 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@154 (type $generated@@294))))
(= (type ($generated@@293 $generated@@294 $generated@@295)) $generated@@296))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ($generated@@299 Int) ) (! (let (($generated@@300 ($generated@@154 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@152 $generated@@300)) (=> (and (and (<= 0 $generated@@298) (<= 0 $generated@@299)) (< $generated@@299 (- ($generated@@153 $generated@@297) $generated@@298))) (= ($generated@@293 ($generated@@150 $generated@@297 $generated@@298) $generated@@299) ($generated@@293 $generated@@297 (+ $generated@@299 $generated@@298))))))
 :weight 25
 :pattern ( ($generated@@293 ($generated@@150 $generated@@297 $generated@@298) $generated@@299))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@76 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@79 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@76 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@81 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@81 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@79 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@76 $generated@@344 $generated@@2)) (= ($generated@@168 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@81 $generated@@343 $generated@@345))) (<= ($generated ($generated@@81 $generated@@343 $generated@@345)) ($generated@@301 $generated@@343))))
 :pattern ( ($generated@@81 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@168 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 Int) ($generated@@348 T@U) ) (! (let (($generated@@349 (type $generated@@348)))
 (=> (= (type $generated@@346) ($generated@@152 $generated@@349)) (and (=> (= $generated@@347 ($generated@@153 $generated@@346)) (= ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347) $generated@@348)) (=> (not (= $generated@@347 ($generated@@153 $generated@@346))) (= ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347) ($generated@@293 $generated@@346 $generated@@347))))))
 :pattern ( ($generated@@293 ($generated@@151 $generated@@346 $generated@@348) $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@307 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@311 (type $generated@@357))))
(let (($generated@@359 ($generated@@310 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@309 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@308 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@329 (type $generated@@361))))
(let (($generated@@363 ($generated@@328 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@327 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@326 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@325 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@329 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@329 (type $generated@@368))))
(let (($generated@@370 ($generated@@328 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@327 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@326 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@373) $generated@@64)) (= ($generated@@132 $generated@@372 ($generated@@167 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@372 $generated@@374)))) ($generated@@229 $generated@@374 $generated@@373))
 :pattern ( ($generated@@81 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@132 $generated@@372 ($generated@@167 $generated@@373)))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@241 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@145) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@263 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@241 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@246 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@263 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@246 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(= ($generated ($generated@@81 ($generated@@302 $generated@@384) $generated@@383)) 0))
 :pattern ( (let (($generated@@384 (type $generated@@383)))
($generated@@81 ($generated@@302 $generated@@384) $generated@@383)))
)))
(assert  (and (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@388)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@385 $generated@@388))
)) (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@386 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@311 (type $generated@@391))))
(let (($generated@@393 ($generated@@310 (type $generated@@391))))
(= (type ($generated@@387 $generated@@391)) ($generated@@76 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@387 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@394) ($generated@@143 ($generated@@386 $generated@@136 $generated@@395)))) (= ($generated@@81 ($generated@@387 $generated@@394) ($generated@@143 ($generated@@386 $generated@@136 $generated@@395))) ($generated@@144 ($generated@@386 $generated@@136 $generated@@395))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@329 (type $generated@@399))))
(let (($generated@@401 ($generated@@328 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@76 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@402) ($generated@@143 ($generated@@386 $generated@@136 $generated@@403)))) (= ($generated@@81 ($generated@@397 $generated@@402) ($generated@@143 ($generated@@386 $generated@@136 $generated@@403))) ($generated@@144 ($generated@@386 $generated@@136 $generated@@403))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@310 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@309 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@328 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@327 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@81 ($generated@@325 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@409) $generated@@413))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@64)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) $generated@@64)) (= (type $generated@@420) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@417) $generated@@421))) (and ($generated@@263 ($generated@@81 ($generated@@387 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@263 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@417) $generated@@421))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@74 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) $generated@@64)) (= (type $generated@@428) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@425) $generated@@429))) (and ($generated@@263 ($generated@@81 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@263 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@74 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@76 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@329 (type $generated@@432))))
(let (($generated@@434 ($generated@@328 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@327 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@326 $generated@@434 $generated@@433)) (= ($generated@@325 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@325 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@329 (type $generated@@435))))
(let (($generated@@437 ($generated@@328 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@327 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@326 $generated@@437 $generated@@436)) (= ($generated@@365 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@365 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@396 $generated@@438) ($generated@@430 $generated@@145))))))
 :pattern ( ($generated@@396 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@145) (= (type $generated@@445) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@441) ($generated@@288 ($generated@@228 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@385 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@329 (type $generated@@446))))
(let (($generated@@448 ($generated@@328 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@327 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@326 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@145) (= (type $generated@@450) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@446) ($generated@@288 ($generated@@228 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@396 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@145) ($generated@@229 $generated@@451 $generated@@46)) (and (= ($generated@@288 ($generated@@386 $generated@@2 $generated@@451)) $generated@@451) ($generated@@132 ($generated@@386 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@145) ($generated@@229 $generated@@452 $generated@@47)) (and (= ($generated@@288 ($generated@@386 $generated@@3 $generated@@452)) $generated@@452) ($generated@@132 ($generated@@386 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@145) ($generated@@229 $generated@@453 $generated@@44)) (and (= ($generated@@288 ($generated@@386 $generated@@4 $generated@@453)) $generated@@453) ($generated@@132 ($generated@@386 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@145) ($generated@@229 $generated@@455 $generated@@45)) (and (= ($generated@@288 ($generated@@386 $generated@@454 $generated@@455)) $generated@@455) ($generated@@132 ($generated@@386 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@64) (= ($generated@@229 ($generated@@288 $generated@@456) $generated@@457) ($generated@@132 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@229 ($generated@@288 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@79 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@76 $generated@@459 $generated@@2)) (<= 0 ($generated@@301 $generated@@458))))
 :pattern ( ($generated@@301 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@154 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@152 $generated@@461)) (<= 0 ($generated@@153 $generated@@460))))
 :pattern ( ($generated@@153 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@414 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@414 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@64)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@466 ($generated@@414 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@414 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@72 ($generated@@414 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@422 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@422 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@422 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@72 ($generated@@422 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) (= ($generated@@272 ($generated@@228 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@484 ($generated@@135 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@135 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@64) (= (type $generated@@491) $generated@@64)) (= ($generated@@488 ($generated@@135 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@135 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@145) (= (type $generated@@493) $generated@@145)) (= ($generated@@143 ($generated@@228 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@228 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@145) (= (type $generated@@495) $generated@@145)) (= ($generated@@144 ($generated@@228 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@228 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@152 $generated@@145)) (= (type $generated@@497) $generated@@64)) (= (type $generated@@498) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@496 ($generated@@257 $generated@@497) $generated@@498) (forall (($generated@@499 Int) ) (!  (=> (and (<= 0 $generated@@499) (< $generated@@499 ($generated@@153 $generated@@496))) ($generated@@263 ($generated@@293 $generated@@496 $generated@@499) $generated@@497 $generated@@498))
 :pattern ( ($generated@@293 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@74 $generated@@496 ($generated@@257 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@501 Int) ) (! (= ($generated@@500 ($generated@@75 $generated@@501)) $generated@@501)
 :pattern ( ($generated@@75 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@502 ($generated@@241 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@241 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@505)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@506 ($generated@@246 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@246 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@509)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@64)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@510 ($generated@@167 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@167 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@513)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@257 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@257 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@517)) $generated@@57))
 :pattern ( ($generated@@257 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@386 $generated@@519 ($generated@@288 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@288 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@64)) (= ($generated@@132 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@520) $generated@@523))) (and ($generated@@229 ($generated@@81 ($generated@@387 $generated@@520) $generated@@523) $generated@@522) ($generated@@229 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@520) $generated@@523))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@132 $generated@@520 ($generated@@414 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) (= ($generated@@132 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@524) $generated@@527))) (and ($generated@@229 ($generated@@81 ($generated@@397 $generated@@524) $generated@@527) $generated@@526) ($generated@@229 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@524) $generated@@527))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@132 $generated@@524 ($generated@@422 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@145)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@145) (= (type $generated@@533) $generated@@145)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@228 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@228 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536))) (and (= ($generated@@288 ($generated@@386 ($generated@@309 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@386 ($generated@@309 $generated@@145 $generated@@145) $generated@@534) ($generated@@414 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@534 ($generated@@414 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539))) (and (= ($generated@@288 ($generated@@386 ($generated@@327 $generated@@145 $generated@@145) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@386 ($generated@@327 $generated@@145 $generated@@145) $generated@@537) ($generated@@422 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@422 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (= (type $generated@@542) $generated@@145)) ($generated@@229 $generated@@542 ($generated@@135 $generated@@540 $generated@@541))) (and (= ($generated@@288 ($generated@@386 $generated@@136 $generated@@542)) $generated@@542) ($generated@@132 ($generated@@386 $generated@@136 $generated@@542) ($generated@@135 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@135 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@81 ($generated@@430 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@81 ($generated@@430 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@69)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@547 $generated@@548)) $generated@@62) (= ($generated@@545 ($generated@@135 $generated@@547 $generated@@548)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@547 $generated@@548))
)))
(assert  (and (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@154 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551)) ($generated@@152 $generated@@552)))
 :pattern ( ($generated@@549 $generated@@551))
)) (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@154 (type $generated@@553))))
(= (type ($generated@@550 $generated@@553)) $generated@@554))
 :pattern ( ($generated@@550 $generated@@553))
))))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (=> (= (type $generated@@555) ($generated@@152 $generated@@557)) (and (= ($generated@@549 ($generated@@151 $generated@@555 $generated@@556)) $generated@@555) (= ($generated@@550 ($generated@@151 $generated@@555 $generated@@556)) $generated@@556))))
 :pattern ( ($generated@@151 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@136) (= ($generated@@528 ($generated@@288 $generated@@558)) ($generated@@529 $generated@@558)))
 :pattern ( ($generated@@528 ($generated@@288 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) ($generated@@229 $generated@@559 ($generated@@75 0))) (and (= ($generated@@288 ($generated@@386 $generated@@2 $generated@@559)) $generated@@559) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@559) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@559 ($generated@@75 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@145) (= (type $generated@@561) $generated@@64)) ($generated@@229 $generated@@560 ($generated@@241 $generated@@561))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@560)) $generated@@560) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@560) ($generated@@241 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@560 ($generated@@241 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@64)) ($generated@@229 $generated@@562 ($generated@@246 $generated@@563))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@562)) $generated@@562) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@4) $generated@@562) ($generated@@246 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@562 ($generated@@246 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@64)) ($generated@@229 $generated@@564 ($generated@@167 $generated@@565))) (and (= ($generated@@288 ($generated@@386 ($generated@@76 $generated@@145 $generated@@2) $generated@@564)) $generated@@564) ($generated@@132 ($generated@@386 ($generated@@76 $generated@@145 $generated@@2) $generated@@564) ($generated@@167 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@564 ($generated@@167 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@64)) ($generated@@229 $generated@@566 ($generated@@257 $generated@@567))) (and (= ($generated@@288 ($generated@@386 ($generated@@152 $generated@@145) $generated@@566)) $generated@@566) ($generated@@132 ($generated@@386 ($generated@@152 $generated@@145) $generated@@566) ($generated@@257 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@566 ($generated@@257 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 Int) ($generated@@570 Int) ) (! (let (($generated@@571 ($generated@@154 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@152 $generated@@571)) (=> (and (and (<= 0 $generated@@569) (<= $generated@@569 $generated@@570)) (< $generated@@570 ($generated@@153 $generated@@568))) (= ($generated@@293 ($generated@@150 $generated@@568 $generated@@569) (- $generated@@570 $generated@@569)) ($generated@@293 $generated@@568 $generated@@570)))))
 :weight 25
 :pattern ( ($generated@@293 $generated@@568 $generated@@570) ($generated@@150 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@572 ($generated@@167 $generated@@573) $generated@@574) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@572 $generated@@575)))) ($generated@@263 $generated@@575 $generated@@573 $generated@@574))
 :pattern ( ($generated@@81 $generated@@572 $generated@@575))
))))
 :pattern ( ($generated@@74 $generated@@572 ($generated@@167 $generated@@573) $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 Int) ($generated@@578 Int) ) (! (let (($generated@@579 ($generated@@154 (type $generated@@576))))
 (=> (= (type $generated@@576) ($generated@@152 $generated@@579)) (=> (and (and (<= 0 $generated@@577) (<= 0 $generated@@578)) (<= (+ $generated@@577 $generated@@578) ($generated@@153 $generated@@576))) (= ($generated@@150 ($generated@@150 $generated@@576 $generated@@577) $generated@@578) ($generated@@150 $generated@@576 (+ $generated@@577 $generated@@578))))))
 :pattern ( ($generated@@150 ($generated@@150 $generated@@576 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@136) (= (type $generated@@581) $generated@@64)) (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@582) (and ($generated@@134 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@64) ($generated@@74 $generated@@580 ($generated@@135 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@74 $generated@@580 ($generated@@135 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@263 ($generated@@143 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@263 ($generated@@143 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@136) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@262 $generated@@586) (and ($generated@@134 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@64) ($generated@@74 $generated@@584 ($generated@@135 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@74 $generated@@584 ($generated@@135 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@263 ($generated@@144 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@263 ($generated@@144 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@145) (= (type $generated@@589) $generated@@145)) (= ($generated@@228 ($generated@@253 $generated@@588) ($generated@@253 $generated@@589)) ($generated@@253 ($generated@@228 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@228 ($generated@@253 $generated@@588) ($generated@@253 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@251 $generated@@590))) ($generated@@253 ($generated@@288 ($generated@@8 $generated@@590))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@251 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ) (! (= ($generated@@288 ($generated@@253 $generated@@591)) ($generated@@253 ($generated@@288 $generated@@591)))
 :pattern ( ($generated@@288 ($generated@@253 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@154 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@152 $generated@@593)) (= ($generated@@153 $generated@@592) 0)) (= $generated@@592 ($generated@@278 $generated@@593))))
 :pattern ( ($generated@@153 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@76 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@301 ($generated@@82 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@301 $generated@@594) ($generated ($generated@@81 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@301 ($generated@@82 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@599) $generated@@2)) ($generated@@74 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@74 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@3)) ($generated@@74 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@4)) ($generated@@74 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@454)) ($generated@@74 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@145)) ($generated@@74 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@152 $generated@@145)) (= (type $generated@@609) $generated@@64)) (= ($generated@@132 $generated@@608 ($generated@@257 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@153 $generated@@608))) ($generated@@229 ($generated@@293 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@293 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@132 $generated@@608 ($generated@@257 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@153 $generated@@611))) (< ($generated@@529 ($generated@@386 $generated@@136 ($generated@@293 $generated@@611 $generated@@612))) ($generated@@281 $generated@@611))))
 :pattern ( ($generated@@529 ($generated@@386 $generated@@136 ($generated@@293 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@309 $generated@@145 $generated@@145)) (= (type $generated@@614) $generated@@64)) (= (type $generated@@615) $generated@@64)) ($generated@@132 $generated@@613 ($generated@@414 $generated@@614 $generated@@615))) (and (and ($generated@@132 ($generated@@307 $generated@@613) ($generated@@241 $generated@@614)) ($generated@@132 ($generated@@354 $generated@@613) ($generated@@241 $generated@@615))) ($generated@@132 ($generated@@385 $generated@@613) ($generated@@241 ($generated@@135 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@132 $generated@@613 ($generated@@414 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@327 $generated@@145 $generated@@145)) (= (type $generated@@617) $generated@@64)) (= (type $generated@@618) $generated@@64)) ($generated@@132 $generated@@616 ($generated@@422 $generated@@617 $generated@@618))) (and (and ($generated@@132 ($generated@@325 $generated@@616) ($generated@@246 $generated@@617)) ($generated@@132 ($generated@@365 $generated@@616) ($generated@@246 $generated@@618))) ($generated@@132 ($generated@@396 $generated@@616) ($generated@@246 ($generated@@135 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@132 $generated@@616 ($generated@@422 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@132 $generated@@619 $generated@@46))
 :pattern ( ($generated@@132 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@132 $generated@@620 $generated@@47))
 :pattern ( ($generated@@132 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@132 $generated@@621 $generated@@44))
 :pattern ( ($generated@@132 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@454) ($generated@@132 $generated@@622 $generated@@45))
 :pattern ( ($generated@@132 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@145) ($generated@@132 $generated@@623 $generated@@48))
 :pattern ( ($generated@@132 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 (T@U) Bool)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () Int)
(assert  (and (and (and (and (and (= (type $generated@@624) ($generated@@174 $generated@@77 $generated@@4)) (= (type $generated@@625) $generated@@77)) (= (type $generated@@626) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@627) ($generated@@152 $generated@@145))) (= (type $generated@@629) ($generated@@152 $generated@@145))) (= (type $generated@@630) ($generated@@152 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@632  (=> (= $generated@@624 ($generated@@173 $generated@@625 $generated@@626 $generated@@60 false)) (=> (and (= $generated@@627 ($generated@@253 ($generated@@151 ($generated@@151 ($generated@@151 ($generated@@278 $generated@@145) ($generated@@288 ($generated@@8 ($generated@@251 1)))) ($generated@@288 ($generated@@8 ($generated@@251 2)))) ($generated@@288 ($generated@@8 ($generated@@251 3)))))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@251 3)) (<= ($generated@@251 3) ($generated@@153 $generated@@627)))))))
(let (($generated@@633  (=> (and ($generated@@262 $generated@@626) ($generated@@628 $generated@@626)) (=> (and (and ($generated@@132 $generated@@629 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@629 ($generated@@257 $generated@@46) $generated@@626)) true) (=> (and (and (and ($generated@@132 $generated@@630 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@630 ($generated@@257 $generated@@46) $generated@@626)) true) (and (= 0 $generated@@631) (= (ControlFlow 0 3) 2))) $generated@@632)))))
$generated@@633)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U Int) T@U)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (T@U Int) T@U)
(declare-fun $generated@@263 (T@U Int) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@T T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (forall (($generated@@155 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@155)) 16)) (forall (($generated@@156 T@T) ) (! (= ($generated@@154 ($generated@@152 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@152 $generated@@156))
))) (forall (($generated@@157 T@U) ($generated@@158 Int) ) (! (let (($generated@@159 ($generated@@154 (type $generated@@157))))
(= (type ($generated@@150 $generated@@157 $generated@@158)) ($generated@@152 $generated@@159)))
 :pattern ( ($generated@@150 $generated@@157 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 (type $generated@@161)))
(= (type ($generated@@151 $generated@@160 $generated@@161)) ($generated@@152 $generated@@162)))
 :pattern ( ($generated@@151 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (let (($generated@@166 (type $generated@@164)))
 (=> (= (type $generated@@163) ($generated@@152 $generated@@166)) (=> (and (<= 0 $generated@@165) (<= $generated@@165 ($generated@@153 $generated@@163))) (= ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165) ($generated@@151 ($generated@@150 $generated@@163 $generated@@165) $generated@@164)))))
 :pattern ( ($generated@@150 ($generated@@151 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@64)) ($generated@@132 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@132 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 17)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@77 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@67 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@77) (= (type $generated@@222) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@223) ($generated@@66 $generated@@4))) (= (type $generated@@225) $generated@@77)) (= (type $generated@@226) ($generated@@66 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@136)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@64) (= (type $generated@@233) $generated@@64)) (= (type $generated@@234) $generated@@145)) (= (type $generated@@235) $generated@@145)) (= ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@132 ($generated@@228 $generated@@234 $generated@@235) ($generated@@135 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@136) (= (type $generated@@237) $generated@@136)) (= ($generated@@142 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@142 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 Int) ) (! (let (($generated@@240 ($generated@@154 (type $generated@@238))))
 (=> (and (= (type $generated@@238) ($generated@@152 $generated@@240)) (= $generated@@239 0)) (= ($generated@@150 $generated@@238 $generated@@239) $generated@@238)))
 :pattern ( ($generated@@150 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@229 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@145) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@229 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@132 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) ($generated@@152 $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) $generated@@64)) (and ($generated@@132 $generated@@259 ($generated@@257 $generated@@261)) ($generated@@229 $generated@@260 $generated@@261))) ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
 :pattern ( ($generated@@132 ($generated@@151 $generated@@259 $generated@@260) ($generated@@257 $generated@@261)))
)))
(assert  (and (forall (($generated@@264 T@U) ($generated@@265 Int) ) (! (let (($generated@@266 ($generated@@154 (type $generated@@264))))
(= (type ($generated@@262 $generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@262 $generated@@264 $generated@@265))
)) (forall (($generated@@267 T@U) ($generated@@268 Int) ) (! (let (($generated@@269 ($generated@@154 (type $generated@@267))))
(= (type ($generated@@263 $generated@@267 $generated@@268)) ($generated@@152 $generated@@269)))
 :pattern ( ($generated@@263 $generated@@267 $generated@@268))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 Int) ($generated@@272 Int) ) (! (let (($generated@@273 ($generated@@154 (type $generated@@270))))
 (=> (= (type $generated@@270) ($generated@@152 $generated@@273)) (=> (and (and (<= 0 $generated@@272) (< $generated@@272 $generated@@271)) (< $generated@@272 ($generated@@153 $generated@@270))) (= ($generated@@262 ($generated@@263 $generated@@270 $generated@@271) $generated@@272) ($generated@@262 $generated@@270 $generated@@272)))))
 :weight 25
 :pattern ( ($generated@@262 ($generated@@263 $generated@@270 $generated@@271) $generated@@272))
 :pattern ( ($generated@@262 $generated@@270 $generated@@272) ($generated@@263 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) $generated@@64)) (= (type $generated@@278) $generated@@145)) (= (type $generated@@279) $generated@@145)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@274 $generated@@280)) (= ($generated@@74 ($generated@@228 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@74 ($generated@@228 $generated@@278 $generated@@279) ($generated@@135 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 Int) ) (! (let (($generated@@283 ($generated@@154 (type $generated@@281))))
 (=> (= (type $generated@@281) ($generated@@152 $generated@@283)) (=> (and (<= 0 $generated@@282) (<= $generated@@282 ($generated@@153 $generated@@281))) (= ($generated@@153 ($generated@@150 $generated@@281 $generated@@282)) (- ($generated@@153 $generated@@281) $generated@@282)))))
 :pattern ( ($generated@@153 ($generated@@150 $generated@@281 $generated@@282)))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@136) (= ($generated@@134 $generated@@286) (= ($generated@@284 $generated@@286) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@154 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@152 $generated@@290)) (=> (and (<= 0 $generated@@289) (< $generated@@289 ($generated@@153 $generated@@288))) (< ($generated@@287 ($generated@@263 $generated@@288 $generated@@289)) ($generated@@287 $generated@@288)))))
 :pattern ( ($generated@@287 ($generated@@263 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@136) ($generated@@134 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@145) (= (type $generated@@293) $generated@@145)) (= $generated@@291 ($generated@@228 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@134 $generated@@291))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@152 $generated@@295))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@153 ($generated@@294 $generated@@296)) 0)
 :pattern ( ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 Int) ) (! (let (($generated@@299 ($generated@@154 (type $generated@@297))))
 (=> (= (type $generated@@297) ($generated@@152 $generated@@299)) (=> (and (< 0 $generated@@298) (<= $generated@@298 ($generated@@153 $generated@@297))) (< ($generated@@287 ($generated@@150 $generated@@297 $generated@@298)) ($generated@@287 $generated@@297)))))
 :pattern ( ($generated@@287 ($generated@@150 $generated@@297 $generated@@298)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (let (($generated@@302 (type $generated@@301)))
 (=> (= (type $generated@@300) ($generated@@152 $generated@@302)) (= ($generated@@153 ($generated@@151 $generated@@300 $generated@@301)) (+ 1 ($generated@@153 $generated@@300)))))
 :pattern ( ($generated@@151 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@145)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@64) (= (type $generated@@307) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@275 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@74 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@275 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 Int) ($generated@@310 Int) ) (! (let (($generated@@311 ($generated@@154 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@152 $generated@@311)) (=> (and (and (<= 0 $generated@@309) (<= 0 $generated@@310)) (< $generated@@310 (- ($generated@@153 $generated@@308) $generated@@309))) (= ($generated@@262 ($generated@@150 $generated@@308 $generated@@309) $generated@@310) ($generated@@262 $generated@@308 (+ $generated@@310 $generated@@309))))))
 :weight 25
 :pattern ( ($generated@@262 ($generated@@150 $generated@@308 $generated@@309) $generated@@310))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@76 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@79 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@76 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@81 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@81 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@76 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@81 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@168 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@168 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 Int) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
 (=> (= (type $generated@@357) ($generated@@152 $generated@@360)) (and (=> (= $generated@@358 ($generated@@153 $generated@@357)) (= ($generated@@262 ($generated@@151 $generated@@357 $generated@@359) $generated@@358) $generated@@359)) (=> (not (= $generated@@358 ($generated@@153 $generated@@357))) (= ($generated@@262 ($generated@@151 $generated@@357 $generated@@359) $generated@@358) ($generated@@262 $generated@@357 $generated@@358))))))
 :pattern ( ($generated@@262 ($generated@@151 $generated@@357 $generated@@359) $generated@@358))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@322 (type $generated@@361))))
(let (($generated@@363 ($generated@@321 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@320 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@319 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@318 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@322 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@76 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@322 (type $generated@@368))))
(let (($generated@@370 ($generated@@321 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@320 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@319 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@81 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@340 (type $generated@@372))))
(let (($generated@@374 ($generated@@339 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@338 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@337 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@336 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@340 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@76 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@340 (type $generated@@379))))
(let (($generated@@381 ($generated@@339 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@338 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@337 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@384) $generated@@64)) (= ($generated@@132 $generated@@383 ($generated@@167 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@383 $generated@@385)))) ($generated@@229 $generated@@385 $generated@@384))
 :pattern ( ($generated@@81 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@132 $generated@@383 ($generated@@167 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@241 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@145) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@275 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@241 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@390 ($generated@@246 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@145) ($generated@@0 ($generated@@81 $generated@@390 $generated@@393))) ($generated@@275 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@81 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@390 ($generated@@246 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@81 ($generated@@313 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@81 ($generated@@313 $generated@@395) $generated@@394)))
)))
(assert  (and (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@396 $generated@@399)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@396 $generated@@399))
)) (forall (($generated@@400 T@T) ($generated@@401 T@U) ) (! (= (type ($generated@@397 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@397 $generated@@400 $generated@@401))
))) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@322 (type $generated@@402))))
(let (($generated@@404 ($generated@@321 (type $generated@@402))))
(= (type ($generated@@398 $generated@@402)) ($generated@@76 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@398 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@406) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@405) ($generated@@143 ($generated@@397 $generated@@136 $generated@@406)))) (= ($generated@@81 ($generated@@398 $generated@@405) ($generated@@143 ($generated@@397 $generated@@136 $generated@@406))) ($generated@@144 ($generated@@397 $generated@@136 $generated@@406))))))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@340 (type $generated@@410))))
(let (($generated@@412 ($generated@@339 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@76 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@414) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@413) ($generated@@143 ($generated@@397 $generated@@136 $generated@@414)))) (= ($generated@@81 ($generated@@408 $generated@@413) ($generated@@143 ($generated@@397 $generated@@136 $generated@@414))) ($generated@@144 ($generated@@397 $generated@@136 $generated@@414))))))
 :pattern ( ($generated@@81 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@321 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@320 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@81 ($generated@@365 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@81 ($generated@@318 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@339 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@338 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@81 ($generated@@336 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@428) $generated@@432))) (and ($generated@@275 ($generated@@81 ($generated@@398 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@275 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@428) $generated@@432))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@74 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@437) $generated@@64)) (= (type $generated@@438) $generated@@64)) (= (type $generated@@439) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@436) $generated@@440))) (and ($generated@@275 ($generated@@81 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@275 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@74 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 Int) ) (! (let (($generated@@443 ($generated@@154 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@152 $generated@@443)) (=> (and (<= 0 $generated@@442) (<= $generated@@442 ($generated@@153 $generated@@441))) (= ($generated@@153 ($generated@@263 $generated@@441 $generated@@442)) $generated@@442))))
 :pattern ( ($generated@@153 ($generated@@263 $generated@@441 $generated@@442)))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@76 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@340 (type $generated@@446))))
(let (($generated@@448 ($generated@@339 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@338 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@337 $generated@@448 $generated@@447)) (= ($generated@@336 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@336 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@340 (type $generated@@449))))
(let (($generated@@451 ($generated@@339 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@338 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@337 $generated@@451 $generated@@450)) (= ($generated@@376 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@376 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@340 (type $generated@@452))))
(let (($generated@@454 ($generated@@339 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@338 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@337 $generated@@454 $generated@@453)) (= ($generated@@407 $generated@@452) ($generated@@444 $generated@@145))))))
 :pattern ( ($generated@@407 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@322 (type $generated@@455))))
(let (($generated@@457 ($generated@@321 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@320 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@319 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@396 $generated@@455) ($generated@@303 ($generated@@228 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@396 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@340 (type $generated@@460))))
(let (($generated@@462 ($generated@@339 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@338 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@337 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@407 $generated@@460) ($generated@@303 ($generated@@228 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@407 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@145) ($generated@@229 $generated@@465 $generated@@46)) (and (= ($generated@@303 ($generated@@397 $generated@@2 $generated@@465)) $generated@@465) ($generated@@132 ($generated@@397 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) ($generated@@229 $generated@@466 $generated@@47)) (and (= ($generated@@303 ($generated@@397 $generated@@3 $generated@@466)) $generated@@466) ($generated@@132 ($generated@@397 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) ($generated@@229 $generated@@467 $generated@@44)) (and (= ($generated@@303 ($generated@@397 $generated@@4 $generated@@467)) $generated@@467) ($generated@@132 ($generated@@397 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 20))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) ($generated@@229 $generated@@469 $generated@@45)) (and (= ($generated@@303 ($generated@@397 $generated@@468 $generated@@469)) $generated@@469) ($generated@@132 ($generated@@397 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@229 ($generated@@303 $generated@@470) $generated@@471) ($generated@@132 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@229 ($generated@@303 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@79 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@76 $generated@@473 $generated@@2)) (<= 0 ($generated@@312 $generated@@472))))
 :pattern ( ($generated@@312 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@154 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@152 $generated@@475)) (<= 0 ($generated@@153 $generated@@474))))
 :pattern ( ($generated@@153 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@425 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@425 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@480 ($generated@@425 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@425 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@72 ($generated@@425 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@433 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@433 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@433 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@433 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@64) (= (type $generated@@495) $generated@@64)) (= ($generated@@72 ($generated@@433 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@145) (= (type $generated@@497) $generated@@145)) (= ($generated@@284 ($generated@@228 $generated@@496 $generated@@497)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@64) (= (type $generated@@501) $generated@@64)) (= ($generated@@498 ($generated@@135 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@135 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@64) (= (type $generated@@505) $generated@@64)) (= ($generated@@502 ($generated@@135 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@135 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@145) (= (type $generated@@507) $generated@@145)) (= ($generated@@143 ($generated@@228 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@228 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) (= (type $generated@@509) $generated@@145)) (= ($generated@@144 ($generated@@228 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@228 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@152 $generated@@145)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@510 ($generated@@257 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@153 $generated@@510))) ($generated@@275 ($generated@@262 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@262 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@74 $generated@@510 ($generated@@257 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@75 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@75 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@241 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@241 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@64)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@520 ($generated@@246 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@246 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@64)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@524 ($generated@@167 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@167 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@72 ($generated@@167 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@528 ($generated@@257 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@257 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@257 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
(= ($generated@@397 $generated@@533 ($generated@@303 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@303 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) (= ($generated@@132 $generated@@534 ($generated@@425 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@318 $generated@@534) $generated@@537))) (and ($generated@@229 ($generated@@81 ($generated@@398 $generated@@534) $generated@@537) $generated@@536) ($generated@@229 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@534) $generated@@537))
 :pattern ( ($generated@@81 ($generated@@318 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@132 $generated@@534 ($generated@@425 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) $generated@@64)) (= ($generated@@132 $generated@@538 ($generated@@433 $generated@@539 $generated@@540)) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@538) $generated@@541))) (and ($generated@@229 ($generated@@81 ($generated@@408 $generated@@538) $generated@@541) $generated@@540) ($generated@@229 $generated@@541 $generated@@539)))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@538) $generated@@541))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@538) $generated@@541))
))))
 :pattern ( ($generated@@132 $generated@@538 ($generated@@433 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@145)) (< ($generated@@542 $generated@@544) ($generated@@543 ($generated@@228 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@228 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@145)) (< ($generated@@542 $generated@@547) ($generated@@543 ($generated@@228 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@228 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@64)) ($generated@@229 $generated@@548 ($generated@@425 $generated@@549 $generated@@550))) (and (= ($generated@@303 ($generated@@397 ($generated@@320 $generated@@145 $generated@@145) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@397 ($generated@@320 $generated@@145 $generated@@145) $generated@@548) ($generated@@425 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@425 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) $generated@@64)) ($generated@@229 $generated@@551 ($generated@@433 $generated@@552 $generated@@553))) (and (= ($generated@@303 ($generated@@397 ($generated@@338 $generated@@145 $generated@@145) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@397 ($generated@@338 $generated@@145 $generated@@145) $generated@@551) ($generated@@433 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@433 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@64) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) $generated@@145)) ($generated@@229 $generated@@556 ($generated@@135 $generated@@554 $generated@@555))) (and (= ($generated@@303 ($generated@@397 $generated@@136 $generated@@556)) $generated@@556) ($generated@@132 ($generated@@397 $generated@@136 $generated@@556) ($generated@@135 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@556 ($generated@@135 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@81 ($generated@@444 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@81 ($generated@@444 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@69)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@64) (= (type $generated@@562) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@135 $generated@@561 $generated@@562)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@561 $generated@@562))
)))
(assert  (and (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@154 (type $generated@@565))))
(= (type ($generated@@563 $generated@@565)) ($generated@@152 $generated@@566)))
 :pattern ( ($generated@@563 $generated@@565))
)) (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@154 (type $generated@@567))))
(= (type ($generated@@564 $generated@@567)) $generated@@568))
 :pattern ( ($generated@@564 $generated@@567))
))))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (! (let (($generated@@571 (type $generated@@570)))
 (=> (= (type $generated@@569) ($generated@@152 $generated@@571)) (and (= ($generated@@563 ($generated@@151 $generated@@569 $generated@@570)) $generated@@569) (= ($generated@@564 ($generated@@151 $generated@@569 $generated@@570)) $generated@@570))))
 :pattern ( ($generated@@151 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@136) (= ($generated@@542 ($generated@@303 $generated@@572)) ($generated@@543 $generated@@572)))
 :pattern ( ($generated@@542 ($generated@@303 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@145) ($generated@@229 $generated@@573 ($generated@@75 0))) (and (= ($generated@@303 ($generated@@397 $generated@@2 $generated@@573)) $generated@@573) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@573) ($generated@@75 0))))
 :pattern ( ($generated@@229 $generated@@573 ($generated@@75 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@64)) ($generated@@229 $generated@@574 ($generated@@241 $generated@@575))) (and (= ($generated@@303 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@574)) $generated@@574) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@574) ($generated@@241 $generated@@575))))
 :pattern ( ($generated@@229 $generated@@574 ($generated@@241 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@64)) ($generated@@229 $generated@@576 ($generated@@246 $generated@@577))) (and (= ($generated@@303 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@576)) $generated@@576) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@4) $generated@@576) ($generated@@246 $generated@@577))))
 :pattern ( ($generated@@229 $generated@@576 ($generated@@246 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@145) (= (type $generated@@579) $generated@@64)) ($generated@@229 $generated@@578 ($generated@@167 $generated@@579))) (and (= ($generated@@303 ($generated@@397 ($generated@@76 $generated@@145 $generated@@2) $generated@@578)) $generated@@578) ($generated@@132 ($generated@@397 ($generated@@76 $generated@@145 $generated@@2) $generated@@578) ($generated@@167 $generated@@579))))
 :pattern ( ($generated@@229 $generated@@578 ($generated@@167 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@145) (= (type $generated@@581) $generated@@64)) ($generated@@229 $generated@@580 ($generated@@257 $generated@@581))) (and (= ($generated@@303 ($generated@@397 ($generated@@152 $generated@@145) $generated@@580)) $generated@@580) ($generated@@132 ($generated@@397 ($generated@@152 $generated@@145) $generated@@580) ($generated@@257 $generated@@581))))
 :pattern ( ($generated@@229 $generated@@580 ($generated@@257 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ($generated@@584 Int) ) (! (let (($generated@@585 ($generated@@154 (type $generated@@582))))
 (=> (= (type $generated@@582) ($generated@@152 $generated@@585)) (=> (and (and (<= 0 $generated@@583) (<= $generated@@583 $generated@@584)) (< $generated@@584 ($generated@@153 $generated@@582))) (= ($generated@@262 ($generated@@150 $generated@@582 $generated@@583) (- $generated@@584 $generated@@583)) ($generated@@262 $generated@@582 $generated@@584)))))
 :weight 25
 :pattern ( ($generated@@262 $generated@@582 $generated@@584) ($generated@@150 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@586 ($generated@@167 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@586 $generated@@589)))) ($generated@@275 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@81 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@74 $generated@@586 ($generated@@167 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 Int) ($generated@@592 Int) ) (! (let (($generated@@593 ($generated@@154 (type $generated@@590))))
 (=> (= (type $generated@@590) ($generated@@152 $generated@@593)) (=> (and (and (<= 0 $generated@@591) (<= 0 $generated@@592)) (<= (+ $generated@@591 $generated@@592) ($generated@@153 $generated@@590))) (= ($generated@@150 ($generated@@150 $generated@@590 $generated@@591) $generated@@592) ($generated@@150 $generated@@590 (+ $generated@@591 $generated@@592))))))
 :pattern ( ($generated@@150 ($generated@@150 $generated@@590 $generated@@591) $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@136) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@596) (and ($generated@@134 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@64) ($generated@@74 $generated@@594 ($generated@@135 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@135 $generated@@595 $generated@@597) $generated@@596))
))))) ($generated@@275 ($generated@@143 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@275 ($generated@@143 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@136) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@600) (and ($generated@@134 $generated@@598) (exists (($generated@@601 T@U) ) (!  (and (= (type $generated@@601) $generated@@64) ($generated@@74 $generated@@598 ($generated@@135 $generated@@601 $generated@@599) $generated@@600))
 :pattern ( ($generated@@74 $generated@@598 ($generated@@135 $generated@@601 $generated@@599) $generated@@600))
))))) ($generated@@275 ($generated@@144 $generated@@598) $generated@@599 $generated@@600))
 :pattern ( ($generated@@275 ($generated@@144 $generated@@598) $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@145) (= (type $generated@@603) $generated@@145)) (= ($generated@@228 ($generated@@253 $generated@@602) ($generated@@253 $generated@@603)) ($generated@@253 ($generated@@228 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@228 ($generated@@253 $generated@@602) ($generated@@253 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@251 $generated@@604))) ($generated@@253 ($generated@@303 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@251 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@303 ($generated@@253 $generated@@605)) ($generated@@253 ($generated@@303 $generated@@605)))
 :pattern ( ($generated@@303 ($generated@@253 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@154 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@152 $generated@@607)) (= ($generated@@153 $generated@@606) 0)) (= $generated@@606 ($generated@@294 $generated@@607))))
 :pattern ( ($generated@@153 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 Int) ) (! (let (($generated@@610 ($generated@@154 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@152 $generated@@610)) (= $generated@@609 0)) (= ($generated@@263 $generated@@608 $generated@@609) ($generated@@294 $generated@@610))))
 :pattern ( ($generated@@263 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (! (let (($generated@@614 (type $generated@@612)))
 (=> (and (and (= (type $generated@@611) ($generated@@76 $generated@@614 $generated@@2)) (= (type $generated@@613) $generated@@2)) (<= 0 ($generated $generated@@613))) (= ($generated@@312 ($generated@@82 $generated@@611 $generated@@612 $generated@@613)) (+ (- ($generated@@312 $generated@@611) ($generated ($generated@@81 $generated@@611 $generated@@612))) ($generated $generated@@613)))))
 :pattern ( ($generated@@312 ($generated@@82 $generated@@611 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@616) $generated@@2)) ($generated@@74 $generated@@616 $generated@@46 $generated@@615))
 :pattern ( ($generated@@74 $generated@@616 $generated@@46 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) $generated@@3)) ($generated@@74 $generated@@618 $generated@@47 $generated@@617))
 :pattern ( ($generated@@74 $generated@@618 $generated@@47 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@4)) ($generated@@74 $generated@@620 $generated@@44 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@44 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@622) $generated@@468)) ($generated@@74 $generated@@622 $generated@@45 $generated@@621))
 :pattern ( ($generated@@74 $generated@@622 $generated@@45 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@624) $generated@@145)) ($generated@@74 $generated@@624 $generated@@48 $generated@@623))
 :pattern ( ($generated@@74 $generated@@624 $generated@@48 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@152 $generated@@145)) (= (type $generated@@626) $generated@@64)) (= ($generated@@132 $generated@@625 ($generated@@257 $generated@@626)) (forall (($generated@@627 Int) ) (!  (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@153 $generated@@625))) ($generated@@229 ($generated@@262 $generated@@625 $generated@@627) $generated@@626))
 :pattern ( ($generated@@262 $generated@@625 $generated@@627))
))))
 :pattern ( ($generated@@132 $generated@@625 ($generated@@257 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@153 $generated@@628))) (< ($generated@@543 ($generated@@397 $generated@@136 ($generated@@262 $generated@@628 $generated@@629))) ($generated@@287 $generated@@628))))
 :pattern ( ($generated@@543 ($generated@@397 $generated@@136 ($generated@@262 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@320 $generated@@145 $generated@@145)) (= (type $generated@@631) $generated@@64)) (= (type $generated@@632) $generated@@64)) ($generated@@132 $generated@@630 ($generated@@425 $generated@@631 $generated@@632))) (and (and ($generated@@132 ($generated@@318 $generated@@630) ($generated@@241 $generated@@631)) ($generated@@132 ($generated@@365 $generated@@630) ($generated@@241 $generated@@632))) ($generated@@132 ($generated@@396 $generated@@630) ($generated@@241 ($generated@@135 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@132 $generated@@630 ($generated@@425 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@338 $generated@@145 $generated@@145)) (= (type $generated@@634) $generated@@64)) (= (type $generated@@635) $generated@@64)) ($generated@@132 $generated@@633 ($generated@@433 $generated@@634 $generated@@635))) (and (and ($generated@@132 ($generated@@336 $generated@@633) ($generated@@246 $generated@@634)) ($generated@@132 ($generated@@376 $generated@@633) ($generated@@246 $generated@@635))) ($generated@@132 ($generated@@407 $generated@@633) ($generated@@246 ($generated@@135 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@132 $generated@@633 ($generated@@433 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@132 $generated@@636 $generated@@46))
 :pattern ( ($generated@@132 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@132 $generated@@637 $generated@@47))
 :pattern ( ($generated@@132 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@132 $generated@@638 $generated@@44))
 :pattern ( ($generated@@132 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@468) ($generated@@132 $generated@@639 $generated@@45))
 :pattern ( ($generated@@132 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@145) ($generated@@132 $generated@@640 $generated@@48))
 :pattern ( ($generated@@132 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () Int)
(assert  (and (and (and (and (and (= (type $generated@@641) ($generated@@174 $generated@@77 $generated@@4)) (= (type $generated@@642) $generated@@77)) (= (type $generated@@643) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@644) ($generated@@152 $generated@@145))) (= (type $generated@@646) ($generated@@152 $generated@@145))) (= (type $generated@@647) ($generated@@152 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@649  (=> (and (= $generated@@641 ($generated@@173 $generated@@642 $generated@@643 $generated@@60 false)) (= $generated@@644 ($generated@@253 ($generated@@151 ($generated@@151 ($generated@@151 ($generated@@294 $generated@@145) ($generated@@303 ($generated@@8 ($generated@@251 1)))) ($generated@@303 ($generated@@8 ($generated@@251 2)))) ($generated@@303 ($generated@@8 ($generated@@251 3))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@251 2)) (<= ($generated@@251 2) ($generated@@153 $generated@@644)))) (=> (and (<= 0 ($generated@@251 2)) (<= ($generated@@251 2) ($generated@@153 $generated@@644))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= ($generated@@251 2) ($generated@@251 1)) (<= ($generated@@251 1) ($generated@@153 $generated@@644)))))))))
(let (($generated@@650  (=> (and ($generated@@274 $generated@@643) ($generated@@645 $generated@@643)) (=> (and (and ($generated@@132 $generated@@646 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@646 ($generated@@257 $generated@@46) $generated@@643)) true) (=> (and (and (and ($generated@@132 $generated@@647 ($generated@@257 $generated@@46)) ($generated@@74 $generated@@647 ($generated@@257 $generated@@46) $generated@@643)) true) (and (= 0 $generated@@648) (= (ControlFlow 0 4) 2))) $generated@@649)))))
$generated@@650)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@250 (T@U Int) T@U)
(declare-fun $generated@@251 (T@U Int) T@U)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (and (and (and (forall (($generated@@241 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@241)) 17)) (forall (($generated@@242 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@237 $generated@@243 $generated@@244)) ($generated@@239 $generated@@245)))
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@238 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) ($generated@@239 $generated@@145)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@64)) (and ($generated@@132 $generated@@247 ($generated@@238 $generated@@249)) ($generated@@212 $generated@@248 $generated@@249))) ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
 :pattern ( ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
)))
(assert  (and (forall (($generated@@253 T@U) ($generated@@254 Int) ) (! (let (($generated@@255 ($generated@@240 (type $generated@@253))))
(= (type ($generated@@250 $generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@250 $generated@@253 $generated@@254))
)) (forall (($generated@@256 T@U) ($generated@@257 Int) ) (! (let (($generated@@258 ($generated@@240 (type $generated@@256))))
(= (type ($generated@@251 $generated@@256 $generated@@257)) ($generated@@239 $generated@@258)))
 :pattern ( ($generated@@251 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 Int) ($generated@@261 Int) ) (! (let (($generated@@262 ($generated@@240 (type $generated@@259))))
 (=> (= (type $generated@@259) ($generated@@239 $generated@@262)) (=> (and (and (<= 0 $generated@@261) (< $generated@@261 $generated@@260)) (< $generated@@261 ($generated@@252 $generated@@259))) (= ($generated@@250 ($generated@@251 $generated@@259 $generated@@260) $generated@@261) ($generated@@250 $generated@@259 $generated@@261)))))
 :weight 25
 :pattern ( ($generated@@250 ($generated@@251 $generated@@259 $generated@@260) $generated@@261))
 :pattern ( ($generated@@250 $generated@@259 $generated@@261) ($generated@@251 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) $generated@@64)) (= (type $generated@@267) $generated@@145)) (= (type $generated@@268) $generated@@145)) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@263 $generated@@269)) (= ($generated@@74 ($generated@@211 $generated@@267 $generated@@268) ($generated@@135 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@267 $generated@@268) ($generated@@135 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@136) (= ($generated@@134 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 Int) ) (! (let (($generated@@276 ($generated@@240 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@239 $generated@@276)) (=> (and (<= 0 $generated@@275) (< $generated@@275 ($generated@@252 $generated@@274))) (< ($generated@@273 ($generated@@251 $generated@@274 $generated@@275)) ($generated@@273 $generated@@274)))))
 :pattern ( ($generated@@273 ($generated@@251 $generated@@274 $generated@@275)))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@136) ($generated@@134 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@145) (= (type $generated@@279) $generated@@145)) (= $generated@@277 ($generated@@211 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@134 $generated@@277))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@239 $generated@@281))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@252 ($generated@@280 $generated@@282)) 0)
 :pattern ( ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
 (=> (= (type $generated@@283) ($generated@@239 $generated@@285)) (= ($generated@@252 ($generated@@237 $generated@@283 $generated@@284)) (+ 1 ($generated@@252 $generated@@283)))))
 :pattern ( ($generated@@237 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@145)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@151 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@151 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
 (=> (= (type $generated@@336) ($generated@@239 $generated@@339)) (and (=> (= $generated@@337 ($generated@@252 $generated@@336)) (= ($generated@@250 ($generated@@237 $generated@@336 $generated@@338) $generated@@337) $generated@@338)) (=> (not (= $generated@@337 ($generated@@252 $generated@@336))) (= ($generated@@250 ($generated@@237 $generated@@336 $generated@@338) $generated@@337) ($generated@@250 $generated@@336 $generated@@337))))))
 :pattern ( ($generated@@250 ($generated@@237 $generated@@336 $generated@@338) $generated@@337))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(let (($generated@@342 ($generated@@300 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@299 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@298 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@297 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(let (($generated@@349 ($generated@@300 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@299 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@298 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@319 (type $generated@@351))))
(let (($generated@@353 ($generated@@318 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@317 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@316 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@315 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@76 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@363) $generated@@64)) (= ($generated@@132 $generated@@362 ($generated@@150 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@362 $generated@@364)))) ($generated@@212 $generated@@364 $generated@@363))
 :pattern ( ($generated@@81 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@132 $generated@@362 ($generated@@150 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@221 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@145) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@264 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@221 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@370) $generated@@64)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@369 ($generated@@226 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@145) ($generated@@0 ($generated@@81 $generated@@369 $generated@@372))) ($generated@@264 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@81 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@74 $generated@@369 ($generated@@226 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@81 ($generated@@292 $generated@@374) $generated@@373)))
)))
(assert  (and (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@375 $generated@@378)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@375 $generated@@378))
)) (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@376 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@376 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@301 (type $generated@@381))))
(let (($generated@@383 ($generated@@300 (type $generated@@381))))
(= (type ($generated@@377 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@377 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@384) ($generated@@143 ($generated@@376 $generated@@136 $generated@@385)))) (= ($generated@@81 ($generated@@377 $generated@@384) ($generated@@143 ($generated@@376 $generated@@136 $generated@@385))) ($generated@@144 ($generated@@376 $generated@@136 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@319 (type $generated@@389))))
(let (($generated@@391 ($generated@@318 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@392) ($generated@@143 ($generated@@376 $generated@@136 $generated@@393)))) (= ($generated@@81 ($generated@@387 $generated@@392) ($generated@@143 ($generated@@376 $generated@@136 $generated@@393))) ($generated@@144 ($generated@@376 $generated@@136 $generated@@393))))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@300 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@299 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@344 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@377 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@344 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@318 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@317 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@81 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@64)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@407) $generated@@411))) (and ($generated@@264 ($generated@@81 ($generated@@377 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@264 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@64)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@81 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@74 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 Int) ) (! (let (($generated@@422 ($generated@@240 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@239 $generated@@422)) (=> (and (<= 0 $generated@@421) (<= $generated@@421 ($generated@@252 $generated@@420))) (= ($generated@@252 ($generated@@251 $generated@@420 $generated@@421)) $generated@@421))))
 :pattern ( ($generated@@252 ($generated@@251 $generated@@420 $generated@@421)))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@315 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@315 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@319 (type $generated@@428))))
(let (($generated@@430 ($generated@@318 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@317 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@316 $generated@@430 $generated@@429)) (= ($generated@@355 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@355 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@319 (type $generated@@431))))
(let (($generated@@433 ($generated@@318 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@317 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@316 $generated@@433 $generated@@432)) (= ($generated@@386 $generated@@431) ($generated@@423 $generated@@145))))))
 :pattern ( ($generated@@386 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@301 (type $generated@@434))))
(let (($generated@@436 ($generated@@300 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@299 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@298 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@145) (= (type $generated@@438) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@434) ($generated@@286 ($generated@@211 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@375 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@319 (type $generated@@439))))
(let (($generated@@441 ($generated@@318 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@317 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@316 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@145) (= (type $generated@@443) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@439) ($generated@@286 ($generated@@211 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) ($generated@@212 $generated@@444 $generated@@46)) (and (= ($generated@@286 ($generated@@376 $generated@@2 $generated@@444)) $generated@@444) ($generated@@132 ($generated@@376 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) ($generated@@212 $generated@@445 $generated@@47)) (and (= ($generated@@286 ($generated@@376 $generated@@3 $generated@@445)) $generated@@445) ($generated@@132 ($generated@@376 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@145) ($generated@@212 $generated@@446 $generated@@44)) (and (= ($generated@@286 ($generated@@376 $generated@@4 $generated@@446)) $generated@@446) ($generated@@132 ($generated@@376 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) ($generated@@212 $generated@@448 $generated@@45)) (and (= ($generated@@286 ($generated@@376 $generated@@447 $generated@@448)) $generated@@448) ($generated@@132 ($generated@@376 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@64) (= ($generated@@212 ($generated@@286 $generated@@449) $generated@@450) ($generated@@132 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@212 ($generated@@286 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@79 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@76 $generated@@452 $generated@@2)) (<= 0 ($generated@@291 $generated@@451))))
 :pattern ( ($generated@@291 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@240 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@239 $generated@@454)) (<= 0 ($generated@@252 $generated@@453))))
 :pattern ( ($generated@@252 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@404 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@404 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@404 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@404 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@404 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@412 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@412 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@72 ($generated@@412 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@270 ($generated@@211 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@135 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@135 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) (= (type $generated@@486) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@211 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) (= (type $generated@@488) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@211 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@239 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@238 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@252 $generated@@489))) ($generated@@264 ($generated@@250 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@250 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@238 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@221 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@221 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@226 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@226 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@150 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@238 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@238 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@238 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@376 $generated@@512 ($generated@@286 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@286 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@132 $generated@@513 ($generated@@404 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@513) $generated@@516))) (and ($generated@@212 ($generated@@81 ($generated@@377 $generated@@513) $generated@@516) $generated@@515) ($generated@@212 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@132 $generated@@513 ($generated@@404 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@132 $generated@@517 ($generated@@412 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@517) $generated@@520))) (and ($generated@@212 ($generated@@81 ($generated@@387 $generated@@517) $generated@@520) $generated@@519) ($generated@@212 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@132 $generated@@517 ($generated@@412 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@211 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@211 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@211 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@211 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@404 $generated@@528 $generated@@529))) (and (= ($generated@@286 ($generated@@376 ($generated@@299 $generated@@145 $generated@@145) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@376 ($generated@@299 $generated@@145 $generated@@145) $generated@@527) ($generated@@404 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@404 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@412 $generated@@531 $generated@@532))) (and (= ($generated@@286 ($generated@@376 ($generated@@317 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@376 ($generated@@317 $generated@@145 $generated@@145) $generated@@530) ($generated@@412 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@145)) ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534))) (and (= ($generated@@286 ($generated@@376 $generated@@136 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@376 $generated@@136 $generated@@535) ($generated@@135 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@423 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@423 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@135 $generated@@540 $generated@@541)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@240 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544)) ($generated@@239 $generated@@545)))
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@240 (type $generated@@546))))
(= (type ($generated@@543 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (=> (= (type $generated@@548) ($generated@@239 $generated@@550)) (and (= ($generated@@542 ($generated@@237 $generated@@548 $generated@@549)) $generated@@548) (= ($generated@@543 ($generated@@237 $generated@@548 $generated@@549)) $generated@@549))))
 :pattern ( ($generated@@237 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@136) (= ($generated@@521 ($generated@@286 $generated@@551)) ($generated@@522 $generated@@551)))
 :pattern ( ($generated@@521 ($generated@@286 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@145) ($generated@@212 $generated@@552 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@376 $generated@@2 $generated@@552)) $generated@@552) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@552) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@552 ($generated@@75 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@212 $generated@@553 ($generated@@221 $generated@@554))) (and (= ($generated@@286 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@553) ($generated@@221 $generated@@554))))
 :pattern ( ($generated@@212 $generated@@553 ($generated@@221 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) ($generated@@212 $generated@@555 ($generated@@226 $generated@@556))) (and (= ($generated@@286 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@555) ($generated@@226 $generated@@556))))
 :pattern ( ($generated@@212 $generated@@555 ($generated@@226 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@64)) ($generated@@212 $generated@@557 ($generated@@150 $generated@@558))) (and (= ($generated@@286 ($generated@@376 ($generated@@76 $generated@@145 $generated@@2) $generated@@557)) $generated@@557) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@2) $generated@@557) ($generated@@150 $generated@@558))))
 :pattern ( ($generated@@212 $generated@@557 ($generated@@150 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@64)) ($generated@@212 $generated@@559 ($generated@@238 $generated@@560))) (and (= ($generated@@286 ($generated@@376 ($generated@@239 $generated@@145) $generated@@559)) $generated@@559) ($generated@@132 ($generated@@376 ($generated@@239 $generated@@145) $generated@@559) ($generated@@238 $generated@@560))))
 :pattern ( ($generated@@212 $generated@@559 ($generated@@238 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@561 $generated@@564)))) ($generated@@264 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@81 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@263 $generated@@567) (and ($generated@@134 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@264 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@264 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@136) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@263 $generated@@571) (and ($generated@@134 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@264 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@264 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@573) ($generated@@233 $generated@@574)) ($generated@@233 ($generated@@211 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@573) ($generated@@233 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@231 $generated@@575))) ($generated@@233 ($generated@@286 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@231 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@286 ($generated@@233 $generated@@576)) ($generated@@233 ($generated@@286 $generated@@576)))
 :pattern ( ($generated@@286 ($generated@@233 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@240 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@239 $generated@@578)) (= ($generated@@252 $generated@@577) 0)) (= $generated@@577 ($generated@@280 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (! (let (($generated@@581 ($generated@@240 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@239 $generated@@581)) (= $generated@@580 0)) (= ($generated@@251 $generated@@579 $generated@@580) ($generated@@280 $generated@@581))))
 :pattern ( ($generated@@251 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@76 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@291 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@291 $generated@@582) ($generated ($generated@@81 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@2)) ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@3)) ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@4)) ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@447)) ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@145)) ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@239 $generated@@145)) (= (type $generated@@597) $generated@@64)) (= ($generated@@132 $generated@@596 ($generated@@238 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@252 $generated@@596))) ($generated@@212 ($generated@@250 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@250 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@132 $generated@@596 ($generated@@238 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@239 $generated@@145)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@252 $generated@@599))) (< ($generated@@522 ($generated@@376 $generated@@136 ($generated@@250 $generated@@599 $generated@@600))) ($generated@@273 $generated@@599))))
 :pattern ( ($generated@@522 ($generated@@376 $generated@@136 ($generated@@250 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@132 $generated@@601 ($generated@@404 $generated@@602 $generated@@603))) (and (and ($generated@@132 ($generated@@297 $generated@@601) ($generated@@221 $generated@@602)) ($generated@@132 ($generated@@344 $generated@@601) ($generated@@221 $generated@@603))) ($generated@@132 ($generated@@375 $generated@@601) ($generated@@221 ($generated@@135 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@132 $generated@@601 ($generated@@404 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@132 $generated@@604 ($generated@@412 $generated@@605 $generated@@606))) (and (and ($generated@@132 ($generated@@315 $generated@@604) ($generated@@226 $generated@@605)) ($generated@@132 ($generated@@355 $generated@@604) ($generated@@226 $generated@@606))) ($generated@@132 ($generated@@386 $generated@@604) ($generated@@226 ($generated@@135 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@132 $generated@@604 ($generated@@412 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@132 $generated@@607 $generated@@46))
 :pattern ( ($generated@@132 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@132 $generated@@608 $generated@@47))
 :pattern ( ($generated@@132 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@132 $generated@@609 $generated@@44))
 :pattern ( ($generated@@132 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@447) ($generated@@132 $generated@@610 $generated@@45))
 :pattern ( ($generated@@132 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@145) ($generated@@132 $generated@@611 $generated@@48))
 :pattern ( ($generated@@132 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (and (and (= (type $generated@@612) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@613) $generated@@77)) (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@615) ($generated@@239 $generated@@145))) (= (type $generated@@617) ($generated@@239 $generated@@145))) (= (type $generated@@618) ($generated@@239 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@620  (=> (= $generated@@612 ($generated@@156 $generated@@613 $generated@@614 $generated@@60 false)) (=> (and (= $generated@@615 ($generated@@233 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@280 $generated@@145) ($generated@@286 ($generated@@8 ($generated@@231 1)))) ($generated@@286 ($generated@@8 ($generated@@231 2)))) ($generated@@286 ($generated@@8 ($generated@@231 3)))))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@231 (- 0 1))) (<= ($generated@@231 (- 0 1)) ($generated@@252 $generated@@615)))))))
(let (($generated@@621  (=> (and ($generated@@263 $generated@@614) ($generated@@616 $generated@@614)) (=> (and (and ($generated@@132 $generated@@617 ($generated@@238 $generated@@46)) ($generated@@74 $generated@@617 ($generated@@238 $generated@@46) $generated@@614)) true) (=> (and (and (and ($generated@@132 $generated@@618 ($generated@@238 $generated@@46)) ($generated@@74 $generated@@618 ($generated@@238 $generated@@46) $generated@@614)) true) (and (= 0 $generated@@619) (= (ControlFlow 0 3) 2))) $generated@@620)))))
$generated@@621)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@250 (T@U Int) T@U)
(declare-fun $generated@@251 (T@U Int) T@U)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@T) T@U)
(declare-fun $generated@@447 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (and (and (and (forall (($generated@@241 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@241)) 17)) (forall (($generated@@242 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@237 $generated@@243 $generated@@244)) ($generated@@239 $generated@@245)))
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@238 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) ($generated@@239 $generated@@145)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@64)) (and ($generated@@132 $generated@@247 ($generated@@238 $generated@@249)) ($generated@@212 $generated@@248 $generated@@249))) ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
 :pattern ( ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
)))
(assert  (and (forall (($generated@@253 T@U) ($generated@@254 Int) ) (! (let (($generated@@255 ($generated@@240 (type $generated@@253))))
(= (type ($generated@@250 $generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@250 $generated@@253 $generated@@254))
)) (forall (($generated@@256 T@U) ($generated@@257 Int) ) (! (let (($generated@@258 ($generated@@240 (type $generated@@256))))
(= (type ($generated@@251 $generated@@256 $generated@@257)) ($generated@@239 $generated@@258)))
 :pattern ( ($generated@@251 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 Int) ($generated@@261 Int) ) (! (let (($generated@@262 ($generated@@240 (type $generated@@259))))
 (=> (= (type $generated@@259) ($generated@@239 $generated@@262)) (=> (and (and (<= 0 $generated@@261) (< $generated@@261 $generated@@260)) (< $generated@@261 ($generated@@252 $generated@@259))) (= ($generated@@250 ($generated@@251 $generated@@259 $generated@@260) $generated@@261) ($generated@@250 $generated@@259 $generated@@261)))))
 :weight 25
 :pattern ( ($generated@@250 ($generated@@251 $generated@@259 $generated@@260) $generated@@261))
 :pattern ( ($generated@@250 $generated@@259 $generated@@261) ($generated@@251 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) $generated@@64)) (= (type $generated@@267) $generated@@145)) (= (type $generated@@268) $generated@@145)) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@263 $generated@@269)) (= ($generated@@74 ($generated@@211 $generated@@267 $generated@@268) ($generated@@135 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@267 $generated@@268) ($generated@@135 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@136) (= ($generated@@134 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 Int) ) (! (let (($generated@@276 ($generated@@240 (type $generated@@274))))
 (=> (= (type $generated@@274) ($generated@@239 $generated@@276)) (=> (and (<= 0 $generated@@275) (< $generated@@275 ($generated@@252 $generated@@274))) (< ($generated@@273 ($generated@@251 $generated@@274 $generated@@275)) ($generated@@273 $generated@@274)))))
 :pattern ( ($generated@@273 ($generated@@251 $generated@@274 $generated@@275)))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@136) ($generated@@134 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@145) (= (type $generated@@279) $generated@@145)) (= $generated@@277 ($generated@@211 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@134 $generated@@277))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@239 $generated@@281))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@T) ) (! (= ($generated@@252 ($generated@@280 $generated@@282)) 0)
 :pattern ( ($generated@@280 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 (type $generated@@284)))
 (=> (= (type $generated@@283) ($generated@@239 $generated@@285)) (= ($generated@@252 ($generated@@237 $generated@@283 $generated@@284)) (+ 1 ($generated@@252 $generated@@283)))))
 :pattern ( ($generated@@237 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@145)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@64) (= (type $generated@@290) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@74 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@264 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@76 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@79 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@76 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@81 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 18)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@76 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@81 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 19)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@81 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@79 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@76 $generated@@334 $generated@@2)) (= ($generated@@151 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@81 $generated@@333 $generated@@335))) (<= ($generated ($generated@@81 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@151 $generated@@333))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Int) ($generated@@338 T@U) ) (! (let (($generated@@339 (type $generated@@338)))
 (=> (= (type $generated@@336) ($generated@@239 $generated@@339)) (and (=> (= $generated@@337 ($generated@@252 $generated@@336)) (= ($generated@@250 ($generated@@237 $generated@@336 $generated@@338) $generated@@337) $generated@@338)) (=> (not (= $generated@@337 ($generated@@252 $generated@@336))) (= ($generated@@250 ($generated@@237 $generated@@336 $generated@@338) $generated@@337) ($generated@@250 $generated@@336 $generated@@337))))))
 :pattern ( ($generated@@250 ($generated@@237 $generated@@336 $generated@@338) $generated@@337))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(let (($generated@@342 ($generated@@300 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@299 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@298 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@297 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(let (($generated@@349 ($generated@@300 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@299 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@298 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@319 (type $generated@@351))))
(let (($generated@@353 ($generated@@318 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@317 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@316 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@315 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@76 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@363) $generated@@64)) (= ($generated@@132 $generated@@362 ($generated@@150 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@362 $generated@@364)))) ($generated@@212 $generated@@364 $generated@@363))
 :pattern ( ($generated@@81 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@132 $generated@@362 ($generated@@150 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@366) $generated@@64)) (= (type $generated@@367) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@365 ($generated@@221 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@145) ($generated@@0 ($generated@@81 $generated@@365 $generated@@368))) ($generated@@264 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@81 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@74 $generated@@365 ($generated@@221 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@370) $generated@@64)) (= (type $generated@@371) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@369 ($generated@@226 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@145) ($generated@@0 ($generated@@81 $generated@@369 $generated@@372))) ($generated@@264 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@81 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@74 $generated@@369 ($generated@@226 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@81 ($generated@@292 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@81 ($generated@@292 $generated@@374) $generated@@373)))
)))
(assert  (and (and (forall (($generated@@378 T@U) ) (! (= (type ($generated@@375 $generated@@378)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@375 $generated@@378))
)) (forall (($generated@@379 T@T) ($generated@@380 T@U) ) (! (= (type ($generated@@376 $generated@@379 $generated@@380)) $generated@@379)
 :pattern ( ($generated@@376 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@301 (type $generated@@381))))
(let (($generated@@383 ($generated@@300 (type $generated@@381))))
(= (type ($generated@@377 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@377 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@384) ($generated@@143 ($generated@@376 $generated@@136 $generated@@385)))) (= ($generated@@81 ($generated@@377 $generated@@384) ($generated@@143 ($generated@@376 $generated@@136 $generated@@385))) ($generated@@144 ($generated@@376 $generated@@136 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@319 (type $generated@@389))))
(let (($generated@@391 ($generated@@318 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@392) ($generated@@143 ($generated@@376 $generated@@136 $generated@@393)))) (= ($generated@@81 ($generated@@387 $generated@@392) ($generated@@143 ($generated@@376 $generated@@136 $generated@@393))) ($generated@@144 ($generated@@376 $generated@@136 $generated@@393))))))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@300 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@299 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@344 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@297 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@377 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@344 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@318 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@317 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@81 ($generated@@315 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@81 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@64)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@407) $generated@@411))) (and ($generated@@264 ($generated@@81 ($generated@@377 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@264 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@407) $generated@@411))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@74 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@64)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@81 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@74 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 Int) ) (! (let (($generated@@422 ($generated@@240 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@239 $generated@@422)) (=> (and (<= 0 $generated@@421) (<= $generated@@421 ($generated@@252 $generated@@420))) (= ($generated@@252 ($generated@@251 $generated@@420 $generated@@421)) $generated@@421))))
 :pattern ( ($generated@@252 ($generated@@251 $generated@@420 $generated@@421)))
)))
(assert (forall (($generated@@424 T@T) ) (! (= (type ($generated@@423 $generated@@424)) ($generated@@76 $generated@@424 $generated@@4))
 :pattern ( ($generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@315 $generated@@425) ($generated@@423 $generated@@427))))))
 :pattern ( ($generated@@315 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@319 (type $generated@@428))))
(let (($generated@@430 ($generated@@318 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@317 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@316 $generated@@430 $generated@@429)) (= ($generated@@355 $generated@@428) ($generated@@423 $generated@@429))))))
 :pattern ( ($generated@@355 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@319 (type $generated@@431))))
(let (($generated@@433 ($generated@@318 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@317 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@316 $generated@@433 $generated@@432)) (= ($generated@@386 $generated@@431) ($generated@@423 $generated@@145))))))
 :pattern ( ($generated@@386 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@301 (type $generated@@434))))
(let (($generated@@436 ($generated@@300 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@299 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@298 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@145) (= (type $generated@@438) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@434) ($generated@@286 ($generated@@211 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@375 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@319 (type $generated@@439))))
(let (($generated@@441 ($generated@@318 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@317 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@316 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@145) (= (type $generated@@443) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@386 $generated@@439) ($generated@@286 ($generated@@211 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) ($generated@@212 $generated@@444 $generated@@46)) (and (= ($generated@@286 ($generated@@376 $generated@@2 $generated@@444)) $generated@@444) ($generated@@132 ($generated@@376 $generated@@2 $generated@@444) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@444 $generated@@46))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) ($generated@@212 $generated@@445 $generated@@47)) (and (= ($generated@@286 ($generated@@376 $generated@@3 $generated@@445)) $generated@@445) ($generated@@132 ($generated@@376 $generated@@3 $generated@@445) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@445 $generated@@47))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@145) ($generated@@212 $generated@@446 $generated@@44)) (and (= ($generated@@286 ($generated@@376 $generated@@4 $generated@@446)) $generated@@446) ($generated@@132 ($generated@@376 $generated@@4 $generated@@446) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@446 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@447) 20))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@145) ($generated@@212 $generated@@448 $generated@@45)) (and (= ($generated@@286 ($generated@@376 $generated@@447 $generated@@448)) $generated@@448) ($generated@@132 ($generated@@376 $generated@@447 $generated@@448) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@448 $generated@@45))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (= (type $generated@@450) $generated@@64) (= ($generated@@212 ($generated@@286 $generated@@449) $generated@@450) ($generated@@132 $generated@@449 $generated@@450)))
 :pattern ( ($generated@@212 ($generated@@286 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@79 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@76 $generated@@452 $generated@@2)) (<= 0 ($generated@@291 $generated@@451))))
 :pattern ( ($generated@@291 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@240 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@239 $generated@@454)) (<= 0 ($generated@@252 $generated@@453))))
 :pattern ( ($generated@@252 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@404 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@404 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@404 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@404 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@404 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@412 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@412 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@412 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@72 ($generated@@412 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@270 ($generated@@211 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@135 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@135 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@135 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@135 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) (= (type $generated@@486) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@211 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@145) (= (type $generated@@488) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@211 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@239 $generated@@145)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@238 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@252 $generated@@489))) ($generated@@264 ($generated@@250 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@250 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@238 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@221 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@221 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@226 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@226 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@150 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@238 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@238 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@238 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@376 $generated@@512 ($generated@@286 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@286 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@132 $generated@@513 ($generated@@404 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@297 $generated@@513) $generated@@516))) (and ($generated@@212 ($generated@@81 ($generated@@377 $generated@@513) $generated@@516) $generated@@515) ($generated@@212 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@377 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@132 $generated@@513 ($generated@@404 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@132 $generated@@517 ($generated@@412 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@517) $generated@@520))) (and ($generated@@212 ($generated@@81 ($generated@@387 $generated@@517) $generated@@520) $generated@@519) ($generated@@212 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@132 $generated@@517 ($generated@@412 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@211 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@211 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@145)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@211 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@211 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@404 $generated@@528 $generated@@529))) (and (= ($generated@@286 ($generated@@376 ($generated@@299 $generated@@145 $generated@@145) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@376 ($generated@@299 $generated@@145 $generated@@145) $generated@@527) ($generated@@404 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@404 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@412 $generated@@531 $generated@@532))) (and (= ($generated@@286 ($generated@@376 ($generated@@317 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@376 ($generated@@317 $generated@@145 $generated@@145) $generated@@530) ($generated@@412 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@145)) ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534))) (and (= ($generated@@286 ($generated@@376 $generated@@136 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@376 $generated@@136 $generated@@535) ($generated@@135 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@423 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@423 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@135 $generated@@540 $generated@@541)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@240 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544)) ($generated@@239 $generated@@545)))
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@240 (type $generated@@546))))
(= (type ($generated@@543 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (=> (= (type $generated@@548) ($generated@@239 $generated@@550)) (and (= ($generated@@542 ($generated@@237 $generated@@548 $generated@@549)) $generated@@548) (= ($generated@@543 ($generated@@237 $generated@@548 $generated@@549)) $generated@@549))))
 :pattern ( ($generated@@237 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@136) (= ($generated@@521 ($generated@@286 $generated@@551)) ($generated@@522 $generated@@551)))
 :pattern ( ($generated@@521 ($generated@@286 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@145) ($generated@@212 $generated@@552 ($generated@@75 0))) (and (= ($generated@@286 ($generated@@376 $generated@@2 $generated@@552)) $generated@@552) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@552) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@552 ($generated@@75 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@212 $generated@@553 ($generated@@221 $generated@@554))) (and (= ($generated@@286 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@553) ($generated@@221 $generated@@554))))
 :pattern ( ($generated@@212 $generated@@553 ($generated@@221 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) ($generated@@212 $generated@@555 ($generated@@226 $generated@@556))) (and (= ($generated@@286 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@4) $generated@@555) ($generated@@226 $generated@@556))))
 :pattern ( ($generated@@212 $generated@@555 ($generated@@226 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@64)) ($generated@@212 $generated@@557 ($generated@@150 $generated@@558))) (and (= ($generated@@286 ($generated@@376 ($generated@@76 $generated@@145 $generated@@2) $generated@@557)) $generated@@557) ($generated@@132 ($generated@@376 ($generated@@76 $generated@@145 $generated@@2) $generated@@557) ($generated@@150 $generated@@558))))
 :pattern ( ($generated@@212 $generated@@557 ($generated@@150 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@64)) ($generated@@212 $generated@@559 ($generated@@238 $generated@@560))) (and (= ($generated@@286 ($generated@@376 ($generated@@239 $generated@@145) $generated@@559)) $generated@@559) ($generated@@132 ($generated@@376 ($generated@@239 $generated@@145) $generated@@559) ($generated@@238 $generated@@560))))
 :pattern ( ($generated@@212 $generated@@559 ($generated@@238 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@561 $generated@@564)))) ($generated@@264 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@81 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@263 $generated@@567) (and ($generated@@134 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@264 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@264 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@136) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@263 $generated@@571) (and ($generated@@134 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@264 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@264 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@573) ($generated@@233 $generated@@574)) ($generated@@233 ($generated@@211 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@573) ($generated@@233 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@231 $generated@@575))) ($generated@@233 ($generated@@286 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@231 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@286 ($generated@@233 $generated@@576)) ($generated@@233 ($generated@@286 $generated@@576)))
 :pattern ( ($generated@@286 ($generated@@233 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@240 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@239 $generated@@578)) (= ($generated@@252 $generated@@577) 0)) (= $generated@@577 ($generated@@280 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 Int) ) (! (let (($generated@@581 ($generated@@240 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@239 $generated@@581)) (= $generated@@580 0)) (= ($generated@@251 $generated@@579 $generated@@580) ($generated@@280 $generated@@581))))
 :pattern ( ($generated@@251 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@583)))
 (=> (and (and (= (type $generated@@582) ($generated@@76 $generated@@585 $generated@@2)) (= (type $generated@@584) $generated@@2)) (<= 0 ($generated $generated@@584))) (= ($generated@@291 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)) (+ (- ($generated@@291 $generated@@582) ($generated ($generated@@81 $generated@@582 $generated@@583))) ($generated $generated@@584)))))
 :pattern ( ($generated@@291 ($generated@@82 $generated@@582 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@2)) ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@3)) ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@4)) ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@447)) ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@145)) ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@239 $generated@@145)) (= (type $generated@@597) $generated@@64)) (= ($generated@@132 $generated@@596 ($generated@@238 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@252 $generated@@596))) ($generated@@212 ($generated@@250 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@250 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@132 $generated@@596 ($generated@@238 $generated@@597)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@239 $generated@@145)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@252 $generated@@599))) (< ($generated@@522 ($generated@@376 $generated@@136 ($generated@@250 $generated@@599 $generated@@600))) ($generated@@273 $generated@@599))))
 :pattern ( ($generated@@522 ($generated@@376 $generated@@136 ($generated@@250 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@299 $generated@@145 $generated@@145)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@132 $generated@@601 ($generated@@404 $generated@@602 $generated@@603))) (and (and ($generated@@132 ($generated@@297 $generated@@601) ($generated@@221 $generated@@602)) ($generated@@132 ($generated@@344 $generated@@601) ($generated@@221 $generated@@603))) ($generated@@132 ($generated@@375 $generated@@601) ($generated@@221 ($generated@@135 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@132 $generated@@601 ($generated@@404 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@317 $generated@@145 $generated@@145)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) $generated@@64)) ($generated@@132 $generated@@604 ($generated@@412 $generated@@605 $generated@@606))) (and (and ($generated@@132 ($generated@@315 $generated@@604) ($generated@@226 $generated@@605)) ($generated@@132 ($generated@@355 $generated@@604) ($generated@@226 $generated@@606))) ($generated@@132 ($generated@@386 $generated@@604) ($generated@@226 ($generated@@135 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@132 $generated@@604 ($generated@@412 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@132 $generated@@607 $generated@@46))
 :pattern ( ($generated@@132 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@132 $generated@@608 $generated@@47))
 :pattern ( ($generated@@132 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@132 $generated@@609 $generated@@44))
 :pattern ( ($generated@@132 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@447) ($generated@@132 $generated@@610 $generated@@45))
 :pattern ( ($generated@@132 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@145) ($generated@@132 $generated@@611 $generated@@48))
 :pattern ( ($generated@@132 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (and (and (= (type $generated@@612) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@613) $generated@@77)) (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@615) ($generated@@239 $generated@@145))) (= (type $generated@@617) ($generated@@239 $generated@@145))) (= (type $generated@@618) ($generated@@239 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@620  (=> (= $generated@@612 ($generated@@156 $generated@@613 $generated@@614 $generated@@60 false)) (=> (and (= $generated@@615 ($generated@@233 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@280 $generated@@145) ($generated@@286 ($generated@@8 ($generated@@231 1)))) ($generated@@286 ($generated@@8 ($generated@@231 2)))) ($generated@@286 ($generated@@8 ($generated@@231 3)))))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@231 4)) (<= ($generated@@231 4) ($generated@@252 $generated@@615)))))))
(let (($generated@@621  (=> (and ($generated@@263 $generated@@614) ($generated@@616 $generated@@614)) (=> (and (and ($generated@@132 $generated@@617 ($generated@@238 $generated@@46)) ($generated@@74 $generated@@617 ($generated@@238 $generated@@46) $generated@@614)) true) (=> (and (and (and ($generated@@132 $generated@@618 ($generated@@238 $generated@@46)) ($generated@@74 $generated@@618 ($generated@@238 $generated@@46) $generated@@614)) true) (and (= 0 $generated@@619) (= (ControlFlow 0 3) 2))) $generated@@620)))))
$generated@@621)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
