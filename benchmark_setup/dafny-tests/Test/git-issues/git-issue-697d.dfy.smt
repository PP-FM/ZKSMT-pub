(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 (Int) Bool)
(declare-fun $generated@@248 (Int) Bool)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@T)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@329 (T@T T@U) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@436 () T@T)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@479 (T@U Int) T@U)
(declare-fun $generated@@488 (T@U) Int)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@536 (Int Int) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@67)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@67)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@80 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@70 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@80) (= (type $generated@@208) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@209) ($generated@@69 $generated@@4))) (= (type $generated@@211) $generated@@80)) (= (type $generated@@212) ($generated@@69 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (= (type $generated@@215) $generated@@67))
(assert (forall (($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@139) ($generated@@135 $generated@@216 $generated@@215)) ($generated@@214 $generated@@216))
 :pattern ( ($generated@@214 $generated@@216) ($generated@@135 $generated@@216 $generated@@215))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@139)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@148)) (= (type $generated@@224) $generated@@148)) (= ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@139) (= (type $generated@@226) $generated@@139)) (= ($generated@@145 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@145 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@139) (= (type $generated@@229) $generated@@139)) (= ($generated@@227 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@67)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@233) $generated@@67)) (= ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@148) ($generated@@0 ($generated@@84 $generated@@232 $generated@@234))) ($generated@@218 $generated@@234 $generated@@233))
 :pattern ( ($generated@@84 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@148) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@218 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@249 Int) ) (!  (=> (or ($generated@@248 $generated@@249) (not (= 0 $generated@@246))) true)
 :pattern ( ($generated@@247 $generated@@249))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@67) (= (type $generated@@253) $generated@@67)) (= (type $generated@@254) $generated@@148)) (= (type $generated@@255) $generated@@148)) (= (type $generated@@256) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@250 $generated@@256)) (= ($generated@@77 ($generated@@217 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@77 ($generated@@217 $generated@@254 $generated@@255) ($generated@@138 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@71)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@139) (= ($generated@@137 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@139) (= ($generated@@214 $generated@@260) (= ($generated@@257 $generated@@260) $generated@@63)))
 :pattern ( ($generated@@214 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@139) ($generated@@137 $generated@@261)) (exists (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (and (= (type $generated@@262) $generated@@148) (= (type $generated@@263) $generated@@148)) (= $generated@@261 ($generated@@217 $generated@@262 $generated@@263)))
 :no-pattern (type $generated@@262)
 :no-pattern (type $generated@@263)
 :no-pattern ($generated $generated@@262)
 :no-pattern ($generated@@0 $generated@@262)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
)))
 :pattern ( ($generated@@137 $generated@@261))
)))
(assert  (and (and (forall (($generated@@268 T@T) ) (= ($generated@@1 ($generated@@266 $generated@@268)) 17)) (forall (($generated@@269 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
))) (forall (($generated@@270 T@T) ) (! (= (type ($generated@@264 $generated@@270)) ($generated@@266 $generated@@270))
 :pattern ( ($generated@@264 $generated@@270))
))))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@271)) 0)
 :pattern ( ($generated@@264 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@139) (= (type $generated@@274) $generated@@139)) true) (= ($generated@@227 $generated@@273 $generated@@274) (= ($generated@@272 $generated@@273) ($generated@@272 $generated@@274))))
 :pattern ( ($generated@@227 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 Int) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@139)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@139) ($generated@@214 $generated@@277)) (exists (($generated@@278 Int) ) (= $generated@@277 ($generated@@275 $generated@@278))))
 :pattern ( ($generated@@214 $generated@@277))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@148)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@67) (= (type $generated@@283) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@251 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@77 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@251 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@79 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@82 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@79 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@84 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 18)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@79 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@84 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@84 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 19)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@79 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@84 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@84 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@82 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@79 $generated@@327 $generated@@2)) (= ($generated@@154 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@84 $generated@@326 $generated@@328))) (<= ($generated ($generated@@84 $generated@@326 $generated@@328)) ($generated@@284 $generated@@326))))
 :pattern ( ($generated@@84 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@154 $generated@@326))
)))
(assert (forall (($generated@@330 T@T) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@148) ($generated@@218 $generated@@332 $generated@@215)) (and (= ($generated@@279 ($generated@@329 $generated@@139 $generated@@332)) $generated@@332) ($generated@@135 ($generated@@329 $generated@@139 $generated@@332) $generated@@215)))
 :pattern ( ($generated@@218 $generated@@332 $generated@@215))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@294 (type $generated@@333))))
(let (($generated@@335 ($generated@@293 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@292 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@291 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@84 ($generated@@290 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@290 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@294 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@79 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@294 (type $generated@@340))))
(let (($generated@@342 ($generated@@293 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@292 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@291 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@84 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@312 (type $generated@@344))))
(let (($generated@@346 ($generated@@311 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@310 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@309 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@308 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@312 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@79 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@312 (type $generated@@351))))
(let (($generated@@353 ($generated@@311 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@310 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@309 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@84 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@356) $generated@@67)) (= ($generated@@135 $generated@@355 ($generated@@153 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@355 $generated@@357)))) ($generated@@218 $generated@@357 $generated@@356))
 :pattern ( ($generated@@84 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@135 $generated@@355 ($generated@@153 $generated@@356)))
)))
(assert (forall (($generated@@358 Int) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@250 $generated@@359)) (= ($generated@@77 ($generated@@275 $generated@@358) $generated@@215 $generated@@359) ($generated@@77 ($generated@@8 $generated@@358) $generated@@46 $generated@@359)))
 :pattern ( ($generated@@77 ($generated@@275 $generated@@358) $generated@@215 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@230 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@148) ($generated@@0 ($generated@@84 $generated@@360 $generated@@363))) ($generated@@251 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@84 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@230 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@365) $generated@@67)) (= (type $generated@@366) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@364 ($generated@@235 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@148) ($generated@@0 ($generated@@84 $generated@@364 $generated@@367))) ($generated@@251 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@84 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@364 ($generated@@235 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@84 ($generated@@285 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@84 ($generated@@285 $generated@@369) $generated@@368)))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@294 (type $generated@@373))))
(let (($generated@@375 ($generated@@293 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@377) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@84 ($generated@@290 $generated@@376) ($generated@@146 ($generated@@329 $generated@@139 $generated@@377)))) (= ($generated@@84 ($generated@@371 $generated@@376) ($generated@@146 ($generated@@329 $generated@@139 $generated@@377))) ($generated@@147 ($generated@@329 $generated@@139 $generated@@377))))))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@312 (type $generated@@381))))
(let (($generated@@383 ($generated@@311 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@385) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@84 ($generated@@308 $generated@@384) ($generated@@146 ($generated@@329 $generated@@139 $generated@@385)))) (= ($generated@@84 ($generated@@379 $generated@@384) ($generated@@146 ($generated@@329 $generated@@139 $generated@@385))) ($generated@@147 ($generated@@329 $generated@@139 $generated@@385))))))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@293 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@292 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@84 ($generated@@337 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@84 ($generated@@290 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@84 ($generated@@371 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@84 ($generated@@290 $generated@@386) $generated@@390))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@84 ($generated@@337 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@311 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@310 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@84 ($generated@@348 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@84 ($generated@@308 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@84 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@391) $generated@@395))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@84 ($generated@@348 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@67)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@290 $generated@@399) $generated@@403))) (and ($generated@@251 ($generated@@84 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@251 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@84 ($generated@@290 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@67)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@408) $generated@@67)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@407) $generated@@411))) (and ($generated@@251 ($generated@@84 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@251 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@77 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@79 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@312 (type $generated@@414))))
(let (($generated@@416 ($generated@@311 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@310 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@309 $generated@@416 $generated@@415)) (= ($generated@@308 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@308 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@312 (type $generated@@417))))
(let (($generated@@419 ($generated@@311 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@310 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@309 $generated@@419 $generated@@418)) (= ($generated@@348 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@348 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@312 (type $generated@@420))))
(let (($generated@@422 ($generated@@311 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@310 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@309 $generated@@422 $generated@@421)) (= ($generated@@378 $generated@@420) ($generated@@412 $generated@@148))))))
 :pattern ( ($generated@@378 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@294 (type $generated@@423))))
(let (($generated@@425 ($generated@@293 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@292 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@291 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@148) (= (type $generated@@427) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@370 $generated@@423) ($generated@@279 ($generated@@217 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@370 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@312 (type $generated@@428))))
(let (($generated@@430 ($generated@@311 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@310 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@309 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@148) (= (type $generated@@432) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@378 $generated@@428) ($generated@@279 ($generated@@217 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@378 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@148) ($generated@@218 $generated@@433 $generated@@46)) (and (= ($generated@@279 ($generated@@329 $generated@@2 $generated@@433)) $generated@@433) ($generated@@135 ($generated@@329 $generated@@2 $generated@@433) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@433 $generated@@46))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@148) ($generated@@218 $generated@@434 $generated@@47)) (and (= ($generated@@279 ($generated@@329 $generated@@3 $generated@@434)) $generated@@434) ($generated@@135 ($generated@@329 $generated@@3 $generated@@434) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@434 $generated@@47))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@148) ($generated@@218 $generated@@435 $generated@@44)) (and (= ($generated@@279 ($generated@@329 $generated@@4 $generated@@435)) $generated@@435) ($generated@@135 ($generated@@329 $generated@@4 $generated@@435) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@435 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@436) 20))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@148) ($generated@@218 $generated@@437 $generated@@45)) (and (= ($generated@@279 ($generated@@329 $generated@@436 $generated@@437)) $generated@@437) ($generated@@135 ($generated@@329 $generated@@436 $generated@@437) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@437 $generated@@45))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (= (type $generated@@439) $generated@@67) (= ($generated@@218 ($generated@@279 $generated@@438) $generated@@439) ($generated@@135 $generated@@438 $generated@@439)))
 :pattern ( ($generated@@218 ($generated@@279 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@82 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@79 $generated@@441 $generated@@2)) (<= 0 ($generated@@284 $generated@@440))))
 :pattern ( ($generated@@284 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@267 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@266 $generated@@443)) (<= 0 ($generated@@265 $generated@@442))))
 :pattern ( ($generated@@265 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@396 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@396 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@67)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@67) (= (type $generated@@451) $generated@@67)) (= ($generated@@448 ($generated@@396 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@75 ($generated@@396 $generated@@452 $generated@@453)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@404 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@404 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@67)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@67) (= (type $generated@@461) $generated@@67)) (= ($generated@@458 ($generated@@404 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@404 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@75 ($generated@@404 $generated@@462 $generated@@463)) $generated@@59))
 :pattern ( ($generated@@404 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@148) (= (type $generated@@465) $generated@@148)) (= ($generated@@257 ($generated@@217 $generated@@464 $generated@@465)) $generated@@61))
 :pattern ( ($generated@@217 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@138 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@138 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@67)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@67) (= (type $generated@@473) $generated@@67)) (= ($generated@@470 ($generated@@138 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@138 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@148) (= (type $generated@@475) $generated@@148)) (= ($generated@@146 ($generated@@217 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@217 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@148) (= (type $generated@@477) $generated@@148)) (= ($generated@@147 ($generated@@217 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@217 $generated@@476 $generated@@477))
)))
(assert  (and (forall (($generated@@480 T@U) ) (! (= (type ($generated@@478 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@478 $generated@@480))
)) (forall (($generated@@481 T@U) ($generated@@482 Int) ) (! (let (($generated@@483 ($generated@@267 (type $generated@@481))))
(= (type ($generated@@479 $generated@@481 $generated@@482)) $generated@@483))
 :pattern ( ($generated@@479 $generated@@481 $generated@@482))
))))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (and (= (type $generated@@484) ($generated@@266 $generated@@148)) (= (type $generated@@485) $generated@@67)) (= (type $generated@@486) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@484 ($generated@@478 $generated@@485) $generated@@486) (forall (($generated@@487 Int) ) (!  (=> (and (<= 0 $generated@@487) (< $generated@@487 ($generated@@265 $generated@@484))) ($generated@@251 ($generated@@479 $generated@@484 $generated@@487) $generated@@485 $generated@@486))
 :pattern ( ($generated@@479 $generated@@484 $generated@@487))
))))
 :pattern ( ($generated@@77 $generated@@484 ($generated@@478 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@489 Int) ) (! (= ($generated@@488 ($generated@@78 $generated@@489)) $generated@@489)
 :pattern ( ($generated@@78 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@230 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@230 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@230 $generated@@493)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@235 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@235 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@497)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@153 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@153 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@153 $generated@@501)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@67)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@502 ($generated@@478 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@478 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@75 ($generated@@478 $generated@@505)) $generated@@57))
 :pattern ( ($generated@@478 $generated@@505))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@257 ($generated@@275 $generated@@506)) $generated@@63)
 :pattern ( ($generated@@275 $generated@@506))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@272 ($generated@@275 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@275 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@329 $generated@@509 ($generated@@279 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@279 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@135 $generated@@510 ($generated@@396 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@290 $generated@@510) $generated@@513))) (and ($generated@@218 ($generated@@84 ($generated@@371 $generated@@510) $generated@@513) $generated@@512) ($generated@@218 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@510) $generated@@513))
 :pattern ( ($generated@@84 ($generated@@290 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@135 $generated@@510 ($generated@@396 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@515) $generated@@67)) (= (type $generated@@516) $generated@@67)) (= ($generated@@135 $generated@@514 ($generated@@404 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@308 $generated@@514) $generated@@517))) (and ($generated@@218 ($generated@@84 ($generated@@379 $generated@@514) $generated@@517) $generated@@516) ($generated@@218 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@514) $generated@@517))
 :pattern ( ($generated@@84 ($generated@@308 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@135 $generated@@514 ($generated@@404 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@148) (= (type $generated@@521) $generated@@148)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@217 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@217 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@148) (= (type $generated@@523) $generated@@148)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@217 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@217 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 Int) ) (! (= ($generated@@135 ($generated@@275 $generated@@524) $generated@@215) ($generated@@135 ($generated@@8 $generated@@524) $generated@@46))
 :pattern ( ($generated@@135 ($generated@@275 $generated@@524) $generated@@215))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@148) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) $generated@@67)) ($generated@@218 $generated@@525 ($generated@@396 $generated@@526 $generated@@527))) (and (= ($generated@@279 ($generated@@329 ($generated@@292 $generated@@148 $generated@@148) $generated@@525)) $generated@@525) ($generated@@135 ($generated@@329 ($generated@@292 $generated@@148 $generated@@148) $generated@@525) ($generated@@396 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@218 $generated@@525 ($generated@@396 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@148) (= (type $generated@@529) $generated@@67)) (= (type $generated@@530) $generated@@67)) ($generated@@218 $generated@@528 ($generated@@404 $generated@@529 $generated@@530))) (and (= ($generated@@279 ($generated@@329 ($generated@@310 $generated@@148 $generated@@148) $generated@@528)) $generated@@528) ($generated@@135 ($generated@@329 ($generated@@310 $generated@@148 $generated@@148) $generated@@528) ($generated@@404 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@218 $generated@@528 ($generated@@404 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@148)) ($generated@@218 $generated@@533 ($generated@@138 $generated@@531 $generated@@532))) (and (= ($generated@@279 ($generated@@329 $generated@@139 $generated@@533)) $generated@@533) ($generated@@135 ($generated@@329 $generated@@139 $generated@@533) ($generated@@138 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@218 $generated@@533 ($generated@@138 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@84 ($generated@@412 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@84 ($generated@@412 $generated@@535) $generated@@534)))
)))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@537 Int) ) (!  (=> (or ($generated@@248 $generated@@537) (not (= 0 $generated@@246))) (= ($generated@@247 $generated@@537) (= ($generated@@536 $generated@@537 ($generated@@240 2)) ($generated@@240 0))))
 :pattern ( ($generated@@247 $generated@@537))
))))
(assert (forall (($generated@@538 Int) ($generated@@539 Int) ) (! (= ($generated@@536 $generated@@538 $generated@@539) (mod $generated@@538 $generated@@539))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@72)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (and (= ($generated@@75 ($generated@@138 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@138 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@139) (= (type $generated@@545) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@545) (and ($generated@@214 $generated@@544) ($generated@@77 $generated@@544 $generated@@215 $generated@@545)))) ($generated@@77 ($generated@@8 ($generated@@272 $generated@@544)) $generated@@46 $generated@@545))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@272 $generated@@544)) $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@139) (= ($generated@@518 ($generated@@279 $generated@@546)) ($generated@@519 $generated@@546)))
 :pattern ( ($generated@@518 ($generated@@279 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@148) ($generated@@218 $generated@@547 ($generated@@78 0))) (and (= ($generated@@279 ($generated@@329 $generated@@2 $generated@@547)) $generated@@547) ($generated@@135 ($generated@@329 ($generated@@79 $generated@@148 $generated@@4) $generated@@547) ($generated@@78 0))))
 :pattern ( ($generated@@218 $generated@@547 ($generated@@78 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@148) (= (type $generated@@549) $generated@@67)) ($generated@@218 $generated@@548 ($generated@@230 $generated@@549))) (and (= ($generated@@279 ($generated@@329 ($generated@@79 $generated@@148 $generated@@4) $generated@@548)) $generated@@548) ($generated@@135 ($generated@@329 ($generated@@79 $generated@@148 $generated@@4) $generated@@548) ($generated@@230 $generated@@549))))
 :pattern ( ($generated@@218 $generated@@548 ($generated@@230 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@148) (= (type $generated@@551) $generated@@67)) ($generated@@218 $generated@@550 ($generated@@235 $generated@@551))) (and (= ($generated@@279 ($generated@@329 ($generated@@79 $generated@@148 $generated@@4) $generated@@550)) $generated@@550) ($generated@@135 ($generated@@329 ($generated@@79 $generated@@148 $generated@@4) $generated@@550) ($generated@@235 $generated@@551))))
 :pattern ( ($generated@@218 $generated@@550 ($generated@@235 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@148) (= (type $generated@@553) $generated@@67)) ($generated@@218 $generated@@552 ($generated@@153 $generated@@553))) (and (= ($generated@@279 ($generated@@329 ($generated@@79 $generated@@148 $generated@@2) $generated@@552)) $generated@@552) ($generated@@135 ($generated@@329 ($generated@@79 $generated@@148 $generated@@2) $generated@@552) ($generated@@153 $generated@@553))))
 :pattern ( ($generated@@218 $generated@@552 ($generated@@153 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@148) (= (type $generated@@555) $generated@@67)) ($generated@@218 $generated@@554 ($generated@@478 $generated@@555))) (and (= ($generated@@279 ($generated@@329 ($generated@@266 $generated@@148) $generated@@554)) $generated@@554) ($generated@@135 ($generated@@329 ($generated@@266 $generated@@148) $generated@@554) ($generated@@478 $generated@@555))))
 :pattern ( ($generated@@218 $generated@@554 ($generated@@478 $generated@@555)))
)))
(assert (= ($generated@@75 $generated@@215) $generated@@64))
(assert (= ($generated@@540 $generated@@215) $generated@@66))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@556 ($generated@@153 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@556 $generated@@559)))) ($generated@@251 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@84 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@153 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@139) (= (type $generated@@561) $generated@@67)) (= (type $generated@@562) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@562) (and ($generated@@137 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@67) ($generated@@77 $generated@@560 ($generated@@138 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@77 $generated@@560 ($generated@@138 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@251 ($generated@@146 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@251 ($generated@@146 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@139) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@250 $generated@@566) (and ($generated@@137 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@67) ($generated@@77 $generated@@564 ($generated@@138 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@77 $generated@@564 ($generated@@138 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@251 ($generated@@147 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@251 ($generated@@147 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@148) (= (type $generated@@569) $generated@@148)) (= ($generated@@217 ($generated@@242 $generated@@568) ($generated@@242 $generated@@569)) ($generated@@242 ($generated@@217 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@217 ($generated@@242 $generated@@568) ($generated@@242 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@279 ($generated@@8 ($generated@@240 $generated@@570))) ($generated@@242 ($generated@@279 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@279 ($generated@@8 ($generated@@240 $generated@@570))))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@275 ($generated@@240 $generated@@571)) ($generated@@242 ($generated@@275 $generated@@571)))
 :pattern ( ($generated@@275 ($generated@@240 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@279 ($generated@@242 $generated@@572)) ($generated@@242 ($generated@@279 $generated@@572)))
 :pattern ( ($generated@@279 ($generated@@242 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@267 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@266 $generated@@574)) (= ($generated@@265 $generated@@573) 0)) (= $generated@@573 ($generated@@264 $generated@@574))))
 :pattern ( ($generated@@265 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@79 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@284 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@284 $generated@@575) ($generated ($generated@@84 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@284 ($generated@@85 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert  (=> (<= 0 $generated@@246) (forall (($generated@@579 Int) ) (!  (=> (or ($generated@@248 ($generated@@240 $generated@@579)) (not (= 0 $generated@@246))) (= ($generated@@247 ($generated@@240 $generated@@579)) (= ($generated@@240 ($generated@@536 $generated@@579 ($generated@@240 2))) ($generated@@240 0))))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@240 $generated@@579)))
))))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@2)) ($generated@@77 $generated@@581 $generated@@46 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@46 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@3)) ($generated@@77 $generated@@583 $generated@@47 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@47 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@585) $generated@@4)) ($generated@@77 $generated@@585 $generated@@44 $generated@@584))
 :pattern ( ($generated@@77 $generated@@585 $generated@@44 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@587) $generated@@436)) ($generated@@77 $generated@@587 $generated@@45 $generated@@586))
 :pattern ( ($generated@@77 $generated@@587 $generated@@45 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@589) $generated@@148)) ($generated@@77 $generated@@589 $generated@@48 $generated@@588))
 :pattern ( ($generated@@77 $generated@@589 $generated@@48 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@266 $generated@@148)) (= (type $generated@@591) $generated@@67)) (= ($generated@@135 $generated@@590 ($generated@@478 $generated@@591)) (forall (($generated@@592 Int) ) (!  (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@265 $generated@@590))) ($generated@@218 ($generated@@479 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@479 $generated@@590 $generated@@592))
))))
 :pattern ( ($generated@@135 $generated@@590 ($generated@@478 $generated@@591)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 Int) ) (!  (=> (= (type $generated@@594) ($generated@@266 $generated@@148)) (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@265 $generated@@594))) (< ($generated@@519 ($generated@@329 $generated@@139 ($generated@@479 $generated@@594 $generated@@595))) ($generated@@593 $generated@@594))))
 :pattern ( ($generated@@519 ($generated@@329 $generated@@139 ($generated@@479 $generated@@594 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@292 $generated@@148 $generated@@148)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@135 $generated@@596 ($generated@@396 $generated@@597 $generated@@598))) (and (and ($generated@@135 ($generated@@290 $generated@@596) ($generated@@230 $generated@@597)) ($generated@@135 ($generated@@337 $generated@@596) ($generated@@230 $generated@@598))) ($generated@@135 ($generated@@370 $generated@@596) ($generated@@230 ($generated@@138 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@135 $generated@@596 ($generated@@396 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@310 $generated@@148 $generated@@148)) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) $generated@@67)) ($generated@@135 $generated@@599 ($generated@@404 $generated@@600 $generated@@601))) (and (and ($generated@@135 ($generated@@308 $generated@@599) ($generated@@235 $generated@@600)) ($generated@@135 ($generated@@348 $generated@@599) ($generated@@235 $generated@@601))) ($generated@@135 ($generated@@378 $generated@@599) ($generated@@235 ($generated@@138 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@135 $generated@@599 ($generated@@404 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@2) ($generated@@135 $generated@@602 $generated@@46))
 :pattern ( ($generated@@135 $generated@@602 $generated@@46))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@3) ($generated@@135 $generated@@603 $generated@@47))
 :pattern ( ($generated@@135 $generated@@603 $generated@@47))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@4) ($generated@@135 $generated@@604 $generated@@44))
 :pattern ( ($generated@@135 $generated@@604 $generated@@44))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@436) ($generated@@135 $generated@@605 $generated@@45))
 :pattern ( ($generated@@135 $generated@@605 $generated@@45))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@148) ($generated@@135 $generated@@606 $generated@@48))
 :pattern ( ($generated@@135 $generated@@606 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(assert  (and (and (and (= (type $generated@@607) ($generated@@160 $generated@@80 $generated@@4)) (= (type $generated@@608) $generated@@80)) (= (type $generated@@609) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@611) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@612  (=> (and (and (and ($generated@@214 ($generated@@242 ($generated@@275 ($generated@@240 0)))) ($generated@@248 ($generated@@240 ($generated@@272 ($generated@@242 ($generated@@275 ($generated@@240 0))))))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@248 ($generated@@240 ($generated@@272 ($generated@@242 ($generated@@275 ($generated@@240 0))))))) (or ($generated@@0 ($generated@@242 ($generated@@11 ($generated@@247 ($generated@@240 ($generated@@272 ($generated@@242 ($generated@@275 ($generated@@240 0))))))))) (= ($generated@@240 ($generated@@536 ($generated@@272 ($generated@@242 ($generated@@275 ($generated@@240 0)))) ($generated@@240 2))) ($generated@@240 0))))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (= $generated@@607 ($generated@@159 $generated@@608 $generated@@609 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@613) (=> (= (ControlFlow 0 4) 3) $generated@@612)))))
(let (($generated@@615  (=> (and (and (and ($generated@@250 $generated@@609) ($generated@@610 $generated@@609)) ($generated@@135 $generated@@611 $generated@@215)) (and (= 1 $generated@@246) (= (ControlFlow 0 5) 4))) $generated@@614)))
$generated@@615)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 (Int) Bool)
(declare-fun $generated@@251 (Int) Bool)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@267 (T@U) Int)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@404 (T@T) T@U)
(declare-fun $generated@@428 () T@T)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@471 (T@U Int) T@U)
(declare-fun $generated@@480 (T@U) Int)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@509 (T@U) Int)
(declare-fun $generated@@525 (Int Int) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@252 Int) ) (!  (=> (or ($generated@@251 $generated@@252) (not (= 0 $generated@@249))) true)
 :pattern ( ($generated@@250 $generated@@252))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@64) (= (type $generated@@256) $generated@@64)) (= (type $generated@@257) $generated@@145)) (= (type $generated@@258) $generated@@145)) (= (type $generated@@259) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@253 $generated@@259)) (= ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@257 $generated@@258) ($generated@@135 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@136) (= ($generated@@134 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@136) ($generated@@134 $generated@@263)) (exists (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (and (and (= (type $generated@@264) $generated@@145) (= (type $generated@@265) $generated@@145)) (= $generated@@263 ($generated@@223 $generated@@264 $generated@@265)))
 :no-pattern (type $generated@@264)
 :no-pattern (type $generated@@265)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
)))
 :pattern ( ($generated@@134 $generated@@263))
)))
(assert  (and (and (forall (($generated@@270 T@T) ) (= ($generated@@1 ($generated@@268 $generated@@270)) 17)) (forall (($generated@@271 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@271)) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
))) (forall (($generated@@272 T@T) ) (! (= (type ($generated@@266 $generated@@272)) ($generated@@268 $generated@@272))
 :pattern ( ($generated@@266 $generated@@272))
))))
(assert (forall (($generated@@273 T@T) ) (! (= ($generated@@267 ($generated@@266 $generated@@273)) 0)
 :pattern ( ($generated@@266 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@145)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@254 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@76 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@79 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@76 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@81 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 18)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 19)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@79 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@76 $generated@@322 $generated@@2)) (= ($generated@@151 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@81 $generated@@321 $generated@@323))) (<= ($generated ($generated@@81 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@151 $generated@@321))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@289 (type $generated@@324))))
(let (($generated@@326 ($generated@@288 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@287 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@286 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@285 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@76 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@289 (type $generated@@331))))
(let (($generated@@333 ($generated@@288 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@287 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@286 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@81 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@307 (type $generated@@335))))
(let (($generated@@337 ($generated@@306 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@305 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@304 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@303 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@307 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@307 (type $generated@@342))))
(let (($generated@@344 ($generated@@306 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@305 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@304 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@347) $generated@@64)) (= ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@346 $generated@@348)))) ($generated@@224 $generated@@348 $generated@@347))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@132 $generated@@346 ($generated@@150 $generated@@347)))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@145) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@254 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@233 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@254 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@238 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
(= ($generated ($generated@@81 ($generated@@280 $generated@@358) $generated@@357)) 0))
 :pattern ( (let (($generated@@358 (type $generated@@357)))
($generated@@81 ($generated@@280 $generated@@358) $generated@@357)))
)))
(assert  (and (and (forall (($generated@@362 T@U) ) (! (= (type ($generated@@359 $generated@@362)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@359 $generated@@362))
)) (forall (($generated@@363 T@T) ($generated@@364 T@U) ) (! (= (type ($generated@@360 $generated@@363 $generated@@364)) $generated@@363)
 :pattern ( ($generated@@360 $generated@@363 $generated@@364))
))) (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@289 (type $generated@@365))))
(let (($generated@@367 ($generated@@288 (type $generated@@365))))
(= (type ($generated@@361 $generated@@365)) ($generated@@76 $generated@@367 $generated@@366))))
 :pattern ( ($generated@@361 $generated@@365))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@369) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369)))) (= ($generated@@81 ($generated@@361 $generated@@368) ($generated@@143 ($generated@@360 $generated@@136 $generated@@369))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@369))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@368) $generated@@369))
)))
(assert  (and (forall (($generated@@372 T@U) ) (! (= (type ($generated@@370 $generated@@372)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@372))
)) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@307 (type $generated@@373))))
(let (($generated@@375 ($generated@@306 (type $generated@@373))))
(= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@371 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@371 $generated@@376) ($generated@@143 ($generated@@360 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@360 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(let (($generated@@381 ($generated@@288 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@287 $generated@@381 $generated@@380)) (= ($generated@@0 ($generated@@81 ($generated@@328 $generated@@378) $generated@@379)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@378) $generated@@382)) (= $generated@@379 ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@378) $generated@@382))
))))))
 :pattern ( ($generated@@81 ($generated@@328 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@306 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@305 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@64)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))) (and ($generated@@254 ($generated@@81 ($generated@@361 $generated@@391) $generated@@395) $generated@@393 $generated@@394) ($generated@@254 $generated@@395 $generated@@392 $generated@@394)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@391) $generated@@395))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@388 $generated@@392 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))) (and ($generated@@254 ($generated@@81 ($generated@@371 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@254 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@405 T@T) ) (! (= (type ($generated@@404 $generated@@405)) ($generated@@76 $generated@@405 $generated@@4))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@307 (type $generated@@406))))
(let (($generated@@408 ($generated@@306 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@305 $generated@@408 $generated@@407)) (= (= $generated@@406 ($generated@@304 $generated@@408 $generated@@407)) (= ($generated@@303 $generated@@406) ($generated@@404 $generated@@408))))))
 :pattern ( ($generated@@303 $generated@@406))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@307 (type $generated@@409))))
(let (($generated@@411 ($generated@@306 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@305 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@304 $generated@@411 $generated@@410)) (= ($generated@@339 $generated@@409) ($generated@@404 $generated@@410))))))
 :pattern ( ($generated@@339 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@307 (type $generated@@412))))
(let (($generated@@414 ($generated@@306 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@305 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@304 $generated@@414 $generated@@413)) (= ($generated@@370 $generated@@412) ($generated@@404 $generated@@145))))))
 :pattern ( ($generated@@370 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@289 (type $generated@@415))))
(let (($generated@@417 ($generated@@288 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@287 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@286 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (and (and (= (type $generated@@418) $generated@@145) (= (type $generated@@419) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@415) ($generated@@274 ($generated@@223 $generated@@418 $generated@@419)))))
 :no-pattern (type $generated@@418)
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@359 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@307 (type $generated@@420))))
(let (($generated@@422 ($generated@@306 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@305 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@304 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@145) (= (type $generated@@424) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@420) ($generated@@274 ($generated@@223 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@370 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@145) ($generated@@224 $generated@@425 $generated@@46)) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@425)) $generated@@425) ($generated@@132 ($generated@@360 $generated@@2 $generated@@425) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@425 $generated@@46))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@145) ($generated@@224 $generated@@426 $generated@@47)) (and (= ($generated@@274 ($generated@@360 $generated@@3 $generated@@426)) $generated@@426) ($generated@@132 ($generated@@360 $generated@@3 $generated@@426) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@426 $generated@@47))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@44)) (and (= ($generated@@274 ($generated@@360 $generated@@4 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@360 $generated@@4 $generated@@427) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@428) 20))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@45)) (and (= ($generated@@274 ($generated@@360 $generated@@428 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@360 $generated@@428 $generated@@429) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@45))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (= (type $generated@@431) $generated@@64) (= ($generated@@224 ($generated@@274 $generated@@430) $generated@@431) ($generated@@132 $generated@@430 $generated@@431)))
 :pattern ( ($generated@@224 ($generated@@274 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@79 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@76 $generated@@433 $generated@@2)) (<= 0 ($generated@@279 $generated@@432))))
 :pattern ( ($generated@@279 $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@269 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@268 $generated@@435)) (<= 0 ($generated@@267 $generated@@434))))
 :pattern ( ($generated@@267 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@388 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@388 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@388 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@388 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@388 $generated@@444 $generated@@445)) $generated@@58))
 :pattern ( ($generated@@388 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@396 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@396 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@396 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@396 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@454 $generated@@455)) $generated@@59))
 :pattern ( ($generated@@396 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@260 ($generated@@223 $generated@@456 $generated@@457)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@458 ($generated@@135 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@135 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@64)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@64) (= (type $generated@@465) $generated@@64)) (= ($generated@@462 ($generated@@135 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@135 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) (= (type $generated@@467) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@223 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert  (and (forall (($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@472))
)) (forall (($generated@@473 T@U) ($generated@@474 Int) ) (! (let (($generated@@475 ($generated@@269 (type $generated@@473))))
(= (type ($generated@@471 $generated@@473 $generated@@474)) $generated@@475))
 :pattern ( ($generated@@471 $generated@@473 $generated@@474))
))))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (and (= (type $generated@@476) ($generated@@268 $generated@@145)) (= (type $generated@@477) $generated@@64)) (= (type $generated@@478) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478) (forall (($generated@@479 Int) ) (!  (=> (and (<= 0 $generated@@479) (< $generated@@479 ($generated@@267 $generated@@476))) ($generated@@254 ($generated@@471 $generated@@476 $generated@@479) $generated@@477 $generated@@478))
 :pattern ( ($generated@@471 $generated@@476 $generated@@479))
))))
 :pattern ( ($generated@@74 $generated@@476 ($generated@@470 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@481 Int) ) (! (= ($generated@@480 ($generated@@75 $generated@@481)) $generated@@481)
 :pattern ( ($generated@@75 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@233 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@233 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@485)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@238 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@238 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@489)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@150 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@150 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@493)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@470 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@470 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@470 $generated@@497)) $generated@@57))
 :pattern ( ($generated@@470 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 (type $generated@@498)))
(= ($generated@@360 $generated@@499 ($generated@@274 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@274 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) (= ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))) (and ($generated@@224 ($generated@@81 ($generated@@361 $generated@@500) $generated@@503) $generated@@502) ($generated@@224 $generated@@503 $generated@@501)))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@500) $generated@@503))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@500) $generated@@503))
))))
 :pattern ( ($generated@@132 $generated@@500 ($generated@@388 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))) (and ($generated@@224 ($generated@@81 ($generated@@371 $generated@@504) $generated@@507) $generated@@506) ($generated@@224 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@132 $generated@@504 ($generated@@396 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@145)) (< ($generated@@508 $generated@@510) ($generated@@509 ($generated@@223 $generated@@510 $generated@@511))))
 :pattern ( ($generated@@223 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@508 $generated@@513) ($generated@@509 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516))) (and (= ($generated@@274 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514)) $generated@@514) ($generated@@132 ($generated@@360 ($generated@@287 $generated@@145 $generated@@145) $generated@@514) ($generated@@388 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@224 $generated@@514 ($generated@@388 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (and (= (type $generated@@517) $generated@@145) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519))) (and (= ($generated@@274 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517)) $generated@@517) ($generated@@132 ($generated@@360 ($generated@@305 $generated@@145 $generated@@145) $generated@@517) ($generated@@396 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@224 $generated@@517 ($generated@@396 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@64) (= (type $generated@@521) $generated@@64)) (= (type $generated@@522) $generated@@145)) ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521))) (and (= ($generated@@274 ($generated@@360 $generated@@136 $generated@@522)) $generated@@522) ($generated@@132 ($generated@@360 $generated@@136 $generated@@522) ($generated@@135 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@522 ($generated@@135 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
 (not ($generated@@0 ($generated@@81 ($generated@@404 $generated@@524) $generated@@523))))
 :pattern ( (let (($generated@@524 (type $generated@@523)))
($generated@@81 ($generated@@404 $generated@@524) $generated@@523)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@526 Int) ) (!  (=> (or ($generated@@251 $generated@@526) (not (= 0 $generated@@249))) (= ($generated@@250 $generated@@526) (= ($generated@@525 $generated@@526 ($generated@@243 2)) ($generated@@243 0))))
 :pattern ( ($generated@@250 $generated@@526))
))))
(assert (forall (($generated@@527 Int) ($generated@@528 Int) ) (! (= ($generated@@525 $generated@@527 $generated@@528) (mod $generated@@527 $generated@@528))
 :pattern ( ($generated@@525 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@136) (= ($generated@@508 ($generated@@274 $generated@@533)) ($generated@@509 $generated@@533)))
 :pattern ( ($generated@@508 ($generated@@274 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@224 $generated@@534 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@360 $generated@@2 $generated@@534)) $generated@@534) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@534) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@75 0)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@535) $generated@@145) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@535 ($generated@@233 $generated@@536))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535)) $generated@@535) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@535) ($generated@@233 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@233 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@64)) ($generated@@224 $generated@@537 ($generated@@238 $generated@@538))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537)) $generated@@537) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@238 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@238 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@150 $generated@@540))) (and (= ($generated@@274 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@360 ($generated@@76 $generated@@145 $generated@@2) $generated@@539) ($generated@@150 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@150 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@470 $generated@@542))) (and (= ($generated@@274 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@360 ($generated@@268 $generated@@145) $generated@@541) ($generated@@470 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@470 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@543 $generated@@546)))) ($generated@@254 $generated@@546 $generated@@544 $generated@@545))
 :pattern ( ($generated@@81 $generated@@543 $generated@@546))
))))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@150 $generated@@544) $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@136) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@549) (and ($generated@@134 $generated@@547) (exists (($generated@@550 T@U) ) (!  (and (= (type $generated@@550) $generated@@64) ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@135 $generated@@548 $generated@@550) $generated@@549))
))))) ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
 :pattern ( ($generated@@254 ($generated@@143 $generated@@547) $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@253 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@554 $generated@@552) $generated@@553))
))))) ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@254 ($generated@@144 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)) ($generated@@245 ($generated@@223 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@555) ($generated@@245 $generated@@556)))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))) ($generated@@245 ($generated@@274 ($generated@@8 $generated@@557))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@243 $generated@@557))))
)))
(assert (forall (($generated@@558 T@U) ) (! (= ($generated@@274 ($generated@@245 $generated@@558)) ($generated@@245 ($generated@@274 $generated@@558)))
 :pattern ( ($generated@@274 ($generated@@245 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@269 (type $generated@@559))))
 (=> (and (= (type $generated@@559) ($generated@@268 $generated@@560)) (= ($generated@@267 $generated@@559) 0)) (= $generated@@559 ($generated@@266 $generated@@560))))
 :pattern ( ($generated@@267 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@562)))
 (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@564 $generated@@2)) (= (type $generated@@563) $generated@@2)) (<= 0 ($generated $generated@@563))) (= ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)) (+ (- ($generated@@279 $generated@@561) ($generated ($generated@@81 $generated@@561 $generated@@562))) ($generated $generated@@563)))))
 :pattern ( ($generated@@279 ($generated@@82 $generated@@561 $generated@@562 $generated@@563)))
)))
(assert  (=> (<= 0 $generated@@249) (forall (($generated@@565 Int) ) (!  (=> (or ($generated@@251 ($generated@@243 $generated@@565)) (not (= 0 $generated@@249))) (= ($generated@@250 ($generated@@243 $generated@@565)) (= ($generated@@243 ($generated@@525 $generated@@565 ($generated@@243 2))) ($generated@@243 0))))
 :weight 3
 :pattern ( ($generated@@250 ($generated@@243 $generated@@565)))
))))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@2)) ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@3)) ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@4)) ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@428)) ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@145)) ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@268 $generated@@145)) (= (type $generated@@577) $generated@@64)) (= ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@267 $generated@@576))) ($generated@@224 ($generated@@471 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@471 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@132 $generated@@576 ($generated@@470 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@268 $generated@@145)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@267 $generated@@580))) (< ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@509 ($generated@@360 $generated@@136 ($generated@@471 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) $generated@@64)) ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584))) (and (and ($generated@@132 ($generated@@285 $generated@@582) ($generated@@233 $generated@@583)) ($generated@@132 ($generated@@328 $generated@@582) ($generated@@233 $generated@@584))) ($generated@@132 ($generated@@359 $generated@@582) ($generated@@233 ($generated@@135 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@132 $generated@@582 ($generated@@388 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@305 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@303 $generated@@585) ($generated@@238 $generated@@586)) ($generated@@132 ($generated@@339 $generated@@585) ($generated@@238 $generated@@587))) ($generated@@132 ($generated@@370 $generated@@585) ($generated@@238 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@396 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@132 $generated@@588 $generated@@46))
 :pattern ( ($generated@@132 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@132 $generated@@589 $generated@@47))
 :pattern ( ($generated@@132 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@132 $generated@@590 $generated@@44))
 :pattern ( ($generated@@132 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@428) ($generated@@132 $generated@@591 $generated@@45))
 :pattern ( ($generated@@132 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@145) ($generated@@132 $generated@@592 $generated@@48))
 :pattern ( ($generated@@132 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@593) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@594) $generated@@77)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@596) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@598  (=> (and (= $generated@@593 ($generated@@211 $generated@@594 $generated@@595 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@243 2) 0)))))
(let (($generated@@599 true))
(let (($generated@@600  (=> (= $generated@@596 ($generated@@156 $generated@@594 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@599) (=> (= (ControlFlow 0 4) 3) $generated@@598)))))
(let (($generated@@601  (=> (and (and ($generated@@253 $generated@@595) ($generated@@597 $generated@@595)) (and (= 0 $generated@@249) (= (ControlFlow 0 5) 4))) $generated@@600)))
$generated@@601)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (Int) Bool)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (Int) Bool)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@296 (Int) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int Int) Int)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@458 (Int Int) Int)
(declare-fun $generated@@459 (Int Int) Int)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (= (type $generated@@78) $generated@@69)) (= (type $generated@@80) $generated@@69)))
(assert (forall (($generated@@83 T@U) ) (!  (=> (= (type $generated@@83) $generated@@79) (= ($generated@@77 $generated@@83 $generated@@78)  (and ($generated@@77 $generated@@83 $generated@@80) ($generated@@81 ($generated@@82 $generated@@83)))))
 :pattern ( ($generated@@77 $generated@@83 $generated@@78))
)))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@70)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 12)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@72 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@69)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@77 $generated@@144 ($generated@@87 0)))
 :pattern ( ($generated@@77 $generated@@144 ($generated@@87 0)))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@79) (or ($generated@@147 $generated@@148) (and (not (= 2 $generated@@145)) ($generated@@77 $generated@@148 $generated@@78)))) true)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@151 $generated@@152)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@69) (= (type $generated@@154) $generated@@69)) (= (type $generated@@155) $generated@@79)) ($generated@@77 $generated@@155 ($generated@@150 $generated@@153 $generated@@154))) ($generated@@149 $generated@@155))
 :pattern ( ($generated@@149 $generated@@155) ($generated@@77 $generated@@155 ($generated@@150 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@79) (= (type $generated@@163) $generated@@79)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@77 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@77 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@89 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@89) (= (type $generated@@219) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@89)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@89 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@72 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@89) (= (type $generated@@231) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@232) ($generated@@71 $generated@@4))) (= (type $generated@@234) $generated@@89)) (= (type $generated@@235) ($generated@@71 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@79) (= (type $generated@@238) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@237 $generated@@78 $generated@@238) ($generated@@86 $generated@@237 $generated@@80 $generated@@238)))
 :pattern ( ($generated@@86 $generated@@237 $generated@@78 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@79) ($generated@@77 $generated@@240 $generated@@80)) ($generated@@239 $generated@@240))
 :pattern ( ($generated@@239 $generated@@240) ($generated@@77 $generated@@240 $generated@@80))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@79)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@69) (= (type $generated@@246) $generated@@69)) (= (type $generated@@247) $generated@@159)) (= (type $generated@@248) $generated@@159)) (= ($generated@@77 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@77 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@79) (= (type $generated@@250) $generated@@79)) (= ($generated@@156 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@156 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@79) (= (type $generated@@253) $generated@@79)) (= ($generated@@251 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@77 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@159) ($generated@@0 ($generated@@93 $generated@@256 $generated@@258))) ($generated@@242 $generated@@258 $generated@@257))
 :pattern ( ($generated@@93 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@77 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@69)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@262) $generated@@69)) (= ($generated@@77 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@159) ($generated@@0 ($generated@@93 $generated@@261 $generated@@263))) ($generated@@242 $generated@@263 $generated@@262))
 :pattern ( ($generated@@93 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@77 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@271 Int) ) (!  (=> (or ($generated@@270 $generated@@271) (not (= 0 $generated@@145))) true)
 :pattern ( ($generated@@81 $generated@@271))
))))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@69) (= (type $generated@@275) $generated@@69)) (= (type $generated@@276) $generated@@159)) (= (type $generated@@277) $generated@@159)) (= (type $generated@@278) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@272 $generated@@278)) (= ($generated@@86 ($generated@@241 $generated@@276 $generated@@277) ($generated@@150 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@86 ($generated@@241 $generated@@276 $generated@@277) ($generated@@150 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@73)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@79) (= ($generated@@149 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@79) (= ($generated@@239 $generated@@282) (= ($generated@@279 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@239 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@79) ($generated@@149 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@159) (= (type $generated@@285) $generated@@159)) (= $generated@@283 ($generated@@241 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@149 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (= (type $generated@@294) $generated@@79) (= (type $generated@@295) $generated@@79)) true) (= ($generated@@251 $generated@@294 $generated@@295) (= ($generated@@82 $generated@@294) ($generated@@82 $generated@@295))))
 :pattern ( ($generated@@251 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 Int) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@79)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@79) ($generated@@239 $generated@@298)) (exists (($generated@@299 Int) ) (= $generated@@298 ($generated@@296 $generated@@299))))
 :pattern ( ($generated@@239 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@159)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@69) (= (type $generated@@304) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@273 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@86 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@273 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@88 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@91 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@88 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@93 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@88 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@93 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@93 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@88 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@93 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@93 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@91 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@88 $generated@@348 $generated@@2)) (= ($generated@@165 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@93 $generated@@347 $generated@@349))) (<= ($generated ($generated@@93 $generated@@347 $generated@@349)) ($generated@@305 $generated@@347))))
 :pattern ( ($generated@@93 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@165 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@159) ($generated@@242 $generated@@353 $generated@@80)) (and (= ($generated@@300 ($generated@@350 $generated@@79 $generated@@353)) $generated@@353) ($generated@@77 ($generated@@350 $generated@@79 $generated@@353) $generated@@80)))
 :pattern ( ($generated@@242 $generated@@353 $generated@@80))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@159) ($generated@@242 $generated@@354 $generated@@78)) (and (= ($generated@@300 ($generated@@350 $generated@@79 $generated@@354)) $generated@@354) ($generated@@77 ($generated@@350 $generated@@79 $generated@@354) $generated@@78)))
 :pattern ( ($generated@@242 $generated@@354 $generated@@78))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@315 (type $generated@@355))))
(let (($generated@@357 ($generated@@314 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@313 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@312 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@93 ($generated@@311 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@311 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@315 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@88 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@315 (type $generated@@362))))
(let (($generated@@364 ($generated@@314 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@313 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@312 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@93 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@333 (type $generated@@366))))
(let (($generated@@368 ($generated@@332 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@331 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@330 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@93 ($generated@@329 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@329 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@333 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@88 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@333 (type $generated@@373))))
(let (($generated@@375 ($generated@@332 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@331 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@330 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@93 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@378) $generated@@69)) (= ($generated@@77 $generated@@377 ($generated@@164 $generated@@378)) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@159) (< 0 ($generated ($generated@@93 $generated@@377 $generated@@379)))) ($generated@@242 $generated@@379 $generated@@378))
 :pattern ( ($generated@@93 $generated@@377 $generated@@379))
))))
 :pattern ( ($generated@@77 $generated@@377 ($generated@@164 $generated@@378)))
)))
(assert (forall (($generated@@380 Int) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@272 $generated@@381)) (= ($generated@@86 ($generated@@296 $generated@@380) $generated@@80 $generated@@381) ($generated@@86 ($generated@@8 $generated@@380) $generated@@46 $generated@@381)))
 :pattern ( ($generated@@86 ($generated@@296 $generated@@380) $generated@@80 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@383) $generated@@69)) (= (type $generated@@384) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@382 ($generated@@254 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@159) ($generated@@0 ($generated@@93 $generated@@382 $generated@@385))) ($generated@@273 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@93 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@86 $generated@@382 ($generated@@254 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@387) $generated@@69)) (= (type $generated@@388) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@386 ($generated@@259 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@159) ($generated@@0 ($generated@@93 $generated@@386 $generated@@389))) ($generated@@273 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@93 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@86 $generated@@386 ($generated@@259 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@93 ($generated@@306 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@93 ($generated@@306 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@315 (type $generated@@395))))
(let (($generated@@397 ($generated@@314 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@88 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@399) $generated@@159)) (= ($generated@@0 ($generated@@93 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@93 ($generated@@311 $generated@@398) ($generated@@157 ($generated@@350 $generated@@79 $generated@@399)))) (= ($generated@@93 ($generated@@393 $generated@@398) ($generated@@157 ($generated@@350 $generated@@79 $generated@@399))) ($generated@@158 ($generated@@350 $generated@@79 $generated@@399))))))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@333 (type $generated@@403))))
(let (($generated@@405 ($generated@@332 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@88 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@331 $generated@@159 $generated@@159)) (= (type $generated@@407) $generated@@159)) (= ($generated@@0 ($generated@@93 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@93 ($generated@@329 $generated@@406) ($generated@@157 ($generated@@350 $generated@@79 $generated@@407)))) (= ($generated@@93 ($generated@@401 $generated@@406) ($generated@@157 ($generated@@350 $generated@@79 $generated@@407))) ($generated@@158 ($generated@@350 $generated@@79 $generated@@407))))))
 :pattern ( ($generated@@93 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@314 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@313 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@93 ($generated@@359 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@93 ($generated@@311 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@93 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@93 ($generated@@311 $generated@@408) $generated@@412))
 :pattern ( ($generated@@93 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@93 ($generated@@359 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@332 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@331 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@93 ($generated@@370 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@93 ($generated@@329 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@93 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@93 ($generated@@329 $generated@@413) $generated@@417))
 :pattern ( ($generated@@93 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@93 ($generated@@370 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@69)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@422) $generated@@69)) (= (type $generated@@423) $generated@@69)) (= (type $generated@@424) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@311 $generated@@421) $generated@@425))) (and ($generated@@273 ($generated@@93 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@273 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@93 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@93 ($generated@@311 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@86 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@69)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@331 $generated@@159 $generated@@159)) (= (type $generated@@430) $generated@@69)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@329 $generated@@429) $generated@@433))) (and ($generated@@273 ($generated@@93 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@273 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@93 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@93 ($generated@@329 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@86 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 Int) ($generated@@436 Int) ) (! (= ($generated@@434 $generated@@435 $generated@@436) (div $generated@@435 $generated@@436))
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@88 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@333 (type $generated@@439))))
(let (($generated@@441 ($generated@@332 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@331 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@330 $generated@@441 $generated@@440)) (= ($generated@@329 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@329 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@333 (type $generated@@442))))
(let (($generated@@444 ($generated@@332 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@331 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@330 $generated@@444 $generated@@443)) (= ($generated@@370 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@370 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@333 (type $generated@@445))))
(let (($generated@@447 ($generated@@332 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@331 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@330 $generated@@447 $generated@@446)) (= ($generated@@400 $generated@@445) ($generated@@437 $generated@@159))))))
 :pattern ( ($generated@@400 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@315 (type $generated@@448))))
(let (($generated@@450 ($generated@@314 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@313 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@312 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@159) (= (type $generated@@452) $generated@@159)) ($generated@@0 ($generated@@93 ($generated@@392 $generated@@448) ($generated@@300 ($generated@@241 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@392 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@333 (type $generated@@453))))
(let (($generated@@455 ($generated@@332 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@331 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@330 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@159) (= (type $generated@@457) $generated@@159)) ($generated@@0 ($generated@@93 ($generated@@400 $generated@@453) ($generated@@300 ($generated@@241 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@400 $generated@@453))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@79) (or ($generated@@147 ($generated@@266 $generated@@460)) (and (not (= 2 $generated@@145)) ($generated@@77 $generated@@460 $generated@@78)))) (and (and ($generated@@239 ($generated@@266 $generated@@460)) (=> (not (= ($generated@@264 ($generated@@458 ($generated@@82 ($generated@@266 $generated@@460)) ($generated@@264 2))) ($generated@@264 1))) ($generated@@239 ($generated@@266 $generated@@460)))) (= ($generated@@146 ($generated@@266 $generated@@460)) (ite (= ($generated@@264 ($generated@@458 ($generated@@82 ($generated@@266 $generated@@460)) ($generated@@264 2))) ($generated@@264 1)) ($generated@@434 1 ($generated@@264 0)) ($generated@@459 ($generated@@264 ($generated@@82 ($generated@@266 $generated@@460))) ($generated@@264 2))))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@266 $generated@@460)))
))))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@159) ($generated@@242 $generated@@461 $generated@@46)) (and (= ($generated@@300 ($generated@@350 $generated@@2 $generated@@461)) $generated@@461) ($generated@@77 ($generated@@350 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@159) ($generated@@242 $generated@@462 $generated@@47)) (and (= ($generated@@300 ($generated@@350 $generated@@3 $generated@@462)) $generated@@462) ($generated@@77 ($generated@@350 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@159) ($generated@@242 $generated@@463 $generated@@44)) (and (= ($generated@@300 ($generated@@350 $generated@@4 $generated@@463)) $generated@@463) ($generated@@77 ($generated@@350 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@159) ($generated@@242 $generated@@465 $generated@@45)) (and (= ($generated@@300 ($generated@@350 $generated@@464 $generated@@465)) $generated@@465) ($generated@@77 ($generated@@350 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@69) (= ($generated@@242 ($generated@@300 $generated@@466) $generated@@467) ($generated@@77 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@242 ($generated@@300 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@91 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@88 $generated@@469 $generated@@2)) (<= 0 ($generated@@305 $generated@@468))))
 :pattern ( ($generated@@305 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@289 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@288 $generated@@471)) (<= 0 ($generated@@287 $generated@@470))))
 :pattern ( ($generated@@287 $generated@@470))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@79) (or ($generated@@147 $generated@@472) (and (not (= 2 $generated@@145)) ($generated@@77 $generated@@472 $generated@@78)))) (and (and ($generated@@239 $generated@@472) (=> (not (= ($generated@@458 ($generated@@82 $generated@@472) ($generated@@264 2)) ($generated@@264 1))) ($generated@@239 $generated@@472))) (= ($generated@@146 $generated@@472) (ite (= ($generated@@458 ($generated@@82 $generated@@472) ($generated@@264 2)) ($generated@@264 1)) ($generated@@434 1 ($generated@@264 0)) ($generated@@459 ($generated@@82 $generated@@472) ($generated@@264 2))))))
 :pattern ( ($generated@@146 $generated@@472))
))))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@418 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@418 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@418 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@84 ($generated@@418 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@426 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@426 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@426 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@426 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@84 ($generated@@426 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@159) (= (type $generated@@494) $generated@@159)) (= ($generated@@279 ($generated@@241 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@495 ($generated@@150 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@150 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@69) (= (type $generated@@502) $generated@@69)) (= ($generated@@499 ($generated@@150 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@150 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@159) (= (type $generated@@504) $generated@@159)) (= ($generated@@157 ($generated@@241 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@241 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@159) (= (type $generated@@506) $generated@@159)) (= ($generated@@158 ($generated@@241 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@241 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@289 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@288 $generated@@159)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@287 $generated@@513))) ($generated@@273 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@86 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@87 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@87 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@254 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@254 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@84 ($generated@@254 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@259 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@259 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@84 ($generated@@259 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@527 ($generated@@164 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@164 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@69) (= ($generated@@84 ($generated@@164 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@69)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@69) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@69) (= ($generated@@84 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@279 ($generated@@296 $generated@@535)) $generated@@63)
 :pattern ( ($generated@@296 $generated@@535))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@82 ($generated@@296 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@296 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(= ($generated@@350 $generated@@538 ($generated@@300 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@300 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) (= ($generated@@77 $generated@@539 ($generated@@418 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@311 $generated@@539) $generated@@542))) (and ($generated@@242 ($generated@@93 ($generated@@393 $generated@@539) $generated@@542) $generated@@541) ($generated@@242 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@93 ($generated@@393 $generated@@539) $generated@@542))
 :pattern ( ($generated@@93 ($generated@@311 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@77 $generated@@539 ($generated@@418 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@331 $generated@@159 $generated@@159)) (= (type $generated@@544) $generated@@69)) (= (type $generated@@545) $generated@@69)) (= ($generated@@77 $generated@@543 ($generated@@426 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@329 $generated@@543) $generated@@546))) (and ($generated@@242 ($generated@@93 ($generated@@401 $generated@@543) $generated@@546) $generated@@545) ($generated@@242 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@93 ($generated@@401 $generated@@543) $generated@@546))
 :pattern ( ($generated@@93 ($generated@@329 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@77 $generated@@543 ($generated@@426 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@159) (= (type $generated@@550) $generated@@159)) (< ($generated@@547 $generated@@549) ($generated@@548 ($generated@@241 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@241 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@159) (= (type $generated@@552) $generated@@159)) (< ($generated@@547 $generated@@552) ($generated@@548 ($generated@@241 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@241 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@77 ($generated@@296 $generated@@553) $generated@@80) ($generated@@77 ($generated@@8 $generated@@553) $generated@@46))
 :pattern ( ($generated@@77 ($generated@@296 $generated@@553) $generated@@80))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@69)) ($generated@@242 $generated@@554 ($generated@@418 $generated@@555 $generated@@556))) (and (= ($generated@@300 ($generated@@350 ($generated@@313 $generated@@159 $generated@@159) $generated@@554)) $generated@@554) ($generated@@77 ($generated@@350 ($generated@@313 $generated@@159 $generated@@159) $generated@@554) ($generated@@418 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@242 $generated@@554 ($generated@@418 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@159) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@69)) ($generated@@242 $generated@@557 ($generated@@426 $generated@@558 $generated@@559))) (and (= ($generated@@300 ($generated@@350 ($generated@@331 $generated@@159 $generated@@159) $generated@@557)) $generated@@557) ($generated@@77 ($generated@@350 ($generated@@331 $generated@@159 $generated@@159) $generated@@557) ($generated@@426 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@242 $generated@@557 ($generated@@426 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@69) (= (type $generated@@561) $generated@@69)) (= (type $generated@@562) $generated@@159)) ($generated@@242 $generated@@562 ($generated@@150 $generated@@560 $generated@@561))) (and (= ($generated@@300 ($generated@@350 $generated@@79 $generated@@562)) $generated@@562) ($generated@@77 ($generated@@350 $generated@@79 $generated@@562) ($generated@@150 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@242 $generated@@562 ($generated@@150 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@93 ($generated@@437 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@93 ($generated@@437 $generated@@564) $generated@@563)))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@565 Int) ) (!  (=> (or ($generated@@270 $generated@@565) (not (= 0 $generated@@145))) (= ($generated@@81 $generated@@565) (= ($generated@@458 $generated@@565 ($generated@@264 2)) ($generated@@264 0))))
 :pattern ( ($generated@@81 $generated@@565))
))))
(assert (forall (($generated@@566 Int) ($generated@@567 Int) ) (! (= ($generated@@458 $generated@@566 $generated@@567) (mod $generated@@566 $generated@@567))
 :pattern ( ($generated@@458 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@74)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@69) (= (type $generated@@571) $generated@@69)) (and (= ($generated@@84 ($generated@@150 $generated@@570 $generated@@571)) $generated@@62) (= ($generated@@568 ($generated@@150 $generated@@570 $generated@@571)) $generated@@66)))
 :pattern ( ($generated@@150 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@79) (= (type $generated@@573) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@272 $generated@@573) (and ($generated@@239 $generated@@572) ($generated@@86 $generated@@572 $generated@@80 $generated@@573)))) ($generated@@86 ($generated@@8 ($generated@@82 $generated@@572)) $generated@@46 $generated@@573))
 :pattern ( ($generated@@86 ($generated@@8 ($generated@@82 $generated@@572)) $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@574 Int) ($generated@@575 Int) ) (! (= ($generated@@459 $generated@@574 $generated@@575) (* $generated@@574 $generated@@575))
 :pattern ( ($generated@@459 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@79) (= ($generated@@547 ($generated@@300 $generated@@576)) ($generated@@548 $generated@@576)))
 :pattern ( ($generated@@547 ($generated@@300 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@159) ($generated@@242 $generated@@577 ($generated@@87 0))) (and (= ($generated@@300 ($generated@@350 $generated@@2 $generated@@577)) $generated@@577) ($generated@@77 ($generated@@350 ($generated@@88 $generated@@159 $generated@@4) $generated@@577) ($generated@@87 0))))
 :pattern ( ($generated@@242 $generated@@577 ($generated@@87 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@159) (= (type $generated@@579) $generated@@69)) ($generated@@242 $generated@@578 ($generated@@254 $generated@@579))) (and (= ($generated@@300 ($generated@@350 ($generated@@88 $generated@@159 $generated@@4) $generated@@578)) $generated@@578) ($generated@@77 ($generated@@350 ($generated@@88 $generated@@159 $generated@@4) $generated@@578) ($generated@@254 $generated@@579))))
 :pattern ( ($generated@@242 $generated@@578 ($generated@@254 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@159) (= (type $generated@@581) $generated@@69)) ($generated@@242 $generated@@580 ($generated@@259 $generated@@581))) (and (= ($generated@@300 ($generated@@350 ($generated@@88 $generated@@159 $generated@@4) $generated@@580)) $generated@@580) ($generated@@77 ($generated@@350 ($generated@@88 $generated@@159 $generated@@4) $generated@@580) ($generated@@259 $generated@@581))))
 :pattern ( ($generated@@242 $generated@@580 ($generated@@259 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@159) (= (type $generated@@583) $generated@@69)) ($generated@@242 $generated@@582 ($generated@@164 $generated@@583))) (and (= ($generated@@300 ($generated@@350 ($generated@@88 $generated@@159 $generated@@2) $generated@@582)) $generated@@582) ($generated@@77 ($generated@@350 ($generated@@88 $generated@@159 $generated@@2) $generated@@582) ($generated@@164 $generated@@583))))
 :pattern ( ($generated@@242 $generated@@582 ($generated@@164 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@159) (= (type $generated@@585) $generated@@69)) ($generated@@242 $generated@@584 ($generated@@507 $generated@@585))) (and (= ($generated@@300 ($generated@@350 ($generated@@288 $generated@@159) $generated@@584)) $generated@@584) ($generated@@77 ($generated@@350 ($generated@@288 $generated@@159) $generated@@584) ($generated@@507 $generated@@585))))
 :pattern ( ($generated@@242 $generated@@584 ($generated@@507 $generated@@585)))
)))
(assert (= ($generated@@84 $generated@@80) $generated@@64))
(assert (= ($generated@@568 $generated@@80) $generated@@67))
(assert (= ($generated@@84 $generated@@78) $generated@@65))
(assert (= ($generated@@568 $generated@@78) $generated@@68))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@587) $generated@@69)) (= (type $generated@@588) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@586 ($generated@@164 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@159) (< 0 ($generated ($generated@@93 $generated@@586 $generated@@589)))) ($generated@@273 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@93 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@86 $generated@@586 ($generated@@164 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@79) (= (type $generated@@591) $generated@@69)) (= (type $generated@@592) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@272 $generated@@592) (and ($generated@@149 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@69) ($generated@@86 $generated@@590 ($generated@@150 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@86 $generated@@590 ($generated@@150 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@273 ($generated@@157 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@273 ($generated@@157 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@79) (= (type $generated@@595) $generated@@69)) (= (type $generated@@596) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@272 $generated@@596) (and ($generated@@149 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@69) ($generated@@86 $generated@@594 ($generated@@150 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@86 $generated@@594 ($generated@@150 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@273 ($generated@@158 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@273 ($generated@@158 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@159) (= (type $generated@@599) $generated@@159)) (= ($generated@@241 ($generated@@266 $generated@@598) ($generated@@266 $generated@@599)) ($generated@@266 ($generated@@241 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@241 ($generated@@266 $generated@@598) ($generated@@266 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@300 ($generated@@8 ($generated@@264 $generated@@600))) ($generated@@266 ($generated@@300 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@300 ($generated@@8 ($generated@@264 $generated@@600))))
)))
(assert (forall (($generated@@601 Int) ) (! (= ($generated@@296 ($generated@@264 $generated@@601)) ($generated@@266 ($generated@@296 $generated@@601)))
 :pattern ( ($generated@@296 ($generated@@264 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@300 ($generated@@266 $generated@@602)) ($generated@@266 ($generated@@300 $generated@@602)))
 :pattern ( ($generated@@300 ($generated@@266 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@289 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@288 $generated@@604)) (= ($generated@@287 $generated@@603) 0)) (= $generated@@603 ($generated@@286 $generated@@604))))
 :pattern ( ($generated@@287 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@88 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@305 ($generated@@94 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@305 $generated@@605) ($generated ($generated@@93 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@305 ($generated@@94 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@609 Int) ) (!  (=> (or ($generated@@270 ($generated@@264 $generated@@609)) (not (= 0 $generated@@145))) (= ($generated@@81 ($generated@@264 $generated@@609)) (= ($generated@@264 ($generated@@458 $generated@@609 ($generated@@264 2))) ($generated@@264 0))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@264 $generated@@609)))
))))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@611) $generated@@2)) ($generated@@86 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@86 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@613) $generated@@3)) ($generated@@86 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@86 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@615) $generated@@4)) ($generated@@86 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@86 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@617) $generated@@464)) ($generated@@86 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@86 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@619) $generated@@159)) ($generated@@86 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@86 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@288 $generated@@159)) (= (type $generated@@621) $generated@@69)) (= ($generated@@77 $generated@@620 ($generated@@507 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@287 $generated@@620))) ($generated@@242 ($generated@@508 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@508 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@77 $generated@@620 ($generated@@507 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@288 $generated@@159)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@287 $generated@@624))) (< ($generated@@548 ($generated@@350 $generated@@79 ($generated@@508 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@548 ($generated@@350 $generated@@79 ($generated@@508 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@313 $generated@@159 $generated@@159)) (= (type $generated@@627) $generated@@69)) (= (type $generated@@628) $generated@@69)) ($generated@@77 $generated@@626 ($generated@@418 $generated@@627 $generated@@628))) (and (and ($generated@@77 ($generated@@311 $generated@@626) ($generated@@254 $generated@@627)) ($generated@@77 ($generated@@359 $generated@@626) ($generated@@254 $generated@@628))) ($generated@@77 ($generated@@392 $generated@@626) ($generated@@254 ($generated@@150 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@77 $generated@@626 ($generated@@418 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@331 $generated@@159 $generated@@159)) (= (type $generated@@630) $generated@@69)) (= (type $generated@@631) $generated@@69)) ($generated@@77 $generated@@629 ($generated@@426 $generated@@630 $generated@@631))) (and (and ($generated@@77 ($generated@@329 $generated@@629) ($generated@@259 $generated@@630)) ($generated@@77 ($generated@@370 $generated@@629) ($generated@@259 $generated@@631))) ($generated@@77 ($generated@@400 $generated@@629) ($generated@@259 ($generated@@150 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@77 $generated@@629 ($generated@@426 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@77 $generated@@632 $generated@@46))
 :pattern ( ($generated@@77 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@77 $generated@@633 $generated@@47))
 :pattern ( ($generated@@77 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@77 $generated@@634 $generated@@44))
 :pattern ( ($generated@@77 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@464) ($generated@@77 $generated@@635 $generated@@45))
 :pattern ( ($generated@@77 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@159) ($generated@@77 $generated@@636 $generated@@48))
 :pattern ( ($generated@@77 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@637) $generated@@79) (= (type $generated@@638) ($generated@@171 $generated@@89 $generated@@4))) (= (type $generated@@639) $generated@@89)) (= (type $generated@@640) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@641) ($generated@@171 $generated@@89 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@643 true))
(let (($generated@@644  (=> (and (= ($generated@@458 ($generated@@82 $generated@@637) ($generated@@264 2)) ($generated@@264 1)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@264 0) 0)))))
(let (($generated@@645  (=> (and (= $generated@@638 ($generated@@225 $generated@@639 $generated@@640 $generated@@60 false)) ($generated@@239 $generated@@637)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= ($generated@@264 2) 0))) (=> (not (= ($generated@@264 2) 0)) (and (=> (= (ControlFlow 0 5) 3) $generated@@644) (=> (= (ControlFlow 0 5) 4) $generated@@643)))))))
(let (($generated@@646 true))
(let (($generated@@647  (=> (= $generated@@641 ($generated@@170 $generated@@639 $generated@@640 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@646) (=> (= (ControlFlow 0 7) 5) $generated@@645)))))
(let (($generated@@648  (=> (and (and (and ($generated@@272 $generated@@640) ($generated@@642 $generated@@640)) ($generated@@77 $generated@@637 $generated@@78)) (and (= 2 $generated@@145) (= (ControlFlow 0 8) 7))) $generated@@647)))
$generated@@648)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (Int) Bool)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (Int) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (Int) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@284 (Int) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@338 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (Int Int) Int)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@458 (Int Int) Int)
(declare-fun $generated@@459 (Int Int) Int)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@556 (T@U T@U) T@U)
(declare-fun $generated@@572 (T@T) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@636 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert  (and (and (= ($generated@@1 $generated@@79) 11) (= (type $generated@@78) $generated@@69)) (= (type $generated@@80) $generated@@69)))
(assert (forall (($generated@@83 T@U) ) (!  (=> (= (type $generated@@83) $generated@@79) (= ($generated@@77 $generated@@83 $generated@@78)  (and ($generated@@77 $generated@@83 $generated@@80) ($generated@@81 ($generated@@82 $generated@@83)))))
 :pattern ( ($generated@@77 $generated@@83 $generated@@78))
)))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@70)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 12)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@72 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@69)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@77 $generated@@144 ($generated@@87 0)))
 :pattern ( ($generated@@77 $generated@@144 ($generated@@87 0)))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@79) (or ($generated@@147 $generated@@148) (and (not (= 2 $generated@@145)) ($generated@@77 $generated@@148 $generated@@78)))) true)
 :pattern ( ($generated@@146 $generated@@148))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@151 $generated@@152)) $generated@@69)
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@69) (= (type $generated@@154) $generated@@69)) (= (type $generated@@155) $generated@@79)) ($generated@@77 $generated@@155 ($generated@@150 $generated@@153 $generated@@154))) ($generated@@149 $generated@@155))
 :pattern ( ($generated@@149 $generated@@155) ($generated@@77 $generated@@155 ($generated@@150 $generated@@153 $generated@@154)))
)))
(assert  (and (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@157 $generated@@160))
))) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@159)
 :pattern ( ($generated@@158 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@79) (= (type $generated@@163) $generated@@79)) true) (= ($generated@@156 $generated@@162 $generated@@163)  (and (= ($generated@@157 $generated@@162) ($generated@@157 $generated@@163)) (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)))))
 :pattern ( ($generated@@156 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@168) $generated@@69)) ($generated@@77 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@77 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@89 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@72 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@89) (= (type $generated@@219) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@220) ($generated@@71 $generated@@4))) (= (type $generated@@222) $generated@@89)) (= (type $generated@@223) ($generated@@71 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@79) (= (type $generated@@226) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@225 $generated@@78 $generated@@226) ($generated@@86 $generated@@225 $generated@@80 $generated@@226)))
 :pattern ( ($generated@@86 $generated@@225 $generated@@78 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@79) ($generated@@77 $generated@@228 $generated@@80)) ($generated@@227 $generated@@228))
 :pattern ( ($generated@@227 $generated@@228) ($generated@@77 $generated@@228 $generated@@80))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@79)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@69) (= (type $generated@@234) $generated@@69)) (= (type $generated@@235) $generated@@159)) (= (type $generated@@236) $generated@@159)) (= ($generated@@77 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@77 ($generated@@229 $generated@@235 $generated@@236) ($generated@@150 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@79) (= (type $generated@@238) $generated@@79)) (= ($generated@@156 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@156 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@79) (= (type $generated@@241) $generated@@79)) (= ($generated@@239 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@239 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@69)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@245) $generated@@69)) (= ($generated@@77 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@159) ($generated@@0 ($generated@@93 $generated@@244 $generated@@246))) ($generated@@230 $generated@@246 $generated@@245))
 :pattern ( ($generated@@93 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@77 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@69)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@250) $generated@@69)) (= ($generated@@77 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@159) ($generated@@0 ($generated@@93 $generated@@249 $generated@@251))) ($generated@@230 $generated@@251 $generated@@250))
 :pattern ( ($generated@@93 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@77 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 Int) ) (! (= ($generated@@252 $generated@@253) $generated@@253)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@259 Int) ) (!  (=> (or ($generated@@258 $generated@@259) (not (= 0 $generated@@145))) true)
 :pattern ( ($generated@@81 $generated@@259))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@69) (= (type $generated@@263) $generated@@69)) (= (type $generated@@264) $generated@@159)) (= (type $generated@@265) $generated@@159)) (= (type $generated@@266) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@260 $generated@@266)) (= ($generated@@86 ($generated@@229 $generated@@264 $generated@@265) ($generated@@150 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@86 ($generated@@229 $generated@@264 $generated@@265) ($generated@@150 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@73)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@79) (= ($generated@@149 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@79) (= ($generated@@227 $generated@@270) (= ($generated@@267 $generated@@270) $generated@@63)))
 :pattern ( ($generated@@227 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@79) ($generated@@149 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@159) (= (type $generated@@273) $generated@@159)) (= $generated@@271 ($generated@@229 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@149 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@79) (= (type $generated@@283) $generated@@79)) true) (= ($generated@@239 $generated@@282 $generated@@283) (= ($generated@@82 $generated@@282) ($generated@@82 $generated@@283))))
 :pattern ( ($generated@@239 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 Int) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@79)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@79) ($generated@@227 $generated@@286)) (exists (($generated@@287 Int) ) (= $generated@@286 ($generated@@284 $generated@@287))))
 :pattern ( ($generated@@227 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@159)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@69) (= (type $generated@@292) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@261 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@86 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@261 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@88 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@91 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@88 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@93 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 18)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@88 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@93 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@93 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 19)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@88 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@93 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@93 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@91 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@88 $generated@@336 $generated@@2)) (= ($generated@@165 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@93 $generated@@335 $generated@@337))) (<= ($generated ($generated@@93 $generated@@335 $generated@@337)) ($generated@@293 $generated@@335))))
 :pattern ( ($generated@@93 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@165 $generated@@335))
)))
(assert (forall (($generated@@339 T@T) ($generated@@340 T@U) ) (! (= (type ($generated@@338 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@159) ($generated@@230 $generated@@341 $generated@@80)) (and (= ($generated@@288 ($generated@@338 $generated@@79 $generated@@341)) $generated@@341) ($generated@@77 ($generated@@338 $generated@@79 $generated@@341) $generated@@80)))
 :pattern ( ($generated@@230 $generated@@341 $generated@@80))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@159) ($generated@@230 $generated@@342 $generated@@78)) (and (= ($generated@@288 ($generated@@338 $generated@@79 $generated@@342)) $generated@@342) ($generated@@77 ($generated@@338 $generated@@79 $generated@@342) $generated@@78)))
 :pattern ( ($generated@@230 $generated@@342 $generated@@78))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(let (($generated@@345 ($generated@@302 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@301 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@300 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@299 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@303 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@88 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@303 (type $generated@@350))))
(let (($generated@@352 ($generated@@302 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@301 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@300 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@93 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@321 (type $generated@@354))))
(let (($generated@@356 ($generated@@320 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@319 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@318 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@317 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@321 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@88 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@321 (type $generated@@361))))
(let (($generated@@363 ($generated@@320 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@319 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@318 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@93 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@366) $generated@@69)) (= ($generated@@77 $generated@@365 ($generated@@164 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@159) (< 0 ($generated ($generated@@93 $generated@@365 $generated@@367)))) ($generated@@230 $generated@@367 $generated@@366))
 :pattern ( ($generated@@93 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@77 $generated@@365 ($generated@@164 $generated@@366)))
)))
(assert (forall (($generated@@368 Int) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@260 $generated@@369)) (= ($generated@@86 ($generated@@284 $generated@@368) $generated@@80 $generated@@369) ($generated@@86 ($generated@@8 $generated@@368) $generated@@46 $generated@@369)))
 :pattern ( ($generated@@86 ($generated@@284 $generated@@368) $generated@@80 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@371) $generated@@69)) (= (type $generated@@372) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@370 ($generated@@242 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@159) ($generated@@0 ($generated@@93 $generated@@370 $generated@@373))) ($generated@@261 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@93 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@86 $generated@@370 ($generated@@242 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@375) $generated@@69)) (= (type $generated@@376) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@374 ($generated@@247 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@159) ($generated@@0 ($generated@@93 $generated@@374 $generated@@377))) ($generated@@261 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@93 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@86 $generated@@374 ($generated@@247 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 (type $generated@@378)))
(= ($generated ($generated@@93 ($generated@@294 $generated@@379) $generated@@378)) 0))
 :pattern ( (let (($generated@@379 (type $generated@@378)))
($generated@@93 ($generated@@294 $generated@@379) $generated@@378)))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@303 (type $generated@@383))))
(let (($generated@@385 ($generated@@302 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@88 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@387) $generated@@159)) (= ($generated@@0 ($generated@@93 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@93 ($generated@@299 $generated@@386) ($generated@@157 ($generated@@338 $generated@@79 $generated@@387)))) (= ($generated@@93 ($generated@@381 $generated@@386) ($generated@@157 ($generated@@338 $generated@@79 $generated@@387))) ($generated@@158 ($generated@@338 $generated@@79 $generated@@387))))))
 :pattern ( ($generated@@93 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@321 (type $generated@@391))))
(let (($generated@@393 ($generated@@320 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@88 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@395) $generated@@159)) (= ($generated@@0 ($generated@@93 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@93 ($generated@@317 $generated@@394) ($generated@@157 ($generated@@338 $generated@@79 $generated@@395)))) (= ($generated@@93 ($generated@@389 $generated@@394) ($generated@@157 ($generated@@338 $generated@@79 $generated@@395))) ($generated@@158 ($generated@@338 $generated@@79 $generated@@395))))))
 :pattern ( ($generated@@93 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@302 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@301 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@93 ($generated@@347 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@93 ($generated@@299 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@93 ($generated@@381 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@396) $generated@@400))
 :pattern ( ($generated@@93 ($generated@@381 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@93 ($generated@@347 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (let (($generated@@403 (type $generated@@402)))
(let (($generated@@404 ($generated@@320 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@319 $generated@@404 $generated@@403)) (= ($generated@@0 ($generated@@93 ($generated@@358 $generated@@401) $generated@@402)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) (and ($generated@@0 ($generated@@93 ($generated@@317 $generated@@401) $generated@@405)) (= $generated@@402 ($generated@@93 ($generated@@389 $generated@@401) $generated@@405))))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@401) $generated@@405))
 :pattern ( ($generated@@93 ($generated@@389 $generated@@401) $generated@@405))
))))))
 :pattern ( ($generated@@93 ($generated@@358 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@69)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) $generated@@69)) (= (type $generated@@412) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@409) $generated@@413))) (and ($generated@@261 ($generated@@93 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@261 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@93 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@86 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@69)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@418) $generated@@69)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@417) $generated@@421))) (and ($generated@@261 ($generated@@93 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@261 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@93 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@86 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 Int) ($generated@@424 Int) ) (! (= ($generated@@422 $generated@@423 $generated@@424) (div $generated@@423 $generated@@424))
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(= (type ($generated@@425 $generated@@426 $generated@@427)) ($generated@@88 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@430)))
 (=> (and (and (= (type $generated@@429) ($generated@@88 $generated@@432 $generated@@4)) (= (type $generated@@431) $generated@@432)) ($generated@@0 ($generated@@93 $generated@@429 $generated@@431))) ($generated@@0 ($generated@@93 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))))
 :pattern ( ($generated@@425 $generated@@429 $generated@@430) ($generated@@93 $generated@@429 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@434)))
 (=> (and (= (type $generated@@433) ($generated@@88 $generated@@436 $generated@@4)) (= (type $generated@@435) $generated@@436)) (= ($generated@@0 ($generated@@93 ($generated@@425 $generated@@433 $generated@@434) $generated@@435))  (or (= $generated@@435 $generated@@434) ($generated@@0 ($generated@@93 $generated@@433 $generated@@435))))))
 :pattern ( ($generated@@93 ($generated@@425 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@88 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@321 (type $generated@@439))))
(let (($generated@@441 ($generated@@320 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@319 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@318 $generated@@441 $generated@@440)) (= ($generated@@317 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@317 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@321 (type $generated@@442))))
(let (($generated@@444 ($generated@@320 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@319 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@318 $generated@@444 $generated@@443)) (= ($generated@@358 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@358 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@321 (type $generated@@445))))
(let (($generated@@447 ($generated@@320 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@319 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@318 $generated@@447 $generated@@446)) (= ($generated@@388 $generated@@445) ($generated@@437 $generated@@159))))))
 :pattern ( ($generated@@388 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@303 (type $generated@@448))))
(let (($generated@@450 ($generated@@302 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@301 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@300 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@159) (= (type $generated@@452) $generated@@159)) ($generated@@0 ($generated@@93 ($generated@@380 $generated@@448) ($generated@@288 ($generated@@229 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@380 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@321 (type $generated@@453))))
(let (($generated@@455 ($generated@@320 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@319 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@318 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@159) (= (type $generated@@457) $generated@@159)) ($generated@@0 ($generated@@93 ($generated@@388 $generated@@453) ($generated@@288 ($generated@@229 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@388 $generated@@453))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@79) (or ($generated@@147 ($generated@@254 $generated@@460)) (and (not (= 2 $generated@@145)) ($generated@@77 $generated@@460 $generated@@78)))) (and (and ($generated@@227 ($generated@@254 $generated@@460)) (=> (not (= ($generated@@252 ($generated@@458 ($generated@@82 ($generated@@254 $generated@@460)) ($generated@@252 2))) ($generated@@252 1))) ($generated@@227 ($generated@@254 $generated@@460)))) (= ($generated@@146 ($generated@@254 $generated@@460)) (ite (= ($generated@@252 ($generated@@458 ($generated@@82 ($generated@@254 $generated@@460)) ($generated@@252 2))) ($generated@@252 1)) ($generated@@422 1 ($generated@@252 0)) ($generated@@459 ($generated@@252 ($generated@@82 ($generated@@254 $generated@@460))) ($generated@@252 2))))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@254 $generated@@460)))
))))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@159) ($generated@@230 $generated@@461 $generated@@46)) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@461)) $generated@@461) ($generated@@77 ($generated@@338 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@159) ($generated@@230 $generated@@462 $generated@@47)) (and (= ($generated@@288 ($generated@@338 $generated@@3 $generated@@462)) $generated@@462) ($generated@@77 ($generated@@338 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@159) ($generated@@230 $generated@@463 $generated@@44)) (and (= ($generated@@288 ($generated@@338 $generated@@4 $generated@@463)) $generated@@463) ($generated@@77 ($generated@@338 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@159) ($generated@@230 $generated@@465 $generated@@45)) (and (= ($generated@@288 ($generated@@338 $generated@@464 $generated@@465)) $generated@@465) ($generated@@77 ($generated@@338 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@69) (= ($generated@@230 ($generated@@288 $generated@@466) $generated@@467) ($generated@@77 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@230 ($generated@@288 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@91 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@88 $generated@@469 $generated@@2)) (<= 0 ($generated@@293 $generated@@468))))
 :pattern ( ($generated@@293 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@277 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@276 $generated@@471)) (<= 0 ($generated@@275 $generated@@470))))
 :pattern ( ($generated@@275 $generated@@470))
)))
(assert  (=> (<= 2 $generated@@145) (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@79) (or ($generated@@147 $generated@@472) (and (not (= 2 $generated@@145)) ($generated@@77 $generated@@472 $generated@@78)))) (and (and ($generated@@227 $generated@@472) (=> (not (= ($generated@@458 ($generated@@82 $generated@@472) ($generated@@252 2)) ($generated@@252 1))) ($generated@@227 $generated@@472))) (= ($generated@@146 $generated@@472) (ite (= ($generated@@458 ($generated@@82 $generated@@472) ($generated@@252 2)) ($generated@@252 1)) ($generated@@422 1 ($generated@@252 0)) ($generated@@459 ($generated@@82 $generated@@472) ($generated@@252 2))))))
 :pattern ( ($generated@@146 $generated@@472))
))))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@406 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@406 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@69)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@69) (= (type $generated@@480) $generated@@69)) (= ($generated@@477 ($generated@@406 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@406 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@84 ($generated@@406 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@406 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@414 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@414 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@69)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@69) (= (type $generated@@490) $generated@@69)) (= ($generated@@487 ($generated@@414 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@414 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@84 ($generated@@414 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@414 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@159) (= (type $generated@@494) $generated@@159)) (= ($generated@@267 ($generated@@229 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@495 ($generated@@150 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@150 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@69)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@69) (= (type $generated@@502) $generated@@69)) (= ($generated@@499 ($generated@@150 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@150 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@159) (= (type $generated@@504) $generated@@159)) (= ($generated@@157 ($generated@@229 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@229 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@159) (= (type $generated@@506) $generated@@159)) (= ($generated@@158 ($generated@@229 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@229 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@69)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@277 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@276 $generated@@159)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@275 $generated@@513))) ($generated@@261 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@86 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
 (=> (= (type $generated@@517) ($generated@@88 $generated@@519 $generated@@4)) ($generated@@0 ($generated@@93 ($generated@@425 $generated@@517 $generated@@518) $generated@@518))))
 :pattern ( ($generated@@425 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@521 Int) ) (! (= ($generated@@520 ($generated@@87 $generated@@521)) $generated@@521)
 :pattern ( ($generated@@87 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@69)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@522 ($generated@@242 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@242 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@84 ($generated@@242 $generated@@525)) $generated@@54))
 :pattern ( ($generated@@242 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@69)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@526 ($generated@@247 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@247 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@84 ($generated@@247 $generated@@529)) $generated@@55))
 :pattern ( ($generated@@247 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@69)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@530 ($generated@@164 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@164 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@69) (= ($generated@@84 ($generated@@164 $generated@@533)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@69) (= ($generated@@534 ($generated@@507 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@507 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@69) (= ($generated@@84 ($generated@@507 $generated@@537)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@537))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@267 ($generated@@284 $generated@@538)) $generated@@63)
 :pattern ( ($generated@@284 $generated@@538))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@82 ($generated@@284 $generated@@539)) $generated@@539)
 :pattern ( ($generated@@284 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@338 $generated@@541 ($generated@@288 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@288 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) (= ($generated@@77 $generated@@542 ($generated@@406 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@299 $generated@@542) $generated@@545))) (and ($generated@@230 ($generated@@93 ($generated@@381 $generated@@542) $generated@@545) $generated@@544) ($generated@@230 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@93 ($generated@@381 $generated@@542) $generated@@545))
 :pattern ( ($generated@@93 ($generated@@299 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@77 $generated@@542 ($generated@@406 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) (= ($generated@@77 $generated@@546 ($generated@@414 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@159) ($generated@@0 ($generated@@93 ($generated@@317 $generated@@546) $generated@@549))) (and ($generated@@230 ($generated@@93 ($generated@@389 $generated@@546) $generated@@549) $generated@@548) ($generated@@230 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@93 ($generated@@389 $generated@@546) $generated@@549))
 :pattern ( ($generated@@93 ($generated@@317 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@77 $generated@@546 ($generated@@414 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@159) (= (type $generated@@553) $generated@@159)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@229 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@159) (= (type $generated@@555) $generated@@159)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@229 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (! (= (type ($generated@@556 $generated@@557 $generated@@558)) ($generated@@88 $generated@@159 $generated@@4))
 :pattern ( ($generated@@556 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) ($generated@@88 $generated@@159 $generated@@4))) (= (type $generated@@561) $generated@@159)) (= ($generated@@0 ($generated@@93 ($generated@@556 $generated@@559 $generated@@560) $generated@@561))  (and ($generated@@230 $generated@@561 $generated@@559) ($generated@@0 ($generated@@93 $generated@@560 $generated@@561)))))
 :pattern ( ($generated@@93 ($generated@@556 $generated@@559 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@77 ($generated@@284 $generated@@562) $generated@@80) ($generated@@77 ($generated@@8 $generated@@562) $generated@@46))
 :pattern ( ($generated@@77 ($generated@@284 $generated@@562) $generated@@80))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@159) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) $generated@@69)) ($generated@@230 $generated@@563 ($generated@@406 $generated@@564 $generated@@565))) (and (= ($generated@@288 ($generated@@338 ($generated@@301 $generated@@159 $generated@@159) $generated@@563)) $generated@@563) ($generated@@77 ($generated@@338 ($generated@@301 $generated@@159 $generated@@159) $generated@@563) ($generated@@406 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@230 $generated@@563 ($generated@@406 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@159) (= (type $generated@@567) $generated@@69)) (= (type $generated@@568) $generated@@69)) ($generated@@230 $generated@@566 ($generated@@414 $generated@@567 $generated@@568))) (and (= ($generated@@288 ($generated@@338 ($generated@@319 $generated@@159 $generated@@159) $generated@@566)) $generated@@566) ($generated@@77 ($generated@@338 ($generated@@319 $generated@@159 $generated@@159) $generated@@566) ($generated@@414 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@230 $generated@@566 ($generated@@414 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@69) (= (type $generated@@570) $generated@@69)) (= (type $generated@@571) $generated@@159)) ($generated@@230 $generated@@571 ($generated@@150 $generated@@569 $generated@@570))) (and (= ($generated@@288 ($generated@@338 $generated@@79 $generated@@571)) $generated@@571) ($generated@@77 ($generated@@338 $generated@@79 $generated@@571) ($generated@@150 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@230 $generated@@571 ($generated@@150 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@573 T@T) ) (! (= (type ($generated@@572 $generated@@573)) ($generated@@88 $generated@@573 $generated@@4))
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@93 ($generated@@572 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@93 ($generated@@572 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@93 ($generated@@437 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@93 ($generated@@437 $generated@@577) $generated@@576)))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@578 Int) ) (!  (=> (or ($generated@@258 $generated@@578) (not (= 0 $generated@@145))) (= ($generated@@81 $generated@@578) (= ($generated@@458 $generated@@578 ($generated@@252 2)) ($generated@@252 0))))
 :pattern ( ($generated@@81 $generated@@578))
))))
(assert (forall (($generated@@579 Int) ($generated@@580 Int) ) (! (= ($generated@@458 $generated@@579 $generated@@580) (mod $generated@@579 $generated@@580))
 :pattern ( ($generated@@458 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@74)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@69) (= (type $generated@@584) $generated@@69)) (and (= ($generated@@84 ($generated@@150 $generated@@583 $generated@@584)) $generated@@62) (= ($generated@@581 ($generated@@150 $generated@@583 $generated@@584)) $generated@@66)))
 :pattern ( ($generated@@150 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@79) (= (type $generated@@586) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@260 $generated@@586) (and ($generated@@227 $generated@@585) ($generated@@86 $generated@@585 $generated@@80 $generated@@586)))) ($generated@@86 ($generated@@8 ($generated@@82 $generated@@585)) $generated@@46 $generated@@586))
 :pattern ( ($generated@@86 ($generated@@8 ($generated@@82 $generated@@585)) $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@587 Int) ($generated@@588 Int) ) (! (= ($generated@@459 $generated@@587 $generated@@588) (* $generated@@587 $generated@@588))
 :pattern ( ($generated@@459 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@79) (= ($generated@@550 ($generated@@288 $generated@@589)) ($generated@@551 $generated@@589)))
 :pattern ( ($generated@@550 ($generated@@288 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@159) ($generated@@230 $generated@@590 ($generated@@87 0))) (and (= ($generated@@288 ($generated@@338 $generated@@2 $generated@@590)) $generated@@590) ($generated@@77 ($generated@@338 ($generated@@88 $generated@@159 $generated@@4) $generated@@590) ($generated@@87 0))))
 :pattern ( ($generated@@230 $generated@@590 ($generated@@87 0)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@159) (= (type $generated@@592) $generated@@69)) ($generated@@230 $generated@@591 ($generated@@242 $generated@@592))) (and (= ($generated@@288 ($generated@@338 ($generated@@88 $generated@@159 $generated@@4) $generated@@591)) $generated@@591) ($generated@@77 ($generated@@338 ($generated@@88 $generated@@159 $generated@@4) $generated@@591) ($generated@@242 $generated@@592))))
 :pattern ( ($generated@@230 $generated@@591 ($generated@@242 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@159) (= (type $generated@@594) $generated@@69)) ($generated@@230 $generated@@593 ($generated@@247 $generated@@594))) (and (= ($generated@@288 ($generated@@338 ($generated@@88 $generated@@159 $generated@@4) $generated@@593)) $generated@@593) ($generated@@77 ($generated@@338 ($generated@@88 $generated@@159 $generated@@4) $generated@@593) ($generated@@247 $generated@@594))))
 :pattern ( ($generated@@230 $generated@@593 ($generated@@247 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@159) (= (type $generated@@596) $generated@@69)) ($generated@@230 $generated@@595 ($generated@@164 $generated@@596))) (and (= ($generated@@288 ($generated@@338 ($generated@@88 $generated@@159 $generated@@2) $generated@@595)) $generated@@595) ($generated@@77 ($generated@@338 ($generated@@88 $generated@@159 $generated@@2) $generated@@595) ($generated@@164 $generated@@596))))
 :pattern ( ($generated@@230 $generated@@595 ($generated@@164 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@159) (= (type $generated@@598) $generated@@69)) ($generated@@230 $generated@@597 ($generated@@507 $generated@@598))) (and (= ($generated@@288 ($generated@@338 ($generated@@276 $generated@@159) $generated@@597)) $generated@@597) ($generated@@77 ($generated@@338 ($generated@@276 $generated@@159) $generated@@597) ($generated@@507 $generated@@598))))
 :pattern ( ($generated@@230 $generated@@597 ($generated@@507 $generated@@598)))
)))
(assert (= ($generated@@84 $generated@@80) $generated@@64))
(assert (= ($generated@@581 $generated@@80) $generated@@67))
(assert (= ($generated@@84 $generated@@78) $generated@@65))
(assert (= ($generated@@581 $generated@@78) $generated@@68))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@88 $generated@@159 $generated@@2)) (= (type $generated@@600) $generated@@69)) (= (type $generated@@601) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@599 ($generated@@164 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@159) (< 0 ($generated ($generated@@93 $generated@@599 $generated@@602)))) ($generated@@261 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@93 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@86 $generated@@599 ($generated@@164 $generated@@600) $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@79) (= (type $generated@@604) $generated@@69)) (= (type $generated@@605) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@260 $generated@@605) (and ($generated@@149 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@69) ($generated@@86 $generated@@603 ($generated@@150 $generated@@604 $generated@@606) $generated@@605))
 :pattern ( ($generated@@86 $generated@@603 ($generated@@150 $generated@@604 $generated@@606) $generated@@605))
))))) ($generated@@261 ($generated@@157 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@261 ($generated@@157 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@79) (= (type $generated@@608) $generated@@69)) (= (type $generated@@609) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@260 $generated@@609) (and ($generated@@149 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@69) ($generated@@86 $generated@@607 ($generated@@150 $generated@@610 $generated@@608) $generated@@609))
 :pattern ( ($generated@@86 $generated@@607 ($generated@@150 $generated@@610 $generated@@608) $generated@@609))
))))) ($generated@@261 ($generated@@158 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@261 ($generated@@158 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@159) (= (type $generated@@612) $generated@@159)) (= ($generated@@229 ($generated@@254 $generated@@611) ($generated@@254 $generated@@612)) ($generated@@254 ($generated@@229 $generated@@611 $generated@@612))))
 :pattern ( ($generated@@229 ($generated@@254 $generated@@611) ($generated@@254 $generated@@612)))
)))
(assert (forall (($generated@@613 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@252 $generated@@613))) ($generated@@254 ($generated@@288 ($generated@@8 $generated@@613))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@252 $generated@@613))))
)))
(assert (forall (($generated@@614 Int) ) (! (= ($generated@@284 ($generated@@252 $generated@@614)) ($generated@@254 ($generated@@284 $generated@@614)))
 :pattern ( ($generated@@284 ($generated@@252 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (= ($generated@@288 ($generated@@254 $generated@@615)) ($generated@@254 ($generated@@288 $generated@@615)))
 :pattern ( ($generated@@288 ($generated@@254 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ) (! (let (($generated@@617 ($generated@@277 (type $generated@@616))))
 (=> (and (= (type $generated@@616) ($generated@@276 $generated@@617)) (= ($generated@@275 $generated@@616) 0)) (= $generated@@616 ($generated@@274 $generated@@617))))
 :pattern ( ($generated@@275 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (! (let (($generated@@621 (type $generated@@619)))
 (=> (and (and (= (type $generated@@618) ($generated@@88 $generated@@621 $generated@@2)) (= (type $generated@@620) $generated@@2)) (<= 0 ($generated $generated@@620))) (= ($generated@@293 ($generated@@94 $generated@@618 $generated@@619 $generated@@620)) (+ (- ($generated@@293 $generated@@618) ($generated ($generated@@93 $generated@@618 $generated@@619))) ($generated $generated@@620)))))
 :pattern ( ($generated@@293 ($generated@@94 $generated@@618 $generated@@619 $generated@@620)))
)))
(assert  (=> (<= 0 $generated@@145) (forall (($generated@@622 Int) ) (!  (=> (or ($generated@@258 ($generated@@252 $generated@@622)) (not (= 0 $generated@@145))) (= ($generated@@81 ($generated@@252 $generated@@622)) (= ($generated@@252 ($generated@@458 $generated@@622 ($generated@@252 2))) ($generated@@252 0))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@252 $generated@@622)))
))))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@624) $generated@@2)) ($generated@@86 $generated@@624 $generated@@46 $generated@@623))
 :pattern ( ($generated@@86 $generated@@624 $generated@@46 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@626) $generated@@3)) ($generated@@86 $generated@@626 $generated@@47 $generated@@625))
 :pattern ( ($generated@@86 $generated@@626 $generated@@47 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@628) $generated@@4)) ($generated@@86 $generated@@628 $generated@@44 $generated@@627))
 :pattern ( ($generated@@86 $generated@@628 $generated@@44 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@630) $generated@@464)) ($generated@@86 $generated@@630 $generated@@45 $generated@@629))
 :pattern ( ($generated@@86 $generated@@630 $generated@@45 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@632) $generated@@159)) ($generated@@86 $generated@@632 $generated@@48 $generated@@631))
 :pattern ( ($generated@@86 $generated@@632 $generated@@48 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@276 $generated@@159)) (= (type $generated@@634) $generated@@69)) (= ($generated@@77 $generated@@633 ($generated@@507 $generated@@634)) (forall (($generated@@635 Int) ) (!  (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@275 $generated@@633))) ($generated@@230 ($generated@@508 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@508 $generated@@633 $generated@@635))
))))
 :pattern ( ($generated@@77 $generated@@633 ($generated@@507 $generated@@634)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 Int) ) (!  (=> (= (type $generated@@637) ($generated@@276 $generated@@159)) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@275 $generated@@637))) (< ($generated@@551 ($generated@@338 $generated@@79 ($generated@@508 $generated@@637 $generated@@638))) ($generated@@636 $generated@@637))))
 :pattern ( ($generated@@551 ($generated@@338 $generated@@79 ($generated@@508 $generated@@637 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@301 $generated@@159 $generated@@159)) (= (type $generated@@640) $generated@@69)) (= (type $generated@@641) $generated@@69)) ($generated@@77 $generated@@639 ($generated@@406 $generated@@640 $generated@@641))) (and (and ($generated@@77 ($generated@@299 $generated@@639) ($generated@@242 $generated@@640)) ($generated@@77 ($generated@@347 $generated@@639) ($generated@@242 $generated@@641))) ($generated@@77 ($generated@@380 $generated@@639) ($generated@@242 ($generated@@150 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@77 $generated@@639 ($generated@@406 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@319 $generated@@159 $generated@@159)) (= (type $generated@@643) $generated@@69)) (= (type $generated@@644) $generated@@69)) ($generated@@77 $generated@@642 ($generated@@414 $generated@@643 $generated@@644))) (and (and ($generated@@77 ($generated@@317 $generated@@642) ($generated@@247 $generated@@643)) ($generated@@77 ($generated@@358 $generated@@642) ($generated@@247 $generated@@644))) ($generated@@77 ($generated@@388 $generated@@642) ($generated@@247 ($generated@@150 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@77 $generated@@642 ($generated@@414 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@2) ($generated@@77 $generated@@645 $generated@@46))
 :pattern ( ($generated@@77 $generated@@645 $generated@@46))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@3) ($generated@@77 $generated@@646 $generated@@47))
 :pattern ( ($generated@@77 $generated@@646 $generated@@47))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@4) ($generated@@77 $generated@@647 $generated@@44))
 :pattern ( ($generated@@77 $generated@@647 $generated@@44))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@464) ($generated@@77 $generated@@648 $generated@@45))
 :pattern ( ($generated@@77 $generated@@648 $generated@@45))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@159) ($generated@@77 $generated@@649 $generated@@48))
 :pattern ( ($generated@@77 $generated@@649 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@650 () Bool)
(declare-fun $generated@@651 () Bool)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () Bool)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 (T@U) Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@652) ($generated@@88 $generated@@159 $generated@@4)) (= (type $generated@@654) $generated@@79)) (= (type $generated@@655) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@656) $generated@@79)) (= (type $generated@@657) ($generated@@88 $generated@@159 $generated@@4))) (= (type $generated@@658) $generated@@79)) (= (type $generated@@659) $generated@@79)) (= (type $generated@@660) ($generated@@171 $generated@@89 $generated@@4))) (= (type $generated@@661) $generated@@89)) (= (type $generated@@663) ($generated@@88 $generated@@159 $generated@@4))) (= (type $generated@@664) ($generated@@88 $generated@@159 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@665 true))
(let (($generated@@666  (=> (and (not (and $generated@@650 $generated@@651)) (= (ControlFlow 0 3) 1)) $generated@@665)))
(let (($generated@@667  (=> (and (and $generated@@650 $generated@@651) (= (ControlFlow 0 2) 1)) $generated@@665)))
(let (($generated@@668  (=> (not $generated@@650) (and (=> (= (ControlFlow 0 5) 2) $generated@@667) (=> (= (ControlFlow 0 5) 3) $generated@@666)))))
(let (($generated@@669  (=> $generated@@650 (and (=> (= (ControlFlow 0 4) 2) $generated@@667) (=> (= (ControlFlow 0 4) 3) $generated@@666)))))
(let (($generated@@670  (=> (and (forall (($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@671) $generated@@79) ($generated@@77 $generated@@671 $generated@@78)) ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@671)))) ($generated@@227 $generated@@671))
 :pattern ( ($generated@@82 $generated@@671))
 :pattern ( ($generated@@93 $generated@@652 ($generated@@288 $generated@@671)))
)) (= $generated@@653 (exists (($generated@@672 T@U) ) (!  (and (= (type $generated@@672) $generated@@79) (and ($generated@@77 $generated@@672 $generated@@78) (and ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@672))) (= ($generated@@82 $generated@@672) ($generated@@252 3)))))
 :pattern ( ($generated@@82 $generated@@672))
 :pattern ( ($generated@@93 $generated@@652 ($generated@@288 $generated@@672)))
)))) (and (=> (= (ControlFlow 0 6) (- 0 9)) $generated@@650) (=> $generated@@650 (and (=> (= (ControlFlow 0 6) (- 0 8)) $generated@@651) (=> $generated@@651 (and (=> (= (ControlFlow 0 6) (- 0 7)) (not $generated@@653)) (=> (not $generated@@653) (and (=> (= (ControlFlow 0 6) 4) $generated@@669) (=> (= (ControlFlow 0 6) 5) $generated@@668)))))))))))
(let (($generated@@673  (=> (and (not ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@654)))) (= (ControlFlow 0 12) 6)) $generated@@670)))
(let (($generated@@674  (=> ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@654))) (=> (and ($generated@@227 $generated@@654) (= (ControlFlow 0 11) 6)) $generated@@670))))
(let (($generated@@675  (=> (and ($generated@@77 $generated@@654 $generated@@78) ($generated@@86 $generated@@654 $generated@@78 $generated@@655)) (and (=> (= (ControlFlow 0 13) 11) $generated@@674) (=> (= (ControlFlow 0 13) 12) $generated@@673)))))
(let (($generated@@676  (=> (and (not (and ($generated@@77 $generated@@654 $generated@@78) ($generated@@86 $generated@@654 $generated@@78 $generated@@655))) (= (ControlFlow 0 10) 6)) $generated@@670)))
(let (($generated@@677  (=> (and (forall (($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@678) $generated@@79) ($generated@@77 $generated@@678 $generated@@78)) ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@678)))) ($generated@@227 $generated@@678))
 :pattern ( ($generated@@82 $generated@@678))
 :pattern ( ($generated@@93 $generated@@652 ($generated@@288 $generated@@678)))
)) (= $generated@@651 (forall (($generated@@679 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@79) ($generated@@77 $generated@@679 $generated@@78)) ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@679)))) (= ($generated@@458 ($generated@@82 $generated@@679) ($generated@@252 2)) ($generated@@252 0)))
 :pattern ( ($generated@@82 $generated@@679))
 :pattern ( ($generated@@93 $generated@@652 ($generated@@288 $generated@@679)))
)))) (and (=> (= (ControlFlow 0 14) 13) $generated@@675) (=> (= (ControlFlow 0 14) 10) $generated@@676)))))
(let (($generated@@680  (=> (and (not ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@656)))) (= (ControlFlow 0 18) 14)) $generated@@677)))
(let (($generated@@681  (=> (and ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@656))) ($generated@@227 $generated@@656)) (and (=> (= (ControlFlow 0 16) (- 0 17)) (not (= ($generated@@252 2) 0))) (=> (not (= ($generated@@252 2) 0)) (=> (= (ControlFlow 0 16) 14) $generated@@677))))))
(let (($generated@@682  (=> (and ($generated@@77 $generated@@656 $generated@@78) ($generated@@86 $generated@@656 $generated@@78 $generated@@655)) (and (=> (= (ControlFlow 0 19) 16) $generated@@681) (=> (= (ControlFlow 0 19) 18) $generated@@680)))))
(let (($generated@@683  (=> (and (not (and ($generated@@77 $generated@@656 $generated@@78) ($generated@@86 $generated@@656 $generated@@78 $generated@@655))) (= (ControlFlow 0 15) 14)) $generated@@677)))
(let (($generated@@684  (=> (and (forall (($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@79) ($generated@@77 $generated@@685 $generated@@78)) ($generated@@0 ($generated@@93 $generated@@657 ($generated@@288 $generated@@685)))) ($generated@@147 $generated@@685))
 :pattern ( ($generated@@146 $generated@@685))
 :pattern ( ($generated@@93 $generated@@657 ($generated@@288 $generated@@685)))
)) (= $generated@@650 (forall (($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@686) $generated@@79) ($generated@@77 $generated@@686 $generated@@78)) ($generated@@0 ($generated@@93 $generated@@657 ($generated@@288 $generated@@686)))) (> ($generated@@146 $generated@@686) 0))
 :pattern ( ($generated@@146 $generated@@686))
 :pattern ( ($generated@@93 $generated@@657 ($generated@@288 $generated@@686)))
)))) (and (=> (= (ControlFlow 0 20) 19) $generated@@682) (=> (= (ControlFlow 0 20) 15) $generated@@683)))))
(let (($generated@@687  (=> (and (not ($generated@@0 ($generated@@93 $generated@@657 ($generated@@288 $generated@@658)))) (= (ControlFlow 0 23) 20)) $generated@@684)))
(let (($generated@@688  (=> (and (and ($generated@@0 ($generated@@93 $generated@@657 ($generated@@288 $generated@@658))) ($generated@@86 $generated@@658 $generated@@78 $generated@@655)) (and ($generated@@147 $generated@@658) (= (ControlFlow 0 22) 20))) $generated@@684)))
(let (($generated@@689  (=> (and ($generated@@77 $generated@@658 $generated@@78) ($generated@@86 $generated@@658 $generated@@78 $generated@@655)) (and (=> (= (ControlFlow 0 24) 22) $generated@@688) (=> (= (ControlFlow 0 24) 23) $generated@@687)))))
(let (($generated@@690  (=> (and (not (and ($generated@@77 $generated@@658 $generated@@78) ($generated@@86 $generated@@658 $generated@@78 $generated@@655))) (= (ControlFlow 0 21) 20)) $generated@@684)))
(let (($generated@@691  (=> (= $generated@@657 ($generated@@556 $generated@@78 $generated@@652)) (and (=> (= (ControlFlow 0 25) 24) $generated@@689) (=> (= (ControlFlow 0 25) 21) $generated@@690)))))
(let (($generated@@692  (=> (and (not ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@659)))) (= (ControlFlow 0 28) 25)) $generated@@691)))
(let (($generated@@693  (=> (and ($generated@@0 ($generated@@93 $generated@@652 ($generated@@288 $generated@@659))) (= (ControlFlow 0 27) 25)) $generated@@691)))
(let (($generated@@694  (=> (and ($generated@@77 $generated@@659 $generated@@78) ($generated@@86 $generated@@659 $generated@@78 $generated@@655)) (and (=> (= (ControlFlow 0 29) 27) $generated@@693) (=> (= (ControlFlow 0 29) 28) $generated@@692)))))
(let (($generated@@695  (=> (and (not (and ($generated@@77 $generated@@659 $generated@@78) ($generated@@86 $generated@@659 $generated@@78 $generated@@655))) (= (ControlFlow 0 26) 25)) $generated@@691)))
(let (($generated@@696  (=> (and (= $generated@@660 ($generated@@170 $generated@@661 $generated@@655 $generated@@60 false)) (= $generated@@652 ($generated@@254 ($generated@@425 ($generated@@425 ($generated@@425 ($generated@@425 ($generated@@572 $generated@@159) ($generated@@288 ($generated@@254 ($generated@@284 ($generated@@252 1))))) ($generated@@288 ($generated@@254 ($generated@@284 ($generated@@252 2))))) ($generated@@288 ($generated@@254 ($generated@@284 ($generated@@252 3))))) ($generated@@288 ($generated@@254 ($generated@@284 ($generated@@252 4)))))))) (and (=> (= (ControlFlow 0 30) 29) $generated@@694) (=> (= (ControlFlow 0 30) 26) $generated@@695)))))
(let (($generated@@697  (=> (and ($generated@@260 $generated@@655) ($generated@@662 $generated@@655)) (=> (and (and ($generated@@77 $generated@@663 ($generated@@242 $generated@@80)) ($generated@@86 $generated@@663 ($generated@@242 $generated@@80) $generated@@655)) true) (=> (and (and (and ($generated@@77 $generated@@664 ($generated@@242 $generated@@78)) ($generated@@86 $generated@@664 ($generated@@242 $generated@@78) $generated@@655)) true) (and (= 3 $generated@@145) (= (ControlFlow 0 31) 30))) $generated@@696)))))
$generated@@697))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
