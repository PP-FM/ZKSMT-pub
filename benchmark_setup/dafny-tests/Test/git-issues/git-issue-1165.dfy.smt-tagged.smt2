(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@358 (T@U T@U) Bool)
(declare-fun $generated@@359 (T@U T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@437 () Int)
(declare-fun $generated@@438 () Bool)
(declare-fun $generated@@439 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@506 (T@U Int) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@552 (T@U T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@606 (T@U T@U Bool) T@U)
(declare-fun $generated@@638 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@137 $generated@@138)) 14)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@135 ($generated@@134 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@136 ($generated@@134 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@134 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@135 (type $generated@@143))))
(= (type ($generated@@132 $generated@@143)) ($generated@@76 $generated@@144 $generated@@4)))
 :pattern ( ($generated@@132 $generated@@143))
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (let (($generated@@148 ($generated@@80 (type $generated@@146))))
(let (($generated@@149 ($generated@@79 (type $generated@@145))))
(= (type ($generated@@133 $generated@@145 $generated@@146 $generated@@147)) ($generated@@134 $generated@@149 $generated@@148))))
 :pattern ( ($generated@@133 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@80 (type $generated@@151))))
(let (($generated@@154 ($generated@@79 (type $generated@@150))))
 (=> (and (and (= (type $generated@@150) ($generated@@76 $generated@@154 $generated@@4)) (= (type $generated@@151) ($generated@@76 $generated@@154 $generated@@153))) (= (type $generated@@152) $generated@@64)) (= ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)) $generated@@150))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@150 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@136 (type $generated@@156))))
(let (($generated@@158 ($generated@@135 (type $generated@@156))))
(= (type ($generated@@155 $generated@@156)) ($generated@@76 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@80 (type $generated@@160))))
(let (($generated@@163 ($generated@@79 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@76 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@76 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@64)) (= ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)) $generated@@160))))
 :pattern ( ($generated@@155 ($generated@@133 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= (type $generated@@165) $generated@@2) ($generated@@164 $generated@@165 ($generated@@75 0)))
 :pattern ( ($generated@@164 $generated@@165 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@168) 15) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@169 $generated@@170)) $generated@@64)
 :pattern ( ($generated@@167 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (and (= (type $generated@@171) $generated@@64) (= (type $generated@@172) $generated@@64)) (= (type $generated@@173) $generated@@168)) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172))) ($generated@@166 $generated@@173))
 :pattern ( ($generated@@166 $generated@@173) ($generated@@164 $generated@@173 ($generated@@167 $generated@@171 $generated@@172)))
)))
(assert  (and (and (= ($generated@@1 $generated@@177) 16) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@175 $generated@@178))
))) (forall (($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@179)) $generated@@177)
 :pattern ( ($generated@@176 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@180) $generated@@168) (= (type $generated@@181) $generated@@168)) true) (= ($generated@@174 $generated@@180 $generated@@181)  (and (= ($generated@@175 $generated@@180) ($generated@@175 $generated@@181)) (= ($generated@@176 $generated@@180) ($generated@@176 $generated@@181)))))
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@64)
 :pattern ( ($generated@@182 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@186) $generated@@64)) ($generated@@164 $generated@@185 ($generated@@182 $generated@@186))) ($generated@@183 $generated@@185))
 :pattern ( ($generated@@164 $generated@@185 ($generated@@182 $generated@@186)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 17)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@77 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@67 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@77) (= (type $generated@@237) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@238) ($generated@@66 $generated@@4))) (= (type $generated@@240) $generated@@77)) (= (type $generated@@241) ($generated@@66 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@79 (type $generated@@244))))
(= (type ($generated@@243 $generated@@244 $generated@@245)) ($generated@@76 $generated@@246 $generated@@4)))
 :pattern ( ($generated@@243 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@79 (type $generated@@247))))
 (=> (and (= (type $generated@@247) ($generated@@76 $generated@@249 $generated@@4)) (= (type $generated@@248) ($generated@@76 $generated@@249 $generated@@4))) (= ($generated@@243 ($generated@@243 $generated@@247 $generated@@248) $generated@@248) ($generated@@243 $generated@@247 $generated@@248))))
 :pattern ( ($generated@@243 ($generated@@243 $generated@@247 $generated@@248) $generated@@248))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= (type ($generated@@250 $generated@@252 $generated@@253)) $generated@@168)
 :pattern ( ($generated@@250 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@177)) (= (type $generated@@257) $generated@@177)) (= ($generated@@164 ($generated@@250 $generated@@256 $generated@@257) ($generated@@167 $generated@@254 $generated@@255))  (and ($generated@@251 $generated@@256 $generated@@254) ($generated@@251 $generated@@257 $generated@@255))))
 :pattern ( ($generated@@164 ($generated@@250 $generated@@256 $generated@@257) ($generated@@167 $generated@@254 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@168) (= (type $generated@@259) $generated@@168)) (= ($generated@@174 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@174 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@64)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@263) $generated@@64)) (= ($generated@@164 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@177) ($generated@@0 ($generated@@81 $generated@@262 $generated@@264))) ($generated@@251 $generated@@264 $generated@@263))
 :pattern ( ($generated@@81 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@164 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@64)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@268) $generated@@64)) (= ($generated@@164 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@177) ($generated@@0 ($generated@@81 $generated@@267 $generated@@269))) ($generated@@251 $generated@@269 $generated@@268))
 :pattern ( ($generated@@81 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@164 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@64) (= (type $generated@@277) $generated@@64)) (= (type $generated@@278) $generated@@177)) (= (type $generated@@279) $generated@@177)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@274 $generated@@280)) (= ($generated@@74 ($generated@@250 $generated@@278 $generated@@279) ($generated@@167 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@74 ($generated@@250 $generated@@278 $generated@@279) ($generated@@167 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@68)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@168) (= ($generated@@166 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@166 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@168) ($generated@@166 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@177) (= (type $generated@@286) $generated@@177)) (= $generated@@284 ($generated@@250 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@166 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 18)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@177)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@64) (= (type $generated@@299) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@74 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@275 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@76 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@81 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@306 $generated@@307 $generated@@308)) ($generated@@134 $generated@@307 $generated@@308))
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@132 ($generated@@306 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@132 ($generated@@306 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (= ($generated@@183 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@81 $generated@@330 $generated@@332))) (<= ($generated ($generated@@81 $generated@@330 $generated@@332)) ($generated@@300 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@183 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@136 (type $generated@@333))))
(let (($generated@@335 ($generated@@135 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@134 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@306 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@132 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@136 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@136 (type $generated@@340))))
(let (($generated@@342 ($generated@@135 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@134 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@306 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@316 (type $generated@@344))))
(let (($generated@@346 ($generated@@315 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@314 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@313 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@312 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(let (($generated@@353 ($generated@@315 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@314 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@313 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@356) $generated@@64)) (= ($generated@@164 $generated@@355 ($generated@@182 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357)))) ($generated@@251 $generated@@357 $generated@@356))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@164 $generated@@355 ($generated@@182 $generated@@356)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@79 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360 $generated@@361)) ($generated@@76 $generated@@362 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@79 (type $generated@@363))))
 (=> (and (and (= (type $generated@@363) ($generated@@76 $generated@@365 $generated@@4)) (= (type $generated@@364) ($generated@@76 $generated@@365 $generated@@4))) ($generated@@358 $generated@@363 $generated@@364)) (and (= ($generated@@359 ($generated@@243 $generated@@363 $generated@@364) $generated@@363) $generated@@364) (= ($generated@@359 ($generated@@243 $generated@@363 $generated@@364) $generated@@364) $generated@@363))))
 :pattern ( ($generated@@243 $generated@@363 $generated@@364))
)))
(assert (forall (($generated@@367 T@U) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@76 $generated@@177 $generated@@177))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@177) (= (type $generated@@369) $generated@@177)) (= ($generated@@81 ($generated@@366 $generated@@368) $generated@@369) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
 (=> (and (= (type $generated@@370) ($generated@@76 $generated@@373 $generated@@4)) (= (type $generated@@371) ($generated@@76 $generated@@373 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@370 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 $generated@@370 $generated@@372)) (not ($generated@@0 ($generated@@81 $generated@@371 $generated@@372)))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@370 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@374 ($generated@@260 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@177) ($generated@@0 ($generated@@81 $generated@@374 $generated@@377))) ($generated@@275 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@81 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@374 ($generated@@260 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@265 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@177) ($generated@@0 ($generated@@81 $generated@@378 $generated@@381))) ($generated@@275 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@81 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@265 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@81 ($generated@@301 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@81 ($generated@@301 $generated@@383) $generated@@382)))
)))
(assert  (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@386)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@384 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@385 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@385 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@390) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@384 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@389) ($generated@@175 ($generated@@385 $generated@@168 $generated@@390)))) (= ($generated@@81 ($generated@@155 $generated@@389) ($generated@@175 ($generated@@385 $generated@@168 $generated@@390))) ($generated@@176 ($generated@@385 $generated@@168 $generated@@390))))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@316 (type $generated@@394))))
(let (($generated@@396 ($generated@@315 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@76 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@314 $generated@@177 $generated@@177)) (= (type $generated@@398) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@397) ($generated@@175 ($generated@@385 $generated@@168 $generated@@398)))) (= ($generated@@81 ($generated@@392 $generated@@397) ($generated@@175 ($generated@@385 $generated@@168 $generated@@398))) ($generated@@176 ($generated@@385 $generated@@168 $generated@@398))))))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@135 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@134 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@81 ($generated@@132 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@81 ($generated@@155 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@315 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@314 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@81 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@64)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@412) $generated@@416))) (and ($generated@@275 ($generated@@81 ($generated@@155 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@275 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@412) $generated@@416))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@74 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@64)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@314 $generated@@177 $generated@@177)) (= (type $generated@@421) $generated@@64)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@420) $generated@@424))) (and ($generated@@275 ($generated@@81 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@275 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@74 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
 (=> (and (and (= (type $generated@@425) ($generated@@76 $generated@@428 $generated@@4)) (= (type $generated@@426) ($generated@@76 $generated@@428 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@425 $generated@@427))) ($generated@@0 ($generated@@81 ($generated@@243 $generated@@425 $generated@@426) $generated@@427))))
 :pattern ( ($generated@@243 $generated@@425 $generated@@426) ($generated@@81 $generated@@425 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
 (=> (and (and (= (type $generated@@429) ($generated@@76 $generated@@432 $generated@@4)) (= (type $generated@@430) ($generated@@76 $generated@@432 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@430 $generated@@431))) ($generated@@0 ($generated@@81 ($generated@@243 $generated@@429 $generated@@430) $generated@@431))))
 :pattern ( ($generated@@243 $generated@@429 $generated@@430) ($generated@@81 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
 (=> (and (and (= (type $generated@@433) ($generated@@76 $generated@@436 $generated@@4)) (= (type $generated@@434) ($generated@@76 $generated@@436 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@434 $generated@@435))) (not ($generated@@0 ($generated@@81 ($generated@@359 $generated@@433 $generated@@434) $generated@@435)))))
 :pattern ( ($generated@@359 $generated@@433 $generated@@434) ($generated@@81 $generated@@434 $generated@@435))
)))
(assert  (=> (<= 0 $generated@@437) (=> (or $generated@@438 (not (= 0 $generated@@437))) true)))
(assert (forall (($generated@@440 T@T) ) (! (= (type ($generated@@439 $generated@@440)) ($generated@@76 $generated@@440 $generated@@4))
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@316 (type $generated@@441))))
(let (($generated@@443 ($generated@@315 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@314 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@313 $generated@@443 $generated@@442)) (= ($generated@@312 $generated@@441) ($generated@@439 $generated@@443))))))
 :pattern ( ($generated@@312 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@316 (type $generated@@444))))
(let (($generated@@446 ($generated@@315 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@314 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@313 $generated@@446 $generated@@445)) (= ($generated@@348 $generated@@444) ($generated@@439 $generated@@445))))))
 :pattern ( ($generated@@348 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@316 (type $generated@@447))))
(let (($generated@@449 ($generated@@315 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@314 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@313 $generated@@449 $generated@@448)) (= ($generated@@391 $generated@@447) ($generated@@439 $generated@@177))))))
 :pattern ( ($generated@@391 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@136 (type $generated@@450))))
(let (($generated@@452 ($generated@@135 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@134 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@306 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@177) (= (type $generated@@454) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@450) ($generated@@295 ($generated@@250 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@384 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@316 (type $generated@@455))))
(let (($generated@@457 ($generated@@315 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@314 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@313 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@177) (= (type $generated@@459) $generated@@177)) ($generated@@0 ($generated@@81 ($generated@@391 $generated@@455) ($generated@@295 ($generated@@250 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@391 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@177) ($generated@@251 $generated@@460 $generated@@46)) (and (= ($generated@@295 ($generated@@385 $generated@@2 $generated@@460)) $generated@@460) ($generated@@164 ($generated@@385 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@251 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@177) ($generated@@251 $generated@@461 $generated@@47)) (and (= ($generated@@295 ($generated@@385 $generated@@3 $generated@@461)) $generated@@461) ($generated@@164 ($generated@@385 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@251 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@177) ($generated@@251 $generated@@462 $generated@@44)) (and (= ($generated@@295 ($generated@@385 $generated@@4 $generated@@462)) $generated@@462) ($generated@@164 ($generated@@385 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@251 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@177) ($generated@@251 $generated@@464 $generated@@45)) (and (= ($generated@@295 ($generated@@385 $generated@@463 $generated@@464)) $generated@@464) ($generated@@164 ($generated@@385 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@251 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@64) (= ($generated@@251 ($generated@@295 $generated@@465) $generated@@466) ($generated@@164 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@251 ($generated@@295 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@79 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@76 $generated@@468 $generated@@2)) (<= 0 ($generated@@300 $generated@@467))))
 :pattern ( ($generated@@300 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@290 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@289 $generated@@470)) (<= 0 ($generated@@288 $generated@@469))))
 :pattern ( ($generated@@288 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@409 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@409 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@409 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@409 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@72 ($generated@@409 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@417 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@417 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@485 ($generated@@417 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@417 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@72 ($generated@@417 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@177) (= (type $generated@@492) $generated@@177)) (= ($generated@@281 ($generated@@250 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@250 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@167 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@167 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@64) (= (type $generated@@500) $generated@@64)) (= ($generated@@497 ($generated@@167 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@167 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@177) (= (type $generated@@502) $generated@@177)) (= ($generated@@175 ($generated@@250 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@250 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@177) (= (type $generated@@504) $generated@@177)) (= ($generated@@176 ($generated@@250 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@250 $generated@@503 $generated@@504))
)))
(assert  (and (forall (($generated@@507 T@U) ) (! (= (type ($generated@@505 $generated@@507)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@507))
)) (forall (($generated@@508 T@U) ($generated@@509 Int) ) (! (let (($generated@@510 ($generated@@290 (type $generated@@508))))
(= (type ($generated@@506 $generated@@508 $generated@@509)) $generated@@510))
 :pattern ( ($generated@@506 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@289 $generated@@177)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@511 ($generated@@505 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@288 $generated@@511))) ($generated@@275 ($generated@@506 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@506 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@74 $generated@@511 ($generated@@505 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@75 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@75 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@260 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@260 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@260 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@521 ($generated@@265 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@265 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@72 ($generated@@265 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@525 ($generated@@182 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@182 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@72 ($generated@@182 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@182 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@64)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@529 ($generated@@505 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@505 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@72 ($generated@@505 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@505 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@385 $generated@@534 ($generated@@295 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@295 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@64)) (= ($generated@@164 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@132 $generated@@535) $generated@@538))) (and ($generated@@251 ($generated@@81 ($generated@@155 $generated@@535) $generated@@538) $generated@@537) ($generated@@251 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@81 ($generated@@155 $generated@@535) $generated@@538))
 :pattern ( ($generated@@81 ($generated@@132 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@164 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@314 $generated@@177 $generated@@177)) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) (= ($generated@@164 $generated@@539 ($generated@@417 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@177) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@539) $generated@@542))) (and ($generated@@251 ($generated@@81 ($generated@@392 $generated@@539) $generated@@542) $generated@@541) ($generated@@251 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@539) $generated@@542))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@164 $generated@@539 ($generated@@417 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@177) (= (type $generated@@546) $generated@@177)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@250 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@250 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@177) (= (type $generated@@548) $generated@@177)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@250 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@250 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@79 (type $generated@@549))))
 (=> (and (= (type $generated@@549) ($generated@@76 $generated@@551 $generated@@4)) (= (type $generated@@550) ($generated@@76 $generated@@551 $generated@@4))) (= ($generated@@243 $generated@@549 ($generated@@243 $generated@@549 $generated@@550)) ($generated@@243 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@243 $generated@@549 ($generated@@243 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (! (= (type ($generated@@552 $generated@@553 $generated@@554)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@552 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) ($generated@@76 $generated@@177 $generated@@4))) (= (type $generated@@557) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@552 $generated@@555 $generated@@556) $generated@@557))  (and ($generated@@251 $generated@@557 $generated@@555) ($generated@@0 ($generated@@81 $generated@@556 $generated@@557)))))
 :pattern ( ($generated@@81 ($generated@@552 $generated@@555 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@177) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@64)) ($generated@@251 $generated@@558 ($generated@@409 $generated@@559 $generated@@560))) (and (= ($generated@@295 ($generated@@385 ($generated@@134 $generated@@177 $generated@@177) $generated@@558)) $generated@@558) ($generated@@164 ($generated@@385 ($generated@@134 $generated@@177 $generated@@177) $generated@@558) ($generated@@409 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@251 $generated@@558 ($generated@@409 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@177) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) $generated@@64)) ($generated@@251 $generated@@561 ($generated@@417 $generated@@562 $generated@@563))) (and (= ($generated@@295 ($generated@@385 ($generated@@314 $generated@@177 $generated@@177) $generated@@561)) $generated@@561) ($generated@@164 ($generated@@385 ($generated@@314 $generated@@177 $generated@@177) $generated@@561) ($generated@@417 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@251 $generated@@561 ($generated@@417 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@64) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) $generated@@177)) ($generated@@251 $generated@@566 ($generated@@167 $generated@@564 $generated@@565))) (and (= ($generated@@295 ($generated@@385 $generated@@168 $generated@@566)) $generated@@566) ($generated@@164 ($generated@@385 $generated@@168 $generated@@566) ($generated@@167 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@251 $generated@@566 ($generated@@167 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@81 ($generated@@439 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@81 ($generated@@439 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@569) ($generated@@76 $generated@@177 $generated@@4)) (= (type $generated@@570) ($generated@@76 $generated@@177 $generated@@177))) (= (type $generated@@571) $generated@@64)) (= (type $generated@@572) $generated@@64)) (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@177) ($generated@@0 ($generated@@81 $generated@@569 $generated@@573))) (and ($generated@@251 $generated@@573 $generated@@571) ($generated@@251 ($generated@@81 $generated@@570 $generated@@573) $generated@@572)))
 :no-pattern (type $generated@@573)
 :no-pattern ($generated $generated@@573)
 :no-pattern ($generated@@0 $generated@@573)
))) ($generated@@164 ($generated@@133 $generated@@569 $generated@@570 ($generated@@409 $generated@@571 $generated@@572)) ($generated@@409 $generated@@571 $generated@@572)))
 :pattern ( ($generated@@133 $generated@@569 $generated@@570 ($generated@@409 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@69)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@64) (= (type $generated@@577) $generated@@64)) (and (= ($generated@@72 ($generated@@167 $generated@@576 $generated@@577)) $generated@@62) (= ($generated@@574 ($generated@@167 $generated@@576 $generated@@577)) $generated@@63)))
 :pattern ( ($generated@@167 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@168) (= ($generated@@543 ($generated@@295 $generated@@578)) ($generated@@544 $generated@@578)))
 :pattern ( ($generated@@543 ($generated@@295 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@177) ($generated@@251 $generated@@579 ($generated@@75 0))) (and (= ($generated@@295 ($generated@@385 $generated@@2 $generated@@579)) $generated@@579) ($generated@@164 ($generated@@385 ($generated@@76 $generated@@177 $generated@@4) $generated@@579) ($generated@@75 0))))
 :pattern ( ($generated@@251 $generated@@579 ($generated@@75 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@177) (= (type $generated@@581) $generated@@64)) ($generated@@251 $generated@@580 ($generated@@260 $generated@@581))) (and (= ($generated@@295 ($generated@@385 ($generated@@76 $generated@@177 $generated@@4) $generated@@580)) $generated@@580) ($generated@@164 ($generated@@385 ($generated@@76 $generated@@177 $generated@@4) $generated@@580) ($generated@@260 $generated@@581))))
 :pattern ( ($generated@@251 $generated@@580 ($generated@@260 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@177) (= (type $generated@@583) $generated@@64)) ($generated@@251 $generated@@582 ($generated@@265 $generated@@583))) (and (= ($generated@@295 ($generated@@385 ($generated@@76 $generated@@177 $generated@@4) $generated@@582)) $generated@@582) ($generated@@164 ($generated@@385 ($generated@@76 $generated@@177 $generated@@4) $generated@@582) ($generated@@265 $generated@@583))))
 :pattern ( ($generated@@251 $generated@@582 ($generated@@265 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@177) (= (type $generated@@585) $generated@@64)) ($generated@@251 $generated@@584 ($generated@@182 $generated@@585))) (and (= ($generated@@295 ($generated@@385 ($generated@@76 $generated@@177 $generated@@2) $generated@@584)) $generated@@584) ($generated@@164 ($generated@@385 ($generated@@76 $generated@@177 $generated@@2) $generated@@584) ($generated@@182 $generated@@585))))
 :pattern ( ($generated@@251 $generated@@584 ($generated@@182 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@177) (= (type $generated@@587) $generated@@64)) ($generated@@251 $generated@@586 ($generated@@505 $generated@@587))) (and (= ($generated@@295 ($generated@@385 ($generated@@289 $generated@@177) $generated@@586)) $generated@@586) ($generated@@164 ($generated@@385 ($generated@@289 $generated@@177) $generated@@586) ($generated@@505 $generated@@587))))
 :pattern ( ($generated@@251 $generated@@586 ($generated@@505 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@76 $generated@@177 $generated@@2)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@588 ($generated@@182 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@177) (< 0 ($generated ($generated@@81 $generated@@588 $generated@@591)))) ($generated@@275 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@81 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@74 $generated@@588 ($generated@@182 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 ($generated@@79 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@76 $generated@@594 $generated@@4)) (= (type $generated@@593) ($generated@@76 $generated@@594 $generated@@4))) (= ($generated@@358 $generated@@592 $generated@@593) (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@594) (or (not ($generated@@0 ($generated@@81 $generated@@592 $generated@@595))) (not ($generated@@0 ($generated@@81 $generated@@593 $generated@@595)))))
 :pattern ( ($generated@@81 $generated@@592 $generated@@595))
 :pattern ( ($generated@@81 $generated@@593 $generated@@595))
)))))
 :pattern ( ($generated@@358 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@168) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@598) (and ($generated@@166 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@64) ($generated@@74 $generated@@596 ($generated@@167 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@74 $generated@@596 ($generated@@167 $generated@@597 $generated@@599) $generated@@598))
))))) ($generated@@275 ($generated@@175 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@275 ($generated@@175 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@168) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@274 $generated@@602) (and ($generated@@166 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@64) ($generated@@74 $generated@@600 ($generated@@167 $generated@@603 $generated@@601) $generated@@602))
 :pattern ( ($generated@@74 $generated@@600 ($generated@@167 $generated@@603 $generated@@601) $generated@@602))
))))) ($generated@@275 ($generated@@176 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@275 ($generated@@176 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@177) (= (type $generated@@605) $generated@@177)) (= ($generated@@250 ($generated@@270 $generated@@604) ($generated@@270 $generated@@605)) ($generated@@270 ($generated@@250 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@604) ($generated@@270 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 Bool) ) (! (= (type ($generated@@606 $generated@@607 $generated@@608 $generated@@609)) ($generated@@76 $generated@@177 $generated@@4))
 :pattern ( ($generated@@606 $generated@@607 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 Bool) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@64) (= (type $generated@@611) ($generated@@76 $generated@@177 $generated@@4))) (= (type $generated@@613) $generated@@177)) (= ($generated@@0 ($generated@@81 ($generated@@606 $generated@@610 $generated@@611 $generated@@612) $generated@@613))  (and ($generated@@251 $generated@@613 $generated@@610) (and ($generated@@0 ($generated@@81 $generated@@611 $generated@@613)) $generated@@612))))
 :pattern ( ($generated@@81 ($generated@@606 $generated@@610 $generated@@611 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (! (= ($generated@@295 ($generated@@270 $generated@@614)) ($generated@@270 ($generated@@295 $generated@@614)))
 :pattern ( ($generated@@295 ($generated@@270 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 ($generated@@290 (type $generated@@615))))
 (=> (and (= (type $generated@@615) ($generated@@289 $generated@@616)) (= ($generated@@288 $generated@@615) 0)) (= $generated@@615 ($generated@@287 $generated@@616))))
 :pattern ( ($generated@@288 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (! (let (($generated@@620 (type $generated@@618)))
 (=> (and (and (= (type $generated@@617) ($generated@@76 $generated@@620 $generated@@2)) (= (type $generated@@619) $generated@@2)) (<= 0 ($generated $generated@@619))) (= ($generated@@300 ($generated@@82 $generated@@617 $generated@@618 $generated@@619)) (+ (- ($generated@@300 $generated@@617) ($generated ($generated@@81 $generated@@617 $generated@@618))) ($generated $generated@@619)))))
 :pattern ( ($generated@@300 ($generated@@82 $generated@@617 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (! (let (($generated@@624 (type $generated@@623)))
 (=> (and (= (type $generated@@621) ($generated@@76 $generated@@624 $generated@@4)) (= (type $generated@@622) ($generated@@76 $generated@@624 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@243 $generated@@621 $generated@@622) $generated@@623))  (or ($generated@@0 ($generated@@81 $generated@@621 $generated@@623)) ($generated@@0 ($generated@@81 $generated@@622 $generated@@623))))))
 :pattern ( ($generated@@81 ($generated@@243 $generated@@621 $generated@@622) $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@626) $generated@@2)) ($generated@@74 $generated@@626 $generated@@46 $generated@@625))
 :pattern ( ($generated@@74 $generated@@626 $generated@@46 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@628) $generated@@3)) ($generated@@74 $generated@@628 $generated@@47 $generated@@627))
 :pattern ( ($generated@@74 $generated@@628 $generated@@47 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@630) $generated@@4)) ($generated@@74 $generated@@630 $generated@@44 $generated@@629))
 :pattern ( ($generated@@74 $generated@@630 $generated@@44 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@632) $generated@@463)) ($generated@@74 $generated@@632 $generated@@45 $generated@@631))
 :pattern ( ($generated@@74 $generated@@632 $generated@@45 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@634) $generated@@177)) ($generated@@74 $generated@@634 $generated@@48 $generated@@633))
 :pattern ( ($generated@@74 $generated@@634 $generated@@48 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@289 $generated@@177)) (= (type $generated@@636) $generated@@64)) (= ($generated@@164 $generated@@635 ($generated@@505 $generated@@636)) (forall (($generated@@637 Int) ) (!  (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@288 $generated@@635))) ($generated@@251 ($generated@@506 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@506 $generated@@635 $generated@@637))
))))
 :pattern ( ($generated@@164 $generated@@635 ($generated@@505 $generated@@636)))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Int) ) (!  (=> (= (type $generated@@639) ($generated@@289 $generated@@177)) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@288 $generated@@639))) (< ($generated@@544 ($generated@@385 $generated@@168 ($generated@@506 $generated@@639 $generated@@640))) ($generated@@638 $generated@@639))))
 :pattern ( ($generated@@544 ($generated@@385 $generated@@168 ($generated@@506 $generated@@639 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (and (= (type $generated@@641) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@642) $generated@@64)) (= (type $generated@@643) $generated@@64)) ($generated@@164 $generated@@641 ($generated@@409 $generated@@642 $generated@@643))) (and (and ($generated@@164 ($generated@@132 $generated@@641) ($generated@@260 $generated@@642)) ($generated@@164 ($generated@@337 $generated@@641) ($generated@@260 $generated@@643))) ($generated@@164 ($generated@@384 $generated@@641) ($generated@@260 ($generated@@167 $generated@@642 $generated@@643)))))
 :pattern ( ($generated@@164 $generated@@641 ($generated@@409 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@314 $generated@@177 $generated@@177)) (= (type $generated@@645) $generated@@64)) (= (type $generated@@646) $generated@@64)) ($generated@@164 $generated@@644 ($generated@@417 $generated@@645 $generated@@646))) (and (and ($generated@@164 ($generated@@312 $generated@@644) ($generated@@265 $generated@@645)) ($generated@@164 ($generated@@348 $generated@@644) ($generated@@265 $generated@@646))) ($generated@@164 ($generated@@391 $generated@@644) ($generated@@265 ($generated@@167 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@164 $generated@@644 ($generated@@417 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@2) ($generated@@164 $generated@@647 $generated@@46))
 :pattern ( ($generated@@164 $generated@@647 $generated@@46))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@3) ($generated@@164 $generated@@648 $generated@@47))
 :pattern ( ($generated@@164 $generated@@648 $generated@@47))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@4) ($generated@@164 $generated@@649 $generated@@44))
 :pattern ( ($generated@@164 $generated@@649 $generated@@44))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@463) ($generated@@164 $generated@@650 $generated@@45))
 :pattern ( ($generated@@164 $generated@@650 $generated@@45))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@177) ($generated@@164 $generated@@651 $generated@@48))
 :pattern ( ($generated@@164 $generated@@651 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Bool)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 (T@U) Bool)
(declare-fun $generated@@668 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@652) ($generated@@134 $generated@@177 $generated@@177)) (= (type $generated@@653) ($generated@@76 $generated@@177 $generated@@4))) (= (type $generated@@654) ($generated@@76 $generated@@177 $generated@@4))) (= (type $generated@@656) ($generated@@134 $generated@@177 $generated@@177))) (= (type $generated@@659) ($generated@@134 $generated@@177 $generated@@177))) (= (type $generated@@661) ($generated@@134 $generated@@177 $generated@@177))) (= (type $generated@@663) ($generated@@189 $generated@@77 $generated@@4))) (= (type $generated@@664) $generated@@77)) (= (type $generated@@665) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@666) ($generated@@134 $generated@@177 $generated@@177))) (= (type $generated@@668) ($generated@@134 $generated@@177 $generated@@177))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@669  (=> (and (= $generated@@652 ($generated@@133 ($generated@@552 $generated@@46 ($generated@@243 $generated@@653 $generated@@654)) ($generated@@366 ($generated@@295 ($generated@@270 ($generated@@11 true)))) ($generated@@409 $generated@@46 $generated@@44))) (= (ControlFlow 0 6) (- 0 5))) ($generated@@0 ($generated@@270 ($generated@@11 true))))))
(let (($generated@@670  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@655))))) (= (ControlFlow 0 8) 6)) $generated@@669)))
(let (($generated@@671  (=> (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@655)))) (= (ControlFlow 0 7) 6)) $generated@@669)))
(let (($generated@@672  (and (=> (= (ControlFlow 0 9) 7) $generated@@671) (=> (= (ControlFlow 0 9) 8) $generated@@670))))
(let (($generated@@673 true))
(let (($generated@@674  (=> (and (forall (($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@2) ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 $generated@@675)))) $generated@@438)
 :pattern ( ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 $generated@@675)))
)) (= $generated@@656 ($generated@@133 ($generated@@606 $generated@@46 ($generated@@243 $generated@@653 $generated@@654) $generated@@657) ($generated@@366 ($generated@@295 ($generated@@270 ($generated@@11 true)))) ($generated@@409 $generated@@46 $generated@@44)))) (and (=> (= (ControlFlow 0 10) 9) $generated@@672) (=> (= (ControlFlow 0 10) 4) $generated@@673)))))
(let (($generated@@676  (=> (and (not (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@658)))) $generated@@657)) (= (ControlFlow 0 12) 10)) $generated@@674)))
(let (($generated@@677  (=> (and (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@658)))) $generated@@657) (= (ControlFlow 0 11) 10)) $generated@@674)))
(let (($generated@@678  (=> (not ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@658))))) (and (=> (= (ControlFlow 0 14) 11) $generated@@677) (=> (= (ControlFlow 0 14) 12) $generated@@676)))))
(let (($generated@@679  (=> (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@658)))) $generated@@438) (and (=> (= (ControlFlow 0 13) 11) $generated@@677) (=> (= (ControlFlow 0 13) 12) $generated@@676)))))
(let (($generated@@680  (and (=> (= (ControlFlow 0 15) 13) $generated@@679) (=> (= (ControlFlow 0 15) 14) $generated@@678))))
(let (($generated@@681 true))
(let (($generated@@682  (=> (= $generated@@659 ($generated@@133 ($generated@@552 $generated@@46 ($generated@@243 $generated@@653 $generated@@654)) ($generated@@366 ($generated@@295 ($generated@@270 ($generated@@11 true)))) ($generated@@409 $generated@@46 $generated@@44))) (and (=> (= (ControlFlow 0 16) 15) $generated@@680) (=> (= (ControlFlow 0 16) 3) $generated@@681)))))
(let (($generated@@683  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@660))))) (= (ControlFlow 0 18) 16)) $generated@@682)))
(let (($generated@@684  (=> (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@660)))) (= (ControlFlow 0 17) 16)) $generated@@682)))
(let (($generated@@685  (and (=> (= (ControlFlow 0 19) 17) $generated@@684) (=> (= (ControlFlow 0 19) 18) $generated@@683))))
(let (($generated@@686 true))
(let (($generated@@687  (=> (and (forall (($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@688) $generated@@2) ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 $generated@@688)))) $generated@@438)
 :pattern ( ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 $generated@@688)))
)) (= $generated@@661 ($generated@@133 ($generated@@606 $generated@@46 ($generated@@243 $generated@@653 $generated@@654) $generated@@657) ($generated@@366 ($generated@@295 ($generated@@270 ($generated@@11 true)))) ($generated@@409 $generated@@46 $generated@@44)))) (and (=> (= (ControlFlow 0 20) 19) $generated@@685) (=> (= (ControlFlow 0 20) 2) $generated@@686)))))
(let (($generated@@689  (=> (and (not (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@662)))) $generated@@657)) (= (ControlFlow 0 22) 20)) $generated@@687)))
(let (($generated@@690  (=> (and (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@662)))) $generated@@657) (= (ControlFlow 0 21) 20)) $generated@@687)))
(let (($generated@@691  (=> (not ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@662))))) (and (=> (= (ControlFlow 0 24) 21) $generated@@690) (=> (= (ControlFlow 0 24) 22) $generated@@689)))))
(let (($generated@@692  (=> (and ($generated@@0 ($generated@@81 ($generated@@243 $generated@@653 $generated@@654) ($generated@@295 ($generated@@8 $generated@@662)))) $generated@@438) (and (=> (= (ControlFlow 0 23) 21) $generated@@690) (=> (= (ControlFlow 0 23) 22) $generated@@689)))))
(let (($generated@@693  (and (=> (= (ControlFlow 0 25) 23) $generated@@692) (=> (= (ControlFlow 0 25) 24) $generated@@691))))
(let (($generated@@694 true))
(let (($generated@@695  (=> (= $generated@@663 ($generated@@188 $generated@@664 $generated@@665 $generated@@60 false)) (=> (and ($generated@@164 $generated@@666 ($generated@@409 $generated@@46 $generated@@44)) ($generated@@74 $generated@@666 ($generated@@409 $generated@@46 $generated@@44) $generated@@665)) (and (=> (= (ControlFlow 0 26) 25) $generated@@693) (=> (= (ControlFlow 0 26) 1) $generated@@694))))))
(let (($generated@@696  (=> (and ($generated@@274 $generated@@665) ($generated@@667 $generated@@665)) (=> (and (and ($generated@@164 $generated@@653 ($generated@@260 $generated@@46)) ($generated@@74 $generated@@653 ($generated@@260 $generated@@46) $generated@@665)) (and ($generated@@164 $generated@@654 ($generated@@260 $generated@@46)) ($generated@@74 $generated@@654 ($generated@@260 $generated@@46) $generated@@665))) (=> (and (and (and ($generated@@164 $generated@@668 ($generated@@409 $generated@@46 $generated@@44)) ($generated@@74 $generated@@668 ($generated@@409 $generated@@46 $generated@@44) $generated@@665)) true) (and (= 1 $generated@@437) (= (ControlFlow 0 27) 26))) $generated@@695)))))
$generated@@696)))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U) T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@200 (T@U T@U) T@U)
(declare-fun $generated@@201 (T@U T@U) Bool)
(declare-fun $generated@@208 (T@T T@U T@U) T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@241 (T@T) T@U)
(declare-fun $generated@@242 (T@U) Int)
(declare-fun $generated@@243 (T@T) T@T)
(declare-fun $generated@@244 (T@T) T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Int)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@271 (T@T T@T) T@U)
(declare-fun $generated@@272 (T@T T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@289 (T@T T@T) T@U)
(declare-fun $generated@@290 (T@T T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@306 (T@U T@U) Bool)
(declare-fun $generated@@315 (T@T T@U) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@350 (T@U T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 () T@T)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@558 (T@U T@U T@U) T@U)
(declare-fun $generated@@559 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@560 (T@T T@T) T@T)
(declare-fun $generated@@561 (T@T) T@T)
(declare-fun $generated@@562 (T@T) T@T)
(declare-fun $generated@@563 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@677 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert  (and (= (type $generated@@150) $generated@@73) (= (type $generated@@151) $generated@@91)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@91) (= (type $generated@@153) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@152 $generated@@150 $generated@@153)  (or (= $generated@@152 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@152 $generated@@150 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@73))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@91) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@155 $generated@@154 $generated@@156))
)))
(assert  (and (= (type $generated@@157) ($generated@@75 $generated@@2)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@163) $generated@@91)) (and ($generated@@158 $generated@@162) (and (not (= $generated@@163 $generated@@151)) (= ($generated@@159 $generated@@163) $generated@@154)))) ($generated@@160 ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@157) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@157))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@160 $generated@@164 ($generated@@89 0)))
 :pattern ( ($generated@@160 $generated@@164 ($generated@@89 0)))
)))
(assert  (and (= ($generated@@1 $generated@@167) 16) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@168 $generated@@169)) $generated@@73)
 :pattern ( ($generated@@166 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@73) (= (type $generated@@171) $generated@@73)) (= (type $generated@@172) $generated@@167)) ($generated@@160 $generated@@172 ($generated@@166 $generated@@170 $generated@@171))) ($generated@@165 $generated@@172))
 :pattern ( ($generated@@165 $generated@@172) ($generated@@160 $generated@@172 ($generated@@166 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@167) (= (type $generated@@180) $generated@@167)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@185) $generated@@73)) ($generated@@160 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@160 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@91) (= ($generated@@160 $generated@@186 $generated@@154)  (or (= $generated@@186 $generated@@151) (= ($generated@@159 $generated@@186) $generated@@154))))
 :pattern ( ($generated@@160 $generated@@186 $generated@@154))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@93 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188 $generated@@189)) ($generated@@90 $generated@@190 $generated@@4)))
 :pattern ( ($generated@@187 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@93 (type $generated@@191))))
 (=> (and (= (type $generated@@191) ($generated@@90 $generated@@193 $generated@@4)) (= (type $generated@@192) ($generated@@90 $generated@@193 $generated@@4))) (= ($generated@@187 ($generated@@187 $generated@@191 $generated@@192) $generated@@192) ($generated@@187 $generated@@191 $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@187 $generated@@191 $generated@@192) $generated@@192))
)))
(assert (= (type $generated@@194) $generated@@73))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) $generated@@91) (= (type $generated@@196) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@195 $generated@@194 $generated@@196) ($generated@@88 $generated@@195 $generated@@150 $generated@@196)))
 :pattern ( ($generated@@88 $generated@@195 $generated@@194 $generated@@196))
)))
(assert (= (type $generated@@197) $generated@@73))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@91) (= (type $generated@@199) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@198 $generated@@197 $generated@@199) ($generated@@88 $generated@@198 $generated@@154 $generated@@199)))
 :pattern ( ($generated@@88 $generated@@198 $generated@@197 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@202 $generated@@203)) $generated@@167)
 :pattern ( ($generated@@200 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and (and (and (= (type $generated@@204) $generated@@73) (= (type $generated@@205) $generated@@73)) (= (type $generated@@206) $generated@@176)) (= (type $generated@@207) $generated@@176)) (= ($generated@@160 ($generated@@200 $generated@@206 $generated@@207) ($generated@@166 $generated@@204 $generated@@205))  (and ($generated@@201 $generated@@206 $generated@@204) ($generated@@201 $generated@@207 $generated@@205))))
 :pattern ( ($generated@@160 ($generated@@200 $generated@@206 $generated@@207) ($generated@@166 $generated@@204 $generated@@205)))
)))
(assert (= ($generated@@83 $generated@@157) 0))
(assert (forall (($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= (type ($generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@75 $generated@@209))
 :pattern ( ($generated@@208 $generated@@209 $generated@@210 $generated@@211))
)))
(assert (= ($generated@@208 $generated@@2 $generated@@66 $generated@@72) $generated@@157))
(assert  (not ($generated@@212 $generated@@157)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (= (type $generated@@213) $generated@@167) (= (type $generated@@214) $generated@@167)) (= ($generated@@173 $generated@@213 $generated@@214) (= $generated@@213 $generated@@214)))
 :pattern ( ($generated@@173 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ) (! (= (type ($generated@@215 $generated@@216)) $generated@@73)
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (= (type $generated@@217) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@218) $generated@@73)) (= ($generated@@160 $generated@@217 ($generated@@215 $generated@@218)) (forall (($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@176) ($generated@@0 ($generated@@95 $generated@@217 $generated@@219))) ($generated@@201 $generated@@219 $generated@@218))
 :pattern ( ($generated@@95 $generated@@217 $generated@@219))
))))
 :pattern ( ($generated@@160 $generated@@217 ($generated@@215 $generated@@218)))
)))
(assert (forall (($generated@@221 T@U) ) (! (= (type ($generated@@220 $generated@@221)) $generated@@73)
 :pattern ( ($generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@223) $generated@@73)) (= ($generated@@160 $generated@@222 ($generated@@220 $generated@@223)) (forall (($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@176) ($generated@@0 ($generated@@95 $generated@@222 $generated@@224))) ($generated@@201 $generated@@224 $generated@@223))
 :pattern ( ($generated@@95 $generated@@222 $generated@@224))
))))
 :pattern ( ($generated@@160 $generated@@222 ($generated@@220 $generated@@223)))
)))
(assert (forall (($generated@@226 T@U) ) (! (let (($generated@@227 (type $generated@@226)))
(= (type ($generated@@225 $generated@@226)) $generated@@227))
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! (= ($generated@@225 $generated@@228) $generated@@228)
 :pattern ( ($generated@@225 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@230) $generated@@73) (= (type $generated@@231) $generated@@73)) (= (type $generated@@232) $generated@@176)) (= (type $generated@@233) $generated@@176)) (= (type $generated@@234) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@158 $generated@@234)) (= ($generated@@88 ($generated@@200 $generated@@232 $generated@@233) ($generated@@166 $generated@@230 $generated@@231) $generated@@234)  (and ($generated@@229 $generated@@232 $generated@@230 $generated@@234) ($generated@@229 $generated@@233 $generated@@231 $generated@@234))))
 :pattern ( ($generated@@88 ($generated@@200 $generated@@232 $generated@@233) ($generated@@166 $generated@@230 $generated@@231) $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@78)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (= (type $generated@@237) $generated@@167) (= ($generated@@165 $generated@@237) (= ($generated@@235 $generated@@237) $generated@@64)))
 :pattern ( ($generated@@165 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@167) ($generated@@165 $generated@@238)) (exists (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (and (and (= (type $generated@@239) $generated@@176) (= (type $generated@@240) $generated@@176)) (= $generated@@238 ($generated@@200 $generated@@239 $generated@@240)))
 :no-pattern (type $generated@@239)
 :no-pattern (type $generated@@240)
 :no-pattern ($generated $generated@@239)
 :no-pattern ($generated@@0 $generated@@239)
 :no-pattern ($generated $generated@@240)
 :no-pattern ($generated@@0 $generated@@240)
)))
 :pattern ( ($generated@@165 $generated@@238))
)))
(assert  (and (and (forall (($generated@@245 T@T) ) (= ($generated@@1 ($generated@@243 $generated@@245)) 18)) (forall (($generated@@246 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
))) (forall (($generated@@247 T@T) ) (! (= (type ($generated@@241 $generated@@247)) ($generated@@243 $generated@@247))
 :pattern ( ($generated@@241 $generated@@247))
))))
(assert (forall (($generated@@248 T@T) ) (! (= ($generated@@242 ($generated@@241 $generated@@248)) 0)
 :pattern ( ($generated@@241 $generated@@248))
)))
(assert ($generated@@212 $generated@@60))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@176)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@73) (= (type $generated@@253) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@229 ($generated@@249 $generated@@251) $generated@@252 $generated@@253) ($generated@@88 $generated@@251 $generated@@252 $generated@@253)))
 :pattern ( ($generated@@229 ($generated@@249 $generated@@251) $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@255) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@256) $generated@@176)) (= (type $generated@@257) $generated@@73)) ($generated@@146 $generated@@254 $generated@@255)) ($generated@@229 $generated@@256 $generated@@257 $generated@@254)) ($generated@@229 $generated@@256 $generated@@257 $generated@@255))
 :pattern ( ($generated@@146 $generated@@254 $generated@@255) ($generated@@229 $generated@@256 $generated@@257 $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@258) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@259) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@261) $generated@@73)) ($generated@@146 $generated@@258 $generated@@259)) ($generated@@88 $generated@@260 $generated@@261 $generated@@258)) ($generated@@88 $generated@@260 $generated@@261 $generated@@259))
 :pattern ( ($generated@@146 $generated@@258 $generated@@259) ($generated@@88 $generated@@260 $generated@@261 $generated@@258))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@263) $generated@@91)) (=> (and (and ($generated@@158 $generated@@262) (and (not (= $generated@@263 $generated@@151)) (= ($generated@@159 $generated@@263) $generated@@154))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@262 $generated@@263) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@262 $generated@@263) $generated@@157) $generated@@46 $generated@@262)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@262 $generated@@263) $generated@@157))
)))
(assert (forall (($generated@@266 T@T) ) (! (= (type ($generated@@265 $generated@@266)) ($generated@@90 $generated@@266 $generated@@2))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@93 (type $generated@@267))))
 (=> (= (type $generated@@267) ($generated@@90 $generated@@268 $generated@@2)) (and (= (= ($generated@@264 $generated@@267) 0) (= $generated@@267 ($generated@@265 $generated@@268))) (=> (not (= ($generated@@264 $generated@@267) 0)) (exists (($generated@@269 T@U) ) (!  (and (= (type $generated@@269) $generated@@268) (< 0 ($generated ($generated@@95 $generated@@267 $generated@@269))))
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
))))))
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert  (and (and (and (and (forall (($generated@@275 T@T) ($generated@@276 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@275 $generated@@276)) 19)) (forall (($generated@@277 T@T) ($generated@@278 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@277 $generated@@278)) $generated@@277)
 :pattern ( ($generated@@272 $generated@@277 $generated@@278))
))) (forall (($generated@@279 T@T) ($generated@@280 T@T) ) (! (= ($generated@@274 ($generated@@272 $generated@@279 $generated@@280)) $generated@@280)
 :pattern ( ($generated@@272 $generated@@279 $generated@@280))
))) (forall (($generated@@281 T@U) ) (! (let (($generated@@282 ($generated@@273 (type $generated@@281))))
(= (type ($generated@@270 $generated@@281)) ($generated@@90 $generated@@282 $generated@@4)))
 :pattern ( ($generated@@270 $generated@@281))
))) (forall (($generated@@283 T@T) ($generated@@284 T@T) ) (! (= (type ($generated@@271 $generated@@283 $generated@@284)) ($generated@@272 $generated@@283 $generated@@284))
 :pattern ( ($generated@@271 $generated@@283 $generated@@284))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@T) ) (! (let (($generated@@287 (type $generated@@285)))
 (not ($generated@@0 ($generated@@95 ($generated@@270 ($generated@@271 $generated@@287 $generated@@286)) $generated@@285))))
 :pattern ( (let (($generated@@287 (type $generated@@285)))
($generated@@95 ($generated@@270 ($generated@@271 $generated@@287 $generated@@286)) $generated@@285)))
)))
(assert  (and (and (and (and (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (= ($generated@@1 ($generated@@290 $generated@@293 $generated@@294)) 20)) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@291 ($generated@@290 $generated@@295 $generated@@296)) $generated@@295)
 :pattern ( ($generated@@290 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@290 $generated@@297 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@290 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@291 (type $generated@@299))))
(= (type ($generated@@288 $generated@@299)) ($generated@@90 $generated@@300 $generated@@4)))
 :pattern ( ($generated@@288 $generated@@299))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= (type ($generated@@289 $generated@@301 $generated@@302)) ($generated@@290 $generated@@301 $generated@@302))
 :pattern ( ($generated@@289 $generated@@301 $generated@@302))
))))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (let (($generated@@305 (type $generated@@303)))
 (not ($generated@@0 ($generated@@95 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303))))
 :pattern ( (let (($generated@@305 (type $generated@@303)))
($generated@@95 ($generated@@288 ($generated@@289 $generated@@305 $generated@@304)) $generated@@303)))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@307) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@308) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@306 $generated@@307 $generated@@308)) (and ($generated@@146 $generated@@307 $generated@@308) (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@76 (type $generated@@310))))
 (=> (and (and (= (type $generated@@309) $generated@@91) (= (type $generated@@310) ($generated@@75 $generated@@311))) (not ($generated@@212 $generated@@310))) (= ($generated@@97 ($generated@@95 $generated@@307 $generated@@309) $generated@@310) ($generated@@97 ($generated@@95 $generated@@308 $generated@@309) $generated@@310))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@308 $generated@@309) $generated@@310))
))))
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@93 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@90 $generated@@313 $generated@@2)) (= ($generated@@182 $generated@@312) (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@313) (and (<= 0 ($generated ($generated@@95 $generated@@312 $generated@@314))) (<= ($generated ($generated@@95 $generated@@312 $generated@@314)) ($generated@@264 $generated@@312))))
 :pattern ( ($generated@@95 $generated@@312 $generated@@314))
)))))
 :pattern ( ($generated@@182 $generated@@312))
)))
(assert (forall (($generated@@316 T@T) ($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@315 $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@176) ($generated@@201 $generated@@318 $generated@@150)) (and (= ($generated@@249 ($generated@@315 $generated@@91 $generated@@318)) $generated@@318) ($generated@@160 ($generated@@315 $generated@@91 $generated@@318) $generated@@150)))
 :pattern ( ($generated@@201 $generated@@318 $generated@@150))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@176) ($generated@@201 $generated@@319 $generated@@194)) (and (= ($generated@@249 ($generated@@315 $generated@@91 $generated@@319)) $generated@@319) ($generated@@160 ($generated@@315 $generated@@91 $generated@@319) $generated@@194)))
 :pattern ( ($generated@@201 $generated@@319 $generated@@194))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@320) $generated@@176) ($generated@@201 $generated@@320 $generated@@154)) (and (= ($generated@@249 ($generated@@315 $generated@@91 $generated@@320)) $generated@@320) ($generated@@160 ($generated@@315 $generated@@91 $generated@@320) $generated@@154)))
 :pattern ( ($generated@@201 $generated@@320 $generated@@154))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@176) ($generated@@201 $generated@@321 $generated@@197)) (and (= ($generated@@249 ($generated@@315 $generated@@91 $generated@@321)) $generated@@321) ($generated@@160 ($generated@@315 $generated@@91 $generated@@321) $generated@@197)))
 :pattern ( ($generated@@201 $generated@@321 $generated@@197))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@91) (= ($generated@@160 $generated@@322 $generated@@194)  (and ($generated@@160 $generated@@322 $generated@@150) (not (= $generated@@322 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@322 $generated@@194))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@91) (= ($generated@@160 $generated@@323 $generated@@197)  (and ($generated@@160 $generated@@323 $generated@@154) (not (= $generated@@323 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@323 $generated@@197))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@274 (type $generated@@324))))
(let (($generated@@326 ($generated@@273 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@272 $generated@@326 $generated@@325)) (or (= $generated@@324 ($generated@@271 $generated@@326 $generated@@325)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) ($generated@@0 ($generated@@95 ($generated@@270 $generated@@324) $generated@@327)))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@270 $generated@@324))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@274 (type $generated@@329))))
(= (type ($generated@@328 $generated@@329)) ($generated@@90 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@274 (type $generated@@331))))
(let (($generated@@333 ($generated@@273 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@272 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@271 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@332) ($generated@@0 ($generated@@95 ($generated@@328 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@292 (type $generated@@335))))
(let (($generated@@337 ($generated@@291 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@290 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@289 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@95 ($generated@@288 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@288 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@292 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@90 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@292 (type $generated@@342))))
(let (($generated@@344 ($generated@@291 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@290 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@289 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@95 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@346) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@347) $generated@@73)) (= ($generated@@160 $generated@@346 ($generated@@181 $generated@@347)) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@176) (< 0 ($generated ($generated@@95 $generated@@346 $generated@@348)))) ($generated@@201 $generated@@348 $generated@@347))
 :pattern ( ($generated@@95 $generated@@346 $generated@@348))
))))
 :pattern ( ($generated@@160 $generated@@346 ($generated@@181 $generated@@347)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@93 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351 $generated@@352)) ($generated@@90 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@93 (type $generated@@354))))
 (=> (and (and (= (type $generated@@354) ($generated@@90 $generated@@356 $generated@@4)) (= (type $generated@@355) ($generated@@90 $generated@@356 $generated@@4))) ($generated@@349 $generated@@354 $generated@@355)) (and (= ($generated@@350 ($generated@@187 $generated@@354 $generated@@355) $generated@@354) $generated@@355) (= ($generated@@350 ($generated@@187 $generated@@354 $generated@@355) $generated@@355) $generated@@354))))
 :pattern ( ($generated@@187 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
 (=> (and (= (type $generated@@357) ($generated@@90 $generated@@360 $generated@@4)) (= (type $generated@@358) ($generated@@90 $generated@@360 $generated@@4))) (= ($generated@@0 ($generated@@95 ($generated@@350 $generated@@357 $generated@@358) $generated@@359))  (and ($generated@@0 ($generated@@95 $generated@@357 $generated@@359)) (not ($generated@@0 ($generated@@95 $generated@@358 $generated@@359)))))))
 :pattern ( ($generated@@95 ($generated@@350 $generated@@357 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@362) $generated@@73)) (= (type $generated@@363) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@361 ($generated@@215 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@176) ($generated@@0 ($generated@@95 $generated@@361 $generated@@364))) ($generated@@229 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@95 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@88 $generated@@361 ($generated@@215 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@366) $generated@@73)) (= (type $generated@@367) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@365 ($generated@@220 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@176) ($generated@@0 ($generated@@95 $generated@@365 $generated@@368))) ($generated@@229 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@95 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@88 $generated@@365 ($generated@@220 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@95 ($generated@@265 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@95 ($generated@@265 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@90 $generated@@176 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@274 (type $generated@@374))))
(let (($generated@@376 ($generated@@273 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@90 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@272 $generated@@176 $generated@@176)) (= (type $generated@@378) $generated@@176)) (= ($generated@@0 ($generated@@95 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@95 ($generated@@270 $generated@@377) ($generated@@174 ($generated@@315 $generated@@167 $generated@@378)))) (= ($generated@@95 ($generated@@372 $generated@@377) ($generated@@174 ($generated@@315 $generated@@167 $generated@@378))) ($generated@@175 ($generated@@315 $generated@@167 $generated@@378))))))
 :pattern ( ($generated@@95 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@90 $generated@@176 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@292 (type $generated@@382))))
(let (($generated@@384 ($generated@@291 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@90 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@290 $generated@@176 $generated@@176)) (= (type $generated@@386) $generated@@176)) (= ($generated@@0 ($generated@@95 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@95 ($generated@@288 $generated@@385) ($generated@@174 ($generated@@315 $generated@@167 $generated@@386)))) (= ($generated@@95 ($generated@@380 $generated@@385) ($generated@@174 ($generated@@315 $generated@@167 $generated@@386))) ($generated@@175 ($generated@@315 $generated@@167 $generated@@386))))))
 :pattern ( ($generated@@95 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@273 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@272 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@95 ($generated@@328 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@95 ($generated@@270 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@95 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@95 ($generated@@270 $generated@@387) $generated@@391))
 :pattern ( ($generated@@95 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@95 ($generated@@328 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@291 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@290 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@95 ($generated@@339 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@95 ($generated@@288 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@95 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@95 ($generated@@288 $generated@@392) $generated@@396))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@95 ($generated@@339 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@73)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@272 $generated@@176 $generated@@176)) (= (type $generated@@401) $generated@@73)) (= (type $generated@@402) $generated@@73)) (= (type $generated@@403) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@270 $generated@@400) $generated@@404))) (and ($generated@@229 ($generated@@95 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@229 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@95 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@95 ($generated@@270 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@88 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@73)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@290 $generated@@176 $generated@@176)) (= (type $generated@@409) $generated@@73)) (= (type $generated@@410) $generated@@73)) (= (type $generated@@411) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@288 $generated@@408) $generated@@412))) (and ($generated@@229 ($generated@@95 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@229 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@95 ($generated@@288 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@88 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
 (=> (and (and (= (type $generated@@413) ($generated@@90 $generated@@416 $generated@@4)) (= (type $generated@@414) ($generated@@90 $generated@@416 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@413 $generated@@415))) ($generated@@0 ($generated@@95 ($generated@@187 $generated@@413 $generated@@414) $generated@@415))))
 :pattern ( ($generated@@187 $generated@@413 $generated@@414) ($generated@@95 $generated@@413 $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
 (=> (and (and (= (type $generated@@417) ($generated@@90 $generated@@420 $generated@@4)) (= (type $generated@@418) ($generated@@90 $generated@@420 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@418 $generated@@419))) ($generated@@0 ($generated@@95 ($generated@@187 $generated@@417 $generated@@418) $generated@@419))))
 :pattern ( ($generated@@187 $generated@@417 $generated@@418) ($generated@@95 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@421) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@422) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@423) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@421 $generated@@423))) (and ($generated@@146 $generated@@421 $generated@@422) ($generated@@146 $generated@@422 $generated@@423))) ($generated@@146 $generated@@421 $generated@@423))
 :pattern ( ($generated@@146 $generated@@421 $generated@@422) ($generated@@146 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
 (=> (and (and (= (type $generated@@424) ($generated@@90 $generated@@427 $generated@@4)) (= (type $generated@@425) ($generated@@90 $generated@@427 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@425 $generated@@426))) (not ($generated@@0 ($generated@@95 ($generated@@350 $generated@@424 $generated@@425) $generated@@426)))))
 :pattern ( ($generated@@350 $generated@@424 $generated@@425) ($generated@@95 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@90 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@292 (type $generated@@430))))
(let (($generated@@432 ($generated@@291 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@290 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@289 $generated@@432 $generated@@431)) (= ($generated@@288 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@288 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@292 (type $generated@@433))))
(let (($generated@@435 ($generated@@291 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@290 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@289 $generated@@435 $generated@@434)) (= ($generated@@339 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@339 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@292 (type $generated@@436))))
(let (($generated@@438 ($generated@@291 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@290 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@289 $generated@@438 $generated@@437)) (= ($generated@@379 $generated@@436) ($generated@@428 $generated@@176))))))
 :pattern ( ($generated@@379 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@274 (type $generated@@439))))
(let (($generated@@441 ($generated@@273 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@272 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@271 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@176) (= (type $generated@@443) $generated@@176)) ($generated@@0 ($generated@@95 ($generated@@371 $generated@@439) ($generated@@249 ($generated@@200 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@371 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@292 (type $generated@@444))))
(let (($generated@@446 ($generated@@291 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@290 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@289 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@176) (= (type $generated@@448) $generated@@176)) ($generated@@0 ($generated@@95 ($generated@@379 $generated@@444) ($generated@@249 ($generated@@200 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@379 $generated@@444))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@79)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ($generated@@453 T@T) ) (!  (=> (and (= (type $generated@@451) $generated@@79) (= (type $generated@@452) $generated@@77)) (and (= ($generated@@449 ($generated@@208 $generated@@453 $generated@@451 $generated@@452)) $generated@@451) (= ($generated@@86 ($generated@@208 $generated@@453 $generated@@451 $generated@@452)) $generated@@452)))
 :pattern ( ($generated@@208 $generated@@453 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@176) ($generated@@201 $generated@@454 $generated@@46)) (and (= ($generated@@249 ($generated@@315 $generated@@2 $generated@@454)) $generated@@454) ($generated@@160 ($generated@@315 $generated@@2 $generated@@454) $generated@@46)))
 :pattern ( ($generated@@201 $generated@@454 $generated@@46))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@176) ($generated@@201 $generated@@455 $generated@@47)) (and (= ($generated@@249 ($generated@@315 $generated@@3 $generated@@455)) $generated@@455) ($generated@@160 ($generated@@315 $generated@@3 $generated@@455) $generated@@47)))
 :pattern ( ($generated@@201 $generated@@455 $generated@@47))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@176) ($generated@@201 $generated@@456 $generated@@44)) (and (= ($generated@@249 ($generated@@315 $generated@@4 $generated@@456)) $generated@@456) ($generated@@160 ($generated@@315 $generated@@4 $generated@@456) $generated@@44)))
 :pattern ( ($generated@@201 $generated@@456 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@457) 21))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@176) ($generated@@201 $generated@@458 $generated@@45)) (and (= ($generated@@249 ($generated@@315 $generated@@457 $generated@@458)) $generated@@458) ($generated@@160 ($generated@@315 $generated@@457 $generated@@458) $generated@@45)))
 :pattern ( ($generated@@201 $generated@@458 $generated@@45))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (= (type $generated@@460) $generated@@73) (= ($generated@@201 ($generated@@249 $generated@@459) $generated@@460) ($generated@@160 $generated@@459 $generated@@460)))
 :pattern ( ($generated@@201 ($generated@@249 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@93 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@90 $generated@@462 $generated@@2)) (<= 0 ($generated@@264 $generated@@461))))
 :pattern ( ($generated@@264 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@244 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@243 $generated@@464)) (<= 0 ($generated@@242 $generated@@463))))
 :pattern ( ($generated@@242 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@73)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@73) (= (type $generated@@468) $generated@@73)) (= ($generated@@465 ($generated@@397 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@397 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@73)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@73) (= (type $generated@@472) $generated@@73)) (= ($generated@@469 ($generated@@397 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@397 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@73) (= (type $generated@@474) $generated@@73)) (= ($generated@@84 ($generated@@397 $generated@@473 $generated@@474)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@73)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@73) (= (type $generated@@478) $generated@@73)) (= ($generated@@475 ($generated@@405 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@405 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@73)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@73) (= (type $generated@@482) $generated@@73)) (= ($generated@@479 ($generated@@405 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@405 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@73) (= (type $generated@@484) $generated@@73)) (= ($generated@@84 ($generated@@405 $generated@@483 $generated@@484)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@176) (= (type $generated@@486) $generated@@176)) (= ($generated@@235 ($generated@@200 $generated@@485 $generated@@486)) $generated@@64))
 :pattern ( ($generated@@200 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@73)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@73) (= (type $generated@@490) $generated@@73)) (= ($generated@@487 ($generated@@166 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@166 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@73)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@73) (= (type $generated@@494) $generated@@73)) (= ($generated@@491 ($generated@@166 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@166 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@176) (= (type $generated@@496) $generated@@176)) (= ($generated@@174 ($generated@@200 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@200 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@176) (= (type $generated@@498) $generated@@176)) (= ($generated@@175 ($generated@@200 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@200 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@91) ($generated@@160 $generated@@499 $generated@@150))
 :pattern ( ($generated@@160 $generated@@499 $generated@@150))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@73)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@244 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@243 $generated@@176)) (= (type $generated@@507) $generated@@73)) (= (type $generated@@508) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@242 $generated@@506))) ($generated@@229 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@88 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@89 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@89 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@73)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@73) (= ($generated@@512 ($generated@@215 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@215 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@73) (= ($generated@@84 ($generated@@215 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@215 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@73)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@73) (= ($generated@@516 ($generated@@220 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@220 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@73) (= ($generated@@84 ($generated@@220 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@220 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@73)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@73) (= ($generated@@520 ($generated@@181 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@181 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@73) (= ($generated@@84 ($generated@@181 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@73)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@73) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@73) (= ($generated@@84 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@315 $generated@@529 ($generated@@249 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@249 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@272 $generated@@176 $generated@@176)) (= (type $generated@@531) $generated@@73)) (= (type $generated@@532) $generated@@73)) (= ($generated@@160 $generated@@530 ($generated@@397 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@270 $generated@@530) $generated@@533))) (and ($generated@@201 ($generated@@95 ($generated@@372 $generated@@530) $generated@@533) $generated@@532) ($generated@@201 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@95 ($generated@@372 $generated@@530) $generated@@533))
 :pattern ( ($generated@@95 ($generated@@270 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@160 $generated@@530 ($generated@@397 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@290 $generated@@176 $generated@@176)) (= (type $generated@@535) $generated@@73)) (= (type $generated@@536) $generated@@73)) (= ($generated@@160 $generated@@534 ($generated@@405 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@288 $generated@@534) $generated@@537))) (and ($generated@@201 ($generated@@95 ($generated@@380 $generated@@534) $generated@@537) $generated@@536) ($generated@@201 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@95 ($generated@@380 $generated@@534) $generated@@537))
 :pattern ( ($generated@@95 ($generated@@288 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@160 $generated@@534 ($generated@@405 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@176) (= (type $generated@@541) $generated@@176)) (< ($generated@@538 $generated@@540) ($generated@@539 ($generated@@200 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@200 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@176) (= (type $generated@@543) $generated@@176)) (< ($generated@@538 $generated@@543) ($generated@@539 ($generated@@200 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@200 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 ($generated@@93 (type $generated@@544))))
 (=> (and (= (type $generated@@544) ($generated@@90 $generated@@546 $generated@@4)) (= (type $generated@@545) ($generated@@90 $generated@@546 $generated@@4))) (= ($generated@@187 $generated@@544 ($generated@@187 $generated@@544 $generated@@545)) ($generated@@187 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@187 $generated@@544 ($generated@@187 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@176) (= (type $generated@@548) $generated@@73)) (= (type $generated@@549) $generated@@73)) ($generated@@201 $generated@@547 ($generated@@397 $generated@@548 $generated@@549))) (and (= ($generated@@249 ($generated@@315 ($generated@@272 $generated@@176 $generated@@176) $generated@@547)) $generated@@547) ($generated@@160 ($generated@@315 ($generated@@272 $generated@@176 $generated@@176) $generated@@547) ($generated@@397 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@201 $generated@@547 ($generated@@397 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@176) (= (type $generated@@551) $generated@@73)) (= (type $generated@@552) $generated@@73)) ($generated@@201 $generated@@550 ($generated@@405 $generated@@551 $generated@@552))) (and (= ($generated@@249 ($generated@@315 ($generated@@290 $generated@@176 $generated@@176) $generated@@550)) $generated@@550) ($generated@@160 ($generated@@315 ($generated@@290 $generated@@176 $generated@@176) $generated@@550) ($generated@@405 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@201 $generated@@550 ($generated@@405 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@73) (= (type $generated@@554) $generated@@73)) (= (type $generated@@555) $generated@@176)) ($generated@@201 $generated@@555 ($generated@@166 $generated@@553 $generated@@554))) (and (= ($generated@@249 ($generated@@315 $generated@@167 $generated@@555)) $generated@@555) ($generated@@160 ($generated@@315 $generated@@167 $generated@@555) ($generated@@166 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@201 $generated@@555 ($generated@@166 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@95 ($generated@@428 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@95 ($generated@@428 $generated@@557) $generated@@556)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@564 T@T) ($generated@@565 T@T) ) (= ($generated@@1 ($generated@@560 $generated@@564 $generated@@565)) 22)) (forall (($generated@@566 T@T) ($generated@@567 T@T) ) (! (= ($generated@@561 ($generated@@560 $generated@@566 $generated@@567)) $generated@@566)
 :pattern ( ($generated@@560 $generated@@566 $generated@@567))
))) (forall (($generated@@568 T@T) ($generated@@569 T@T) ) (! (= ($generated@@562 ($generated@@560 $generated@@568 $generated@@569)) $generated@@569)
 :pattern ( ($generated@@560 $generated@@568 $generated@@569))
))) (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@562 (type $generated@@570))))
(= (type ($generated@@558 $generated@@570 $generated@@571 $generated@@572)) $generated@@573))
 :pattern ( ($generated@@558 $generated@@570 $generated@@571 $generated@@572))
))) (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
(let (($generated@@579 (type $generated@@575)))
(= (type ($generated@@563 $generated@@574 $generated@@575 $generated@@576 $generated@@577)) ($generated@@560 $generated@@579 $generated@@578))))
 :pattern ( ($generated@@563 $generated@@574 $generated@@575 $generated@@576 $generated@@577))
))) (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@562 (type $generated@@580))))
 (=> (= (type $generated@@583) $generated@@584) (= ($generated@@558 ($generated@@563 $generated@@580 $generated@@581 $generated@@582 $generated@@583) $generated@@581 $generated@@582) $generated@@583)))
 :weight 0
))) (and (and (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (or (= $generated@@587 $generated@@589) (= ($generated@@558 ($generated@@563 $generated@@586 $generated@@587 $generated@@588 $generated@@585) $generated@@589 $generated@@590) ($generated@@558 $generated@@586 $generated@@589 $generated@@590)))
 :weight 0
)) (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (or (= $generated@@594 $generated@@596) (= ($generated@@558 ($generated@@563 $generated@@592 $generated@@593 $generated@@594 $generated@@591) $generated@@595 $generated@@596) ($generated@@558 $generated@@592 $generated@@595 $generated@@596)))
 :weight 0
))) (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (or true (= ($generated@@558 ($generated@@563 $generated@@598 $generated@@599 $generated@@600 $generated@@597) $generated@@601 $generated@@602) ($generated@@558 $generated@@598 $generated@@601 $generated@@602)))
 :weight 0
)))) (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (= (type ($generated@@559 $generated@@603 $generated@@604 $generated@@605 $generated@@606 $generated@@607)) ($generated@@560 $generated@@91 $generated@@4))
 :pattern ( ($generated@@559 $generated@@603 $generated@@604 $generated@@605 $generated@@606 $generated@@607))
))))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 ($generated@@76 (type $generated@@614))))
 (=> (and (and (and (and (and (and (= (type $generated@@608) $generated@@91) (= (type $generated@@609) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@610) ($generated@@75 $generated@@4))) (= (type $generated@@611) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@612) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@613) $generated@@91)) (= (type $generated@@614) ($generated@@75 $generated@@615))) (= ($generated@@0 ($generated@@558 ($generated@@559 $generated@@608 $generated@@609 $generated@@610 $generated@@611 $generated@@612) $generated@@613 $generated@@614))  (=> (and (not (= $generated@@613 $generated@@608)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@609 $generated@@613) $generated@@610))) (or ($generated@@0 ($generated@@95 $generated@@611 ($generated@@249 $generated@@613))) ($generated@@0 ($generated@@95 $generated@@612 ($generated@@249 $generated@@613))))))))
 :pattern ( ($generated@@558 ($generated@@559 $generated@@608 $generated@@609 $generated@@610 $generated@@611 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@617 T@U) ) (! (= (type ($generated@@616 $generated@@617)) $generated@@80)
 :pattern ( ($generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@73) (= (type $generated@@619) $generated@@73)) (and (= ($generated@@84 ($generated@@166 $generated@@618 $generated@@619)) $generated@@65) (= ($generated@@616 ($generated@@166 $generated@@618 $generated@@619)) $generated@@70)))
 :pattern ( ($generated@@166 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@167) (= ($generated@@538 ($generated@@249 $generated@@620)) ($generated@@539 $generated@@620)))
 :pattern ( ($generated@@538 ($generated@@249 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@176) ($generated@@201 $generated@@621 ($generated@@89 0))) (and (= ($generated@@249 ($generated@@315 $generated@@2 $generated@@621)) $generated@@621) ($generated@@160 ($generated@@315 ($generated@@90 $generated@@176 $generated@@4) $generated@@621) ($generated@@89 0))))
 :pattern ( ($generated@@201 $generated@@621 ($generated@@89 0)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@176) (= (type $generated@@623) $generated@@73)) ($generated@@201 $generated@@622 ($generated@@215 $generated@@623))) (and (= ($generated@@249 ($generated@@315 ($generated@@90 $generated@@176 $generated@@4) $generated@@622)) $generated@@622) ($generated@@160 ($generated@@315 ($generated@@90 $generated@@176 $generated@@4) $generated@@622) ($generated@@215 $generated@@623))))
 :pattern ( ($generated@@201 $generated@@622 ($generated@@215 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@176) (= (type $generated@@625) $generated@@73)) ($generated@@201 $generated@@624 ($generated@@220 $generated@@625))) (and (= ($generated@@249 ($generated@@315 ($generated@@90 $generated@@176 $generated@@4) $generated@@624)) $generated@@624) ($generated@@160 ($generated@@315 ($generated@@90 $generated@@176 $generated@@4) $generated@@624) ($generated@@220 $generated@@625))))
 :pattern ( ($generated@@201 $generated@@624 ($generated@@220 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@176) (= (type $generated@@627) $generated@@73)) ($generated@@201 $generated@@626 ($generated@@181 $generated@@627))) (and (= ($generated@@249 ($generated@@315 ($generated@@90 $generated@@176 $generated@@2) $generated@@626)) $generated@@626) ($generated@@160 ($generated@@315 ($generated@@90 $generated@@176 $generated@@2) $generated@@626) ($generated@@181 $generated@@627))))
 :pattern ( ($generated@@201 $generated@@626 ($generated@@181 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@176) (= (type $generated@@629) $generated@@73)) ($generated@@201 $generated@@628 ($generated@@500 $generated@@629))) (and (= ($generated@@249 ($generated@@315 ($generated@@243 $generated@@176) $generated@@628)) $generated@@628) ($generated@@160 ($generated@@315 ($generated@@243 $generated@@176) $generated@@628) ($generated@@500 $generated@@629))))
 :pattern ( ($generated@@201 $generated@@628 ($generated@@500 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@633)))
 (=> (and (and (and (= (type $generated@@630) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@631) $generated@@91)) (= (type $generated@@632) ($generated@@75 $generated@@634))) ($generated@@158 ($generated@@96 $generated@@630 $generated@@631 ($generated@@98 ($generated@@95 $generated@@630 $generated@@631) $generated@@632 $generated@@633)))) ($generated@@146 $generated@@630 ($generated@@96 $generated@@630 $generated@@631 ($generated@@98 ($generated@@95 $generated@@630 $generated@@631) $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@96 $generated@@630 $generated@@631 ($generated@@98 ($generated@@95 $generated@@630 $generated@@631) $generated@@632 $generated@@633)))
)))
(assert (= ($generated@@84 $generated@@150) $generated@@62))
(assert (= ($generated@@616 $generated@@150) $generated@@69))
(assert (= ($generated@@84 $generated@@194) $generated@@63))
(assert (= ($generated@@616 $generated@@194) $generated@@69))
(assert (= ($generated@@84 $generated@@154) $generated@@67))
(assert (= ($generated@@616 $generated@@154) $generated@@71))
(assert (= ($generated@@84 $generated@@197) $generated@@68))
(assert (= ($generated@@616 $generated@@197) $generated@@71))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (= (type $generated@@635) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@636) $generated@@73)) (= (type $generated@@637) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@635 ($generated@@181 $generated@@636) $generated@@637) (forall (($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@176) (< 0 ($generated ($generated@@95 $generated@@635 $generated@@638)))) ($generated@@229 $generated@@638 $generated@@636 $generated@@637))
 :pattern ( ($generated@@95 $generated@@635 $generated@@638))
))))
 :pattern ( ($generated@@88 $generated@@635 ($generated@@181 $generated@@636) $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@93 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@90 $generated@@641 $generated@@4)) (= (type $generated@@640) ($generated@@90 $generated@@641 $generated@@4))) (= ($generated@@349 $generated@@639 $generated@@640) (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@641) (or (not ($generated@@0 ($generated@@95 $generated@@639 $generated@@642))) (not ($generated@@0 ($generated@@95 $generated@@640 $generated@@642)))))
 :pattern ( ($generated@@95 $generated@@639 $generated@@642))
 :pattern ( ($generated@@95 $generated@@640 $generated@@642))
)))))
 :pattern ( ($generated@@349 $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@167) (= (type $generated@@644) $generated@@73)) (= (type $generated@@645) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@158 $generated@@645) (and ($generated@@165 $generated@@643) (exists (($generated@@646 T@U) ) (!  (and (= (type $generated@@646) $generated@@73) ($generated@@88 $generated@@643 ($generated@@166 $generated@@644 $generated@@646) $generated@@645))
 :pattern ( ($generated@@88 $generated@@643 ($generated@@166 $generated@@644 $generated@@646) $generated@@645))
))))) ($generated@@229 ($generated@@174 $generated@@643) $generated@@644 $generated@@645))
 :pattern ( ($generated@@229 ($generated@@174 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) $generated@@167) (= (type $generated@@648) $generated@@73)) (= (type $generated@@649) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@158 $generated@@649) (and ($generated@@165 $generated@@647) (exists (($generated@@650 T@U) ) (!  (and (= (type $generated@@650) $generated@@73) ($generated@@88 $generated@@647 ($generated@@166 $generated@@650 $generated@@648) $generated@@649))
 :pattern ( ($generated@@88 $generated@@647 ($generated@@166 $generated@@650 $generated@@648) $generated@@649))
))))) ($generated@@229 ($generated@@175 $generated@@647) $generated@@648 $generated@@649))
 :pattern ( ($generated@@229 ($generated@@175 $generated@@647) $generated@@648 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@176) (= (type $generated@@652) $generated@@176)) (= ($generated@@200 ($generated@@225 $generated@@651) ($generated@@225 $generated@@652)) ($generated@@225 ($generated@@200 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@200 ($generated@@225 $generated@@651) ($generated@@225 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (! (= ($generated@@249 ($generated@@225 $generated@@653)) ($generated@@225 ($generated@@249 $generated@@653)))
 :pattern ( ($generated@@249 ($generated@@225 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@244 (type $generated@@654))))
 (=> (and (= (type $generated@@654) ($generated@@243 $generated@@655)) (= ($generated@@242 $generated@@654) 0)) (= $generated@@654 ($generated@@241 $generated@@655))))
 :pattern ( ($generated@@242 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (! (let (($generated@@659 (type $generated@@657)))
 (=> (and (and (= (type $generated@@656) ($generated@@90 $generated@@659 $generated@@2)) (= (type $generated@@658) $generated@@2)) (<= 0 ($generated $generated@@658))) (= ($generated@@264 ($generated@@96 $generated@@656 $generated@@657 $generated@@658)) (+ (- ($generated@@264 $generated@@656) ($generated ($generated@@95 $generated@@656 $generated@@657))) ($generated $generated@@658)))))
 :pattern ( ($generated@@264 ($generated@@96 $generated@@656 $generated@@657 $generated@@658)))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (! (let (($generated@@663 (type $generated@@662)))
 (=> (and (= (type $generated@@660) ($generated@@90 $generated@@663 $generated@@4)) (= (type $generated@@661) ($generated@@90 $generated@@663 $generated@@4))) (= ($generated@@0 ($generated@@95 ($generated@@187 $generated@@660 $generated@@661) $generated@@662))  (or ($generated@@0 ($generated@@95 $generated@@660 $generated@@662)) ($generated@@0 ($generated@@95 $generated@@661 $generated@@662))))))
 :pattern ( ($generated@@95 ($generated@@187 $generated@@660 $generated@@661) $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@665) $generated@@2)) ($generated@@88 $generated@@665 $generated@@46 $generated@@664))
 :pattern ( ($generated@@88 $generated@@665 $generated@@46 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (= (type $generated@@666) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@667) $generated@@3)) ($generated@@88 $generated@@667 $generated@@47 $generated@@666))
 :pattern ( ($generated@@88 $generated@@667 $generated@@47 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@669) $generated@@4)) ($generated@@88 $generated@@669 $generated@@44 $generated@@668))
 :pattern ( ($generated@@88 $generated@@669 $generated@@44 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@671) $generated@@457)) ($generated@@88 $generated@@671 $generated@@45 $generated@@670))
 :pattern ( ($generated@@88 $generated@@671 $generated@@45 $generated@@670))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@672) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@673) $generated@@176)) ($generated@@88 $generated@@673 $generated@@48 $generated@@672))
 :pattern ( ($generated@@88 $generated@@673 $generated@@48 $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@243 $generated@@176)) (= (type $generated@@675) $generated@@73)) (= ($generated@@160 $generated@@674 ($generated@@500 $generated@@675)) (forall (($generated@@676 Int) ) (!  (=> (and (<= 0 $generated@@676) (< $generated@@676 ($generated@@242 $generated@@674))) ($generated@@201 ($generated@@501 $generated@@674 $generated@@676) $generated@@675))
 :pattern ( ($generated@@501 $generated@@674 $generated@@676))
))))
 :pattern ( ($generated@@160 $generated@@674 ($generated@@500 $generated@@675)))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 Int) ) (!  (=> (= (type $generated@@678) ($generated@@243 $generated@@176)) (=> (and (<= 0 $generated@@679) (< $generated@@679 ($generated@@242 $generated@@678))) (< ($generated@@539 ($generated@@315 $generated@@167 ($generated@@501 $generated@@678 $generated@@679))) ($generated@@677 $generated@@678))))
 :pattern ( ($generated@@539 ($generated@@315 $generated@@167 ($generated@@501 $generated@@678 $generated@@679))))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (and (= (type $generated@@680) ($generated@@272 $generated@@176 $generated@@176)) (= (type $generated@@681) $generated@@73)) (= (type $generated@@682) $generated@@73)) ($generated@@160 $generated@@680 ($generated@@397 $generated@@681 $generated@@682))) (and (and ($generated@@160 ($generated@@270 $generated@@680) ($generated@@215 $generated@@681)) ($generated@@160 ($generated@@328 $generated@@680) ($generated@@215 $generated@@682))) ($generated@@160 ($generated@@371 $generated@@680) ($generated@@215 ($generated@@166 $generated@@681 $generated@@682)))))
 :pattern ( ($generated@@160 $generated@@680 ($generated@@397 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (and (= (type $generated@@683) ($generated@@290 $generated@@176 $generated@@176)) (= (type $generated@@684) $generated@@73)) (= (type $generated@@685) $generated@@73)) ($generated@@160 $generated@@683 ($generated@@405 $generated@@684 $generated@@685))) (and (and ($generated@@160 ($generated@@288 $generated@@683) ($generated@@220 $generated@@684)) ($generated@@160 ($generated@@339 $generated@@683) ($generated@@220 $generated@@685))) ($generated@@160 ($generated@@379 $generated@@683) ($generated@@220 ($generated@@166 $generated@@684 $generated@@685)))))
 :pattern ( ($generated@@160 $generated@@683 ($generated@@405 $generated@@684 $generated@@685)))
)))
(assert (forall (($generated@@686 T@U) ) (!  (=> (= (type $generated@@686) $generated@@2) ($generated@@160 $generated@@686 $generated@@46))
 :pattern ( ($generated@@160 $generated@@686 $generated@@46))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@3) ($generated@@160 $generated@@687 $generated@@47))
 :pattern ( ($generated@@160 $generated@@687 $generated@@47))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@4) ($generated@@160 $generated@@688 $generated@@44))
 :pattern ( ($generated@@160 $generated@@688 $generated@@44))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@457) ($generated@@160 $generated@@689 $generated@@45))
 :pattern ( ($generated@@160 $generated@@689 $generated@@45))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@176) ($generated@@160 $generated@@690 $generated@@48))
 :pattern ( ($generated@@160 $generated@@690 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 (T@U) Bool)
(declare-fun $generated@@700 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@691) ($generated@@560 $generated@@91 $generated@@4)) (= (type $generated@@692) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@693) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@694) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@695) $generated@@91)) (= (type $generated@@696) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@698) $generated@@91)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@701  (=> (= $generated@@691 ($generated@@559 $generated@@151 $generated@@692 $generated@@60 $generated@@693 $generated@@694)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= $generated@@695 $generated@@151))) (=> (not (= $generated@@695 $generated@@151)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@0 ($generated@@558 $generated@@691 $generated@@695 $generated@@157))) (=> ($generated@@0 ($generated@@558 $generated@@691 $generated@@695 $generated@@157)) (=> (and (= $generated@@696 ($generated@@96 $generated@@692 $generated@@695 ($generated@@98 ($generated@@95 $generated@@692 $generated@@695) $generated@@157 ($generated@@8 $generated@@697)))) ($generated@@158 $generated@@696)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@698 $generated@@151))) (=> (not (= $generated@@698 $generated@@151)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@558 $generated@@691 $generated@@698 $generated@@157)))))))))))))
(let (($generated@@702  (=> (and ($generated@@158 $generated@@692) ($generated@@699 $generated@@692)) (=> (and (and ($generated@@160 $generated@@693 ($generated@@215 $generated@@194)) ($generated@@88 $generated@@693 ($generated@@215 $generated@@194) $generated@@692)) (and ($generated@@160 $generated@@694 ($generated@@215 $generated@@194)) ($generated@@88 $generated@@694 ($generated@@215 $generated@@194) $generated@@692))) (=> (and (and (and ($generated@@160 $generated@@695 $generated@@197) ($generated@@88 $generated@@695 $generated@@197 $generated@@692)) (and ($generated@@160 $generated@@698 $generated@@197) ($generated@@88 $generated@@698 $generated@@197 $generated@@692))) (and (and (= 1 $generated@@700) ($generated@@0 ($generated@@95 ($generated@@187 $generated@@693 $generated@@694) ($generated@@249 $generated@@695)))) (and ($generated@@0 ($generated@@95 $generated@@693 ($generated@@249 $generated@@698))) (= (ControlFlow 0 6) 2)))) $generated@@701)))))
$generated@@702)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@173 (T@T T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@270 (T@T) T@U)
(declare-fun $generated@@271 (T@U) Int)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@450 () T@T)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@494 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@534 (T@U) Int)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@549 (T@T) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@70)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) $generated@@70)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@70)) ($generated@@145 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@145 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@168 $generated@@169)) $generated@@70)
 :pattern ( ($generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@83) (= ($generated@@145 $generated@@170 $generated@@142)  (or (= $generated@@170 $generated@@139) (= ($generated@@168 $generated@@170) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@170 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (= ($generated@@1 ($generated@@173 $generated@@177 $generated@@178)) 16)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@174 ($generated@@173 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@175 ($generated@@173 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@173 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@175 (type $generated@@183))))
(= (type ($generated@@171 $generated@@183 $generated@@184 $generated@@185)) $generated@@186))
 :pattern ( ($generated@@171 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 (type $generated@@190)))
(let (($generated@@192 (type $generated@@188)))
(= (type ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190)) ($generated@@173 $generated@@192 $generated@@191))))
 :pattern ( ($generated@@176 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@175 (type $generated@@193))))
 (=> (= (type $generated@@196) $generated@@197) (= ($generated@@171 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@194 $generated@@195) $generated@@196)))
 :weight 0
))) (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@171 ($generated@@176 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@171 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@171 ($generated@@176 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@171 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or true (= ($generated@@171 ($generated@@176 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@171 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ) (! (= (type ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@173 $generated@@83 $generated@@4))
 :pattern ( ($generated@@172 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@73 (type $generated@@225))))
 (=> (and (and (and (and (= (type $generated@@220) $generated@@83) (= (type $generated@@221) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@222) ($generated@@72 $generated@@4))) (= (type $generated@@224) $generated@@83)) (= (type $generated@@225) ($generated@@72 $generated@@226))) (= ($generated@@0 ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (not (= $generated@@224 $generated@@220)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@221 $generated@@224) $generated@@222))) $generated@@223))))
 :pattern ( ($generated@@171 ($generated@@172 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (= (type $generated@@227) $generated@@70))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@83) (= (type $generated@@229) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@228 $generated@@227 $generated@@229) ($generated@@80 $generated@@228 $generated@@138 $generated@@229)))
 :pattern ( ($generated@@80 $generated@@228 $generated@@227 $generated@@229))
)))
(assert (= (type $generated@@230) $generated@@70))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@231 $generated@@230 $generated@@232) ($generated@@80 $generated@@231 $generated@@142 $generated@@232)))
 :pattern ( ($generated@@80 $generated@@231 $generated@@230 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@149)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@70) (= (type $generated@@238) $generated@@70)) (= (type $generated@@239) $generated@@158)) (= (type $generated@@240) $generated@@158)) (= ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@149) (= (type $generated@@242) $generated@@149)) (= ($generated@@155 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@155 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@70)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@246) $generated@@70)) (= ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@158) ($generated@@0 ($generated@@87 $generated@@245 $generated@@247))) ($generated@@234 $generated@@247 $generated@@246))
 :pattern ( ($generated@@87 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@145 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@70)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@251) $generated@@70)) (= ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@158) ($generated@@0 ($generated@@87 $generated@@250 $generated@@252))) ($generated@@234 $generated@@252 $generated@@251))
 :pattern ( ($generated@@87 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@145 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@70) (= (type $generated@@260) $generated@@70)) (= (type $generated@@261) $generated@@158)) (= (type $generated@@262) $generated@@158)) (= (type $generated@@263) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@257 $generated@@263)) (= ($generated@@80 ($generated@@233 $generated@@261 $generated@@262) ($generated@@148 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@80 ($generated@@233 $generated@@261 $generated@@262) ($generated@@148 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@74)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@149) (= ($generated@@147 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@63)))
 :pattern ( ($generated@@147 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@149) ($generated@@147 $generated@@267)) (exists (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (and (and (= (type $generated@@268) $generated@@158) (= (type $generated@@269) $generated@@158)) (= $generated@@267 ($generated@@233 $generated@@268 $generated@@269)))
 :no-pattern (type $generated@@268)
 :no-pattern (type $generated@@269)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
)))
 :pattern ( ($generated@@147 $generated@@267))
)))
(assert  (and (and (forall (($generated@@274 T@T) ) (= ($generated@@1 ($generated@@272 $generated@@274)) 17)) (forall (($generated@@275 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@275)) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
))) (forall (($generated@@276 T@T) ) (! (= (type ($generated@@270 $generated@@276)) ($generated@@272 $generated@@276))
 :pattern ( ($generated@@270 $generated@@276))
))))
(assert (forall (($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@277)) 0)
 :pattern ( ($generated@@270 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@158)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@70) (= (type $generated@@282) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@80 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@258 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@82 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@85 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@82 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@87 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@82 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@87 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@87 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@82 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@87 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@87 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@85 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@82 $generated@@326 $generated@@2)) (= ($generated@@164 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@87 $generated@@325 $generated@@327))) (<= ($generated ($generated@@87 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@87 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@164 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@158) ($generated@@234 $generated@@331 $generated@@138)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@331)) $generated@@331) ($generated@@145 ($generated@@328 $generated@@83 $generated@@331) $generated@@138)))
 :pattern ( ($generated@@234 $generated@@331 $generated@@138))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@158) ($generated@@234 $generated@@332 $generated@@227)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@332)) $generated@@332) ($generated@@145 ($generated@@328 $generated@@83 $generated@@332) $generated@@227)))
 :pattern ( ($generated@@234 $generated@@332 $generated@@227))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@158) ($generated@@234 $generated@@333 $generated@@142)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@333)) $generated@@333) ($generated@@145 ($generated@@328 $generated@@83 $generated@@333) $generated@@142)))
 :pattern ( ($generated@@234 $generated@@333 $generated@@142))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@158) ($generated@@234 $generated@@334 $generated@@230)) (and (= ($generated@@278 ($generated@@328 $generated@@83 $generated@@334)) $generated@@334) ($generated@@145 ($generated@@328 $generated@@83 $generated@@334) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@334 $generated@@230))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@83) (= ($generated@@145 $generated@@335 $generated@@227)  (and ($generated@@145 $generated@@335 $generated@@138) (not (= $generated@@335 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@335 $generated@@227))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@83) (= ($generated@@145 $generated@@336 $generated@@230)  (and ($generated@@145 $generated@@336 $generated@@142) (not (= $generated@@336 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@336 $generated@@230))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(let (($generated@@339 ($generated@@292 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@291 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@290 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@87 ($generated@@289 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@289 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@293 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@82 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@293 (type $generated@@344))))
(let (($generated@@346 ($generated@@292 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@291 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@290 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@87 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(let (($generated@@350 ($generated@@310 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@309 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@308 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@87 ($generated@@307 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@307 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@82 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@311 (type $generated@@355))))
(let (($generated@@357 ($generated@@310 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@309 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@308 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@360) $generated@@70)) (= ($generated@@145 $generated@@359 ($generated@@163 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@158) (< 0 ($generated ($generated@@87 $generated@@359 $generated@@361)))) ($generated@@234 $generated@@361 $generated@@360))
 :pattern ( ($generated@@87 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@145 $generated@@359 ($generated@@163 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@363) $generated@@70)) (= (type $generated@@364) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@362 ($generated@@243 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@158) ($generated@@0 ($generated@@87 $generated@@362 $generated@@365))) ($generated@@258 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@87 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@80 $generated@@362 ($generated@@243 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@82 $generated@@158 $generated@@4)) (= (type $generated@@367) $generated@@70)) (= (type $generated@@368) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@366 ($generated@@248 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@158) ($generated@@0 ($generated@@87 $generated@@366 $generated@@369))) ($generated@@258 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@87 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@80 $generated@@366 ($generated@@248 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@87 ($generated@@284 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@87 ($generated@@284 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@82 $generated@@158 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@293 (type $generated@@375))))
(let (($generated@@377 ($generated@@292 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@82 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@379) $generated@@158)) (= ($generated@@0 ($generated@@87 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@87 ($generated@@289 $generated@@378) ($generated@@156 ($generated@@328 $generated@@149 $generated@@379)))) (= ($generated@@87 ($generated@@373 $generated@@378) ($generated@@156 ($generated@@328 $generated@@149 $generated@@379))) ($generated@@157 ($generated@@328 $generated@@149 $generated@@379))))))
 :pattern ( ($generated@@87 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@82 $generated@@158 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@311 (type $generated@@383))))
(let (($generated@@385 ($generated@@310 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@82 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@387) $generated@@158)) (= ($generated@@0 ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@87 ($generated@@307 $generated@@386) ($generated@@156 ($generated@@328 $generated@@149 $generated@@387)))) (= ($generated@@87 ($generated@@381 $generated@@386) ($generated@@156 ($generated@@328 $generated@@149 $generated@@387))) ($generated@@157 ($generated@@328 $generated@@149 $generated@@387))))))
 :pattern ( ($generated@@87 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@292 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@291 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@87 ($generated@@341 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@87 ($generated@@289 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@87 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@87 ($generated@@289 $generated@@388) $generated@@392))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@87 ($generated@@341 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@310 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@309 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@87 ($generated@@352 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@87 ($generated@@307 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@87 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@87 ($generated@@307 $generated@@393) $generated@@397))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@87 ($generated@@352 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@70)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@402) $generated@@70)) (= (type $generated@@403) $generated@@70)) (= (type $generated@@404) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@289 $generated@@401) $generated@@405))) (and ($generated@@258 ($generated@@87 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@258 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@87 ($generated@@289 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@80 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@70)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@410) $generated@@70)) (= (type $generated@@411) $generated@@70)) (= (type $generated@@412) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@307 $generated@@409) $generated@@413))) (and ($generated@@258 ($generated@@87 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@258 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@87 ($generated@@307 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@80 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(= (type ($generated@@414 $generated@@415 $generated@@416)) ($generated@@82 $generated@@417 $generated@@4)))
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@419)))
 (=> (and (and (= (type $generated@@418) ($generated@@82 $generated@@421 $generated@@4)) (= (type $generated@@420) $generated@@421)) ($generated@@0 ($generated@@87 $generated@@418 $generated@@420))) ($generated@@0 ($generated@@87 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))))
 :pattern ( ($generated@@414 $generated@@418 $generated@@419) ($generated@@87 $generated@@418 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@423)))
 (=> (and (= (type $generated@@422) ($generated@@82 $generated@@425 $generated@@4)) (= (type $generated@@424) $generated@@425)) (= ($generated@@0 ($generated@@87 ($generated@@414 $generated@@422 $generated@@423) $generated@@424))  (or (= $generated@@424 $generated@@423) ($generated@@0 ($generated@@87 $generated@@422 $generated@@424))))))
 :pattern ( ($generated@@87 ($generated@@414 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@82 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@309 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@308 $generated@@430 $generated@@429)) (= ($generated@@307 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@307 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@311 (type $generated@@431))))
(let (($generated@@433 ($generated@@310 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@309 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@308 $generated@@433 $generated@@432)) (= ($generated@@352 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@352 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@311 (type $generated@@434))))
(let (($generated@@436 ($generated@@310 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@309 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@308 $generated@@436 $generated@@435)) (= ($generated@@380 $generated@@434) ($generated@@426 $generated@@158))))))
 :pattern ( ($generated@@380 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@293 (type $generated@@437))))
(let (($generated@@439 ($generated@@292 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@291 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@290 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@158) (= (type $generated@@441) $generated@@158)) ($generated@@0 ($generated@@87 ($generated@@372 $generated@@437) ($generated@@278 ($generated@@233 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@372 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@311 (type $generated@@442))))
(let (($generated@@444 ($generated@@310 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@309 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@308 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@158) (= (type $generated@@446) $generated@@158)) ($generated@@0 ($generated@@87 ($generated@@380 $generated@@442) ($generated@@278 ($generated@@233 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@380 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@158) ($generated@@234 $generated@@447 $generated@@46)) (and (= ($generated@@278 ($generated@@328 $generated@@2 $generated@@447)) $generated@@447) ($generated@@145 ($generated@@328 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@158) ($generated@@234 $generated@@448 $generated@@47)) (and (= ($generated@@278 ($generated@@328 $generated@@3 $generated@@448)) $generated@@448) ($generated@@145 ($generated@@328 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@158) ($generated@@234 $generated@@449 $generated@@44)) (and (= ($generated@@278 ($generated@@328 $generated@@4 $generated@@449)) $generated@@449) ($generated@@145 ($generated@@328 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@449 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@450) 20))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@234 $generated@@451 $generated@@45)) (and (= ($generated@@278 ($generated@@328 $generated@@450 $generated@@451)) $generated@@451) ($generated@@145 ($generated@@328 $generated@@450 $generated@@451) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@451 $generated@@45))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (= (type $generated@@453) $generated@@70) (= ($generated@@234 ($generated@@278 $generated@@452) $generated@@453) ($generated@@145 $generated@@452 $generated@@453)))
 :pattern ( ($generated@@234 ($generated@@278 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@85 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@82 $generated@@455 $generated@@2)) (<= 0 ($generated@@283 $generated@@454))))
 :pattern ( ($generated@@283 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@273 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@272 $generated@@457)) (<= 0 ($generated@@271 $generated@@456))))
 :pattern ( ($generated@@271 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@70)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@70) (= (type $generated@@461) $generated@@70)) (= ($generated@@458 ($generated@@398 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@398 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@70)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@70) (= (type $generated@@465) $generated@@70)) (= ($generated@@462 ($generated@@398 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@398 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@78 ($generated@@398 $generated@@466 $generated@@467)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@406 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@406 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@406 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@406 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@78 ($generated@@406 $generated@@476 $generated@@477)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@158) (= (type $generated@@479) $generated@@158)) (= ($generated@@264 ($generated@@233 $generated@@478 $generated@@479)) $generated@@63))
 :pattern ( ($generated@@233 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@148 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@148 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@70)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@484 ($generated@@148 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@148 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@158) (= (type $generated@@489) $generated@@158)) (= ($generated@@156 ($generated@@233 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@233 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@158) (= (type $generated@@491) $generated@@158)) (= ($generated@@157 ($generated@@233 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@233 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@83) ($generated@@145 $generated@@492 $generated@@138))
 :pattern ( ($generated@@145 $generated@@492 $generated@@138))
)))
(assert  (and (forall (($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@495))
)) (forall (($generated@@496 T@U) ($generated@@497 Int) ) (! (let (($generated@@498 ($generated@@273 (type $generated@@496))))
(= (type ($generated@@494 $generated@@496 $generated@@497)) $generated@@498))
 :pattern ( ($generated@@494 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@272 $generated@@158)) (= (type $generated@@500) $generated@@70)) (= (type $generated@@501) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501) (forall (($generated@@502 Int) ) (!  (=> (and (<= 0 $generated@@502) (< $generated@@502 ($generated@@271 $generated@@499))) ($generated@@258 ($generated@@494 $generated@@499 $generated@@502) $generated@@500 $generated@@501))
 :pattern ( ($generated@@494 $generated@@499 $generated@@502))
))))
 :pattern ( ($generated@@80 $generated@@499 ($generated@@493 $generated@@500) $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
 (=> (= (type $generated@@503) ($generated@@82 $generated@@505 $generated@@4)) ($generated@@0 ($generated@@87 ($generated@@414 $generated@@503 $generated@@504) $generated@@504))))
 :pattern ( ($generated@@414 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@81 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@81 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@70) (= ($generated@@508 ($generated@@243 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@243 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@70) (= ($generated@@78 ($generated@@243 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@248 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@248 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@248 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@163 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@163 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@163 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@493 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@493 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@493 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@493 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (! (let (($generated@@525 (type $generated@@524)))
(= ($generated@@328 $generated@@525 ($generated@@278 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@278 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) $generated@@70)) (= ($generated@@145 $generated@@526 ($generated@@398 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@289 $generated@@526) $generated@@529))) (and ($generated@@234 ($generated@@87 ($generated@@373 $generated@@526) $generated@@529) $generated@@528) ($generated@@234 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@87 ($generated@@373 $generated@@526) $generated@@529))
 :pattern ( ($generated@@87 ($generated@@289 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@145 $generated@@526 ($generated@@398 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) $generated@@70)) (= ($generated@@145 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) ($generated@@0 ($generated@@87 ($generated@@307 $generated@@530) $generated@@533))) (and ($generated@@234 ($generated@@87 ($generated@@381 $generated@@530) $generated@@533) $generated@@532) ($generated@@234 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@87 ($generated@@381 $generated@@530) $generated@@533))
 :pattern ( ($generated@@87 ($generated@@307 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@145 $generated@@530 ($generated@@406 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@158)) (< ($generated@@534 $generated@@536) ($generated@@535 ($generated@@233 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@233 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@158) (= (type $generated@@539) $generated@@158)) (< ($generated@@534 $generated@@539) ($generated@@535 ($generated@@233 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@233 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@158) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) ($generated@@234 $generated@@540 ($generated@@398 $generated@@541 $generated@@542))) (and (= ($generated@@278 ($generated@@328 ($generated@@291 $generated@@158 $generated@@158) $generated@@540)) $generated@@540) ($generated@@145 ($generated@@328 ($generated@@291 $generated@@158 $generated@@158) $generated@@540) ($generated@@398 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@234 $generated@@540 ($generated@@398 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@158) (= (type $generated@@544) $generated@@70)) (= (type $generated@@545) $generated@@70)) ($generated@@234 $generated@@543 ($generated@@406 $generated@@544 $generated@@545))) (and (= ($generated@@278 ($generated@@328 ($generated@@309 $generated@@158 $generated@@158) $generated@@543)) $generated@@543) ($generated@@145 ($generated@@328 ($generated@@309 $generated@@158 $generated@@158) $generated@@543) ($generated@@406 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@234 $generated@@543 ($generated@@406 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@70) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@158)) ($generated@@234 $generated@@548 ($generated@@148 $generated@@546 $generated@@547))) (and (= ($generated@@278 ($generated@@328 $generated@@149 $generated@@548)) $generated@@548) ($generated@@145 ($generated@@328 $generated@@149 $generated@@548) ($generated@@148 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@234 $generated@@548 ($generated@@148 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@550 T@T) ) (! (= (type ($generated@@549 $generated@@550)) ($generated@@82 $generated@@550 $generated@@4))
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@87 ($generated@@549 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@87 ($generated@@549 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (not ($generated@@0 ($generated@@87 ($generated@@426 $generated@@554) $generated@@553))))
 :pattern ( (let (($generated@@554 (type $generated@@553)))
($generated@@87 ($generated@@426 $generated@@554) $generated@@553)))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@75)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@70) (= (type $generated@@558) $generated@@70)) (and (= ($generated@@78 ($generated@@148 $generated@@557 $generated@@558)) $generated@@64) (= ($generated@@555 ($generated@@148 $generated@@557 $generated@@558)) $generated@@68)))
 :pattern ( ($generated@@148 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@149) (= ($generated@@534 ($generated@@278 $generated@@559)) ($generated@@535 $generated@@559)))
 :pattern ( ($generated@@534 ($generated@@278 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@158) ($generated@@234 $generated@@560 ($generated@@81 0))) (and (= ($generated@@278 ($generated@@328 $generated@@2 $generated@@560)) $generated@@560) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@560) ($generated@@81 0))))
 :pattern ( ($generated@@234 $generated@@560 ($generated@@81 0)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@158) (= (type $generated@@562) $generated@@70)) ($generated@@234 $generated@@561 ($generated@@243 $generated@@562))) (and (= ($generated@@278 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@561) ($generated@@243 $generated@@562))))
 :pattern ( ($generated@@234 $generated@@561 ($generated@@243 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@158) (= (type $generated@@564) $generated@@70)) ($generated@@234 $generated@@563 ($generated@@248 $generated@@564))) (and (= ($generated@@278 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@563)) $generated@@563) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@4) $generated@@563) ($generated@@248 $generated@@564))))
 :pattern ( ($generated@@234 $generated@@563 ($generated@@248 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@158) (= (type $generated@@566) $generated@@70)) ($generated@@234 $generated@@565 ($generated@@163 $generated@@566))) (and (= ($generated@@278 ($generated@@328 ($generated@@82 $generated@@158 $generated@@2) $generated@@565)) $generated@@565) ($generated@@145 ($generated@@328 ($generated@@82 $generated@@158 $generated@@2) $generated@@565) ($generated@@163 $generated@@566))))
 :pattern ( ($generated@@234 $generated@@565 ($generated@@163 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@158) (= (type $generated@@568) $generated@@70)) ($generated@@234 $generated@@567 ($generated@@493 $generated@@568))) (and (= ($generated@@278 ($generated@@328 ($generated@@272 $generated@@158) $generated@@567)) $generated@@567) ($generated@@145 ($generated@@328 ($generated@@272 $generated@@158) $generated@@567) ($generated@@493 $generated@@568))))
 :pattern ( ($generated@@234 $generated@@567 ($generated@@493 $generated@@568)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@555 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@227) $generated@@62))
(assert (= ($generated@@555 $generated@@227) $generated@@67))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@555 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@230) $generated@@66))
(assert (= ($generated@@555 $generated@@230) $generated@@69))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@569) ($generated@@82 $generated@@158 $generated@@2)) (= (type $generated@@570) $generated@@70)) (= (type $generated@@571) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@569 ($generated@@163 $generated@@570) $generated@@571) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@158) (< 0 ($generated ($generated@@87 $generated@@569 $generated@@572)))) ($generated@@258 $generated@@572 $generated@@570 $generated@@571))
 :pattern ( ($generated@@87 $generated@@569 $generated@@572))
))))
 :pattern ( ($generated@@80 $generated@@569 ($generated@@163 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@257 $generated@@575) (and ($generated@@147 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@70) ($generated@@80 $generated@@573 ($generated@@148 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@148 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@258 ($generated@@156 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@258 ($generated@@156 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@257 $generated@@579) (and ($generated@@147 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@70) ($generated@@80 $generated@@577 ($generated@@148 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@80 $generated@@577 ($generated@@148 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@258 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@258 ($generated@@157 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@158) (= (type $generated@@582) $generated@@158)) (= ($generated@@233 ($generated@@253 $generated@@581) ($generated@@253 $generated@@582)) ($generated@@253 ($generated@@233 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@233 ($generated@@253 $generated@@581) ($generated@@253 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@278 ($generated@@253 $generated@@583)) ($generated@@253 ($generated@@278 $generated@@583)))
 :pattern ( ($generated@@278 ($generated@@253 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@273 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@272 $generated@@585)) (= ($generated@@271 $generated@@584) 0)) (= $generated@@584 ($generated@@270 $generated@@585))))
 :pattern ( ($generated@@271 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@283 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@283 $generated@@586) ($generated ($generated@@87 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@283 ($generated@@88 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@591) $generated@@2)) ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@80 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@593) $generated@@3)) ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@80 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@595) $generated@@4)) ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@80 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@597) $generated@@450)) ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@80 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@599) $generated@@158)) ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@80 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@272 $generated@@158)) (= (type $generated@@601) $generated@@70)) (= ($generated@@145 $generated@@600 ($generated@@493 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@271 $generated@@600))) ($generated@@234 ($generated@@494 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@494 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@145 $generated@@600 ($generated@@493 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@272 $generated@@158)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@271 $generated@@604))) (< ($generated@@535 ($generated@@328 $generated@@149 ($generated@@494 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@535 ($generated@@328 $generated@@149 ($generated@@494 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@291 $generated@@158 $generated@@158)) (= (type $generated@@607) $generated@@70)) (= (type $generated@@608) $generated@@70)) ($generated@@145 $generated@@606 ($generated@@398 $generated@@607 $generated@@608))) (and (and ($generated@@145 ($generated@@289 $generated@@606) ($generated@@243 $generated@@607)) ($generated@@145 ($generated@@341 $generated@@606) ($generated@@243 $generated@@608))) ($generated@@145 ($generated@@372 $generated@@606) ($generated@@243 ($generated@@148 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@145 $generated@@606 ($generated@@398 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@309 $generated@@158 $generated@@158)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) $generated@@70)) ($generated@@145 $generated@@609 ($generated@@406 $generated@@610 $generated@@611))) (and (and ($generated@@145 ($generated@@307 $generated@@609) ($generated@@248 $generated@@610)) ($generated@@145 ($generated@@352 $generated@@609) ($generated@@248 $generated@@611))) ($generated@@145 ($generated@@380 $generated@@609) ($generated@@248 ($generated@@148 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@145 $generated@@609 ($generated@@406 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@145 $generated@@612 $generated@@46))
 :pattern ( ($generated@@145 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@145 $generated@@613 $generated@@47))
 :pattern ( ($generated@@145 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@145 $generated@@614 $generated@@44))
 :pattern ( ($generated@@145 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@450) ($generated@@145 $generated@@615 $generated@@45))
 :pattern ( ($generated@@145 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@158) ($generated@@145 $generated@@616 $generated@@48))
 :pattern ( ($generated@@145 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 (T@U) Bool)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@617) ($generated@@173 $generated@@83 $generated@@4)) (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@619) $generated@@83)) (= (type $generated@@620) ($generated@@82 $generated@@158 $generated@@4))) (= (type $generated@@621) ($generated@@82 $generated@@158 $generated@@4))) (= (type $generated@@623) $generated@@83)) (= (type $generated@@624) ($generated@@82 $generated@@158 $generated@@4))) (= (type $generated@@625) ($generated@@82 $generated@@158 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@627  (=> (= $generated@@617 ($generated@@172 $generated@@139 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@145 ($generated@@414 ($generated@@549 $generated@@158) ($generated@@278 $generated@@619)) ($generated@@243 $generated@@227))) (=> ($generated@@145 ($generated@@414 ($generated@@549 $generated@@158) ($generated@@278 $generated@@619)) ($generated@@243 $generated@@227)) (=> (= $generated@@620 ($generated@@414 ($generated@@549 $generated@@158) ($generated@@278 $generated@@619))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@145 ($generated@@414 ($generated@@549 $generated@@158) ($generated@@278 $generated@@619)) ($generated@@243 $generated@@227))) (=> ($generated@@145 ($generated@@414 ($generated@@549 $generated@@158) ($generated@@278 $generated@@619)) ($generated@@243 $generated@@227)) (=> (and (= $generated@@621 ($generated@@414 ($generated@@549 $generated@@158) ($generated@@278 $generated@@619))) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@83) (=> (and ($generated@@0 ($generated@@87 $generated@@620 ($generated@@278 $generated@@628))) (not ($generated@@0 ($generated@@87 $generated@@621 ($generated@@278 $generated@@628))))) (and (not (= $generated@@628 $generated@@139)) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@618 $generated@@628) $generated@@60))))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@618 $generated@@628) $generated@@60))
)))))))))))
(let (($generated@@629  (=> (and (and ($generated@@257 $generated@@618) ($generated@@622 $generated@@618)) (and ($generated@@145 $generated@@619 $generated@@230) ($generated@@80 $generated@@619 $generated@@230 $generated@@618))) (=> (and (and (and ($generated@@145 $generated@@623 $generated@@230) ($generated@@80 $generated@@623 $generated@@230 $generated@@618)) (and ($generated@@145 $generated@@624 ($generated@@243 $generated@@227)) ($generated@@80 $generated@@624 ($generated@@243 $generated@@227) $generated@@618))) (and (and ($generated@@145 $generated@@625 ($generated@@243 $generated@@227)) ($generated@@80 $generated@@625 ($generated@@243 $generated@@227) $generated@@618)) (and (= 1 $generated@@626) (= (ControlFlow 0 5) 2)))) $generated@@627))))
$generated@@629)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@500 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@555 (T@T) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@610 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@148 $generated@@154)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@148 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@155)))
(= (type ($generated@@149 $generated@@155)) $generated@@156))
 :pattern ( ($generated@@149 $generated@@155))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@152 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@152 $generated@@157))
))) (= (type $generated@@153) $generated@@70)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) ($generated@@82 $generated@@150 $generated@@4)) (or ($generated@@151 ($generated@@149 $generated@@158)) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@158 ($generated@@152 $generated@@153))))) (= ($generated@@148 ($generated@@149 $generated@@158)) ($generated@@149 $generated@@158)))
 :weight 3
 :pattern ( ($generated@@148 ($generated@@149 $generated@@158)))
))))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@159) ($generated@@82 $generated@@150 $generated@@4)) (or ($generated@@151 $generated@@159) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@159 ($generated@@152 $generated@@153))))) ($generated@@145 ($generated@@148 $generated@@159) ($generated@@152 $generated@@153)))
 :pattern ( ($generated@@148 $generated@@159))
))))
(assert  (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@70) (= (type $generated@@166) $generated@@70)) (= (type $generated@@167) $generated@@162)) ($generated@@145 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@145 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@150)
 :pattern ( ($generated@@169 $generated@@171))
)) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@150)
 :pattern ( ($generated@@170 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@162) (= (type $generated@@174) $generated@@162)) true) (= ($generated@@168 $generated@@173 $generated@@174)  (and (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (= ($generated@@170 $generated@@173) ($generated@@170 $generated@@174)))))
 :pattern ( ($generated@@168 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@145 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@145 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@70)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@83) (= ($generated@@145 $generated@@182 $generated@@142)  (or (= $generated@@182 $generated@@139) (= ($generated@@180 $generated@@182) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@182 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@83 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@73 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@234) ($generated@@72 $generated@@4))) (= (type $generated@@236) $generated@@83)) (= (type $generated@@237) ($generated@@72 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@153 $generated@@240) ($generated@@80 $generated@@239 $generated@@138 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@153 $generated@@240))
)))
(assert (= (type $generated@@241) $generated@@70))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (= (type $generated@@243) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@242 $generated@@241 $generated@@243) ($generated@@80 $generated@@242 $generated@@142 $generated@@243)))
 :pattern ( ($generated@@80 $generated@@242 $generated@@241 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@162)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@150)) (= (type $generated@@251) $generated@@150)) (= ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@161 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@161 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@162) (= (type $generated@@253) $generated@@162)) (= ($generated@@168 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@168 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@145 $generated@@254 ($generated@@152 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@150) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@245 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@145 $generated@@254 ($generated@@152 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@150) ($generated@@0 ($generated@@87 $generated@@259 $generated@@261))) ($generated@@245 $generated@@261 $generated@@260))
 :pattern ( ($generated@@87 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@149 $generated@@262) $generated@@262)
 :pattern ( ($generated@@149 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@150)) (= (type $generated@@268) $generated@@150)) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@269)) (= ($generated@@80 ($generated@@244 $generated@@267 $generated@@268) ($generated@@161 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@267 $generated@@268) ($generated@@161 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@162) (= ($generated@@160 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@162) ($generated@@160 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@150) (= (type $generated@@275) $generated@@150)) (= $generated@@273 ($generated@@244 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@160 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@150)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@82 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@85 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@82 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@87 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@82 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@85 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@82 $generated@@332 $generated@@2)) (= ($generated@@176 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@87 $generated@@331 $generated@@333))) (<= ($generated ($generated@@87 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@87 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@176 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@150) ($generated@@245 $generated@@337 $generated@@138)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@334 $generated@@83 $generated@@337) $generated@@138)))
 :pattern ( ($generated@@245 $generated@@337 $generated@@138))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@150) ($generated@@245 $generated@@338 $generated@@153)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@334 $generated@@83 $generated@@338) $generated@@153)))
 :pattern ( ($generated@@245 $generated@@338 $generated@@153))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@150) ($generated@@245 $generated@@339 $generated@@142)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@339)) $generated@@339) ($generated@@145 ($generated@@334 $generated@@83 $generated@@339) $generated@@142)))
 :pattern ( ($generated@@245 $generated@@339 $generated@@142))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@150) ($generated@@245 $generated@@340 $generated@@241)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@334 $generated@@83 $generated@@340) $generated@@241)))
 :pattern ( ($generated@@245 $generated@@340 $generated@@241))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@83) (= ($generated@@145 $generated@@341 $generated@@153)  (and ($generated@@145 $generated@@341 $generated@@138) (not (= $generated@@341 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@341 $generated@@153))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@83) (= ($generated@@145 $generated@@342 $generated@@241)  (and ($generated@@145 $generated@@342 $generated@@142) (not (= $generated@@342 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@342 $generated@@241))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@299 (type $generated@@343))))
(let (($generated@@345 ($generated@@298 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@297 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@296 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@295 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@299 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@82 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@299 (type $generated@@350))))
(let (($generated@@352 ($generated@@298 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@297 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@296 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@87 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(let (($generated@@356 ($generated@@316 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@315 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@314 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@313 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(let (($generated@@363 ($generated@@316 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@315 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@314 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@366) $generated@@70)) (= ($generated@@145 $generated@@365 ($generated@@175 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@365 $generated@@367)))) ($generated@@245 $generated@@367 $generated@@366))
 :pattern ( ($generated@@87 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@145 $generated@@365 ($generated@@175 $generated@@366)))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@369) $generated@@70)) (= (type $generated@@370) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@368 ($generated@@152 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@150) ($generated@@0 ($generated@@87 $generated@@368 $generated@@371))) ($generated@@264 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@87 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@80 $generated@@368 ($generated@@152 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@372) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@373) $generated@@70)) (= (type $generated@@374) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@372 ($generated@@257 $generated@@373) $generated@@374) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@150) ($generated@@0 ($generated@@87 $generated@@372 $generated@@375))) ($generated@@264 $generated@@375 $generated@@373 $generated@@374))
 :pattern ( ($generated@@87 $generated@@372 $generated@@375))
))))
 :pattern ( ($generated@@80 $generated@@372 ($generated@@257 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 (type $generated@@376)))
(= ($generated ($generated@@87 ($generated@@290 $generated@@377) $generated@@376)) 0))
 :pattern ( (let (($generated@@377 (type $generated@@376)))
($generated@@87 ($generated@@290 $generated@@377) $generated@@376)))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@299 (type $generated@@381))))
(let (($generated@@383 ($generated@@298 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@82 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@385) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@384) ($generated@@169 ($generated@@334 $generated@@162 $generated@@385)))) (= ($generated@@87 ($generated@@379 $generated@@384) ($generated@@169 ($generated@@334 $generated@@162 $generated@@385))) ($generated@@170 ($generated@@334 $generated@@162 $generated@@385))))))
 :pattern ( ($generated@@87 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@317 (type $generated@@389))))
(let (($generated@@391 ($generated@@316 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@392) ($generated@@169 ($generated@@334 $generated@@162 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@169 ($generated@@334 $generated@@162 $generated@@393))) ($generated@@170 ($generated@@334 $generated@@162 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@298 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@297 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@87 ($generated@@347 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@87 ($generated@@379 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@394) $generated@@398))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@87 ($generated@@347 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@316 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@315 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@87 ($generated@@358 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@87 ($generated@@387 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@399) $generated@@403))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@405 $generated@@406)) $generated@@70)
 :pattern ( ($generated@@404 $generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@407) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@408) $generated@@70)) (= (type $generated@@409) $generated@@70)) (= (type $generated@@410) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410) (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@407) $generated@@411))) (and ($generated@@264 ($generated@@87 ($generated@@379 $generated@@407) $generated@@411) $generated@@409 $generated@@410) ($generated@@264 $generated@@411 $generated@@408 $generated@@410)))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@407) $generated@@411))
))))
 :pattern ( ($generated@@80 $generated@@407 ($generated@@404 $generated@@408 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= (type ($generated@@420 $generated@@421 $generated@@422)) ($generated@@82 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@425)))
 (=> (and (and (= (type $generated@@424) ($generated@@82 $generated@@427 $generated@@4)) (= (type $generated@@426) $generated@@427)) ($generated@@0 ($generated@@87 $generated@@424 $generated@@426))) ($generated@@0 ($generated@@87 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))))
 :pattern ( ($generated@@420 $generated@@424 $generated@@425) ($generated@@87 $generated@@424 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@429)))
 (=> (and (= (type $generated@@428) ($generated@@82 $generated@@431 $generated@@4)) (= (type $generated@@430) $generated@@431)) (= ($generated@@0 ($generated@@87 ($generated@@420 $generated@@428 $generated@@429) $generated@@430))  (or (= $generated@@430 $generated@@429) ($generated@@0 ($generated@@87 $generated@@428 $generated@@430))))))
 :pattern ( ($generated@@87 ($generated@@420 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@82 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@317 (type $generated@@434))))
(let (($generated@@436 ($generated@@316 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@315 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@314 $generated@@436 $generated@@435)) (= ($generated@@313 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@313 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@317 (type $generated@@437))))
(let (($generated@@439 ($generated@@316 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@315 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@314 $generated@@439 $generated@@438)) (= ($generated@@358 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@358 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@317 (type $generated@@440))))
(let (($generated@@442 ($generated@@316 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@315 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@314 $generated@@442 $generated@@441)) (= ($generated@@386 $generated@@440) ($generated@@432 $generated@@150))))))
 :pattern ( ($generated@@386 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@299 (type $generated@@443))))
(let (($generated@@445 ($generated@@298 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@297 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@296 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@150) (= (type $generated@@447) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@378 $generated@@443) ($generated@@284 ($generated@@244 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@378 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@317 (type $generated@@448))))
(let (($generated@@450 ($generated@@316 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@315 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@314 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@150) (= (type $generated@@452) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@448) ($generated@@284 ($generated@@244 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@386 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@150) ($generated@@245 $generated@@453 $generated@@46)) (and (= ($generated@@284 ($generated@@334 $generated@@2 $generated@@453)) $generated@@453) ($generated@@145 ($generated@@334 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@150) ($generated@@245 $generated@@454 $generated@@47)) (and (= ($generated@@284 ($generated@@334 $generated@@3 $generated@@454)) $generated@@454) ($generated@@145 ($generated@@334 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@150) ($generated@@245 $generated@@455 $generated@@44)) (and (= ($generated@@284 ($generated@@334 $generated@@4 $generated@@455)) $generated@@455) ($generated@@145 ($generated@@334 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) ($generated@@245 $generated@@457 $generated@@45)) (and (= ($generated@@284 ($generated@@334 $generated@@456 $generated@@457)) $generated@@457) ($generated@@145 ($generated@@334 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@70) (= ($generated@@245 ($generated@@284 $generated@@458) $generated@@459) ($generated@@145 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@245 ($generated@@284 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@85 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@82 $generated@@461 $generated@@2)) (<= 0 ($generated@@289 $generated@@460))))
 :pattern ( ($generated@@289 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@279 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@278 $generated@@463)) (<= 0 ($generated@@277 $generated@@462))))
 :pattern ( ($generated@@277 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@70)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@70) (= (type $generated@@467) $generated@@70)) (= ($generated@@464 ($generated@@404 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@404 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@70)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@70) (= (type $generated@@471) $generated@@70)) (= ($generated@@468 ($generated@@404 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@404 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@78 ($generated@@404 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@404 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@70)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@70) (= (type $generated@@477) $generated@@70)) (= ($generated@@474 ($generated@@412 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@412 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@412 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@412 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@412 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@150) (= (type $generated@@485) $generated@@150)) (= ($generated@@270 ($generated@@244 $generated@@484 $generated@@485)) $generated@@63))
 :pattern ( ($generated@@244 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@161 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@161 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@161 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@161 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@150) (= (type $generated@@495) $generated@@150)) (= ($generated@@169 ($generated@@244 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@244 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) (= (type $generated@@497) $generated@@150)) (= ($generated@@170 ($generated@@244 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@244 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@83) ($generated@@145 $generated@@498 $generated@@138))
 :pattern ( ($generated@@145 $generated@@498 $generated@@138))
)))
(assert  (and (forall (($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@501))
)) (forall (($generated@@502 T@U) ($generated@@503 Int) ) (! (let (($generated@@504 ($generated@@279 (type $generated@@502))))
(= (type ($generated@@500 $generated@@502 $generated@@503)) $generated@@504))
 :pattern ( ($generated@@500 $generated@@502 $generated@@503))
))))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@278 $generated@@150)) (= (type $generated@@506) $generated@@70)) (= (type $generated@@507) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507) (forall (($generated@@508 Int) ) (!  (=> (and (<= 0 $generated@@508) (< $generated@@508 ($generated@@277 $generated@@505))) ($generated@@264 ($generated@@500 $generated@@505 $generated@@508) $generated@@506 $generated@@507))
 :pattern ( ($generated@@500 $generated@@505 $generated@@508))
))))
 :pattern ( ($generated@@80 $generated@@505 ($generated@@499 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (! (let (($generated@@511 (type $generated@@510)))
 (=> (= (type $generated@@509) ($generated@@82 $generated@@511 $generated@@4)) ($generated@@0 ($generated@@87 ($generated@@420 $generated@@509 $generated@@510) $generated@@510))))
 :pattern ( ($generated@@420 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@81 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@81 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@70)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@70) (= ($generated@@514 ($generated@@152 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@152 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@70) (= ($generated@@78 ($generated@@152 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@152 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@518 ($generated@@257 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@257 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@522 ($generated@@175 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@175 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@78 ($generated@@175 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@526 ($generated@@499 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@499 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@78 ($generated@@499 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@499 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@334 $generated@@531 ($generated@@284 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@284 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@533) $generated@@70)) (= (type $generated@@534) $generated@@70)) (= ($generated@@145 $generated@@532 ($generated@@404 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@532) $generated@@535))) (and ($generated@@245 ($generated@@87 ($generated@@379 $generated@@532) $generated@@535) $generated@@534) ($generated@@245 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@532) $generated@@535))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@145 $generated@@532 ($generated@@404 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) (= ($generated@@145 $generated@@536 ($generated@@412 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@536) $generated@@539))) (and ($generated@@245 ($generated@@87 ($generated@@387 $generated@@536) $generated@@539) $generated@@538) ($generated@@245 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@536) $generated@@539))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@145 $generated@@536 ($generated@@412 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@150)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@244 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@244 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@150)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@244 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@244 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) ($generated@@245 $generated@@546 ($generated@@404 $generated@@547 $generated@@548))) (and (= ($generated@@284 ($generated@@334 ($generated@@297 $generated@@150 $generated@@150) $generated@@546)) $generated@@546) ($generated@@145 ($generated@@334 ($generated@@297 $generated@@150 $generated@@150) $generated@@546) ($generated@@404 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@245 $generated@@546 ($generated@@404 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@150) (= (type $generated@@550) $generated@@70)) (= (type $generated@@551) $generated@@70)) ($generated@@245 $generated@@549 ($generated@@412 $generated@@550 $generated@@551))) (and (= ($generated@@284 ($generated@@334 ($generated@@315 $generated@@150 $generated@@150) $generated@@549)) $generated@@549) ($generated@@145 ($generated@@334 ($generated@@315 $generated@@150 $generated@@150) $generated@@549) ($generated@@412 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@245 $generated@@549 ($generated@@412 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@70) (= (type $generated@@553) $generated@@70)) (= (type $generated@@554) $generated@@150)) ($generated@@245 $generated@@554 ($generated@@161 $generated@@552 $generated@@553))) (and (= ($generated@@284 ($generated@@334 $generated@@162 $generated@@554)) $generated@@554) ($generated@@145 ($generated@@334 $generated@@162 $generated@@554) ($generated@@161 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@245 $generated@@554 ($generated@@161 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@556 T@T) ) (! (= (type ($generated@@555 $generated@@556)) ($generated@@82 $generated@@556 $generated@@4))
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@87 ($generated@@555 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@87 ($generated@@555 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@87 ($generated@@432 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@87 ($generated@@432 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@75)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (and (= ($generated@@78 ($generated@@161 $generated@@563 $generated@@564)) $generated@@64) (= ($generated@@561 ($generated@@161 $generated@@563 $generated@@564)) $generated@@68)))
 :pattern ( ($generated@@161 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@162) (= ($generated@@540 ($generated@@284 $generated@@565)) ($generated@@541 $generated@@565)))
 :pattern ( ($generated@@540 ($generated@@284 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@150) ($generated@@245 $generated@@566 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@334 $generated@@2 $generated@@566)) $generated@@566) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@566) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@81 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@70)) ($generated@@245 $generated@@567 ($generated@@152 $generated@@568))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@567)) $generated@@567) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@567) ($generated@@152 $generated@@568))))
 :pattern ( ($generated@@245 $generated@@567 ($generated@@152 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@70)) ($generated@@245 $generated@@569 ($generated@@257 $generated@@570))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@569)) $generated@@569) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@569) ($generated@@257 $generated@@570))))
 :pattern ( ($generated@@245 $generated@@569 ($generated@@257 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@150) (= (type $generated@@572) $generated@@70)) ($generated@@245 $generated@@571 ($generated@@175 $generated@@572))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@150 $generated@@2) $generated@@571)) $generated@@571) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@2) $generated@@571) ($generated@@175 $generated@@572))))
 :pattern ( ($generated@@245 $generated@@571 ($generated@@175 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@70)) ($generated@@245 $generated@@573 ($generated@@499 $generated@@574))) (and (= ($generated@@284 ($generated@@334 ($generated@@278 $generated@@150) $generated@@573)) $generated@@573) ($generated@@145 ($generated@@334 ($generated@@278 $generated@@150) $generated@@573) ($generated@@499 $generated@@574))))
 :pattern ( ($generated@@245 $generated@@573 ($generated@@499 $generated@@574)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@561 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@153) $generated@@62))
(assert (= ($generated@@561 $generated@@153) $generated@@67))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@561 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@241) $generated@@66))
(assert (= ($generated@@561 $generated@@241) $generated@@69))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@576) $generated@@70)) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@575 ($generated@@175 $generated@@576) $generated@@577) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@575 $generated@@578)))) ($generated@@264 $generated@@578 $generated@@576 $generated@@577))
 :pattern ( ($generated@@87 $generated@@575 $generated@@578))
))))
 :pattern ( ($generated@@80 $generated@@575 ($generated@@175 $generated@@576) $generated@@577))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@82 $generated@@150 $generated@@4)) (or ($generated@@151 $generated@@579) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@579 ($generated@@152 $generated@@153))))) (= ($generated@@148 $generated@@579) $generated@@579))
 :pattern ( ($generated@@148 $generated@@579))
))))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@162) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@582) (and ($generated@@160 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@70) ($generated@@80 $generated@@580 ($generated@@161 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@80 $generated@@580 ($generated@@161 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@264 ($generated@@169 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@264 ($generated@@169 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@162) (= (type $generated@@585) $generated@@70)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@586) (and ($generated@@160 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@70) ($generated@@80 $generated@@584 ($generated@@161 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@80 $generated@@584 ($generated@@161 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@264 ($generated@@170 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@150) (= (type $generated@@589) $generated@@150)) (= ($generated@@244 ($generated@@149 $generated@@588) ($generated@@149 $generated@@589)) ($generated@@149 ($generated@@244 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@244 ($generated@@149 $generated@@588) ($generated@@149 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (= ($generated@@284 ($generated@@149 $generated@@590)) ($generated@@149 ($generated@@284 $generated@@590)))
 :pattern ( ($generated@@284 ($generated@@149 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 ($generated@@279 (type $generated@@591))))
 (=> (and (= (type $generated@@591) ($generated@@278 $generated@@592)) (= ($generated@@277 $generated@@591) 0)) (= $generated@@591 ($generated@@276 $generated@@592))))
 :pattern ( ($generated@@277 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@594)))
 (=> (and (and (= (type $generated@@593) ($generated@@82 $generated@@596 $generated@@2)) (= (type $generated@@595) $generated@@2)) (<= 0 ($generated $generated@@595))) (= ($generated@@289 ($generated@@88 $generated@@593 $generated@@594 $generated@@595)) (+ (- ($generated@@289 $generated@@593) ($generated ($generated@@87 $generated@@593 $generated@@594))) ($generated $generated@@595)))))
 :pattern ( ($generated@@289 ($generated@@88 $generated@@593 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@2)) ($generated@@80 $generated@@598 $generated@@46 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@46 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@3)) ($generated@@80 $generated@@600 $generated@@47 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@47 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@4)) ($generated@@80 $generated@@602 $generated@@44 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@44 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@456)) ($generated@@80 $generated@@604 $generated@@45 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@45 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@606) $generated@@150)) ($generated@@80 $generated@@606 $generated@@48 $generated@@605))
 :pattern ( ($generated@@80 $generated@@606 $generated@@48 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@278 $generated@@150)) (= (type $generated@@608) $generated@@70)) (= ($generated@@145 $generated@@607 ($generated@@499 $generated@@608)) (forall (($generated@@609 Int) ) (!  (=> (and (<= 0 $generated@@609) (< $generated@@609 ($generated@@277 $generated@@607))) ($generated@@245 ($generated@@500 $generated@@607 $generated@@609) $generated@@608))
 :pattern ( ($generated@@500 $generated@@607 $generated@@609))
))))
 :pattern ( ($generated@@145 $generated@@607 ($generated@@499 $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 Int) ) (!  (=> (= (type $generated@@611) ($generated@@278 $generated@@150)) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@277 $generated@@611))) (< ($generated@@541 ($generated@@334 $generated@@162 ($generated@@500 $generated@@611 $generated@@612))) ($generated@@610 $generated@@611))))
 :pattern ( ($generated@@541 ($generated@@334 $generated@@162 ($generated@@500 $generated@@611 $generated@@612))))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) $generated@@70)) ($generated@@145 $generated@@613 ($generated@@404 $generated@@614 $generated@@615))) (and (and ($generated@@145 ($generated@@295 $generated@@613) ($generated@@152 $generated@@614)) ($generated@@145 ($generated@@347 $generated@@613) ($generated@@152 $generated@@615))) ($generated@@145 ($generated@@378 $generated@@613) ($generated@@152 ($generated@@161 $generated@@614 $generated@@615)))))
 :pattern ( ($generated@@145 $generated@@613 ($generated@@404 $generated@@614 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@617) $generated@@70)) (= (type $generated@@618) $generated@@70)) ($generated@@145 $generated@@616 ($generated@@412 $generated@@617 $generated@@618))) (and (and ($generated@@145 ($generated@@313 $generated@@616) ($generated@@257 $generated@@617)) ($generated@@145 ($generated@@358 $generated@@616) ($generated@@257 $generated@@618))) ($generated@@145 ($generated@@386 $generated@@616) ($generated@@257 ($generated@@161 $generated@@617 $generated@@618)))))
 :pattern ( ($generated@@145 $generated@@616 ($generated@@412 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@2) ($generated@@145 $generated@@619 $generated@@46))
 :pattern ( ($generated@@145 $generated@@619 $generated@@46))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@3) ($generated@@145 $generated@@620 $generated@@47))
 :pattern ( ($generated@@145 $generated@@620 $generated@@47))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@4) ($generated@@145 $generated@@621 $generated@@44))
 :pattern ( ($generated@@145 $generated@@621 $generated@@44))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@456) ($generated@@145 $generated@@622 $generated@@45))
 :pattern ( ($generated@@145 $generated@@622 $generated@@45))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@150) ($generated@@145 $generated@@623 $generated@@48))
 :pattern ( ($generated@@145 $generated@@623 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 (T@U) Bool)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@624) ($generated@@185 $generated@@83 $generated@@4)) (= (type $generated@@625) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@626) $generated@@83)) (= (type $generated@@627) ($generated@@82 $generated@@150 $generated@@4))) (= (type $generated@@628) ($generated@@82 $generated@@150 $generated@@4))) (= (type $generated@@630) $generated@@83)) (= (type $generated@@631) ($generated@@82 $generated@@150 $generated@@4))) (= (type $generated@@632) ($generated@@82 $generated@@150 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@633  (=> (= $generated@@624 ($generated@@184 $generated@@139 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@145 ($generated@@420 ($generated@@555 $generated@@150) ($generated@@284 $generated@@626)) ($generated@@152 $generated@@153))) (=> ($generated@@145 ($generated@@420 ($generated@@555 $generated@@150) ($generated@@284 $generated@@626)) ($generated@@152 $generated@@153)) (=> (= $generated@@627 ($generated@@420 ($generated@@555 $generated@@150) ($generated@@284 $generated@@626))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@145 ($generated@@420 ($generated@@555 $generated@@150) ($generated@@284 $generated@@626)) ($generated@@152 $generated@@153))) (=> ($generated@@145 ($generated@@420 ($generated@@555 $generated@@150) ($generated@@284 $generated@@626)) ($generated@@152 $generated@@153)) (=> (and (= $generated@@628 ($generated@@420 ($generated@@555 $generated@@150) ($generated@@284 $generated@@626))) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@83) (=> (and ($generated@@0 ($generated@@87 ($generated@@148 $generated@@627) ($generated@@284 $generated@@634))) (not ($generated@@0 ($generated@@87 ($generated@@148 $generated@@628) ($generated@@284 $generated@@634))))) (and (not (= $generated@@634 $generated@@139)) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@625 $generated@@634) $generated@@60))))))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@625 $generated@@634) $generated@@60))
)))))))))))
(let (($generated@@635  (=> (and (and ($generated@@263 $generated@@625) ($generated@@629 $generated@@625)) (and ($generated@@145 $generated@@626 $generated@@241) ($generated@@80 $generated@@626 $generated@@241 $generated@@625))) (=> (and (and (and ($generated@@145 $generated@@630 $generated@@241) ($generated@@80 $generated@@630 $generated@@241 $generated@@625)) (and ($generated@@145 $generated@@631 ($generated@@152 $generated@@153)) ($generated@@80 $generated@@631 ($generated@@152 $generated@@153) $generated@@625))) (and (and ($generated@@145 $generated@@632 ($generated@@152 $generated@@153)) ($generated@@80 $generated@@632 ($generated@@152 $generated@@153) $generated@@625)) (and (= 2 $generated@@147) (= (ControlFlow 0 5) 2)))) $generated@@633))))
$generated@@635)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@277 (T@U) Int)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@T T@T) T@U)
(declare-fun $generated@@297 (T@T T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@334 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@368 (T@U T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@553 (T@U) Int)
(declare-fun $generated@@567 (T@T) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@622 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@150) 14) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@148 $generated@@154)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@148 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (let (($generated@@156 (type $generated@@155)))
(= (type ($generated@@149 $generated@@155)) $generated@@156))
 :pattern ( ($generated@@149 $generated@@155))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@152 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@152 $generated@@157))
))) (= (type $generated@@153) $generated@@70)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@158 T@U) ) (!  (=> (and (= (type $generated@@158) ($generated@@82 $generated@@150 $generated@@4)) (or ($generated@@151 ($generated@@149 $generated@@158)) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@158 ($generated@@152 $generated@@153))))) (= ($generated@@148 ($generated@@149 $generated@@158)) ($generated@@149 $generated@@158)))
 :weight 3
 :pattern ( ($generated@@148 ($generated@@149 $generated@@158)))
))))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@159) ($generated@@82 $generated@@150 $generated@@4)) (or ($generated@@151 $generated@@159) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@159 ($generated@@152 $generated@@153))))) ($generated@@145 ($generated@@148 $generated@@159) ($generated@@152 $generated@@153)))
 :pattern ( ($generated@@148 $generated@@159))
))))
(assert  (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@161 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@70) (= (type $generated@@166) $generated@@70)) (= (type $generated@@167) $generated@@162)) ($generated@@145 $generated@@167 ($generated@@161 $generated@@165 $generated@@166))) ($generated@@160 $generated@@167))
 :pattern ( ($generated@@160 $generated@@167) ($generated@@145 $generated@@167 ($generated@@161 $generated@@165 $generated@@166)))
)))
(assert  (and (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@150)
 :pattern ( ($generated@@169 $generated@@171))
)) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@150)
 :pattern ( ($generated@@170 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@162) (= (type $generated@@174) $generated@@162)) true) (= ($generated@@168 $generated@@173 $generated@@174)  (and (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (= ($generated@@170 $generated@@173) ($generated@@170 $generated@@174)))))
 :pattern ( ($generated@@168 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@145 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@145 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@70)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@83) (= ($generated@@145 $generated@@182 $generated@@142)  (or (= $generated@@182 $generated@@139) (= ($generated@@180 $generated@@182) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@182 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@83 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@73 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@234) ($generated@@72 $generated@@4))) (= (type $generated@@236) $generated@@83)) (= (type $generated@@237) ($generated@@72 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@153 $generated@@240) ($generated@@80 $generated@@239 $generated@@138 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@153 $generated@@240))
)))
(assert (= (type $generated@@241) $generated@@70))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (= (type $generated@@243) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@242 $generated@@241 $generated@@243) ($generated@@80 $generated@@242 $generated@@142 $generated@@243)))
 :pattern ( ($generated@@80 $generated@@242 $generated@@241 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@162)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@150)) (= (type $generated@@251) $generated@@150)) (= ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@161 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@145 ($generated@@244 $generated@@250 $generated@@251) ($generated@@161 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@162) (= (type $generated@@253) $generated@@162)) (= ($generated@@168 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@168 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@255) $generated@@70)) (= ($generated@@145 $generated@@254 ($generated@@152 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@150) ($generated@@0 ($generated@@87 $generated@@254 $generated@@256))) ($generated@@245 $generated@@256 $generated@@255))
 :pattern ( ($generated@@87 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@145 $generated@@254 ($generated@@152 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@70)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@260) $generated@@70)) (= ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@150) ($generated@@0 ($generated@@87 $generated@@259 $generated@@261))) ($generated@@245 $generated@@261 $generated@@260))
 :pattern ( ($generated@@87 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@145 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@149 $generated@@262) $generated@@262)
 :pattern ( ($generated@@149 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@70) (= (type $generated@@266) $generated@@70)) (= (type $generated@@267) $generated@@150)) (= (type $generated@@268) $generated@@150)) (= (type $generated@@269) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@263 $generated@@269)) (= ($generated@@80 ($generated@@244 $generated@@267 $generated@@268) ($generated@@161 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@267 $generated@@268) ($generated@@161 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@74)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@162) (= ($generated@@160 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@162) ($generated@@160 $generated@@273)) (exists (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (and (and (= (type $generated@@274) $generated@@150) (= (type $generated@@275) $generated@@150)) (= $generated@@273 ($generated@@244 $generated@@274 $generated@@275)))
 :no-pattern (type $generated@@274)
 :no-pattern (type $generated@@275)
 :no-pattern ($generated $generated@@274)
 :no-pattern ($generated@@0 $generated@@274)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
)))
 :pattern ( ($generated@@160 $generated@@273))
)))
(assert  (and (and (forall (($generated@@280 T@T) ) (= ($generated@@1 ($generated@@278 $generated@@280)) 17)) (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
))) (forall (($generated@@282 T@T) ) (! (= (type ($generated@@276 $generated@@282)) ($generated@@278 $generated@@282))
 :pattern ( ($generated@@276 $generated@@282))
))))
(assert (forall (($generated@@283 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@283)) 0)
 :pattern ( ($generated@@276 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@150)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@70) (= (type $generated@@288) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@80 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@264 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@82 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@85 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@82 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@87 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (and (and (and (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@300 $generated@@301)) 18)) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@302 $generated@@303)) $generated@@302)
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@297 $generated@@304 $generated@@305)) $generated@@305)
 :pattern ( ($generated@@297 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@298 (type $generated@@306))))
(= (type ($generated@@295 $generated@@306)) ($generated@@82 $generated@@307 $generated@@4)))
 :pattern ( ($generated@@295 $generated@@306))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= (type ($generated@@296 $generated@@308 $generated@@309)) ($generated@@297 $generated@@308 $generated@@309))
 :pattern ( ($generated@@296 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@T) ) (! (let (($generated@@312 (type $generated@@310)))
 (not ($generated@@0 ($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310))))
 :pattern ( (let (($generated@@312 (type $generated@@310)))
($generated@@87 ($generated@@295 ($generated@@296 $generated@@312 $generated@@311)) $generated@@310)))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 19)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@82 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@87 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@85 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@82 $generated@@332 $generated@@2)) (= ($generated@@176 $generated@@331) (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@332) (and (<= 0 ($generated ($generated@@87 $generated@@331 $generated@@333))) (<= ($generated ($generated@@87 $generated@@331 $generated@@333)) ($generated@@289 $generated@@331))))
 :pattern ( ($generated@@87 $generated@@331 $generated@@333))
)))))
 :pattern ( ($generated@@176 $generated@@331))
)))
(assert (forall (($generated@@335 T@T) ($generated@@336 T@U) ) (! (= (type ($generated@@334 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@150) ($generated@@245 $generated@@337 $generated@@138)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@337)) $generated@@337) ($generated@@145 ($generated@@334 $generated@@83 $generated@@337) $generated@@138)))
 :pattern ( ($generated@@245 $generated@@337 $generated@@138))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@150) ($generated@@245 $generated@@338 $generated@@153)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@338)) $generated@@338) ($generated@@145 ($generated@@334 $generated@@83 $generated@@338) $generated@@153)))
 :pattern ( ($generated@@245 $generated@@338 $generated@@153))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@150) ($generated@@245 $generated@@339 $generated@@142)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@339)) $generated@@339) ($generated@@145 ($generated@@334 $generated@@83 $generated@@339) $generated@@142)))
 :pattern ( ($generated@@245 $generated@@339 $generated@@142))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@150) ($generated@@245 $generated@@340 $generated@@241)) (and (= ($generated@@284 ($generated@@334 $generated@@83 $generated@@340)) $generated@@340) ($generated@@145 ($generated@@334 $generated@@83 $generated@@340) $generated@@241)))
 :pattern ( ($generated@@245 $generated@@340 $generated@@241))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@83) (= ($generated@@145 $generated@@341 $generated@@153)  (and ($generated@@145 $generated@@341 $generated@@138) (not (= $generated@@341 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@341 $generated@@153))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@83) (= ($generated@@145 $generated@@342 $generated@@241)  (and ($generated@@145 $generated@@342 $generated@@142) (not (= $generated@@342 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@342 $generated@@241))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@299 (type $generated@@343))))
(let (($generated@@345 ($generated@@298 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@297 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@296 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@295 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@299 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@82 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@299 (type $generated@@350))))
(let (($generated@@352 ($generated@@298 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@297 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@296 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@87 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@317 (type $generated@@354))))
(let (($generated@@356 ($generated@@316 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@315 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@314 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@356) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@313 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@317 (type $generated@@359))))
(= (type ($generated@@358 $generated@@359)) ($generated@@82 $generated@@360 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@317 (type $generated@@361))))
(let (($generated@@363 ($generated@@316 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@315 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@314 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@358 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@358 $generated@@361))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@366) $generated@@70)) (= ($generated@@145 $generated@@365 ($generated@@175 $generated@@366)) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@365 $generated@@367)))) ($generated@@245 $generated@@367 $generated@@366))
 :pattern ( ($generated@@87 $generated@@365 $generated@@367))
))))
 :pattern ( ($generated@@145 $generated@@365 ($generated@@175 $generated@@366)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@85 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369 $generated@@370)) ($generated@@82 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
 (=> (and (= (type $generated@@372) ($generated@@82 $generated@@375 $generated@@4)) (= (type $generated@@373) ($generated@@82 $generated@@375 $generated@@4))) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@87 $generated@@372 $generated@@374)) (not ($generated@@0 ($generated@@87 $generated@@373 $generated@@374)))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@372 $generated@@373) $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@377) $generated@@70)) (= (type $generated@@378) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@376 ($generated@@152 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@150) ($generated@@0 ($generated@@87 $generated@@376 $generated@@379))) ($generated@@264 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@87 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@80 $generated@@376 ($generated@@152 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@82 $generated@@150 $generated@@4)) (= (type $generated@@381) $generated@@70)) (= (type $generated@@382) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@380 ($generated@@257 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@150) ($generated@@0 ($generated@@87 $generated@@380 $generated@@383))) ($generated@@264 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@87 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@80 $generated@@380 ($generated@@257 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@87 ($generated@@290 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@87 ($generated@@290 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@299 (type $generated@@389))))
(let (($generated@@391 ($generated@@298 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@82 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@392) ($generated@@169 ($generated@@334 $generated@@162 $generated@@393)))) (= ($generated@@87 ($generated@@387 $generated@@392) ($generated@@169 ($generated@@334 $generated@@162 $generated@@393))) ($generated@@170 ($generated@@334 $generated@@162 $generated@@393))))))
 :pattern ( ($generated@@87 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@82 $generated@@150 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@317 (type $generated@@397))))
(let (($generated@@399 ($generated@@316 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@150)) (= ($generated@@0 ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@400) ($generated@@169 ($generated@@334 $generated@@162 $generated@@401)))) (= ($generated@@87 ($generated@@395 $generated@@400) ($generated@@169 ($generated@@334 $generated@@162 $generated@@401))) ($generated@@170 ($generated@@334 $generated@@162 $generated@@401))))))
 :pattern ( ($generated@@87 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@298 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@297 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@87 ($generated@@347 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@87 ($generated@@295 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@402) $generated@@406))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@87 ($generated@@347 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@316 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@315 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@87 ($generated@@358 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@87 ($generated@@313 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@407) $generated@@411))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@87 ($generated@@358 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@70)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@416) $generated@@70)) (= (type $generated@@417) $generated@@70)) (= (type $generated@@418) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@415) $generated@@419))) (and ($generated@@264 ($generated@@87 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@264 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@80 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@70)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@424) $generated@@70)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@423) $generated@@427))) (and ($generated@@264 ($generated@@87 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@264 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@80 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(= (type ($generated@@428 $generated@@429 $generated@@430)) ($generated@@82 $generated@@431 $generated@@4)))
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@433)))
 (=> (and (and (= (type $generated@@432) ($generated@@82 $generated@@435 $generated@@4)) (= (type $generated@@434) $generated@@435)) ($generated@@0 ($generated@@87 $generated@@432 $generated@@434))) ($generated@@0 ($generated@@87 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))))
 :pattern ( ($generated@@428 $generated@@432 $generated@@433) ($generated@@87 $generated@@432 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@437)))
 (=> (and (= (type $generated@@436) ($generated@@82 $generated@@439 $generated@@4)) (= (type $generated@@438) $generated@@439)) (= ($generated@@0 ($generated@@87 ($generated@@428 $generated@@436 $generated@@437) $generated@@438))  (or (= $generated@@438 $generated@@437) ($generated@@0 ($generated@@87 $generated@@436 $generated@@438))))))
 :pattern ( ($generated@@87 ($generated@@428 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
 (=> (and (and (= (type $generated@@440) ($generated@@82 $generated@@443 $generated@@4)) (= (type $generated@@441) ($generated@@82 $generated@@443 $generated@@4))) ($generated@@0 ($generated@@87 $generated@@441 $generated@@442))) (not ($generated@@0 ($generated@@87 ($generated@@368 $generated@@440 $generated@@441) $generated@@442)))))
 :pattern ( ($generated@@368 $generated@@440 $generated@@441) ($generated@@87 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@82 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@317 (type $generated@@446))))
(let (($generated@@448 ($generated@@316 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@315 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@314 $generated@@448 $generated@@447)) (= ($generated@@313 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@313 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@317 (type $generated@@449))))
(let (($generated@@451 ($generated@@316 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@315 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@314 $generated@@451 $generated@@450)) (= ($generated@@358 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@358 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@317 (type $generated@@452))))
(let (($generated@@454 ($generated@@316 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@315 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@314 $generated@@454 $generated@@453)) (= ($generated@@394 $generated@@452) ($generated@@444 $generated@@150))))))
 :pattern ( ($generated@@394 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@299 (type $generated@@455))))
(let (($generated@@457 ($generated@@298 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@297 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@296 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@150) (= (type $generated@@459) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@386 $generated@@455) ($generated@@284 ($generated@@244 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@386 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@317 (type $generated@@460))))
(let (($generated@@462 ($generated@@316 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@315 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@314 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@150) (= (type $generated@@464) $generated@@150)) ($generated@@0 ($generated@@87 ($generated@@394 $generated@@460) ($generated@@284 ($generated@@244 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@394 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@150) ($generated@@245 $generated@@465 $generated@@46)) (and (= ($generated@@284 ($generated@@334 $generated@@2 $generated@@465)) $generated@@465) ($generated@@145 ($generated@@334 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@245 $generated@@466 $generated@@47)) (and (= ($generated@@284 ($generated@@334 $generated@@3 $generated@@466)) $generated@@466) ($generated@@145 ($generated@@334 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) ($generated@@245 $generated@@467 $generated@@44)) (and (= ($generated@@284 ($generated@@334 $generated@@4 $generated@@467)) $generated@@467) ($generated@@145 ($generated@@334 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 20))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) ($generated@@245 $generated@@469 $generated@@45)) (and (= ($generated@@284 ($generated@@334 $generated@@468 $generated@@469)) $generated@@469) ($generated@@145 ($generated@@334 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@70) (= ($generated@@245 ($generated@@284 $generated@@470) $generated@@471) ($generated@@145 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@245 ($generated@@284 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@85 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@82 $generated@@473 $generated@@2)) (<= 0 ($generated@@289 $generated@@472))))
 :pattern ( ($generated@@289 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@279 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@278 $generated@@475)) (<= 0 ($generated@@277 $generated@@474))))
 :pattern ( ($generated@@277 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@412 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@412 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@412 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@412 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@78 ($generated@@412 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@420 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@420 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@420 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@420 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@78 ($generated@@420 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@150) (= (type $generated@@497) $generated@@150)) (= ($generated@@270 ($generated@@244 $generated@@496 $generated@@497)) $generated@@63))
 :pattern ( ($generated@@244 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@161 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@161 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@70)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@502 ($generated@@161 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@161 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@150) (= (type $generated@@507) $generated@@150)) (= ($generated@@169 ($generated@@244 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@244 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) (= (type $generated@@509) $generated@@150)) (= ($generated@@170 ($generated@@244 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@244 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@83) ($generated@@145 $generated@@510 $generated@@138))
 :pattern ( ($generated@@145 $generated@@510 $generated@@138))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@279 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@278 $generated@@150)) (= (type $generated@@518) $generated@@70)) (= (type $generated@@519) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@277 $generated@@517))) ($generated@@264 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@80 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (=> (= (type $generated@@521) ($generated@@82 $generated@@523 $generated@@4)) ($generated@@0 ($generated@@87 ($generated@@428 $generated@@521 $generated@@522) $generated@@522))))
 :pattern ( ($generated@@428 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@81 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@81 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@526 ($generated@@152 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@152 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@78 ($generated@@152 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@152 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@257 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@257 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@78 ($generated@@257 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@70)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@70) (= ($generated@@534 ($generated@@175 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@78 ($generated@@175 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@70)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@70) (= ($generated@@538 ($generated@@511 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@511 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@78 ($generated@@511 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
(= ($generated@@334 $generated@@543 ($generated@@284 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@284 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@545) $generated@@70)) (= (type $generated@@546) $generated@@70)) (= ($generated@@145 $generated@@544 ($generated@@412 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@295 $generated@@544) $generated@@547))) (and ($generated@@245 ($generated@@87 ($generated@@387 $generated@@544) $generated@@547) $generated@@546) ($generated@@245 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@87 ($generated@@387 $generated@@544) $generated@@547))
 :pattern ( ($generated@@87 ($generated@@295 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@145 $generated@@544 ($generated@@412 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) (= ($generated@@145 $generated@@548 ($generated@@420 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@150) ($generated@@0 ($generated@@87 ($generated@@313 $generated@@548) $generated@@551))) (and ($generated@@245 ($generated@@87 ($generated@@395 $generated@@548) $generated@@551) $generated@@550) ($generated@@245 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@548) $generated@@551))
 :pattern ( ($generated@@87 ($generated@@313 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@145 $generated@@548 ($generated@@420 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@150)) (< ($generated@@552 $generated@@554) ($generated@@553 ($generated@@244 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@244 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@150)) (< ($generated@@552 $generated@@557) ($generated@@553 ($generated@@244 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@244 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@70)) (= (type $generated@@560) $generated@@70)) ($generated@@245 $generated@@558 ($generated@@412 $generated@@559 $generated@@560))) (and (= ($generated@@284 ($generated@@334 ($generated@@297 $generated@@150 $generated@@150) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@334 ($generated@@297 $generated@@150 $generated@@150) $generated@@558) ($generated@@412 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@245 $generated@@558 ($generated@@412 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@70)) (= (type $generated@@563) $generated@@70)) ($generated@@245 $generated@@561 ($generated@@420 $generated@@562 $generated@@563))) (and (= ($generated@@284 ($generated@@334 ($generated@@315 $generated@@150 $generated@@150) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@334 ($generated@@315 $generated@@150 $generated@@150) $generated@@561) ($generated@@420 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@561 ($generated@@420 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@70)) (= (type $generated@@566) $generated@@150)) ($generated@@245 $generated@@566 ($generated@@161 $generated@@564 $generated@@565))) (and (= ($generated@@284 ($generated@@334 $generated@@162 $generated@@566)) $generated@@566) ($generated@@145 ($generated@@334 $generated@@162 $generated@@566) ($generated@@161 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@161 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@568 T@T) ) (! (= (type ($generated@@567 $generated@@568)) ($generated@@82 $generated@@568 $generated@@4))
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (not ($generated@@0 ($generated@@87 ($generated@@567 $generated@@570) $generated@@569))))
 :pattern ( (let (($generated@@570 (type $generated@@569)))
($generated@@87 ($generated@@567 $generated@@570) $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (not ($generated@@0 ($generated@@87 ($generated@@444 $generated@@572) $generated@@571))))
 :pattern ( (let (($generated@@572 (type $generated@@571)))
($generated@@87 ($generated@@444 $generated@@572) $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@75)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@70) (= (type $generated@@576) $generated@@70)) (and (= ($generated@@78 ($generated@@161 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@573 ($generated@@161 $generated@@575 $generated@@576)) $generated@@68)))
 :pattern ( ($generated@@161 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@162) (= ($generated@@552 ($generated@@284 $generated@@577)) ($generated@@553 $generated@@577)))
 :pattern ( ($generated@@552 ($generated@@284 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@150) ($generated@@245 $generated@@578 ($generated@@81 0))) (and (= ($generated@@284 ($generated@@334 $generated@@2 $generated@@578)) $generated@@578) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@578) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@578 ($generated@@81 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@150) (= (type $generated@@580) $generated@@70)) ($generated@@245 $generated@@579 ($generated@@152 $generated@@580))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@579)) $generated@@579) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@579) ($generated@@152 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@152 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@70)) ($generated@@245 $generated@@581 ($generated@@257 $generated@@582))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@581)) $generated@@581) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@4) $generated@@581) ($generated@@257 $generated@@582))))
 :pattern ( ($generated@@245 $generated@@581 ($generated@@257 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@150) (= (type $generated@@584) $generated@@70)) ($generated@@245 $generated@@583 ($generated@@175 $generated@@584))) (and (= ($generated@@284 ($generated@@334 ($generated@@82 $generated@@150 $generated@@2) $generated@@583)) $generated@@583) ($generated@@145 ($generated@@334 ($generated@@82 $generated@@150 $generated@@2) $generated@@583) ($generated@@175 $generated@@584))))
 :pattern ( ($generated@@245 $generated@@583 ($generated@@175 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@150) (= (type $generated@@586) $generated@@70)) ($generated@@245 $generated@@585 ($generated@@511 $generated@@586))) (and (= ($generated@@284 ($generated@@334 ($generated@@278 $generated@@150) $generated@@585)) $generated@@585) ($generated@@145 ($generated@@334 ($generated@@278 $generated@@150) $generated@@585) ($generated@@511 $generated@@586))))
 :pattern ( ($generated@@245 $generated@@585 ($generated@@511 $generated@@586)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@573 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@153) $generated@@62))
(assert (= ($generated@@573 $generated@@153) $generated@@67))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@573 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@241) $generated@@66))
(assert (= ($generated@@573 $generated@@241) $generated@@69))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@82 $generated@@150 $generated@@2)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@587 ($generated@@175 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) (< 0 ($generated ($generated@@87 $generated@@587 $generated@@590)))) ($generated@@264 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@87 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@80 $generated@@587 ($generated@@175 $generated@@588) $generated@@589))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@82 $generated@@150 $generated@@4)) (or ($generated@@151 $generated@@591) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@591 ($generated@@152 $generated@@153))))) (= ($generated@@148 $generated@@591) $generated@@591))
 :pattern ( ($generated@@148 $generated@@591))
))))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@162) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@594) (and ($generated@@160 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@80 $generated@@592 ($generated@@161 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@80 $generated@@592 ($generated@@161 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@264 ($generated@@169 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@264 ($generated@@169 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@162) (= (type $generated@@597) $generated@@70)) (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@263 $generated@@598) (and ($generated@@160 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@70) ($generated@@80 $generated@@596 ($generated@@161 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@80 $generated@@596 ($generated@@161 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@264 ($generated@@170 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@264 ($generated@@170 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@150) (= (type $generated@@601) $generated@@150)) (= ($generated@@244 ($generated@@149 $generated@@600) ($generated@@149 $generated@@601)) ($generated@@149 ($generated@@244 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@244 ($generated@@149 $generated@@600) ($generated@@149 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@284 ($generated@@149 $generated@@602)) ($generated@@149 ($generated@@284 $generated@@602)))
 :pattern ( ($generated@@284 ($generated@@149 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@279 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@278 $generated@@604)) (= ($generated@@277 $generated@@603) 0)) (= $generated@@603 ($generated@@276 $generated@@604))))
 :pattern ( ($generated@@277 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@82 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@289 ($generated@@88 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@289 $generated@@605) ($generated ($generated@@87 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@289 ($generated@@88 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@2)) ($generated@@80 $generated@@610 $generated@@46 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@46 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@612) $generated@@3)) ($generated@@80 $generated@@612 $generated@@47 $generated@@611))
 :pattern ( ($generated@@80 $generated@@612 $generated@@47 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@4)) ($generated@@80 $generated@@614 $generated@@44 $generated@@613))
 :pattern ( ($generated@@80 $generated@@614 $generated@@44 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@616) $generated@@468)) ($generated@@80 $generated@@616 $generated@@45 $generated@@615))
 :pattern ( ($generated@@80 $generated@@616 $generated@@45 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@618) $generated@@150)) ($generated@@80 $generated@@618 $generated@@48 $generated@@617))
 :pattern ( ($generated@@80 $generated@@618 $generated@@48 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@278 $generated@@150)) (= (type $generated@@620) $generated@@70)) (= ($generated@@145 $generated@@619 ($generated@@511 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@277 $generated@@619))) ($generated@@245 ($generated@@512 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@512 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@145 $generated@@619 ($generated@@511 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (= (type $generated@@623) ($generated@@278 $generated@@150)) (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@277 $generated@@623))) (< ($generated@@553 ($generated@@334 $generated@@162 ($generated@@512 $generated@@623 $generated@@624))) ($generated@@622 $generated@@623))))
 :pattern ( ($generated@@553 ($generated@@334 $generated@@162 ($generated@@512 $generated@@623 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@297 $generated@@150 $generated@@150)) (= (type $generated@@626) $generated@@70)) (= (type $generated@@627) $generated@@70)) ($generated@@145 $generated@@625 ($generated@@412 $generated@@626 $generated@@627))) (and (and ($generated@@145 ($generated@@295 $generated@@625) ($generated@@152 $generated@@626)) ($generated@@145 ($generated@@347 $generated@@625) ($generated@@152 $generated@@627))) ($generated@@145 ($generated@@386 $generated@@625) ($generated@@152 ($generated@@161 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@145 $generated@@625 ($generated@@412 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@315 $generated@@150 $generated@@150)) (= (type $generated@@629) $generated@@70)) (= (type $generated@@630) $generated@@70)) ($generated@@145 $generated@@628 ($generated@@420 $generated@@629 $generated@@630))) (and (and ($generated@@145 ($generated@@313 $generated@@628) ($generated@@257 $generated@@629)) ($generated@@145 ($generated@@358 $generated@@628) ($generated@@257 $generated@@630))) ($generated@@145 ($generated@@394 $generated@@628) ($generated@@257 ($generated@@161 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@145 $generated@@628 ($generated@@420 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@2) ($generated@@145 $generated@@631 $generated@@46))
 :pattern ( ($generated@@145 $generated@@631 $generated@@46))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@3) ($generated@@145 $generated@@632 $generated@@47))
 :pattern ( ($generated@@145 $generated@@632 $generated@@47))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@4) ($generated@@145 $generated@@633 $generated@@44))
 :pattern ( ($generated@@145 $generated@@633 $generated@@44))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@468) ($generated@@145 $generated@@634 $generated@@45))
 :pattern ( ($generated@@145 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@150) ($generated@@145 $generated@@635 $generated@@48))
 :pattern ( ($generated@@145 $generated@@635 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@636) ($generated@@185 $generated@@83 $generated@@4)) (= (type $generated@@637) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@638) $generated@@83)) (= (type $generated@@639) ($generated@@82 $generated@@150 $generated@@4))) (= (type $generated@@640) ($generated@@82 $generated@@150 $generated@@4))) (= (type $generated@@642) $generated@@83)) (= (type $generated@@643) ($generated@@82 $generated@@150 $generated@@4))) (= (type $generated@@644) ($generated@@82 $generated@@150 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@645  (=> (= $generated@@636 ($generated@@184 $generated@@139 $generated@@637 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@145 ($generated@@428 ($generated@@567 $generated@@150) ($generated@@284 $generated@@638)) ($generated@@152 $generated@@153))) (=> ($generated@@145 ($generated@@428 ($generated@@567 $generated@@150) ($generated@@284 $generated@@638)) ($generated@@152 $generated@@153)) (=> (= $generated@@639 ($generated@@428 ($generated@@567 $generated@@150) ($generated@@284 $generated@@638))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@145 ($generated@@428 ($generated@@567 $generated@@150) ($generated@@284 $generated@@638)) ($generated@@152 $generated@@153))) (=> ($generated@@145 ($generated@@428 ($generated@@567 $generated@@150) ($generated@@284 $generated@@638)) ($generated@@152 $generated@@153)) (=> (and (= $generated@@640 ($generated@@428 ($generated@@567 $generated@@150) ($generated@@284 $generated@@638))) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@646) $generated@@83) ($generated@@0 ($generated@@87 ($generated@@148 ($generated@@368 $generated@@639 $generated@@640)) ($generated@@284 $generated@@646)))) (and (not (= $generated@@646 $generated@@139)) (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@637 $generated@@646) $generated@@60)))))
 :pattern ( ($generated@@87 ($generated@@148 ($generated@@368 $generated@@639 $generated@@640)) ($generated@@284 $generated@@646)))
)))))))))))
(let (($generated@@647  (=> (and (and ($generated@@263 $generated@@637) ($generated@@641 $generated@@637)) (and ($generated@@145 $generated@@638 $generated@@241) ($generated@@80 $generated@@638 $generated@@241 $generated@@637))) (=> (and (and (and ($generated@@145 $generated@@642 $generated@@241) ($generated@@80 $generated@@642 $generated@@241 $generated@@637)) (and ($generated@@145 $generated@@643 ($generated@@152 $generated@@153)) ($generated@@80 $generated@@643 ($generated@@152 $generated@@153) $generated@@637))) (and (and ($generated@@145 $generated@@644 ($generated@@152 $generated@@153)) ($generated@@80 $generated@@644 ($generated@@152 $generated@@153) $generated@@637)) (and (= 2 $generated@@147) (= (ControlFlow 0 5) 2)))) $generated@@645))))
$generated@@647)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@187 (T@U T@U) T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 (T@U T@U T@U T@U T@U Int) Int)
(declare-fun $generated@@202 (T@U T@U T@U T@U T@U Int) Bool)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@213 (T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@T T@U T@U) T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U T@U) Bool)
(declare-fun $generated@@327 (T@U) Bool)
(declare-fun $generated@@341 (T@T T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@375 (T@U T@U) Bool)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@527 (T@U Int) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@584 (T@U T@U T@U) T@U)
(declare-fun $generated@@585 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@586 (T@T T@T) T@T)
(declare-fun $generated@@587 (T@T) T@T)
(declare-fun $generated@@588 (T@T) T@T)
(declare-fun $generated@@589 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@642 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@712 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@64) $generated@@78)) (= (type $generated@@65) $generated@@74)) (= ($generated@@1 $generated@@79) 11)) (= (type $generated@@66) $generated@@79)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@80) 12)) (= (type $generated@@69) $generated@@80)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (= ($generated@@83 $generated@@60) 0))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@74)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@77)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@60) $generated@@61))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 13)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@76 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 15)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@76 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@73)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert  (and (= (type $generated@@150) $generated@@73) (= (type $generated@@151) $generated@@91)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@91) (= (type $generated@@153) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@152 $generated@@150 $generated@@153)  (or (= $generated@@152 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@152 $generated@@150 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@73))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@91) (= (type $generated@@156) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@151) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@88 $generated@@155 $generated@@154 $generated@@156))
)))
(assert  (and (= (type $generated@@157) ($generated@@75 $generated@@2)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@73)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@163) $generated@@91)) (and ($generated@@158 $generated@@162) (and (not (= $generated@@163 $generated@@151)) (= ($generated@@159 $generated@@163) $generated@@154)))) ($generated@@160 ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@157) $generated@@46))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@162 $generated@@163) $generated@@157))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@160 $generated@@164 ($generated@@89 0)))
 :pattern ( ($generated@@160 $generated@@164 ($generated@@89 0)))
)))
(assert  (and (= ($generated@@1 $generated@@167) 16) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@168 $generated@@169)) $generated@@73)
 :pattern ( ($generated@@166 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@73) (= (type $generated@@171) $generated@@73)) (= (type $generated@@172) $generated@@167)) ($generated@@160 $generated@@172 ($generated@@166 $generated@@170 $generated@@171))) ($generated@@165 $generated@@172))
 :pattern ( ($generated@@165 $generated@@172) ($generated@@160 $generated@@172 ($generated@@166 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 17) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@167) (= (type $generated@@180) $generated@@167)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@73)
 :pattern ( ($generated@@181 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@185) $generated@@73)) ($generated@@160 $generated@@184 ($generated@@181 $generated@@185))) ($generated@@182 $generated@@184))
 :pattern ( ($generated@@160 $generated@@184 ($generated@@181 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@91) (= ($generated@@160 $generated@@186 $generated@@154)  (or (= $generated@@186 $generated@@151) (= ($generated@@159 $generated@@186) $generated@@154))))
 :pattern ( ($generated@@160 $generated@@186 $generated@@154))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@93 (type $generated@@188))))
(= (type ($generated@@187 $generated@@188 $generated@@189)) ($generated@@90 $generated@@190 $generated@@4)))
 :pattern ( ($generated@@187 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@93 (type $generated@@191))))
 (=> (and (= (type $generated@@191) ($generated@@90 $generated@@193 $generated@@4)) (= (type $generated@@192) ($generated@@90 $generated@@193 $generated@@4))) (= ($generated@@187 ($generated@@187 $generated@@191 $generated@@192) $generated@@192) ($generated@@187 $generated@@191 $generated@@192))))
 :pattern ( ($generated@@187 ($generated@@187 $generated@@191 $generated@@192) $generated@@192))
)))
(assert (= (type $generated@@194) $generated@@73))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (= (type $generated@@195) $generated@@91) (= (type $generated@@196) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@195 $generated@@194 $generated@@196) ($generated@@88 $generated@@195 $generated@@150 $generated@@196)))
 :pattern ( ($generated@@88 $generated@@195 $generated@@194 $generated@@196))
)))
(assert (= (type $generated@@197) $generated@@73))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (= (type $generated@@198) $generated@@91) (= (type $generated@@199) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@198 $generated@@197 $generated@@199) ($generated@@88 $generated@@198 $generated@@154 $generated@@199)))
 :pattern ( ($generated@@88 $generated@@198 $generated@@197 $generated@@199))
)))
(assert  (and (forall (($generated@@205 T@U) ) (! (= (type ($generated@@203 $generated@@205)) $generated@@73)
 :pattern ( ($generated@@203 $generated@@205))
)) (forall (($generated@@206 T@U) ) (! (= (type ($generated@@204 $generated@@206)) $generated@@176)
 :pattern ( ($generated@@204 $generated@@206))
))))
(assert  (=> (<= 1 $generated@@200) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Int) ) (!  (=> (and (and (and (and (and (= (type $generated@@207) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@208) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@209) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@210) $generated@@91)) (= (type $generated@@211) $generated@@91)) (or ($generated@@202 $generated@@207 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212) (and (not (= 1 $generated@@200)) (and (and (and (and (and ($generated@@158 $generated@@207) ($generated@@160 $generated@@208 ($generated@@203 $generated@@194))) ($generated@@160 $generated@@209 ($generated@@203 $generated@@194))) ($generated@@160 $generated@@210 $generated@@197)) ($generated@@160 $generated@@211 $generated@@197)) (and ($generated@@0 ($generated@@95 ($generated@@187 $generated@@208 $generated@@209) ($generated@@204 $generated@@210))) ($generated@@0 ($generated@@95 $generated@@208 ($generated@@204 $generated@@211)))))))) true)
 :pattern ( ($generated@@201 $generated@@207 $generated@@208 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= (type ($generated@@213 $generated@@215 $generated@@216)) $generated@@167)
 :pattern ( ($generated@@213 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@217) $generated@@73) (= (type $generated@@218) $generated@@73)) (= (type $generated@@219) $generated@@176)) (= (type $generated@@220) $generated@@176)) (= ($generated@@160 ($generated@@213 $generated@@219 $generated@@220) ($generated@@166 $generated@@217 $generated@@218))  (and ($generated@@214 $generated@@219 $generated@@217) ($generated@@214 $generated@@220 $generated@@218))))
 :pattern ( ($generated@@160 ($generated@@213 $generated@@219 $generated@@220) ($generated@@166 $generated@@217 $generated@@218)))
)))
(assert (= ($generated@@83 $generated@@157) 0))
(assert (forall (($generated@@222 T@T) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@75 $generated@@222))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224))
)))
(assert (= ($generated@@221 $generated@@2 $generated@@66 $generated@@72) $generated@@157))
(assert  (not ($generated@@225 $generated@@157)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) $generated@@167) (= (type $generated@@227) $generated@@167)) (= ($generated@@173 $generated@@226 $generated@@227) (= $generated@@226 $generated@@227)))
 :pattern ( ($generated@@173 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@229) $generated@@73)) (= ($generated@@160 $generated@@228 ($generated@@203 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@176) ($generated@@0 ($generated@@95 $generated@@228 $generated@@230))) ($generated@@214 $generated@@230 $generated@@229))
 :pattern ( ($generated@@95 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@160 $generated@@228 ($generated@@203 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@73)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@234) $generated@@73)) (= ($generated@@160 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@176) ($generated@@0 ($generated@@95 $generated@@233 $generated@@235))) ($generated@@214 $generated@@235 $generated@@234))
 :pattern ( ($generated@@95 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@160 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= ($generated@@236 $generated@@239) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@73) (= (type $generated@@242) $generated@@73)) (= (type $generated@@243) $generated@@176)) (= (type $generated@@244) $generated@@176)) (= (type $generated@@245) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@158 $generated@@245)) (= ($generated@@88 ($generated@@213 $generated@@243 $generated@@244) ($generated@@166 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@88 ($generated@@213 $generated@@243 $generated@@244) ($generated@@166 $generated@@241 $generated@@242) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@78)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@167) (= ($generated@@165 $generated@@248) (= ($generated@@246 $generated@@248) $generated@@64)))
 :pattern ( ($generated@@165 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@167) ($generated@@165 $generated@@249)) (exists (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (and (and (= (type $generated@@250) $generated@@176) (= (type $generated@@251) $generated@@176)) (= $generated@@249 ($generated@@213 $generated@@250 $generated@@251)))
 :no-pattern (type $generated@@250)
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
)))
 :pattern ( ($generated@@165 $generated@@249))
)))
(assert  (and (and (forall (($generated@@256 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@256)) 18)) (forall (($generated@@257 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
))) (forall (($generated@@258 T@T) ) (! (= (type ($generated@@252 $generated@@258)) ($generated@@254 $generated@@258))
 :pattern ( ($generated@@252 $generated@@258))
))))
(assert (forall (($generated@@259 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@259)) 0)
 :pattern ( ($generated@@252 $generated@@259))
)))
(assert  (=> (<= 1 $generated@@200) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 Int) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@261) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@262) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@263) $generated@@91)) (= (type $generated@@264) $generated@@91)) (or ($generated@@202 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265) (and (not (= 1 $generated@@200)) (and (and (and (and (and ($generated@@158 $generated@@260) ($generated@@160 $generated@@261 ($generated@@203 $generated@@194))) ($generated@@160 $generated@@262 ($generated@@203 $generated@@194))) ($generated@@160 $generated@@263 $generated@@197)) ($generated@@160 $generated@@264 $generated@@197)) (and ($generated@@0 ($generated@@95 ($generated@@187 $generated@@261 $generated@@262) ($generated@@204 $generated@@263))) ($generated@@0 ($generated@@95 $generated@@261 ($generated@@204 $generated@@264)))))))) (= ($generated@@201 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265) (+ (+ ($generated ($generated@@97 ($generated@@95 $generated@@260 $generated@@263) $generated@@157)) ($generated ($generated@@97 ($generated@@95 $generated@@260 $generated@@264) $generated@@157))) $generated@@265)))
 :pattern ( ($generated@@201 $generated@@260 $generated@@261 $generated@@262 $generated@@263 $generated@@264 $generated@@265) ($generated@@158 $generated@@260))
))))
(assert ($generated@@225 $generated@@60))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@73) (= (type $generated@@268) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@240 ($generated@@204 $generated@@266) $generated@@267 $generated@@268) ($generated@@88 $generated@@266 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@240 ($generated@@204 $generated@@266) $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@270) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@271) $generated@@176)) (= (type $generated@@272) $generated@@73)) ($generated@@146 $generated@@269 $generated@@270)) ($generated@@240 $generated@@271 $generated@@272 $generated@@269)) ($generated@@240 $generated@@271 $generated@@272 $generated@@270))
 :pattern ( ($generated@@146 $generated@@269 $generated@@270) ($generated@@240 $generated@@271 $generated@@272 $generated@@269))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@273) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@274) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@276) $generated@@73)) ($generated@@146 $generated@@273 $generated@@274)) ($generated@@88 $generated@@275 $generated@@276 $generated@@273)) ($generated@@88 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@146 $generated@@273 $generated@@274) ($generated@@88 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@278) $generated@@91)) (=> (and (and ($generated@@158 $generated@@277) (and (not (= $generated@@278 $generated@@151)) (= ($generated@@159 $generated@@278) $generated@@154))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@277 $generated@@278) $generated@@60))) ($generated@@88 ($generated@@97 ($generated@@95 $generated@@277 $generated@@278) $generated@@157) $generated@@46 $generated@@277)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@277 $generated@@278) $generated@@157))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@90 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@93 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@90 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@95 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@90 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@95 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@95 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@90 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@95 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@95 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@322) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@323) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@321 $generated@@322 $generated@@323)) (and ($generated@@146 $generated@@322 $generated@@323) (forall (($generated@@324 T@U) ($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@76 (type $generated@@325))))
 (=> (and (and (= (type $generated@@324) $generated@@91) (= (type $generated@@325) ($generated@@75 $generated@@326))) (not ($generated@@225 $generated@@325))) (= ($generated@@97 ($generated@@95 $generated@@322 $generated@@324) $generated@@325) ($generated@@97 ($generated@@95 $generated@@323 $generated@@324) $generated@@325))))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@323 $generated@@324) $generated@@325))
))))
 :pattern ( ($generated@@321 $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 Int) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@328) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@329) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@330) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@331) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@332) $generated@@91)) (= (type $generated@@333) $generated@@91)) (and (and (and ($generated@@158 $generated@@328) ($generated@@158 $generated@@329)) (or ($generated@@202 $generated@@328 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@334) (and (and (and ($generated@@160 $generated@@330 ($generated@@203 $generated@@194)) ($generated@@160 $generated@@331 ($generated@@203 $generated@@194))) ($generated@@160 $generated@@332 $generated@@197)) ($generated@@160 $generated@@333 $generated@@197)))) (and ($generated@@327 $generated@@328) ($generated@@146 $generated@@328 $generated@@329)))) (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@76 (type $generated@@336))))
 (=> (and (and (= (type $generated@@335) $generated@@91) (= (type $generated@@336) ($generated@@75 $generated@@337))) (and (not (= $generated@@335 $generated@@151)) (or ($generated@@0 ($generated@@95 $generated@@330 ($generated@@204 $generated@@335))) ($generated@@0 ($generated@@95 $generated@@331 ($generated@@204 $generated@@335)))))) (= ($generated@@97 ($generated@@95 $generated@@328 $generated@@335) $generated@@336) ($generated@@97 ($generated@@95 $generated@@329 $generated@@335) $generated@@336))))
 :no-pattern (type $generated@@335)
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))) (= ($generated@@201 $generated@@328 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@334) ($generated@@201 $generated@@329 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@334)))
 :pattern ( ($generated@@327 $generated@@328) ($generated@@146 $generated@@328 $generated@@329) ($generated@@201 $generated@@329 $generated@@330 $generated@@331 $generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@93 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@90 $generated@@339 $generated@@2)) (= ($generated@@182 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (and (<= 0 ($generated ($generated@@95 $generated@@338 $generated@@340))) (<= ($generated ($generated@@95 $generated@@338 $generated@@340)) ($generated@@279 $generated@@338))))
 :pattern ( ($generated@@95 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@182 $generated@@338))
)))
(assert (forall (($generated@@342 T@T) ($generated@@343 T@U) ) (! (= (type ($generated@@341 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@341 $generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@176) ($generated@@214 $generated@@344 $generated@@150)) (and (= ($generated@@204 ($generated@@341 $generated@@91 $generated@@344)) $generated@@344) ($generated@@160 ($generated@@341 $generated@@91 $generated@@344) $generated@@150)))
 :pattern ( ($generated@@214 $generated@@344 $generated@@150))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@176) ($generated@@214 $generated@@345 $generated@@194)) (and (= ($generated@@204 ($generated@@341 $generated@@91 $generated@@345)) $generated@@345) ($generated@@160 ($generated@@341 $generated@@91 $generated@@345) $generated@@194)))
 :pattern ( ($generated@@214 $generated@@345 $generated@@194))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@346) $generated@@176) ($generated@@214 $generated@@346 $generated@@154)) (and (= ($generated@@204 ($generated@@341 $generated@@91 $generated@@346)) $generated@@346) ($generated@@160 ($generated@@341 $generated@@91 $generated@@346) $generated@@154)))
 :pattern ( ($generated@@214 $generated@@346 $generated@@154))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@176) ($generated@@214 $generated@@347 $generated@@197)) (and (= ($generated@@204 ($generated@@341 $generated@@91 $generated@@347)) $generated@@347) ($generated@@160 ($generated@@341 $generated@@91 $generated@@347) $generated@@197)))
 :pattern ( ($generated@@214 $generated@@347 $generated@@197))
)))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@91) (= ($generated@@160 $generated@@348 $generated@@194)  (and ($generated@@160 $generated@@348 $generated@@150) (not (= $generated@@348 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@348 $generated@@194))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@91) (= ($generated@@160 $generated@@349 $generated@@197)  (and ($generated@@160 $generated@@349 $generated@@154) (not (= $generated@@349 $generated@@151)))))
 :pattern ( ($generated@@160 $generated@@349 $generated@@197))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@289 (type $generated@@350))))
(let (($generated@@352 ($generated@@288 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@287 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@286 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@95 ($generated@@285 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@285 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@289 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@90 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@289 (type $generated@@357))))
(let (($generated@@359 ($generated@@288 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@287 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@286 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@95 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@307 (type $generated@@361))))
(let (($generated@@363 ($generated@@306 (type $generated@@361))))
 (=> (= (type $generated@@361) ($generated@@305 $generated@@363 $generated@@362)) (or (= $generated@@361 ($generated@@304 $generated@@363 $generated@@362)) (exists (($generated@@364 T@U) ) (!  (and (= (type $generated@@364) $generated@@363) ($generated@@0 ($generated@@95 ($generated@@303 $generated@@361) $generated@@364)))
 :no-pattern (type $generated@@364)
 :no-pattern ($generated $generated@@364)
 :no-pattern ($generated@@0 $generated@@364)
))))))
 :pattern ( ($generated@@303 $generated@@361))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@307 (type $generated@@366))))
(= (type ($generated@@365 $generated@@366)) ($generated@@90 $generated@@367 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@307 (type $generated@@368))))
(let (($generated@@370 ($generated@@306 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@305 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@304 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@369) ($generated@@0 ($generated@@95 ($generated@@365 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@373) $generated@@73)) (= ($generated@@160 $generated@@372 ($generated@@181 $generated@@373)) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@176) (< 0 ($generated ($generated@@95 $generated@@372 $generated@@374)))) ($generated@@214 $generated@@374 $generated@@373))
 :pattern ( ($generated@@95 $generated@@372 $generated@@374))
))))
 :pattern ( ($generated@@160 $generated@@372 ($generated@@181 $generated@@373)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@93 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377 $generated@@378)) ($generated@@90 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@93 (type $generated@@380))))
 (=> (and (and (= (type $generated@@380) ($generated@@90 $generated@@382 $generated@@4)) (= (type $generated@@381) ($generated@@90 $generated@@382 $generated@@4))) ($generated@@375 $generated@@380 $generated@@381)) (and (= ($generated@@376 ($generated@@187 $generated@@380 $generated@@381) $generated@@380) $generated@@381) (= ($generated@@376 ($generated@@187 $generated@@380 $generated@@381) $generated@@381) $generated@@380))))
 :pattern ( ($generated@@187 $generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
 (=> (and (= (type $generated@@383) ($generated@@90 $generated@@386 $generated@@4)) (= (type $generated@@384) ($generated@@90 $generated@@386 $generated@@4))) (= ($generated@@0 ($generated@@95 ($generated@@376 $generated@@383 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@95 $generated@@383 $generated@@385)) (not ($generated@@0 ($generated@@95 $generated@@384 $generated@@385)))))))
 :pattern ( ($generated@@95 ($generated@@376 $generated@@383 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@388) $generated@@73)) (= (type $generated@@389) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@387 ($generated@@203 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@176) ($generated@@0 ($generated@@95 $generated@@387 $generated@@390))) ($generated@@240 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@95 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@88 $generated@@387 ($generated@@203 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@90 $generated@@176 $generated@@4)) (= (type $generated@@392) $generated@@73)) (= (type $generated@@393) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@391 ($generated@@231 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@176) ($generated@@0 ($generated@@95 $generated@@391 $generated@@394))) ($generated@@240 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@95 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@88 $generated@@391 ($generated@@231 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@95 ($generated@@280 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@95 ($generated@@280 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@90 $generated@@176 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@289 (type $generated@@400))))
(let (($generated@@402 ($generated@@288 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@90 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@287 $generated@@176 $generated@@176)) (= (type $generated@@404) $generated@@176)) (= ($generated@@0 ($generated@@95 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@95 ($generated@@285 $generated@@403) ($generated@@174 ($generated@@341 $generated@@167 $generated@@404)))) (= ($generated@@95 ($generated@@398 $generated@@403) ($generated@@174 ($generated@@341 $generated@@167 $generated@@404))) ($generated@@175 ($generated@@341 $generated@@167 $generated@@404))))))
 :pattern ( ($generated@@95 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@90 $generated@@176 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@307 (type $generated@@408))))
(let (($generated@@410 ($generated@@306 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@90 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@305 $generated@@176 $generated@@176)) (= (type $generated@@412) $generated@@176)) (= ($generated@@0 ($generated@@95 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@95 ($generated@@303 $generated@@411) ($generated@@174 ($generated@@341 $generated@@167 $generated@@412)))) (= ($generated@@95 ($generated@@406 $generated@@411) ($generated@@174 ($generated@@341 $generated@@167 $generated@@412))) ($generated@@175 ($generated@@341 $generated@@167 $generated@@412))))))
 :pattern ( ($generated@@95 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@288 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@287 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@95 ($generated@@354 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@95 ($generated@@285 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@95 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@95 ($generated@@285 $generated@@413) $generated@@417))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@95 ($generated@@354 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@306 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@305 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@95 ($generated@@365 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@95 ($generated@@303 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@95 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@95 ($generated@@303 $generated@@418) $generated@@422))
 :pattern ( ($generated@@95 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@95 ($generated@@365 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@73)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@287 $generated@@176 $generated@@176)) (= (type $generated@@427) $generated@@73)) (= (type $generated@@428) $generated@@73)) (= (type $generated@@429) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@285 $generated@@426) $generated@@430))) (and ($generated@@240 ($generated@@95 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@240 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@95 ($generated@@285 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@88 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@73)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@305 $generated@@176 $generated@@176)) (= (type $generated@@435) $generated@@73)) (= (type $generated@@436) $generated@@73)) (= (type $generated@@437) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@303 $generated@@434) $generated@@438))) (and ($generated@@240 ($generated@@95 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@240 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@95 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@95 ($generated@@303 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@88 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
 (=> (and (and (= (type $generated@@439) ($generated@@90 $generated@@442 $generated@@4)) (= (type $generated@@440) ($generated@@90 $generated@@442 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@439 $generated@@441))) ($generated@@0 ($generated@@95 ($generated@@187 $generated@@439 $generated@@440) $generated@@441))))
 :pattern ( ($generated@@187 $generated@@439 $generated@@440) ($generated@@95 $generated@@439 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
 (=> (and (and (= (type $generated@@443) ($generated@@90 $generated@@446 $generated@@4)) (= (type $generated@@444) ($generated@@90 $generated@@446 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@444 $generated@@445))) ($generated@@0 ($generated@@95 ($generated@@187 $generated@@443 $generated@@444) $generated@@445))))
 :pattern ( ($generated@@187 $generated@@443 $generated@@444) ($generated@@95 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@447) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@448) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@449) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@447 $generated@@449))) (and ($generated@@146 $generated@@447 $generated@@448) ($generated@@146 $generated@@448 $generated@@449))) ($generated@@146 $generated@@447 $generated@@449))
 :pattern ( ($generated@@146 $generated@@447 $generated@@448) ($generated@@146 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (! (let (($generated@@453 (type $generated@@452)))
 (=> (and (and (= (type $generated@@450) ($generated@@90 $generated@@453 $generated@@4)) (= (type $generated@@451) ($generated@@90 $generated@@453 $generated@@4))) ($generated@@0 ($generated@@95 $generated@@451 $generated@@452))) (not ($generated@@0 ($generated@@95 ($generated@@376 $generated@@450 $generated@@451) $generated@@452)))))
 :pattern ( ($generated@@376 $generated@@450 $generated@@451) ($generated@@95 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@90 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@307 (type $generated@@456))))
(let (($generated@@458 ($generated@@306 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@305 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@304 $generated@@458 $generated@@457)) (= ($generated@@303 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@303 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@307 (type $generated@@459))))
(let (($generated@@461 ($generated@@306 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@305 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@304 $generated@@461 $generated@@460)) (= ($generated@@365 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@365 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@307 (type $generated@@462))))
(let (($generated@@464 ($generated@@306 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@305 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@304 $generated@@464 $generated@@463)) (= ($generated@@405 $generated@@462) ($generated@@454 $generated@@176))))))
 :pattern ( ($generated@@405 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@289 (type $generated@@465))))
(let (($generated@@467 ($generated@@288 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@287 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@286 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@176) (= (type $generated@@469) $generated@@176)) ($generated@@0 ($generated@@95 ($generated@@397 $generated@@465) ($generated@@204 ($generated@@213 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@397 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@307 (type $generated@@470))))
(let (($generated@@472 ($generated@@306 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@305 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@304 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@176) (= (type $generated@@474) $generated@@176)) ($generated@@0 ($generated@@95 ($generated@@405 $generated@@470) ($generated@@204 ($generated@@213 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@405 $generated@@470))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@79)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@T) ) (!  (=> (and (= (type $generated@@477) $generated@@79) (= (type $generated@@478) $generated@@77)) (and (= ($generated@@475 ($generated@@221 $generated@@479 $generated@@477 $generated@@478)) $generated@@477) (= ($generated@@86 ($generated@@221 $generated@@479 $generated@@477 $generated@@478)) $generated@@478)))
 :pattern ( ($generated@@221 $generated@@479 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@176) ($generated@@214 $generated@@480 $generated@@46)) (and (= ($generated@@204 ($generated@@341 $generated@@2 $generated@@480)) $generated@@480) ($generated@@160 ($generated@@341 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@214 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@176) ($generated@@214 $generated@@481 $generated@@47)) (and (= ($generated@@204 ($generated@@341 $generated@@3 $generated@@481)) $generated@@481) ($generated@@160 ($generated@@341 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@214 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@176) ($generated@@214 $generated@@482 $generated@@44)) (and (= ($generated@@204 ($generated@@341 $generated@@4 $generated@@482)) $generated@@482) ($generated@@160 ($generated@@341 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@214 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 21))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@176) ($generated@@214 $generated@@484 $generated@@45)) (and (= ($generated@@204 ($generated@@341 $generated@@483 $generated@@484)) $generated@@484) ($generated@@160 ($generated@@341 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@214 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@73) (= ($generated@@214 ($generated@@204 $generated@@485) $generated@@486) ($generated@@160 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@214 ($generated@@204 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@93 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@90 $generated@@488 $generated@@2)) (<= 0 ($generated@@279 $generated@@487))))
 :pattern ( ($generated@@279 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@255 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@254 $generated@@490)) (<= 0 ($generated@@253 $generated@@489))))
 :pattern ( ($generated@@253 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@73)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@73) (= (type $generated@@494) $generated@@73)) (= ($generated@@491 ($generated@@423 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@423 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@73)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@73) (= (type $generated@@498) $generated@@73)) (= ($generated@@495 ($generated@@423 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@423 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@73) (= (type $generated@@500) $generated@@73)) (= ($generated@@84 ($generated@@423 $generated@@499 $generated@@500)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@73)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@73) (= (type $generated@@504) $generated@@73)) (= ($generated@@501 ($generated@@431 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@431 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@73)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@73) (= (type $generated@@508) $generated@@73)) (= ($generated@@505 ($generated@@431 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@431 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@73) (= (type $generated@@510) $generated@@73)) (= ($generated@@84 ($generated@@431 $generated@@509 $generated@@510)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@176) (= (type $generated@@512) $generated@@176)) (= ($generated@@246 ($generated@@213 $generated@@511 $generated@@512)) $generated@@64))
 :pattern ( ($generated@@213 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@73)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@73) (= (type $generated@@516) $generated@@73)) (= ($generated@@513 ($generated@@166 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@166 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@73)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@73) (= (type $generated@@520) $generated@@73)) (= ($generated@@517 ($generated@@166 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@166 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@176) (= (type $generated@@522) $generated@@176)) (= ($generated@@174 ($generated@@213 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@213 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@176) (= (type $generated@@524) $generated@@176)) (= ($generated@@175 ($generated@@213 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@213 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@91) ($generated@@160 $generated@@525 $generated@@150))
 :pattern ( ($generated@@160 $generated@@525 $generated@@150))
)))
(assert  (and (forall (($generated@@528 T@U) ) (! (= (type ($generated@@526 $generated@@528)) $generated@@73)
 :pattern ( ($generated@@526 $generated@@528))
)) (forall (($generated@@529 T@U) ($generated@@530 Int) ) (! (let (($generated@@531 ($generated@@255 (type $generated@@529))))
(= (type ($generated@@527 $generated@@529 $generated@@530)) $generated@@531))
 :pattern ( ($generated@@527 $generated@@529 $generated@@530))
))))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@254 $generated@@176)) (= (type $generated@@533) $generated@@73)) (= (type $generated@@534) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@532 ($generated@@526 $generated@@533) $generated@@534) (forall (($generated@@535 Int) ) (!  (=> (and (<= 0 $generated@@535) (< $generated@@535 ($generated@@253 $generated@@532))) ($generated@@240 ($generated@@527 $generated@@532 $generated@@535) $generated@@533 $generated@@534))
 :pattern ( ($generated@@527 $generated@@532 $generated@@535))
))))
 :pattern ( ($generated@@88 $generated@@532 ($generated@@526 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@89 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@89 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@73)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@73) (= ($generated@@538 ($generated@@203 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@203 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@73) (= ($generated@@84 ($generated@@203 $generated@@541)) $generated@@54))
 :pattern ( ($generated@@203 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@73)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@73) (= ($generated@@542 ($generated@@231 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@231 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@73) (= ($generated@@84 ($generated@@231 $generated@@545)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@73)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@73) (= ($generated@@546 ($generated@@181 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@181 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@73) (= ($generated@@84 ($generated@@181 $generated@@549)) $generated@@56))
 :pattern ( ($generated@@181 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@73)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@73) (= ($generated@@550 ($generated@@526 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@526 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@73) (= ($generated@@84 ($generated@@526 $generated@@553)) $generated@@57))
 :pattern ( ($generated@@526 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
(= ($generated@@341 $generated@@555 ($generated@@204 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@204 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@287 $generated@@176 $generated@@176)) (= (type $generated@@557) $generated@@73)) (= (type $generated@@558) $generated@@73)) (= ($generated@@160 $generated@@556 ($generated@@423 $generated@@557 $generated@@558)) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@285 $generated@@556) $generated@@559))) (and ($generated@@214 ($generated@@95 ($generated@@398 $generated@@556) $generated@@559) $generated@@558) ($generated@@214 $generated@@559 $generated@@557)))
 :pattern ( ($generated@@95 ($generated@@398 $generated@@556) $generated@@559))
 :pattern ( ($generated@@95 ($generated@@285 $generated@@556) $generated@@559))
))))
 :pattern ( ($generated@@160 $generated@@556 ($generated@@423 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@305 $generated@@176 $generated@@176)) (= (type $generated@@561) $generated@@73)) (= (type $generated@@562) $generated@@73)) (= ($generated@@160 $generated@@560 ($generated@@431 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@176) ($generated@@0 ($generated@@95 ($generated@@303 $generated@@560) $generated@@563))) (and ($generated@@214 ($generated@@95 ($generated@@406 $generated@@560) $generated@@563) $generated@@562) ($generated@@214 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@95 ($generated@@406 $generated@@560) $generated@@563))
 :pattern ( ($generated@@95 ($generated@@303 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@160 $generated@@560 ($generated@@431 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@176) (= (type $generated@@567) $generated@@176)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@213 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@213 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@176) (= (type $generated@@569) $generated@@176)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@213 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@213 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@93 (type $generated@@570))))
 (=> (and (= (type $generated@@570) ($generated@@90 $generated@@572 $generated@@4)) (= (type $generated@@571) ($generated@@90 $generated@@572 $generated@@4))) (= ($generated@@187 $generated@@570 ($generated@@187 $generated@@570 $generated@@571)) ($generated@@187 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@187 $generated@@570 ($generated@@187 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@176) (= (type $generated@@574) $generated@@73)) (= (type $generated@@575) $generated@@73)) ($generated@@214 $generated@@573 ($generated@@423 $generated@@574 $generated@@575))) (and (= ($generated@@204 ($generated@@341 ($generated@@287 $generated@@176 $generated@@176) $generated@@573)) $generated@@573) ($generated@@160 ($generated@@341 ($generated@@287 $generated@@176 $generated@@176) $generated@@573) ($generated@@423 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@214 $generated@@573 ($generated@@423 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@176) (= (type $generated@@577) $generated@@73)) (= (type $generated@@578) $generated@@73)) ($generated@@214 $generated@@576 ($generated@@431 $generated@@577 $generated@@578))) (and (= ($generated@@204 ($generated@@341 ($generated@@305 $generated@@176 $generated@@176) $generated@@576)) $generated@@576) ($generated@@160 ($generated@@341 ($generated@@305 $generated@@176 $generated@@176) $generated@@576) ($generated@@431 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@214 $generated@@576 ($generated@@431 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@73) (= (type $generated@@580) $generated@@73)) (= (type $generated@@581) $generated@@176)) ($generated@@214 $generated@@581 ($generated@@166 $generated@@579 $generated@@580))) (and (= ($generated@@204 ($generated@@341 $generated@@167 $generated@@581)) $generated@@581) ($generated@@160 ($generated@@341 $generated@@167 $generated@@581) ($generated@@166 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@214 $generated@@581 ($generated@@166 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
 (not ($generated@@0 ($generated@@95 ($generated@@454 $generated@@583) $generated@@582))))
 :pattern ( (let (($generated@@583 (type $generated@@582)))
($generated@@95 ($generated@@454 $generated@@583) $generated@@582)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@590 T@T) ($generated@@591 T@T) ) (= ($generated@@1 ($generated@@586 $generated@@590 $generated@@591)) 22)) (forall (($generated@@592 T@T) ($generated@@593 T@T) ) (! (= ($generated@@587 ($generated@@586 $generated@@592 $generated@@593)) $generated@@592)
 :pattern ( ($generated@@586 $generated@@592 $generated@@593))
))) (forall (($generated@@594 T@T) ($generated@@595 T@T) ) (! (= ($generated@@588 ($generated@@586 $generated@@594 $generated@@595)) $generated@@595)
 :pattern ( ($generated@@586 $generated@@594 $generated@@595))
))) (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@588 (type $generated@@596))))
(= (type ($generated@@584 $generated@@596 $generated@@597 $generated@@598)) $generated@@599))
 :pattern ( ($generated@@584 $generated@@596 $generated@@597 $generated@@598))
))) (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
(let (($generated@@605 (type $generated@@601)))
(= (type ($generated@@589 $generated@@600 $generated@@601 $generated@@602 $generated@@603)) ($generated@@586 $generated@@605 $generated@@604))))
 :pattern ( ($generated@@589 $generated@@600 $generated@@601 $generated@@602 $generated@@603))
))) (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 ($generated@@588 (type $generated@@606))))
 (=> (= (type $generated@@609) $generated@@610) (= ($generated@@584 ($generated@@589 $generated@@606 $generated@@607 $generated@@608 $generated@@609) $generated@@607 $generated@@608) $generated@@609)))
 :weight 0
))) (and (and (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (or (= $generated@@613 $generated@@615) (= ($generated@@584 ($generated@@589 $generated@@612 $generated@@613 $generated@@614 $generated@@611) $generated@@615 $generated@@616) ($generated@@584 $generated@@612 $generated@@615 $generated@@616)))
 :weight 0
)) (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (or (= $generated@@620 $generated@@622) (= ($generated@@584 ($generated@@589 $generated@@618 $generated@@619 $generated@@620 $generated@@617) $generated@@621 $generated@@622) ($generated@@584 $generated@@618 $generated@@621 $generated@@622)))
 :weight 0
))) (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (or true (= ($generated@@584 ($generated@@589 $generated@@624 $generated@@625 $generated@@626 $generated@@623) $generated@@627 $generated@@628) ($generated@@584 $generated@@624 $generated@@627 $generated@@628)))
 :weight 0
)))) (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (! (= (type ($generated@@585 $generated@@629 $generated@@630 $generated@@631 $generated@@632 $generated@@633)) ($generated@@586 $generated@@91 $generated@@4))
 :pattern ( ($generated@@585 $generated@@629 $generated@@630 $generated@@631 $generated@@632 $generated@@633))
))))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 ($generated@@76 (type $generated@@640))))
 (=> (and (and (and (and (and (and (= (type $generated@@634) $generated@@91) (= (type $generated@@635) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@636) ($generated@@75 $generated@@4))) (= (type $generated@@637) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@638) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@639) $generated@@91)) (= (type $generated@@640) ($generated@@75 $generated@@641))) (= ($generated@@0 ($generated@@584 ($generated@@585 $generated@@634 $generated@@635 $generated@@636 $generated@@637 $generated@@638) $generated@@639 $generated@@640))  (=> (and (not (= $generated@@639 $generated@@634)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@635 $generated@@639) $generated@@636))) (or ($generated@@0 ($generated@@95 $generated@@637 ($generated@@204 $generated@@639))) ($generated@@0 ($generated@@95 $generated@@638 ($generated@@204 $generated@@639))))))))
 :pattern ( ($generated@@584 ($generated@@585 $generated@@634 $generated@@635 $generated@@636 $generated@@637 $generated@@638) $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (= (type ($generated@@642 $generated@@643 $generated@@644 $generated@@645 $generated@@646 $generated@@647)) ($generated@@586 $generated@@91 $generated@@4))
 :pattern ( ($generated@@642 $generated@@643 $generated@@644 $generated@@645 $generated@@646 $generated@@647))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (! (let (($generated@@655 ($generated@@76 (type $generated@@654))))
 (=> (and (and (and (and (and (and (= (type $generated@@648) $generated@@91) (= (type $generated@@649) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@650) ($generated@@75 $generated@@4))) (= (type $generated@@651) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@652) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@653) $generated@@91)) (= (type $generated@@654) ($generated@@75 $generated@@655))) (= ($generated@@0 ($generated@@584 ($generated@@642 $generated@@648 $generated@@649 $generated@@650 $generated@@651 $generated@@652) $generated@@653 $generated@@654))  (=> (and (not (= $generated@@653 $generated@@648)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@649 $generated@@653) $generated@@650))) (or ($generated@@0 ($generated@@95 $generated@@651 ($generated@@204 $generated@@653))) ($generated@@0 ($generated@@95 $generated@@652 ($generated@@204 $generated@@653))))))))
 :pattern ( ($generated@@584 ($generated@@642 $generated@@648 $generated@@649 $generated@@650 $generated@@651 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@80)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@73) (= (type $generated@@659) $generated@@73)) (and (= ($generated@@84 ($generated@@166 $generated@@658 $generated@@659)) $generated@@65) (= ($generated@@656 ($generated@@166 $generated@@658 $generated@@659)) $generated@@70)))
 :pattern ( ($generated@@166 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) $generated@@167) (= ($generated@@564 ($generated@@204 $generated@@660)) ($generated@@565 $generated@@660)))
 :pattern ( ($generated@@564 ($generated@@204 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@176) ($generated@@214 $generated@@661 ($generated@@89 0))) (and (= ($generated@@204 ($generated@@341 $generated@@2 $generated@@661)) $generated@@661) ($generated@@160 ($generated@@341 ($generated@@90 $generated@@176 $generated@@4) $generated@@661) ($generated@@89 0))))
 :pattern ( ($generated@@214 $generated@@661 ($generated@@89 0)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@662) $generated@@176) (= (type $generated@@663) $generated@@73)) ($generated@@214 $generated@@662 ($generated@@203 $generated@@663))) (and (= ($generated@@204 ($generated@@341 ($generated@@90 $generated@@176 $generated@@4) $generated@@662)) $generated@@662) ($generated@@160 ($generated@@341 ($generated@@90 $generated@@176 $generated@@4) $generated@@662) ($generated@@203 $generated@@663))))
 :pattern ( ($generated@@214 $generated@@662 ($generated@@203 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (= (type $generated@@664) $generated@@176) (= (type $generated@@665) $generated@@73)) ($generated@@214 $generated@@664 ($generated@@231 $generated@@665))) (and (= ($generated@@204 ($generated@@341 ($generated@@90 $generated@@176 $generated@@4) $generated@@664)) $generated@@664) ($generated@@160 ($generated@@341 ($generated@@90 $generated@@176 $generated@@4) $generated@@664) ($generated@@231 $generated@@665))))
 :pattern ( ($generated@@214 $generated@@664 ($generated@@231 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (= (type $generated@@666) $generated@@176) (= (type $generated@@667) $generated@@73)) ($generated@@214 $generated@@666 ($generated@@181 $generated@@667))) (and (= ($generated@@204 ($generated@@341 ($generated@@90 $generated@@176 $generated@@2) $generated@@666)) $generated@@666) ($generated@@160 ($generated@@341 ($generated@@90 $generated@@176 $generated@@2) $generated@@666) ($generated@@181 $generated@@667))))
 :pattern ( ($generated@@214 $generated@@666 ($generated@@181 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) $generated@@176) (= (type $generated@@669) $generated@@73)) ($generated@@214 $generated@@668 ($generated@@526 $generated@@669))) (and (= ($generated@@204 ($generated@@341 ($generated@@254 $generated@@176) $generated@@668)) $generated@@668) ($generated@@160 ($generated@@341 ($generated@@254 $generated@@176) $generated@@668) ($generated@@526 $generated@@669))))
 :pattern ( ($generated@@214 $generated@@668 ($generated@@526 $generated@@669)))
)))
(assert (= ($generated@@84 $generated@@150) $generated@@62))
(assert (= ($generated@@656 $generated@@150) $generated@@69))
(assert (= ($generated@@84 $generated@@194) $generated@@63))
(assert (= ($generated@@656 $generated@@194) $generated@@69))
(assert (= ($generated@@84 $generated@@154) $generated@@67))
(assert (= ($generated@@656 $generated@@154) $generated@@71))
(assert (= ($generated@@84 $generated@@197) $generated@@68))
(assert (= ($generated@@656 $generated@@197) $generated@@71))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@90 $generated@@176 $generated@@2)) (= (type $generated@@671) $generated@@73)) (= (type $generated@@672) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@670 ($generated@@181 $generated@@671) $generated@@672) (forall (($generated@@673 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@176) (< 0 ($generated ($generated@@95 $generated@@670 $generated@@673)))) ($generated@@240 $generated@@673 $generated@@671 $generated@@672))
 :pattern ( ($generated@@95 $generated@@670 $generated@@673))
))))
 :pattern ( ($generated@@88 $generated@@670 ($generated@@181 $generated@@671) $generated@@672))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (! (let (($generated@@676 ($generated@@93 (type $generated@@674))))
 (=> (and (= (type $generated@@674) ($generated@@90 $generated@@676 $generated@@4)) (= (type $generated@@675) ($generated@@90 $generated@@676 $generated@@4))) (= ($generated@@375 $generated@@674 $generated@@675) (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@676) (or (not ($generated@@0 ($generated@@95 $generated@@674 $generated@@677))) (not ($generated@@0 ($generated@@95 $generated@@675 $generated@@677)))))
 :pattern ( ($generated@@95 $generated@@674 $generated@@677))
 :pattern ( ($generated@@95 $generated@@675 $generated@@677))
)))))
 :pattern ( ($generated@@375 $generated@@674 $generated@@675))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (and (= (type $generated@@678) $generated@@167) (= (type $generated@@679) $generated@@73)) (= (type $generated@@680) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@158 $generated@@680) (and ($generated@@165 $generated@@678) (exists (($generated@@681 T@U) ) (!  (and (= (type $generated@@681) $generated@@73) ($generated@@88 $generated@@678 ($generated@@166 $generated@@679 $generated@@681) $generated@@680))
 :pattern ( ($generated@@88 $generated@@678 ($generated@@166 $generated@@679 $generated@@681) $generated@@680))
))))) ($generated@@240 ($generated@@174 $generated@@678) $generated@@679 $generated@@680))
 :pattern ( ($generated@@240 ($generated@@174 $generated@@678) $generated@@679 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ) (!  (=> (and (and (and (= (type $generated@@682) $generated@@167) (= (type $generated@@683) $generated@@73)) (= (type $generated@@684) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@158 $generated@@684) (and ($generated@@165 $generated@@682) (exists (($generated@@685 T@U) ) (!  (and (= (type $generated@@685) $generated@@73) ($generated@@88 $generated@@682 ($generated@@166 $generated@@685 $generated@@683) $generated@@684))
 :pattern ( ($generated@@88 $generated@@682 ($generated@@166 $generated@@685 $generated@@683) $generated@@684))
))))) ($generated@@240 ($generated@@175 $generated@@682) $generated@@683 $generated@@684))
 :pattern ( ($generated@@240 ($generated@@175 $generated@@682) $generated@@683 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) $generated@@176) (= (type $generated@@687) $generated@@176)) (= ($generated@@213 ($generated@@236 $generated@@686) ($generated@@236 $generated@@687)) ($generated@@236 ($generated@@213 $generated@@686 $generated@@687))))
 :pattern ( ($generated@@213 ($generated@@236 $generated@@686) ($generated@@236 $generated@@687)))
)))
(assert (forall (($generated@@688 T@U) ) (! (= ($generated@@204 ($generated@@236 $generated@@688)) ($generated@@236 ($generated@@204 $generated@@688)))
 :pattern ( ($generated@@204 ($generated@@236 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@255 (type $generated@@689))))
 (=> (and (= (type $generated@@689) ($generated@@254 $generated@@690)) (= ($generated@@253 $generated@@689) 0)) (= $generated@@689 ($generated@@252 $generated@@690))))
 :pattern ( ($generated@@253 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ($generated@@693 T@U) ) (! (let (($generated@@694 (type $generated@@692)))
 (=> (and (and (= (type $generated@@691) ($generated@@90 $generated@@694 $generated@@2)) (= (type $generated@@693) $generated@@2)) (<= 0 ($generated $generated@@693))) (= ($generated@@279 ($generated@@96 $generated@@691 $generated@@692 $generated@@693)) (+ (- ($generated@@279 $generated@@691) ($generated ($generated@@95 $generated@@691 $generated@@692))) ($generated $generated@@693)))))
 :pattern ( ($generated@@279 ($generated@@96 $generated@@691 $generated@@692 $generated@@693)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (! (let (($generated@@698 (type $generated@@697)))
 (=> (and (= (type $generated@@695) ($generated@@90 $generated@@698 $generated@@4)) (= (type $generated@@696) ($generated@@90 $generated@@698 $generated@@4))) (= ($generated@@0 ($generated@@95 ($generated@@187 $generated@@695 $generated@@696) $generated@@697))  (or ($generated@@0 ($generated@@95 $generated@@695 $generated@@697)) ($generated@@0 ($generated@@95 $generated@@696 $generated@@697))))))
 :pattern ( ($generated@@95 ($generated@@187 $generated@@695 $generated@@696) $generated@@697))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@699) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@700) $generated@@2)) ($generated@@88 $generated@@700 $generated@@46 $generated@@699))
 :pattern ( ($generated@@88 $generated@@700 $generated@@46 $generated@@699))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (= (type $generated@@701) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@702) $generated@@3)) ($generated@@88 $generated@@702 $generated@@47 $generated@@701))
 :pattern ( ($generated@@88 $generated@@702 $generated@@47 $generated@@701))
)))
(assert (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (= (type $generated@@703) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@704) $generated@@4)) ($generated@@88 $generated@@704 $generated@@44 $generated@@703))
 :pattern ( ($generated@@88 $generated@@704 $generated@@44 $generated@@703))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@705) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@706) $generated@@483)) ($generated@@88 $generated@@706 $generated@@45 $generated@@705))
 :pattern ( ($generated@@88 $generated@@706 $generated@@45 $generated@@705))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (= (type $generated@@707) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@708) $generated@@176)) ($generated@@88 $generated@@708 $generated@@48 $generated@@707))
 :pattern ( ($generated@@88 $generated@@708 $generated@@48 $generated@@707))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@709) ($generated@@254 $generated@@176)) (= (type $generated@@710) $generated@@73)) (= ($generated@@160 $generated@@709 ($generated@@526 $generated@@710)) (forall (($generated@@711 Int) ) (!  (=> (and (<= 0 $generated@@711) (< $generated@@711 ($generated@@253 $generated@@709))) ($generated@@214 ($generated@@527 $generated@@709 $generated@@711) $generated@@710))
 :pattern ( ($generated@@527 $generated@@709 $generated@@711))
))))
 :pattern ( ($generated@@160 $generated@@709 ($generated@@526 $generated@@710)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 Int) ) (!  (=> (= (type $generated@@713) ($generated@@254 $generated@@176)) (=> (and (<= 0 $generated@@714) (< $generated@@714 ($generated@@253 $generated@@713))) (< ($generated@@565 ($generated@@341 $generated@@167 ($generated@@527 $generated@@713 $generated@@714))) ($generated@@712 $generated@@713))))
 :pattern ( ($generated@@565 ($generated@@341 $generated@@167 ($generated@@527 $generated@@713 $generated@@714))))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (and (= (type $generated@@715) ($generated@@287 $generated@@176 $generated@@176)) (= (type $generated@@716) $generated@@73)) (= (type $generated@@717) $generated@@73)) ($generated@@160 $generated@@715 ($generated@@423 $generated@@716 $generated@@717))) (and (and ($generated@@160 ($generated@@285 $generated@@715) ($generated@@203 $generated@@716)) ($generated@@160 ($generated@@354 $generated@@715) ($generated@@203 $generated@@717))) ($generated@@160 ($generated@@397 $generated@@715) ($generated@@203 ($generated@@166 $generated@@716 $generated@@717)))))
 :pattern ( ($generated@@160 $generated@@715 ($generated@@423 $generated@@716 $generated@@717)))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (and (= (type $generated@@718) ($generated@@305 $generated@@176 $generated@@176)) (= (type $generated@@719) $generated@@73)) (= (type $generated@@720) $generated@@73)) ($generated@@160 $generated@@718 ($generated@@431 $generated@@719 $generated@@720))) (and (and ($generated@@160 ($generated@@303 $generated@@718) ($generated@@231 $generated@@719)) ($generated@@160 ($generated@@365 $generated@@718) ($generated@@231 $generated@@720))) ($generated@@160 ($generated@@405 $generated@@718) ($generated@@231 ($generated@@166 $generated@@719 $generated@@720)))))
 :pattern ( ($generated@@160 $generated@@718 ($generated@@431 $generated@@719 $generated@@720)))
)))
(assert (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@2) ($generated@@160 $generated@@721 $generated@@46))
 :pattern ( ($generated@@160 $generated@@721 $generated@@46))
)))
(assert (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@3) ($generated@@160 $generated@@722 $generated@@47))
 :pattern ( ($generated@@160 $generated@@722 $generated@@47))
)))
(assert (forall (($generated@@723 T@U) ) (!  (=> (= (type $generated@@723) $generated@@4) ($generated@@160 $generated@@723 $generated@@44))
 :pattern ( ($generated@@160 $generated@@723 $generated@@44))
)))
(assert (forall (($generated@@724 T@U) ) (!  (=> (= (type $generated@@724) $generated@@483) ($generated@@160 $generated@@724 $generated@@45))
 :pattern ( ($generated@@160 $generated@@724 $generated@@45))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@176) ($generated@@160 $generated@@725 $generated@@48))
 :pattern ( ($generated@@160 $generated@@725 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 () Bool)
(declare-fun $generated@@732 () T@U)
(declare-fun $generated@@733 () T@U)
(declare-fun $generated@@734 () Bool)
(declare-fun $generated@@735 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@726) ($generated@@586 $generated@@91 $generated@@4)) (= (type $generated@@727) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@728) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@729) ($generated@@90 $generated@@176 $generated@@4))) (= (type $generated@@730) $generated@@91)) (= (type $generated@@732) ($generated@@586 $generated@@91 $generated@@4))) (= (type $generated@@733) $generated@@91)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@736  (=> (= $generated@@726 ($generated@@642 $generated@@151 $generated@@727 $generated@@60 $generated@@728 $generated@@729)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (not (= $generated@@730 $generated@@151))) (=> (not (= $generated@@730 $generated@@151)) (=> (= $generated@@731 ($generated@@0 ($generated@@584 $generated@@732 $generated@@730 $generated@@157))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@733 $generated@@151))) (=> (not (= $generated@@733 $generated@@151)) (=> (= $generated@@734 ($generated@@0 ($generated@@584 $generated@@732 $generated@@733 $generated@@157))) (=> (and (= ($generated@@201 $generated@@727 $generated@@728 $generated@@729 $generated@@730 $generated@@733 $generated@@735) (+ (+ ($generated ($generated@@97 ($generated@@95 $generated@@727 $generated@@730) $generated@@157)) ($generated ($generated@@97 ($generated@@95 $generated@@727 $generated@@733) $generated@@157))) $generated@@735)) ($generated@@160 ($generated@@8 ($generated@@201 $generated@@727 $generated@@728 $generated@@729 $generated@@730 $generated@@733 $generated@@735)) $generated@@46)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@731) (=> $generated@@731 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@734)))))))))))))
(let (($generated@@737 true))
(let (($generated@@738  (=> (= $generated@@732 ($generated@@585 $generated@@151 $generated@@727 $generated@@60 $generated@@728 $generated@@729)) (=> (and ($generated@@0 ($generated@@95 ($generated@@187 $generated@@728 $generated@@729) ($generated@@204 $generated@@730))) ($generated@@0 ($generated@@95 $generated@@728 ($generated@@204 $generated@@733)))) (and (=> (= (ControlFlow 0 7) 1) $generated@@737) (=> (= (ControlFlow 0 7) 3) $generated@@736))))))
(let (($generated@@739  (=> (and (and (and ($generated@@158 $generated@@727) ($generated@@327 $generated@@727)) (and ($generated@@160 $generated@@728 ($generated@@203 $generated@@194)) ($generated@@160 $generated@@729 ($generated@@203 $generated@@194)))) (and (and ($generated@@160 $generated@@730 $generated@@197) ($generated@@160 $generated@@733 $generated@@197)) (and (= 1 $generated@@200) (= (ControlFlow 0 8) 7)))) $generated@@738)))
$generated@@739)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
