(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@257 (T@U T@U T@U) Bool)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@278 (Int) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@416 (T@T) T@U)
(declare-fun $generated@@440 () T@T)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@483 (T@U Int) T@U)
(declare-fun $generated@@492 (T@U) Int)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= ($generated@@1 $generated@@138) 14))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@138) (= (type $generated@@141) $generated@@138)) (and ($generated@@137 $generated@@140) ($generated@@137 $generated@@141))) (= ($generated@@136 $generated@@140 $generated@@141) (= ($generated@@139 $generated@@140) ($generated@@139 $generated@@141))))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@140))
 :pattern ( ($generated@@136 $generated@@140 $generated@@141) ($generated@@137 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= (type $generated@@143) $generated@@2) ($generated@@142 $generated@@143 ($generated@@79 0)))
 :pattern ( ($generated@@142 $generated@@143 ($generated@@79 0)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@145 $generated@@146 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@68) (= (type $generated@@149) $generated@@68)) (= (type $generated@@150) $generated@@138)) ($generated@@142 $generated@@150 ($generated@@145 $generated@@148 $generated@@149))) ($generated@@144 $generated@@150))
 :pattern ( ($generated@@144 $generated@@150) ($generated@@142 $generated@@150 ($generated@@145 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@138) (= (type $generated@@158) $generated@@138)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@72)
 :pattern ( ($generated@@159 $generated@@161))
)) (= (type $generated@@160) $generated@@138)))
(assert (= ($generated@@159 $generated@@160) $generated@@63))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@80 $generated@@154 $generated@@2)) (= (type $generated@@166) $generated@@68)) ($generated@@142 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@142 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@81 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@71 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@81) (= (type $generated@@217) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@218) ($generated@@70 $generated@@4))) (= (type $generated@@220) $generated@@81)) (= (type $generated@@221) ($generated@@70 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@138)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@154)) (= (type $generated@@230) $generated@@154)) (= ($generated@@142 ($generated@@223 $generated@@229 $generated@@230) ($generated@@145 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@142 ($generated@@223 $generated@@229 $generated@@230) ($generated@@145 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@68))
(assert ($generated@@142 $generated@@160 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@233)) ($generated@@78 $generated@@160 $generated@@231 $generated@@233))
 :pattern ( ($generated@@78 $generated@@160 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@138) (= (type $generated@@235) $generated@@138)) (= ($generated@@151 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@151 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@138) (= (type $generated@@237) $generated@@138)) (= ($generated@@136 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@136 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@68)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@80 $generated@@154 $generated@@4)) (= (type $generated@@241) $generated@@68)) (= ($generated@@142 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@154) ($generated@@0 ($generated@@85 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@85 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@142 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@68)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@154 $generated@@4)) (= (type $generated@@246) $generated@@68)) (= ($generated@@142 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) ($generated@@0 ($generated@@85 $generated@@245 $generated@@247))) ($generated@@224 $generated@@247 $generated@@246))
 :pattern ( ($generated@@85 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@142 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@138) (= (type $generated@@256) $generated@@138)) (and ($generated@@254 $generated@@255) ($generated@@254 $generated@@256))) (= ($generated@@136 $generated@@255 $generated@@256) true))
 :pattern ( ($generated@@136 $generated@@255 $generated@@256) ($generated@@254 $generated@@255))
 :pattern ( ($generated@@136 $generated@@255 $generated@@256) ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@258) $generated@@68) (= (type $generated@@259) $generated@@68)) (= (type $generated@@260) $generated@@154)) (= (type $generated@@261) $generated@@154)) (= (type $generated@@262) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@232 $generated@@262)) (= ($generated@@78 ($generated@@223 $generated@@260 $generated@@261) ($generated@@145 $generated@@258 $generated@@259) $generated@@262)  (and ($generated@@257 $generated@@260 $generated@@258 $generated@@262) ($generated@@257 $generated@@261 $generated@@259 $generated@@262))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@260 $generated@@261) ($generated@@145 $generated@@258 $generated@@259) $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@138) (= ($generated@@144 $generated@@263) (= ($generated@@159 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@144 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@138) (= ($generated@@254 $generated@@264) (= ($generated@@159 $generated@@264) $generated@@63)))
 :pattern ( ($generated@@254 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@138) (= ($generated@@137 $generated@@265) (= ($generated@@159 $generated@@265) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@138) ($generated@@144 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@154) (= (type $generated@@268) $generated@@154)) (= $generated@@266 ($generated@@223 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@144 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@138) ($generated@@254 $generated@@277)) (= $generated@@277 $generated@@160))
 :pattern ( ($generated@@254 $generated@@277))
)))
(assert (forall (($generated@@279 Int) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@138)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@138) ($generated@@137 $generated@@280)) (exists (($generated@@281 Int) ) (= $generated@@280 ($generated@@278 $generated@@281))))
 :pattern ( ($generated@@137 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@154)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@257 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@78 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@257 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@80 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@83 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@80 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@85 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@80 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@85 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@85 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@80 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@85 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@85 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@83 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@80 $generated@@330 $generated@@2)) (= ($generated@@163 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@85 $generated@@329 $generated@@331))) (<= ($generated ($generated@@85 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@85 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@163 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@154) ($generated@@224 $generated@@335 $generated@@231)) (and (= ($generated@@282 ($generated@@332 $generated@@138 $generated@@335)) $generated@@335) ($generated@@142 ($generated@@332 $generated@@138 $generated@@335) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@335 $generated@@231))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@85 ($generated@@293 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@293 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@297 (type $generated@@343))))
(let (($generated@@345 ($generated@@296 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@295 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@294 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@85 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@315 (type $generated@@347))))
(let (($generated@@349 ($generated@@314 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@313 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@312 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@85 ($generated@@311 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@311 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@80 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@80 $generated@@154 $generated@@2)) (= (type $generated@@359) $generated@@68)) (= ($generated@@142 $generated@@358 ($generated@@162 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@154) (< 0 ($generated ($generated@@85 $generated@@358 $generated@@360)))) ($generated@@224 $generated@@360 $generated@@359))
 :pattern ( ($generated@@85 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@142 $generated@@358 ($generated@@162 $generated@@359)))
)))
(assert (forall (($generated@@361 Int) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@362)) (= ($generated@@78 ($generated@@278 $generated@@361) $generated@@231 $generated@@362) ($generated@@78 ($generated@@8 $generated@@361) $generated@@46 $generated@@362)))
 :pattern ( ($generated@@78 ($generated@@278 $generated@@361) $generated@@231 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@80 $generated@@154 $generated@@4)) (= (type $generated@@364) $generated@@68)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@363 ($generated@@238 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@154) ($generated@@0 ($generated@@85 $generated@@363 $generated@@366))) ($generated@@257 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@85 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@363 ($generated@@238 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@80 $generated@@154 $generated@@4)) (= (type $generated@@368) $generated@@68)) (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@367 ($generated@@243 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@154) ($generated@@0 ($generated@@85 $generated@@367 $generated@@370))) ($generated@@257 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@85 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@78 $generated@@367 ($generated@@243 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated ($generated@@85 ($generated@@288 $generated@@372) $generated@@371)) 0))
 :pattern ( (let (($generated@@372 (type $generated@@371)))
($generated@@85 ($generated@@288 $generated@@372) $generated@@371)))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@80 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@297 (type $generated@@376))))
(let (($generated@@378 ($generated@@296 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@80 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@295 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@85 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@85 ($generated@@293 $generated@@379) ($generated@@152 ($generated@@332 $generated@@138 $generated@@380)))) (= ($generated@@85 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@332 $generated@@138 $generated@@380))) ($generated@@153 ($generated@@332 $generated@@138 $generated@@380))))))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@80 $generated@@154 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@315 (type $generated@@384))))
(let (($generated@@386 ($generated@@314 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@80 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@388) $generated@@154)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@85 ($generated@@311 $generated@@387) ($generated@@152 ($generated@@332 $generated@@138 $generated@@388)))) (= ($generated@@85 ($generated@@382 $generated@@387) ($generated@@152 ($generated@@332 $generated@@138 $generated@@388))) ($generated@@153 ($generated@@332 $generated@@138 $generated@@388))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@296 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@295 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@85 ($generated@@340 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@85 ($generated@@293 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@85 ($generated@@374 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@85 ($generated@@293 $generated@@389) $generated@@393))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@85 ($generated@@340 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@314 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@313 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@85 ($generated@@351 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@85 ($generated@@311 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@85 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@85 ($generated@@311 $generated@@394) $generated@@398))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@85 ($generated@@351 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@68)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@295 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@68)) (= (type $generated@@404) $generated@@68)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@85 ($generated@@293 $generated@@402) $generated@@406))) (and ($generated@@257 ($generated@@85 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@257 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@293 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@68)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@154) ($generated@@0 ($generated@@85 ($generated@@311 $generated@@410) $generated@@414))) (and ($generated@@257 ($generated@@85 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@257 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@311 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@138) ($generated@@142 $generated@@415 $generated@@231)) (or ($generated@@254 $generated@@415) ($generated@@137 $generated@@415)))
 :pattern ( ($generated@@137 $generated@@415) ($generated@@142 $generated@@415 $generated@@231))
 :pattern ( ($generated@@254 $generated@@415) ($generated@@142 $generated@@415 $generated@@231))
)))
(assert (forall (($generated@@417 T@T) ) (! (= (type ($generated@@416 $generated@@417)) ($generated@@80 $generated@@417 $generated@@4))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@315 (type $generated@@418))))
(let (($generated@@420 ($generated@@314 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@313 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@312 $generated@@420 $generated@@419)) (= ($generated@@311 $generated@@418) ($generated@@416 $generated@@420))))))
 :pattern ( ($generated@@311 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@315 (type $generated@@421))))
(let (($generated@@423 ($generated@@314 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@313 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@312 $generated@@423 $generated@@422)) (= ($generated@@351 $generated@@421) ($generated@@416 $generated@@422))))))
 :pattern ( ($generated@@351 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@315 (type $generated@@424))))
(let (($generated@@426 ($generated@@314 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@313 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@312 $generated@@426 $generated@@425)) (= ($generated@@381 $generated@@424) ($generated@@416 $generated@@154))))))
 :pattern ( ($generated@@381 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@297 (type $generated@@427))))
(let (($generated@@429 ($generated@@296 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@295 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@294 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@154) (= (type $generated@@431) $generated@@154)) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@427) ($generated@@282 ($generated@@223 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@373 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@315 (type $generated@@432))))
(let (($generated@@434 ($generated@@314 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@313 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@312 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@154) (= (type $generated@@436) $generated@@154)) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@432) ($generated@@282 ($generated@@223 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@381 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@154) ($generated@@224 $generated@@437 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@437)) $generated@@437) ($generated@@142 ($generated@@332 $generated@@2 $generated@@437) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@46))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@154) ($generated@@224 $generated@@438 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@438)) $generated@@438) ($generated@@142 ($generated@@332 $generated@@3 $generated@@438) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@47))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@154) ($generated@@224 $generated@@439 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@439)) $generated@@439) ($generated@@142 ($generated@@332 $generated@@4 $generated@@439) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@439 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@440) 20))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@154) ($generated@@224 $generated@@441 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@440 $generated@@441)) $generated@@441) ($generated@@142 ($generated@@332 $generated@@440 $generated@@441) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@441 $generated@@45))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (= (type $generated@@443) $generated@@68) (= ($generated@@224 ($generated@@282 $generated@@442) $generated@@443) ($generated@@142 $generated@@442 $generated@@443)))
 :pattern ( ($generated@@224 ($generated@@282 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@83 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@80 $generated@@445 $generated@@2)) (<= 0 ($generated@@287 $generated@@444))))
 :pattern ( ($generated@@287 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@272 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@271 $generated@@447)) (<= 0 ($generated@@270 $generated@@446))))
 :pattern ( ($generated@@270 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@68)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@68) (= (type $generated@@451) $generated@@68)) (= ($generated@@448 ($generated@@399 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@399 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@68)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@76 ($generated@@399 $generated@@456 $generated@@457)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@407 $generated@@460 $generated@@461)) $generated@@460))
 :pattern ( ($generated@@407 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@407 $generated@@464 $generated@@465)) $generated@@465))
 :pattern ( ($generated@@407 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@76 ($generated@@407 $generated@@466 $generated@@467)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@154) (= (type $generated@@469) $generated@@154)) (= ($generated@@159 ($generated@@223 $generated@@468 $generated@@469)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@145 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@145 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@145 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@145 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@154) (= (type $generated@@479) $generated@@154)) (= ($generated@@152 ($generated@@223 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@223 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@154) (= (type $generated@@481) $generated@@154)) (= ($generated@@153 ($generated@@223 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@223 $generated@@480 $generated@@481))
)))
(assert  (and (forall (($generated@@484 T@U) ) (! (= (type ($generated@@482 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@484))
)) (forall (($generated@@485 T@U) ($generated@@486 Int) ) (! (let (($generated@@487 ($generated@@272 (type $generated@@485))))
(= (type ($generated@@483 $generated@@485 $generated@@486)) $generated@@487))
 :pattern ( ($generated@@483 $generated@@485 $generated@@486))
))))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@271 $generated@@154)) (= (type $generated@@489) $generated@@68)) (= (type $generated@@490) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@488 ($generated@@482 $generated@@489) $generated@@490) (forall (($generated@@491 Int) ) (!  (=> (and (<= 0 $generated@@491) (< $generated@@491 ($generated@@270 $generated@@488))) ($generated@@257 ($generated@@483 $generated@@488 $generated@@491) $generated@@489 $generated@@490))
 :pattern ( ($generated@@483 $generated@@488 $generated@@491))
))))
 :pattern ( ($generated@@78 $generated@@488 ($generated@@482 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@493 Int) ) (! (= ($generated@@492 ($generated@@79 $generated@@493)) $generated@@493)
 :pattern ( ($generated@@79 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@494 ($generated@@238 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@238 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@76 ($generated@@238 $generated@@497)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@498 ($generated@@243 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@243 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@76 ($generated@@243 $generated@@501)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@68) (= ($generated@@502 ($generated@@162 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@162 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@76 ($generated@@162 $generated@@505)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@506 ($generated@@482 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@482 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@76 ($generated@@482 $generated@@509)) $generated@@57))
 :pattern ( ($generated@@482 $generated@@509))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@159 ($generated@@278 $generated@@510)) $generated@@65)
 :pattern ( ($generated@@278 $generated@@510))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@139 ($generated@@278 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@278 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 (type $generated@@512)))
(= ($generated@@332 $generated@@513 ($generated@@282 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@282 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@295 $generated@@154 $generated@@154)) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) $generated@@68)) (= ($generated@@142 $generated@@514 ($generated@@399 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@154) ($generated@@0 ($generated@@85 ($generated@@293 $generated@@514) $generated@@517))) (and ($generated@@224 ($generated@@85 ($generated@@374 $generated@@514) $generated@@517) $generated@@516) ($generated@@224 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@514) $generated@@517))
 :pattern ( ($generated@@85 ($generated@@293 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@142 $generated@@514 ($generated@@399 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) (= ($generated@@142 $generated@@518 ($generated@@407 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@154) ($generated@@0 ($generated@@85 ($generated@@311 $generated@@518) $generated@@521))) (and ($generated@@224 ($generated@@85 ($generated@@382 $generated@@518) $generated@@521) $generated@@520) ($generated@@224 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@518) $generated@@521))
 :pattern ( ($generated@@85 ($generated@@311 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@142 $generated@@518 ($generated@@407 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@154) (= (type $generated@@525) $generated@@154)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@223 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@223 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@154) (= (type $generated@@527) $generated@@154)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@223 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@223 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@142 ($generated@@278 $generated@@528) $generated@@231) ($generated@@142 ($generated@@8 $generated@@528) $generated@@46))
 :pattern ( ($generated@@142 ($generated@@278 $generated@@528) $generated@@231))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@154) (= (type $generated@@530) $generated@@68)) (= (type $generated@@531) $generated@@68)) ($generated@@224 $generated@@529 ($generated@@399 $generated@@530 $generated@@531))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@154 $generated@@154) $generated@@529)) $generated@@529) ($generated@@142 ($generated@@332 ($generated@@295 $generated@@154 $generated@@154) $generated@@529) ($generated@@399 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@529 ($generated@@399 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@154) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) ($generated@@224 $generated@@532 ($generated@@407 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@154 $generated@@154) $generated@@532)) $generated@@532) ($generated@@142 ($generated@@332 ($generated@@313 $generated@@154 $generated@@154) $generated@@532) ($generated@@407 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@224 $generated@@532 ($generated@@407 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@154)) ($generated@@224 $generated@@537 ($generated@@145 $generated@@535 $generated@@536))) (and (= ($generated@@282 ($generated@@332 $generated@@138 $generated@@537)) $generated@@537) ($generated@@142 ($generated@@332 $generated@@138 $generated@@537) ($generated@@145 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@145 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@85 ($generated@@416 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@85 ($generated@@416 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@73)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@68) (= (type $generated@@543) $generated@@68)) (and (= ($generated@@76 ($generated@@145 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@145 $generated@@542 $generated@@543)) $generated@@66)))
 :pattern ( ($generated@@145 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@138) (= (type $generated@@545) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@545) (and ($generated@@137 $generated@@544) ($generated@@78 $generated@@544 $generated@@231 $generated@@545)))) ($generated@@78 ($generated@@8 ($generated@@139 $generated@@544)) $generated@@46 $generated@@545))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@139 $generated@@544)) $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@138) (= ($generated@@522 ($generated@@282 $generated@@546)) ($generated@@523 $generated@@546)))
 :pattern ( ($generated@@522 ($generated@@282 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@154) ($generated@@224 $generated@@547 ($generated@@79 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@547)) $generated@@547) ($generated@@142 ($generated@@332 ($generated@@80 $generated@@154 $generated@@4) $generated@@547) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@79 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@154) (= (type $generated@@549) $generated@@68)) ($generated@@224 $generated@@548 ($generated@@238 $generated@@549))) (and (= ($generated@@282 ($generated@@332 ($generated@@80 $generated@@154 $generated@@4) $generated@@548)) $generated@@548) ($generated@@142 ($generated@@332 ($generated@@80 $generated@@154 $generated@@4) $generated@@548) ($generated@@238 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@238 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@154) (= (type $generated@@551) $generated@@68)) ($generated@@224 $generated@@550 ($generated@@243 $generated@@551))) (and (= ($generated@@282 ($generated@@332 ($generated@@80 $generated@@154 $generated@@4) $generated@@550)) $generated@@550) ($generated@@142 ($generated@@332 ($generated@@80 $generated@@154 $generated@@4) $generated@@550) ($generated@@243 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@68)) ($generated@@224 $generated@@552 ($generated@@162 $generated@@553))) (and (= ($generated@@282 ($generated@@332 ($generated@@80 $generated@@154 $generated@@2) $generated@@552)) $generated@@552) ($generated@@142 ($generated@@332 ($generated@@80 $generated@@154 $generated@@2) $generated@@552) ($generated@@162 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@162 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@68)) ($generated@@224 $generated@@554 ($generated@@482 $generated@@555))) (and (= ($generated@@282 ($generated@@332 ($generated@@271 $generated@@154) $generated@@554)) $generated@@554) ($generated@@142 ($generated@@332 ($generated@@271 $generated@@154) $generated@@554) ($generated@@482 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@482 $generated@@555)))
)))
(assert (= ($generated@@76 $generated@@231) $generated@@64))
(assert (= ($generated@@540 $generated@@231) $generated@@67))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@80 $generated@@154 $generated@@2)) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@556 ($generated@@162 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@154) (< 0 ($generated ($generated@@85 $generated@@556 $generated@@559)))) ($generated@@257 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@85 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@78 $generated@@556 ($generated@@162 $generated@@557) $generated@@558))
)))
(assert (= $generated@@160 ($generated@@250 $generated@@160)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@138) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@562) (and ($generated@@144 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@68) ($generated@@78 $generated@@560 ($generated@@145 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@78 $generated@@560 ($generated@@145 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@257 ($generated@@152 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@257 ($generated@@152 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@138) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@566) (and ($generated@@144 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@68) ($generated@@78 $generated@@564 ($generated@@145 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@78 $generated@@564 ($generated@@145 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@257 ($generated@@153 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@257 ($generated@@153 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@154)) (= ($generated@@223 ($generated@@250 $generated@@568) ($generated@@250 $generated@@569)) ($generated@@250 ($generated@@223 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@223 ($generated@@250 $generated@@568) ($generated@@250 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@248 $generated@@570))) ($generated@@250 ($generated@@282 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@248 $generated@@570))))
)))
(assert (forall (($generated@@571 Int) ) (! (= ($generated@@278 ($generated@@248 $generated@@571)) ($generated@@250 ($generated@@278 $generated@@571)))
 :pattern ( ($generated@@278 ($generated@@248 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@282 ($generated@@250 $generated@@572)) ($generated@@250 ($generated@@282 $generated@@572)))
 :pattern ( ($generated@@282 ($generated@@250 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@272 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@271 $generated@@574)) (= ($generated@@270 $generated@@573) 0)) (= $generated@@573 ($generated@@269 $generated@@574))))
 :pattern ( ($generated@@270 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@80 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@287 ($generated@@86 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@287 $generated@@575) ($generated ($generated@@85 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@287 ($generated@@86 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@580) $generated@@2)) ($generated@@78 $generated@@580 $generated@@46 $generated@@579))
 :pattern ( ($generated@@78 $generated@@580 $generated@@46 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@582) $generated@@3)) ($generated@@78 $generated@@582 $generated@@47 $generated@@581))
 :pattern ( ($generated@@78 $generated@@582 $generated@@47 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@584) $generated@@4)) ($generated@@78 $generated@@584 $generated@@44 $generated@@583))
 :pattern ( ($generated@@78 $generated@@584 $generated@@44 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@586) $generated@@440)) ($generated@@78 $generated@@586 $generated@@45 $generated@@585))
 :pattern ( ($generated@@78 $generated@@586 $generated@@45 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@588) $generated@@154)) ($generated@@78 $generated@@588 $generated@@48 $generated@@587))
 :pattern ( ($generated@@78 $generated@@588 $generated@@48 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@271 $generated@@154)) (= (type $generated@@590) $generated@@68)) (= ($generated@@142 $generated@@589 ($generated@@482 $generated@@590)) (forall (($generated@@591 Int) ) (!  (=> (and (<= 0 $generated@@591) (< $generated@@591 ($generated@@270 $generated@@589))) ($generated@@224 ($generated@@483 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@483 $generated@@589 $generated@@591))
))))
 :pattern ( ($generated@@142 $generated@@589 ($generated@@482 $generated@@590)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) ($generated@@271 $generated@@154)) (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@270 $generated@@593))) (< ($generated@@523 ($generated@@332 $generated@@138 ($generated@@483 $generated@@593 $generated@@594))) ($generated@@592 $generated@@593))))
 :pattern ( ($generated@@523 ($generated@@332 $generated@@138 ($generated@@483 $generated@@593 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@295 $generated@@154 $generated@@154)) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) $generated@@68)) ($generated@@142 $generated@@595 ($generated@@399 $generated@@596 $generated@@597))) (and (and ($generated@@142 ($generated@@293 $generated@@595) ($generated@@238 $generated@@596)) ($generated@@142 ($generated@@340 $generated@@595) ($generated@@238 $generated@@597))) ($generated@@142 ($generated@@373 $generated@@595) ($generated@@238 ($generated@@145 $generated@@596 $generated@@597)))))
 :pattern ( ($generated@@142 $generated@@595 ($generated@@399 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) ($generated@@142 $generated@@598 ($generated@@407 $generated@@599 $generated@@600))) (and (and ($generated@@142 ($generated@@311 $generated@@598) ($generated@@243 $generated@@599)) ($generated@@142 ($generated@@351 $generated@@598) ($generated@@243 $generated@@600))) ($generated@@142 ($generated@@381 $generated@@598) ($generated@@243 ($generated@@145 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@142 $generated@@598 ($generated@@407 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@2) ($generated@@142 $generated@@601 $generated@@46))
 :pattern ( ($generated@@142 $generated@@601 $generated@@46))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@3) ($generated@@142 $generated@@602 $generated@@47))
 :pattern ( ($generated@@142 $generated@@602 $generated@@47))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@4) ($generated@@142 $generated@@603 $generated@@44))
 :pattern ( ($generated@@142 $generated@@603 $generated@@44))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@440) ($generated@@142 $generated@@604 $generated@@45))
 :pattern ( ($generated@@142 $generated@@604 $generated@@45))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@154) ($generated@@142 $generated@@605 $generated@@48))
 :pattern ( ($generated@@142 $generated@@605 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(assert  (and (and (and (and (= (type $generated@@606) ($generated@@169 $generated@@81 $generated@@4)) (= (type $generated@@607) $generated@@81)) (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@609) $generated@@138)) (= (type $generated@@611) $generated@@138)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@613  (=> (and (= $generated@@606 ($generated@@168 $generated@@607 $generated@@608 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@136 $generated@@609 $generated@@609))))
(let (($generated@@614  (=> (and (and ($generated@@232 $generated@@608) ($generated@@610 $generated@@608)) (and ($generated@@142 $generated@@609 $generated@@231) ($generated@@78 $generated@@609 $generated@@231 $generated@@608))) (=> (and (and (and ($generated@@142 $generated@@611 $generated@@231) ($generated@@78 $generated@@611 $generated@@231 $generated@@608)) (= 1 $generated@@612)) (and ($generated@@137 $generated@@609) (= (ControlFlow 0 3) 2))) $generated@@613))))
$generated@@614)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@157 (T@U) Int)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@T) T@T)
(declare-fun $generated@@185 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (Int) Int)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (Int) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@316 (T@T) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@343 (T@T T@T) T@U)
(declare-fun $generated@@344 (T@T T@T) T@T)
(declare-fun $generated@@345 (T@T) T@T)
(declare-fun $generated@@346 (T@T) T@T)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@T T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@454 (T@T) T@U)
(declare-fun $generated@@478 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@644 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert  (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@78) (= (type $generated@@156) $generated@@78)) (and ($generated@@151 $generated@@155) ($generated@@151 $generated@@156))) (= ($generated@@150 $generated@@155 $generated@@156) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@155))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156) ($generated@@151 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@78) (= (type $generated@@159) $generated@@78)) (and ($generated@@82 $generated@@158) ($generated@@82 $generated@@159))) (= ($generated@@150 $generated@@158 $generated@@159) (= ($generated@@157 $generated@@158) ($generated@@157 $generated@@159))))
 :pattern ( ($generated@@150 $generated@@158 $generated@@159) ($generated@@82 $generated@@158))
 :pattern ( ($generated@@150 $generated@@158 $generated@@159) ($generated@@82 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@80 $generated@@160 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@160 ($generated@@93 0)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@163 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (and (= (type $generated@@165) $generated@@68) (= (type $generated@@166) $generated@@68)) (= (type $generated@@167) $generated@@78)) ($generated@@80 $generated@@167 ($generated@@162 $generated@@165 $generated@@166))) ($generated@@161 $generated@@167))
 :pattern ( ($generated@@161 $generated@@167) ($generated@@80 $generated@@167 ($generated@@162 $generated@@165 $generated@@166)))
)))
(assert  (and (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@153)
 :pattern ( ($generated@@169 $generated@@171))
)) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@153)
 :pattern ( ($generated@@170 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@78) (= (type $generated@@174) $generated@@78)) true) (= ($generated@@168 $generated@@173 $generated@@174)  (and (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)) (= ($generated@@170 $generated@@173) ($generated@@170 $generated@@174)))))
 :pattern ( ($generated@@168 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@179) $generated@@68)) ($generated@@80 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@80 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@1 ($generated@@182 $generated@@186 $generated@@187)) 16)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@183 ($generated@@182 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@182 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@184 ($generated@@182 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@182 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@184 (type $generated@@192))))
(= (type ($generated@@180 $generated@@192 $generated@@193 $generated@@194)) $generated@@195))
 :pattern ( ($generated@@180 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 (type $generated@@199)))
(let (($generated@@201 (type $generated@@197)))
(= (type ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199)) ($generated@@182 $generated@@201 $generated@@200))))
 :pattern ( ($generated@@185 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@184 (type $generated@@202))))
 (=> (= (type $generated@@205) $generated@@206) (= ($generated@@180 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@203 $generated@@204) $generated@@205)))
 :weight 0
))) (and (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@180 ($generated@@185 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@180 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@180 ($generated@@185 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@180 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or true (= ($generated@@180 ($generated@@185 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@180 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@182 $generated@@95 $generated@@4))
 :pattern ( ($generated@@181 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
))))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@71 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@95) (= (type $generated@@230) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@231) ($generated@@70 $generated@@4))) (= (type $generated@@233) $generated@@95)) (= (type $generated@@234) ($generated@@70 $generated@@235))) (= ($generated@@0 ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@180 ($generated@@181 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ) (! (= (type ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240)) ($generated@@182 $generated@@95 $generated@@4))
 :pattern ( ($generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (let (($generated@@247 ($generated@@71 (type $generated@@246))))
 (=> (and (and (and (and (= (type $generated@@241) $generated@@95) (= (type $generated@@242) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@243) ($generated@@70 $generated@@4))) (= (type $generated@@245) $generated@@95)) (= (type $generated@@246) ($generated@@70 $generated@@247))) (= ($generated@@0 ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))  (=> (and (not (= $generated@@245 $generated@@241)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@242 $generated@@245) $generated@@243))) $generated@@244))))
 :pattern ( ($generated@@180 ($generated@@236 $generated@@241 $generated@@242 $generated@@243 $generated@@244) $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@78)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@68) (= (type $generated@@253) $generated@@68)) (= (type $generated@@254) $generated@@153)) (= (type $generated@@255) $generated@@153)) (= ($generated@@80 ($generated@@248 $generated@@254 $generated@@255) ($generated@@162 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@80 ($generated@@248 $generated@@254 $generated@@255) ($generated@@162 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@78) (= (type $generated@@257) $generated@@78)) (= ($generated@@168 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@168 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@78) (= (type $generated@@259) $generated@@78)) (= ($generated@@150 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@150 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@68)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@263) $generated@@68)) (= ($generated@@80 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@153) ($generated@@0 ($generated@@99 $generated@@262 $generated@@264))) ($generated@@249 $generated@@264 $generated@@263))
 :pattern ( ($generated@@99 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@80 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@268) $generated@@68)) (= ($generated@@80 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@153) ($generated@@0 ($generated@@99 $generated@@267 $generated@@269))) ($generated@@249 $generated@@269 $generated@@268))
 :pattern ( ($generated@@99 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@80 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 Int) ) (! (= ($generated@@270 $generated@@271) $generated@@271)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@277 Int) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@78)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@278) $generated@@68) (= (type $generated@@279) $generated@@68)) (= (type $generated@@280) $generated@@78)) (or ($generated@@79 $generated@@278 $generated@@279 ($generated@@272 $generated@@280)) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@280 ($generated@@81 $generated@@278)) ($generated@@0 ($generated@@272 ($generated@@11 ($generated@@82 ($generated@@272 $generated@@280))))))))) (= ($generated@@77 $generated@@278 $generated@@279 ($generated@@272 $generated@@280)) ($generated@@272 ($generated@@276 ($generated@@270 ($generated@@157 ($generated@@272 $generated@@280)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@278 $generated@@279 ($generated@@272 $generated@@280)))
))))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) $generated@@68)) (= (type $generated@@285) $generated@@153)) (= (type $generated@@286) $generated@@153)) (= (type $generated@@287) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@281 $generated@@287)) (= ($generated@@92 ($generated@@248 $generated@@285 $generated@@286) ($generated@@162 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@92 ($generated@@248 $generated@@285 $generated@@286) ($generated@@162 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@72)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@78) (= ($generated@@161 $generated@@290) (= ($generated@@288 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@78) (= ($generated@@151 $generated@@291) (= ($generated@@288 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@151 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@78) (= ($generated@@82 $generated@@292) (= ($generated@@288 $generated@@292) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@78) ($generated@@161 $generated@@293)) (exists (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (and (and (= (type $generated@@294) $generated@@153) (= (type $generated@@295) $generated@@153)) (= $generated@@293 ($generated@@248 $generated@@294 $generated@@295)))
 :no-pattern (type $generated@@294)
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@161 $generated@@293))
)))
(assert  (and (and (forall (($generated@@300 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@300)) 17)) (forall (($generated@@301 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301))
))) (forall (($generated@@302 T@T) ) (! (= (type ($generated@@296 $generated@@302)) ($generated@@298 $generated@@302))
 :pattern ( ($generated@@296 $generated@@302))
))))
(assert (forall (($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@303)) 0)
 :pattern ( ($generated@@296 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@78)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@78) ($generated@@151 $generated@@306)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@153) (= $generated@@306 ($generated@@304 $generated@@307)))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@151 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@78) ($generated@@82 $generated@@308)) (exists (($generated@@309 Int) ) (= $generated@@308 ($generated@@276 $generated@@309))))
 :pattern ( ($generated@@82 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@153)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@68) (= (type $generated@@314) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@282 ($generated@@310 $generated@@312) $generated@@313 $generated@@314) ($generated@@92 $generated@@312 $generated@@313 $generated@@314)))
 :pattern ( ($generated@@282 ($generated@@310 $generated@@312) $generated@@313 $generated@@314))
)))
(assert (forall (($generated@@317 T@T) ) (! (= (type ($generated@@316 $generated@@317)) ($generated@@94 $generated@@317 $generated@@2))
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@97 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@94 $generated@@319 $generated@@2)) (and (= (= ($generated@@315 $generated@@318) 0) (= $generated@@318 ($generated@@316 $generated@@319))) (=> (not (= ($generated@@315 $generated@@318) 0)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@319) (< 0 ($generated ($generated@@99 $generated@@318 $generated@@320))))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@73)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@323)) $generated@@64) (= ($generated@@321 ($generated@@81 $generated@@323)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@323))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 18)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@94 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@99 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@99 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert  (and (and (and (and (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (= ($generated@@1 ($generated@@344 $generated@@347 $generated@@348)) 19)) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@345 ($generated@@344 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@344 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@346 ($generated@@344 $generated@@351 $generated@@352)) $generated@@352)
 :pattern ( ($generated@@344 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@345 (type $generated@@353))))
(= (type ($generated@@342 $generated@@353)) ($generated@@94 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@353))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= (type ($generated@@343 $generated@@355 $generated@@356)) ($generated@@344 $generated@@355 $generated@@356))
 :pattern ( ($generated@@343 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@T) ) (! (let (($generated@@359 (type $generated@@357)))
 (not ($generated@@0 ($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357))))
 :pattern ( (let (($generated@@359 (type $generated@@357)))
($generated@@99 ($generated@@342 ($generated@@343 $generated@@359 $generated@@358)) $generated@@357)))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@97 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@94 $generated@@361 $generated@@2)) (= ($generated@@176 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@99 $generated@@360 $generated@@362))) (<= ($generated ($generated@@99 $generated@@360 $generated@@362)) ($generated@@315 $generated@@360))))
 :pattern ( ($generated@@99 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@176 $generated@@360))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@328 (type $generated@@363))))
(let (($generated@@365 ($generated@@327 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@326 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@325 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@99 ($generated@@324 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@324 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@328 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@94 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@328 (type $generated@@370))))
(let (($generated@@372 ($generated@@327 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@326 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@325 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@99 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@346 (type $generated@@374))))
(let (($generated@@376 ($generated@@345 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@344 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@343 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@342 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@346 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@94 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@346 (type $generated@@381))))
(let (($generated@@383 ($generated@@345 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@344 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@343 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@99 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) $generated@@78) (= (type $generated@@386) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@281 $generated@@386) (and ($generated@@82 $generated@@385) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@68) ($generated@@92 $generated@@385 ($generated@@81 $generated@@387) $generated@@386))
 :pattern ( ($generated@@92 $generated@@385 ($generated@@81 $generated@@387) $generated@@386))
))))) ($generated@@92 ($generated@@8 ($generated@@157 $generated@@385)) $generated@@46 $generated@@386))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@157 $generated@@385)) $generated@@46 $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@80 $generated@@388 ($generated@@175 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@388 $generated@@390)))) ($generated@@249 $generated@@390 $generated@@389))
 :pattern ( ($generated@@99 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@388 ($generated@@175 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (and (= (type $generated@@391) $generated@@68) (= (type $generated@@392) $generated@@153)) (= (type $generated@@393) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@281 $generated@@393)) (= ($generated@@92 ($generated@@304 $generated@@392) ($generated@@81 $generated@@391) $generated@@393) ($generated@@282 $generated@@392 $generated@@391 $generated@@393)))
 :pattern ( ($generated@@92 ($generated@@304 $generated@@392) ($generated@@81 $generated@@391) $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 Int) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) $generated@@68) (= (type $generated@@396) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@281 $generated@@396)) (= ($generated@@92 ($generated@@276 $generated@@395) ($generated@@81 $generated@@394) $generated@@396) ($generated@@92 ($generated@@8 $generated@@395) $generated@@46 $generated@@396)))
 :pattern ( ($generated@@92 ($generated@@276 $generated@@395) ($generated@@81 $generated@@394) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@398) $generated@@68)) (= (type $generated@@399) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@397 ($generated@@260 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@153) ($generated@@0 ($generated@@99 $generated@@397 $generated@@400))) ($generated@@282 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@99 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@92 $generated@@397 ($generated@@260 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@401) ($generated@@94 $generated@@153 $generated@@4)) (= (type $generated@@402) $generated@@68)) (= (type $generated@@403) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@401 ($generated@@265 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@153) ($generated@@0 ($generated@@99 $generated@@401 $generated@@404))) ($generated@@282 $generated@@404 $generated@@402 $generated@@403))
 :pattern ( ($generated@@99 $generated@@401 $generated@@404))
))))
 :pattern ( ($generated@@92 $generated@@401 ($generated@@265 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(= ($generated ($generated@@99 ($generated@@316 $generated@@406) $generated@@405)) 0))
 :pattern ( (let (($generated@@406 (type $generated@@405)))
($generated@@99 ($generated@@316 $generated@@406) $generated@@405)))
)))
(assert  (and (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@407 $generated@@410)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@407 $generated@@410))
)) (forall (($generated@@411 T@T) ($generated@@412 T@U) ) (! (= (type ($generated@@408 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@408 $generated@@411 $generated@@412))
))) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@328 (type $generated@@413))))
(let (($generated@@415 ($generated@@327 (type $generated@@413))))
(= (type ($generated@@409 $generated@@413)) ($generated@@94 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@409 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@417) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@407 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@99 ($generated@@324 $generated@@416) ($generated@@169 ($generated@@408 $generated@@78 $generated@@417)))) (= ($generated@@99 ($generated@@409 $generated@@416) ($generated@@169 ($generated@@408 $generated@@78 $generated@@417))) ($generated@@170 ($generated@@408 $generated@@78 $generated@@417))))))
 :pattern ( ($generated@@99 ($generated@@407 $generated@@416) $generated@@417))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@94 $generated@@153 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@346 (type $generated@@421))))
(let (($generated@@423 ($generated@@345 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@94 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@344 $generated@@153 $generated@@153)) (= (type $generated@@425) $generated@@153)) (= ($generated@@0 ($generated@@99 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@424) ($generated@@169 ($generated@@408 $generated@@78 $generated@@425)))) (= ($generated@@99 ($generated@@419 $generated@@424) ($generated@@169 ($generated@@408 $generated@@78 $generated@@425))) ($generated@@170 ($generated@@408 $generated@@78 $generated@@425))))))
 :pattern ( ($generated@@99 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@327 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@326 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@99 ($generated@@367 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@99 ($generated@@324 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@99 ($generated@@409 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@99 ($generated@@324 $generated@@426) $generated@@430))
 :pattern ( ($generated@@99 ($generated@@409 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@99 ($generated@@367 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@345 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@344 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@99 ($generated@@378 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@99 ($generated@@342 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@99 ($generated@@419 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@431) $generated@@435))
 :pattern ( ($generated@@99 ($generated@@419 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@99 ($generated@@378 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@68)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) $generated@@68)) (= (type $generated@@442) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@324 $generated@@439) $generated@@443))) (and ($generated@@282 ($generated@@99 ($generated@@409 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@282 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@99 ($generated@@409 $generated@@439) $generated@@443))
 :pattern ( ($generated@@99 ($generated@@324 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@92 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@68)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@344 $generated@@153 $generated@@153)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@447) $generated@@451))) (and ($generated@@282 ($generated@@99 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@282 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@99 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@92 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (and (= (type $generated@@452) $generated@@68) (= (type $generated@@453) $generated@@78)) ($generated@@80 $generated@@453 ($generated@@81 $generated@@452))) (or ($generated@@151 $generated@@453) ($generated@@82 $generated@@453)))
 :pattern ( ($generated@@82 $generated@@453) ($generated@@80 $generated@@453 ($generated@@81 $generated@@452)))
 :pattern ( ($generated@@151 $generated@@453) ($generated@@80 $generated@@453 ($generated@@81 $generated@@452)))
)))
(assert (forall (($generated@@455 T@T) ) (! (= (type ($generated@@454 $generated@@455)) ($generated@@94 $generated@@455 $generated@@4))
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@346 (type $generated@@456))))
(let (($generated@@458 ($generated@@345 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@344 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@343 $generated@@458 $generated@@457)) (= ($generated@@342 $generated@@456) ($generated@@454 $generated@@458))))))
 :pattern ( ($generated@@342 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@346 (type $generated@@459))))
(let (($generated@@461 ($generated@@345 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@344 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@343 $generated@@461 $generated@@460)) (= ($generated@@378 $generated@@459) ($generated@@454 $generated@@460))))))
 :pattern ( ($generated@@378 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@346 (type $generated@@462))))
(let (($generated@@464 ($generated@@345 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@344 $generated@@464 $generated@@463)) (= (= $generated@@462 ($generated@@343 $generated@@464 $generated@@463)) (= ($generated@@418 $generated@@462) ($generated@@454 $generated@@153))))))
 :pattern ( ($generated@@418 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@328 (type $generated@@465))))
(let (($generated@@467 ($generated@@327 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@326 $generated@@467 $generated@@466)) (or (= $generated@@465 ($generated@@325 $generated@@467 $generated@@466)) (exists (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (and (and (= (type $generated@@468) $generated@@153) (= (type $generated@@469) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@407 $generated@@465) ($generated@@310 ($generated@@248 $generated@@468 $generated@@469)))))
 :no-pattern (type $generated@@468)
 :no-pattern (type $generated@@469)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
 :no-pattern ($generated $generated@@469)
 :no-pattern ($generated@@0 $generated@@469)
))))))
 :pattern ( ($generated@@407 $generated@@465))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@346 (type $generated@@470))))
(let (($generated@@472 ($generated@@345 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@344 $generated@@472 $generated@@471)) (or (= $generated@@470 ($generated@@343 $generated@@472 $generated@@471)) (exists (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (and (and (= (type $generated@@473) $generated@@153) (= (type $generated@@474) $generated@@153)) ($generated@@0 ($generated@@99 ($generated@@418 $generated@@470) ($generated@@310 ($generated@@248 $generated@@473 $generated@@474)))))
 :no-pattern (type $generated@@473)
 :no-pattern (type $generated@@474)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
 :no-pattern ($generated $generated@@474)
 :no-pattern ($generated@@0 $generated@@474)
))))))
 :pattern ( ($generated@@418 $generated@@470))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@153) ($generated@@249 $generated@@475 $generated@@46)) (and (= ($generated@@310 ($generated@@408 $generated@@2 $generated@@475)) $generated@@475) ($generated@@80 ($generated@@408 $generated@@2 $generated@@475) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@475 $generated@@46))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@153) ($generated@@249 $generated@@476 $generated@@47)) (and (= ($generated@@310 ($generated@@408 $generated@@3 $generated@@476)) $generated@@476) ($generated@@80 ($generated@@408 $generated@@3 $generated@@476) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@476 $generated@@47))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@153) ($generated@@249 $generated@@477 $generated@@44)) (and (= ($generated@@310 ($generated@@408 $generated@@4 $generated@@477)) $generated@@477) ($generated@@80 ($generated@@408 $generated@@4 $generated@@477) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@477 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@478) 20))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@153) ($generated@@249 $generated@@479 $generated@@45)) (and (= ($generated@@310 ($generated@@408 $generated@@478 $generated@@479)) $generated@@479) ($generated@@80 ($generated@@408 $generated@@478 $generated@@479) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@479 $generated@@45))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@68) (= ($generated@@249 ($generated@@310 $generated@@480) $generated@@481) ($generated@@80 $generated@@480 $generated@@481)))
 :pattern ( ($generated@@249 ($generated@@310 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@97 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@94 $generated@@483 $generated@@2)) (<= 0 ($generated@@315 $generated@@482))))
 :pattern ( ($generated@@315 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@299 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@298 $generated@@485)) (<= 0 ($generated@@297 $generated@@484))))
 :pattern ( ($generated@@297 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@436 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@436 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@68)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@490 ($generated@@436 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@436 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@90 ($generated@@436 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@444 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@444 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@444 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@444 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@90 ($generated@@444 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@153) (= (type $generated@@507) $generated@@153)) (= ($generated@@288 ($generated@@248 $generated@@506 $generated@@507)) $generated@@61))
 :pattern ( ($generated@@248 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@508 ($generated@@162 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@162 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@162 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@162 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@153) (= (type $generated@@517) $generated@@153)) (= ($generated@@169 ($generated@@248 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@248 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@153) (= (type $generated@@519) $generated@@153)) (= ($generated@@170 ($generated@@248 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@248 $generated@@518 $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ($generated@@524 Int) ) (! (let (($generated@@525 ($generated@@299 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523 $generated@@524)) $generated@@525))
 :pattern ( ($generated@@521 $generated@@523 $generated@@524))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@298 $generated@@153)) (= (type $generated@@527) $generated@@68)) (= (type $generated@@528) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@526 ($generated@@520 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@297 $generated@@526))) ($generated@@282 ($generated@@521 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@521 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@92 $generated@@526 ($generated@@520 $generated@@527) $generated@@528))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= (type $generated@@532) $generated@@78)) (or ($generated@@79 $generated@@530 $generated@@531 $generated@@532) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@532 ($generated@@81 $generated@@530)) ($generated@@82 $generated@@532))))) (= ($generated@@77 $generated@@530 $generated@@531 $generated@@532) ($generated@@276 ($generated@@157 $generated@@532))))
 :pattern ( ($generated@@77 $generated@@530 $generated@@531 $generated@@532))
))))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@93 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@93 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@260 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@260 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@90 ($generated@@260 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@539 ($generated@@265 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@265 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@90 ($generated@@265 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@265 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@543 ($generated@@175 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@175 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@68) (= ($generated@@90 ($generated@@175 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@520 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@520 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@90 ($generated@@520 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@520 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@153) (= ($generated@@288 ($generated@@304 $generated@@551)) $generated@@63))
 :pattern ( ($generated@@304 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@552 ($generated@@81 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@81 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@153) (= ($generated@@152 ($generated@@304 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@304 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@288 ($generated@@276 $generated@@556)) $generated@@65)
 :pattern ( ($generated@@276 $generated@@556))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@157 ($generated@@276 $generated@@557)) $generated@@557)
 :pattern ( ($generated@@276 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
(= ($generated@@408 $generated@@559 ($generated@@310 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@310 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) (= ($generated@@80 $generated@@560 ($generated@@436 $generated@@561 $generated@@562)) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@324 $generated@@560) $generated@@563))) (and ($generated@@249 ($generated@@99 ($generated@@409 $generated@@560) $generated@@563) $generated@@562) ($generated@@249 $generated@@563 $generated@@561)))
 :pattern ( ($generated@@99 ($generated@@409 $generated@@560) $generated@@563))
 :pattern ( ($generated@@99 ($generated@@324 $generated@@560) $generated@@563))
))))
 :pattern ( ($generated@@80 $generated@@560 ($generated@@436 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@564) ($generated@@344 $generated@@153 $generated@@153)) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@68)) (= ($generated@@80 $generated@@564 ($generated@@444 $generated@@565 $generated@@566)) (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@153) ($generated@@0 ($generated@@99 ($generated@@342 $generated@@564) $generated@@567))) (and ($generated@@249 ($generated@@99 ($generated@@419 $generated@@564) $generated@@567) $generated@@566) ($generated@@249 $generated@@567 $generated@@565)))
 :pattern ( ($generated@@99 ($generated@@419 $generated@@564) $generated@@567))
 :pattern ( ($generated@@99 ($generated@@342 $generated@@564) $generated@@567))
))))
 :pattern ( ($generated@@80 $generated@@564 ($generated@@444 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@68) (= (type $generated@@569) $generated@@153)) (= ($generated@@80 ($generated@@304 $generated@@569) ($generated@@81 $generated@@568)) ($generated@@249 $generated@@569 $generated@@568)))
 :pattern ( ($generated@@80 ($generated@@304 $generated@@569) ($generated@@81 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 Int) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@80 ($generated@@276 $generated@@571) ($generated@@81 $generated@@570)) ($generated@@80 ($generated@@8 $generated@@571) $generated@@46)))
 :pattern ( ($generated@@80 ($generated@@276 $generated@@571) ($generated@@81 $generated@@570)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@153) (= (type $generated@@575) $generated@@153)) (< ($generated@@572 $generated@@574) ($generated@@573 ($generated@@248 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@248 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@153) (= (type $generated@@577) $generated@@153)) (< ($generated@@572 $generated@@577) ($generated@@573 ($generated@@248 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@248 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@153) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) ($generated@@249 $generated@@578 ($generated@@436 $generated@@579 $generated@@580))) (and (= ($generated@@310 ($generated@@408 ($generated@@326 $generated@@153 $generated@@153) $generated@@578)) $generated@@578) ($generated@@80 ($generated@@408 ($generated@@326 $generated@@153 $generated@@153) $generated@@578) ($generated@@436 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@249 $generated@@578 ($generated@@436 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@153) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) ($generated@@249 $generated@@581 ($generated@@444 $generated@@582 $generated@@583))) (and (= ($generated@@310 ($generated@@408 ($generated@@344 $generated@@153 $generated@@153) $generated@@581)) $generated@@581) ($generated@@80 ($generated@@408 ($generated@@344 $generated@@153 $generated@@153) $generated@@581) ($generated@@444 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@249 $generated@@581 ($generated@@444 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@68) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) $generated@@153)) ($generated@@249 $generated@@586 ($generated@@162 $generated@@584 $generated@@585))) (and (= ($generated@@310 ($generated@@408 $generated@@78 $generated@@586)) $generated@@586) ($generated@@80 ($generated@@408 $generated@@78 $generated@@586) ($generated@@162 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@249 $generated@@586 ($generated@@162 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@153) (< ($generated@@572 $generated@@587) ($generated@@573 ($generated@@304 $generated@@587))))
 :pattern ( ($generated@@304 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@78) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@281 $generated@@590) (and ($generated@@151 $generated@@588) ($generated@@92 $generated@@588 ($generated@@81 $generated@@589) $generated@@590)))) ($generated@@282 ($generated@@152 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@282 ($generated@@152 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@99 ($generated@@454 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@99 ($generated@@454 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@68)) (and (= ($generated@@90 ($generated@@162 $generated@@593 $generated@@594)) $generated@@62) (= ($generated@@321 ($generated@@162 $generated@@593 $generated@@594)) $generated@@66)))
 :pattern ( ($generated@@162 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@78) (= ($generated@@572 ($generated@@310 $generated@@595)) ($generated@@573 $generated@@595)))
 :pattern ( ($generated@@572 ($generated@@310 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@153) ($generated@@249 $generated@@596 ($generated@@93 0))) (and (= ($generated@@310 ($generated@@408 $generated@@2 $generated@@596)) $generated@@596) ($generated@@80 ($generated@@408 ($generated@@94 $generated@@153 $generated@@4) $generated@@596) ($generated@@93 0))))
 :pattern ( ($generated@@249 $generated@@596 ($generated@@93 0)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@153) (= (type $generated@@598) $generated@@68)) ($generated@@249 $generated@@597 ($generated@@260 $generated@@598))) (and (= ($generated@@310 ($generated@@408 ($generated@@94 $generated@@153 $generated@@4) $generated@@597)) $generated@@597) ($generated@@80 ($generated@@408 ($generated@@94 $generated@@153 $generated@@4) $generated@@597) ($generated@@260 $generated@@598))))
 :pattern ( ($generated@@249 $generated@@597 ($generated@@260 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@153) (= (type $generated@@600) $generated@@68)) ($generated@@249 $generated@@599 ($generated@@265 $generated@@600))) (and (= ($generated@@310 ($generated@@408 ($generated@@94 $generated@@153 $generated@@4) $generated@@599)) $generated@@599) ($generated@@80 ($generated@@408 ($generated@@94 $generated@@153 $generated@@4) $generated@@599) ($generated@@265 $generated@@600))))
 :pattern ( ($generated@@249 $generated@@599 ($generated@@265 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@153) (= (type $generated@@602) $generated@@68)) ($generated@@249 $generated@@601 ($generated@@175 $generated@@602))) (and (= ($generated@@310 ($generated@@408 ($generated@@94 $generated@@153 $generated@@2) $generated@@601)) $generated@@601) ($generated@@80 ($generated@@408 ($generated@@94 $generated@@153 $generated@@2) $generated@@601) ($generated@@175 $generated@@602))))
 :pattern ( ($generated@@249 $generated@@601 ($generated@@175 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@153) (= (type $generated@@604) $generated@@68)) ($generated@@249 $generated@@603 ($generated@@520 $generated@@604))) (and (= ($generated@@310 ($generated@@408 ($generated@@298 $generated@@153) $generated@@603)) $generated@@603) ($generated@@80 ($generated@@408 ($generated@@298 $generated@@153) $generated@@603) ($generated@@520 $generated@@604))))
 :pattern ( ($generated@@249 $generated@@603 ($generated@@520 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@68) (= (type $generated@@606) $generated@@153)) ($generated@@249 $generated@@606 ($generated@@81 $generated@@605))) (and (= ($generated@@310 ($generated@@408 $generated@@78 $generated@@606)) $generated@@606) ($generated@@80 ($generated@@408 $generated@@78 $generated@@606) ($generated@@81 $generated@@605))))
 :pattern ( ($generated@@249 $generated@@606 ($generated@@81 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@94 $generated@@153 $generated@@2)) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@607 ($generated@@175 $generated@@608) $generated@@609) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@153) (< 0 ($generated ($generated@@99 $generated@@607 $generated@@610)))) ($generated@@282 $generated@@610 $generated@@608 $generated@@609))
 :pattern ( ($generated@@99 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@92 $generated@@607 ($generated@@175 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@78) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@281 $generated@@613) (and ($generated@@161 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@68) ($generated@@92 $generated@@611 ($generated@@162 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 ($generated@@162 $generated@@612 $generated@@614) $generated@@613))
))))) ($generated@@282 ($generated@@169 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@282 ($generated@@169 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@78) (= (type $generated@@616) $generated@@68)) (= (type $generated@@617) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@281 $generated@@617) (and ($generated@@161 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@68) ($generated@@92 $generated@@615 ($generated@@162 $generated@@618 $generated@@616) $generated@@617))
 :pattern ( ($generated@@92 $generated@@615 ($generated@@162 $generated@@618 $generated@@616) $generated@@617))
))))) ($generated@@282 ($generated@@170 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@282 ($generated@@170 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@153) (= (type $generated@@620) $generated@@153)) (= ($generated@@248 ($generated@@272 $generated@@619) ($generated@@272 $generated@@620)) ($generated@@272 ($generated@@248 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@248 ($generated@@272 $generated@@619) ($generated@@272 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ) (! (= ($generated@@310 ($generated@@8 ($generated@@270 $generated@@621))) ($generated@@272 ($generated@@310 ($generated@@8 $generated@@621))))
 :pattern ( ($generated@@310 ($generated@@8 ($generated@@270 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@153) (= ($generated@@304 ($generated@@272 $generated@@622)) ($generated@@272 ($generated@@304 $generated@@622))))
 :pattern ( ($generated@@304 ($generated@@272 $generated@@622)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@276 ($generated@@270 $generated@@623)) ($generated@@272 ($generated@@276 $generated@@623)))
 :pattern ( ($generated@@276 ($generated@@270 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@310 ($generated@@272 $generated@@624)) ($generated@@272 ($generated@@310 $generated@@624)))
 :pattern ( ($generated@@310 ($generated@@272 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@299 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@298 $generated@@626)) (= ($generated@@297 $generated@@625) 0)) (= $generated@@625 ($generated@@296 $generated@@626))))
 :pattern ( ($generated@@297 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@94 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@315 ($generated@@100 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@315 $generated@@627) ($generated ($generated@@99 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@315 ($generated@@100 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@632) $generated@@2)) ($generated@@92 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@92 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@634) $generated@@3)) ($generated@@92 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@92 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@636) $generated@@4)) ($generated@@92 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@92 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@638) $generated@@478)) ($generated@@92 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@92 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@640) $generated@@153)) ($generated@@92 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@92 $generated@@640 $generated@@48 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@298 $generated@@153)) (= (type $generated@@642) $generated@@68)) (= ($generated@@80 $generated@@641 ($generated@@520 $generated@@642)) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@297 $generated@@641))) ($generated@@249 ($generated@@521 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@521 $generated@@641 $generated@@643))
))))
 :pattern ( ($generated@@80 $generated@@641 ($generated@@520 $generated@@642)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@298 $generated@@153)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@297 $generated@@645))) (< ($generated@@573 ($generated@@408 $generated@@78 ($generated@@521 $generated@@645 $generated@@646))) ($generated@@644 $generated@@645))))
 :pattern ( ($generated@@573 ($generated@@408 $generated@@78 ($generated@@521 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@326 $generated@@153 $generated@@153)) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@68)) ($generated@@80 $generated@@647 ($generated@@436 $generated@@648 $generated@@649))) (and (and ($generated@@80 ($generated@@324 $generated@@647) ($generated@@260 $generated@@648)) ($generated@@80 ($generated@@367 $generated@@647) ($generated@@260 $generated@@649))) ($generated@@80 ($generated@@407 $generated@@647) ($generated@@260 ($generated@@162 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@80 $generated@@647 ($generated@@436 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@344 $generated@@153 $generated@@153)) (= (type $generated@@651) $generated@@68)) (= (type $generated@@652) $generated@@68)) ($generated@@80 $generated@@650 ($generated@@444 $generated@@651 $generated@@652))) (and (and ($generated@@80 ($generated@@342 $generated@@650) ($generated@@265 $generated@@651)) ($generated@@80 ($generated@@378 $generated@@650) ($generated@@265 $generated@@652))) ($generated@@80 ($generated@@418 $generated@@650) ($generated@@265 ($generated@@162 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@80 $generated@@650 ($generated@@444 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@80 $generated@@653 $generated@@46))
 :pattern ( ($generated@@80 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@80 $generated@@654 $generated@@47))
 :pattern ( ($generated@@80 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@80 $generated@@655 $generated@@44))
 :pattern ( ($generated@@80 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@478) ($generated@@80 $generated@@656 $generated@@45))
 :pattern ( ($generated@@80 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@153) ($generated@@80 $generated@@657 $generated@@48))
 :pattern ( ($generated@@80 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(declare-fun $generated@@664 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@658) ($generated@@182 $generated@@95 $generated@@4)) (= (type $generated@@659) $generated@@95)) (= (type $generated@@660) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@661) $generated@@78)) (= (type $generated@@662) ($generated@@182 $generated@@95 $generated@@4))) (= (type $generated@@664) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@665  (=> (and (= $generated@@658 ($generated@@236 $generated@@659 $generated@@660 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@82 $generated@@661))))
(let (($generated@@666 true))
(let (($generated@@667  (=> (and (= $generated@@662 ($generated@@181 $generated@@659 $generated@@660 $generated@@60 false)) ($generated@@82 $generated@@661)) (and (=> (= (ControlFlow 0 4) 1) $generated@@666) (=> (= (ControlFlow 0 4) 3) $generated@@665)))))
(let (($generated@@668  (=> (and ($generated@@281 $generated@@660) ($generated@@663 $generated@@660)) (=> (and (and ($generated@@80 $generated@@661 ($generated@@81 $generated@@664)) ($generated@@92 $generated@@661 ($generated@@81 $generated@@664) $generated@@660)) (and (= 1 $generated@@76) (= (ControlFlow 0 5) 4))) $generated@@667))))
$generated@@668)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 () Int)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@301 (Int) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@338 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@T T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@T T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@475 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 (T@U Int) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(declare-fun $generated@@569 (T@U) Int)
(declare-fun $generated@@640 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@138) (= (type $generated@@147) $generated@@138)) (and ($generated@@144 $generated@@146) ($generated@@144 $generated@@147))) (= ($generated@@136 $generated@@146 $generated@@147) (= ($generated@@145 $generated@@146) ($generated@@145 $generated@@147))))
 :pattern ( ($generated@@136 $generated@@146 $generated@@147) ($generated@@144 $generated@@146))
 :pattern ( ($generated@@136 $generated@@146 $generated@@147) ($generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@79 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@79 0)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@152 $generated@@153)) $generated@@68)
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@68) (= (type $generated@@155) $generated@@68)) (= (type $generated@@156) $generated@@138)) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155))) ($generated@@150 $generated@@156))
 :pattern ( ($generated@@150 $generated@@156) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155)))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@140)
 :pattern ( ($generated@@158 $generated@@160))
)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@140)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@138) (= (type $generated@@163) $generated@@138)) true) (= ($generated@@157 $generated@@162 $generated@@163)  (and (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)) (= ($generated@@159 $generated@@162) ($generated@@159 $generated@@163)))))
 :pattern ( ($generated@@157 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@148 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@148 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ) (! (= (type ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (let (($generated@@236 ($generated@@71 (type $generated@@235))))
 (=> (and (and (and (and (= (type $generated@@230) $generated@@81) (= (type $generated@@231) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@232) ($generated@@70 $generated@@4))) (= (type $generated@@234) $generated@@81)) (= (type $generated@@235) ($generated@@70 $generated@@236))) (= ($generated@@0 ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (not (= $generated@@234 $generated@@230)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@231 $generated@@234) $generated@@232))) $generated@@233))))
 :pattern ( ($generated@@169 ($generated@@225 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@237 $generated@@239 $generated@@240)) $generated@@138)
 :pattern ( ($generated@@237 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and (= (type $generated@@241) $generated@@68) (= (type $generated@@242) $generated@@68)) (= (type $generated@@243) $generated@@140)) (= (type $generated@@244) $generated@@140)) (= ($generated@@148 ($generated@@237 $generated@@243 $generated@@244) ($generated@@151 $generated@@241 $generated@@242))  (and ($generated@@238 $generated@@243 $generated@@241) ($generated@@238 $generated@@244 $generated@@242))))
 :pattern ( ($generated@@148 ($generated@@237 $generated@@243 $generated@@244) ($generated@@151 $generated@@241 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@138) (= (type $generated@@246) $generated@@138)) (= ($generated@@157 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@157 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@138) (= (type $generated@@248) $generated@@138)) (= ($generated@@136 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@136 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@148 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@140) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@238 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@148 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@257) $generated@@68)) (= ($generated@@148 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@140) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@238 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@148 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@266 $generated@@269 $generated@@270)) $generated@@140)
 :pattern ( ($generated@@266 $generated@@269 $generated@@270))
)) (forall (($generated@@271 T@U) ) (! (= (type ($generated@@268 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@271))
))))
(assert  (=> (<= 0 $generated@@265) (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (= (type $generated@@272) $generated@@68) (= (type $generated@@273) $generated@@138)) (or ($generated@@267 $generated@@272 $generated@@273) (and (not (= 0 $generated@@265)) (and ($generated@@148 $generated@@273 ($generated@@268 $generated@@272)) ($generated@@137 $generated@@273))))) (= ($generated@@266 $generated@@272 $generated@@273) ($generated@@139 $generated@@273)))
 :pattern ( ($generated@@266 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@68)) (= (type $generated@@278) $generated@@140)) (= (type $generated@@279) $generated@@140)) (= (type $generated@@280) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@274 $generated@@280)) (= ($generated@@78 ($generated@@237 $generated@@278 $generated@@279) ($generated@@151 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@78 ($generated@@237 $generated@@278 $generated@@279) ($generated@@151 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@72)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@138) (= ($generated@@150 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@138) (= ($generated@@137 $generated@@284) (= ($generated@@281 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@138) (= ($generated@@144 $generated@@285) (= ($generated@@281 $generated@@285) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@138) ($generated@@150 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@140) (= (type $generated@@288) $generated@@140)) (= $generated@@286 ($generated@@237 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@150 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@138)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@138) ($generated@@137 $generated@@299)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@140) (= $generated@@299 ($generated@@297 $generated@@300)))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@137 $generated@@299))
)))
(assert (forall (($generated@@302 Int) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@138)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@138) ($generated@@144 $generated@@303)) (exists (($generated@@304 Int) ) (= $generated@@303 ($generated@@301 $generated@@304))))
 :pattern ( ($generated@@144 $generated@@303))
)))
(assert (forall (($generated@@306 T@U) ) (! (= (type ($generated@@305 $generated@@306)) $generated@@140)
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@68) (= (type $generated@@309) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@275 ($generated@@305 $generated@@307) $generated@@308 $generated@@309) ($generated@@78 $generated@@307 $generated@@308 $generated@@309)))
 :pattern ( ($generated@@275 ($generated@@305 $generated@@307) $generated@@308 $generated@@309))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@80 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@83 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@80 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@85 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@73)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@68) (and (= ($generated@@76 ($generated@@268 $generated@@318)) $generated@@64) (= ($generated@@316 ($generated@@268 $generated@@318)) $generated@@67)))
 :pattern ( ($generated@@268 $generated@@318))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 18)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@80 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert  (and (and (and (and (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (= ($generated@@1 ($generated@@339 $generated@@342 $generated@@343)) 19)) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@340 ($generated@@339 $generated@@344 $generated@@345)) $generated@@344)
 :pattern ( ($generated@@339 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@341 ($generated@@339 $generated@@346 $generated@@347)) $generated@@347)
 :pattern ( ($generated@@339 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@340 (type $generated@@348))))
(= (type ($generated@@337 $generated@@348)) ($generated@@80 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@348))
))) (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (! (= (type ($generated@@338 $generated@@350 $generated@@351)) ($generated@@339 $generated@@350 $generated@@351))
 :pattern ( ($generated@@338 $generated@@350 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@T) ) (! (let (($generated@@354 (type $generated@@352)))
 (not ($generated@@0 ($generated@@85 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352))))
 :pattern ( (let (($generated@@354 (type $generated@@352)))
($generated@@85 ($generated@@337 ($generated@@338 $generated@@354 $generated@@353)) $generated@@352)))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@83 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@80 $generated@@356 $generated@@2)) (= ($generated@@165 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@85 $generated@@355 $generated@@357))) (<= ($generated ($generated@@85 $generated@@355 $generated@@357)) ($generated@@310 $generated@@355))))
 :pattern ( ($generated@@85 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@165 $generated@@355))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@323 (type $generated@@358))))
(let (($generated@@360 ($generated@@322 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@321 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@320 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@319 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@323 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@80 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@323 (type $generated@@365))))
(let (($generated@@367 ($generated@@322 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@321 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@320 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@341 (type $generated@@369))))
(let (($generated@@371 ($generated@@340 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@339 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@338 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@85 ($generated@@337 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@337 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@341 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@80 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@341 (type $generated@@376))))
(let (($generated@@378 ($generated@@340 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@339 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@338 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@380) $generated@@138) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@274 $generated@@381) (and ($generated@@144 $generated@@380) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@68) ($generated@@78 $generated@@380 ($generated@@268 $generated@@382) $generated@@381))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@268 $generated@@382) $generated@@381))
))))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@380)) $generated@@46 $generated@@381))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@145 $generated@@380)) $generated@@46 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@384) $generated@@68)) (= ($generated@@148 $generated@@383 ($generated@@164 $generated@@384)) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@383 $generated@@385)))) ($generated@@238 $generated@@385 $generated@@384))
 :pattern ( ($generated@@85 $generated@@383 $generated@@385))
))))
 :pattern ( ($generated@@148 $generated@@383 ($generated@@164 $generated@@384)))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) $generated@@68) (= (type $generated@@387) $generated@@140)) (= (type $generated@@388) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@274 $generated@@388)) (= ($generated@@78 ($generated@@297 $generated@@387) ($generated@@268 $generated@@386) $generated@@388) ($generated@@275 $generated@@387 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@78 ($generated@@297 $generated@@387) ($generated@@268 $generated@@386) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 Int) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) $generated@@68) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@274 $generated@@391)) (= ($generated@@78 ($generated@@301 $generated@@390) ($generated@@268 $generated@@389) $generated@@391) ($generated@@78 ($generated@@8 $generated@@390) $generated@@46 $generated@@391)))
 :pattern ( ($generated@@78 ($generated@@301 $generated@@390) ($generated@@268 $generated@@389) $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@393) $generated@@68)) (= (type $generated@@394) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@392 ($generated@@249 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@140) ($generated@@0 ($generated@@85 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@85 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@78 $generated@@392 ($generated@@249 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@397) $generated@@68)) (= (type $generated@@398) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@396 ($generated@@254 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@140) ($generated@@0 ($generated@@85 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@85 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@78 $generated@@396 ($generated@@254 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@85 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@85 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (=> (<= 0 $generated@@265) (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@402) $generated@@68) (= (type $generated@@403) $generated@@138)) (or ($generated@@267 $generated@@402 $generated@@403) (and (not (= 0 $generated@@265)) (and ($generated@@148 $generated@@403 ($generated@@268 $generated@@402)) ($generated@@137 $generated@@403))))) ($generated@@238 ($generated@@266 $generated@@402 $generated@@403) $generated@@402))
 :pattern ( ($generated@@266 $generated@@402 $generated@@403))
))))
(assert  (and (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@404 $generated@@407)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@404 $generated@@407))
)) (forall (($generated@@408 T@T) ($generated@@409 T@U) ) (! (= (type ($generated@@405 $generated@@408 $generated@@409)) $generated@@408)
 :pattern ( ($generated@@405 $generated@@408 $generated@@409))
))) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@323 (type $generated@@410))))
(let (($generated@@412 ($generated@@322 (type $generated@@410))))
(= (type ($generated@@406 $generated@@410)) ($generated@@80 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@406 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@321 $generated@@140 $generated@@140)) (= (type $generated@@414) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@404 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@413) ($generated@@158 ($generated@@405 $generated@@138 $generated@@414)))) (= ($generated@@85 ($generated@@406 $generated@@413) ($generated@@158 ($generated@@405 $generated@@138 $generated@@414))) ($generated@@159 ($generated@@405 $generated@@138 $generated@@414))))))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@413) $generated@@414))
)))
(assert  (and (forall (($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@417)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@415 $generated@@417))
)) (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@341 (type $generated@@418))))
(let (($generated@@420 ($generated@@340 (type $generated@@418))))
(= (type ($generated@@416 $generated@@418)) ($generated@@80 $generated@@420 $generated@@419))))
 :pattern ( ($generated@@416 $generated@@418))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@339 $generated@@140 $generated@@140)) (= (type $generated@@422) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@415 $generated@@421) $generated@@422))  (and ($generated@@0 ($generated@@85 ($generated@@337 $generated@@421) ($generated@@158 ($generated@@405 $generated@@138 $generated@@422)))) (= ($generated@@85 ($generated@@416 $generated@@421) ($generated@@158 ($generated@@405 $generated@@138 $generated@@422))) ($generated@@159 ($generated@@405 $generated@@138 $generated@@422))))))
 :pattern ( ($generated@@85 ($generated@@415 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@322 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@321 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@85 ($generated@@362 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@85 ($generated@@406 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@85 ($generated@@362 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@340 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@339 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@85 ($generated@@373 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@85 ($generated@@337 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@85 ($generated@@416 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@85 ($generated@@337 $generated@@428) $generated@@432))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@68)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@321 $generated@@140 $generated@@140)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) $generated@@68)) (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@436) $generated@@440))) (and ($generated@@275 ($generated@@85 ($generated@@406 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@275 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@436) $generated@@440))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@78 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@442 $generated@@443)) $generated@@68)
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (and (= (type $generated@@444) ($generated@@339 $generated@@140 $generated@@140)) (= (type $generated@@445) $generated@@68)) (= (type $generated@@446) $generated@@68)) (= (type $generated@@447) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447) (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@337 $generated@@444) $generated@@448))) (and ($generated@@275 ($generated@@85 ($generated@@416 $generated@@444) $generated@@448) $generated@@446 $generated@@447) ($generated@@275 $generated@@448 $generated@@445 $generated@@447)))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@444) $generated@@448))
 :pattern ( ($generated@@85 ($generated@@337 $generated@@444) $generated@@448))
))))
 :pattern ( ($generated@@78 $generated@@444 ($generated@@441 $generated@@445 $generated@@446) $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (= (type $generated@@449) $generated@@68) (= (type $generated@@450) $generated@@138)) ($generated@@148 $generated@@450 ($generated@@268 $generated@@449))) (or ($generated@@137 $generated@@450) ($generated@@144 $generated@@450)))
 :pattern ( ($generated@@144 $generated@@450) ($generated@@148 $generated@@450 ($generated@@268 $generated@@449)))
 :pattern ( ($generated@@137 $generated@@450) ($generated@@148 $generated@@450 ($generated@@268 $generated@@449)))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@80 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@341 (type $generated@@453))))
(let (($generated@@455 ($generated@@340 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@339 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@338 $generated@@455 $generated@@454)) (= ($generated@@337 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@337 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@341 (type $generated@@456))))
(let (($generated@@458 ($generated@@340 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@339 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@338 $generated@@458 $generated@@457)) (= ($generated@@373 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@373 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@341 (type $generated@@459))))
(let (($generated@@461 ($generated@@340 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@339 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@338 $generated@@461 $generated@@460)) (= ($generated@@415 $generated@@459) ($generated@@451 $generated@@140))))))
 :pattern ( ($generated@@415 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@323 (type $generated@@462))))
(let (($generated@@464 ($generated@@322 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@321 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@320 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@140) (= (type $generated@@466) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@404 $generated@@462) ($generated@@305 ($generated@@237 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@404 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@341 (type $generated@@467))))
(let (($generated@@469 ($generated@@340 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@339 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@338 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@140) (= (type $generated@@471) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@415 $generated@@467) ($generated@@305 ($generated@@237 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@415 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@140) ($generated@@238 $generated@@472 $generated@@46)) (and (= ($generated@@305 ($generated@@405 $generated@@2 $generated@@472)) $generated@@472) ($generated@@148 ($generated@@405 $generated@@2 $generated@@472) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@472 $generated@@46))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@140) ($generated@@238 $generated@@473 $generated@@47)) (and (= ($generated@@305 ($generated@@405 $generated@@3 $generated@@473)) $generated@@473) ($generated@@148 ($generated@@405 $generated@@3 $generated@@473) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@473 $generated@@47))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@140) ($generated@@238 $generated@@474 $generated@@44)) (and (= ($generated@@305 ($generated@@405 $generated@@4 $generated@@474)) $generated@@474) ($generated@@148 ($generated@@405 $generated@@4 $generated@@474) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@474 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@475) 20))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@140) ($generated@@238 $generated@@476 $generated@@45)) (and (= ($generated@@305 ($generated@@405 $generated@@475 $generated@@476)) $generated@@476) ($generated@@148 ($generated@@405 $generated@@475 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@68) (= ($generated@@238 ($generated@@305 $generated@@477) $generated@@478) ($generated@@148 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@238 ($generated@@305 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@83 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@80 $generated@@480 $generated@@2)) (<= 0 ($generated@@310 $generated@@479))))
 :pattern ( ($generated@@310 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@292 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@291 $generated@@482)) (<= 0 ($generated@@290 $generated@@481))))
 :pattern ( ($generated@@290 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@433 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@433 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@433 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@433 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@76 ($generated@@433 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@433 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@441 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@441 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@441 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@441 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@76 ($generated@@441 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@441 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@140) (= (type $generated@@504) $generated@@140)) (= ($generated@@281 ($generated@@237 $generated@@503 $generated@@504)) $generated@@61))
 :pattern ( ($generated@@237 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@151 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@151 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@151 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@151 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@140) (= (type $generated@@514) $generated@@140)) (= ($generated@@158 ($generated@@237 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@237 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@140) (= (type $generated@@516) $generated@@140)) (= ($generated@@159 ($generated@@237 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@237 $generated@@515 $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@519))
)) (forall (($generated@@520 T@U) ($generated@@521 Int) ) (! (let (($generated@@522 ($generated@@292 (type $generated@@520))))
(= (type ($generated@@518 $generated@@520 $generated@@521)) $generated@@522))
 :pattern ( ($generated@@518 $generated@@520 $generated@@521))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@291 $generated@@140)) (= (type $generated@@524) $generated@@68)) (= (type $generated@@525) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525) (forall (($generated@@526 Int) ) (!  (=> (and (<= 0 $generated@@526) (< $generated@@526 ($generated@@290 $generated@@523))) ($generated@@275 ($generated@@518 $generated@@523 $generated@@526) $generated@@524 $generated@@525))
 :pattern ( ($generated@@518 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@527 ($generated@@79 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@79 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@249 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@249 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@532)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@254 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@254 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@254 $generated@@536)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@164 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@164 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@540)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@517 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@517 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@517 $generated@@544)) $generated@@57))
 :pattern ( ($generated@@517 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@140) (= ($generated@@281 ($generated@@297 $generated@@545)) $generated@@63))
 :pattern ( ($generated@@297 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@268 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@268 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@140) (= ($generated@@139 ($generated@@297 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@297 $generated@@549))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@281 ($generated@@301 $generated@@550)) $generated@@65)
 :pattern ( ($generated@@301 $generated@@550))
)))
(assert (forall (($generated@@551 Int) ) (! (= ($generated@@145 ($generated@@301 $generated@@551)) $generated@@551)
 :pattern ( ($generated@@301 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@405 $generated@@553 ($generated@@305 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@305 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@321 $generated@@140 $generated@@140)) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) (= ($generated@@148 $generated@@554 ($generated@@433 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@554) $generated@@557))) (and ($generated@@238 ($generated@@85 ($generated@@406 $generated@@554) $generated@@557) $generated@@556) ($generated@@238 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@554) $generated@@557))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@148 $generated@@554 ($generated@@433 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@339 $generated@@140 $generated@@140)) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) (= ($generated@@148 $generated@@558 ($generated@@441 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@337 $generated@@558) $generated@@561))) (and ($generated@@238 ($generated@@85 ($generated@@416 $generated@@558) $generated@@561) $generated@@560) ($generated@@238 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@85 ($generated@@416 $generated@@558) $generated@@561))
 :pattern ( ($generated@@85 ($generated@@337 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@148 $generated@@558 ($generated@@441 $generated@@559 $generated@@560)))
)))
(assert  (=> (<= 0 $generated@@265) (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@138)) (or ($generated@@267 $generated@@562 ($generated@@261 $generated@@563)) (and (not (= 0 $generated@@265)) (and ($generated@@148 $generated@@563 ($generated@@268 $generated@@562)) ($generated@@0 ($generated@@261 ($generated@@11 ($generated@@137 ($generated@@261 $generated@@563))))))))) (= ($generated@@266 $generated@@562 ($generated@@261 $generated@@563)) ($generated@@261 ($generated@@139 ($generated@@261 $generated@@563)))))
 :weight 3
 :pattern ( ($generated@@266 $generated@@562 ($generated@@261 $generated@@563)))
))))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@140)) (= ($generated@@148 ($generated@@297 $generated@@565) ($generated@@268 $generated@@564)) ($generated@@238 $generated@@565 $generated@@564)))
 :pattern ( ($generated@@148 ($generated@@297 $generated@@565) ($generated@@268 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@148 ($generated@@301 $generated@@567) ($generated@@268 $generated@@566)) ($generated@@148 ($generated@@8 $generated@@567) $generated@@46)))
 :pattern ( ($generated@@148 ($generated@@301 $generated@@567) ($generated@@268 $generated@@566)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@140) (= (type $generated@@571) $generated@@140)) (< ($generated@@568 $generated@@570) ($generated@@569 ($generated@@237 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@237 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@140) (= (type $generated@@573) $generated@@140)) (< ($generated@@568 $generated@@573) ($generated@@569 ($generated@@237 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@237 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@140) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@68)) ($generated@@238 $generated@@574 ($generated@@433 $generated@@575 $generated@@576))) (and (= ($generated@@305 ($generated@@405 ($generated@@321 $generated@@140 $generated@@140) $generated@@574)) $generated@@574) ($generated@@148 ($generated@@405 ($generated@@321 $generated@@140 $generated@@140) $generated@@574) ($generated@@433 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@238 $generated@@574 ($generated@@433 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@140) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@238 $generated@@577 ($generated@@441 $generated@@578 $generated@@579))) (and (= ($generated@@305 ($generated@@405 ($generated@@339 $generated@@140 $generated@@140) $generated@@577)) $generated@@577) ($generated@@148 ($generated@@405 ($generated@@339 $generated@@140 $generated@@140) $generated@@577) ($generated@@441 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@238 $generated@@577 ($generated@@441 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@68) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@140)) ($generated@@238 $generated@@582 ($generated@@151 $generated@@580 $generated@@581))) (and (= ($generated@@305 ($generated@@405 $generated@@138 $generated@@582)) $generated@@582) ($generated@@148 ($generated@@405 $generated@@138 $generated@@582) ($generated@@151 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@238 $generated@@582 ($generated@@151 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@140) (< ($generated@@568 $generated@@583) ($generated@@569 ($generated@@297 $generated@@583))))
 :pattern ( ($generated@@297 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@138) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@274 $generated@@586) (and ($generated@@137 $generated@@584) ($generated@@78 $generated@@584 ($generated@@268 $generated@@585) $generated@@586)))) ($generated@@275 ($generated@@139 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@275 ($generated@@139 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@587)))
 (not ($generated@@0 ($generated@@85 ($generated@@451 $generated@@588) $generated@@587))))
 :pattern ( (let (($generated@@588 (type $generated@@587)))
($generated@@85 ($generated@@451 $generated@@588) $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@68) (= (type $generated@@590) $generated@@68)) (and (= ($generated@@76 ($generated@@151 $generated@@589 $generated@@590)) $generated@@62) (= ($generated@@316 ($generated@@151 $generated@@589 $generated@@590)) $generated@@66)))
 :pattern ( ($generated@@151 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@138) (= ($generated@@568 ($generated@@305 $generated@@591)) ($generated@@569 $generated@@591)))
 :pattern ( ($generated@@568 ($generated@@305 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@140) ($generated@@238 $generated@@592 ($generated@@79 0))) (and (= ($generated@@305 ($generated@@405 $generated@@2 $generated@@592)) $generated@@592) ($generated@@148 ($generated@@405 ($generated@@80 $generated@@140 $generated@@4) $generated@@592) ($generated@@79 0))))
 :pattern ( ($generated@@238 $generated@@592 ($generated@@79 0)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@140) (= (type $generated@@594) $generated@@68)) ($generated@@238 $generated@@593 ($generated@@249 $generated@@594))) (and (= ($generated@@305 ($generated@@405 ($generated@@80 $generated@@140 $generated@@4) $generated@@593)) $generated@@593) ($generated@@148 ($generated@@405 ($generated@@80 $generated@@140 $generated@@4) $generated@@593) ($generated@@249 $generated@@594))))
 :pattern ( ($generated@@238 $generated@@593 ($generated@@249 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@140) (= (type $generated@@596) $generated@@68)) ($generated@@238 $generated@@595 ($generated@@254 $generated@@596))) (and (= ($generated@@305 ($generated@@405 ($generated@@80 $generated@@140 $generated@@4) $generated@@595)) $generated@@595) ($generated@@148 ($generated@@405 ($generated@@80 $generated@@140 $generated@@4) $generated@@595) ($generated@@254 $generated@@596))))
 :pattern ( ($generated@@238 $generated@@595 ($generated@@254 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@140) (= (type $generated@@598) $generated@@68)) ($generated@@238 $generated@@597 ($generated@@164 $generated@@598))) (and (= ($generated@@305 ($generated@@405 ($generated@@80 $generated@@140 $generated@@2) $generated@@597)) $generated@@597) ($generated@@148 ($generated@@405 ($generated@@80 $generated@@140 $generated@@2) $generated@@597) ($generated@@164 $generated@@598))))
 :pattern ( ($generated@@238 $generated@@597 ($generated@@164 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@140) (= (type $generated@@600) $generated@@68)) ($generated@@238 $generated@@599 ($generated@@517 $generated@@600))) (and (= ($generated@@305 ($generated@@405 ($generated@@291 $generated@@140) $generated@@599)) $generated@@599) ($generated@@148 ($generated@@405 ($generated@@291 $generated@@140) $generated@@599) ($generated@@517 $generated@@600))))
 :pattern ( ($generated@@238 $generated@@599 ($generated@@517 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@68) (= (type $generated@@602) $generated@@140)) ($generated@@238 $generated@@602 ($generated@@268 $generated@@601))) (and (= ($generated@@305 ($generated@@405 $generated@@138 $generated@@602)) $generated@@602) ($generated@@148 ($generated@@405 $generated@@138 $generated@@602) ($generated@@268 $generated@@601))))
 :pattern ( ($generated@@238 $generated@@602 ($generated@@268 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@603 ($generated@@164 $generated@@604) $generated@@605) (forall (($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@603 $generated@@606)))) ($generated@@275 $generated@@606 $generated@@604 $generated@@605))
 :pattern ( ($generated@@85 $generated@@603 $generated@@606))
))))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@164 $generated@@604) $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@138) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@274 $generated@@609) (and ($generated@@150 $generated@@607) (exists (($generated@@610 T@U) ) (!  (and (= (type $generated@@610) $generated@@68) ($generated@@78 $generated@@607 ($generated@@151 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@78 $generated@@607 ($generated@@151 $generated@@608 $generated@@610) $generated@@609))
))))) ($generated@@275 ($generated@@158 $generated@@607) $generated@@608 $generated@@609))
 :pattern ( ($generated@@275 ($generated@@158 $generated@@607) $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@138) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@274 $generated@@613) (and ($generated@@150 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@68) ($generated@@78 $generated@@611 ($generated@@151 $generated@@614 $generated@@612) $generated@@613))
 :pattern ( ($generated@@78 $generated@@611 ($generated@@151 $generated@@614 $generated@@612) $generated@@613))
))))) ($generated@@275 ($generated@@159 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@275 ($generated@@159 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@140) (= (type $generated@@616) $generated@@140)) (= ($generated@@237 ($generated@@261 $generated@@615) ($generated@@261 $generated@@616)) ($generated@@261 ($generated@@237 $generated@@615 $generated@@616))))
 :pattern ( ($generated@@237 ($generated@@261 $generated@@615) ($generated@@261 $generated@@616)))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@305 ($generated@@8 ($generated@@259 $generated@@617))) ($generated@@261 ($generated@@305 ($generated@@8 $generated@@617))))
 :pattern ( ($generated@@305 ($generated@@8 ($generated@@259 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@140) (= ($generated@@297 ($generated@@261 $generated@@618)) ($generated@@261 ($generated@@297 $generated@@618))))
 :pattern ( ($generated@@297 ($generated@@261 $generated@@618)))
)))
(assert (forall (($generated@@619 Int) ) (! (= ($generated@@301 ($generated@@259 $generated@@619)) ($generated@@261 ($generated@@301 $generated@@619)))
 :pattern ( ($generated@@301 ($generated@@259 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@305 ($generated@@261 $generated@@620)) ($generated@@261 ($generated@@305 $generated@@620)))
 :pattern ( ($generated@@305 ($generated@@261 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@292 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@291 $generated@@622)) (= ($generated@@290 $generated@@621) 0)) (= $generated@@621 ($generated@@289 $generated@@622))))
 :pattern ( ($generated@@290 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@80 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@310 ($generated@@86 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@310 $generated@@623) ($generated ($generated@@85 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@310 ($generated@@86 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@628) $generated@@2)) ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@78 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@630) $generated@@3)) ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@78 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@632) $generated@@4)) ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@78 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@634) $generated@@475)) ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@78 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@636) $generated@@140)) ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@78 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@291 $generated@@140)) (= (type $generated@@638) $generated@@68)) (= ($generated@@148 $generated@@637 ($generated@@517 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@290 $generated@@637))) ($generated@@238 ($generated@@518 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@518 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@148 $generated@@637 ($generated@@517 $generated@@638)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 Int) ) (!  (=> (= (type $generated@@641) ($generated@@291 $generated@@140)) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@290 $generated@@641))) (< ($generated@@569 ($generated@@405 $generated@@138 ($generated@@518 $generated@@641 $generated@@642))) ($generated@@640 $generated@@641))))
 :pattern ( ($generated@@569 ($generated@@405 $generated@@138 ($generated@@518 $generated@@641 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@321 $generated@@140 $generated@@140)) (= (type $generated@@644) $generated@@68)) (= (type $generated@@645) $generated@@68)) ($generated@@148 $generated@@643 ($generated@@433 $generated@@644 $generated@@645))) (and (and ($generated@@148 ($generated@@319 $generated@@643) ($generated@@249 $generated@@644)) ($generated@@148 ($generated@@362 $generated@@643) ($generated@@249 $generated@@645))) ($generated@@148 ($generated@@404 $generated@@643) ($generated@@249 ($generated@@151 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@148 $generated@@643 ($generated@@433 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@339 $generated@@140 $generated@@140)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) $generated@@68)) ($generated@@148 $generated@@646 ($generated@@441 $generated@@647 $generated@@648))) (and (and ($generated@@148 ($generated@@337 $generated@@646) ($generated@@254 $generated@@647)) ($generated@@148 ($generated@@373 $generated@@646) ($generated@@254 $generated@@648))) ($generated@@148 ($generated@@415 $generated@@646) ($generated@@254 ($generated@@151 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@148 $generated@@646 ($generated@@441 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@2) ($generated@@148 $generated@@649 $generated@@46))
 :pattern ( ($generated@@148 $generated@@649 $generated@@46))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@3) ($generated@@148 $generated@@650 $generated@@47))
 :pattern ( ($generated@@148 $generated@@650 $generated@@47))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@4) ($generated@@148 $generated@@651 $generated@@44))
 :pattern ( ($generated@@148 $generated@@651 $generated@@44))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@475) ($generated@@148 $generated@@652 $generated@@45))
 :pattern ( ($generated@@148 $generated@@652 $generated@@45))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@140) ($generated@@148 $generated@@653 $generated@@48))
 :pattern ( ($generated@@148 $generated@@653 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@660 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@654) ($generated@@171 $generated@@81 $generated@@4)) (= (type $generated@@655) $generated@@81)) (= (type $generated@@656) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@657) $generated@@138)) (= (type $generated@@658) ($generated@@171 $generated@@81 $generated@@4))) (= (type $generated@@660) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@661  (=> (and (= $generated@@654 ($generated@@225 $generated@@655 $generated@@656 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@137 $generated@@657))))
(let (($generated@@662 true))
(let (($generated@@663  (=> (and (= $generated@@658 ($generated@@170 $generated@@655 $generated@@656 $generated@@60 false)) ($generated@@137 $generated@@657)) (and (=> (= (ControlFlow 0 4) 1) $generated@@662) (=> (= (ControlFlow 0 4) 3) $generated@@661)))))
(let (($generated@@664  (=> (and ($generated@@274 $generated@@656) ($generated@@659 $generated@@656)) (=> (and (and ($generated@@148 $generated@@657 ($generated@@268 $generated@@660)) ($generated@@78 $generated@@657 ($generated@@268 $generated@@660) $generated@@656)) (and (= 0 $generated@@265) (= (ControlFlow 0 5) 4))) $generated@@663))))
$generated@@664)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@284 (Int) T@U)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@T T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@561 (T@U) Int)
(declare-fun $generated@@632 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@142) (= (type $generated@@147) $generated@@142)) (and ($generated@@141 $generated@@146) ($generated@@141 $generated@@147))) (= ($generated@@140 $generated@@146 $generated@@147) (= ($generated@@143 $generated@@146) ($generated@@143 $generated@@147))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@146))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@142) (= (type $generated@@151) $generated@@142)) (and ($generated@@148 $generated@@150) ($generated@@148 $generated@@151))) (= ($generated@@140 $generated@@150 $generated@@151) (= ($generated@@149 $generated@@150) ($generated@@149 $generated@@151))))
 :pattern ( ($generated@@140 $generated@@150 $generated@@151) ($generated@@148 $generated@@150))
 :pattern ( ($generated@@140 $generated@@150 $generated@@151) ($generated@@148 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@152 $generated@@153 ($generated@@79 0)))
 :pattern ( ($generated@@152 $generated@@153 ($generated@@79 0)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@156 $generated@@157)) $generated@@68)
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@68) (= (type $generated@@159) $generated@@68)) (= (type $generated@@160) $generated@@142)) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159))) ($generated@@154 $generated@@160))
 :pattern ( ($generated@@154 $generated@@160) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@144)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@144)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@142) (= (type $generated@@167) $generated@@142)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@172) $generated@@68)) ($generated@@152 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@152 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@71 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@70 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@70 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@142)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@144)) (= (type $generated@@236) $generated@@144)) (= ($generated@@152 ($generated@@229 $generated@@235 $generated@@236) ($generated@@155 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@152 ($generated@@229 $generated@@235 $generated@@236) ($generated@@155 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@142) (= (type $generated@@238) $generated@@142)) (= ($generated@@161 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@161 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@142) (= (type $generated@@240) $generated@@142)) (= ($generated@@140 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@140 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@68)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@244) $generated@@68)) (= ($generated@@152 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@144) ($generated@@0 ($generated@@85 $generated@@243 $generated@@245))) ($generated@@230 $generated@@245 $generated@@244))
 :pattern ( ($generated@@85 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@152 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@249) $generated@@68)) (= ($generated@@152 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@144) ($generated@@0 ($generated@@85 $generated@@248 $generated@@250))) ($generated@@230 $generated@@250 $generated@@249))
 :pattern ( ($generated@@85 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@152 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@144)) (= (type $generated@@262) $generated@@144)) (= (type $generated@@263) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@263)) (= ($generated@@78 ($generated@@229 $generated@@261 $generated@@262) ($generated@@155 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@261 $generated@@262) ($generated@@155 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@72)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@142) (= ($generated@@154 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@142) (= ($generated@@141 $generated@@267) (= ($generated@@264 $generated@@267) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@142) (= ($generated@@148 $generated@@268) (= ($generated@@264 $generated@@268) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@142) ($generated@@154 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@144) (= (type $generated@@271) $generated@@144)) (= $generated@@269 ($generated@@229 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@154 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@142)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@142) ($generated@@141 $generated@@282)) (exists (($generated@@283 T@U) ) (!  (and (= (type $generated@@283) $generated@@144) (= $generated@@282 ($generated@@280 $generated@@283)))
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@141 $generated@@282))
)))
(assert (forall (($generated@@285 Int) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@142)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@142) ($generated@@148 $generated@@286)) (exists (($generated@@287 Int) ) (= $generated@@286 ($generated@@284 $generated@@287))))
 :pattern ( ($generated@@148 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@144)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@68) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@258 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@78 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@258 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@295) $generated@@144)) (= (type $generated@@296) $generated@@68)) ($generated@@136 $generated@@293 $generated@@294)) ($generated@@258 $generated@@295 $generated@@296 $generated@@293)) ($generated@@258 $generated@@295 $generated@@296 $generated@@294))
 :pattern ( ($generated@@136 $generated@@293 $generated@@294) ($generated@@258 $generated@@295 $generated@@296 $generated@@293))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@298) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@300) $generated@@68)) ($generated@@136 $generated@@297 $generated@@298)) ($generated@@78 $generated@@299 $generated@@300 $generated@@297)) ($generated@@78 $generated@@299 $generated@@300 $generated@@298))
 :pattern ( ($generated@@136 $generated@@297 $generated@@298) ($generated@@78 $generated@@299 $generated@@300 $generated@@297))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@80 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@83 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@80 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@85 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (forall (($generated@@309 T@U) ) (! (= (type ($generated@@307 $generated@@309)) $generated@@68)
 :pattern ( ($generated@@307 $generated@@309))
)) (forall (($generated@@310 T@U) ) (! (= (type ($generated@@308 $generated@@310)) $generated@@73)
 :pattern ( ($generated@@308 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@68) (and (= ($generated@@76 ($generated@@307 $generated@@311)) $generated@@64) (= ($generated@@308 ($generated@@307 $generated@@311)) $generated@@67)))
 :pattern ( ($generated@@307 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@80 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@85 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@83 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@80 $generated@@349 $generated@@2)) (= ($generated@@169 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@85 $generated@@348 $generated@@350))) (<= ($generated ($generated@@85 $generated@@348 $generated@@350)) ($generated@@301 $generated@@348))))
 :pattern ( ($generated@@85 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@169 $generated@@348))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(let (($generated@@353 ($generated@@315 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@314 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@313 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@312 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@316 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(let (($generated@@360 ($generated@@315 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@314 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@313 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@334 (type $generated@@362))))
(let (($generated@@364 ($generated@@333 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@332 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@331 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@330 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@334 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(let (($generated@@371 ($generated@@333 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@332 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@331 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (and (= (type $generated@@373) $generated@@142) (= (type $generated@@374) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@374) (and ($generated@@148 $generated@@373) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@68) ($generated@@78 $generated@@373 ($generated@@307 $generated@@375) $generated@@374))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@307 $generated@@375) $generated@@374))
))))) ($generated@@78 ($generated@@8 ($generated@@149 $generated@@373)) $generated@@46 $generated@@374))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@149 $generated@@373)) $generated@@46 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@377) $generated@@68)) (= ($generated@@152 $generated@@376 ($generated@@168 $generated@@377)) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@376 $generated@@378)))) ($generated@@230 $generated@@378 $generated@@377))
 :pattern ( ($generated@@85 $generated@@376 $generated@@378))
))))
 :pattern ( ($generated@@152 $generated@@376 ($generated@@168 $generated@@377)))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) $generated@@68) (= (type $generated@@380) $generated@@144)) (= (type $generated@@381) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@381)) (= ($generated@@78 ($generated@@280 $generated@@380) ($generated@@307 $generated@@379) $generated@@381) ($generated@@258 $generated@@380 $generated@@379 $generated@@381)))
 :pattern ( ($generated@@78 ($generated@@280 $generated@@380) ($generated@@307 $generated@@379) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 Int) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) $generated@@68) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@257 $generated@@384)) (= ($generated@@78 ($generated@@284 $generated@@383) ($generated@@307 $generated@@382) $generated@@384) ($generated@@78 ($generated@@8 $generated@@383) $generated@@46 $generated@@384)))
 :pattern ( ($generated@@78 ($generated@@284 $generated@@383) ($generated@@307 $generated@@382) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@386) $generated@@68)) (= (type $generated@@387) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@385 ($generated@@241 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@144) ($generated@@0 ($generated@@85 $generated@@385 $generated@@388))) ($generated@@258 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@85 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@78 $generated@@385 ($generated@@241 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@390) $generated@@68)) (= (type $generated@@391) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@389 ($generated@@246 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@144) ($generated@@0 ($generated@@85 $generated@@389 $generated@@392))) ($generated@@258 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@85 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@246 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@85 ($generated@@302 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@85 ($generated@@302 $generated@@394) $generated@@393)))
)))
(assert  (and (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@395 $generated@@398)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@395 $generated@@398))
)) (forall (($generated@@399 T@T) ($generated@@400 T@U) ) (! (= (type ($generated@@396 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@396 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@316 (type $generated@@401))))
(let (($generated@@403 ($generated@@315 (type $generated@@401))))
(= (type ($generated@@397 $generated@@401)) ($generated@@80 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@397 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@314 $generated@@144 $generated@@144)) (= (type $generated@@405) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@395 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@404) ($generated@@162 ($generated@@396 $generated@@142 $generated@@405)))) (= ($generated@@85 ($generated@@397 $generated@@404) ($generated@@162 ($generated@@396 $generated@@142 $generated@@405))) ($generated@@163 ($generated@@396 $generated@@142 $generated@@405))))))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@404) $generated@@405))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@334 (type $generated@@409))))
(let (($generated@@411 ($generated@@333 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@80 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@332 $generated@@144 $generated@@144)) (= (type $generated@@413) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@412) ($generated@@162 ($generated@@396 $generated@@142 $generated@@413)))) (= ($generated@@85 ($generated@@407 $generated@@412) ($generated@@162 ($generated@@396 $generated@@142 $generated@@413))) ($generated@@163 ($generated@@396 $generated@@142 $generated@@413))))))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@315 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@314 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@85 ($generated@@397 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@414) $generated@@418))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 (type $generated@@420)))
(let (($generated@@422 ($generated@@333 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@332 $generated@@422 $generated@@421)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@419) $generated@@420)) (exists (($generated@@423 T@U) ) (!  (and (= (type $generated@@423) $generated@@422) (and ($generated@@0 ($generated@@85 ($generated@@330 $generated@@419) $generated@@423)) (= $generated@@420 ($generated@@85 ($generated@@407 $generated@@419) $generated@@423))))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@419) $generated@@423))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@419) $generated@@423))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@68)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@314 $generated@@144 $generated@@144)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) $generated@@68)) (= (type $generated@@430) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@427) $generated@@431))) (and ($generated@@258 ($generated@@85 ($generated@@397 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@258 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@427) $generated@@431))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@78 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@68)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@332 $generated@@144 $generated@@144)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) $generated@@68)) (= (type $generated@@438) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@435) $generated@@439))) (and ($generated@@258 ($generated@@85 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@258 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@78 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@440) $generated@@68) (= (type $generated@@441) $generated@@142)) ($generated@@152 $generated@@441 ($generated@@307 $generated@@440))) (or ($generated@@141 $generated@@441) ($generated@@148 $generated@@441)))
 :pattern ( ($generated@@148 $generated@@441) ($generated@@152 $generated@@441 ($generated@@307 $generated@@440)))
 :pattern ( ($generated@@141 $generated@@441) ($generated@@152 $generated@@441 ($generated@@307 $generated@@440)))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@442) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@443) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@444) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@442 $generated@@444))) (and ($generated@@136 $generated@@442 $generated@@443) ($generated@@136 $generated@@443 $generated@@444))) ($generated@@136 $generated@@442 $generated@@444))
 :pattern ( ($generated@@136 $generated@@442 $generated@@443) ($generated@@136 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@80 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@330 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@330 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@366 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@366 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@334 (type $generated@@453))))
(let (($generated@@455 ($generated@@333 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@332 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@331 $generated@@455 $generated@@454)) (= ($generated@@406 $generated@@453) ($generated@@445 $generated@@144))))))
 :pattern ( ($generated@@406 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@316 (type $generated@@456))))
(let (($generated@@458 ($generated@@315 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@314 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@313 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@144) (= (type $generated@@460) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@395 $generated@@456) ($generated@@288 ($generated@@229 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@395 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@334 (type $generated@@461))))
(let (($generated@@463 ($generated@@333 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@332 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@331 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@144) (= (type $generated@@465) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@406 $generated@@461) ($generated@@288 ($generated@@229 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@406 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@144) ($generated@@230 $generated@@466 $generated@@46)) (and (= ($generated@@288 ($generated@@396 $generated@@2 $generated@@466)) $generated@@466) ($generated@@152 ($generated@@396 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@144) ($generated@@230 $generated@@467 $generated@@47)) (and (= ($generated@@288 ($generated@@396 $generated@@3 $generated@@467)) $generated@@467) ($generated@@152 ($generated@@396 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@144) ($generated@@230 $generated@@468 $generated@@44)) (and (= ($generated@@288 ($generated@@396 $generated@@4 $generated@@468)) $generated@@468) ($generated@@152 ($generated@@396 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 20))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@144) ($generated@@230 $generated@@470 $generated@@45)) (and (= ($generated@@288 ($generated@@396 $generated@@469 $generated@@470)) $generated@@470) ($generated@@152 ($generated@@396 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@68) (= ($generated@@230 ($generated@@288 $generated@@471) $generated@@472) ($generated@@152 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@230 ($generated@@288 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@83 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@80 $generated@@474 $generated@@2)) (<= 0 ($generated@@301 $generated@@473))))
 :pattern ( ($generated@@301 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@275 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@274 $generated@@476)) (<= 0 ($generated@@273 $generated@@475))))
 :pattern ( ($generated@@273 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@424 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@424 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@76 ($generated@@424 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@424 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@432 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@432 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@432 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@432 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@76 ($generated@@432 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@432 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@144) (= (type $generated@@498) $generated@@144)) (= ($generated@@264 ($generated@@229 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@155 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@155 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@155 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@155 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@144) (= (type $generated@@508) $generated@@144)) (= ($generated@@162 ($generated@@229 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@229 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@144) (= (type $generated@@510) $generated@@144)) (= ($generated@@163 ($generated@@229 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@229 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@275 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@274 $generated@@144)) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@273 $generated@@517))) ($generated@@258 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@78 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@79 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@79 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@241 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@241 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@241 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@246 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@246 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@76 ($generated@@246 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@531 ($generated@@168 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@168 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@76 ($generated@@168 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@511 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@511 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@511 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@144) (= ($generated@@264 ($generated@@280 $generated@@539)) $generated@@63))
 :pattern ( ($generated@@280 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@68)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@68) (= ($generated@@540 ($generated@@307 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@307 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@144) (= ($generated@@143 ($generated@@280 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@280 $generated@@543))
)))
(assert (forall (($generated@@544 Int) ) (! (= ($generated@@264 ($generated@@284 $generated@@544)) $generated@@65)
 :pattern ( ($generated@@284 $generated@@544))
)))
(assert (forall (($generated@@545 Int) ) (! (= ($generated@@149 ($generated@@284 $generated@@545)) $generated@@545)
 :pattern ( ($generated@@284 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@396 $generated@@547 ($generated@@288 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@288 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@314 $generated@@144 $generated@@144)) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) (= ($generated@@152 $generated@@548 ($generated@@424 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))) (and ($generated@@230 ($generated@@85 ($generated@@397 $generated@@548) $generated@@551) $generated@@550) ($generated@@230 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@548) $generated@@551))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@152 $generated@@548 ($generated@@424 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@332 $generated@@144 $generated@@144)) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) (= ($generated@@152 $generated@@552 ($generated@@432 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))) (and ($generated@@230 ($generated@@85 ($generated@@407 $generated@@552) $generated@@555) $generated@@554) ($generated@@230 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@85 ($generated@@407 $generated@@552) $generated@@555))
 :pattern ( ($generated@@85 ($generated@@330 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@152 $generated@@552 ($generated@@432 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@68) (= (type $generated@@557) $generated@@144)) (= ($generated@@152 ($generated@@280 $generated@@557) ($generated@@307 $generated@@556)) ($generated@@230 $generated@@557 $generated@@556)))
 :pattern ( ($generated@@152 ($generated@@280 $generated@@557) ($generated@@307 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 Int) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@152 ($generated@@284 $generated@@559) ($generated@@307 $generated@@558)) ($generated@@152 ($generated@@8 $generated@@559) $generated@@46)))
 :pattern ( ($generated@@152 ($generated@@284 $generated@@559) ($generated@@307 $generated@@558)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@144) (= (type $generated@@563) $generated@@144)) (< ($generated@@560 $generated@@562) ($generated@@561 ($generated@@229 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@144) (= (type $generated@@565) $generated@@144)) (< ($generated@@560 $generated@@565) ($generated@@561 ($generated@@229 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@229 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@144) (= (type $generated@@567) $generated@@68)) (= (type $generated@@568) $generated@@68)) ($generated@@230 $generated@@566 ($generated@@424 $generated@@567 $generated@@568))) (and (= ($generated@@288 ($generated@@396 ($generated@@314 $generated@@144 $generated@@144) $generated@@566)) $generated@@566) ($generated@@152 ($generated@@396 ($generated@@314 $generated@@144 $generated@@144) $generated@@566) ($generated@@424 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@230 $generated@@566 ($generated@@424 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@144) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) $generated@@68)) ($generated@@230 $generated@@569 ($generated@@432 $generated@@570 $generated@@571))) (and (= ($generated@@288 ($generated@@396 ($generated@@332 $generated@@144 $generated@@144) $generated@@569)) $generated@@569) ($generated@@152 ($generated@@396 ($generated@@332 $generated@@144 $generated@@144) $generated@@569) ($generated@@432 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@230 $generated@@569 ($generated@@432 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@68) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@144)) ($generated@@230 $generated@@574 ($generated@@155 $generated@@572 $generated@@573))) (and (= ($generated@@288 ($generated@@396 $generated@@142 $generated@@574)) $generated@@574) ($generated@@152 ($generated@@396 $generated@@142 $generated@@574) ($generated@@155 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@230 $generated@@574 ($generated@@155 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@144) (< ($generated@@560 $generated@@575) ($generated@@561 ($generated@@280 $generated@@575))))
 :pattern ( ($generated@@280 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@142) (= (type $generated@@577) $generated@@68)) (= (type $generated@@578) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@578) (and ($generated@@141 $generated@@576) ($generated@@78 $generated@@576 ($generated@@307 $generated@@577) $generated@@578)))) ($generated@@258 ($generated@@143 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@258 ($generated@@143 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
 (not ($generated@@0 ($generated@@85 ($generated@@445 $generated@@580) $generated@@579))))
 :pattern ( (let (($generated@@580 (type $generated@@579)))
($generated@@85 ($generated@@445 $generated@@580) $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@68) (= (type $generated@@582) $generated@@68)) (and (= ($generated@@76 ($generated@@155 $generated@@581 $generated@@582)) $generated@@62) (= ($generated@@308 ($generated@@155 $generated@@581 $generated@@582)) $generated@@66)))
 :pattern ( ($generated@@155 $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@142) (= ($generated@@560 ($generated@@288 $generated@@583)) ($generated@@561 $generated@@583)))
 :pattern ( ($generated@@560 ($generated@@288 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@144) ($generated@@230 $generated@@584 ($generated@@79 0))) (and (= ($generated@@288 ($generated@@396 $generated@@2 $generated@@584)) $generated@@584) ($generated@@152 ($generated@@396 ($generated@@80 $generated@@144 $generated@@4) $generated@@584) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@584 ($generated@@79 0)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@144) (= (type $generated@@586) $generated@@68)) ($generated@@230 $generated@@585 ($generated@@241 $generated@@586))) (and (= ($generated@@288 ($generated@@396 ($generated@@80 $generated@@144 $generated@@4) $generated@@585)) $generated@@585) ($generated@@152 ($generated@@396 ($generated@@80 $generated@@144 $generated@@4) $generated@@585) ($generated@@241 $generated@@586))))
 :pattern ( ($generated@@230 $generated@@585 ($generated@@241 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@144) (= (type $generated@@588) $generated@@68)) ($generated@@230 $generated@@587 ($generated@@246 $generated@@588))) (and (= ($generated@@288 ($generated@@396 ($generated@@80 $generated@@144 $generated@@4) $generated@@587)) $generated@@587) ($generated@@152 ($generated@@396 ($generated@@80 $generated@@144 $generated@@4) $generated@@587) ($generated@@246 $generated@@588))))
 :pattern ( ($generated@@230 $generated@@587 ($generated@@246 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@144) (= (type $generated@@590) $generated@@68)) ($generated@@230 $generated@@589 ($generated@@168 $generated@@590))) (and (= ($generated@@288 ($generated@@396 ($generated@@80 $generated@@144 $generated@@2) $generated@@589)) $generated@@589) ($generated@@152 ($generated@@396 ($generated@@80 $generated@@144 $generated@@2) $generated@@589) ($generated@@168 $generated@@590))))
 :pattern ( ($generated@@230 $generated@@589 ($generated@@168 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (= (type $generated@@591) $generated@@144) (= (type $generated@@592) $generated@@68)) ($generated@@230 $generated@@591 ($generated@@511 $generated@@592))) (and (= ($generated@@288 ($generated@@396 ($generated@@274 $generated@@144) $generated@@591)) $generated@@591) ($generated@@152 ($generated@@396 ($generated@@274 $generated@@144) $generated@@591) ($generated@@511 $generated@@592))))
 :pattern ( ($generated@@230 $generated@@591 ($generated@@511 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@68) (= (type $generated@@594) $generated@@144)) ($generated@@230 $generated@@594 ($generated@@307 $generated@@593))) (and (= ($generated@@288 ($generated@@396 $generated@@142 $generated@@594)) $generated@@594) ($generated@@152 ($generated@@396 $generated@@142 $generated@@594) ($generated@@307 $generated@@593))))
 :pattern ( ($generated@@230 $generated@@594 ($generated@@307 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@595 ($generated@@168 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@595 $generated@@598)))) ($generated@@258 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@85 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@168 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@142) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@601) (and ($generated@@154 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@68) ($generated@@78 $generated@@599 ($generated@@155 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@155 $generated@@600 $generated@@602) $generated@@601))
))))) ($generated@@258 ($generated@@162 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@258 ($generated@@162 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@142) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@257 $generated@@605) (and ($generated@@154 $generated@@603) (exists (($generated@@606 T@U) ) (!  (and (= (type $generated@@606) $generated@@68) ($generated@@78 $generated@@603 ($generated@@155 $generated@@606 $generated@@604) $generated@@605))
 :pattern ( ($generated@@78 $generated@@603 ($generated@@155 $generated@@606 $generated@@604) $generated@@605))
))))) ($generated@@258 ($generated@@163 $generated@@603) $generated@@604 $generated@@605))
 :pattern ( ($generated@@258 ($generated@@163 $generated@@603) $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@144) (= (type $generated@@608) $generated@@144)) (= ($generated@@229 ($generated@@253 $generated@@607) ($generated@@253 $generated@@608)) ($generated@@253 ($generated@@229 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@229 ($generated@@253 $generated@@607) ($generated@@253 $generated@@608)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@251 $generated@@609))) ($generated@@253 ($generated@@288 ($generated@@8 $generated@@609))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@251 $generated@@609))))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@144) (= ($generated@@280 ($generated@@253 $generated@@610)) ($generated@@253 ($generated@@280 $generated@@610))))
 :pattern ( ($generated@@280 ($generated@@253 $generated@@610)))
)))
(assert (forall (($generated@@611 Int) ) (! (= ($generated@@284 ($generated@@251 $generated@@611)) ($generated@@253 ($generated@@284 $generated@@611)))
 :pattern ( ($generated@@284 ($generated@@251 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (= ($generated@@288 ($generated@@253 $generated@@612)) ($generated@@253 ($generated@@288 $generated@@612)))
 :pattern ( ($generated@@288 ($generated@@253 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ) (! (let (($generated@@614 ($generated@@275 (type $generated@@613))))
 (=> (and (= (type $generated@@613) ($generated@@274 $generated@@614)) (= ($generated@@273 $generated@@613) 0)) (= $generated@@613 ($generated@@272 $generated@@614))))
 :pattern ( ($generated@@273 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (! (let (($generated@@618 (type $generated@@616)))
 (=> (and (and (= (type $generated@@615) ($generated@@80 $generated@@618 $generated@@2)) (= (type $generated@@617) $generated@@2)) (<= 0 ($generated $generated@@617))) (= ($generated@@301 ($generated@@86 $generated@@615 $generated@@616 $generated@@617)) (+ (- ($generated@@301 $generated@@615) ($generated ($generated@@85 $generated@@615 $generated@@616))) ($generated $generated@@617)))))
 :pattern ( ($generated@@301 ($generated@@86 $generated@@615 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@2)) ($generated@@78 $generated@@620 $generated@@46 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@46 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@3)) ($generated@@78 $generated@@622 $generated@@47 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@47 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@624) $generated@@4)) ($generated@@78 $generated@@624 $generated@@44 $generated@@623))
 :pattern ( ($generated@@78 $generated@@624 $generated@@44 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@626) $generated@@469)) ($generated@@78 $generated@@626 $generated@@45 $generated@@625))
 :pattern ( ($generated@@78 $generated@@626 $generated@@45 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@628) $generated@@144)) ($generated@@78 $generated@@628 $generated@@48 $generated@@627))
 :pattern ( ($generated@@78 $generated@@628 $generated@@48 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@274 $generated@@144)) (= (type $generated@@630) $generated@@68)) (= ($generated@@152 $generated@@629 ($generated@@511 $generated@@630)) (forall (($generated@@631 Int) ) (!  (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@273 $generated@@629))) ($generated@@230 ($generated@@512 $generated@@629 $generated@@631) $generated@@630))
 :pattern ( ($generated@@512 $generated@@629 $generated@@631))
))))
 :pattern ( ($generated@@152 $generated@@629 ($generated@@511 $generated@@630)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 Int) ) (!  (=> (= (type $generated@@633) ($generated@@274 $generated@@144)) (=> (and (<= 0 $generated@@634) (< $generated@@634 ($generated@@273 $generated@@633))) (< ($generated@@561 ($generated@@396 $generated@@142 ($generated@@512 $generated@@633 $generated@@634))) ($generated@@632 $generated@@633))))
 :pattern ( ($generated@@561 ($generated@@396 $generated@@142 ($generated@@512 $generated@@633 $generated@@634))))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@314 $generated@@144 $generated@@144)) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) $generated@@68)) ($generated@@152 $generated@@635 ($generated@@424 $generated@@636 $generated@@637))) (and (and ($generated@@152 ($generated@@312 $generated@@635) ($generated@@241 $generated@@636)) ($generated@@152 ($generated@@355 $generated@@635) ($generated@@241 $generated@@637))) ($generated@@152 ($generated@@395 $generated@@635) ($generated@@241 ($generated@@155 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@152 $generated@@635 ($generated@@424 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) ($generated@@332 $generated@@144 $generated@@144)) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) $generated@@68)) ($generated@@152 $generated@@638 ($generated@@432 $generated@@639 $generated@@640))) (and (and ($generated@@152 ($generated@@330 $generated@@638) ($generated@@246 $generated@@639)) ($generated@@152 ($generated@@366 $generated@@638) ($generated@@246 $generated@@640))) ($generated@@152 ($generated@@406 $generated@@638) ($generated@@246 ($generated@@155 $generated@@639 $generated@@640)))))
 :pattern ( ($generated@@152 $generated@@638 ($generated@@432 $generated@@639 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@2) ($generated@@152 $generated@@641 $generated@@46))
 :pattern ( ($generated@@152 $generated@@641 $generated@@46))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@3) ($generated@@152 $generated@@642 $generated@@47))
 :pattern ( ($generated@@152 $generated@@642 $generated@@47))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@4) ($generated@@152 $generated@@643 $generated@@44))
 :pattern ( ($generated@@152 $generated@@643 $generated@@44))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@469) ($generated@@152 $generated@@644 $generated@@45))
 :pattern ( ($generated@@152 $generated@@644 $generated@@45))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@144) ($generated@@152 $generated@@645 $generated@@48))
 :pattern ( ($generated@@152 $generated@@645 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 (T@U) Bool)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@646) ($generated@@175 $generated@@81 $generated@@4)) (= (type $generated@@647) $generated@@81)) (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@649) $generated@@142)) (= (type $generated@@650) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@652) $generated@@142)) (= (type $generated@@653) $generated@@68)) (= (type $generated@@654) $generated@@68)) (= (type $generated@@655) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@657  (=> (and (= $generated@@646 ($generated@@174 $generated@@647 $generated@@648 $generated@@60 false)) ($generated@@148 $generated@@649)) (=> (and (and (and ($generated@@257 $generated@@650) ($generated@@651 $generated@@650)) (and (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@81) (=> (and (not (= $generated@@658 $generated@@647)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@648 $generated@@658) $generated@@60))) (= ($generated@@85 $generated@@650 $generated@@658) ($generated@@85 $generated@@648 $generated@@658))))
 :pattern ( ($generated@@85 $generated@@650 $generated@@658))
)) ($generated@@136 $generated@@648 $generated@@650))) (and (and ($generated@@152 $generated@@652 ($generated@@307 $generated@@653)) ($generated@@78 $generated@@652 ($generated@@307 $generated@@653) $generated@@650)) ($generated@@148 $generated@@652))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@148 $generated@@652)) (=> ($generated@@148 $generated@@652) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@148 $generated@@649))))))))
(let (($generated@@659  (=> (and (and (and ($generated@@257 $generated@@648) ($generated@@651 $generated@@648)) (and ($generated@@152 $generated@@649 ($generated@@307 $generated@@654)) ($generated@@78 $generated@@649 ($generated@@307 $generated@@654) $generated@@648))) (and (and ($generated@@152 $generated@@655 ($generated@@307 $generated@@653)) ($generated@@78 $generated@@655 ($generated@@307 $generated@@653) $generated@@648)) (and (= 1 $generated@@656) (= (ControlFlow 0 4) 2)))) $generated@@657)))
$generated@@659)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (Int) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@138) (= (type $generated@@147) $generated@@138)) (and ($generated@@144 $generated@@146) ($generated@@144 $generated@@147))) (= ($generated@@136 $generated@@146 $generated@@147) (= ($generated@@145 $generated@@146) ($generated@@145 $generated@@147))))
 :pattern ( ($generated@@136 $generated@@146 $generated@@147) ($generated@@144 $generated@@146))
 :pattern ( ($generated@@136 $generated@@146 $generated@@147) ($generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@79 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@79 0)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@152 $generated@@153)) $generated@@68)
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@68) (= (type $generated@@155) $generated@@68)) (= (type $generated@@156) $generated@@138)) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155))) ($generated@@150 $generated@@156))
 :pattern ( ($generated@@150 $generated@@156) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155)))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@140)
 :pattern ( ($generated@@158 $generated@@160))
)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@140)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@138) (= (type $generated@@163) $generated@@138)) true) (= ($generated@@157 $generated@@162 $generated@@163)  (and (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)) (= ($generated@@159 $generated@@162) ($generated@@159 $generated@@163)))))
 :pattern ( ($generated@@157 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@148 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@148 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@138)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@68) (= (type $generated@@230) $generated@@68)) (= (type $generated@@231) $generated@@140)) (= (type $generated@@232) $generated@@140)) (= ($generated@@148 ($generated@@225 $generated@@231 $generated@@232) ($generated@@151 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@148 ($generated@@225 $generated@@231 $generated@@232) ($generated@@151 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@138) (= (type $generated@@234) $generated@@138)) (= ($generated@@157 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@157 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@138) (= (type $generated@@236) $generated@@138)) (= ($generated@@136 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@136 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@68)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@240) $generated@@68)) (= ($generated@@148 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@140) ($generated@@0 ($generated@@85 $generated@@239 $generated@@241))) ($generated@@226 $generated@@241 $generated@@240))
 :pattern ( ($generated@@85 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@148 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@245) $generated@@68)) (= ($generated@@148 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@140) ($generated@@0 ($generated@@85 $generated@@244 $generated@@246))) ($generated@@226 $generated@@246 $generated@@245))
 :pattern ( ($generated@@85 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@148 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@68) (= (type $generated@@256) $generated@@68)) (= (type $generated@@257) $generated@@140)) (= (type $generated@@258) $generated@@140)) (= (type $generated@@259) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@253 $generated@@259)) (= ($generated@@78 ($generated@@225 $generated@@257 $generated@@258) ($generated@@151 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@78 ($generated@@225 $generated@@257 $generated@@258) ($generated@@151 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@72)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@138) (= ($generated@@150 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@138) (= ($generated@@137 $generated@@263) (= ($generated@@260 $generated@@263) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@138) (= ($generated@@144 $generated@@264) (= ($generated@@260 $generated@@264) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@138) ($generated@@150 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@140) (= (type $generated@@267) $generated@@140)) (= $generated@@265 ($generated@@225 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@150 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@138)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@138) ($generated@@137 $generated@@278)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@140) (= $generated@@278 ($generated@@276 $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@137 $generated@@278))
)))
(assert (forall (($generated@@281 Int) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@138)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@138) ($generated@@144 $generated@@282)) (exists (($generated@@283 Int) ) (= $generated@@282 ($generated@@280 $generated@@283))))
 :pattern ( ($generated@@144 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@140)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@68) (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@254 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@78 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@254 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@80 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@83 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@80 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@85 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (forall (($generated@@297 T@U) ) (! (= (type ($generated@@295 $generated@@297)) $generated@@68)
 :pattern ( ($generated@@295 $generated@@297))
)) (forall (($generated@@298 T@U) ) (! (= (type ($generated@@296 $generated@@298)) $generated@@73)
 :pattern ( ($generated@@296 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@68) (and (= ($generated@@76 ($generated@@295 $generated@@299)) $generated@@64) (= ($generated@@296 ($generated@@295 $generated@@299)) $generated@@67)))
 :pattern ( ($generated@@295 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@80 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@83 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@80 $generated@@337 $generated@@2)) (= ($generated@@165 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@85 $generated@@336 $generated@@338))) (<= ($generated ($generated@@85 $generated@@336 $generated@@338)) ($generated@@289 $generated@@336))))
 :pattern ( ($generated@@85 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@165 $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@304 (type $generated@@339))))
(let (($generated@@341 ($generated@@303 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@302 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@301 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@300 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@304 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@80 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@304 (type $generated@@346))))
(let (($generated@@348 ($generated@@303 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@302 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@301 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@322 (type $generated@@350))))
(let (($generated@@352 ($generated@@321 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@320 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@319 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@318 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@322 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@80 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@322 (type $generated@@357))))
(let (($generated@@359 ($generated@@321 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@320 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@319 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@361) $generated@@138) (= (type $generated@@362) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@362) (and ($generated@@144 $generated@@361) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@68) ($generated@@78 $generated@@361 ($generated@@295 $generated@@363) $generated@@362))
 :pattern ( ($generated@@78 $generated@@361 ($generated@@295 $generated@@363) $generated@@362))
))))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@361)) $generated@@46 $generated@@362))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@145 $generated@@361)) $generated@@46 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@365) $generated@@68)) (= ($generated@@148 $generated@@364 ($generated@@164 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@364 $generated@@366)))) ($generated@@226 $generated@@366 $generated@@365))
 :pattern ( ($generated@@85 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@148 $generated@@364 ($generated@@164 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) $generated@@68) (= (type $generated@@368) $generated@@140)) (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@253 $generated@@369)) (= ($generated@@78 ($generated@@276 $generated@@368) ($generated@@295 $generated@@367) $generated@@369) ($generated@@254 $generated@@368 $generated@@367 $generated@@369)))
 :pattern ( ($generated@@78 ($generated@@276 $generated@@368) ($generated@@295 $generated@@367) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 Int) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@68) (= (type $generated@@372) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@253 $generated@@372)) (= ($generated@@78 ($generated@@280 $generated@@371) ($generated@@295 $generated@@370) $generated@@372) ($generated@@78 ($generated@@8 $generated@@371) $generated@@46 $generated@@372)))
 :pattern ( ($generated@@78 ($generated@@280 $generated@@371) ($generated@@295 $generated@@370) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@237 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@140) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@254 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@237 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@242 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@140) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@254 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@242 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@85 ($generated@@290 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@85 ($generated@@290 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@304 (type $generated@@389))))
(let (($generated@@391 ($generated@@303 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@393) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@392) ($generated@@158 ($generated@@384 $generated@@138 $generated@@393)))) (= ($generated@@85 ($generated@@385 $generated@@392) ($generated@@158 ($generated@@384 $generated@@138 $generated@@393))) ($generated@@159 ($generated@@384 $generated@@138 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@322 (type $generated@@397))))
(let (($generated@@399 ($generated@@321 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@401) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@400) ($generated@@158 ($generated@@384 $generated@@138 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@158 ($generated@@384 $generated@@138 $generated@@401))) ($generated@@159 ($generated@@384 $generated@@138 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@303 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@302 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@343 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@321 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@320 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@354 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@415) $generated@@419))) (and ($generated@@254 ($generated@@85 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@254 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@423) $generated@@427))) (and ($generated@@254 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@254 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) $generated@@68) (= (type $generated@@429) $generated@@138)) ($generated@@148 $generated@@429 ($generated@@295 $generated@@428))) (or ($generated@@137 $generated@@429) ($generated@@144 $generated@@429)))
 :pattern ( ($generated@@144 $generated@@429) ($generated@@148 $generated@@429 ($generated@@295 $generated@@428)))
 :pattern ( ($generated@@137 $generated@@429) ($generated@@148 $generated@@429 ($generated@@295 $generated@@428)))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@322 (type $generated@@432))))
(let (($generated@@434 ($generated@@321 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@320 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@319 $generated@@434 $generated@@433)) (= ($generated@@318 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@318 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@322 (type $generated@@435))))
(let (($generated@@437 ($generated@@321 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@320 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@319 $generated@@437 $generated@@436)) (= ($generated@@354 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@354 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@322 (type $generated@@438))))
(let (($generated@@440 ($generated@@321 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@320 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@319 $generated@@440 $generated@@439)) (= ($generated@@394 $generated@@438) ($generated@@430 $generated@@140))))))
 :pattern ( ($generated@@394 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@304 (type $generated@@441))))
(let (($generated@@443 ($generated@@303 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@302 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@301 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@140) (= (type $generated@@445) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@441) ($generated@@284 ($generated@@225 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@383 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@322 (type $generated@@446))))
(let (($generated@@448 ($generated@@321 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@320 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@319 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@140) (= (type $generated@@450) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@446) ($generated@@284 ($generated@@225 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@394 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@140) ($generated@@226 $generated@@451 $generated@@46)) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@451)) $generated@@451) ($generated@@148 ($generated@@384 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@140) ($generated@@226 $generated@@452 $generated@@47)) (and (= ($generated@@284 ($generated@@384 $generated@@3 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@384 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@140) ($generated@@226 $generated@@453 $generated@@44)) (and (= ($generated@@284 ($generated@@384 $generated@@4 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@384 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@140) ($generated@@226 $generated@@455 $generated@@45)) (and (= ($generated@@284 ($generated@@384 $generated@@454 $generated@@455)) $generated@@455) ($generated@@148 ($generated@@384 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@68) (= ($generated@@226 ($generated@@284 $generated@@456) $generated@@457) ($generated@@148 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@226 ($generated@@284 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@83 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@80 $generated@@459 $generated@@2)) (<= 0 ($generated@@289 $generated@@458))))
 :pattern ( ($generated@@289 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@271 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@270 $generated@@461)) (<= 0 ($generated@@269 $generated@@460))))
 :pattern ( ($generated@@269 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@412 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@412 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@412 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@420 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@420 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@420 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@140) (= (type $generated@@483) $generated@@140)) (= ($generated@@260 ($generated@@225 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@151 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@151 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@151 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@151 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@140) (= (type $generated@@493) $generated@@140)) (= ($generated@@158 ($generated@@225 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@225 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@140) (= (type $generated@@495) $generated@@140)) (= ($generated@@159 ($generated@@225 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@225 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@271 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@270 $generated@@140)) (= (type $generated@@503) $generated@@68)) (= (type $generated@@504) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@269 $generated@@502))) ($generated@@254 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@78 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@79 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@79 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@237 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@237 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@76 ($generated@@237 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@242 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@242 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@242 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@516 ($generated@@164 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@164 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@140) (= ($generated@@260 ($generated@@276 $generated@@524)) $generated@@63))
 :pattern ( ($generated@@276 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@295 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@295 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@140) (= ($generated@@139 ($generated@@276 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@276 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@260 ($generated@@280 $generated@@529)) $generated@@65)
 :pattern ( ($generated@@280 $generated@@529))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@145 ($generated@@280 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@280 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@384 $generated@@532 ($generated@@284 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@284 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@148 $generated@@533 ($generated@@412 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@533) $generated@@536))) (and ($generated@@226 ($generated@@85 ($generated@@385 $generated@@533) $generated@@536) $generated@@535) ($generated@@226 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@533) $generated@@536))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@412 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) (= ($generated@@148 $generated@@537 ($generated@@420 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@537) $generated@@540))) (and ($generated@@226 ($generated@@85 ($generated@@395 $generated@@537) $generated@@540) $generated@@539) ($generated@@226 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@537) $generated@@540))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@148 $generated@@537 ($generated@@420 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@140)) (= ($generated@@148 ($generated@@276 $generated@@542) ($generated@@295 $generated@@541)) ($generated@@226 $generated@@542 $generated@@541)))
 :pattern ( ($generated@@148 ($generated@@276 $generated@@542) ($generated@@295 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 Int) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@148 ($generated@@280 $generated@@544) ($generated@@295 $generated@@543)) ($generated@@148 ($generated@@8 $generated@@544) $generated@@46)))
 :pattern ( ($generated@@148 ($generated@@280 $generated@@544) ($generated@@295 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@140) (= (type $generated@@548) $generated@@140)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@225 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@140)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@225 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@140) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@226 $generated@@551 ($generated@@412 $generated@@552 $generated@@553))) (and (= ($generated@@284 ($generated@@384 ($generated@@302 $generated@@140 $generated@@140) $generated@@551)) $generated@@551) ($generated@@148 ($generated@@384 ($generated@@302 $generated@@140 $generated@@140) $generated@@551) ($generated@@412 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@551 ($generated@@412 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@140) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) ($generated@@226 $generated@@554 ($generated@@420 $generated@@555 $generated@@556))) (and (= ($generated@@284 ($generated@@384 ($generated@@320 $generated@@140 $generated@@140) $generated@@554)) $generated@@554) ($generated@@148 ($generated@@384 ($generated@@320 $generated@@140 $generated@@140) $generated@@554) ($generated@@420 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@420 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@140)) ($generated@@226 $generated@@559 ($generated@@151 $generated@@557 $generated@@558))) (and (= ($generated@@284 ($generated@@384 $generated@@138 $generated@@559)) $generated@@559) ($generated@@148 ($generated@@384 $generated@@138 $generated@@559) ($generated@@151 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@226 $generated@@559 ($generated@@151 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@140) (< ($generated@@545 $generated@@560) ($generated@@546 ($generated@@276 $generated@@560))))
 :pattern ( ($generated@@276 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@138) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@563) (and ($generated@@137 $generated@@561) ($generated@@78 $generated@@561 ($generated@@295 $generated@@562) $generated@@563)))) ($generated@@254 ($generated@@139 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@254 ($generated@@139 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@85 ($generated@@430 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@85 ($generated@@430 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@68) (= (type $generated@@567) $generated@@68)) (and (= ($generated@@76 ($generated@@151 $generated@@566 $generated@@567)) $generated@@62) (= ($generated@@296 ($generated@@151 $generated@@566 $generated@@567)) $generated@@66)))
 :pattern ( ($generated@@151 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@138) (= ($generated@@545 ($generated@@284 $generated@@568)) ($generated@@546 $generated@@568)))
 :pattern ( ($generated@@545 ($generated@@284 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@140) ($generated@@226 $generated@@569 ($generated@@79 0))) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@569)) $generated@@569) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@569) ($generated@@79 0))))
 :pattern ( ($generated@@226 $generated@@569 ($generated@@79 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@140) (= (type $generated@@571) $generated@@68)) ($generated@@226 $generated@@570 ($generated@@237 $generated@@571))) (and (= ($generated@@284 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@570)) $generated@@570) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@570) ($generated@@237 $generated@@571))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@237 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@140) (= (type $generated@@573) $generated@@68)) ($generated@@226 $generated@@572 ($generated@@242 $generated@@573))) (and (= ($generated@@284 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@572)) $generated@@572) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@572) ($generated@@242 $generated@@573))))
 :pattern ( ($generated@@226 $generated@@572 ($generated@@242 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@140) (= (type $generated@@575) $generated@@68)) ($generated@@226 $generated@@574 ($generated@@164 $generated@@575))) (and (= ($generated@@284 ($generated@@384 ($generated@@80 $generated@@140 $generated@@2) $generated@@574)) $generated@@574) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@2) $generated@@574) ($generated@@164 $generated@@575))))
 :pattern ( ($generated@@226 $generated@@574 ($generated@@164 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@140) (= (type $generated@@577) $generated@@68)) ($generated@@226 $generated@@576 ($generated@@496 $generated@@577))) (and (= ($generated@@284 ($generated@@384 ($generated@@270 $generated@@140) $generated@@576)) $generated@@576) ($generated@@148 ($generated@@384 ($generated@@270 $generated@@140) $generated@@576) ($generated@@496 $generated@@577))))
 :pattern ( ($generated@@226 $generated@@576 ($generated@@496 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@140)) ($generated@@226 $generated@@579 ($generated@@295 $generated@@578))) (and (= ($generated@@284 ($generated@@384 $generated@@138 $generated@@579)) $generated@@579) ($generated@@148 ($generated@@384 $generated@@138 $generated@@579) ($generated@@295 $generated@@578))))
 :pattern ( ($generated@@226 $generated@@579 ($generated@@295 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@580 ($generated@@164 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@580 $generated@@583)))) ($generated@@254 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@85 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@78 $generated@@580 ($generated@@164 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@138) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@586) (and ($generated@@150 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@68) ($generated@@78 $generated@@584 ($generated@@151 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@151 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@254 ($generated@@158 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@254 ($generated@@158 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@138) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@590) (and ($generated@@150 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@151 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@151 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@254 ($generated@@159 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@254 ($generated@@159 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@140) (= (type $generated@@593) $generated@@140)) (= ($generated@@225 ($generated@@249 $generated@@592) ($generated@@249 $generated@@593)) ($generated@@249 ($generated@@225 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@225 ($generated@@249 $generated@@592) ($generated@@249 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@247 $generated@@594))) ($generated@@249 ($generated@@284 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@247 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@140) (= ($generated@@276 ($generated@@249 $generated@@595)) ($generated@@249 ($generated@@276 $generated@@595))))
 :pattern ( ($generated@@276 ($generated@@249 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@280 ($generated@@247 $generated@@596)) ($generated@@249 ($generated@@280 $generated@@596)))
 :pattern ( ($generated@@280 ($generated@@247 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@284 ($generated@@249 $generated@@597)) ($generated@@249 ($generated@@284 $generated@@597)))
 :pattern ( ($generated@@284 ($generated@@249 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@271 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@270 $generated@@599)) (= ($generated@@269 $generated@@598) 0)) (= $generated@@598 ($generated@@268 $generated@@599))))
 :pattern ( ($generated@@269 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@80 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@289 ($generated@@86 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@289 $generated@@600) ($generated ($generated@@85 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@289 ($generated@@86 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@605) $generated@@2)) ($generated@@78 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@78 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@607) $generated@@3)) ($generated@@78 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@78 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@4)) ($generated@@78 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@454)) ($generated@@78 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@140)) ($generated@@78 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@270 $generated@@140)) (= (type $generated@@615) $generated@@68)) (= ($generated@@148 $generated@@614 ($generated@@496 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@269 $generated@@614))) ($generated@@226 ($generated@@497 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@497 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@496 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@270 $generated@@140)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@269 $generated@@618))) (< ($generated@@546 ($generated@@384 $generated@@138 ($generated@@497 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@546 ($generated@@384 $generated@@138 ($generated@@497 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@148 $generated@@620 ($generated@@412 $generated@@621 $generated@@622))) (and (and ($generated@@148 ($generated@@300 $generated@@620) ($generated@@237 $generated@@621)) ($generated@@148 ($generated@@343 $generated@@620) ($generated@@237 $generated@@622))) ($generated@@148 ($generated@@383 $generated@@620) ($generated@@237 ($generated@@151 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@148 $generated@@620 ($generated@@412 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@148 $generated@@623 ($generated@@420 $generated@@624 $generated@@625))) (and (and ($generated@@148 ($generated@@318 $generated@@623) ($generated@@242 $generated@@624)) ($generated@@148 ($generated@@354 $generated@@623) ($generated@@242 $generated@@625))) ($generated@@148 ($generated@@394 $generated@@623) ($generated@@242 ($generated@@151 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@148 $generated@@623 ($generated@@420 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@148 $generated@@626 $generated@@46))
 :pattern ( ($generated@@148 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@148 $generated@@627 $generated@@47))
 :pattern ( ($generated@@148 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@148 $generated@@628 $generated@@44))
 :pattern ( ($generated@@148 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@454) ($generated@@148 $generated@@629 $generated@@45))
 :pattern ( ($generated@@148 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@140) ($generated@@148 $generated@@630 $generated@@48))
 :pattern ( ($generated@@148 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@631) ($generated@@171 $generated@@81 $generated@@4)) (= (type $generated@@632) $generated@@81)) (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@634) $generated@@138)) (= (type $generated@@635) $generated@@138)) (= (type $generated@@637) $generated@@68)) (= (type $generated@@638) $generated@@138)) (= (type $generated@@639) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@641  (=> (= $generated@@631 ($generated@@170 $generated@@632 $generated@@633 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@144 $generated@@634)) (=> ($generated@@144 $generated@@634) (=> (= $generated@@635 ($generated@@280 ($generated@@145 $generated@@634))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@144 $generated@@635)) (=> ($generated@@144 $generated@@635) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@145 $generated@@635) ($generated@@145 $generated@@634)))))))))))
(let (($generated@@642  (=> (and (and ($generated@@253 $generated@@633) ($generated@@636 $generated@@633)) (and ($generated@@148 $generated@@634 ($generated@@295 $generated@@637)) ($generated@@78 $generated@@634 ($generated@@295 $generated@@637) $generated@@633))) (=> (and (and (and ($generated@@148 $generated@@638 ($generated@@295 $generated@@639)) ($generated@@78 $generated@@638 ($generated@@295 $generated@@639) $generated@@633)) (= 1 $generated@@640)) (and ($generated@@144 $generated@@634) (= (ControlFlow 0 5) 2))) $generated@@641))))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 (T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@247 (Int) Int)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (Int) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@290 (T@T) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@301 (T@T T@T) T@U)
(declare-fun $generated@@302 (T@T T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@497 (T@U Int) T@U)
(declare-fun $generated@@506 (T@U) Int)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@138) (= (type $generated@@147) $generated@@138)) (and ($generated@@144 $generated@@146) ($generated@@144 $generated@@147))) (= ($generated@@136 $generated@@146 $generated@@147) (= ($generated@@145 $generated@@146) ($generated@@145 $generated@@147))))
 :pattern ( ($generated@@136 $generated@@146 $generated@@147) ($generated@@144 $generated@@146))
 :pattern ( ($generated@@136 $generated@@146 $generated@@147) ($generated@@144 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@79 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@79 0)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@152 $generated@@153)) $generated@@68)
 :pattern ( ($generated@@151 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@68) (= (type $generated@@155) $generated@@68)) (= (type $generated@@156) $generated@@138)) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155))) ($generated@@150 $generated@@156))
 :pattern ( ($generated@@150 $generated@@156) ($generated@@148 $generated@@156 ($generated@@151 $generated@@154 $generated@@155)))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@140)
 :pattern ( ($generated@@158 $generated@@160))
)) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@140)
 :pattern ( ($generated@@159 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@138) (= (type $generated@@163) $generated@@138)) true) (= ($generated@@157 $generated@@162 $generated@@163)  (and (= ($generated@@158 $generated@@162) ($generated@@158 $generated@@163)) (= ($generated@@159 $generated@@162) ($generated@@159 $generated@@163)))))
 :pattern ( ($generated@@157 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ) (! (= (type ($generated@@164 $generated@@166)) $generated@@68)
 :pattern ( ($generated@@164 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@168) $generated@@68)) ($generated@@148 $generated@@167 ($generated@@164 $generated@@168))) ($generated@@165 $generated@@167))
 :pattern ( ($generated@@148 $generated@@167 ($generated@@164 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@1 ($generated@@171 $generated@@175 $generated@@176)) 16)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@172 ($generated@@171 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@173 ($generated@@171 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@171 $generated@@179 $generated@@180))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@173 (type $generated@@181))))
(= (type ($generated@@169 $generated@@181 $generated@@182 $generated@@183)) $generated@@184))
 :pattern ( ($generated@@169 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 (type $generated@@188)))
(let (($generated@@190 (type $generated@@186)))
(= (type ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188)) ($generated@@171 $generated@@190 $generated@@189))))
 :pattern ( ($generated@@174 $generated@@185 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 ($generated@@173 (type $generated@@191))))
 (=> (= (type $generated@@194) $generated@@195) (= ($generated@@169 ($generated@@174 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@192 $generated@@193) $generated@@194)))
 :weight 0
))) (and (and (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@169 ($generated@@174 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@169 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@169 ($generated@@174 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@169 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or true (= ($generated@@169 ($generated@@174 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@169 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ) (! (= (type ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217)) ($generated@@171 $generated@@81 $generated@@4))
 :pattern ( ($generated@@170 $generated@@214 $generated@@215 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@71 (type $generated@@223))))
 (=> (and (and (and (and (= (type $generated@@218) $generated@@81) (= (type $generated@@219) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@220) ($generated@@70 $generated@@4))) (= (type $generated@@222) $generated@@81)) (= (type $generated@@223) ($generated@@70 $generated@@224))) (= ($generated@@0 ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (not (= $generated@@222 $generated@@218)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@219 $generated@@222) $generated@@220))) $generated@@221))))
 :pattern ( ($generated@@169 ($generated@@170 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@138)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@68) (= (type $generated@@230) $generated@@68)) (= (type $generated@@231) $generated@@140)) (= (type $generated@@232) $generated@@140)) (= ($generated@@148 ($generated@@225 $generated@@231 $generated@@232) ($generated@@151 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@148 ($generated@@225 $generated@@231 $generated@@232) ($generated@@151 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@138) (= (type $generated@@234) $generated@@138)) (= ($generated@@157 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@157 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@138) (= (type $generated@@236) $generated@@138)) (= ($generated@@136 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@136 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (= (type ($generated@@237 $generated@@238)) $generated@@68)
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@240) $generated@@68)) (= ($generated@@148 $generated@@239 ($generated@@237 $generated@@240)) (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@140) ($generated@@0 ($generated@@85 $generated@@239 $generated@@241))) ($generated@@226 $generated@@241 $generated@@240))
 :pattern ( ($generated@@85 $generated@@239 $generated@@241))
))))
 :pattern ( ($generated@@148 $generated@@239 ($generated@@237 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@245) $generated@@68)) (= ($generated@@148 $generated@@244 ($generated@@242 $generated@@245)) (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@140) ($generated@@0 ($generated@@85 $generated@@244 $generated@@246))) ($generated@@226 $generated@@246 $generated@@245))
 :pattern ( ($generated@@85 $generated@@244 $generated@@246))
))))
 :pattern ( ($generated@@148 $generated@@244 ($generated@@242 $generated@@245)))
)))
(assert (forall (($generated@@248 Int) ) (! (= ($generated@@247 $generated@@248) $generated@@248)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@255) $generated@@68) (= (type $generated@@256) $generated@@68)) (= (type $generated@@257) $generated@@140)) (= (type $generated@@258) $generated@@140)) (= (type $generated@@259) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@253 $generated@@259)) (= ($generated@@78 ($generated@@225 $generated@@257 $generated@@258) ($generated@@151 $generated@@255 $generated@@256) $generated@@259)  (and ($generated@@254 $generated@@257 $generated@@255 $generated@@259) ($generated@@254 $generated@@258 $generated@@256 $generated@@259))))
 :pattern ( ($generated@@78 ($generated@@225 $generated@@257 $generated@@258) ($generated@@151 $generated@@255 $generated@@256) $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@72)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@138) (= ($generated@@150 $generated@@262) (= ($generated@@260 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@150 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@138) (= ($generated@@137 $generated@@263) (= ($generated@@260 $generated@@263) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@138) (= ($generated@@144 $generated@@264) (= ($generated@@260 $generated@@264) $generated@@65)))
 :pattern ( ($generated@@144 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@138) ($generated@@150 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@140) (= (type $generated@@267) $generated@@140)) (= $generated@@265 ($generated@@225 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@150 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@138)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@138) ($generated@@137 $generated@@278)) (exists (($generated@@279 T@U) ) (!  (and (= (type $generated@@279) $generated@@140) (= $generated@@278 ($generated@@276 $generated@@279)))
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@137 $generated@@278))
)))
(assert (forall (($generated@@281 Int) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@138)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@138) ($generated@@144 $generated@@282)) (exists (($generated@@283 Int) ) (= $generated@@282 ($generated@@280 $generated@@283))))
 :pattern ( ($generated@@144 $generated@@282))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@140)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@68) (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@254 ($generated@@284 $generated@@286) $generated@@287 $generated@@288) ($generated@@78 $generated@@286 $generated@@287 $generated@@288)))
 :pattern ( ($generated@@254 ($generated@@284 $generated@@286) $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@291 T@T) ) (! (= (type ($generated@@290 $generated@@291)) ($generated@@80 $generated@@291 $generated@@2))
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@83 (type $generated@@292))))
 (=> (= (type $generated@@292) ($generated@@80 $generated@@293 $generated@@2)) (and (= (= ($generated@@289 $generated@@292) 0) (= $generated@@292 ($generated@@290 $generated@@293))) (=> (not (= ($generated@@289 $generated@@292) 0)) (exists (($generated@@294 T@U) ) (!  (and (= (type $generated@@294) $generated@@293) (< 0 ($generated ($generated@@85 $generated@@292 $generated@@294))))
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
))))))
 :pattern ( ($generated@@289 $generated@@292))
)))
(assert  (and (forall (($generated@@297 T@U) ) (! (= (type ($generated@@295 $generated@@297)) $generated@@68)
 :pattern ( ($generated@@295 $generated@@297))
)) (forall (($generated@@298 T@U) ) (! (= (type ($generated@@296 $generated@@298)) $generated@@73)
 :pattern ( ($generated@@296 $generated@@298))
))))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@68) (and (= ($generated@@76 ($generated@@295 $generated@@299)) $generated@@64) (= ($generated@@296 ($generated@@295 $generated@@299)) $generated@@67)))
 :pattern ( ($generated@@295 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (= ($generated@@1 ($generated@@302 $generated@@305 $generated@@306)) 18)) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@307 $generated@@308)) $generated@@307)
 :pattern ( ($generated@@302 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@302 $generated@@309 $generated@@310)) $generated@@310)
 :pattern ( ($generated@@302 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@303 (type $generated@@311))))
(= (type ($generated@@300 $generated@@311)) ($generated@@80 $generated@@312 $generated@@4)))
 :pattern ( ($generated@@300 $generated@@311))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= (type ($generated@@301 $generated@@313 $generated@@314)) ($generated@@302 $generated@@313 $generated@@314))
 :pattern ( ($generated@@301 $generated@@313 $generated@@314))
))))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@T) ) (! (let (($generated@@317 (type $generated@@315)))
 (not ($generated@@0 ($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315))))
 :pattern ( (let (($generated@@317 (type $generated@@315)))
($generated@@85 ($generated@@300 ($generated@@301 $generated@@317 $generated@@316)) $generated@@315)))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 19)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@80 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@85 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@83 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@80 $generated@@337 $generated@@2)) (= ($generated@@165 $generated@@336) (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@337) (and (<= 0 ($generated ($generated@@85 $generated@@336 $generated@@338))) (<= ($generated ($generated@@85 $generated@@336 $generated@@338)) ($generated@@289 $generated@@336))))
 :pattern ( ($generated@@85 $generated@@336 $generated@@338))
)))))
 :pattern ( ($generated@@165 $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@304 (type $generated@@339))))
(let (($generated@@341 ($generated@@303 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@302 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@301 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@300 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@304 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@80 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@304 (type $generated@@346))))
(let (($generated@@348 ($generated@@303 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@302 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@301 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@85 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@322 (type $generated@@350))))
(let (($generated@@352 ($generated@@321 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@320 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@319 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@318 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@322 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@80 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@322 (type $generated@@357))))
(let (($generated@@359 ($generated@@321 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@320 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@319 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@85 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@361) $generated@@138) (= (type $generated@@362) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@362) (and ($generated@@144 $generated@@361) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@68) ($generated@@78 $generated@@361 ($generated@@295 $generated@@363) $generated@@362))
 :pattern ( ($generated@@78 $generated@@361 ($generated@@295 $generated@@363) $generated@@362))
))))) ($generated@@78 ($generated@@8 ($generated@@145 $generated@@361)) $generated@@46 $generated@@362))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@145 $generated@@361)) $generated@@46 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@365) $generated@@68)) (= ($generated@@148 $generated@@364 ($generated@@164 $generated@@365)) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@364 $generated@@366)))) ($generated@@226 $generated@@366 $generated@@365))
 :pattern ( ($generated@@85 $generated@@364 $generated@@366))
))))
 :pattern ( ($generated@@148 $generated@@364 ($generated@@164 $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (and (= (type $generated@@367) $generated@@68) (= (type $generated@@368) $generated@@140)) (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@253 $generated@@369)) (= ($generated@@78 ($generated@@276 $generated@@368) ($generated@@295 $generated@@367) $generated@@369) ($generated@@254 $generated@@368 $generated@@367 $generated@@369)))
 :pattern ( ($generated@@78 ($generated@@276 $generated@@368) ($generated@@295 $generated@@367) $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 Int) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@68) (= (type $generated@@372) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@253 $generated@@372)) (= ($generated@@78 ($generated@@280 $generated@@371) ($generated@@295 $generated@@370) $generated@@372) ($generated@@78 ($generated@@8 $generated@@371) $generated@@46 $generated@@372)))
 :pattern ( ($generated@@78 ($generated@@280 $generated@@371) ($generated@@295 $generated@@370) $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@237 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@140) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@254 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@237 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@242 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@140) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@254 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@242 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@85 ($generated@@290 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@85 ($generated@@290 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@304 (type $generated@@389))))
(let (($generated@@391 ($generated@@303 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@393) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@392) ($generated@@158 ($generated@@384 $generated@@138 $generated@@393)))) (= ($generated@@85 ($generated@@385 $generated@@392) ($generated@@158 ($generated@@384 $generated@@138 $generated@@393))) ($generated@@159 ($generated@@384 $generated@@138 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@322 (type $generated@@397))))
(let (($generated@@399 ($generated@@321 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@401) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@400) ($generated@@158 ($generated@@384 $generated@@138 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@158 ($generated@@384 $generated@@138 $generated@@401))) ($generated@@159 ($generated@@384 $generated@@138 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@303 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@302 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@343 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@300 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@343 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@321 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@320 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@354 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@318 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@354 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@415) $generated@@419))) (and ($generated@@254 ($generated@@85 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@254 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@423) $generated@@427))) (and ($generated@@254 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@254 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) $generated@@68) (= (type $generated@@429) $generated@@138)) ($generated@@148 $generated@@429 ($generated@@295 $generated@@428))) (or ($generated@@137 $generated@@429) ($generated@@144 $generated@@429)))
 :pattern ( ($generated@@144 $generated@@429) ($generated@@148 $generated@@429 ($generated@@295 $generated@@428)))
 :pattern ( ($generated@@137 $generated@@429) ($generated@@148 $generated@@429 ($generated@@295 $generated@@428)))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@322 (type $generated@@432))))
(let (($generated@@434 ($generated@@321 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@320 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@319 $generated@@434 $generated@@433)) (= ($generated@@318 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@318 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@322 (type $generated@@435))))
(let (($generated@@437 ($generated@@321 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@320 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@319 $generated@@437 $generated@@436)) (= ($generated@@354 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@354 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@322 (type $generated@@438))))
(let (($generated@@440 ($generated@@321 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@320 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@319 $generated@@440 $generated@@439)) (= ($generated@@394 $generated@@438) ($generated@@430 $generated@@140))))))
 :pattern ( ($generated@@394 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@304 (type $generated@@441))))
(let (($generated@@443 ($generated@@303 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@302 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@301 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@140) (= (type $generated@@445) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@441) ($generated@@284 ($generated@@225 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@383 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@322 (type $generated@@446))))
(let (($generated@@448 ($generated@@321 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@320 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@319 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@140) (= (type $generated@@450) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@446) ($generated@@284 ($generated@@225 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@394 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@140) ($generated@@226 $generated@@451 $generated@@46)) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@451)) $generated@@451) ($generated@@148 ($generated@@384 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@140) ($generated@@226 $generated@@452 $generated@@47)) (and (= ($generated@@284 ($generated@@384 $generated@@3 $generated@@452)) $generated@@452) ($generated@@148 ($generated@@384 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@140) ($generated@@226 $generated@@453 $generated@@44)) (and (= ($generated@@284 ($generated@@384 $generated@@4 $generated@@453)) $generated@@453) ($generated@@148 ($generated@@384 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@140) ($generated@@226 $generated@@455 $generated@@45)) (and (= ($generated@@284 ($generated@@384 $generated@@454 $generated@@455)) $generated@@455) ($generated@@148 ($generated@@384 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@68) (= ($generated@@226 ($generated@@284 $generated@@456) $generated@@457) ($generated@@148 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@226 ($generated@@284 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@83 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@80 $generated@@459 $generated@@2)) (<= 0 ($generated@@289 $generated@@458))))
 :pattern ( ($generated@@289 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@271 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@270 $generated@@461)) (<= 0 ($generated@@269 $generated@@460))))
 :pattern ( ($generated@@269 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@412 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@412 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@412 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@420 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@420 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@420 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@140) (= (type $generated@@483) $generated@@140)) (= ($generated@@260 ($generated@@225 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@151 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@151 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@151 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@151 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@140) (= (type $generated@@493) $generated@@140)) (= ($generated@@158 ($generated@@225 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@225 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@140) (= (type $generated@@495) $generated@@140)) (= ($generated@@159 ($generated@@225 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@225 $generated@@494 $generated@@495))
)))
(assert  (and (forall (($generated@@498 T@U) ) (! (= (type ($generated@@496 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@498))
)) (forall (($generated@@499 T@U) ($generated@@500 Int) ) (! (let (($generated@@501 ($generated@@271 (type $generated@@499))))
(= (type ($generated@@497 $generated@@499 $generated@@500)) $generated@@501))
 :pattern ( ($generated@@497 $generated@@499 $generated@@500))
))))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@270 $generated@@140)) (= (type $generated@@503) $generated@@68)) (= (type $generated@@504) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@502 ($generated@@496 $generated@@503) $generated@@504) (forall (($generated@@505 Int) ) (!  (=> (and (<= 0 $generated@@505) (< $generated@@505 ($generated@@269 $generated@@502))) ($generated@@254 ($generated@@497 $generated@@502 $generated@@505) $generated@@503 $generated@@504))
 :pattern ( ($generated@@497 $generated@@502 $generated@@505))
))))
 :pattern ( ($generated@@78 $generated@@502 ($generated@@496 $generated@@503) $generated@@504))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@506 ($generated@@79 $generated@@507)) $generated@@507)
 :pattern ( ($generated@@79 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@237 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@237 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@76 ($generated@@237 $generated@@511)) $generated@@54))
 :pattern ( ($generated@@237 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@242 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@242 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@242 $generated@@515)) $generated@@55))
 :pattern ( ($generated@@242 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@516 ($generated@@164 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@164 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@76 ($generated@@164 $generated@@519)) $generated@@56))
 :pattern ( ($generated@@164 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@496 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@496 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@496 $generated@@523)) $generated@@57))
 :pattern ( ($generated@@496 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@140) (= ($generated@@260 ($generated@@276 $generated@@524)) $generated@@63))
 :pattern ( ($generated@@276 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@295 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@295 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@140) (= ($generated@@139 ($generated@@276 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@276 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@260 ($generated@@280 $generated@@529)) $generated@@65)
 :pattern ( ($generated@@280 $generated@@529))
)))
(assert (forall (($generated@@530 Int) ) (! (= ($generated@@145 ($generated@@280 $generated@@530)) $generated@@530)
 :pattern ( ($generated@@280 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@384 $generated@@532 ($generated@@284 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@284 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@148 $generated@@533 ($generated@@412 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@300 $generated@@533) $generated@@536))) (and ($generated@@226 ($generated@@85 ($generated@@385 $generated@@533) $generated@@536) $generated@@535) ($generated@@226 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@533) $generated@@536))
 :pattern ( ($generated@@85 ($generated@@300 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@148 $generated@@533 ($generated@@412 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) (= ($generated@@148 $generated@@537 ($generated@@420 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@318 $generated@@537) $generated@@540))) (and ($generated@@226 ($generated@@85 ($generated@@395 $generated@@537) $generated@@540) $generated@@539) ($generated@@226 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@537) $generated@@540))
 :pattern ( ($generated@@85 ($generated@@318 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@148 $generated@@537 ($generated@@420 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@140)) (= ($generated@@148 ($generated@@276 $generated@@542) ($generated@@295 $generated@@541)) ($generated@@226 $generated@@542 $generated@@541)))
 :pattern ( ($generated@@148 ($generated@@276 $generated@@542) ($generated@@295 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 Int) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@148 ($generated@@280 $generated@@544) ($generated@@295 $generated@@543)) ($generated@@148 ($generated@@8 $generated@@544) $generated@@46)))
 :pattern ( ($generated@@148 ($generated@@280 $generated@@544) ($generated@@295 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@140) (= (type $generated@@548) $generated@@140)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@225 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@225 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@140)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@225 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@140) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@226 $generated@@551 ($generated@@412 $generated@@552 $generated@@553))) (and (= ($generated@@284 ($generated@@384 ($generated@@302 $generated@@140 $generated@@140) $generated@@551)) $generated@@551) ($generated@@148 ($generated@@384 ($generated@@302 $generated@@140 $generated@@140) $generated@@551) ($generated@@412 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@226 $generated@@551 ($generated@@412 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@140) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) ($generated@@226 $generated@@554 ($generated@@420 $generated@@555 $generated@@556))) (and (= ($generated@@284 ($generated@@384 ($generated@@320 $generated@@140 $generated@@140) $generated@@554)) $generated@@554) ($generated@@148 ($generated@@384 ($generated@@320 $generated@@140 $generated@@140) $generated@@554) ($generated@@420 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@226 $generated@@554 ($generated@@420 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@140)) ($generated@@226 $generated@@559 ($generated@@151 $generated@@557 $generated@@558))) (and (= ($generated@@284 ($generated@@384 $generated@@138 $generated@@559)) $generated@@559) ($generated@@148 ($generated@@384 $generated@@138 $generated@@559) ($generated@@151 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@226 $generated@@559 ($generated@@151 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@140) (< ($generated@@545 $generated@@560) ($generated@@546 ($generated@@276 $generated@@560))))
 :pattern ( ($generated@@276 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@138) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@563) (and ($generated@@137 $generated@@561) ($generated@@78 $generated@@561 ($generated@@295 $generated@@562) $generated@@563)))) ($generated@@254 ($generated@@139 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@254 ($generated@@139 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@85 ($generated@@430 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@85 ($generated@@430 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@68) (= (type $generated@@567) $generated@@68)) (and (= ($generated@@76 ($generated@@151 $generated@@566 $generated@@567)) $generated@@62) (= ($generated@@296 ($generated@@151 $generated@@566 $generated@@567)) $generated@@66)))
 :pattern ( ($generated@@151 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@138) (= ($generated@@545 ($generated@@284 $generated@@568)) ($generated@@546 $generated@@568)))
 :pattern ( ($generated@@545 ($generated@@284 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@140) ($generated@@226 $generated@@569 ($generated@@79 0))) (and (= ($generated@@284 ($generated@@384 $generated@@2 $generated@@569)) $generated@@569) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@569) ($generated@@79 0))))
 :pattern ( ($generated@@226 $generated@@569 ($generated@@79 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@140) (= (type $generated@@571) $generated@@68)) ($generated@@226 $generated@@570 ($generated@@237 $generated@@571))) (and (= ($generated@@284 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@570)) $generated@@570) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@570) ($generated@@237 $generated@@571))))
 :pattern ( ($generated@@226 $generated@@570 ($generated@@237 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@140) (= (type $generated@@573) $generated@@68)) ($generated@@226 $generated@@572 ($generated@@242 $generated@@573))) (and (= ($generated@@284 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@572)) $generated@@572) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@4) $generated@@572) ($generated@@242 $generated@@573))))
 :pattern ( ($generated@@226 $generated@@572 ($generated@@242 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@140) (= (type $generated@@575) $generated@@68)) ($generated@@226 $generated@@574 ($generated@@164 $generated@@575))) (and (= ($generated@@284 ($generated@@384 ($generated@@80 $generated@@140 $generated@@2) $generated@@574)) $generated@@574) ($generated@@148 ($generated@@384 ($generated@@80 $generated@@140 $generated@@2) $generated@@574) ($generated@@164 $generated@@575))))
 :pattern ( ($generated@@226 $generated@@574 ($generated@@164 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@140) (= (type $generated@@577) $generated@@68)) ($generated@@226 $generated@@576 ($generated@@496 $generated@@577))) (and (= ($generated@@284 ($generated@@384 ($generated@@270 $generated@@140) $generated@@576)) $generated@@576) ($generated@@148 ($generated@@384 ($generated@@270 $generated@@140) $generated@@576) ($generated@@496 $generated@@577))))
 :pattern ( ($generated@@226 $generated@@576 ($generated@@496 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@68) (= (type $generated@@579) $generated@@140)) ($generated@@226 $generated@@579 ($generated@@295 $generated@@578))) (and (= ($generated@@284 ($generated@@384 $generated@@138 $generated@@579)) $generated@@579) ($generated@@148 ($generated@@384 $generated@@138 $generated@@579) ($generated@@295 $generated@@578))))
 :pattern ( ($generated@@226 $generated@@579 ($generated@@295 $generated@@578)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@580 ($generated@@164 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@580 $generated@@583)))) ($generated@@254 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@85 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@78 $generated@@580 ($generated@@164 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@138) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@586) (and ($generated@@150 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@68) ($generated@@78 $generated@@584 ($generated@@151 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@151 $generated@@585 $generated@@587) $generated@@586))
))))) ($generated@@254 ($generated@@158 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@254 ($generated@@158 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@138) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@253 $generated@@590) (and ($generated@@150 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@151 $generated@@591 $generated@@589) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@151 $generated@@591 $generated@@589) $generated@@590))
))))) ($generated@@254 ($generated@@159 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@254 ($generated@@159 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@140) (= (type $generated@@593) $generated@@140)) (= ($generated@@225 ($generated@@249 $generated@@592) ($generated@@249 $generated@@593)) ($generated@@249 ($generated@@225 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@225 ($generated@@249 $generated@@592) ($generated@@249 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@284 ($generated@@8 ($generated@@247 $generated@@594))) ($generated@@249 ($generated@@284 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@284 ($generated@@8 ($generated@@247 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@140) (= ($generated@@276 ($generated@@249 $generated@@595)) ($generated@@249 ($generated@@276 $generated@@595))))
 :pattern ( ($generated@@276 ($generated@@249 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@280 ($generated@@247 $generated@@596)) ($generated@@249 ($generated@@280 $generated@@596)))
 :pattern ( ($generated@@280 ($generated@@247 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (= ($generated@@284 ($generated@@249 $generated@@597)) ($generated@@249 ($generated@@284 $generated@@597)))
 :pattern ( ($generated@@284 ($generated@@249 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@271 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@270 $generated@@599)) (= ($generated@@269 $generated@@598) 0)) (= $generated@@598 ($generated@@268 $generated@@599))))
 :pattern ( ($generated@@269 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@80 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@289 ($generated@@86 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@289 $generated@@600) ($generated ($generated@@85 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@289 ($generated@@86 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@605) $generated@@2)) ($generated@@78 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@78 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@607) $generated@@3)) ($generated@@78 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@78 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@4)) ($generated@@78 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@454)) ($generated@@78 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@140)) ($generated@@78 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@270 $generated@@140)) (= (type $generated@@615) $generated@@68)) (= ($generated@@148 $generated@@614 ($generated@@496 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@269 $generated@@614))) ($generated@@226 ($generated@@497 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@497 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@148 $generated@@614 ($generated@@496 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@270 $generated@@140)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@269 $generated@@618))) (< ($generated@@546 ($generated@@384 $generated@@138 ($generated@@497 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@546 ($generated@@384 $generated@@138 ($generated@@497 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@302 $generated@@140 $generated@@140)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@148 $generated@@620 ($generated@@412 $generated@@621 $generated@@622))) (and (and ($generated@@148 ($generated@@300 $generated@@620) ($generated@@237 $generated@@621)) ($generated@@148 ($generated@@343 $generated@@620) ($generated@@237 $generated@@622))) ($generated@@148 ($generated@@383 $generated@@620) ($generated@@237 ($generated@@151 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@148 $generated@@620 ($generated@@412 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@320 $generated@@140 $generated@@140)) (= (type $generated@@624) $generated@@68)) (= (type $generated@@625) $generated@@68)) ($generated@@148 $generated@@623 ($generated@@420 $generated@@624 $generated@@625))) (and (and ($generated@@148 ($generated@@318 $generated@@623) ($generated@@242 $generated@@624)) ($generated@@148 ($generated@@354 $generated@@623) ($generated@@242 $generated@@625))) ($generated@@148 ($generated@@394 $generated@@623) ($generated@@242 ($generated@@151 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@148 $generated@@623 ($generated@@420 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@148 $generated@@626 $generated@@46))
 :pattern ( ($generated@@148 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@148 $generated@@627 $generated@@47))
 :pattern ( ($generated@@148 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@148 $generated@@628 $generated@@44))
 :pattern ( ($generated@@148 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@454) ($generated@@148 $generated@@629 $generated@@45))
 :pattern ( ($generated@@148 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@140) ($generated@@148 $generated@@630 $generated@@48))
 :pattern ( ($generated@@148 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () Bool)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(assert  (and (and (and (and (and (and (= (type $generated@@631) ($generated@@171 $generated@@81 $generated@@4)) (= (type $generated@@632) $generated@@81)) (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@634) $generated@@138)) (= (type $generated@@635) $generated@@140)) (= (type $generated@@637) $generated@@68)) (= (type $generated@@639) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@641  (=> (= $generated@@631 ($generated@@170 $generated@@632 $generated@@633 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@137 $generated@@634)) (=> ($generated@@137 $generated@@634) (=> (and (= $generated@@635 ($generated@@139 $generated@@634)) (= (ControlFlow 0 2) (- 0 1))) true))))))
(let (($generated@@642  (=> (and (and (and ($generated@@253 $generated@@633) ($generated@@636 $generated@@633)) (and ($generated@@148 $generated@@634 ($generated@@295 $generated@@637)) ($generated@@78 $generated@@634 ($generated@@295 $generated@@637) $generated@@633))) (and (and (=> $generated@@638 (and ($generated@@226 $generated@@639 $generated@@637) ($generated@@254 $generated@@639 $generated@@637 $generated@@633))) (= 0 $generated@@640)) (and ($generated@@137 $generated@@634) (= (ControlFlow 0 4) 2)))) $generated@@641)))
$generated@@642)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@291 (Int) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@384 (T@U) Bool)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (= ($generated@@1 $generated@@142) 14))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@142)) (and ($generated@@141 $generated@@144) ($generated@@141 $generated@@145))) (= ($generated@@140 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@144))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@79 0)))
)))
(assert (= (type $generated@@151) $generated@@68))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@142) (or ($generated@@150 $generated@@152) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@152 $generated@@151)))) true)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@142)) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@142) (= (type $generated@@167) $generated@@142)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@142)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@146 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@146 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ) (! (let (($generated@@234 (type $generated@@233)))
(= (type ($generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@142) (or ($generated@@150 ($generated@@232 $generated@@235)) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@235 $generated@@151)))) (= ($generated@@149 ($generated@@232 $generated@@235)) ($generated@@0 ($generated@@232 ($generated@@11 ($generated@@141 ($generated@@232 $generated@@235)))))))
 :weight 3
 :pattern ( ($generated@@149 ($generated@@232 $generated@@235)))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@142)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@68) (= (type $generated@@241) $generated@@68)) (= (type $generated@@242) $generated@@163)) (= (type $generated@@243) $generated@@163)) (= ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert ($generated@@146 $generated@@169 $generated@@151))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@142)
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@142) (or ($generated@@245 ($generated@@232 $generated@@247)) (and (not (= 1 $generated@@148)) (and ($generated@@146 $generated@@247 $generated@@151) ($generated@@0 ($generated@@232 ($generated@@11 ($generated@@141 ($generated@@232 $generated@@247))))))))) (= ($generated@@244 ($generated@@232 $generated@@247)) ($generated@@232 $generated@@247)))
 :weight 3
 :pattern ( ($generated@@244 ($generated@@232 $generated@@247)))
))))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@248 $generated@@249)) ($generated@@78 $generated@@169 $generated@@151 $generated@@249))
 :pattern ( ($generated@@78 $generated@@169 $generated@@151 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@142) (= (type $generated@@251) $generated@@142)) (= ($generated@@160 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@160 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@142) (= (type $generated@@253) $generated@@142)) (= ($generated@@140 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@140 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@68)) (= ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@237 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@146 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@163) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@237 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@146 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@232 $generated@@266) $generated@@266)
 :pattern ( ($generated@@232 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@268) $generated@@142) (= (type $generated@@269) $generated@@142)) (and ($generated@@267 $generated@@268) ($generated@@267 $generated@@269))) (= ($generated@@140 $generated@@268 $generated@@269) true))
 :pattern ( ($generated@@140 $generated@@268 $generated@@269) ($generated@@267 $generated@@268))
 :pattern ( ($generated@@140 $generated@@268 $generated@@269) ($generated@@267 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@68) (= (type $generated@@272) $generated@@68)) (= (type $generated@@273) $generated@@163)) (= (type $generated@@274) $generated@@163)) (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@248 $generated@@275)) (= ($generated@@78 ($generated@@236 $generated@@273 $generated@@274) ($generated@@154 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@78 ($generated@@236 $generated@@273 $generated@@274) ($generated@@154 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@153 $generated@@276) (= ($generated@@168 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@142) (= ($generated@@267 $generated@@277) (= ($generated@@168 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@267 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@141 $generated@@278) (= ($generated@@168 $generated@@278) $generated@@65)))
 :pattern ( ($generated@@141 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@142) ($generated@@153 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@163) (= (type $generated@@281) $generated@@163)) (= $generated@@279 ($generated@@236 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@153 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) ($generated@@267 $generated@@290)) (= $generated@@290 $generated@@169))
 :pattern ( ($generated@@267 $generated@@290))
)))
(assert (forall (($generated@@292 Int) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@142)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@141 $generated@@293)) (exists (($generated@@294 Int) ) (= $generated@@293 ($generated@@291 $generated@@294))))
 :pattern ( ($generated@@141 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@163)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@270 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@78 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@270 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@163)) (= (type $generated@@303) $generated@@68)) ($generated@@136 $generated@@300 $generated@@301)) ($generated@@270 $generated@@302 $generated@@303 $generated@@300)) ($generated@@270 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@136 $generated@@300 $generated@@301) ($generated@@270 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@307) $generated@@68)) ($generated@@136 $generated@@304 $generated@@305)) ($generated@@78 $generated@@306 $generated@@307 $generated@@304)) ($generated@@78 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@136 $generated@@304 $generated@@305) ($generated@@78 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@80 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@83 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@80 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@85 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@80 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@85 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@85 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@80 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@85 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@85 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@83 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@80 $generated@@351 $generated@@2)) (= ($generated@@172 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@85 $generated@@350 $generated@@352))) (<= ($generated ($generated@@85 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@85 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@172 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@163) ($generated@@237 $generated@@356 $generated@@151)) (and (= ($generated@@295 ($generated@@353 $generated@@142 $generated@@356)) $generated@@356) ($generated@@146 ($generated@@353 $generated@@142 $generated@@356) $generated@@151)))
 :pattern ( ($generated@@237 $generated@@356 $generated@@151))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(let (($generated@@359 ($generated@@317 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@316 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@315 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@314 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@314 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@80 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@318 (type $generated@@364))))
(let (($generated@@366 ($generated@@317 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@316 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@315 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@336 (type $generated@@368))))
(let (($generated@@370 ($generated@@335 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@334 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@333 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@332 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@332 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@80 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@336 (type $generated@@375))))
(let (($generated@@377 ($generated@@335 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@334 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@333 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@85 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@380) $generated@@68)) (= ($generated@@146 $generated@@379 ($generated@@171 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@379 $generated@@381)))) ($generated@@237 $generated@@381 $generated@@380))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@146 $generated@@379 ($generated@@171 $generated@@380)))
)))
(assert (forall (($generated@@382 Int) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@248 $generated@@383)) (= ($generated@@78 ($generated@@291 $generated@@382) $generated@@151 $generated@@383) ($generated@@78 ($generated@@8 $generated@@382) $generated@@46 $generated@@383)))
 :pattern ( ($generated@@78 ($generated@@291 $generated@@382) $generated@@151 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@142) ($generated@@384 $generated@@385)) (or ($generated@@267 $generated@@385) ($generated@@141 $generated@@385)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@387) $generated@@68)) (= (type $generated@@388) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@386 ($generated@@254 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@163) ($generated@@0 ($generated@@85 $generated@@386 $generated@@389))) ($generated@@270 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@85 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@78 $generated@@386 ($generated@@254 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@391) $generated@@68)) (= (type $generated@@392) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@390 ($generated@@259 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@163) ($generated@@0 ($generated@@85 $generated@@390 $generated@@393))) ($generated@@270 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@85 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@78 $generated@@390 ($generated@@259 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@85 ($generated@@309 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@85 ($generated@@309 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@318 (type $generated@@399))))
(let (($generated@@401 ($generated@@317 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@85 ($generated@@314 $generated@@402) ($generated@@161 ($generated@@353 $generated@@142 $generated@@403)))) (= ($generated@@85 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@353 $generated@@142 $generated@@403))) ($generated@@162 ($generated@@353 $generated@@142 $generated@@403))))))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@336 (type $generated@@407))))
(let (($generated@@409 ($generated@@335 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@80 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@411) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@85 ($generated@@332 $generated@@410) ($generated@@161 ($generated@@353 $generated@@142 $generated@@411)))) (= ($generated@@85 ($generated@@405 $generated@@410) ($generated@@161 ($generated@@353 $generated@@142 $generated@@411))) ($generated@@162 ($generated@@353 $generated@@142 $generated@@411))))))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@317 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@316 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@314 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@314 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@335 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@334 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@372 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@332 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@68)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@314 $generated@@425) $generated@@429))) (and ($generated@@270 ($generated@@85 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@270 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@314 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@332 $generated@@433) $generated@@437))) (and ($generated@@270 ($generated@@85 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@270 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@142) ($generated@@146 $generated@@438 $generated@@151)) (or ($generated@@267 $generated@@438) ($generated@@141 $generated@@438)))
 :pattern ( ($generated@@141 $generated@@438) ($generated@@146 $generated@@438 $generated@@151))
 :pattern ( ($generated@@267 $generated@@438) ($generated@@146 $generated@@438 $generated@@151))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@439 $generated@@441))) (and ($generated@@136 $generated@@439 $generated@@440) ($generated@@136 $generated@@440 $generated@@441))) ($generated@@136 $generated@@439 $generated@@441))
 :pattern ( ($generated@@136 $generated@@439 $generated@@440) ($generated@@136 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@336 (type $generated@@444))))
(let (($generated@@446 ($generated@@335 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@334 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@333 $generated@@446 $generated@@445)) (= ($generated@@332 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@332 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@336 (type $generated@@447))))
(let (($generated@@449 ($generated@@335 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@334 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@333 $generated@@449 $generated@@448)) (= ($generated@@372 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@372 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@336 (type $generated@@450))))
(let (($generated@@452 ($generated@@335 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@334 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@333 $generated@@452 $generated@@451)) (= ($generated@@404 $generated@@450) ($generated@@442 $generated@@163))))))
 :pattern ( ($generated@@404 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@318 (type $generated@@453))))
(let (($generated@@455 ($generated@@317 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@316 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@315 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@163) (= (type $generated@@457) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@396 $generated@@453) ($generated@@295 ($generated@@236 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@396 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@336 (type $generated@@458))))
(let (($generated@@460 ($generated@@335 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@334 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@333 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@163) (= (type $generated@@462) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@404 $generated@@458) ($generated@@295 ($generated@@236 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@404 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@237 $generated@@463 $generated@@46)) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@463)) $generated@@463) ($generated@@146 ($generated@@353 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@237 $generated@@464 $generated@@47)) (and (= ($generated@@295 ($generated@@353 $generated@@3 $generated@@464)) $generated@@464) ($generated@@146 ($generated@@353 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@237 $generated@@465 $generated@@44)) (and (= ($generated@@295 ($generated@@353 $generated@@4 $generated@@465)) $generated@@465) ($generated@@146 ($generated@@353 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@163) ($generated@@237 $generated@@467 $generated@@45)) (and (= ($generated@@295 ($generated@@353 $generated@@466 $generated@@467)) $generated@@467) ($generated@@146 ($generated@@353 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@68) (= ($generated@@237 ($generated@@295 $generated@@468) $generated@@469) ($generated@@146 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@237 ($generated@@295 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@83 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@80 $generated@@471 $generated@@2)) (<= 0 ($generated@@308 $generated@@470))))
 :pattern ( ($generated@@308 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@285 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@284 $generated@@473)) (<= 0 ($generated@@283 $generated@@472))))
 :pattern ( ($generated@@283 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@422 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@422 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@422 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@422 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@430 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@430 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@76 ($generated@@430 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) (= (type $generated@@495) $generated@@163)) (= ($generated@@168 ($generated@@236 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@236 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@154 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@154 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@154 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@154 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@163) (= (type $generated@@505) $generated@@163)) (= ($generated@@161 ($generated@@236 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@236 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@163) (= (type $generated@@507) $generated@@163)) (= ($generated@@162 ($generated@@236 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@236 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ($generated@@512 Int) ) (! (let (($generated@@513 ($generated@@285 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511 $generated@@512)) $generated@@513))
 :pattern ( ($generated@@509 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@284 $generated@@163)) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@514 ($generated@@508 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@283 $generated@@514))) ($generated@@270 ($generated@@509 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@509 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@78 $generated@@514 ($generated@@508 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@79 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@79 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@254 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@254 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@254 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@259 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@259 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@171 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@171 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@532 ($generated@@508 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@508 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@76 ($generated@@508 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@508 $generated@@535))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@168 ($generated@@291 $generated@@536)) $generated@@65)
 :pattern ( ($generated@@291 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@143 ($generated@@291 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@291 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@353 $generated@@539 ($generated@@295 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@295 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) (= ($generated@@146 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@314 $generated@@540) $generated@@543))) (and ($generated@@237 ($generated@@85 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@237 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@85 ($generated@@314 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@146 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@68)) (= ($generated@@146 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@332 $generated@@544) $generated@@547))) (and ($generated@@237 ($generated@@85 ($generated@@405 $generated@@544) $generated@@547) $generated@@546) ($generated@@237 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@544) $generated@@547))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@146 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@163)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@236 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@163) (= (type $generated@@553) $generated@@163)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@236 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@146 ($generated@@291 $generated@@554) $generated@@151) ($generated@@146 ($generated@@8 $generated@@554) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@291 $generated@@554) $generated@@151))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) ($generated@@237 $generated@@555 ($generated@@422 $generated@@556 $generated@@557))) (and (= ($generated@@295 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@555)) $generated@@555) ($generated@@146 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@555) ($generated@@422 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@237 $generated@@555 ($generated@@422 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@237 $generated@@558 ($generated@@430 $generated@@559 $generated@@560))) (and (= ($generated@@295 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@558)) $generated@@558) ($generated@@146 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@558) ($generated@@430 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@237 $generated@@558 ($generated@@430 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@163)) ($generated@@237 $generated@@563 ($generated@@154 $generated@@561 $generated@@562))) (and (= ($generated@@295 ($generated@@353 $generated@@142 $generated@@563)) $generated@@563) ($generated@@146 ($generated@@353 $generated@@142 $generated@@563) ($generated@@154 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@237 $generated@@563 ($generated@@154 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@85 ($generated@@442 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@73)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@68) (= (type $generated@@569) $generated@@68)) (and (= ($generated@@76 ($generated@@154 $generated@@568 $generated@@569)) $generated@@62) (= ($generated@@566 ($generated@@154 $generated@@568 $generated@@569)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@571) (and ($generated@@141 $generated@@570) ($generated@@78 $generated@@570 $generated@@151 $generated@@571)))) ($generated@@78 ($generated@@8 ($generated@@143 $generated@@570)) $generated@@46 $generated@@571))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@143 $generated@@570)) $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@142) (= ($generated@@548 ($generated@@295 $generated@@572)) ($generated@@549 $generated@@572)))
 :pattern ( ($generated@@548 ($generated@@295 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) ($generated@@237 $generated@@573 ($generated@@79 0))) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@573)) $generated@@573) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@573) ($generated@@79 0))))
 :pattern ( ($generated@@237 $generated@@573 ($generated@@79 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@163) (= (type $generated@@575) $generated@@68)) ($generated@@237 $generated@@574 ($generated@@254 $generated@@575))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@574)) $generated@@574) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@574) ($generated@@254 $generated@@575))))
 :pattern ( ($generated@@237 $generated@@574 ($generated@@254 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@163) (= (type $generated@@577) $generated@@68)) ($generated@@237 $generated@@576 ($generated@@259 $generated@@577))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@576)) $generated@@576) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@576) ($generated@@259 $generated@@577))))
 :pattern ( ($generated@@237 $generated@@576 ($generated@@259 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@163) (= (type $generated@@579) $generated@@68)) ($generated@@237 $generated@@578 ($generated@@171 $generated@@579))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@163 $generated@@2) $generated@@578)) $generated@@578) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@2) $generated@@578) ($generated@@171 $generated@@579))))
 :pattern ( ($generated@@237 $generated@@578 ($generated@@171 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@68)) ($generated@@237 $generated@@580 ($generated@@508 $generated@@581))) (and (= ($generated@@295 ($generated@@353 ($generated@@284 $generated@@163) $generated@@580)) $generated@@580) ($generated@@146 ($generated@@353 ($generated@@284 $generated@@163) $generated@@580) ($generated@@508 $generated@@581))))
 :pattern ( ($generated@@237 $generated@@580 ($generated@@508 $generated@@581)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@142) (or ($generated@@150 $generated@@582) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@582 $generated@@151)))) (= ($generated@@149 $generated@@582) ($generated@@141 $generated@@582)))
 :pattern ( ($generated@@149 $generated@@582))
))))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@142) (or ($generated@@245 $generated@@583) (and (not (= 1 $generated@@148)) (and ($generated@@146 $generated@@583 $generated@@151) ($generated@@141 $generated@@583))))) (= ($generated@@244 $generated@@583) $generated@@583))
 :pattern ( ($generated@@244 $generated@@583))
))))
(assert (= ($generated@@76 $generated@@151) $generated@@64))
(assert (= ($generated@@566 $generated@@151) $generated@@67))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@584 ($generated@@171 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@584 $generated@@587)))) ($generated@@270 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@85 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@171 $generated@@585) $generated@@586))
)))
(assert (= $generated@@169 ($generated@@232 $generated@@169)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@142) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@590) (and ($generated@@153 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@154 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@154 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@270 ($generated@@161 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@270 ($generated@@161 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@142) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@594) (and ($generated@@153 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@78 $generated@@592 ($generated@@154 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@154 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@270 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@270 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@163) (= (type $generated@@597) $generated@@163)) (= ($generated@@236 ($generated@@232 $generated@@596) ($generated@@232 $generated@@597)) ($generated@@232 ($generated@@236 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@236 ($generated@@232 $generated@@596) ($generated@@232 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@264 $generated@@598))) ($generated@@232 ($generated@@295 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@264 $generated@@598))))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@291 ($generated@@264 $generated@@599)) ($generated@@232 ($generated@@291 $generated@@599)))
 :pattern ( ($generated@@291 ($generated@@264 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@295 ($generated@@232 $generated@@600)) ($generated@@232 ($generated@@295 $generated@@600)))
 :pattern ( ($generated@@295 ($generated@@232 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@285 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@284 $generated@@602)) (= ($generated@@283 $generated@@601) 0)) (= $generated@@601 ($generated@@282 $generated@@602))))
 :pattern ( ($generated@@283 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@80 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@308 ($generated@@86 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@308 $generated@@603) ($generated ($generated@@85 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@308 ($generated@@86 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@142) (or ($generated@@245 $generated@@607) (and (not (= 1 $generated@@148)) (and ($generated@@146 $generated@@607 $generated@@151) ($generated@@141 $generated@@607))))) ($generated@@146 ($generated@@244 $generated@@607) $generated@@151))
 :pattern ( ($generated@@244 $generated@@607))
))))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@2)) ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@3)) ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@4)) ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@615) $generated@@466)) ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@163)) ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@284 $generated@@163)) (= (type $generated@@619) $generated@@68)) (= ($generated@@146 $generated@@618 ($generated@@508 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@283 $generated@@618))) ($generated@@237 ($generated@@509 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@509 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@146 $generated@@618 ($generated@@508 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@284 $generated@@163)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@283 $generated@@622))) (< ($generated@@549 ($generated@@353 $generated@@142 ($generated@@509 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@549 ($generated@@353 $generated@@142 ($generated@@509 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@625) $generated@@68)) (= (type $generated@@626) $generated@@68)) ($generated@@146 $generated@@624 ($generated@@422 $generated@@625 $generated@@626))) (and (and ($generated@@146 ($generated@@314 $generated@@624) ($generated@@254 $generated@@625)) ($generated@@146 ($generated@@361 $generated@@624) ($generated@@254 $generated@@626))) ($generated@@146 ($generated@@396 $generated@@624) ($generated@@254 ($generated@@154 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@146 $generated@@624 ($generated@@422 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@68)) ($generated@@146 $generated@@627 ($generated@@430 $generated@@628 $generated@@629))) (and (and ($generated@@146 ($generated@@332 $generated@@627) ($generated@@259 $generated@@628)) ($generated@@146 ($generated@@372 $generated@@627) ($generated@@259 $generated@@629))) ($generated@@146 ($generated@@404 $generated@@627) ($generated@@259 ($generated@@154 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@146 $generated@@627 ($generated@@430 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@146 $generated@@630 $generated@@46))
 :pattern ( ($generated@@146 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@146 $generated@@631 $generated@@47))
 :pattern ( ($generated@@146 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@146 $generated@@632 $generated@@44))
 :pattern ( ($generated@@146 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@466) ($generated@@146 $generated@@633 $generated@@45))
 :pattern ( ($generated@@146 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@163) ($generated@@146 $generated@@634 $generated@@48))
 :pattern ( ($generated@@146 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 (T@U) Bool)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@635) $generated@@142) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@637) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@638) $generated@@81)) (= (type $generated@@639) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@640) $generated@@142)) (= (type $generated@@641) $generated@@142)) (= (type $generated@@643) $generated@@142)) (= (type $generated@@644) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@645 true))
(let (($generated@@646  (=> ($generated@@149 $generated@@635) (=> (and ($generated@@78 $generated@@635 $generated@@151 $generated@@636) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 $generated@@635)))))
(let (($generated@@647  (=> (= $generated@@637 ($generated@@177 $generated@@638 $generated@@639 $generated@@60 false)) (=> (and ($generated@@146 $generated@@640 $generated@@151) ($generated@@78 $generated@@640 $generated@@151 $generated@@639)) (=> (and (and ($generated@@146 $generated@@641 $generated@@151) ($generated@@78 $generated@@641 $generated@@151 $generated@@639)) (and ($generated@@248 $generated@@636) ($generated@@642 $generated@@636))) (=> (and (and (and (and ($generated@@146 $generated@@635 $generated@@151) ($generated@@78 $generated@@635 $generated@@151 $generated@@636)) ($generated@@384 $generated@@635)) (and ($generated@@140 $generated@@635 ($generated@@291 ($generated@@264 5))) (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@81) (=> (and (not (= $generated@@648 $generated@@638)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@639 $generated@@648) $generated@@60))) (= ($generated@@85 $generated@@636 $generated@@648) ($generated@@85 $generated@@639 $generated@@648))))
 :pattern ( ($generated@@85 $generated@@636 $generated@@648))
)))) (and (and ($generated@@136 $generated@@639 $generated@@636) ($generated@@78 $generated@@635 $generated@@151 $generated@@636)) (and ($generated@@150 $generated@@635) ($generated@@150 $generated@@635)))) (and (=> (= (ControlFlow 0 4) 2) $generated@@646) (=> (= (ControlFlow 0 4) 3) $generated@@645))))))))
(let (($generated@@649  (=> (and (and ($generated@@248 $generated@@639) ($generated@@642 $generated@@639)) (and ($generated@@146 $generated@@643 $generated@@151) ($generated@@78 $generated@@643 $generated@@151 $generated@@639))) (=> (and (and (and ($generated@@146 $generated@@644 $generated@@151) ($generated@@78 $generated@@644 $generated@@151 $generated@@639)) true) (and (= 2 $generated@@148) (= (ControlFlow 0 5) 4))) $generated@@647))))
$generated@@649)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@287 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@380 (T@U) Bool)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (= ($generated@@1 $generated@@142) 14))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@142)) (and ($generated@@141 $generated@@144) ($generated@@141 $generated@@145))) (= ($generated@@140 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@144))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@79 0)))
)))
(assert (= (type $generated@@151) $generated@@68))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@142) (or ($generated@@150 $generated@@152) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@152 $generated@@151)))) true)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@142)) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@142) (= (type $generated@@167) $generated@@142)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@142)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@146 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@146 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ) (! (let (($generated@@234 (type $generated@@233)))
(= (type ($generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@142) (or ($generated@@150 ($generated@@232 $generated@@235)) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@235 $generated@@151)))) (= ($generated@@149 ($generated@@232 $generated@@235)) ($generated@@0 ($generated@@232 ($generated@@11 ($generated@@141 ($generated@@232 $generated@@235)))))))
 :weight 3
 :pattern ( ($generated@@149 ($generated@@232 $generated@@235)))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@142)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@68) (= (type $generated@@241) $generated@@68)) (= (type $generated@@242) $generated@@163)) (= (type $generated@@243) $generated@@163)) (= ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert ($generated@@146 $generated@@169 $generated@@151))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@245)) ($generated@@78 $generated@@169 $generated@@151 $generated@@245))
 :pattern ( ($generated@@78 $generated@@169 $generated@@151 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@142) (= (type $generated@@247) $generated@@142)) (= ($generated@@160 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@160 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@142) (= (type $generated@@249) $generated@@142)) (= ($generated@@140 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@140 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@253) $generated@@68)) (= ($generated@@146 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@163) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@237 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@146 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@258) $generated@@68)) (= ($generated@@146 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@163) ($generated@@0 ($generated@@85 $generated@@257 $generated@@259))) ($generated@@237 $generated@@259 $generated@@258))
 :pattern ( ($generated@@85 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@146 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@232 $generated@@262) $generated@@262)
 :pattern ( ($generated@@232 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@142) (= (type $generated@@265) $generated@@142)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@140 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@140 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@140 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@68) (= (type $generated@@268) $generated@@68)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@271)) (= ($generated@@78 ($generated@@236 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@78 ($generated@@236 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@142) (= ($generated@@153 $generated@@272) (= ($generated@@168 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@142) (= ($generated@@263 $generated@@273) (= ($generated@@168 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@263 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@141 $generated@@274) (= ($generated@@168 $generated@@274) $generated@@65)))
 :pattern ( ($generated@@141 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@142) ($generated@@153 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@236 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@153 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@142) ($generated@@263 $generated@@286)) (= $generated@@286 $generated@@169))
 :pattern ( ($generated@@263 $generated@@286))
)))
(assert (forall (($generated@@288 Int) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@142)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@142) ($generated@@141 $generated@@289)) (exists (($generated@@290 Int) ) (= $generated@@289 ($generated@@287 $generated@@290))))
 :pattern ( ($generated@@141 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@163)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@78 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@298) $generated@@163)) (= (type $generated@@299) $generated@@68)) ($generated@@136 $generated@@296 $generated@@297)) ($generated@@266 $generated@@298 $generated@@299 $generated@@296)) ($generated@@266 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@136 $generated@@296 $generated@@297) ($generated@@266 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@303) $generated@@68)) ($generated@@136 $generated@@300 $generated@@301)) ($generated@@78 $generated@@302 $generated@@303 $generated@@300)) ($generated@@78 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@136 $generated@@300 $generated@@301) ($generated@@78 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@80 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@83 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@80 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@85 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@172 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@172 $generated@@346))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@163) ($generated@@237 $generated@@352 $generated@@151)) (and (= ($generated@@291 ($generated@@349 $generated@@142 $generated@@352)) $generated@@352) ($generated@@146 ($generated@@349 $generated@@142 $generated@@352) $generated@@151)))
 :pattern ( ($generated@@237 $generated@@352 $generated@@151))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(let (($generated@@355 ($generated@@313 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@312 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@311 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@310 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@314 (type $generated@@360))))
(let (($generated@@362 ($generated@@313 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@312 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@311 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@332 (type $generated@@364))))
(let (($generated@@366 ($generated@@331 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@330 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@329 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@328 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@332 (type $generated@@371))))
(let (($generated@@373 ($generated@@331 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@330 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@329 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@68)) (= ($generated@@146 $generated@@375 ($generated@@171 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@237 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@146 $generated@@375 ($generated@@171 $generated@@376)))
)))
(assert (forall (($generated@@378 Int) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@379)) (= ($generated@@78 ($generated@@287 $generated@@378) $generated@@151 $generated@@379) ($generated@@78 ($generated@@8 $generated@@378) $generated@@46 $generated@@379)))
 :pattern ( ($generated@@78 ($generated@@287 $generated@@378) $generated@@151 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@142) ($generated@@380 $generated@@381)) (or ($generated@@263 $generated@@381) ($generated@@141 $generated@@381)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@68)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@250 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@250 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@387) $generated@@68)) (= (type $generated@@388) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@163) ($generated@@0 ($generated@@85 $generated@@386 $generated@@389))) ($generated@@266 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@85 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@78 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@85 ($generated@@305 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@85 ($generated@@305 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@314 (type $generated@@395))))
(let (($generated@@397 ($generated@@313 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@80 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@399) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@398) ($generated@@161 ($generated@@349 $generated@@142 $generated@@399)))) (= ($generated@@85 ($generated@@393 $generated@@398) ($generated@@161 ($generated@@349 $generated@@142 $generated@@399))) ($generated@@162 ($generated@@349 $generated@@142 $generated@@399))))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@332 (type $generated@@403))))
(let (($generated@@405 ($generated@@331 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@407) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@406) ($generated@@161 ($generated@@349 $generated@@142 $generated@@407)))) (= ($generated@@85 ($generated@@401 $generated@@406) ($generated@@161 ($generated@@349 $generated@@142 $generated@@407))) ($generated@@162 ($generated@@349 $generated@@142 $generated@@407))))))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@313 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@312 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@85 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@408) $generated@@412))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@331 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@330 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@85 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@413) $generated@@417))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@68)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@422) $generated@@68)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@421) $generated@@425))) (and ($generated@@266 ($generated@@85 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@266 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@430) $generated@@68)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@429) $generated@@433))) (and ($generated@@266 ($generated@@85 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@266 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@142) ($generated@@146 $generated@@434 $generated@@151)) (or ($generated@@263 $generated@@434) ($generated@@141 $generated@@434)))
 :pattern ( ($generated@@141 $generated@@434) ($generated@@146 $generated@@434 $generated@@151))
 :pattern ( ($generated@@263 $generated@@434) ($generated@@146 $generated@@434 $generated@@151))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@435 $generated@@437))) (and ($generated@@136 $generated@@435 $generated@@436) ($generated@@136 $generated@@436 $generated@@437))) ($generated@@136 $generated@@435 $generated@@437))
 :pattern ( ($generated@@136 $generated@@435 $generated@@436) ($generated@@136 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@80 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@332 (type $generated@@440))))
(let (($generated@@442 ($generated@@331 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@330 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@329 $generated@@442 $generated@@441)) (= ($generated@@328 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@328 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@368 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@368 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@400 $generated@@446) ($generated@@438 $generated@@163))))))
 :pattern ( ($generated@@400 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@314 (type $generated@@449))))
(let (($generated@@451 ($generated@@313 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@312 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@311 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@449) ($generated@@291 ($generated@@236 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@392 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@332 (type $generated@@454))))
(let (($generated@@456 ($generated@@331 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@330 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@329 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@163) (= (type $generated@@458) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@400 $generated@@454) ($generated@@291 ($generated@@236 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@400 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@237 $generated@@459 $generated@@46)) (and (= ($generated@@291 ($generated@@349 $generated@@2 $generated@@459)) $generated@@459) ($generated@@146 ($generated@@349 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@163) ($generated@@237 $generated@@460 $generated@@47)) (and (= ($generated@@291 ($generated@@349 $generated@@3 $generated@@460)) $generated@@460) ($generated@@146 ($generated@@349 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@163) ($generated@@237 $generated@@461 $generated@@44)) (and (= ($generated@@291 ($generated@@349 $generated@@4 $generated@@461)) $generated@@461) ($generated@@146 ($generated@@349 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@237 $generated@@463 $generated@@45)) (and (= ($generated@@291 ($generated@@349 $generated@@462 $generated@@463)) $generated@@463) ($generated@@146 ($generated@@349 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@68) (= ($generated@@237 ($generated@@291 $generated@@464) $generated@@465) ($generated@@146 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@237 ($generated@@291 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@83 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@80 $generated@@467 $generated@@2)) (<= 0 ($generated@@304 $generated@@466))))
 :pattern ( ($generated@@304 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@281 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@280 $generated@@469)) (<= 0 ($generated@@279 $generated@@468))))
 :pattern ( ($generated@@279 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@418 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@418 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@418 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@76 ($generated@@418 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@426 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@426 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@426 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@426 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@76 ($generated@@426 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@163) (= (type $generated@@491) $generated@@163)) (= ($generated@@168 ($generated@@236 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@236 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@154 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@154 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@154 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@154 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@163) (= (type $generated@@501) $generated@@163)) (= ($generated@@161 ($generated@@236 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@236 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@163) (= (type $generated@@503) $generated@@163)) (= ($generated@@162 ($generated@@236 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@236 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@281 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@280 $generated@@163)) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@279 $generated@@510))) ($generated@@266 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@78 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@79 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@79 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@516 ($generated@@250 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@250 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@255 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@255 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@255 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@171 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@171 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@76 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@168 ($generated@@287 $generated@@532)) $generated@@65)
 :pattern ( ($generated@@287 $generated@@532))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@143 ($generated@@287 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@287 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@349 $generated@@535 ($generated@@291 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@291 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@68)) (= ($generated@@146 $generated@@536 ($generated@@418 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@536) $generated@@539))) (and ($generated@@237 ($generated@@85 ($generated@@393 $generated@@536) $generated@@539) $generated@@538) ($generated@@237 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@536) $generated@@539))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@146 $generated@@536 ($generated@@418 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) (= ($generated@@146 $generated@@540 ($generated@@426 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@540) $generated@@543))) (and ($generated@@237 ($generated@@85 ($generated@@401 $generated@@540) $generated@@543) $generated@@542) ($generated@@237 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@540) $generated@@543))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@146 $generated@@540 ($generated@@426 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@163)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@236 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@163)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@236 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@146 ($generated@@287 $generated@@550) $generated@@151) ($generated@@146 ($generated@@8 $generated@@550) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@287 $generated@@550) $generated@@151))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@237 $generated@@551 ($generated@@418 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@551) ($generated@@418 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@237 $generated@@551 ($generated@@418 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@163) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) ($generated@@237 $generated@@554 ($generated@@426 $generated@@555 $generated@@556))) (and (= ($generated@@291 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@554)) $generated@@554) ($generated@@146 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@554) ($generated@@426 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@554 ($generated@@426 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@163)) ($generated@@237 $generated@@559 ($generated@@154 $generated@@557 $generated@@558))) (and (= ($generated@@291 ($generated@@349 $generated@@142 $generated@@559)) $generated@@559) ($generated@@146 ($generated@@349 $generated@@142 $generated@@559) ($generated@@154 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@237 $generated@@559 ($generated@@154 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@85 ($generated@@438 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@85 ($generated@@438 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@73)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (and (= ($generated@@76 ($generated@@154 $generated@@564 $generated@@565)) $generated@@62) (= ($generated@@562 ($generated@@154 $generated@@564 $generated@@565)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@142) (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@567) (and ($generated@@141 $generated@@566) ($generated@@78 $generated@@566 $generated@@151 $generated@@567)))) ($generated@@78 ($generated@@8 ($generated@@143 $generated@@566)) $generated@@46 $generated@@567))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@143 $generated@@566)) $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@142) (= ($generated@@544 ($generated@@291 $generated@@568)) ($generated@@545 $generated@@568)))
 :pattern ( ($generated@@544 ($generated@@291 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@163) ($generated@@237 $generated@@569 ($generated@@79 0))) (and (= ($generated@@291 ($generated@@349 $generated@@2 $generated@@569)) $generated@@569) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@569) ($generated@@79 0))))
 :pattern ( ($generated@@237 $generated@@569 ($generated@@79 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@163) (= (type $generated@@571) $generated@@68)) ($generated@@237 $generated@@570 ($generated@@250 $generated@@571))) (and (= ($generated@@291 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@570)) $generated@@570) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@570) ($generated@@250 $generated@@571))))
 :pattern ( ($generated@@237 $generated@@570 ($generated@@250 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@163) (= (type $generated@@573) $generated@@68)) ($generated@@237 $generated@@572 ($generated@@255 $generated@@573))) (and (= ($generated@@291 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@572)) $generated@@572) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@572) ($generated@@255 $generated@@573))))
 :pattern ( ($generated@@237 $generated@@572 ($generated@@255 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@163) (= (type $generated@@575) $generated@@68)) ($generated@@237 $generated@@574 ($generated@@171 $generated@@575))) (and (= ($generated@@291 ($generated@@349 ($generated@@80 $generated@@163 $generated@@2) $generated@@574)) $generated@@574) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@2) $generated@@574) ($generated@@171 $generated@@575))))
 :pattern ( ($generated@@237 $generated@@574 ($generated@@171 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@163) (= (type $generated@@577) $generated@@68)) ($generated@@237 $generated@@576 ($generated@@504 $generated@@577))) (and (= ($generated@@291 ($generated@@349 ($generated@@280 $generated@@163) $generated@@576)) $generated@@576) ($generated@@146 ($generated@@349 ($generated@@280 $generated@@163) $generated@@576) ($generated@@504 $generated@@577))))
 :pattern ( ($generated@@237 $generated@@576 ($generated@@504 $generated@@577)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@142) (or ($generated@@150 $generated@@578) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@578 $generated@@151)))) (= ($generated@@149 $generated@@578) ($generated@@141 $generated@@578)))
 :pattern ( ($generated@@149 $generated@@578))
))))
(assert (= ($generated@@76 $generated@@151) $generated@@64))
(assert (= ($generated@@562 $generated@@151) $generated@@67))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@579 ($generated@@171 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@579 $generated@@582)))) ($generated@@266 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@85 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@78 $generated@@579 ($generated@@171 $generated@@580) $generated@@581))
)))
(assert (= $generated@@169 ($generated@@232 $generated@@169)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@142) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@585) (and ($generated@@153 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@68) ($generated@@78 $generated@@583 ($generated@@154 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@78 $generated@@583 ($generated@@154 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@266 ($generated@@161 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@142) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@589) (and ($generated@@153 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@68) ($generated@@78 $generated@@587 ($generated@@154 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@154 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@266 ($generated@@162 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@163) (= (type $generated@@592) $generated@@163)) (= ($generated@@236 ($generated@@232 $generated@@591) ($generated@@232 $generated@@592)) ($generated@@232 ($generated@@236 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@236 ($generated@@232 $generated@@591) ($generated@@232 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@260 $generated@@593))) ($generated@@232 ($generated@@291 ($generated@@8 $generated@@593))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@260 $generated@@593))))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@287 ($generated@@260 $generated@@594)) ($generated@@232 ($generated@@287 $generated@@594)))
 :pattern ( ($generated@@287 ($generated@@260 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@291 ($generated@@232 $generated@@595)) ($generated@@232 ($generated@@291 $generated@@595)))
 :pattern ( ($generated@@291 ($generated@@232 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@281 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@280 $generated@@597)) (= ($generated@@279 $generated@@596) 0)) (= $generated@@596 ($generated@@278 $generated@@597))))
 :pattern ( ($generated@@279 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@80 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@304 ($generated@@86 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@304 $generated@@598) ($generated ($generated@@85 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@304 ($generated@@86 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@603) $generated@@2)) ($generated@@78 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@78 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@605) $generated@@3)) ($generated@@78 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@78 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@607) $generated@@4)) ($generated@@78 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@78 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@462)) ($generated@@78 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@163)) ($generated@@78 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@280 $generated@@163)) (= (type $generated@@613) $generated@@68)) (= ($generated@@146 $generated@@612 ($generated@@504 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@279 $generated@@612))) ($generated@@237 ($generated@@505 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@505 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@146 $generated@@612 ($generated@@504 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@279 $generated@@616))) (< ($generated@@545 ($generated@@349 $generated@@142 ($generated@@505 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@545 ($generated@@349 $generated@@142 ($generated@@505 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) $generated@@68)) ($generated@@146 $generated@@618 ($generated@@418 $generated@@619 $generated@@620))) (and (and ($generated@@146 ($generated@@310 $generated@@618) ($generated@@250 $generated@@619)) ($generated@@146 ($generated@@357 $generated@@618) ($generated@@250 $generated@@620))) ($generated@@146 ($generated@@392 $generated@@618) ($generated@@250 ($generated@@154 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@146 $generated@@618 ($generated@@418 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) $generated@@68)) ($generated@@146 $generated@@621 ($generated@@426 $generated@@622 $generated@@623))) (and (and ($generated@@146 ($generated@@328 $generated@@621) ($generated@@255 $generated@@622)) ($generated@@146 ($generated@@368 $generated@@621) ($generated@@255 $generated@@623))) ($generated@@146 ($generated@@400 $generated@@621) ($generated@@255 ($generated@@154 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@146 $generated@@621 ($generated@@426 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@146 $generated@@624 $generated@@46))
 :pattern ( ($generated@@146 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@146 $generated@@625 $generated@@47))
 :pattern ( ($generated@@146 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@146 $generated@@626 $generated@@44))
 :pattern ( ($generated@@146 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@462) ($generated@@146 $generated@@627 $generated@@45))
 :pattern ( ($generated@@146 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@163) ($generated@@146 $generated@@628 $generated@@48))
 :pattern ( ($generated@@146 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@629) $generated@@142) (= (type $generated@@630) $generated@@142)) (= (type $generated@@631) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@632) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@633) $generated@@81)) (= (type $generated@@634) $generated@@142)) (= (type $generated@@635) $generated@@142)) (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@638) $generated@@142)) (= (type $generated@@639) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@640 true))
(let (($generated@@641  (=> ($generated@@149 $generated@@629) (=> (and (and ($generated@@146 $generated@@630 $generated@@151) ($generated@@78 $generated@@630 $generated@@151 $generated@@631)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 $generated@@629)))))
(let (($generated@@642  (=> (= $generated@@632 ($generated@@177 $generated@@633 $generated@@631 $generated@@60 false)) (=> (and ($generated@@146 $generated@@634 $generated@@151) ($generated@@78 $generated@@634 $generated@@151 $generated@@631)) (=> (and (and ($generated@@146 $generated@@635 $generated@@151) ($generated@@78 $generated@@635 $generated@@151 $generated@@631)) (and ($generated@@244 $generated@@636) ($generated@@637 $generated@@636))) (=> (and (and (and (and ($generated@@146 $generated@@629 $generated@@151) ($generated@@78 $generated@@629 $generated@@151 $generated@@636)) ($generated@@380 $generated@@629)) (and ($generated@@140 $generated@@629 ($generated@@287 ($generated@@260 5))) (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@81) (=> (and (not (= $generated@@643 $generated@@633)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@631 $generated@@643) $generated@@60))) (= ($generated@@85 $generated@@636 $generated@@643) ($generated@@85 $generated@@631 $generated@@643))))
 :pattern ( ($generated@@85 $generated@@636 $generated@@643))
)))) (and (and ($generated@@136 $generated@@631 $generated@@636) ($generated@@78 $generated@@629 $generated@@151 $generated@@636)) (and ($generated@@150 $generated@@629) ($generated@@150 $generated@@629)))) (and (=> (= (ControlFlow 0 4) 2) $generated@@641) (=> (= (ControlFlow 0 4) 3) $generated@@640))))))))
(let (($generated@@644  (=> (and (and ($generated@@244 $generated@@631) ($generated@@637 $generated@@631)) (and ($generated@@146 $generated@@638 $generated@@151) ($generated@@78 $generated@@638 $generated@@151 $generated@@631))) (=> (and (and (and ($generated@@146 $generated@@639 $generated@@151) ($generated@@78 $generated@@639 $generated@@151 $generated@@631)) true) (and (= 2 $generated@@148) (= (ControlFlow 0 5) 4))) $generated@@642))))
$generated@@644)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (Int) T@U)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@411 (T@U) Bool)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@T T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@T) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@152) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@95) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@78) (= (type $generated@@160) $generated@@78)) (and ($generated@@155 $generated@@159) ($generated@@155 $generated@@160))) (= ($generated@@154 $generated@@159 $generated@@160) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@159))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@78) (= (type $generated@@163) $generated@@78)) (and ($generated@@82 $generated@@162) ($generated@@82 $generated@@163))) (= ($generated@@154 $generated@@162 $generated@@163) (= ($generated@@161 $generated@@162) ($generated@@161 $generated@@163))))
 :pattern ( ($generated@@154 $generated@@162 $generated@@163) ($generated@@82 $generated@@162))
 :pattern ( ($generated@@154 $generated@@162 $generated@@163) ($generated@@82 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@80 $generated@@164 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@164 ($generated@@93 0)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@167 $generated@@168)) $generated@@68)
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@68) (= (type $generated@@170) $generated@@68)) (= (type $generated@@171) $generated@@78)) ($generated@@80 $generated@@171 ($generated@@166 $generated@@169 $generated@@170))) ($generated@@165 $generated@@171))
 :pattern ( ($generated@@165 $generated@@171) ($generated@@80 $generated@@171 ($generated@@166 $generated@@169 $generated@@170)))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@157)
 :pattern ( ($generated@@173 $generated@@175))
)) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@157)
 :pattern ( ($generated@@174 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@78) (= (type $generated@@178) $generated@@78)) true) (= ($generated@@172 $generated@@177 $generated@@178)  (and (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)) (= ($generated@@174 $generated@@177) ($generated@@174 $generated@@178)))))
 :pattern ( ($generated@@172 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@68)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@183) $generated@@68)) ($generated@@80 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@80 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@1 ($generated@@186 $generated@@190 $generated@@191)) 16)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@187 ($generated@@186 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@188 ($generated@@186 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@186 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@188 (type $generated@@196))))
(= (type ($generated@@184 $generated@@196 $generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@184 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(let (($generated@@205 (type $generated@@201)))
(= (type ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@186 $generated@@205 $generated@@204))))
 :pattern ( ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@188 (type $generated@@206))))
 (=> (= (type $generated@@209) $generated@@210) (= ($generated@@184 ($generated@@189 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@207 $generated@@208) $generated@@209)))
 :weight 0
))) (and (and (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@184 ($generated@@189 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@184 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@184 ($generated@@189 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@184 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or true (= ($generated@@184 ($generated@@189 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@184 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@186 $generated@@95 $generated@@4))
 :pattern ( ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@71 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@95) (= (type $generated@@234) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@235) ($generated@@70 $generated@@4))) (= (type $generated@@237) $generated@@95)) (= (type $generated@@238) ($generated@@70 $generated@@239))) (= ($generated@@0 ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@78)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@68) (= (type $generated@@245) $generated@@68)) (= (type $generated@@246) $generated@@157)) (= (type $generated@@247) $generated@@157)) (= ($generated@@80 ($generated@@240 $generated@@246 $generated@@247) ($generated@@166 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@80 ($generated@@240 $generated@@246 $generated@@247) ($generated@@166 $generated@@244 $generated@@245)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (= (type $generated@@250) $generated@@68) (= (type $generated@@251) $generated@@78)) (or ($generated@@249 $generated@@250 $generated@@251) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@251 ($generated@@81 $generated@@250))))) (= ($generated@@248 $generated@@250 $generated@@251) ($generated@@82 $generated@@251)))
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@78) (= (type $generated@@253) $generated@@78)) (= ($generated@@172 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@172 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@78) (= (type $generated@@255) $generated@@78)) (= ($generated@@154 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@154 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@80 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@157) ($generated@@0 ($generated@@99 $generated@@258 $generated@@260))) ($generated@@241 $generated@@260 $generated@@259))
 :pattern ( ($generated@@99 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@80 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@264) $generated@@68)) (= ($generated@@80 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@157) ($generated@@0 ($generated@@99 $generated@@263 $generated@@265))) ($generated@@241 $generated@@265 $generated@@264))
 :pattern ( ($generated@@99 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@80 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 Int) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@78)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) $generated@@68)) (= (type $generated@@276) $generated@@78)) (or ($generated@@79 $generated@@274 $generated@@275 ($generated@@268 $generated@@276)) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@276 ($generated@@81 $generated@@274)) ($generated@@0 ($generated@@268 ($generated@@11 ($generated@@82 ($generated@@268 $generated@@276))))))))) (= ($generated@@77 $generated@@274 $generated@@275 ($generated@@268 $generated@@276)) ($generated@@268 ($generated@@272 ($generated@@266 ($generated@@161 ($generated@@268 $generated@@276)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@274 $generated@@275 ($generated@@268 $generated@@276)))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@279 $generated@@280)) $generated@@157)
 :pattern ( ($generated@@277 $generated@@279 $generated@@280))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@78)) (or ($generated@@278 $generated@@281 $generated@@282) (and (not (= 0 $generated@@76)) (and ($generated@@80 $generated@@282 ($generated@@81 $generated@@281)) ($generated@@155 $generated@@282))))) (= ($generated@@277 $generated@@281 $generated@@282) ($generated@@156 $generated@@282)))
 :pattern ( ($generated@@277 $generated@@281 $generated@@282))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@157)) (= (type $generated@@288) $generated@@157)) (= (type $generated@@289) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@283 $generated@@289)) (= ($generated@@92 ($generated@@240 $generated@@287 $generated@@288) ($generated@@166 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@92 ($generated@@240 $generated@@287 $generated@@288) ($generated@@166 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@72)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@78) (= ($generated@@165 $generated@@292) (= ($generated@@290 $generated@@292) $generated@@61)))
 :pattern ( ($generated@@165 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@78) (= ($generated@@155 $generated@@293) (= ($generated@@290 $generated@@293) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@78) (= ($generated@@82 $generated@@294) (= ($generated@@290 $generated@@294) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@78) ($generated@@165 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@157) (= (type $generated@@297) $generated@@157)) (= $generated@@295 ($generated@@240 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@165 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@78)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@78) ($generated@@155 $generated@@308)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@157) (= $generated@@308 ($generated@@306 $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@155 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@78) ($generated@@82 $generated@@310)) (exists (($generated@@311 Int) ) (= $generated@@310 ($generated@@272 $generated@@311))))
 :pattern ( ($generated@@82 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@157)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@284 ($generated@@312 $generated@@314) $generated@@315 $generated@@316) ($generated@@92 $generated@@314 $generated@@315 $generated@@316)))
 :pattern ( ($generated@@284 ($generated@@312 $generated@@314) $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@317) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@318) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@319) $generated@@157)) (= (type $generated@@320) $generated@@68)) ($generated@@150 $generated@@317 $generated@@318)) ($generated@@284 $generated@@319 $generated@@320 $generated@@317)) ($generated@@284 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@150 $generated@@317 $generated@@318) ($generated@@284 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@321) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@322) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@324) $generated@@68)) ($generated@@150 $generated@@321 $generated@@322)) ($generated@@92 $generated@@323 $generated@@324 $generated@@321)) ($generated@@92 $generated@@323 $generated@@324 $generated@@322))
 :pattern ( ($generated@@150 $generated@@321 $generated@@322) ($generated@@92 $generated@@323 $generated@@324 $generated@@321))
)))
(assert (forall (($generated@@327 T@T) ) (! (= (type ($generated@@326 $generated@@327)) ($generated@@94 $generated@@327 $generated@@2))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@97 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@94 $generated@@329 $generated@@2)) (and (= (= ($generated@@325 $generated@@328) 0) (= $generated@@328 ($generated@@326 $generated@@329))) (=> (not (= ($generated@@325 $generated@@328) 0)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) (< 0 ($generated ($generated@@99 $generated@@328 $generated@@330))))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@73)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@333)) $generated@@64) (= ($generated@@331 ($generated@@81 $generated@@333)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 18)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@94 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@99 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@99 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@94 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@99 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@99 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@68) (= (type $generated@@371) $generated@@78)) (or ($generated@@249 $generated@@370 $generated@@371) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@371 ($generated@@81 $generated@@370))))) true)
 :pattern ( ($generated@@248 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@97 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@94 $generated@@373 $generated@@2)) (= ($generated@@180 $generated@@372) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@373) (and (<= 0 ($generated ($generated@@99 $generated@@372 $generated@@374))) (<= ($generated ($generated@@99 $generated@@372 $generated@@374)) ($generated@@325 $generated@@372))))
 :pattern ( ($generated@@99 $generated@@372 $generated@@374))
)))))
 :pattern ( ($generated@@180 $generated@@372))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@68) (= (type $generated@@376) $generated@@78)) (or ($generated@@249 $generated@@375 ($generated@@268 $generated@@376)) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@376 ($generated@@81 $generated@@375))))) (= ($generated@@248 $generated@@375 ($generated@@268 $generated@@376)) ($generated@@0 ($generated@@268 ($generated@@11 ($generated@@82 ($generated@@268 $generated@@376)))))))
 :weight 3
 :pattern ( ($generated@@248 $generated@@375 ($generated@@268 $generated@@376)))
))))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@338 (type $generated@@377))))
(let (($generated@@379 ($generated@@337 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@336 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@335 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@99 ($generated@@334 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@334 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@338 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@94 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@338 (type $generated@@384))))
(let (($generated@@386 ($generated@@337 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@336 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@335 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@99 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@356 (type $generated@@388))))
(let (($generated@@390 ($generated@@355 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@354 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@353 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@99 ($generated@@352 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@352 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@356 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@94 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@356 (type $generated@@395))))
(let (($generated@@397 ($generated@@355 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@354 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@353 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@99 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@399) $generated@@78) (= (type $generated@@400) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@400) (and ($generated@@82 $generated@@399) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@68) ($generated@@92 $generated@@399 ($generated@@81 $generated@@401) $generated@@400))
 :pattern ( ($generated@@92 $generated@@399 ($generated@@81 $generated@@401) $generated@@400))
))))) ($generated@@92 ($generated@@8 ($generated@@161 $generated@@399)) $generated@@46 $generated@@400))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@161 $generated@@399)) $generated@@46 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@403) $generated@@68)) (= ($generated@@80 $generated@@402 ($generated@@179 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@402 $generated@@404)))) ($generated@@241 $generated@@404 $generated@@403))
 :pattern ( ($generated@@99 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@80 $generated@@402 ($generated@@179 $generated@@403)))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) $generated@@68) (= (type $generated@@406) $generated@@157)) (= (type $generated@@407) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@283 $generated@@407)) (= ($generated@@92 ($generated@@306 $generated@@406) ($generated@@81 $generated@@405) $generated@@407) ($generated@@284 $generated@@406 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@92 ($generated@@306 $generated@@406) ($generated@@81 $generated@@405) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) $generated@@68) (= (type $generated@@410) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@283 $generated@@410)) (= ($generated@@92 ($generated@@272 $generated@@409) ($generated@@81 $generated@@408) $generated@@410) ($generated@@92 ($generated@@8 $generated@@409) $generated@@46 $generated@@410)))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@409) ($generated@@81 $generated@@408) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@78) ($generated@@411 $generated@@412)) (or ($generated@@155 $generated@@412) ($generated@@82 $generated@@412)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@413 ($generated@@256 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@157) ($generated@@0 ($generated@@99 $generated@@413 $generated@@416))) ($generated@@284 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@99 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@92 $generated@@413 ($generated@@256 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@417 ($generated@@261 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@157) ($generated@@0 ($generated@@99 $generated@@417 $generated@@420))) ($generated@@284 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@99 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@92 $generated@@417 ($generated@@261 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@99 ($generated@@326 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@99 ($generated@@326 $generated@@422) $generated@@421)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@423) $generated@@68) (= (type $generated@@424) $generated@@78)) (or ($generated@@278 $generated@@423 $generated@@424) (and (not (= 0 $generated@@76)) (and ($generated@@80 $generated@@424 ($generated@@81 $generated@@423)) ($generated@@155 $generated@@424))))) ($generated@@241 ($generated@@277 $generated@@423 $generated@@424) $generated@@423))
 :pattern ( ($generated@@277 $generated@@423 $generated@@424))
))))
(assert  (and (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@425 $generated@@428)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@425 $generated@@428))
)) (forall (($generated@@429 T@T) ($generated@@430 T@U) ) (! (= (type ($generated@@426 $generated@@429 $generated@@430)) $generated@@429)
 :pattern ( ($generated@@426 $generated@@429 $generated@@430))
))) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@338 (type $generated@@431))))
(let (($generated@@433 ($generated@@337 (type $generated@@431))))
(= (type ($generated@@427 $generated@@431)) ($generated@@94 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@427 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@435) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@425 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@99 ($generated@@334 $generated@@434) ($generated@@173 ($generated@@426 $generated@@78 $generated@@435)))) (= ($generated@@99 ($generated@@427 $generated@@434) ($generated@@173 ($generated@@426 $generated@@78 $generated@@435))) ($generated@@174 ($generated@@426 $generated@@78 $generated@@435))))))
 :pattern ( ($generated@@99 ($generated@@425 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@356 (type $generated@@439))))
(let (($generated@@441 ($generated@@355 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@94 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@443) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@99 ($generated@@352 $generated@@442) ($generated@@173 ($generated@@426 $generated@@78 $generated@@443)))) (= ($generated@@99 ($generated@@437 $generated@@442) ($generated@@173 ($generated@@426 $generated@@78 $generated@@443))) ($generated@@174 ($generated@@426 $generated@@78 $generated@@443))))))
 :pattern ( ($generated@@99 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@337 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@99 ($generated@@381 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@99 ($generated@@334 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@99 ($generated@@427 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@99 ($generated@@334 $generated@@444) $generated@@448))
 :pattern ( ($generated@@99 ($generated@@427 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@99 ($generated@@381 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@355 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@354 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@99 ($generated@@392 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@99 ($generated@@352 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@99 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@99 ($generated@@352 $generated@@449) $generated@@453))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@99 ($generated@@392 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@334 $generated@@457) $generated@@461))) (and ($generated@@284 ($generated@@99 ($generated@@427 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@284 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@99 ($generated@@427 $generated@@457) $generated@@461))
 :pattern ( ($generated@@99 ($generated@@334 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@92 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@352 $generated@@465) $generated@@469))) (and ($generated@@284 ($generated@@99 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@284 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@99 ($generated@@352 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@92 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@78)) ($generated@@80 $generated@@471 ($generated@@81 $generated@@470))) (or ($generated@@155 $generated@@471) ($generated@@82 $generated@@471)))
 :pattern ( ($generated@@82 $generated@@471) ($generated@@80 $generated@@471 ($generated@@81 $generated@@470)))
 :pattern ( ($generated@@155 $generated@@471) ($generated@@80 $generated@@471 ($generated@@81 $generated@@470)))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@472) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@473) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@474) ($generated@@94 $generated@@95 $generated@@96))) (not (= $generated@@472 $generated@@474))) (and ($generated@@150 $generated@@472 $generated@@473) ($generated@@150 $generated@@473 $generated@@474))) ($generated@@150 $generated@@472 $generated@@474))
 :pattern ( ($generated@@150 $generated@@472 $generated@@473) ($generated@@150 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@T) ) (! (= (type ($generated@@475 $generated@@476)) ($generated@@94 $generated@@476 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@356 (type $generated@@477))))
(let (($generated@@479 ($generated@@355 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@354 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@353 $generated@@479 $generated@@478)) (= ($generated@@352 $generated@@477) ($generated@@475 $generated@@479))))))
 :pattern ( ($generated@@352 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@356 (type $generated@@480))))
(let (($generated@@482 ($generated@@355 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@354 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@353 $generated@@482 $generated@@481)) (= ($generated@@392 $generated@@480) ($generated@@475 $generated@@481))))))
 :pattern ( ($generated@@392 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@356 (type $generated@@483))))
(let (($generated@@485 ($generated@@355 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@354 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@353 $generated@@485 $generated@@484)) (= ($generated@@436 $generated@@483) ($generated@@475 $generated@@157))))))
 :pattern ( ($generated@@436 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@338 (type $generated@@486))))
(let (($generated@@488 ($generated@@337 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@336 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@335 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@157) (= (type $generated@@490) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@425 $generated@@486) ($generated@@312 ($generated@@240 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@425 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@356 (type $generated@@491))))
(let (($generated@@493 ($generated@@355 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@354 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@353 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@157) (= (type $generated@@495) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@436 $generated@@491) ($generated@@312 ($generated@@240 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@436 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@157) ($generated@@241 $generated@@496 $generated@@46)) (and (= ($generated@@312 ($generated@@426 $generated@@2 $generated@@496)) $generated@@496) ($generated@@80 ($generated@@426 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@157) ($generated@@241 $generated@@497 $generated@@47)) (and (= ($generated@@312 ($generated@@426 $generated@@3 $generated@@497)) $generated@@497) ($generated@@80 ($generated@@426 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@157) ($generated@@241 $generated@@498 $generated@@44)) (and (= ($generated@@312 ($generated@@426 $generated@@4 $generated@@498)) $generated@@498) ($generated@@80 ($generated@@426 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 20))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@157) ($generated@@241 $generated@@500 $generated@@45)) (and (= ($generated@@312 ($generated@@426 $generated@@499 $generated@@500)) $generated@@500) ($generated@@80 ($generated@@426 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@241 ($generated@@312 $generated@@501) $generated@@502) ($generated@@80 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@241 ($generated@@312 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@97 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@94 $generated@@504 $generated@@2)) (<= 0 ($generated@@325 $generated@@503))))
 :pattern ( ($generated@@325 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@301 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@300 $generated@@506)) (<= 0 ($generated@@299 $generated@@505))))
 :pattern ( ($generated@@299 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@454 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@454 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@454 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@454 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@90 ($generated@@454 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@462 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@462 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@462 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@462 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@90 ($generated@@462 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@157) (= (type $generated@@528) $generated@@157)) (= ($generated@@290 ($generated@@240 $generated@@527 $generated@@528)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@166 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@166 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@166 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@166 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@157) (= (type $generated@@538) $generated@@157)) (= ($generated@@173 ($generated@@240 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@240 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@157) (= (type $generated@@540) $generated@@157)) (= ($generated@@174 ($generated@@240 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@240 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@301 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@300 $generated@@157)) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@299 $generated@@547))) ($generated@@284 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@92 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@78)) (or ($generated@@79 $generated@@551 $generated@@552 $generated@@553) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@553 ($generated@@81 $generated@@551)) ($generated@@82 $generated@@553))))) (= ($generated@@77 $generated@@551 $generated@@552 $generated@@553) ($generated@@272 ($generated@@161 $generated@@553))))
 :pattern ( ($generated@@77 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@93 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@93 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@256 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@256 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@90 ($generated@@256 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@261 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@261 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@90 ($generated@@261 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@179 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@179 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@90 ($generated@@179 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@541 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@541 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@90 ($generated@@541 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@157) (= ($generated@@290 ($generated@@306 $generated@@572)) $generated@@63))
 :pattern ( ($generated@@306 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@573 ($generated@@81 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@81 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@157) (= ($generated@@156 ($generated@@306 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@306 $generated@@576))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@290 ($generated@@272 $generated@@577)) $generated@@65)
 :pattern ( ($generated@@272 $generated@@577))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@161 ($generated@@272 $generated@@578)) $generated@@578)
 :pattern ( ($generated@@272 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated@@426 $generated@@580 ($generated@@312 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@312 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) (= ($generated@@80 $generated@@581 ($generated@@454 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@334 $generated@@581) $generated@@584))) (and ($generated@@241 ($generated@@99 ($generated@@427 $generated@@581) $generated@@584) $generated@@583) ($generated@@241 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@99 ($generated@@427 $generated@@581) $generated@@584))
 :pattern ( ($generated@@99 ($generated@@334 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@454 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) (= ($generated@@80 $generated@@585 ($generated@@462 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@352 $generated@@585) $generated@@588))) (and ($generated@@241 ($generated@@99 ($generated@@437 $generated@@585) $generated@@588) $generated@@587) ($generated@@241 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@585) $generated@@588))
 :pattern ( ($generated@@99 ($generated@@352 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@80 $generated@@585 ($generated@@462 $generated@@586 $generated@@587)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@68) (= (type $generated@@590) $generated@@78)) (or ($generated@@278 $generated@@589 ($generated@@268 $generated@@590)) (and (not (= 0 $generated@@76)) (and ($generated@@80 $generated@@590 ($generated@@81 $generated@@589)) ($generated@@0 ($generated@@268 ($generated@@11 ($generated@@155 ($generated@@268 $generated@@590))))))))) (= ($generated@@277 $generated@@589 ($generated@@268 $generated@@590)) ($generated@@268 ($generated@@156 ($generated@@268 $generated@@590)))))
 :weight 3
 :pattern ( ($generated@@277 $generated@@589 ($generated@@268 $generated@@590)))
))))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@157)) (= ($generated@@80 ($generated@@306 $generated@@592) ($generated@@81 $generated@@591)) ($generated@@241 $generated@@592 $generated@@591)))
 :pattern ( ($generated@@80 ($generated@@306 $generated@@592) ($generated@@81 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) $generated@@68) (= ($generated@@80 ($generated@@272 $generated@@594) ($generated@@81 $generated@@593)) ($generated@@80 ($generated@@8 $generated@@594) $generated@@46)))
 :pattern ( ($generated@@80 ($generated@@272 $generated@@594) ($generated@@81 $generated@@593)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@157) (= (type $generated@@598) $generated@@157)) (< ($generated@@595 $generated@@597) ($generated@@596 ($generated@@240 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@240 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@157) (= (type $generated@@600) $generated@@157)) (< ($generated@@595 $generated@@600) ($generated@@596 ($generated@@240 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@240 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@157) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@241 $generated@@601 ($generated@@454 $generated@@602 $generated@@603))) (and (= ($generated@@312 ($generated@@426 ($generated@@336 $generated@@157 $generated@@157) $generated@@601)) $generated@@601) ($generated@@80 ($generated@@426 ($generated@@336 $generated@@157 $generated@@157) $generated@@601) ($generated@@454 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@241 $generated@@601 ($generated@@454 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@157) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) ($generated@@241 $generated@@604 ($generated@@462 $generated@@605 $generated@@606))) (and (= ($generated@@312 ($generated@@426 ($generated@@354 $generated@@157 $generated@@157) $generated@@604)) $generated@@604) ($generated@@80 ($generated@@426 ($generated@@354 $generated@@157 $generated@@157) $generated@@604) ($generated@@462 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@241 $generated@@604 ($generated@@462 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@157)) ($generated@@241 $generated@@609 ($generated@@166 $generated@@607 $generated@@608))) (and (= ($generated@@312 ($generated@@426 $generated@@78 $generated@@609)) $generated@@609) ($generated@@80 ($generated@@426 $generated@@78 $generated@@609) ($generated@@166 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@241 $generated@@609 ($generated@@166 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@157) (< ($generated@@595 $generated@@610) ($generated@@596 ($generated@@306 $generated@@610))))
 :pattern ( ($generated@@306 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@78) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@613) (and ($generated@@155 $generated@@611) ($generated@@92 $generated@@611 ($generated@@81 $generated@@612) $generated@@613)))) ($generated@@284 ($generated@@156 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@284 ($generated@@156 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@99 ($generated@@475 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@99 ($generated@@475 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@68)) (and (= ($generated@@90 ($generated@@166 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@331 ($generated@@166 $generated@@616 $generated@@617)) $generated@@66)))
 :pattern ( ($generated@@166 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@78) (= ($generated@@595 ($generated@@312 $generated@@618)) ($generated@@596 $generated@@618)))
 :pattern ( ($generated@@595 ($generated@@312 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@157) ($generated@@241 $generated@@619 ($generated@@93 0))) (and (= ($generated@@312 ($generated@@426 $generated@@2 $generated@@619)) $generated@@619) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@619) ($generated@@93 0))))
 :pattern ( ($generated@@241 $generated@@619 ($generated@@93 0)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@157) (= (type $generated@@621) $generated@@68)) ($generated@@241 $generated@@620 ($generated@@256 $generated@@621))) (and (= ($generated@@312 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@620)) $generated@@620) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@620) ($generated@@256 $generated@@621))))
 :pattern ( ($generated@@241 $generated@@620 ($generated@@256 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@157) (= (type $generated@@623) $generated@@68)) ($generated@@241 $generated@@622 ($generated@@261 $generated@@623))) (and (= ($generated@@312 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@622)) $generated@@622) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@622) ($generated@@261 $generated@@623))))
 :pattern ( ($generated@@241 $generated@@622 ($generated@@261 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@157) (= (type $generated@@625) $generated@@68)) ($generated@@241 $generated@@624 ($generated@@179 $generated@@625))) (and (= ($generated@@312 ($generated@@426 ($generated@@94 $generated@@157 $generated@@2) $generated@@624)) $generated@@624) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@2) $generated@@624) ($generated@@179 $generated@@625))))
 :pattern ( ($generated@@241 $generated@@624 ($generated@@179 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@157) (= (type $generated@@627) $generated@@68)) ($generated@@241 $generated@@626 ($generated@@541 $generated@@627))) (and (= ($generated@@312 ($generated@@426 ($generated@@300 $generated@@157) $generated@@626)) $generated@@626) ($generated@@80 ($generated@@426 ($generated@@300 $generated@@157) $generated@@626) ($generated@@541 $generated@@627))))
 :pattern ( ($generated@@241 $generated@@626 ($generated@@541 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@68) (= (type $generated@@629) $generated@@157)) ($generated@@241 $generated@@629 ($generated@@81 $generated@@628))) (and (= ($generated@@312 ($generated@@426 $generated@@78 $generated@@629)) $generated@@629) ($generated@@80 ($generated@@426 $generated@@78 $generated@@629) ($generated@@81 $generated@@628))))
 :pattern ( ($generated@@241 $generated@@629 ($generated@@81 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@630 ($generated@@179 $generated@@631) $generated@@632) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@630 $generated@@633)))) ($generated@@284 $generated@@633 $generated@@631 $generated@@632))
 :pattern ( ($generated@@99 $generated@@630 $generated@@633))
))))
 :pattern ( ($generated@@92 $generated@@630 ($generated@@179 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@78) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@636) (and ($generated@@165 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@92 $generated@@634 ($generated@@166 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@92 $generated@@634 ($generated@@166 $generated@@635 $generated@@637) $generated@@636))
))))) ($generated@@284 ($generated@@173 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@284 ($generated@@173 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@78) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@640) (and ($generated@@165 $generated@@638) (exists (($generated@@641 T@U) ) (!  (and (= (type $generated@@641) $generated@@68) ($generated@@92 $generated@@638 ($generated@@166 $generated@@641 $generated@@639) $generated@@640))
 :pattern ( ($generated@@92 $generated@@638 ($generated@@166 $generated@@641 $generated@@639) $generated@@640))
))))) ($generated@@284 ($generated@@174 $generated@@638) $generated@@639 $generated@@640))
 :pattern ( ($generated@@284 ($generated@@174 $generated@@638) $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@157) (= (type $generated@@643) $generated@@157)) (= ($generated@@240 ($generated@@268 $generated@@642) ($generated@@268 $generated@@643)) ($generated@@268 ($generated@@240 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@240 ($generated@@268 $generated@@642) ($generated@@268 $generated@@643)))
)))
(assert (forall (($generated@@644 Int) ) (! (= ($generated@@312 ($generated@@8 ($generated@@266 $generated@@644))) ($generated@@268 ($generated@@312 ($generated@@8 $generated@@644))))
 :pattern ( ($generated@@312 ($generated@@8 ($generated@@266 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@157) (= ($generated@@306 ($generated@@268 $generated@@645)) ($generated@@268 ($generated@@306 $generated@@645))))
 :pattern ( ($generated@@306 ($generated@@268 $generated@@645)))
)))
(assert (forall (($generated@@646 Int) ) (! (= ($generated@@272 ($generated@@266 $generated@@646)) ($generated@@268 ($generated@@272 $generated@@646)))
 :pattern ( ($generated@@272 ($generated@@266 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (= ($generated@@312 ($generated@@268 $generated@@647)) ($generated@@268 ($generated@@312 $generated@@647)))
 :pattern ( ($generated@@312 ($generated@@268 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@301 (type $generated@@648))))
 (=> (and (= (type $generated@@648) ($generated@@300 $generated@@649)) (= ($generated@@299 $generated@@648) 0)) (= $generated@@648 ($generated@@298 $generated@@649))))
 :pattern ( ($generated@@299 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@651)))
 (=> (and (and (= (type $generated@@650) ($generated@@94 $generated@@653 $generated@@2)) (= (type $generated@@652) $generated@@2)) (<= 0 ($generated $generated@@652))) (= ($generated@@325 ($generated@@100 $generated@@650 $generated@@651 $generated@@652)) (+ (- ($generated@@325 $generated@@650) ($generated ($generated@@99 $generated@@650 $generated@@651))) ($generated $generated@@652)))))
 :pattern ( ($generated@@325 ($generated@@100 $generated@@650 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@655) $generated@@2)) ($generated@@92 $generated@@655 $generated@@46 $generated@@654))
 :pattern ( ($generated@@92 $generated@@655 $generated@@46 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@657) $generated@@3)) ($generated@@92 $generated@@657 $generated@@47 $generated@@656))
 :pattern ( ($generated@@92 $generated@@657 $generated@@47 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@659) $generated@@4)) ($generated@@92 $generated@@659 $generated@@44 $generated@@658))
 :pattern ( ($generated@@92 $generated@@659 $generated@@44 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@661) $generated@@499)) ($generated@@92 $generated@@661 $generated@@45 $generated@@660))
 :pattern ( ($generated@@92 $generated@@661 $generated@@45 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@663) $generated@@157)) ($generated@@92 $generated@@663 $generated@@48 $generated@@662))
 :pattern ( ($generated@@92 $generated@@663 $generated@@48 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@300 $generated@@157)) (= (type $generated@@665) $generated@@68)) (= ($generated@@80 $generated@@664 ($generated@@541 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@299 $generated@@664))) ($generated@@241 ($generated@@542 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@542 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@80 $generated@@664 ($generated@@541 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@300 $generated@@157)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@299 $generated@@668))) (< ($generated@@596 ($generated@@426 $generated@@78 ($generated@@542 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@596 ($generated@@426 $generated@@78 ($generated@@542 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@80 $generated@@670 ($generated@@454 $generated@@671 $generated@@672))) (and (and ($generated@@80 ($generated@@334 $generated@@670) ($generated@@256 $generated@@671)) ($generated@@80 ($generated@@381 $generated@@670) ($generated@@256 $generated@@672))) ($generated@@80 ($generated@@425 $generated@@670) ($generated@@256 ($generated@@166 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@80 $generated@@670 ($generated@@454 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@80 $generated@@673 ($generated@@462 $generated@@674 $generated@@675))) (and (and ($generated@@80 ($generated@@352 $generated@@673) ($generated@@261 $generated@@674)) ($generated@@80 ($generated@@392 $generated@@673) ($generated@@261 $generated@@675))) ($generated@@80 ($generated@@436 $generated@@673) ($generated@@261 ($generated@@166 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@80 $generated@@673 ($generated@@462 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@80 $generated@@676 $generated@@46))
 :pattern ( ($generated@@80 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@80 $generated@@677 $generated@@47))
 :pattern ( ($generated@@80 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@80 $generated@@678 $generated@@44))
 :pattern ( ($generated@@80 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@499) ($generated@@80 $generated@@679 $generated@@45))
 :pattern ( ($generated@@80 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@157) ($generated@@80 $generated@@680 $generated@@48))
 :pattern ( ($generated@@80 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(declare-fun $generated@@693 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@681) $generated@@78) (= (type $generated@@682) $generated@@78)) (= (type $generated@@683) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@686) $generated@@78)) (= (type $generated@@685) $generated@@78)) (= (type $generated@@687) ($generated@@186 $generated@@95 $generated@@4))) (= (type $generated@@688) $generated@@95)) (= (type $generated@@689) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@690) $generated@@78)) (= (type $generated@@691) $generated@@78)) (= (type $generated@@693) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@694  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@154 $generated@@681 ($generated@@272 ($generated@@266 5))))))
(let (($generated@@695  (=> (and (not ($generated@@248 $generated@@46 $generated@@682)) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@155 $generated@@682)) (=> (and ($generated@@155 $generated@@682) ($generated@@278 $generated@@46 $generated@@682)) (=> (and (and ($generated@@278 $generated@@46 $generated@@682) (= $generated@@684 ($generated ($generated@@426 $generated@@2 ($generated@@277 $generated@@46 $generated@@682))))) (and (= $generated@@681 $generated@@685) (= (ControlFlow 0 5) 2))) $generated@@694))))))
(let (($generated@@696  (=> (and ($generated@@248 $generated@@46 $generated@@682) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@82 $generated@@682)) (=> (and ($generated@@82 $generated@@682) ($generated@@79 $generated@@46 $generated@@46 $generated@@682)) (=> (and (and ($generated@@79 $generated@@46 $generated@@46 $generated@@682) (= $generated@@686 ($generated@@77 $generated@@46 $generated@@46 $generated@@682))) (and (= $generated@@681 $generated@@686) (= (ControlFlow 0 3) 2))) $generated@@694))))))
(let (($generated@@697  (=> (= $generated@@687 ($generated@@185 $generated@@688 $generated@@689 $generated@@60 false)) (=> (and ($generated@@80 $generated@@690 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@690 ($generated@@81 $generated@@46) $generated@@689)) (=> (and (and ($generated@@80 $generated@@691 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@691 ($generated@@81 $generated@@46) $generated@@689)) (and ($generated@@283 $generated@@683) ($generated@@692 $generated@@683))) (=> (and (and (and (and ($generated@@80 $generated@@682 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) ($generated@@411 $generated@@682)) (and ($generated@@154 $generated@@682 ($generated@@272 ($generated@@266 5))) (forall (($generated@@698 T@U) ) (!  (=> (= (type $generated@@698) $generated@@95) (=> (and (not (= $generated@@698 $generated@@688)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@689 $generated@@698) $generated@@60))) (= ($generated@@99 $generated@@683 $generated@@698) ($generated@@99 $generated@@689 $generated@@698))))
 :pattern ( ($generated@@99 $generated@@683 $generated@@698))
)))) (and (and ($generated@@150 $generated@@689 $generated@@683) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) (and ($generated@@249 $generated@@46 $generated@@682) ($generated@@249 $generated@@46 $generated@@682)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@696) (=> (= (ControlFlow 0 7) 5) $generated@@695))))))))
(let (($generated@@699  (=> (and (and ($generated@@283 $generated@@689) ($generated@@692 $generated@@689)) (and ($generated@@80 $generated@@685 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@685 ($generated@@81 $generated@@46) $generated@@689))) (=> (and (and (and ($generated@@80 $generated@@693 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@693 ($generated@@81 $generated@@46) $generated@@689)) true) (and (= 2 $generated@@76) (= (ControlFlow 0 8) 7))) $generated@@697))))
$generated@@699))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@291 (Int) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@394 (T@U) Bool)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@T T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@456 (T@T) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@142) (= (type $generated@@147) $generated@@142)) (and ($generated@@141 $generated@@146) ($generated@@141 $generated@@147))) (= ($generated@@140 $generated@@146 $generated@@147) (= ($generated@@143 $generated@@146) ($generated@@143 $generated@@147))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@146))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@142) (= (type $generated@@151) $generated@@142)) (and ($generated@@148 $generated@@150) ($generated@@148 $generated@@151))) (= ($generated@@140 $generated@@150 $generated@@151) (= ($generated@@149 $generated@@150) ($generated@@149 $generated@@151))))
 :pattern ( ($generated@@140 $generated@@150 $generated@@151) ($generated@@148 $generated@@150))
 :pattern ( ($generated@@140 $generated@@150 $generated@@151) ($generated@@148 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@152 $generated@@153 ($generated@@79 0)))
 :pattern ( ($generated@@152 $generated@@153 ($generated@@79 0)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@156 $generated@@157)) $generated@@68)
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@68) (= (type $generated@@159) $generated@@68)) (= (type $generated@@160) $generated@@142)) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159))) ($generated@@154 $generated@@160))
 :pattern ( ($generated@@154 $generated@@160) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@144)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@144)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@142) (= (type $generated@@167) $generated@@142)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@172) $generated@@68)) ($generated@@152 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@152 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@71 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@70 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@70 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@142)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@144)) (= (type $generated@@236) $generated@@144)) (= ($generated@@152 ($generated@@229 $generated@@235 $generated@@236) ($generated@@155 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@152 ($generated@@229 $generated@@235 $generated@@236) ($generated@@155 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@142)) (or ($generated@@239 $generated@@242 $generated@@243) (and (not (= 0 $generated@@237)) ($generated@@152 $generated@@243 ($generated@@240 $generated@@242))))) (= ($generated@@238 $generated@@242 $generated@@243) ($generated@@148 $generated@@243)))
 :pattern ( ($generated@@238 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@142) (= (type $generated@@245) $generated@@142)) (= ($generated@@161 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@161 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@142) (= (type $generated@@247) $generated@@142)) (= ($generated@@140 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@140 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@152 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@144) ($generated@@0 ($generated@@85 $generated@@250 $generated@@252))) ($generated@@230 $generated@@252 $generated@@251))
 :pattern ( ($generated@@85 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@152 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@256) $generated@@68)) (= ($generated@@152 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@144) ($generated@@0 ($generated@@85 $generated@@255 $generated@@257))) ($generated@@230 $generated@@257 $generated@@256))
 :pattern ( ($generated@@85 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@152 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@144)) (= (type $generated@@269) $generated@@144)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@264 $generated@@270)) (= ($generated@@78 ($generated@@229 $generated@@268 $generated@@269) ($generated@@155 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@268 $generated@@269) ($generated@@155 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@72)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@142) (= ($generated@@154 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@141 $generated@@274) (= ($generated@@271 $generated@@274) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@148 $generated@@275) (= ($generated@@271 $generated@@275) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@142) ($generated@@154 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@144) (= (type $generated@@278) $generated@@144)) (= $generated@@276 ($generated@@229 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@154 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@142)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@142) ($generated@@141 $generated@@289)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@144) (= $generated@@289 ($generated@@287 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@141 $generated@@289))
)))
(assert (forall (($generated@@292 Int) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@142)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@148 $generated@@293)) (exists (($generated@@294 Int) ) (= $generated@@293 ($generated@@291 $generated@@294))))
 :pattern ( ($generated@@148 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@144)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@78 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@265 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@144)) (= (type $generated@@303) $generated@@68)) ($generated@@136 $generated@@300 $generated@@301)) ($generated@@265 $generated@@302 $generated@@303 $generated@@300)) ($generated@@265 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@136 $generated@@300 $generated@@301) ($generated@@265 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@307) $generated@@68)) ($generated@@136 $generated@@304 $generated@@305)) ($generated@@78 $generated@@306 $generated@@307 $generated@@304)) ($generated@@78 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@136 $generated@@304 $generated@@305) ($generated@@78 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@80 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@83 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@80 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@85 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@73)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@68) (and (= ($generated@@76 ($generated@@240 $generated@@316)) $generated@@64) (= ($generated@@314 ($generated@@240 $generated@@316)) $generated@@67)))
 :pattern ( ($generated@@240 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@80 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@80 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@68) (= (type $generated@@354) $generated@@142)) (or ($generated@@239 $generated@@353 $generated@@354) (and (not (= 0 $generated@@237)) ($generated@@152 $generated@@354 ($generated@@240 $generated@@353))))) true)
 :pattern ( ($generated@@238 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@83 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@80 $generated@@356 $generated@@2)) (= ($generated@@169 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@85 $generated@@355 $generated@@357))) (<= ($generated ($generated@@85 $generated@@355 $generated@@357)) ($generated@@308 $generated@@355))))
 :pattern ( ($generated@@85 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@169 $generated@@355))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@358) $generated@@68) (= (type $generated@@359) $generated@@142)) (or ($generated@@239 $generated@@358 ($generated@@260 $generated@@359)) (and (not (= 0 $generated@@237)) ($generated@@152 $generated@@359 ($generated@@240 $generated@@358))))) (= ($generated@@238 $generated@@358 ($generated@@260 $generated@@359)) ($generated@@0 ($generated@@260 ($generated@@11 ($generated@@148 ($generated@@260 $generated@@359)))))))
 :weight 3
 :pattern ( ($generated@@238 $generated@@358 ($generated@@260 $generated@@359)))
))))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@321 (type $generated@@360))))
(let (($generated@@362 ($generated@@320 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@319 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@318 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@317 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@80 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(let (($generated@@369 ($generated@@320 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@319 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@318 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@339 (type $generated@@371))))
(let (($generated@@373 ($generated@@338 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@337 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@336 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@335 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@339 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(let (($generated@@380 ($generated@@338 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@337 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@336 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@382) $generated@@142) (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@383) (and ($generated@@148 $generated@@382) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@68) ($generated@@78 $generated@@382 ($generated@@240 $generated@@384) $generated@@383))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@240 $generated@@384) $generated@@383))
))))) ($generated@@78 ($generated@@8 ($generated@@149 $generated@@382)) $generated@@46 $generated@@383))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@149 $generated@@382)) $generated@@46 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@386) $generated@@68)) (= ($generated@@152 $generated@@385 ($generated@@168 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@385 $generated@@387)))) ($generated@@230 $generated@@387 $generated@@386))
 :pattern ( ($generated@@85 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@152 $generated@@385 ($generated@@168 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) $generated@@68) (= (type $generated@@389) $generated@@144)) (= (type $generated@@390) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@264 $generated@@390)) (= ($generated@@78 ($generated@@287 $generated@@389) ($generated@@240 $generated@@388) $generated@@390) ($generated@@265 $generated@@389 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@78 ($generated@@287 $generated@@389) ($generated@@240 $generated@@388) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 Int) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) $generated@@68) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@264 $generated@@393)) (= ($generated@@78 ($generated@@291 $generated@@392) ($generated@@240 $generated@@391) $generated@@393) ($generated@@78 ($generated@@8 $generated@@392) $generated@@46 $generated@@393)))
 :pattern ( ($generated@@78 ($generated@@291 $generated@@392) ($generated@@240 $generated@@391) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@142) ($generated@@394 $generated@@395)) (or ($generated@@141 $generated@@395) ($generated@@148 $generated@@395)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@397) $generated@@68)) (= (type $generated@@398) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@396 ($generated@@248 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@144) ($generated@@0 ($generated@@85 $generated@@396 $generated@@399))) ($generated@@265 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@85 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@78 $generated@@396 ($generated@@248 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@400 ($generated@@253 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@144) ($generated@@0 ($generated@@85 $generated@@400 $generated@@403))) ($generated@@265 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@85 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@78 $generated@@400 ($generated@@253 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@85 ($generated@@309 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@85 ($generated@@309 $generated@@405) $generated@@404)))
)))
(assert  (and (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@406 $generated@@409)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@406 $generated@@409))
)) (forall (($generated@@410 T@T) ($generated@@411 T@U) ) (! (= (type ($generated@@407 $generated@@410 $generated@@411)) $generated@@410)
 :pattern ( ($generated@@407 $generated@@410 $generated@@411))
))) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@321 (type $generated@@412))))
(let (($generated@@414 ($generated@@320 (type $generated@@412))))
(= (type ($generated@@408 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@408 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@416) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@406 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@415) ($generated@@162 ($generated@@407 $generated@@142 $generated@@416)))) (= ($generated@@85 ($generated@@408 $generated@@415) ($generated@@162 ($generated@@407 $generated@@142 $generated@@416))) ($generated@@163 ($generated@@407 $generated@@142 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@415) $generated@@416))
)))
(assert  (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@419)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@417 $generated@@419))
)) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@339 (type $generated@@420))))
(let (($generated@@422 ($generated@@338 (type $generated@@420))))
(= (type ($generated@@418 $generated@@420)) ($generated@@80 $generated@@422 $generated@@421))))
 :pattern ( ($generated@@418 $generated@@420))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@424) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@417 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@423) ($generated@@162 ($generated@@407 $generated@@142 $generated@@424)))) (= ($generated@@85 ($generated@@418 $generated@@423) ($generated@@162 ($generated@@407 $generated@@142 $generated@@424))) ($generated@@163 ($generated@@407 $generated@@142 $generated@@424))))))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@320 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@319 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@85 ($generated@@364 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@85 ($generated@@408 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@338 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@337 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@85 ($generated@@418 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@418 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@438) $generated@@442))) (and ($generated@@265 ($generated@@85 ($generated@@408 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@265 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@438) $generated@@442))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@68)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@446) $generated@@450))) (and ($generated@@265 ($generated@@85 ($generated@@418 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@265 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@85 ($generated@@418 $generated@@446) $generated@@450))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@78 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) $generated@@68) (= (type $generated@@452) $generated@@142)) ($generated@@152 $generated@@452 ($generated@@240 $generated@@451))) (or ($generated@@141 $generated@@452) ($generated@@148 $generated@@452)))
 :pattern ( ($generated@@148 $generated@@452) ($generated@@152 $generated@@452 ($generated@@240 $generated@@451)))
 :pattern ( ($generated@@141 $generated@@452) ($generated@@152 $generated@@452 ($generated@@240 $generated@@451)))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@455) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@453 $generated@@455))) (and ($generated@@136 $generated@@453 $generated@@454) ($generated@@136 $generated@@454 $generated@@455))) ($generated@@136 $generated@@453 $generated@@455))
 :pattern ( ($generated@@136 $generated@@453 $generated@@454) ($generated@@136 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@T) ) (! (= (type ($generated@@456 $generated@@457)) ($generated@@80 $generated@@457 $generated@@4))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@339 (type $generated@@458))))
(let (($generated@@460 ($generated@@338 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@337 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@336 $generated@@460 $generated@@459)) (= ($generated@@335 $generated@@458) ($generated@@456 $generated@@460))))))
 :pattern ( ($generated@@335 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@339 (type $generated@@461))))
(let (($generated@@463 ($generated@@338 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@337 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@336 $generated@@463 $generated@@462)) (= ($generated@@375 $generated@@461) ($generated@@456 $generated@@462))))))
 :pattern ( ($generated@@375 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@339 (type $generated@@464))))
(let (($generated@@466 ($generated@@338 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@337 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@336 $generated@@466 $generated@@465)) (= ($generated@@417 $generated@@464) ($generated@@456 $generated@@144))))))
 :pattern ( ($generated@@417 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@321 (type $generated@@467))))
(let (($generated@@469 ($generated@@320 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@319 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@318 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@144) (= (type $generated@@471) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@406 $generated@@467) ($generated@@295 ($generated@@229 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@406 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@339 (type $generated@@472))))
(let (($generated@@474 ($generated@@338 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@337 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@336 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@144) (= (type $generated@@476) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@417 $generated@@472) ($generated@@295 ($generated@@229 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@417 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@144) ($generated@@230 $generated@@477 $generated@@46)) (and (= ($generated@@295 ($generated@@407 $generated@@2 $generated@@477)) $generated@@477) ($generated@@152 ($generated@@407 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@144) ($generated@@230 $generated@@478 $generated@@47)) (and (= ($generated@@295 ($generated@@407 $generated@@3 $generated@@478)) $generated@@478) ($generated@@152 ($generated@@407 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@144) ($generated@@230 $generated@@479 $generated@@44)) (and (= ($generated@@295 ($generated@@407 $generated@@4 $generated@@479)) $generated@@479) ($generated@@152 ($generated@@407 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 20))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@144) ($generated@@230 $generated@@481 $generated@@45)) (and (= ($generated@@295 ($generated@@407 $generated@@480 $generated@@481)) $generated@@481) ($generated@@152 ($generated@@407 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@68) (= ($generated@@230 ($generated@@295 $generated@@482) $generated@@483) ($generated@@152 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@230 ($generated@@295 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@83 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@80 $generated@@485 $generated@@2)) (<= 0 ($generated@@308 $generated@@484))))
 :pattern ( ($generated@@308 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@282 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@281 $generated@@487)) (<= 0 ($generated@@280 $generated@@486))))
 :pattern ( ($generated@@280 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@435 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@435 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@435 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@435 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@496 $generated@@497)) $generated@@58))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@498 ($generated@@443 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@443 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@443 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@443 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@76 ($generated@@443 $generated@@506 $generated@@507)) $generated@@59))
 :pattern ( ($generated@@443 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@144) (= (type $generated@@509) $generated@@144)) (= ($generated@@271 ($generated@@229 $generated@@508 $generated@@509)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@510 ($generated@@155 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@155 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@155 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@155 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@144) (= (type $generated@@519) $generated@@144)) (= ($generated@@162 ($generated@@229 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@229 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@144) (= (type $generated@@521) $generated@@144)) (= ($generated@@163 ($generated@@229 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@229 $generated@@520 $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@282 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@281 $generated@@144)) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@280 $generated@@528))) ($generated@@265 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@78 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@79 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@79 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@248 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@248 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@248 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@253 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@253 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@253 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@168 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@168 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@168 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@76 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@144) (= ($generated@@271 ($generated@@287 $generated@@550)) $generated@@63))
 :pattern ( ($generated@@287 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@240 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@240 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@144) (= ($generated@@143 ($generated@@287 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@287 $generated@@554))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@271 ($generated@@291 $generated@@555)) $generated@@65)
 :pattern ( ($generated@@291 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@149 ($generated@@291 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@291 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@407 $generated@@558 ($generated@@295 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@295 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@152 $generated@@559 ($generated@@435 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@559) $generated@@562))) (and ($generated@@230 ($generated@@85 ($generated@@408 $generated@@559) $generated@@562) $generated@@561) ($generated@@230 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@152 $generated@@559 ($generated@@435 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) (= ($generated@@152 $generated@@563 ($generated@@443 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@563) $generated@@566))) (and ($generated@@230 ($generated@@85 ($generated@@418 $generated@@563) $generated@@566) $generated@@565) ($generated@@230 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@418 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@152 $generated@@563 ($generated@@443 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@144)) (= ($generated@@152 ($generated@@287 $generated@@568) ($generated@@240 $generated@@567)) ($generated@@230 $generated@@568 $generated@@567)))
 :pattern ( ($generated@@152 ($generated@@287 $generated@@568) ($generated@@240 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@152 ($generated@@291 $generated@@570) ($generated@@240 $generated@@569)) ($generated@@152 ($generated@@8 $generated@@570) $generated@@46)))
 :pattern ( ($generated@@152 ($generated@@291 $generated@@570) ($generated@@240 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@144) (= (type $generated@@574) $generated@@144)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@229 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@229 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@144)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@229 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@229 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@144) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@230 $generated@@577 ($generated@@435 $generated@@578 $generated@@579))) (and (= ($generated@@295 ($generated@@407 ($generated@@319 $generated@@144 $generated@@144) $generated@@577)) $generated@@577) ($generated@@152 ($generated@@407 ($generated@@319 $generated@@144 $generated@@144) $generated@@577) ($generated@@435 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@230 $generated@@577 ($generated@@435 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@144) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) ($generated@@230 $generated@@580 ($generated@@443 $generated@@581 $generated@@582))) (and (= ($generated@@295 ($generated@@407 ($generated@@337 $generated@@144 $generated@@144) $generated@@580)) $generated@@580) ($generated@@152 ($generated@@407 ($generated@@337 $generated@@144 $generated@@144) $generated@@580) ($generated@@443 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@230 $generated@@580 ($generated@@443 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@68) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) $generated@@144)) ($generated@@230 $generated@@585 ($generated@@155 $generated@@583 $generated@@584))) (and (= ($generated@@295 ($generated@@407 $generated@@142 $generated@@585)) $generated@@585) ($generated@@152 ($generated@@407 $generated@@142 $generated@@585) ($generated@@155 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@230 $generated@@585 ($generated@@155 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@144) (< ($generated@@571 $generated@@586) ($generated@@572 ($generated@@287 $generated@@586))))
 :pattern ( ($generated@@287 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@142) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@589) (and ($generated@@141 $generated@@587) ($generated@@78 $generated@@587 ($generated@@240 $generated@@588) $generated@@589)))) ($generated@@265 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@265 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@85 ($generated@@456 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@85 ($generated@@456 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (and (= ($generated@@76 ($generated@@155 $generated@@592 $generated@@593)) $generated@@62) (= ($generated@@314 ($generated@@155 $generated@@592 $generated@@593)) $generated@@66)))
 :pattern ( ($generated@@155 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@142) (= ($generated@@571 ($generated@@295 $generated@@594)) ($generated@@572 $generated@@594)))
 :pattern ( ($generated@@571 ($generated@@295 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@144) ($generated@@230 $generated@@595 ($generated@@79 0))) (and (= ($generated@@295 ($generated@@407 $generated@@2 $generated@@595)) $generated@@595) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@595) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@595 ($generated@@79 0)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@144) (= (type $generated@@597) $generated@@68)) ($generated@@230 $generated@@596 ($generated@@248 $generated@@597))) (and (= ($generated@@295 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@596)) $generated@@596) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@596) ($generated@@248 $generated@@597))))
 :pattern ( ($generated@@230 $generated@@596 ($generated@@248 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@144) (= (type $generated@@599) $generated@@68)) ($generated@@230 $generated@@598 ($generated@@253 $generated@@599))) (and (= ($generated@@295 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@598)) $generated@@598) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@598) ($generated@@253 $generated@@599))))
 :pattern ( ($generated@@230 $generated@@598 ($generated@@253 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@144) (= (type $generated@@601) $generated@@68)) ($generated@@230 $generated@@600 ($generated@@168 $generated@@601))) (and (= ($generated@@295 ($generated@@407 ($generated@@80 $generated@@144 $generated@@2) $generated@@600)) $generated@@600) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@2) $generated@@600) ($generated@@168 $generated@@601))))
 :pattern ( ($generated@@230 $generated@@600 ($generated@@168 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@144) (= (type $generated@@603) $generated@@68)) ($generated@@230 $generated@@602 ($generated@@522 $generated@@603))) (and (= ($generated@@295 ($generated@@407 ($generated@@281 $generated@@144) $generated@@602)) $generated@@602) ($generated@@152 ($generated@@407 ($generated@@281 $generated@@144) $generated@@602) ($generated@@522 $generated@@603))))
 :pattern ( ($generated@@230 $generated@@602 ($generated@@522 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@144)) ($generated@@230 $generated@@605 ($generated@@240 $generated@@604))) (and (= ($generated@@295 ($generated@@407 $generated@@142 $generated@@605)) $generated@@605) ($generated@@152 ($generated@@407 $generated@@142 $generated@@605) ($generated@@240 $generated@@604))))
 :pattern ( ($generated@@230 $generated@@605 ($generated@@240 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@606 ($generated@@168 $generated@@607) $generated@@608) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@606 $generated@@609)))) ($generated@@265 $generated@@609 $generated@@607 $generated@@608))
 :pattern ( ($generated@@85 $generated@@606 $generated@@609))
))))
 :pattern ( ($generated@@78 $generated@@606 ($generated@@168 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@142) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@612) (and ($generated@@154 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@68) ($generated@@78 $generated@@610 ($generated@@155 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@78 $generated@@610 ($generated@@155 $generated@@611 $generated@@613) $generated@@612))
))))) ($generated@@265 ($generated@@162 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@265 ($generated@@162 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@142) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@616) (and ($generated@@154 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@68) ($generated@@78 $generated@@614 ($generated@@155 $generated@@617 $generated@@615) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@155 $generated@@617 $generated@@615) $generated@@616))
))))) ($generated@@265 ($generated@@163 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@265 ($generated@@163 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@144) (= (type $generated@@619) $generated@@144)) (= ($generated@@229 ($generated@@260 $generated@@618) ($generated@@260 $generated@@619)) ($generated@@260 ($generated@@229 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@229 ($generated@@260 $generated@@618) ($generated@@260 $generated@@619)))
)))
(assert (forall (($generated@@620 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@258 $generated@@620))) ($generated@@260 ($generated@@295 ($generated@@8 $generated@@620))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@258 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@144) (= ($generated@@287 ($generated@@260 $generated@@621)) ($generated@@260 ($generated@@287 $generated@@621))))
 :pattern ( ($generated@@287 ($generated@@260 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@291 ($generated@@258 $generated@@622)) ($generated@@260 ($generated@@291 $generated@@622)))
 :pattern ( ($generated@@291 ($generated@@258 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@295 ($generated@@260 $generated@@623)) ($generated@@260 ($generated@@295 $generated@@623)))
 :pattern ( ($generated@@295 ($generated@@260 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@282 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@281 $generated@@625)) (= ($generated@@280 $generated@@624) 0)) (= $generated@@624 ($generated@@279 $generated@@625))))
 :pattern ( ($generated@@280 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@308 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@308 $generated@@626) ($generated ($generated@@85 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@308 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@2)) ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@3)) ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@4)) ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@480)) ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@144)) ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@281 $generated@@144)) (= (type $generated@@641) $generated@@68)) (= ($generated@@152 $generated@@640 ($generated@@522 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@280 $generated@@640))) ($generated@@230 ($generated@@523 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@523 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@152 $generated@@640 ($generated@@522 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@281 $generated@@144)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@280 $generated@@644))) (< ($generated@@572 ($generated@@407 $generated@@142 ($generated@@523 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@572 ($generated@@407 $generated@@142 ($generated@@523 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) $generated@@68)) ($generated@@152 $generated@@646 ($generated@@435 $generated@@647 $generated@@648))) (and (and ($generated@@152 ($generated@@317 $generated@@646) ($generated@@248 $generated@@647)) ($generated@@152 ($generated@@364 $generated@@646) ($generated@@248 $generated@@648))) ($generated@@152 ($generated@@406 $generated@@646) ($generated@@248 ($generated@@155 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@152 $generated@@646 ($generated@@435 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@650) $generated@@68)) (= (type $generated@@651) $generated@@68)) ($generated@@152 $generated@@649 ($generated@@443 $generated@@650 $generated@@651))) (and (and ($generated@@152 ($generated@@335 $generated@@649) ($generated@@253 $generated@@650)) ($generated@@152 ($generated@@375 $generated@@649) ($generated@@253 $generated@@651))) ($generated@@152 ($generated@@417 $generated@@649) ($generated@@253 ($generated@@155 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@152 $generated@@649 ($generated@@443 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@152 $generated@@652 $generated@@46))
 :pattern ( ($generated@@152 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@152 $generated@@653 $generated@@47))
 :pattern ( ($generated@@152 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@152 $generated@@654 $generated@@44))
 :pattern ( ($generated@@152 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@480) ($generated@@152 $generated@@655 $generated@@45))
 :pattern ( ($generated@@152 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@144) ($generated@@152 $generated@@656 $generated@@48))
 :pattern ( ($generated@@152 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@657) $generated@@142) (= (type $generated@@658) $generated@@142)) (= (type $generated@@669) $generated@@142)) (= (type $generated@@670) $generated@@68)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@672) $generated@@142)) (= (type $generated@@665) $generated@@81)) (= (type $generated@@666) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@659) $generated@@144)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@664) $generated@@144)) (= (type $generated@@668) $generated@@142)) (= (type $generated@@673) ($generated@@175 $generated@@81 $generated@@4))) (= (type $generated@@674) $generated@@142)) (= (type $generated@@675) $generated@@142)) (= (type $generated@@676) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@677  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@140 $generated@@657 ($generated@@291 ($generated@@258 5))))))
(let (($generated@@678  (=> (not ($generated@@238 $generated@@46 $generated@@658)) (=> (and ($generated@@230 $generated@@659 $generated@@660) ($generated@@265 $generated@@659 $generated@@660 $generated@@661)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@141 $generated@@658)) (=> ($generated@@141 $generated@@658) (=> (and ($generated@@264 $generated@@662) ($generated@@663 $generated@@662)) (=> (and (and (and ($generated@@230 $generated@@664 $generated@@46) ($generated@@265 $generated@@664 $generated@@46 $generated@@662)) (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@81) (=> (and (not (= $generated@@679 $generated@@665)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@666 $generated@@679) $generated@@60))) (= ($generated@@85 $generated@@662 $generated@@679) ($generated@@85 $generated@@666 $generated@@679))))
 :pattern ( ($generated@@85 $generated@@662 $generated@@679))
))) (and (and ($generated@@136 $generated@@666 $generated@@662) (= $generated@@667 ($generated ($generated@@407 $generated@@2 $generated@@664)))) (and (= $generated@@657 $generated@@668) (= (ControlFlow 0 5) 2)))) $generated@@677))))))))
(let (($generated@@680  (=> ($generated@@238 $generated@@46 $generated@@658) (=> (and ($generated@@152 $generated@@669 ($generated@@240 $generated@@670)) ($generated@@78 $generated@@669 ($generated@@240 $generated@@670) $generated@@661)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@148 $generated@@658)) (=> ($generated@@148 $generated@@658) (=> (and ($generated@@264 $generated@@671) ($generated@@663 $generated@@671)) (=> (and (and (and ($generated@@152 $generated@@672 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@672 ($generated@@240 $generated@@46) $generated@@671)) (and ($generated@@148 $generated@@672) (= ($generated@@149 $generated@@672) ($generated@@149 $generated@@658)))) (and (and (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (=> (and (not (= $generated@@681 $generated@@665)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@666 $generated@@681) $generated@@60))) (= ($generated@@85 $generated@@671 $generated@@681) ($generated@@85 $generated@@666 $generated@@681))))
 :pattern ( ($generated@@85 $generated@@671 $generated@@681))
)) ($generated@@136 $generated@@666 $generated@@671)) (and (= $generated@@657 $generated@@672) (= (ControlFlow 0 3) 2)))) $generated@@677))))))))
(let (($generated@@682  (=> (= $generated@@673 ($generated@@174 $generated@@665 $generated@@661 $generated@@60 false)) (=> (and ($generated@@152 $generated@@674 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@674 ($generated@@240 $generated@@46) $generated@@661)) (=> (and (and ($generated@@152 $generated@@675 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@675 ($generated@@240 $generated@@46) $generated@@661)) (and ($generated@@264 $generated@@666) ($generated@@663 $generated@@666))) (=> (and (and (and (and ($generated@@152 $generated@@658 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@658 ($generated@@240 $generated@@46) $generated@@666)) ($generated@@394 $generated@@658)) (and ($generated@@140 $generated@@658 ($generated@@291 ($generated@@258 5))) (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@81) (=> (and (not (= $generated@@683 $generated@@665)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@661 $generated@@683) $generated@@60))) (= ($generated@@85 $generated@@666 $generated@@683) ($generated@@85 $generated@@661 $generated@@683))))
 :pattern ( ($generated@@85 $generated@@666 $generated@@683))
)))) (and (and ($generated@@136 $generated@@661 $generated@@666) ($generated@@78 $generated@@658 ($generated@@240 $generated@@46) $generated@@666)) (and ($generated@@239 $generated@@46 $generated@@658) ($generated@@239 $generated@@46 $generated@@658)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@680) (=> (= (ControlFlow 0 7) 5) $generated@@678))))))))
(let (($generated@@684  (=> (and (and ($generated@@264 $generated@@661) ($generated@@663 $generated@@661)) (and ($generated@@152 $generated@@668 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@668 ($generated@@240 $generated@@46) $generated@@661))) (=> (and (and (and ($generated@@152 $generated@@676 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@676 ($generated@@240 $generated@@46) $generated@@661)) true) (and (= 2 $generated@@237) (= (ControlFlow 0 8) 7))) $generated@@682))))
$generated@@684))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (Int) Int)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@291 (Int) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@384 (T@U) Bool)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@509 (T@U Int) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@621 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (= ($generated@@1 $generated@@142) 14))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@142)) (and ($generated@@141 $generated@@144) ($generated@@141 $generated@@145))) (= ($generated@@140 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@144))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@79 0)))
)))
(assert (= (type $generated@@151) $generated@@68))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@142) (or ($generated@@150 $generated@@152) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@152 $generated@@151)))) true)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@142)) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@142) (= (type $generated@@167) $generated@@142)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@142)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@146 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@146 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ) (! (let (($generated@@234 (type $generated@@233)))
(= (type ($generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@142) (or ($generated@@150 ($generated@@232 $generated@@235)) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@235 $generated@@151)))) (= ($generated@@149 ($generated@@232 $generated@@235)) ($generated@@0 ($generated@@232 ($generated@@11 ($generated@@141 ($generated@@232 $generated@@235)))))))
 :weight 3
 :pattern ( ($generated@@149 ($generated@@232 $generated@@235)))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@142)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@68) (= (type $generated@@241) $generated@@68)) (= (type $generated@@242) $generated@@163)) (= (type $generated@@243) $generated@@163)) (= ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert ($generated@@146 $generated@@169 $generated@@151))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@244 $generated@@246)) $generated@@142)
 :pattern ( ($generated@@244 $generated@@246))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@142) (or ($generated@@245 ($generated@@232 $generated@@247)) (and (not (= 1 $generated@@148)) (and ($generated@@146 $generated@@247 $generated@@151) ($generated@@0 ($generated@@232 ($generated@@11 ($generated@@141 ($generated@@232 $generated@@247))))))))) (= ($generated@@244 ($generated@@232 $generated@@247)) ($generated@@232 $generated@@247)))
 :weight 3
 :pattern ( ($generated@@244 ($generated@@232 $generated@@247)))
))))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@248 $generated@@249)) ($generated@@78 $generated@@169 $generated@@151 $generated@@249))
 :pattern ( ($generated@@78 $generated@@169 $generated@@151 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@142) (= (type $generated@@251) $generated@@142)) (= ($generated@@160 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@160 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@142) (= (type $generated@@253) $generated@@142)) (= ($generated@@140 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@140 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@257) $generated@@68)) (= ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@163) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@237 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@68)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@262) $generated@@68)) (= ($generated@@146 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@163) ($generated@@0 ($generated@@85 $generated@@261 $generated@@263))) ($generated@@237 $generated@@263 $generated@@262))
 :pattern ( ($generated@@85 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@146 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 Int) ) (! (= ($generated@@264 $generated@@265) $generated@@265)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@232 $generated@@266) $generated@@266)
 :pattern ( ($generated@@232 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (= (type $generated@@268) $generated@@142) (= (type $generated@@269) $generated@@142)) (and ($generated@@267 $generated@@268) ($generated@@267 $generated@@269))) (= ($generated@@140 $generated@@268 $generated@@269) true))
 :pattern ( ($generated@@140 $generated@@268 $generated@@269) ($generated@@267 $generated@@268))
 :pattern ( ($generated@@140 $generated@@268 $generated@@269) ($generated@@267 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@68) (= (type $generated@@272) $generated@@68)) (= (type $generated@@273) $generated@@163)) (= (type $generated@@274) $generated@@163)) (= (type $generated@@275) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@248 $generated@@275)) (= ($generated@@78 ($generated@@236 $generated@@273 $generated@@274) ($generated@@154 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@78 ($generated@@236 $generated@@273 $generated@@274) ($generated@@154 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@153 $generated@@276) (= ($generated@@168 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@142) (= ($generated@@267 $generated@@277) (= ($generated@@168 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@267 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@141 $generated@@278) (= ($generated@@168 $generated@@278) $generated@@65)))
 :pattern ( ($generated@@141 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@142) ($generated@@153 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@163) (= (type $generated@@281) $generated@@163)) (= $generated@@279 ($generated@@236 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@153 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@142) ($generated@@267 $generated@@290)) (= $generated@@290 $generated@@169))
 :pattern ( ($generated@@267 $generated@@290))
)))
(assert (forall (($generated@@292 Int) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@142)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@141 $generated@@293)) (exists (($generated@@294 Int) ) (= $generated@@293 ($generated@@291 $generated@@294))))
 :pattern ( ($generated@@141 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@163)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@270 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@78 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@270 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@163)) (= (type $generated@@303) $generated@@68)) ($generated@@136 $generated@@300 $generated@@301)) ($generated@@270 $generated@@302 $generated@@303 $generated@@300)) ($generated@@270 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@136 $generated@@300 $generated@@301) ($generated@@270 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@307) $generated@@68)) ($generated@@136 $generated@@304 $generated@@305)) ($generated@@78 $generated@@306 $generated@@307 $generated@@304)) ($generated@@78 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@136 $generated@@304 $generated@@305) ($generated@@78 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@80 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@83 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@80 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@85 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@80 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@85 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@85 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@80 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@85 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@85 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@83 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@80 $generated@@351 $generated@@2)) (= ($generated@@172 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@85 $generated@@350 $generated@@352))) (<= ($generated ($generated@@85 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@85 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@172 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@163) ($generated@@237 $generated@@356 $generated@@151)) (and (= ($generated@@295 ($generated@@353 $generated@@142 $generated@@356)) $generated@@356) ($generated@@146 ($generated@@353 $generated@@142 $generated@@356) $generated@@151)))
 :pattern ( ($generated@@237 $generated@@356 $generated@@151))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(let (($generated@@359 ($generated@@317 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@316 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@315 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@314 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@314 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@80 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@318 (type $generated@@364))))
(let (($generated@@366 ($generated@@317 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@316 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@315 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@336 (type $generated@@368))))
(let (($generated@@370 ($generated@@335 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@334 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@333 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@332 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@332 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@80 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@336 (type $generated@@375))))
(let (($generated@@377 ($generated@@335 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@334 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@333 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@85 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@380) $generated@@68)) (= ($generated@@146 $generated@@379 ($generated@@171 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@379 $generated@@381)))) ($generated@@237 $generated@@381 $generated@@380))
 :pattern ( ($generated@@85 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@146 $generated@@379 ($generated@@171 $generated@@380)))
)))
(assert (forall (($generated@@382 Int) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@248 $generated@@383)) (= ($generated@@78 ($generated@@291 $generated@@382) $generated@@151 $generated@@383) ($generated@@78 ($generated@@8 $generated@@382) $generated@@46 $generated@@383)))
 :pattern ( ($generated@@78 ($generated@@291 $generated@@382) $generated@@151 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@142) ($generated@@384 $generated@@385)) (or ($generated@@267 $generated@@385) ($generated@@141 $generated@@385)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@387) $generated@@68)) (= (type $generated@@388) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@386 ($generated@@254 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@163) ($generated@@0 ($generated@@85 $generated@@386 $generated@@389))) ($generated@@270 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@85 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@78 $generated@@386 ($generated@@254 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@391) $generated@@68)) (= (type $generated@@392) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@390 ($generated@@259 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@163) ($generated@@0 ($generated@@85 $generated@@390 $generated@@393))) ($generated@@270 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@85 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@78 $generated@@390 ($generated@@259 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@85 ($generated@@309 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@85 ($generated@@309 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@318 (type $generated@@399))))
(let (($generated@@401 ($generated@@317 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@403) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@85 ($generated@@314 $generated@@402) ($generated@@161 ($generated@@353 $generated@@142 $generated@@403)))) (= ($generated@@85 ($generated@@397 $generated@@402) ($generated@@161 ($generated@@353 $generated@@142 $generated@@403))) ($generated@@162 ($generated@@353 $generated@@142 $generated@@403))))))
 :pattern ( ($generated@@85 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@336 (type $generated@@407))))
(let (($generated@@409 ($generated@@335 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@80 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@411) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@85 ($generated@@332 $generated@@410) ($generated@@161 ($generated@@353 $generated@@142 $generated@@411)))) (= ($generated@@85 ($generated@@405 $generated@@410) ($generated@@161 ($generated@@353 $generated@@142 $generated@@411))) ($generated@@162 ($generated@@353 $generated@@142 $generated@@411))))))
 :pattern ( ($generated@@85 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@317 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@316 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@85 ($generated@@314 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@85 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@85 ($generated@@314 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@335 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@334 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@372 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@332 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@372 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@68)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@314 $generated@@425) $generated@@429))) (and ($generated@@270 ($generated@@85 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@270 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@314 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@78 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@68)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@332 $generated@@433) $generated@@437))) (and ($generated@@270 ($generated@@85 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@270 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@78 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@142) ($generated@@146 $generated@@438 $generated@@151)) (or ($generated@@267 $generated@@438) ($generated@@141 $generated@@438)))
 :pattern ( ($generated@@141 $generated@@438) ($generated@@146 $generated@@438 $generated@@151))
 :pattern ( ($generated@@267 $generated@@438) ($generated@@146 $generated@@438 $generated@@151))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@439) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@440) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@439 $generated@@441))) (and ($generated@@136 $generated@@439 $generated@@440) ($generated@@136 $generated@@440 $generated@@441))) ($generated@@136 $generated@@439 $generated@@441))
 :pattern ( ($generated@@136 $generated@@439 $generated@@440) ($generated@@136 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@80 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@336 (type $generated@@444))))
(let (($generated@@446 ($generated@@335 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@334 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@333 $generated@@446 $generated@@445)) (= ($generated@@332 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@332 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@336 (type $generated@@447))))
(let (($generated@@449 ($generated@@335 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@334 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@333 $generated@@449 $generated@@448)) (= ($generated@@372 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@372 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@336 (type $generated@@450))))
(let (($generated@@452 ($generated@@335 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@334 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@333 $generated@@452 $generated@@451)) (= ($generated@@404 $generated@@450) ($generated@@442 $generated@@163))))))
 :pattern ( ($generated@@404 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@318 (type $generated@@453))))
(let (($generated@@455 ($generated@@317 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@316 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@315 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@163) (= (type $generated@@457) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@396 $generated@@453) ($generated@@295 ($generated@@236 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@396 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@336 (type $generated@@458))))
(let (($generated@@460 ($generated@@335 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@334 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@333 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@163) (= (type $generated@@462) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@404 $generated@@458) ($generated@@295 ($generated@@236 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@404 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@237 $generated@@463 $generated@@46)) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@463)) $generated@@463) ($generated@@146 ($generated@@353 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@163) ($generated@@237 $generated@@464 $generated@@47)) (and (= ($generated@@295 ($generated@@353 $generated@@3 $generated@@464)) $generated@@464) ($generated@@146 ($generated@@353 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@163) ($generated@@237 $generated@@465 $generated@@44)) (and (= ($generated@@295 ($generated@@353 $generated@@4 $generated@@465)) $generated@@465) ($generated@@146 ($generated@@353 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@163) ($generated@@237 $generated@@467 $generated@@45)) (and (= ($generated@@295 ($generated@@353 $generated@@466 $generated@@467)) $generated@@467) ($generated@@146 ($generated@@353 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@68) (= ($generated@@237 ($generated@@295 $generated@@468) $generated@@469) ($generated@@146 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@237 ($generated@@295 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@83 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@80 $generated@@471 $generated@@2)) (<= 0 ($generated@@308 $generated@@470))))
 :pattern ( ($generated@@308 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@285 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@284 $generated@@473)) (<= 0 ($generated@@283 $generated@@472))))
 :pattern ( ($generated@@283 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@422 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@422 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@422 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@422 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@76 ($generated@@422 $generated@@482 $generated@@483)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@430 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@430 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@430 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@68) (= (type $generated@@493) $generated@@68)) (= ($generated@@76 ($generated@@430 $generated@@492 $generated@@493)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) (= (type $generated@@495) $generated@@163)) (= ($generated@@168 ($generated@@236 $generated@@494 $generated@@495)) $generated@@61))
 :pattern ( ($generated@@236 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@154 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@154 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@68) (= (type $generated@@503) $generated@@68)) (= ($generated@@500 ($generated@@154 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@154 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@163) (= (type $generated@@505) $generated@@163)) (= ($generated@@161 ($generated@@236 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@236 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@163) (= (type $generated@@507) $generated@@163)) (= ($generated@@162 ($generated@@236 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@236 $generated@@506 $generated@@507))
)))
(assert  (and (forall (($generated@@510 T@U) ) (! (= (type ($generated@@508 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@510))
)) (forall (($generated@@511 T@U) ($generated@@512 Int) ) (! (let (($generated@@513 ($generated@@285 (type $generated@@511))))
(= (type ($generated@@509 $generated@@511 $generated@@512)) $generated@@513))
 :pattern ( ($generated@@509 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@284 $generated@@163)) (= (type $generated@@515) $generated@@68)) (= (type $generated@@516) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@514 ($generated@@508 $generated@@515) $generated@@516) (forall (($generated@@517 Int) ) (!  (=> (and (<= 0 $generated@@517) (< $generated@@517 ($generated@@283 $generated@@514))) ($generated@@270 ($generated@@509 $generated@@514 $generated@@517) $generated@@515 $generated@@516))
 :pattern ( ($generated@@509 $generated@@514 $generated@@517))
))))
 :pattern ( ($generated@@78 $generated@@514 ($generated@@508 $generated@@515) $generated@@516))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@518 ($generated@@79 $generated@@519)) $generated@@519)
 :pattern ( ($generated@@79 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@254 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@254 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@254 $generated@@523)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@259 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@259 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@259 $generated@@527)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@171 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@171 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@531)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@532 ($generated@@508 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@508 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@76 ($generated@@508 $generated@@535)) $generated@@57))
 :pattern ( ($generated@@508 $generated@@535))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@168 ($generated@@291 $generated@@536)) $generated@@65)
 :pattern ( ($generated@@291 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@143 ($generated@@291 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@291 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@353 $generated@@539 ($generated@@295 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@295 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) (= ($generated@@146 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@314 $generated@@540) $generated@@543))) (and ($generated@@237 ($generated@@85 ($generated@@397 $generated@@540) $generated@@543) $generated@@542) ($generated@@237 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@540) $generated@@543))
 :pattern ( ($generated@@85 ($generated@@314 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@146 $generated@@540 ($generated@@422 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@68)) (= ($generated@@146 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@332 $generated@@544) $generated@@547))) (and ($generated@@237 ($generated@@85 ($generated@@405 $generated@@544) $generated@@547) $generated@@546) ($generated@@237 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@85 ($generated@@405 $generated@@544) $generated@@547))
 :pattern ( ($generated@@85 ($generated@@332 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@146 $generated@@544 ($generated@@430 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@163) (= (type $generated@@551) $generated@@163)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@236 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@236 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@163) (= (type $generated@@553) $generated@@163)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@236 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@236 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 Int) ) (! (= ($generated@@146 ($generated@@291 $generated@@554) $generated@@151) ($generated@@146 ($generated@@8 $generated@@554) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@291 $generated@@554) $generated@@151))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@68)) ($generated@@237 $generated@@555 ($generated@@422 $generated@@556 $generated@@557))) (and (= ($generated@@295 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@555)) $generated@@555) ($generated@@146 ($generated@@353 ($generated@@316 $generated@@163 $generated@@163) $generated@@555) ($generated@@422 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@237 $generated@@555 ($generated@@422 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@237 $generated@@558 ($generated@@430 $generated@@559 $generated@@560))) (and (= ($generated@@295 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@558)) $generated@@558) ($generated@@146 ($generated@@353 ($generated@@334 $generated@@163 $generated@@163) $generated@@558) ($generated@@430 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@237 $generated@@558 ($generated@@430 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@68) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@163)) ($generated@@237 $generated@@563 ($generated@@154 $generated@@561 $generated@@562))) (and (= ($generated@@295 ($generated@@353 $generated@@142 $generated@@563)) $generated@@563) ($generated@@146 ($generated@@353 $generated@@142 $generated@@563) ($generated@@154 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@237 $generated@@563 ($generated@@154 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (not ($generated@@0 ($generated@@85 ($generated@@442 $generated@@565) $generated@@564))))
 :pattern ( (let (($generated@@565 (type $generated@@564)))
($generated@@85 ($generated@@442 $generated@@565) $generated@@564)))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@73)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@68) (= (type $generated@@569) $generated@@68)) (and (= ($generated@@76 ($generated@@154 $generated@@568 $generated@@569)) $generated@@62) (= ($generated@@566 ($generated@@154 $generated@@568 $generated@@569)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@571) (and ($generated@@141 $generated@@570) ($generated@@78 $generated@@570 $generated@@151 $generated@@571)))) ($generated@@78 ($generated@@8 ($generated@@143 $generated@@570)) $generated@@46 $generated@@571))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@143 $generated@@570)) $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@142) (= ($generated@@548 ($generated@@295 $generated@@572)) ($generated@@549 $generated@@572)))
 :pattern ( ($generated@@548 ($generated@@295 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) ($generated@@237 $generated@@573 ($generated@@79 0))) (and (= ($generated@@295 ($generated@@353 $generated@@2 $generated@@573)) $generated@@573) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@573) ($generated@@79 0))))
 :pattern ( ($generated@@237 $generated@@573 ($generated@@79 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@163) (= (type $generated@@575) $generated@@68)) ($generated@@237 $generated@@574 ($generated@@254 $generated@@575))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@574)) $generated@@574) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@574) ($generated@@254 $generated@@575))))
 :pattern ( ($generated@@237 $generated@@574 ($generated@@254 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@163) (= (type $generated@@577) $generated@@68)) ($generated@@237 $generated@@576 ($generated@@259 $generated@@577))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@576)) $generated@@576) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@4) $generated@@576) ($generated@@259 $generated@@577))))
 :pattern ( ($generated@@237 $generated@@576 ($generated@@259 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@163) (= (type $generated@@579) $generated@@68)) ($generated@@237 $generated@@578 ($generated@@171 $generated@@579))) (and (= ($generated@@295 ($generated@@353 ($generated@@80 $generated@@163 $generated@@2) $generated@@578)) $generated@@578) ($generated@@146 ($generated@@353 ($generated@@80 $generated@@163 $generated@@2) $generated@@578) ($generated@@171 $generated@@579))))
 :pattern ( ($generated@@237 $generated@@578 ($generated@@171 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@68)) ($generated@@237 $generated@@580 ($generated@@508 $generated@@581))) (and (= ($generated@@295 ($generated@@353 ($generated@@284 $generated@@163) $generated@@580)) $generated@@580) ($generated@@146 ($generated@@353 ($generated@@284 $generated@@163) $generated@@580) ($generated@@508 $generated@@581))))
 :pattern ( ($generated@@237 $generated@@580 ($generated@@508 $generated@@581)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@142) (or ($generated@@150 $generated@@582) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@582 $generated@@151)))) (= ($generated@@149 $generated@@582) ($generated@@141 $generated@@582)))
 :pattern ( ($generated@@149 $generated@@582))
))))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@142) (or ($generated@@245 $generated@@583) (and (not (= 1 $generated@@148)) (and ($generated@@146 $generated@@583 $generated@@151) ($generated@@141 $generated@@583))))) (= ($generated@@244 $generated@@583) $generated@@583))
 :pattern ( ($generated@@244 $generated@@583))
))))
(assert (= ($generated@@76 $generated@@151) $generated@@64))
(assert (= ($generated@@566 $generated@@151) $generated@@67))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@584 ($generated@@171 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@584 $generated@@587)))) ($generated@@270 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@85 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@171 $generated@@585) $generated@@586))
)))
(assert (= $generated@@169 ($generated@@232 $generated@@169)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@142) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@590) (and ($generated@@153 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@154 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@154 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@270 ($generated@@161 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@270 ($generated@@161 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@142) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@248 $generated@@594) (and ($generated@@153 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@78 $generated@@592 ($generated@@154 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@154 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@270 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@270 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@163) (= (type $generated@@597) $generated@@163)) (= ($generated@@236 ($generated@@232 $generated@@596) ($generated@@232 $generated@@597)) ($generated@@232 ($generated@@236 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@236 ($generated@@232 $generated@@596) ($generated@@232 $generated@@597)))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@264 $generated@@598))) ($generated@@232 ($generated@@295 ($generated@@8 $generated@@598))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@264 $generated@@598))))
)))
(assert (forall (($generated@@599 Int) ) (! (= ($generated@@291 ($generated@@264 $generated@@599)) ($generated@@232 ($generated@@291 $generated@@599)))
 :pattern ( ($generated@@291 ($generated@@264 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@295 ($generated@@232 $generated@@600)) ($generated@@232 ($generated@@295 $generated@@600)))
 :pattern ( ($generated@@295 ($generated@@232 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@285 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@284 $generated@@602)) (= ($generated@@283 $generated@@601) 0)) (= $generated@@601 ($generated@@282 $generated@@602))))
 :pattern ( ($generated@@283 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@80 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@308 ($generated@@86 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@308 $generated@@603) ($generated ($generated@@85 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@308 ($generated@@86 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@142) (or ($generated@@245 $generated@@607) (and (not (= 1 $generated@@148)) (and ($generated@@146 $generated@@607 $generated@@151) ($generated@@141 $generated@@607))))) ($generated@@146 ($generated@@244 $generated@@607) $generated@@151))
 :pattern ( ($generated@@244 $generated@@607))
))))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@2)) ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@3)) ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@4)) ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@615) $generated@@466)) ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@163)) ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@284 $generated@@163)) (= (type $generated@@619) $generated@@68)) (= ($generated@@146 $generated@@618 ($generated@@508 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@283 $generated@@618))) ($generated@@237 ($generated@@509 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@509 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@146 $generated@@618 ($generated@@508 $generated@@619)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 Int) ) (!  (=> (= (type $generated@@622) ($generated@@284 $generated@@163)) (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@283 $generated@@622))) (< ($generated@@549 ($generated@@353 $generated@@142 ($generated@@509 $generated@@622 $generated@@623))) ($generated@@621 $generated@@622))))
 :pattern ( ($generated@@549 ($generated@@353 $generated@@142 ($generated@@509 $generated@@622 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@316 $generated@@163 $generated@@163)) (= (type $generated@@625) $generated@@68)) (= (type $generated@@626) $generated@@68)) ($generated@@146 $generated@@624 ($generated@@422 $generated@@625 $generated@@626))) (and (and ($generated@@146 ($generated@@314 $generated@@624) ($generated@@254 $generated@@625)) ($generated@@146 ($generated@@361 $generated@@624) ($generated@@254 $generated@@626))) ($generated@@146 ($generated@@396 $generated@@624) ($generated@@254 ($generated@@154 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@146 $generated@@624 ($generated@@422 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@334 $generated@@163 $generated@@163)) (= (type $generated@@628) $generated@@68)) (= (type $generated@@629) $generated@@68)) ($generated@@146 $generated@@627 ($generated@@430 $generated@@628 $generated@@629))) (and (and ($generated@@146 ($generated@@332 $generated@@627) ($generated@@259 $generated@@628)) ($generated@@146 ($generated@@372 $generated@@627) ($generated@@259 $generated@@629))) ($generated@@146 ($generated@@404 $generated@@627) ($generated@@259 ($generated@@154 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@146 $generated@@627 ($generated@@430 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@2) ($generated@@146 $generated@@630 $generated@@46))
 :pattern ( ($generated@@146 $generated@@630 $generated@@46))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@3) ($generated@@146 $generated@@631 $generated@@47))
 :pattern ( ($generated@@146 $generated@@631 $generated@@47))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@4) ($generated@@146 $generated@@632 $generated@@44))
 :pattern ( ($generated@@146 $generated@@632 $generated@@44))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@466) ($generated@@146 $generated@@633 $generated@@45))
 :pattern ( ($generated@@146 $generated@@633 $generated@@45))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@163) ($generated@@146 $generated@@634 $generated@@48))
 :pattern ( ($generated@@146 $generated@@634 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@635) $generated@@142) (= (type $generated@@636) $generated@@142)) (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@639) $generated@@142)) (= (type $generated@@637) $generated@@142)) (= (type $generated@@640) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@641) $generated@@81)) (= (type $generated@@642) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@643) $generated@@142)) (= (type $generated@@644) $generated@@142)) (= (type $generated@@645) $generated@@142)) (= (type $generated@@647) $generated@@142)) (= (type $generated@@648) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@649  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@140 $generated@@635 ($generated@@291 ($generated@@264 5))))))
(let (($generated@@650  (=> (not ($generated@@149 $generated@@636)) (=> (and (= $generated@@635 $generated@@637) (= (ControlFlow 0 5) 2)) $generated@@649))))
(let (($generated@@651  (=> (and ($generated@@149 $generated@@636) ($generated@@78 $generated@@636 $generated@@151 $generated@@638)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@141 $generated@@636)) (=> (and ($generated@@141 $generated@@636) ($generated@@245 $generated@@636)) (=> (and (and ($generated@@245 $generated@@636) (= $generated@@639 ($generated@@244 $generated@@636))) (and (= $generated@@635 $generated@@639) (= (ControlFlow 0 3) 2))) $generated@@649))))))
(let (($generated@@652  (=> (= $generated@@640 ($generated@@177 $generated@@641 $generated@@642 $generated@@60 false)) (=> (and (and (and ($generated@@146 $generated@@643 $generated@@151) ($generated@@78 $generated@@643 $generated@@151 $generated@@642)) (and ($generated@@146 $generated@@644 $generated@@151) ($generated@@78 $generated@@644 $generated@@151 $generated@@642))) (and (and ($generated@@146 $generated@@645 $generated@@151) ($generated@@78 $generated@@645 $generated@@151 $generated@@642)) (and ($generated@@248 $generated@@638) ($generated@@646 $generated@@638)))) (=> (and (and (and (and ($generated@@146 $generated@@636 $generated@@151) ($generated@@78 $generated@@636 $generated@@151 $generated@@638)) ($generated@@384 $generated@@636)) (and ($generated@@140 $generated@@636 ($generated@@291 ($generated@@264 5))) (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@81) (=> (and (not (= $generated@@653 $generated@@641)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@642 $generated@@653) $generated@@60))) (= ($generated@@85 $generated@@638 $generated@@653) ($generated@@85 $generated@@642 $generated@@653))))
 :pattern ( ($generated@@85 $generated@@638 $generated@@653))
)))) (and (and ($generated@@136 $generated@@642 $generated@@638) ($generated@@78 $generated@@636 $generated@@151 $generated@@638)) (and ($generated@@150 $generated@@636) ($generated@@150 $generated@@636)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@651) (=> (= (ControlFlow 0 6) 5) $generated@@650)))))))
(let (($generated@@654  (=> (and (and (and (and ($generated@@248 $generated@@642) ($generated@@646 $generated@@642)) (and ($generated@@146 $generated@@637 $generated@@151) ($generated@@78 $generated@@637 $generated@@151 $generated@@642))) (and (and ($generated@@146 $generated@@647 $generated@@151) ($generated@@78 $generated@@647 $generated@@151 $generated@@642)) true)) (and (and (and ($generated@@146 $generated@@648 $generated@@151) ($generated@@78 $generated@@648 $generated@@151 $generated@@642)) true) (and (= 2 $generated@@148) (= (ControlFlow 0 7) 6)))) $generated@@652)))
$generated@@654))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@260 (Int) Int)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@287 (Int) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@349 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@380 (T@U) Bool)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (= ($generated@@1 $generated@@142) 14))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@142)) (and ($generated@@141 $generated@@144) ($generated@@141 $generated@@145))) (= ($generated@@140 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@144))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@79 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@79 0)))
)))
(assert (= (type $generated@@151) $generated@@68))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@142) (or ($generated@@150 $generated@@152) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@152 $generated@@151)))) true)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@142)) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@146 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@142) (= (type $generated@@167) $generated@@142)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@142)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@146 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@146 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@81) (= (type $generated@@226) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@81)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ) (! (let (($generated@@234 (type $generated@@233)))
(= (type ($generated@@232 $generated@@233)) $generated@@234))
 :pattern ( ($generated@@232 $generated@@233))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@142) (or ($generated@@150 ($generated@@232 $generated@@235)) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@235 $generated@@151)))) (= ($generated@@149 ($generated@@232 $generated@@235)) ($generated@@0 ($generated@@232 ($generated@@11 ($generated@@141 ($generated@@232 $generated@@235)))))))
 :weight 3
 :pattern ( ($generated@@149 ($generated@@232 $generated@@235)))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@142)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@68) (= (type $generated@@241) $generated@@68)) (= (type $generated@@242) $generated@@163)) (= (type $generated@@243) $generated@@163)) (= ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@146 ($generated@@236 $generated@@242 $generated@@243) ($generated@@154 $generated@@240 $generated@@241)))
)))
(assert ($generated@@146 $generated@@169 $generated@@151))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@245)) ($generated@@78 $generated@@169 $generated@@151 $generated@@245))
 :pattern ( ($generated@@78 $generated@@169 $generated@@151 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@142) (= (type $generated@@247) $generated@@142)) (= ($generated@@160 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@160 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@142) (= (type $generated@@249) $generated@@142)) (= ($generated@@140 $generated@@248 $generated@@249) (= $generated@@248 $generated@@249)))
 :pattern ( ($generated@@140 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= (type ($generated@@250 $generated@@251)) $generated@@68)
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@253) $generated@@68)) (= ($generated@@146 $generated@@252 ($generated@@250 $generated@@253)) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@163) ($generated@@0 ($generated@@85 $generated@@252 $generated@@254))) ($generated@@237 $generated@@254 $generated@@253))
 :pattern ( ($generated@@85 $generated@@252 $generated@@254))
))))
 :pattern ( ($generated@@146 $generated@@252 ($generated@@250 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@255 $generated@@256)) $generated@@68)
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@258) $generated@@68)) (= ($generated@@146 $generated@@257 ($generated@@255 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@163) ($generated@@0 ($generated@@85 $generated@@257 $generated@@259))) ($generated@@237 $generated@@259 $generated@@258))
 :pattern ( ($generated@@85 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@146 $generated@@257 ($generated@@255 $generated@@258)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@260 $generated@@261) $generated@@261)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@232 $generated@@262) $generated@@262)
 :pattern ( ($generated@@232 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@142) (= (type $generated@@265) $generated@@142)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@140 $generated@@264 $generated@@265) true))
 :pattern ( ($generated@@140 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@140 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@68) (= (type $generated@@268) $generated@@68)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= (type $generated@@271) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@244 $generated@@271)) (= ($generated@@78 ($generated@@236 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@78 ($generated@@236 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@142) (= ($generated@@153 $generated@@272) (= ($generated@@168 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@142) (= ($generated@@263 $generated@@273) (= ($generated@@168 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@263 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@141 $generated@@274) (= ($generated@@168 $generated@@274) $generated@@65)))
 :pattern ( ($generated@@141 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@142) ($generated@@153 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@163) (= (type $generated@@277) $generated@@163)) (= $generated@@275 ($generated@@236 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@153 $generated@@275))
)))
(assert  (and (and (forall (($generated@@282 T@T) ) (= ($generated@@1 ($generated@@280 $generated@@282)) 17)) (forall (($generated@@283 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@283)) $generated@@283)
 :pattern ( ($generated@@280 $generated@@283))
))) (forall (($generated@@284 T@T) ) (! (= (type ($generated@@278 $generated@@284)) ($generated@@280 $generated@@284))
 :pattern ( ($generated@@278 $generated@@284))
))))
(assert (forall (($generated@@285 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@285)) 0)
 :pattern ( ($generated@@278 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@142) ($generated@@263 $generated@@286)) (= $generated@@286 $generated@@169))
 :pattern ( ($generated@@263 $generated@@286))
)))
(assert (forall (($generated@@288 Int) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@142)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@142) ($generated@@141 $generated@@289)) (exists (($generated@@290 Int) ) (= $generated@@289 ($generated@@287 $generated@@290))))
 :pattern ( ($generated@@141 $generated@@289))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@163)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@78 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@266 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@298) $generated@@163)) (= (type $generated@@299) $generated@@68)) ($generated@@136 $generated@@296 $generated@@297)) ($generated@@266 $generated@@298 $generated@@299 $generated@@296)) ($generated@@266 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@136 $generated@@296 $generated@@297) ($generated@@266 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@303) $generated@@68)) ($generated@@136 $generated@@300 $generated@@301)) ($generated@@78 $generated@@302 $generated@@303 $generated@@300)) ($generated@@78 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@136 $generated@@300 $generated@@301) ($generated@@78 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@80 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@83 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@80 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@85 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@172 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@304 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@172 $generated@@346))
)))
(assert (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@349 $generated@@350 $generated@@351))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@163) ($generated@@237 $generated@@352 $generated@@151)) (and (= ($generated@@291 ($generated@@349 $generated@@142 $generated@@352)) $generated@@352) ($generated@@146 ($generated@@349 $generated@@142 $generated@@352) $generated@@151)))
 :pattern ( ($generated@@237 $generated@@352 $generated@@151))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(let (($generated@@355 ($generated@@313 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@312 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@311 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@310 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@80 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@314 (type $generated@@360))))
(let (($generated@@362 ($generated@@313 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@312 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@311 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@85 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@332 (type $generated@@364))))
(let (($generated@@366 ($generated@@331 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@330 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@329 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@328 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@80 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@332 (type $generated@@371))))
(let (($generated@@373 ($generated@@331 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@330 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@329 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@85 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@376) $generated@@68)) (= ($generated@@146 $generated@@375 ($generated@@171 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@375 $generated@@377)))) ($generated@@237 $generated@@377 $generated@@376))
 :pattern ( ($generated@@85 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@146 $generated@@375 ($generated@@171 $generated@@376)))
)))
(assert (forall (($generated@@378 Int) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@244 $generated@@379)) (= ($generated@@78 ($generated@@287 $generated@@378) $generated@@151 $generated@@379) ($generated@@78 ($generated@@8 $generated@@378) $generated@@46 $generated@@379)))
 :pattern ( ($generated@@78 ($generated@@287 $generated@@378) $generated@@151 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@142) ($generated@@380 $generated@@381)) (or ($generated@@263 $generated@@381) ($generated@@141 $generated@@381)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@383) $generated@@68)) (= (type $generated@@384) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@382 ($generated@@250 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@163) ($generated@@0 ($generated@@85 $generated@@382 $generated@@385))) ($generated@@266 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@85 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@250 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@80 $generated@@163 $generated@@4)) (= (type $generated@@387) $generated@@68)) (= (type $generated@@388) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@386 ($generated@@255 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@163) ($generated@@0 ($generated@@85 $generated@@386 $generated@@389))) ($generated@@266 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@85 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@78 $generated@@386 ($generated@@255 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@85 ($generated@@305 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@85 ($generated@@305 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@314 (type $generated@@395))))
(let (($generated@@397 ($generated@@313 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@80 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@399) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@398) ($generated@@161 ($generated@@349 $generated@@142 $generated@@399)))) (= ($generated@@85 ($generated@@393 $generated@@398) ($generated@@161 ($generated@@349 $generated@@142 $generated@@399))) ($generated@@162 ($generated@@349 $generated@@142 $generated@@399))))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@80 $generated@@163 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@332 (type $generated@@403))))
(let (($generated@@405 ($generated@@331 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@407) $generated@@163)) (= ($generated@@0 ($generated@@85 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@406) ($generated@@161 ($generated@@349 $generated@@142 $generated@@407)))) (= ($generated@@85 ($generated@@401 $generated@@406) ($generated@@161 ($generated@@349 $generated@@142 $generated@@407))) ($generated@@162 ($generated@@349 $generated@@142 $generated@@407))))))
 :pattern ( ($generated@@85 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@313 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@312 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@85 ($generated@@357 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@85 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@408) $generated@@412))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@85 ($generated@@357 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@331 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@330 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@85 ($generated@@368 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@85 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@413) $generated@@417))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@85 ($generated@@368 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@68)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@422) $generated@@68)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@421) $generated@@425))) (and ($generated@@266 ($generated@@85 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@266 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@68)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@430) $generated@@68)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@429) $generated@@433))) (and ($generated@@266 ($generated@@85 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@266 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@78 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@142) ($generated@@146 $generated@@434 $generated@@151)) (or ($generated@@263 $generated@@434) ($generated@@141 $generated@@434)))
 :pattern ( ($generated@@141 $generated@@434) ($generated@@146 $generated@@434 $generated@@151))
 :pattern ( ($generated@@263 $generated@@434) ($generated@@146 $generated@@434 $generated@@151))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@435) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@436) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@435 $generated@@437))) (and ($generated@@136 $generated@@435 $generated@@436) ($generated@@136 $generated@@436 $generated@@437))) ($generated@@136 $generated@@435 $generated@@437))
 :pattern ( ($generated@@136 $generated@@435 $generated@@436) ($generated@@136 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@80 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@332 (type $generated@@440))))
(let (($generated@@442 ($generated@@331 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@330 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@329 $generated@@442 $generated@@441)) (= ($generated@@328 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@328 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@332 (type $generated@@443))))
(let (($generated@@445 ($generated@@331 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@330 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@329 $generated@@445 $generated@@444)) (= ($generated@@368 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@368 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@332 (type $generated@@446))))
(let (($generated@@448 ($generated@@331 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@330 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@329 $generated@@448 $generated@@447)) (= ($generated@@400 $generated@@446) ($generated@@438 $generated@@163))))))
 :pattern ( ($generated@@400 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@314 (type $generated@@449))))
(let (($generated@@451 ($generated@@313 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@312 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@311 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@163) (= (type $generated@@453) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@449) ($generated@@291 ($generated@@236 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@392 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@332 (type $generated@@454))))
(let (($generated@@456 ($generated@@331 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@330 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@329 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@163) (= (type $generated@@458) $generated@@163)) ($generated@@0 ($generated@@85 ($generated@@400 $generated@@454) ($generated@@291 ($generated@@236 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@400 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@163) ($generated@@237 $generated@@459 $generated@@46)) (and (= ($generated@@291 ($generated@@349 $generated@@2 $generated@@459)) $generated@@459) ($generated@@146 ($generated@@349 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@163) ($generated@@237 $generated@@460 $generated@@47)) (and (= ($generated@@291 ($generated@@349 $generated@@3 $generated@@460)) $generated@@460) ($generated@@146 ($generated@@349 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@163) ($generated@@237 $generated@@461 $generated@@44)) (and (= ($generated@@291 ($generated@@349 $generated@@4 $generated@@461)) $generated@@461) ($generated@@146 ($generated@@349 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@163) ($generated@@237 $generated@@463 $generated@@45)) (and (= ($generated@@291 ($generated@@349 $generated@@462 $generated@@463)) $generated@@463) ($generated@@146 ($generated@@349 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@68) (= ($generated@@237 ($generated@@291 $generated@@464) $generated@@465) ($generated@@146 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@237 ($generated@@291 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@83 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@80 $generated@@467 $generated@@2)) (<= 0 ($generated@@304 $generated@@466))))
 :pattern ( ($generated@@304 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@281 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@280 $generated@@469)) (<= 0 ($generated@@279 $generated@@468))))
 :pattern ( ($generated@@279 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@418 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@418 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@418 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@76 ($generated@@418 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@426 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@426 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@426 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@426 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@76 ($generated@@426 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@163) (= (type $generated@@491) $generated@@163)) (= ($generated@@168 ($generated@@236 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@236 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@154 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@154 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@154 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@154 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@163) (= (type $generated@@501) $generated@@163)) (= ($generated@@161 ($generated@@236 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@236 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@163) (= (type $generated@@503) $generated@@163)) (= ($generated@@162 ($generated@@236 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@236 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@281 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@280 $generated@@163)) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@279 $generated@@510))) ($generated@@266 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@78 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@79 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@79 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@516 ($generated@@250 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@250 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@76 ($generated@@250 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@250 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@255 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@255 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@255 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@255 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@171 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@171 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@171 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@76 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@168 ($generated@@287 $generated@@532)) $generated@@65)
 :pattern ( ($generated@@287 $generated@@532))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@143 ($generated@@287 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@287 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@349 $generated@@535 ($generated@@291 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@291 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@68)) (= ($generated@@146 $generated@@536 ($generated@@418 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@536) $generated@@539))) (and ($generated@@237 ($generated@@85 ($generated@@393 $generated@@536) $generated@@539) $generated@@538) ($generated@@237 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@536) $generated@@539))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@146 $generated@@536 ($generated@@418 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@541) $generated@@68)) (= (type $generated@@542) $generated@@68)) (= ($generated@@146 $generated@@540 ($generated@@426 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@540) $generated@@543))) (and ($generated@@237 ($generated@@85 ($generated@@401 $generated@@540) $generated@@543) $generated@@542) ($generated@@237 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@540) $generated@@543))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@146 $generated@@540 ($generated@@426 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@163) (= (type $generated@@547) $generated@@163)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@236 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@236 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@163) (= (type $generated@@549) $generated@@163)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@236 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@236 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@146 ($generated@@287 $generated@@550) $generated@@151) ($generated@@146 ($generated@@8 $generated@@550) $generated@@46))
 :pattern ( ($generated@@146 ($generated@@287 $generated@@550) $generated@@151))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@163) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@237 $generated@@551 ($generated@@418 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@349 ($generated@@312 $generated@@163 $generated@@163) $generated@@551) ($generated@@418 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@237 $generated@@551 ($generated@@418 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@163) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) ($generated@@237 $generated@@554 ($generated@@426 $generated@@555 $generated@@556))) (and (= ($generated@@291 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@554)) $generated@@554) ($generated@@146 ($generated@@349 ($generated@@330 $generated@@163 $generated@@163) $generated@@554) ($generated@@426 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@237 $generated@@554 ($generated@@426 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@163)) ($generated@@237 $generated@@559 ($generated@@154 $generated@@557 $generated@@558))) (and (= ($generated@@291 ($generated@@349 $generated@@142 $generated@@559)) $generated@@559) ($generated@@146 ($generated@@349 $generated@@142 $generated@@559) ($generated@@154 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@237 $generated@@559 ($generated@@154 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@85 ($generated@@438 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@85 ($generated@@438 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@73)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (and (= ($generated@@76 ($generated@@154 $generated@@564 $generated@@565)) $generated@@62) (= ($generated@@562 ($generated@@154 $generated@@564 $generated@@565)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@142) (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@567) (and ($generated@@141 $generated@@566) ($generated@@78 $generated@@566 $generated@@151 $generated@@567)))) ($generated@@78 ($generated@@8 ($generated@@143 $generated@@566)) $generated@@46 $generated@@567))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@143 $generated@@566)) $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@142) (= ($generated@@544 ($generated@@291 $generated@@568)) ($generated@@545 $generated@@568)))
 :pattern ( ($generated@@544 ($generated@@291 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@163) ($generated@@237 $generated@@569 ($generated@@79 0))) (and (= ($generated@@291 ($generated@@349 $generated@@2 $generated@@569)) $generated@@569) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@569) ($generated@@79 0))))
 :pattern ( ($generated@@237 $generated@@569 ($generated@@79 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@163) (= (type $generated@@571) $generated@@68)) ($generated@@237 $generated@@570 ($generated@@250 $generated@@571))) (and (= ($generated@@291 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@570)) $generated@@570) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@570) ($generated@@250 $generated@@571))))
 :pattern ( ($generated@@237 $generated@@570 ($generated@@250 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@163) (= (type $generated@@573) $generated@@68)) ($generated@@237 $generated@@572 ($generated@@255 $generated@@573))) (and (= ($generated@@291 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@572)) $generated@@572) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@4) $generated@@572) ($generated@@255 $generated@@573))))
 :pattern ( ($generated@@237 $generated@@572 ($generated@@255 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@163) (= (type $generated@@575) $generated@@68)) ($generated@@237 $generated@@574 ($generated@@171 $generated@@575))) (and (= ($generated@@291 ($generated@@349 ($generated@@80 $generated@@163 $generated@@2) $generated@@574)) $generated@@574) ($generated@@146 ($generated@@349 ($generated@@80 $generated@@163 $generated@@2) $generated@@574) ($generated@@171 $generated@@575))))
 :pattern ( ($generated@@237 $generated@@574 ($generated@@171 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@163) (= (type $generated@@577) $generated@@68)) ($generated@@237 $generated@@576 ($generated@@504 $generated@@577))) (and (= ($generated@@291 ($generated@@349 ($generated@@280 $generated@@163) $generated@@576)) $generated@@576) ($generated@@146 ($generated@@349 ($generated@@280 $generated@@163) $generated@@576) ($generated@@504 $generated@@577))))
 :pattern ( ($generated@@237 $generated@@576 ($generated@@504 $generated@@577)))
)))
(assert  (=> (<= 0 $generated@@148) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@142) (or ($generated@@150 $generated@@578) (and (not (= 0 $generated@@148)) ($generated@@146 $generated@@578 $generated@@151)))) (= ($generated@@149 $generated@@578) ($generated@@141 $generated@@578)))
 :pattern ( ($generated@@149 $generated@@578))
))))
(assert (= ($generated@@76 $generated@@151) $generated@@64))
(assert (= ($generated@@562 $generated@@151) $generated@@67))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@80 $generated@@163 $generated@@2)) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@579 ($generated@@171 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@163) (< 0 ($generated ($generated@@85 $generated@@579 $generated@@582)))) ($generated@@266 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@85 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@78 $generated@@579 ($generated@@171 $generated@@580) $generated@@581))
)))
(assert (= $generated@@169 ($generated@@232 $generated@@169)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@142) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@585) (and ($generated@@153 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@68) ($generated@@78 $generated@@583 ($generated@@154 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@78 $generated@@583 ($generated@@154 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@266 ($generated@@161 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@266 ($generated@@161 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@142) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@244 $generated@@589) (and ($generated@@153 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@68) ($generated@@78 $generated@@587 ($generated@@154 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@78 $generated@@587 ($generated@@154 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@266 ($generated@@162 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@266 ($generated@@162 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@163) (= (type $generated@@592) $generated@@163)) (= ($generated@@236 ($generated@@232 $generated@@591) ($generated@@232 $generated@@592)) ($generated@@232 ($generated@@236 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@236 ($generated@@232 $generated@@591) ($generated@@232 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@260 $generated@@593))) ($generated@@232 ($generated@@291 ($generated@@8 $generated@@593))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@260 $generated@@593))))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@287 ($generated@@260 $generated@@594)) ($generated@@232 ($generated@@287 $generated@@594)))
 :pattern ( ($generated@@287 ($generated@@260 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@291 ($generated@@232 $generated@@595)) ($generated@@232 ($generated@@291 $generated@@595)))
 :pattern ( ($generated@@291 ($generated@@232 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@281 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@280 $generated@@597)) (= ($generated@@279 $generated@@596) 0)) (= $generated@@596 ($generated@@278 $generated@@597))))
 :pattern ( ($generated@@279 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@80 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@304 ($generated@@86 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@304 $generated@@598) ($generated ($generated@@85 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@304 ($generated@@86 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@603) $generated@@2)) ($generated@@78 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@78 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@605) $generated@@3)) ($generated@@78 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@78 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@607) $generated@@4)) ($generated@@78 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@78 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@462)) ($generated@@78 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@163)) ($generated@@78 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@280 $generated@@163)) (= (type $generated@@613) $generated@@68)) (= ($generated@@146 $generated@@612 ($generated@@504 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@279 $generated@@612))) ($generated@@237 ($generated@@505 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@505 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@146 $generated@@612 ($generated@@504 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@280 $generated@@163)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@279 $generated@@616))) (< ($generated@@545 ($generated@@349 $generated@@142 ($generated@@505 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@545 ($generated@@349 $generated@@142 ($generated@@505 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@312 $generated@@163 $generated@@163)) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) $generated@@68)) ($generated@@146 $generated@@618 ($generated@@418 $generated@@619 $generated@@620))) (and (and ($generated@@146 ($generated@@310 $generated@@618) ($generated@@250 $generated@@619)) ($generated@@146 ($generated@@357 $generated@@618) ($generated@@250 $generated@@620))) ($generated@@146 ($generated@@392 $generated@@618) ($generated@@250 ($generated@@154 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@146 $generated@@618 ($generated@@418 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@330 $generated@@163 $generated@@163)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) $generated@@68)) ($generated@@146 $generated@@621 ($generated@@426 $generated@@622 $generated@@623))) (and (and ($generated@@146 ($generated@@328 $generated@@621) ($generated@@255 $generated@@622)) ($generated@@146 ($generated@@368 $generated@@621) ($generated@@255 $generated@@623))) ($generated@@146 ($generated@@400 $generated@@621) ($generated@@255 ($generated@@154 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@146 $generated@@621 ($generated@@426 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@146 $generated@@624 $generated@@46))
 :pattern ( ($generated@@146 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@146 $generated@@625 $generated@@47))
 :pattern ( ($generated@@146 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@146 $generated@@626 $generated@@44))
 :pattern ( ($generated@@146 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@462) ($generated@@146 $generated@@627 $generated@@45))
 :pattern ( ($generated@@146 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@163) ($generated@@146 $generated@@628 $generated@@48))
 :pattern ( ($generated@@146 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@629) $generated@@142) (= (type $generated@@630) $generated@@142)) (= (type $generated@@632) $generated@@142)) (= (type $generated@@633) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@636) $generated@@142)) (= (type $generated@@637) $generated@@81)) (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@631) $generated@@142)) (= (type $generated@@639) ($generated@@178 $generated@@81 $generated@@4))) (= (type $generated@@640) $generated@@142)) (= (type $generated@@641) $generated@@142)) (= (type $generated@@642) $generated@@142)) (= (type $generated@@643) $generated@@142)) (= (type $generated@@644) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@645  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@140 $generated@@629 ($generated@@287 ($generated@@260 5))))))
(let (($generated@@646  (=> (not ($generated@@149 $generated@@630)) (=> (and (= $generated@@629 $generated@@631) (= (ControlFlow 0 5) 2)) $generated@@645))))
(let (($generated@@647  (=> ($generated@@149 $generated@@630) (=> (and ($generated@@146 $generated@@632 $generated@@151) ($generated@@78 $generated@@632 $generated@@151 $generated@@633)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@141 $generated@@630)) (=> ($generated@@141 $generated@@630) (=> (and (and ($generated@@244 $generated@@634) ($generated@@635 $generated@@634)) (and ($generated@@146 $generated@@636 $generated@@151) ($generated@@78 $generated@@636 $generated@@151 $generated@@634))) (=> (and (and (and ($generated@@380 $generated@@636) ($generated@@380 $generated@@630)) ($generated@@140 $generated@@636 $generated@@630)) (and (and (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@81) (=> (and (not (= $generated@@648 $generated@@637)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@638 $generated@@648) $generated@@60))) (= ($generated@@85 $generated@@634 $generated@@648) ($generated@@85 $generated@@638 $generated@@648))))
 :pattern ( ($generated@@85 $generated@@634 $generated@@648))
)) ($generated@@136 $generated@@638 $generated@@634)) (and (= $generated@@629 $generated@@636) (= (ControlFlow 0 3) 2)))) $generated@@645))))))))
(let (($generated@@649  (=> (= $generated@@639 ($generated@@177 $generated@@637 $generated@@633 $generated@@60 false)) (=> (and (and (and ($generated@@146 $generated@@640 $generated@@151) ($generated@@78 $generated@@640 $generated@@151 $generated@@633)) (and ($generated@@146 $generated@@641 $generated@@151) ($generated@@78 $generated@@641 $generated@@151 $generated@@633))) (and (and ($generated@@146 $generated@@642 $generated@@151) ($generated@@78 $generated@@642 $generated@@151 $generated@@633)) (and ($generated@@244 $generated@@638) ($generated@@635 $generated@@638)))) (=> (and (and (and (and ($generated@@146 $generated@@630 $generated@@151) ($generated@@78 $generated@@630 $generated@@151 $generated@@638)) ($generated@@380 $generated@@630)) (and ($generated@@140 $generated@@630 ($generated@@287 ($generated@@260 5))) (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@81) (=> (and (not (= $generated@@650 $generated@@637)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@633 $generated@@650) $generated@@60))) (= ($generated@@85 $generated@@638 $generated@@650) ($generated@@85 $generated@@633 $generated@@650))))
 :pattern ( ($generated@@85 $generated@@638 $generated@@650))
)))) (and (and ($generated@@136 $generated@@633 $generated@@638) ($generated@@78 $generated@@630 $generated@@151 $generated@@638)) (and ($generated@@150 $generated@@630) ($generated@@150 $generated@@630)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@647) (=> (= (ControlFlow 0 6) 5) $generated@@646)))))))
(let (($generated@@651  (=> (and (and (and (and ($generated@@244 $generated@@633) ($generated@@635 $generated@@633)) (and ($generated@@146 $generated@@631 $generated@@151) ($generated@@78 $generated@@631 $generated@@151 $generated@@633))) (and (and ($generated@@146 $generated@@643 $generated@@151) ($generated@@78 $generated@@643 $generated@@151 $generated@@633)) true)) (and (and (and ($generated@@146 $generated@@644 $generated@@151) ($generated@@78 $generated@@644 $generated@@151 $generated@@633)) true) (and (= 2 $generated@@148) (= (ControlFlow 0 7) 6)))) $generated@@649)))
$generated@@651))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@161 (T@U) Int)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@172 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@T) T@T)
(declare-fun $generated@@189 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (Int) T@U)
(declare-fun $generated@@277 (T@U T@U) T@U)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@325 (T@U) Int)
(declare-fun $generated@@326 (T@T) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@335 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@T T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@411 (T@U) Bool)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@T T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@454 (T@U T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@T) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(declare-fun $generated@@596 (T@U) Int)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (= ($generated@@1 $generated@@78) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85)) $generated@@78)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ) (! (= (type ($generated@@81 $generated@@86)) $generated@@68)
 :pattern ( ($generated@@81 $generated@@86))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and (= (type $generated@@87) $generated@@68) (= (type $generated@@88) $generated@@68)) (= (type $generated@@89) $generated@@78)) (or ($generated@@79 $generated@@87 $generated@@88 $generated@@89) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@89 ($generated@@81 $generated@@87)) ($generated@@82 $generated@@89))))) ($generated@@80 ($generated@@77 $generated@@87 $generated@@88 $generated@@89) ($generated@@81 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ) (! (= (type ($generated@@90 $generated@@91)) $generated@@69)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (= ($generated@@90 $generated@@44) $generated@@49))
(assert (= ($generated@@90 $generated@@45) $generated@@50))
(assert (= ($generated@@90 $generated@@46) $generated@@51))
(assert (= ($generated@@90 $generated@@47) $generated@@52))
(assert (= ($generated@@90 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@1 ($generated@@94 $generated@@103 $generated@@104)) 12)) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@94 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@98 (type $generated@@109))))
(= (type ($generated@@99 $generated@@109 $generated@@110)) $generated@@111))
 :pattern ( ($generated@@99 $generated@@109 $generated@@110))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 (type $generated@@114)))
(let (($generated@@116 (type $generated@@113)))
(= (type ($generated@@100 $generated@@112 $generated@@113 $generated@@114)) ($generated@@94 $generated@@116 $generated@@115))))
 :pattern ( ($generated@@100 $generated@@112 $generated@@113 $generated@@114))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@98 (type $generated@@117))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@99 ($generated@@100 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@99 ($generated@@100 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@99 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@99 ($generated@@100 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@99 $generated@@126 $generated@@128)))
 :weight 0
)))) (= ($generated@@1 $generated@@95) 13)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@71 (type $generated@@130))))
(= (type ($generated@@101 $generated@@129 $generated@@130)) $generated@@131))
 :pattern ( ($generated@@101 $generated@@129 $generated@@130))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= (type ($generated@@102 $generated@@132 $generated@@133 $generated@@134)) $generated@@96)
 :pattern ( ($generated@@102 $generated@@132 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@71 (type $generated@@136))))
 (=> (= (type $generated@@137) $generated@@138) (= ($generated@@101 ($generated@@102 $generated@@135 $generated@@136 $generated@@137) $generated@@136) $generated@@137)))
 :weight 0
))) (and (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@101 ($generated@@102 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@101 $generated@@140 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@101 $generated@@144 $generated@@146)))
 :weight 0
)))) (forall (($generated@@147 Int) ) (! (= (type ($generated@@93 $generated@@147)) $generated@@68)
 :pattern ( ($generated@@93 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@2) (= (type $generated@@149) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
 :pattern ( ($generated@@92 $generated@@148 ($generated@@93 0) $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@152) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@150 $generated@@151 $generated@@152)) (forall (($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@95) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@151 $generated@@153) $generated@@60))) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60)))
 :pattern ( ($generated@@101 ($generated@@99 $generated@@152 $generated@@153) $generated@@60))
)))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@78) (= (type $generated@@160) $generated@@78)) (and ($generated@@155 $generated@@159) ($generated@@155 $generated@@160))) (= ($generated@@154 $generated@@159 $generated@@160) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@159))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160) ($generated@@155 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) $generated@@78) (= (type $generated@@163) $generated@@78)) (and ($generated@@82 $generated@@162) ($generated@@82 $generated@@163))) (= ($generated@@154 $generated@@162 $generated@@163) (= ($generated@@161 $generated@@162) ($generated@@161 $generated@@163))))
 :pattern ( ($generated@@154 $generated@@162 $generated@@163) ($generated@@82 $generated@@162))
 :pattern ( ($generated@@154 $generated@@162 $generated@@163) ($generated@@82 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= (type $generated@@164) $generated@@2) ($generated@@80 $generated@@164 ($generated@@93 0)))
 :pattern ( ($generated@@80 $generated@@164 ($generated@@93 0)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@167 $generated@@168)) $generated@@68)
 :pattern ( ($generated@@166 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (and (= (type $generated@@169) $generated@@68) (= (type $generated@@170) $generated@@68)) (= (type $generated@@171) $generated@@78)) ($generated@@80 $generated@@171 ($generated@@166 $generated@@169 $generated@@170))) ($generated@@165 $generated@@171))
 :pattern ( ($generated@@165 $generated@@171) ($generated@@80 $generated@@171 ($generated@@166 $generated@@169 $generated@@170)))
)))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@157)
 :pattern ( ($generated@@173 $generated@@175))
)) (forall (($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@176)) $generated@@157)
 :pattern ( ($generated@@174 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (= (type $generated@@177) $generated@@78) (= (type $generated@@178) $generated@@78)) true) (= ($generated@@172 $generated@@177 $generated@@178)  (and (= ($generated@@173 $generated@@177) ($generated@@173 $generated@@178)) (= ($generated@@174 $generated@@177) ($generated@@174 $generated@@178)))))
 :pattern ( ($generated@@172 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@68)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@183) $generated@@68)) ($generated@@80 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@80 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (= ($generated@@1 ($generated@@186 $generated@@190 $generated@@191)) 16)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@187 ($generated@@186 $generated@@192 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@186 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@188 ($generated@@186 $generated@@194 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@186 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@188 (type $generated@@196))))
(= (type ($generated@@184 $generated@@196 $generated@@197 $generated@@198)) $generated@@199))
 :pattern ( ($generated@@184 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 (type $generated@@203)))
(let (($generated@@205 (type $generated@@201)))
(= (type ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@186 $generated@@205 $generated@@204))))
 :pattern ( ($generated@@189 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@188 (type $generated@@206))))
 (=> (= (type $generated@@209) $generated@@210) (= ($generated@@184 ($generated@@189 $generated@@206 $generated@@207 $generated@@208 $generated@@209) $generated@@207 $generated@@208) $generated@@209)))
 :weight 0
))) (and (and (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@184 ($generated@@189 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@184 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@184 ($generated@@189 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@184 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or true (= ($generated@@184 ($generated@@189 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@184 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ) (! (= (type ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) ($generated@@186 $generated@@95 $generated@@4))
 :pattern ( ($generated@@185 $generated@@229 $generated@@230 $generated@@231 $generated@@232))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (let (($generated@@239 ($generated@@71 (type $generated@@238))))
 (=> (and (and (and (and (= (type $generated@@233) $generated@@95) (= (type $generated@@234) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@235) ($generated@@70 $generated@@4))) (= (type $generated@@237) $generated@@95)) (= (type $generated@@238) ($generated@@70 $generated@@239))) (= ($generated@@0 ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))  (=> (and (not (= $generated@@237 $generated@@233)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@234 $generated@@237) $generated@@235))) $generated@@236))))
 :pattern ( ($generated@@184 ($generated@@185 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@240 $generated@@242 $generated@@243)) $generated@@78)
 :pattern ( ($generated@@240 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@68) (= (type $generated@@245) $generated@@68)) (= (type $generated@@246) $generated@@157)) (= (type $generated@@247) $generated@@157)) (= ($generated@@80 ($generated@@240 $generated@@246 $generated@@247) ($generated@@166 $generated@@244 $generated@@245))  (and ($generated@@241 $generated@@246 $generated@@244) ($generated@@241 $generated@@247 $generated@@245))))
 :pattern ( ($generated@@80 ($generated@@240 $generated@@246 $generated@@247) ($generated@@166 $generated@@244 $generated@@245)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (= (type $generated@@250) $generated@@68) (= (type $generated@@251) $generated@@78)) (or ($generated@@249 $generated@@250 $generated@@251) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@251 ($generated@@81 $generated@@250))))) (= ($generated@@248 $generated@@250 $generated@@251) ($generated@@82 $generated@@251)))
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
))))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@78) (= (type $generated@@253) $generated@@78)) (= ($generated@@172 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@172 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@78) (= (type $generated@@255) $generated@@78)) (= ($generated@@154 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@154 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@80 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@157) ($generated@@0 ($generated@@99 $generated@@258 $generated@@260))) ($generated@@241 $generated@@260 $generated@@259))
 :pattern ( ($generated@@99 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@80 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@264) $generated@@68)) (= ($generated@@80 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@157) ($generated@@0 ($generated@@99 $generated@@263 $generated@@265))) ($generated@@241 $generated@@265 $generated@@264))
 :pattern ( ($generated@@99 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@80 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@273 Int) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@78)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@68) (= (type $generated@@275) $generated@@68)) (= (type $generated@@276) $generated@@78)) (or ($generated@@79 $generated@@274 $generated@@275 ($generated@@268 $generated@@276)) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@276 ($generated@@81 $generated@@274)) ($generated@@0 ($generated@@268 ($generated@@11 ($generated@@82 ($generated@@268 $generated@@276))))))))) (= ($generated@@77 $generated@@274 $generated@@275 ($generated@@268 $generated@@276)) ($generated@@268 ($generated@@272 ($generated@@266 ($generated@@161 ($generated@@268 $generated@@276)))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@274 $generated@@275 ($generated@@268 $generated@@276)))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@279 $generated@@280)) $generated@@157)
 :pattern ( ($generated@@277 $generated@@279 $generated@@280))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@68) (= (type $generated@@282) $generated@@78)) (or ($generated@@278 $generated@@281 $generated@@282) (and (not (= 0 $generated@@76)) (and ($generated@@80 $generated@@282 ($generated@@81 $generated@@281)) ($generated@@155 $generated@@282))))) (= ($generated@@277 $generated@@281 $generated@@282) ($generated@@156 $generated@@282)))
 :pattern ( ($generated@@277 $generated@@281 $generated@@282))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@68)) (= (type $generated@@287) $generated@@157)) (= (type $generated@@288) $generated@@157)) (= (type $generated@@289) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@283 $generated@@289)) (= ($generated@@92 ($generated@@240 $generated@@287 $generated@@288) ($generated@@166 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@92 ($generated@@240 $generated@@287 $generated@@288) ($generated@@166 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= (type ($generated@@290 $generated@@291)) $generated@@72)
 :pattern ( ($generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@78) (= ($generated@@165 $generated@@292) (= ($generated@@290 $generated@@292) $generated@@61)))
 :pattern ( ($generated@@165 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@78) (= ($generated@@155 $generated@@293) (= ($generated@@290 $generated@@293) $generated@@63)))
 :pattern ( ($generated@@155 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@78) (= ($generated@@82 $generated@@294) (= ($generated@@290 $generated@@294) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@78) ($generated@@165 $generated@@295)) (exists (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (and (and (= (type $generated@@296) $generated@@157) (= (type $generated@@297) $generated@@157)) (= $generated@@295 ($generated@@240 $generated@@296 $generated@@297)))
 :no-pattern (type $generated@@296)
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
)))
 :pattern ( ($generated@@165 $generated@@295))
)))
(assert  (and (and (forall (($generated@@302 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@302)) 17)) (forall (($generated@@303 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@300 $generated@@303))
))) (forall (($generated@@304 T@T) ) (! (= (type ($generated@@298 $generated@@304)) ($generated@@300 $generated@@304))
 :pattern ( ($generated@@298 $generated@@304))
))))
(assert (forall (($generated@@305 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@305)) 0)
 :pattern ( ($generated@@298 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@78)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@308) $generated@@78) ($generated@@155 $generated@@308)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@157) (= $generated@@308 ($generated@@306 $generated@@309)))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@155 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@78) ($generated@@82 $generated@@310)) (exists (($generated@@311 Int) ) (= $generated@@310 ($generated@@272 $generated@@311))))
 :pattern ( ($generated@@82 $generated@@310))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@157)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@284 ($generated@@312 $generated@@314) $generated@@315 $generated@@316) ($generated@@92 $generated@@314 $generated@@315 $generated@@316)))
 :pattern ( ($generated@@284 ($generated@@312 $generated@@314) $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@317) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@318) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@319) $generated@@157)) (= (type $generated@@320) $generated@@68)) ($generated@@150 $generated@@317 $generated@@318)) ($generated@@284 $generated@@319 $generated@@320 $generated@@317)) ($generated@@284 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@150 $generated@@317 $generated@@318) ($generated@@284 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@321) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@322) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@324) $generated@@68)) ($generated@@150 $generated@@321 $generated@@322)) ($generated@@92 $generated@@323 $generated@@324 $generated@@321)) ($generated@@92 $generated@@323 $generated@@324 $generated@@322))
 :pattern ( ($generated@@150 $generated@@321 $generated@@322) ($generated@@92 $generated@@323 $generated@@324 $generated@@321))
)))
(assert (forall (($generated@@327 T@T) ) (! (= (type ($generated@@326 $generated@@327)) ($generated@@94 $generated@@327 $generated@@2))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@97 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@94 $generated@@329 $generated@@2)) (and (= (= ($generated@@325 $generated@@328) 0) (= $generated@@328 ($generated@@326 $generated@@329))) (=> (not (= ($generated@@325 $generated@@328) 0)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) (< 0 ($generated ($generated@@99 $generated@@328 $generated@@330))))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@73)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@68) (and (= ($generated@@90 ($generated@@81 $generated@@333)) $generated@@64) (= ($generated@@331 ($generated@@81 $generated@@333)) $generated@@67)))
 :pattern ( ($generated@@81 $generated@@333))
)))
(assert  (and (and (and (and (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (= ($generated@@1 ($generated@@336 $generated@@339 $generated@@340)) 18)) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@337 ($generated@@336 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@336 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@338 ($generated@@336 $generated@@343 $generated@@344)) $generated@@344)
 :pattern ( ($generated@@336 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@337 (type $generated@@345))))
(= (type ($generated@@334 $generated@@345)) ($generated@@94 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@345))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= (type ($generated@@335 $generated@@347 $generated@@348)) ($generated@@336 $generated@@347 $generated@@348))
 :pattern ( ($generated@@335 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@T) ) (! (let (($generated@@351 (type $generated@@349)))
 (not ($generated@@0 ($generated@@99 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349))))
 :pattern ( (let (($generated@@351 (type $generated@@349)))
($generated@@99 ($generated@@334 ($generated@@335 $generated@@351 $generated@@350)) $generated@@349)))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@94 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@99 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@99 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@370) $generated@@68) (= (type $generated@@371) $generated@@78)) (or ($generated@@249 $generated@@370 $generated@@371) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@371 ($generated@@81 $generated@@370))))) true)
 :pattern ( ($generated@@248 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@97 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@94 $generated@@373 $generated@@2)) (= ($generated@@180 $generated@@372) (forall (($generated@@374 T@U) ) (!  (=> (= (type $generated@@374) $generated@@373) (and (<= 0 ($generated ($generated@@99 $generated@@372 $generated@@374))) (<= ($generated ($generated@@99 $generated@@372 $generated@@374)) ($generated@@325 $generated@@372))))
 :pattern ( ($generated@@99 $generated@@372 $generated@@374))
)))))
 :pattern ( ($generated@@180 $generated@@372))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@375) $generated@@68) (= (type $generated@@376) $generated@@78)) (or ($generated@@249 $generated@@375 ($generated@@268 $generated@@376)) (and (not (= 0 $generated@@76)) ($generated@@80 $generated@@376 ($generated@@81 $generated@@375))))) (= ($generated@@248 $generated@@375 ($generated@@268 $generated@@376)) ($generated@@0 ($generated@@268 ($generated@@11 ($generated@@82 ($generated@@268 $generated@@376)))))))
 :weight 3
 :pattern ( ($generated@@248 $generated@@375 ($generated@@268 $generated@@376)))
))))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@338 (type $generated@@377))))
(let (($generated@@379 ($generated@@337 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@336 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@335 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@99 ($generated@@334 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@334 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@338 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@94 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@338 (type $generated@@384))))
(let (($generated@@386 ($generated@@337 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@336 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@335 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@99 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@356 (type $generated@@388))))
(let (($generated@@390 ($generated@@355 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@354 $generated@@390 $generated@@389)) (or (= $generated@@388 ($generated@@353 $generated@@390 $generated@@389)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) ($generated@@0 ($generated@@99 ($generated@@352 $generated@@388) $generated@@391)))
 :no-pattern (type $generated@@391)
 :no-pattern ($generated $generated@@391)
 :no-pattern ($generated@@0 $generated@@391)
))))))
 :pattern ( ($generated@@352 $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@356 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393)) ($generated@@94 $generated@@394 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@356 (type $generated@@395))))
(let (($generated@@397 ($generated@@355 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@354 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@353 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@396) ($generated@@0 ($generated@@99 ($generated@@392 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@392 $generated@@395))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@399) $generated@@78) (= (type $generated@@400) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@400) (and ($generated@@82 $generated@@399) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@68) ($generated@@92 $generated@@399 ($generated@@81 $generated@@401) $generated@@400))
 :pattern ( ($generated@@92 $generated@@399 ($generated@@81 $generated@@401) $generated@@400))
))))) ($generated@@92 ($generated@@8 ($generated@@161 $generated@@399)) $generated@@46 $generated@@400))
 :pattern ( ($generated@@92 ($generated@@8 ($generated@@161 $generated@@399)) $generated@@46 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@403) $generated@@68)) (= ($generated@@80 $generated@@402 ($generated@@179 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@402 $generated@@404)))) ($generated@@241 $generated@@404 $generated@@403))
 :pattern ( ($generated@@99 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@80 $generated@@402 ($generated@@179 $generated@@403)))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@405) $generated@@68) (= (type $generated@@406) $generated@@157)) (= (type $generated@@407) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@283 $generated@@407)) (= ($generated@@92 ($generated@@306 $generated@@406) ($generated@@81 $generated@@405) $generated@@407) ($generated@@284 $generated@@406 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@92 ($generated@@306 $generated@@406) ($generated@@81 $generated@@405) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 Int) ($generated@@410 T@U) ) (!  (=> (and (and (= (type $generated@@408) $generated@@68) (= (type $generated@@410) ($generated@@94 $generated@@95 $generated@@96))) ($generated@@283 $generated@@410)) (= ($generated@@92 ($generated@@272 $generated@@409) ($generated@@81 $generated@@408) $generated@@410) ($generated@@92 ($generated@@8 $generated@@409) $generated@@46 $generated@@410)))
 :pattern ( ($generated@@92 ($generated@@272 $generated@@409) ($generated@@81 $generated@@408) $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@78) ($generated@@411 $generated@@412)) (or ($generated@@155 $generated@@412) ($generated@@82 $generated@@412)))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@413 ($generated@@256 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@157) ($generated@@0 ($generated@@99 $generated@@413 $generated@@416))) ($generated@@284 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@99 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@92 $generated@@413 ($generated@@256 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@94 $generated@@157 $generated@@4)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@417 ($generated@@261 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@157) ($generated@@0 ($generated@@99 $generated@@417 $generated@@420))) ($generated@@284 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@99 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@92 $generated@@417 ($generated@@261 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@99 ($generated@@326 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@99 ($generated@@326 $generated@@422) $generated@@421)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (= (type $generated@@423) $generated@@68) (= (type $generated@@424) $generated@@78)) (or ($generated@@278 $generated@@423 $generated@@424) (and (not (= 0 $generated@@76)) (and ($generated@@80 $generated@@424 ($generated@@81 $generated@@423)) ($generated@@155 $generated@@424))))) ($generated@@241 ($generated@@277 $generated@@423 $generated@@424) $generated@@423))
 :pattern ( ($generated@@277 $generated@@423 $generated@@424))
))))
(assert  (and (and (forall (($generated@@428 T@U) ) (! (= (type ($generated@@425 $generated@@428)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@425 $generated@@428))
)) (forall (($generated@@429 T@T) ($generated@@430 T@U) ) (! (= (type ($generated@@426 $generated@@429 $generated@@430)) $generated@@429)
 :pattern ( ($generated@@426 $generated@@429 $generated@@430))
))) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@338 (type $generated@@431))))
(let (($generated@@433 ($generated@@337 (type $generated@@431))))
(= (type ($generated@@427 $generated@@431)) ($generated@@94 $generated@@433 $generated@@432))))
 :pattern ( ($generated@@427 $generated@@431))
))))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@435) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@425 $generated@@434) $generated@@435))  (and ($generated@@0 ($generated@@99 ($generated@@334 $generated@@434) ($generated@@173 ($generated@@426 $generated@@78 $generated@@435)))) (= ($generated@@99 ($generated@@427 $generated@@434) ($generated@@173 ($generated@@426 $generated@@78 $generated@@435))) ($generated@@174 ($generated@@426 $generated@@78 $generated@@435))))))
 :pattern ( ($generated@@99 ($generated@@425 $generated@@434) $generated@@435))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@94 $generated@@157 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@356 (type $generated@@439))))
(let (($generated@@441 ($generated@@355 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@94 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@443) $generated@@157)) (= ($generated@@0 ($generated@@99 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@99 ($generated@@352 $generated@@442) ($generated@@173 ($generated@@426 $generated@@78 $generated@@443)))) (= ($generated@@99 ($generated@@437 $generated@@442) ($generated@@173 ($generated@@426 $generated@@78 $generated@@443))) ($generated@@174 ($generated@@426 $generated@@78 $generated@@443))))))
 :pattern ( ($generated@@99 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (let (($generated@@446 (type $generated@@445)))
(let (($generated@@447 ($generated@@337 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@0 ($generated@@99 ($generated@@381 $generated@@444) $generated@@445)) (exists (($generated@@448 T@U) ) (!  (and (= (type $generated@@448) $generated@@447) (and ($generated@@0 ($generated@@99 ($generated@@334 $generated@@444) $generated@@448)) (= $generated@@445 ($generated@@99 ($generated@@427 $generated@@444) $generated@@448))))
 :pattern ( ($generated@@99 ($generated@@334 $generated@@444) $generated@@448))
 :pattern ( ($generated@@99 ($generated@@427 $generated@@444) $generated@@448))
))))))
 :pattern ( ($generated@@99 ($generated@@381 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@355 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@354 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@99 ($generated@@392 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@99 ($generated@@352 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@99 ($generated@@437 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@99 ($generated@@352 $generated@@449) $generated@@453))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@99 ($generated@@392 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (= (type ($generated@@454 $generated@@455 $generated@@456)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (and (and (= (type $generated@@457) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@334 $generated@@457) $generated@@461))) (and ($generated@@284 ($generated@@99 ($generated@@427 $generated@@457) $generated@@461) $generated@@459 $generated@@460) ($generated@@284 $generated@@461 $generated@@458 $generated@@460)))
 :pattern ( ($generated@@99 ($generated@@427 $generated@@457) $generated@@461))
 :pattern ( ($generated@@99 ($generated@@334 $generated@@457) $generated@@461))
))))
 :pattern ( ($generated@@92 $generated@@457 ($generated@@454 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@352 $generated@@465) $generated@@469))) (and ($generated@@284 ($generated@@99 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@284 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@99 ($generated@@352 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@92 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@78)) ($generated@@80 $generated@@471 ($generated@@81 $generated@@470))) (or ($generated@@155 $generated@@471) ($generated@@82 $generated@@471)))
 :pattern ( ($generated@@82 $generated@@471) ($generated@@80 $generated@@471 ($generated@@81 $generated@@470)))
 :pattern ( ($generated@@155 $generated@@471) ($generated@@80 $generated@@471 ($generated@@81 $generated@@470)))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@472) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@473) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@474) ($generated@@94 $generated@@95 $generated@@96))) (not (= $generated@@472 $generated@@474))) (and ($generated@@150 $generated@@472 $generated@@473) ($generated@@150 $generated@@473 $generated@@474))) ($generated@@150 $generated@@472 $generated@@474))
 :pattern ( ($generated@@150 $generated@@472 $generated@@473) ($generated@@150 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@T) ) (! (= (type ($generated@@475 $generated@@476)) ($generated@@94 $generated@@476 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@356 (type $generated@@477))))
(let (($generated@@479 ($generated@@355 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@354 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@353 $generated@@479 $generated@@478)) (= ($generated@@352 $generated@@477) ($generated@@475 $generated@@479))))))
 :pattern ( ($generated@@352 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@356 (type $generated@@480))))
(let (($generated@@482 ($generated@@355 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@354 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@353 $generated@@482 $generated@@481)) (= ($generated@@392 $generated@@480) ($generated@@475 $generated@@481))))))
 :pattern ( ($generated@@392 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@356 (type $generated@@483))))
(let (($generated@@485 ($generated@@355 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@354 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@353 $generated@@485 $generated@@484)) (= ($generated@@436 $generated@@483) ($generated@@475 $generated@@157))))))
 :pattern ( ($generated@@436 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@338 (type $generated@@486))))
(let (($generated@@488 ($generated@@337 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@336 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@335 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@157) (= (type $generated@@490) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@425 $generated@@486) ($generated@@312 ($generated@@240 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@425 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@356 (type $generated@@491))))
(let (($generated@@493 ($generated@@355 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@354 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@353 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@157) (= (type $generated@@495) $generated@@157)) ($generated@@0 ($generated@@99 ($generated@@436 $generated@@491) ($generated@@312 ($generated@@240 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@436 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@157) ($generated@@241 $generated@@496 $generated@@46)) (and (= ($generated@@312 ($generated@@426 $generated@@2 $generated@@496)) $generated@@496) ($generated@@80 ($generated@@426 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@241 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@157) ($generated@@241 $generated@@497 $generated@@47)) (and (= ($generated@@312 ($generated@@426 $generated@@3 $generated@@497)) $generated@@497) ($generated@@80 ($generated@@426 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@241 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@157) ($generated@@241 $generated@@498 $generated@@44)) (and (= ($generated@@312 ($generated@@426 $generated@@4 $generated@@498)) $generated@@498) ($generated@@80 ($generated@@426 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@241 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 20))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@157) ($generated@@241 $generated@@500 $generated@@45)) (and (= ($generated@@312 ($generated@@426 $generated@@499 $generated@@500)) $generated@@500) ($generated@@80 ($generated@@426 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@241 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@241 ($generated@@312 $generated@@501) $generated@@502) ($generated@@80 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@241 ($generated@@312 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@97 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@94 $generated@@504 $generated@@2)) (<= 0 ($generated@@325 $generated@@503))))
 :pattern ( ($generated@@325 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@301 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@300 $generated@@506)) (<= 0 ($generated@@299 $generated@@505))))
 :pattern ( ($generated@@299 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@68) (= (type $generated@@510) $generated@@68)) (= ($generated@@507 ($generated@@454 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@454 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@511 ($generated@@454 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@454 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@68) (= (type $generated@@516) $generated@@68)) (= ($generated@@90 ($generated@@454 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@454 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@462 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@462 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@462 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@462 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@68) (= (type $generated@@526) $generated@@68)) (= ($generated@@90 ($generated@@462 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@462 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@157) (= (type $generated@@528) $generated@@157)) (= ($generated@@290 ($generated@@240 $generated@@527 $generated@@528)) $generated@@61))
 :pattern ( ($generated@@240 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@166 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@166 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@68) (= (type $generated@@536) $generated@@68)) (= ($generated@@533 ($generated@@166 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@166 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@157) (= (type $generated@@538) $generated@@157)) (= ($generated@@173 ($generated@@240 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@240 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@157) (= (type $generated@@540) $generated@@157)) (= ($generated@@174 ($generated@@240 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@240 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@543))
)) (forall (($generated@@544 T@U) ($generated@@545 Int) ) (! (let (($generated@@546 ($generated@@301 (type $generated@@544))))
(= (type ($generated@@542 $generated@@544 $generated@@545)) $generated@@546))
 :pattern ( ($generated@@542 $generated@@544 $generated@@545))
))))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@300 $generated@@157)) (= (type $generated@@548) $generated@@68)) (= (type $generated@@549) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@547 ($generated@@541 $generated@@548) $generated@@549) (forall (($generated@@550 Int) ) (!  (=> (and (<= 0 $generated@@550) (< $generated@@550 ($generated@@299 $generated@@547))) ($generated@@284 ($generated@@542 $generated@@547 $generated@@550) $generated@@548 $generated@@549))
 :pattern ( ($generated@@542 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@92 $generated@@547 ($generated@@541 $generated@@548) $generated@@549))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@78)) (or ($generated@@79 $generated@@551 $generated@@552 $generated@@553) (and (not (= 1 $generated@@76)) (and ($generated@@80 $generated@@553 ($generated@@81 $generated@@551)) ($generated@@82 $generated@@553))))) (= ($generated@@77 $generated@@551 $generated@@552 $generated@@553) ($generated@@272 ($generated@@161 $generated@@553))))
 :pattern ( ($generated@@77 $generated@@551 $generated@@552 $generated@@553))
))))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@93 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@93 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@68)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@556 ($generated@@256 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@256 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@90 ($generated@@256 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@68)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@560 ($generated@@261 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@261 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@90 ($generated@@261 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@179 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@179 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@90 ($generated@@179 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@541 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@541 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@90 ($generated@@541 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@541 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@157) (= ($generated@@290 ($generated@@306 $generated@@572)) $generated@@63))
 :pattern ( ($generated@@306 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@573 ($generated@@81 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@81 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@157) (= ($generated@@156 ($generated@@306 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@306 $generated@@576))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@290 ($generated@@272 $generated@@577)) $generated@@65)
 :pattern ( ($generated@@272 $generated@@577))
)))
(assert (forall (($generated@@578 Int) ) (! (= ($generated@@161 ($generated@@272 $generated@@578)) $generated@@578)
 :pattern ( ($generated@@272 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@579)))
(= ($generated@@426 $generated@@580 ($generated@@312 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@312 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) $generated@@68)) (= ($generated@@80 $generated@@581 ($generated@@454 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@334 $generated@@581) $generated@@584))) (and ($generated@@241 ($generated@@99 ($generated@@427 $generated@@581) $generated@@584) $generated@@583) ($generated@@241 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@99 ($generated@@427 $generated@@581) $generated@@584))
 :pattern ( ($generated@@99 ($generated@@334 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@80 $generated@@581 ($generated@@454 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) (= ($generated@@80 $generated@@585 ($generated@@462 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@157) ($generated@@0 ($generated@@99 ($generated@@352 $generated@@585) $generated@@588))) (and ($generated@@241 ($generated@@99 ($generated@@437 $generated@@585) $generated@@588) $generated@@587) ($generated@@241 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@99 ($generated@@437 $generated@@585) $generated@@588))
 :pattern ( ($generated@@99 ($generated@@352 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@80 $generated@@585 ($generated@@462 $generated@@586 $generated@@587)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@68) (= (type $generated@@590) $generated@@78)) (or ($generated@@278 $generated@@589 ($generated@@268 $generated@@590)) (and (not (= 0 $generated@@76)) (and ($generated@@80 $generated@@590 ($generated@@81 $generated@@589)) ($generated@@0 ($generated@@268 ($generated@@11 ($generated@@155 ($generated@@268 $generated@@590))))))))) (= ($generated@@277 $generated@@589 ($generated@@268 $generated@@590)) ($generated@@268 ($generated@@156 ($generated@@268 $generated@@590)))))
 :weight 3
 :pattern ( ($generated@@277 $generated@@589 ($generated@@268 $generated@@590)))
))))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@68) (= (type $generated@@592) $generated@@157)) (= ($generated@@80 ($generated@@306 $generated@@592) ($generated@@81 $generated@@591)) ($generated@@241 $generated@@592 $generated@@591)))
 :pattern ( ($generated@@80 ($generated@@306 $generated@@592) ($generated@@81 $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 Int) ) (!  (=> (= (type $generated@@593) $generated@@68) (= ($generated@@80 ($generated@@272 $generated@@594) ($generated@@81 $generated@@593)) ($generated@@80 ($generated@@8 $generated@@594) $generated@@46)))
 :pattern ( ($generated@@80 ($generated@@272 $generated@@594) ($generated@@81 $generated@@593)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@157) (= (type $generated@@598) $generated@@157)) (< ($generated@@595 $generated@@597) ($generated@@596 ($generated@@240 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@240 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@157) (= (type $generated@@600) $generated@@157)) (< ($generated@@595 $generated@@600) ($generated@@596 ($generated@@240 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@240 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@157) (= (type $generated@@602) $generated@@68)) (= (type $generated@@603) $generated@@68)) ($generated@@241 $generated@@601 ($generated@@454 $generated@@602 $generated@@603))) (and (= ($generated@@312 ($generated@@426 ($generated@@336 $generated@@157 $generated@@157) $generated@@601)) $generated@@601) ($generated@@80 ($generated@@426 ($generated@@336 $generated@@157 $generated@@157) $generated@@601) ($generated@@454 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@241 $generated@@601 ($generated@@454 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@157) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) ($generated@@241 $generated@@604 ($generated@@462 $generated@@605 $generated@@606))) (and (= ($generated@@312 ($generated@@426 ($generated@@354 $generated@@157 $generated@@157) $generated@@604)) $generated@@604) ($generated@@80 ($generated@@426 ($generated@@354 $generated@@157 $generated@@157) $generated@@604) ($generated@@462 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@241 $generated@@604 ($generated@@462 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@157)) ($generated@@241 $generated@@609 ($generated@@166 $generated@@607 $generated@@608))) (and (= ($generated@@312 ($generated@@426 $generated@@78 $generated@@609)) $generated@@609) ($generated@@80 ($generated@@426 $generated@@78 $generated@@609) ($generated@@166 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@241 $generated@@609 ($generated@@166 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@157) (< ($generated@@595 $generated@@610) ($generated@@596 ($generated@@306 $generated@@610))))
 :pattern ( ($generated@@306 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@78) (= (type $generated@@612) $generated@@68)) (= (type $generated@@613) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@613) (and ($generated@@155 $generated@@611) ($generated@@92 $generated@@611 ($generated@@81 $generated@@612) $generated@@613)))) ($generated@@284 ($generated@@156 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@284 ($generated@@156 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (not ($generated@@0 ($generated@@99 ($generated@@475 $generated@@615) $generated@@614))))
 :pattern ( (let (($generated@@615 (type $generated@@614)))
($generated@@99 ($generated@@475 $generated@@615) $generated@@614)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@68)) (and (= ($generated@@90 ($generated@@166 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@331 ($generated@@166 $generated@@616 $generated@@617)) $generated@@66)))
 :pattern ( ($generated@@166 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@78) (= ($generated@@595 ($generated@@312 $generated@@618)) ($generated@@596 $generated@@618)))
 :pattern ( ($generated@@595 ($generated@@312 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@157) ($generated@@241 $generated@@619 ($generated@@93 0))) (and (= ($generated@@312 ($generated@@426 $generated@@2 $generated@@619)) $generated@@619) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@619) ($generated@@93 0))))
 :pattern ( ($generated@@241 $generated@@619 ($generated@@93 0)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@157) (= (type $generated@@621) $generated@@68)) ($generated@@241 $generated@@620 ($generated@@256 $generated@@621))) (and (= ($generated@@312 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@620)) $generated@@620) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@620) ($generated@@256 $generated@@621))))
 :pattern ( ($generated@@241 $generated@@620 ($generated@@256 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@157) (= (type $generated@@623) $generated@@68)) ($generated@@241 $generated@@622 ($generated@@261 $generated@@623))) (and (= ($generated@@312 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@622)) $generated@@622) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@4) $generated@@622) ($generated@@261 $generated@@623))))
 :pattern ( ($generated@@241 $generated@@622 ($generated@@261 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@157) (= (type $generated@@625) $generated@@68)) ($generated@@241 $generated@@624 ($generated@@179 $generated@@625))) (and (= ($generated@@312 ($generated@@426 ($generated@@94 $generated@@157 $generated@@2) $generated@@624)) $generated@@624) ($generated@@80 ($generated@@426 ($generated@@94 $generated@@157 $generated@@2) $generated@@624) ($generated@@179 $generated@@625))))
 :pattern ( ($generated@@241 $generated@@624 ($generated@@179 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@157) (= (type $generated@@627) $generated@@68)) ($generated@@241 $generated@@626 ($generated@@541 $generated@@627))) (and (= ($generated@@312 ($generated@@426 ($generated@@300 $generated@@157) $generated@@626)) $generated@@626) ($generated@@80 ($generated@@426 ($generated@@300 $generated@@157) $generated@@626) ($generated@@541 $generated@@627))))
 :pattern ( ($generated@@241 $generated@@626 ($generated@@541 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@68) (= (type $generated@@629) $generated@@157)) ($generated@@241 $generated@@629 ($generated@@81 $generated@@628))) (and (= ($generated@@312 ($generated@@426 $generated@@78 $generated@@629)) $generated@@629) ($generated@@80 ($generated@@426 $generated@@78 $generated@@629) ($generated@@81 $generated@@628))))
 :pattern ( ($generated@@241 $generated@@629 ($generated@@81 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@630) ($generated@@94 $generated@@157 $generated@@2)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) ($generated@@94 $generated@@95 $generated@@96))) (= ($generated@@92 $generated@@630 ($generated@@179 $generated@@631) $generated@@632) (forall (($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@157) (< 0 ($generated ($generated@@99 $generated@@630 $generated@@633)))) ($generated@@284 $generated@@633 $generated@@631 $generated@@632))
 :pattern ( ($generated@@99 $generated@@630 $generated@@633))
))))
 :pattern ( ($generated@@92 $generated@@630 ($generated@@179 $generated@@631) $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@78) (= (type $generated@@635) $generated@@68)) (= (type $generated@@636) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@636) (and ($generated@@165 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@68) ($generated@@92 $generated@@634 ($generated@@166 $generated@@635 $generated@@637) $generated@@636))
 :pattern ( ($generated@@92 $generated@@634 ($generated@@166 $generated@@635 $generated@@637) $generated@@636))
))))) ($generated@@284 ($generated@@173 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@284 ($generated@@173 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (and (= (type $generated@@638) $generated@@78) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) ($generated@@94 $generated@@95 $generated@@96))) (and ($generated@@283 $generated@@640) (and ($generated@@165 $generated@@638) (exists (($generated@@641 T@U) ) (!  (and (= (type $generated@@641) $generated@@68) ($generated@@92 $generated@@638 ($generated@@166 $generated@@641 $generated@@639) $generated@@640))
 :pattern ( ($generated@@92 $generated@@638 ($generated@@166 $generated@@641 $generated@@639) $generated@@640))
))))) ($generated@@284 ($generated@@174 $generated@@638) $generated@@639 $generated@@640))
 :pattern ( ($generated@@284 ($generated@@174 $generated@@638) $generated@@639 $generated@@640))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@157) (= (type $generated@@643) $generated@@157)) (= ($generated@@240 ($generated@@268 $generated@@642) ($generated@@268 $generated@@643)) ($generated@@268 ($generated@@240 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@240 ($generated@@268 $generated@@642) ($generated@@268 $generated@@643)))
)))
(assert (forall (($generated@@644 Int) ) (! (= ($generated@@312 ($generated@@8 ($generated@@266 $generated@@644))) ($generated@@268 ($generated@@312 ($generated@@8 $generated@@644))))
 :pattern ( ($generated@@312 ($generated@@8 ($generated@@266 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@157) (= ($generated@@306 ($generated@@268 $generated@@645)) ($generated@@268 ($generated@@306 $generated@@645))))
 :pattern ( ($generated@@306 ($generated@@268 $generated@@645)))
)))
(assert (forall (($generated@@646 Int) ) (! (= ($generated@@272 ($generated@@266 $generated@@646)) ($generated@@268 ($generated@@272 $generated@@646)))
 :pattern ( ($generated@@272 ($generated@@266 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (= ($generated@@312 ($generated@@268 $generated@@647)) ($generated@@268 ($generated@@312 $generated@@647)))
 :pattern ( ($generated@@312 ($generated@@268 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@301 (type $generated@@648))))
 (=> (and (= (type $generated@@648) ($generated@@300 $generated@@649)) (= ($generated@@299 $generated@@648) 0)) (= $generated@@648 ($generated@@298 $generated@@649))))
 :pattern ( ($generated@@299 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@651)))
 (=> (and (and (= (type $generated@@650) ($generated@@94 $generated@@653 $generated@@2)) (= (type $generated@@652) $generated@@2)) (<= 0 ($generated $generated@@652))) (= ($generated@@325 ($generated@@100 $generated@@650 $generated@@651 $generated@@652)) (+ (- ($generated@@325 $generated@@650) ($generated ($generated@@99 $generated@@650 $generated@@651))) ($generated $generated@@652)))))
 :pattern ( ($generated@@325 ($generated@@100 $generated@@650 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@655) $generated@@2)) ($generated@@92 $generated@@655 $generated@@46 $generated@@654))
 :pattern ( ($generated@@92 $generated@@655 $generated@@46 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@657) $generated@@3)) ($generated@@92 $generated@@657 $generated@@47 $generated@@656))
 :pattern ( ($generated@@92 $generated@@657 $generated@@47 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@659) $generated@@4)) ($generated@@92 $generated@@659 $generated@@44 $generated@@658))
 :pattern ( ($generated@@92 $generated@@659 $generated@@44 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@661) $generated@@499)) ($generated@@92 $generated@@661 $generated@@45 $generated@@660))
 :pattern ( ($generated@@92 $generated@@661 $generated@@45 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@94 $generated@@95 $generated@@96)) (= (type $generated@@663) $generated@@157)) ($generated@@92 $generated@@663 $generated@@48 $generated@@662))
 :pattern ( ($generated@@92 $generated@@663 $generated@@48 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) ($generated@@300 $generated@@157)) (= (type $generated@@665) $generated@@68)) (= ($generated@@80 $generated@@664 ($generated@@541 $generated@@665)) (forall (($generated@@666 Int) ) (!  (=> (and (<= 0 $generated@@666) (< $generated@@666 ($generated@@299 $generated@@664))) ($generated@@241 ($generated@@542 $generated@@664 $generated@@666) $generated@@665))
 :pattern ( ($generated@@542 $generated@@664 $generated@@666))
))))
 :pattern ( ($generated@@80 $generated@@664 ($generated@@541 $generated@@665)))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@300 $generated@@157)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@299 $generated@@668))) (< ($generated@@596 ($generated@@426 $generated@@78 ($generated@@542 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@596 ($generated@@426 $generated@@78 ($generated@@542 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@336 $generated@@157 $generated@@157)) (= (type $generated@@671) $generated@@68)) (= (type $generated@@672) $generated@@68)) ($generated@@80 $generated@@670 ($generated@@454 $generated@@671 $generated@@672))) (and (and ($generated@@80 ($generated@@334 $generated@@670) ($generated@@256 $generated@@671)) ($generated@@80 ($generated@@381 $generated@@670) ($generated@@256 $generated@@672))) ($generated@@80 ($generated@@425 $generated@@670) ($generated@@256 ($generated@@166 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@80 $generated@@670 ($generated@@454 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@354 $generated@@157 $generated@@157)) (= (type $generated@@674) $generated@@68)) (= (type $generated@@675) $generated@@68)) ($generated@@80 $generated@@673 ($generated@@462 $generated@@674 $generated@@675))) (and (and ($generated@@80 ($generated@@352 $generated@@673) ($generated@@261 $generated@@674)) ($generated@@80 ($generated@@392 $generated@@673) ($generated@@261 $generated@@675))) ($generated@@80 ($generated@@436 $generated@@673) ($generated@@261 ($generated@@166 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@80 $generated@@673 ($generated@@462 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@80 $generated@@676 $generated@@46))
 :pattern ( ($generated@@80 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@80 $generated@@677 $generated@@47))
 :pattern ( ($generated@@80 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@80 $generated@@678 $generated@@44))
 :pattern ( ($generated@@80 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@499) ($generated@@80 $generated@@679 $generated@@45))
 :pattern ( ($generated@@80 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@157) ($generated@@80 $generated@@680 $generated@@48))
 :pattern ( ($generated@@80 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 (T@U) Bool)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@681) $generated@@78) (= (type $generated@@682) $generated@@78)) (= (type $generated@@683) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@686) $generated@@78)) (= (type $generated@@685) $generated@@78)) (= (type $generated@@687) ($generated@@186 $generated@@95 $generated@@4))) (= (type $generated@@688) $generated@@95)) (= (type $generated@@689) ($generated@@94 $generated@@95 $generated@@96))) (= (type $generated@@690) $generated@@78)) (= (type $generated@@691) $generated@@78)) (= (type $generated@@692) $generated@@78)) (= (type $generated@@694) $generated@@78)) (= (type $generated@@695) $generated@@78)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@696  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@154 $generated@@681 ($generated@@272 ($generated@@266 5))))))
(let (($generated@@697  (=> (and (not ($generated@@248 $generated@@46 $generated@@682)) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@155 $generated@@682)) (=> (and ($generated@@155 $generated@@682) ($generated@@278 $generated@@46 $generated@@682)) (=> (and (and ($generated@@278 $generated@@46 $generated@@682) (= $generated@@684 ($generated ($generated@@426 $generated@@2 ($generated@@277 $generated@@46 $generated@@682))))) (and (= $generated@@681 $generated@@685) (= (ControlFlow 0 5) 2))) $generated@@696))))))
(let (($generated@@698  (=> (and ($generated@@248 $generated@@46 $generated@@682) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@82 $generated@@682)) (=> (and ($generated@@82 $generated@@682) ($generated@@79 $generated@@46 $generated@@46 $generated@@682)) (=> (and (and ($generated@@79 $generated@@46 $generated@@46 $generated@@682) (= $generated@@686 ($generated@@77 $generated@@46 $generated@@46 $generated@@682))) (and (= $generated@@681 $generated@@686) (= (ControlFlow 0 3) 2))) $generated@@696))))))
(let (($generated@@699  (=> (= $generated@@687 ($generated@@185 $generated@@688 $generated@@689 $generated@@60 false)) (=> (and (and (and ($generated@@80 $generated@@690 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@690 ($generated@@81 $generated@@46) $generated@@689)) (and ($generated@@80 $generated@@691 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@691 ($generated@@81 $generated@@46) $generated@@689))) (and (and ($generated@@80 $generated@@692 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@692 ($generated@@81 $generated@@46) $generated@@689)) (and ($generated@@283 $generated@@683) ($generated@@693 $generated@@683)))) (=> (and (and (and (and ($generated@@80 $generated@@682 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) ($generated@@411 $generated@@682)) (and ($generated@@154 $generated@@682 ($generated@@272 ($generated@@266 5))) (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@95) (=> (and (not (= $generated@@700 $generated@@688)) ($generated@@0 ($generated@@101 ($generated@@99 $generated@@689 $generated@@700) $generated@@60))) (= ($generated@@99 $generated@@683 $generated@@700) ($generated@@99 $generated@@689 $generated@@700))))
 :pattern ( ($generated@@99 $generated@@683 $generated@@700))
)))) (and (and ($generated@@150 $generated@@689 $generated@@683) ($generated@@92 $generated@@682 ($generated@@81 $generated@@46) $generated@@683)) (and ($generated@@249 $generated@@46 $generated@@682) ($generated@@249 $generated@@46 $generated@@682)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@698) (=> (= (ControlFlow 0 7) 5) $generated@@697)))))))
(let (($generated@@701  (=> (and (and (and (and ($generated@@283 $generated@@689) ($generated@@693 $generated@@689)) (and ($generated@@80 $generated@@685 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@685 ($generated@@81 $generated@@46) $generated@@689))) (and (and ($generated@@80 $generated@@694 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@694 ($generated@@81 $generated@@46) $generated@@689)) true)) (and (and (and ($generated@@80 $generated@@695 ($generated@@81 $generated@@46)) ($generated@@92 $generated@@695 ($generated@@81 $generated@@46) $generated@@689)) true) (and (= 2 $generated@@76) (= (ControlFlow 0 8) 7)))) $generated@@699)))
$generated@@701))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (Int) Int)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@291 (Int) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@394 (T@U) Bool)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@T T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@456 (T@T) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@142) 14) (= ($generated@@1 $generated@@144) 15)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@143 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@143 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@142) (= (type $generated@@147) $generated@@142)) (and ($generated@@141 $generated@@146) ($generated@@141 $generated@@147))) (= ($generated@@140 $generated@@146 $generated@@147) (= ($generated@@143 $generated@@146) ($generated@@143 $generated@@147))))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@146))
 :pattern ( ($generated@@140 $generated@@146 $generated@@147) ($generated@@141 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@150) $generated@@142) (= (type $generated@@151) $generated@@142)) (and ($generated@@148 $generated@@150) ($generated@@148 $generated@@151))) (= ($generated@@140 $generated@@150 $generated@@151) (= ($generated@@149 $generated@@150) ($generated@@149 $generated@@151))))
 :pattern ( ($generated@@140 $generated@@150 $generated@@151) ($generated@@148 $generated@@150))
 :pattern ( ($generated@@140 $generated@@150 $generated@@151) ($generated@@148 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> (= (type $generated@@153) $generated@@2) ($generated@@152 $generated@@153 ($generated@@79 0)))
 :pattern ( ($generated@@152 $generated@@153 ($generated@@79 0)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@156 $generated@@157)) $generated@@68)
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@68) (= (type $generated@@159) $generated@@68)) (= (type $generated@@160) $generated@@142)) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159))) ($generated@@154 $generated@@160))
 :pattern ( ($generated@@154 $generated@@160) ($generated@@152 $generated@@160 ($generated@@155 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@144)
 :pattern ( ($generated@@162 $generated@@164))
)) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@144)
 :pattern ( ($generated@@163 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@142) (= (type $generated@@167) $generated@@142)) true) (= ($generated@@161 $generated@@166 $generated@@167)  (and (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)) (= ($generated@@163 $generated@@166) ($generated@@163 $generated@@167)))))
 :pattern ( ($generated@@161 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@172) $generated@@68)) ($generated@@152 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@152 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@81 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@71 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@81) (= (type $generated@@223) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@224) ($generated@@70 $generated@@4))) (= (type $generated@@226) $generated@@81)) (= (type $generated@@227) ($generated@@70 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@142)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) $generated@@68)) (= (type $generated@@235) $generated@@144)) (= (type $generated@@236) $generated@@144)) (= ($generated@@152 ($generated@@229 $generated@@235 $generated@@236) ($generated@@155 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@152 ($generated@@229 $generated@@235 $generated@@236) ($generated@@155 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@142)) (or ($generated@@239 $generated@@242 $generated@@243) (and (not (= 0 $generated@@237)) ($generated@@152 $generated@@243 ($generated@@240 $generated@@242))))) (= ($generated@@238 $generated@@242 $generated@@243) ($generated@@148 $generated@@243)))
 :pattern ( ($generated@@238 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@142) (= (type $generated@@245) $generated@@142)) (= ($generated@@161 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@161 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@142) (= (type $generated@@247) $generated@@142)) (= ($generated@@140 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@140 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@251) $generated@@68)) (= ($generated@@152 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@144) ($generated@@0 ($generated@@85 $generated@@250 $generated@@252))) ($generated@@230 $generated@@252 $generated@@251))
 :pattern ( ($generated@@85 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@152 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@256) $generated@@68)) (= ($generated@@152 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@144) ($generated@@0 ($generated@@85 $generated@@255 $generated@@257))) ($generated@@230 $generated@@257 $generated@@256))
 :pattern ( ($generated@@85 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@152 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 Int) ) (! (= ($generated@@258 $generated@@259) $generated@@259)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (let (($generated@@262 (type $generated@@261)))
(= (type ($generated@@260 $generated@@261)) $generated@@262))
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= ($generated@@260 $generated@@263) $generated@@263)
 :pattern ( ($generated@@260 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@68)) (= (type $generated@@268) $generated@@144)) (= (type $generated@@269) $generated@@144)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@264 $generated@@270)) (= ($generated@@78 ($generated@@229 $generated@@268 $generated@@269) ($generated@@155 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@229 $generated@@268 $generated@@269) ($generated@@155 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@72)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@142) (= ($generated@@154 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@141 $generated@@274) (= ($generated@@271 $generated@@274) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@148 $generated@@275) (= ($generated@@271 $generated@@275) $generated@@65)))
 :pattern ( ($generated@@148 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@142) ($generated@@154 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@144) (= (type $generated@@278) $generated@@144)) (= $generated@@276 ($generated@@229 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@154 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@142)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@142) ($generated@@141 $generated@@289)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@144) (= $generated@@289 ($generated@@287 $generated@@290)))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@141 $generated@@289))
)))
(assert (forall (($generated@@292 Int) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@142)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@142) ($generated@@148 $generated@@293)) (exists (($generated@@294 Int) ) (= $generated@@293 ($generated@@291 $generated@@294))))
 :pattern ( ($generated@@148 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@144)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@68) (= (type $generated@@299) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@295 $generated@@297) $generated@@298 $generated@@299) ($generated@@78 $generated@@297 $generated@@298 $generated@@299)))
 :pattern ( ($generated@@265 ($generated@@295 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@301) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@302) $generated@@144)) (= (type $generated@@303) $generated@@68)) ($generated@@136 $generated@@300 $generated@@301)) ($generated@@265 $generated@@302 $generated@@303 $generated@@300)) ($generated@@265 $generated@@302 $generated@@303 $generated@@301))
 :pattern ( ($generated@@136 $generated@@300 $generated@@301) ($generated@@265 $generated@@302 $generated@@303 $generated@@300))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@304) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@305) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@307) $generated@@68)) ($generated@@136 $generated@@304 $generated@@305)) ($generated@@78 $generated@@306 $generated@@307 $generated@@304)) ($generated@@78 $generated@@306 $generated@@307 $generated@@305))
 :pattern ( ($generated@@136 $generated@@304 $generated@@305) ($generated@@78 $generated@@306 $generated@@307 $generated@@304))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@80 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@83 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@80 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@85 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert (forall (($generated@@315 T@U) ) (! (= (type ($generated@@314 $generated@@315)) $generated@@73)
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@68) (and (= ($generated@@76 ($generated@@240 $generated@@316)) $generated@@64) (= ($generated@@314 ($generated@@240 $generated@@316)) $generated@@67)))
 :pattern ( ($generated@@240 $generated@@316))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@80 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@85 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@80 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@85 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@353) $generated@@68) (= (type $generated@@354) $generated@@142)) (or ($generated@@239 $generated@@353 $generated@@354) (and (not (= 0 $generated@@237)) ($generated@@152 $generated@@354 ($generated@@240 $generated@@353))))) true)
 :pattern ( ($generated@@238 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@83 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@80 $generated@@356 $generated@@2)) (= ($generated@@169 $generated@@355) (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@356) (and (<= 0 ($generated ($generated@@85 $generated@@355 $generated@@357))) (<= ($generated ($generated@@85 $generated@@355 $generated@@357)) ($generated@@308 $generated@@355))))
 :pattern ( ($generated@@85 $generated@@355 $generated@@357))
)))))
 :pattern ( ($generated@@169 $generated@@355))
)))
(assert  (=> (<= 0 $generated@@237) (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@358) $generated@@68) (= (type $generated@@359) $generated@@142)) (or ($generated@@239 $generated@@358 ($generated@@260 $generated@@359)) (and (not (= 0 $generated@@237)) ($generated@@152 $generated@@359 ($generated@@240 $generated@@358))))) (= ($generated@@238 $generated@@358 ($generated@@260 $generated@@359)) ($generated@@0 ($generated@@260 ($generated@@11 ($generated@@148 ($generated@@260 $generated@@359)))))))
 :weight 3
 :pattern ( ($generated@@238 $generated@@358 ($generated@@260 $generated@@359)))
))))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@321 (type $generated@@360))))
(let (($generated@@362 ($generated@@320 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@319 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@318 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@317 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@80 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(let (($generated@@369 ($generated@@320 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@319 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@318 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@339 (type $generated@@371))))
(let (($generated@@373 ($generated@@338 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@337 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@336 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@335 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@339 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@80 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(let (($generated@@380 ($generated@@338 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@337 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@336 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@382) $generated@@142) (= (type $generated@@383) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@383) (and ($generated@@148 $generated@@382) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@68) ($generated@@78 $generated@@382 ($generated@@240 $generated@@384) $generated@@383))
 :pattern ( ($generated@@78 $generated@@382 ($generated@@240 $generated@@384) $generated@@383))
))))) ($generated@@78 ($generated@@8 ($generated@@149 $generated@@382)) $generated@@46 $generated@@383))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@149 $generated@@382)) $generated@@46 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@386) $generated@@68)) (= ($generated@@152 $generated@@385 ($generated@@168 $generated@@386)) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@385 $generated@@387)))) ($generated@@230 $generated@@387 $generated@@386))
 :pattern ( ($generated@@85 $generated@@385 $generated@@387))
))))
 :pattern ( ($generated@@152 $generated@@385 ($generated@@168 $generated@@386)))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) $generated@@68) (= (type $generated@@389) $generated@@144)) (= (type $generated@@390) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@264 $generated@@390)) (= ($generated@@78 ($generated@@287 $generated@@389) ($generated@@240 $generated@@388) $generated@@390) ($generated@@265 $generated@@389 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@78 ($generated@@287 $generated@@389) ($generated@@240 $generated@@388) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 Int) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) $generated@@68) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@264 $generated@@393)) (= ($generated@@78 ($generated@@291 $generated@@392) ($generated@@240 $generated@@391) $generated@@393) ($generated@@78 ($generated@@8 $generated@@392) $generated@@46 $generated@@393)))
 :pattern ( ($generated@@78 ($generated@@291 $generated@@392) ($generated@@240 $generated@@391) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@142) ($generated@@394 $generated@@395)) (or ($generated@@141 $generated@@395) ($generated@@148 $generated@@395)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@397) $generated@@68)) (= (type $generated@@398) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@396 ($generated@@248 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@144) ($generated@@0 ($generated@@85 $generated@@396 $generated@@399))) ($generated@@265 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@85 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@78 $generated@@396 ($generated@@248 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@80 $generated@@144 $generated@@4)) (= (type $generated@@401) $generated@@68)) (= (type $generated@@402) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@400 ($generated@@253 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@144) ($generated@@0 ($generated@@85 $generated@@400 $generated@@403))) ($generated@@265 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@85 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@78 $generated@@400 ($generated@@253 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@85 ($generated@@309 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@85 ($generated@@309 $generated@@405) $generated@@404)))
)))
(assert  (and (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@406 $generated@@409)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@406 $generated@@409))
)) (forall (($generated@@410 T@T) ($generated@@411 T@U) ) (! (= (type ($generated@@407 $generated@@410 $generated@@411)) $generated@@410)
 :pattern ( ($generated@@407 $generated@@410 $generated@@411))
))) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@321 (type $generated@@412))))
(let (($generated@@414 ($generated@@320 (type $generated@@412))))
(= (type ($generated@@408 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@408 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@416) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@406 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@415) ($generated@@162 ($generated@@407 $generated@@142 $generated@@416)))) (= ($generated@@85 ($generated@@408 $generated@@415) ($generated@@162 ($generated@@407 $generated@@142 $generated@@416))) ($generated@@163 ($generated@@407 $generated@@142 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@406 $generated@@415) $generated@@416))
)))
(assert  (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@419)) ($generated@@80 $generated@@144 $generated@@4))
 :pattern ( ($generated@@417 $generated@@419))
)) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@339 (type $generated@@420))))
(let (($generated@@422 ($generated@@338 (type $generated@@420))))
(= (type ($generated@@418 $generated@@420)) ($generated@@80 $generated@@422 $generated@@421))))
 :pattern ( ($generated@@418 $generated@@420))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@424) $generated@@144)) (= ($generated@@0 ($generated@@85 ($generated@@417 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@423) ($generated@@162 ($generated@@407 $generated@@142 $generated@@424)))) (= ($generated@@85 ($generated@@418 $generated@@423) ($generated@@162 ($generated@@407 $generated@@142 $generated@@424))) ($generated@@163 ($generated@@407 $generated@@142 $generated@@424))))))
 :pattern ( ($generated@@85 ($generated@@417 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@320 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@319 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@85 ($generated@@364 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@85 ($generated@@317 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@85 ($generated@@408 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@425) $generated@@429))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@85 ($generated@@364 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@338 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@337 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@85 ($generated@@335 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@85 ($generated@@418 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@418 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@438) $generated@@442))) (and ($generated@@265 ($generated@@85 ($generated@@408 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@265 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@438) $generated@@442))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@68)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@447) $generated@@68)) (= (type $generated@@448) $generated@@68)) (= (type $generated@@449) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@446) $generated@@450))) (and ($generated@@265 ($generated@@85 ($generated@@418 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@265 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@85 ($generated@@418 $generated@@446) $generated@@450))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@78 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (= (type $generated@@451) $generated@@68) (= (type $generated@@452) $generated@@142)) ($generated@@152 $generated@@452 ($generated@@240 $generated@@451))) (or ($generated@@141 $generated@@452) ($generated@@148 $generated@@452)))
 :pattern ( ($generated@@148 $generated@@452) ($generated@@152 $generated@@452 ($generated@@240 $generated@@451)))
 :pattern ( ($generated@@141 $generated@@452) ($generated@@152 $generated@@452 ($generated@@240 $generated@@451)))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@453) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@454) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@455) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@453 $generated@@455))) (and ($generated@@136 $generated@@453 $generated@@454) ($generated@@136 $generated@@454 $generated@@455))) ($generated@@136 $generated@@453 $generated@@455))
 :pattern ( ($generated@@136 $generated@@453 $generated@@454) ($generated@@136 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@T) ) (! (= (type ($generated@@456 $generated@@457)) ($generated@@80 $generated@@457 $generated@@4))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@339 (type $generated@@458))))
(let (($generated@@460 ($generated@@338 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@337 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@336 $generated@@460 $generated@@459)) (= ($generated@@335 $generated@@458) ($generated@@456 $generated@@460))))))
 :pattern ( ($generated@@335 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@339 (type $generated@@461))))
(let (($generated@@463 ($generated@@338 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@337 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@336 $generated@@463 $generated@@462)) (= ($generated@@375 $generated@@461) ($generated@@456 $generated@@462))))))
 :pattern ( ($generated@@375 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@339 (type $generated@@464))))
(let (($generated@@466 ($generated@@338 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@337 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@336 $generated@@466 $generated@@465)) (= ($generated@@417 $generated@@464) ($generated@@456 $generated@@144))))))
 :pattern ( ($generated@@417 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@321 (type $generated@@467))))
(let (($generated@@469 ($generated@@320 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@319 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@318 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@144) (= (type $generated@@471) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@406 $generated@@467) ($generated@@295 ($generated@@229 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@406 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@339 (type $generated@@472))))
(let (($generated@@474 ($generated@@338 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@337 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@336 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@144) (= (type $generated@@476) $generated@@144)) ($generated@@0 ($generated@@85 ($generated@@417 $generated@@472) ($generated@@295 ($generated@@229 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@417 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@144) ($generated@@230 $generated@@477 $generated@@46)) (and (= ($generated@@295 ($generated@@407 $generated@@2 $generated@@477)) $generated@@477) ($generated@@152 ($generated@@407 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@144) ($generated@@230 $generated@@478 $generated@@47)) (and (= ($generated@@295 ($generated@@407 $generated@@3 $generated@@478)) $generated@@478) ($generated@@152 ($generated@@407 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@144) ($generated@@230 $generated@@479 $generated@@44)) (and (= ($generated@@295 ($generated@@407 $generated@@4 $generated@@479)) $generated@@479) ($generated@@152 ($generated@@407 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 20))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@144) ($generated@@230 $generated@@481 $generated@@45)) (and (= ($generated@@295 ($generated@@407 $generated@@480 $generated@@481)) $generated@@481) ($generated@@152 ($generated@@407 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@68) (= ($generated@@230 ($generated@@295 $generated@@482) $generated@@483) ($generated@@152 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@230 ($generated@@295 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@83 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@80 $generated@@485 $generated@@2)) (<= 0 ($generated@@308 $generated@@484))))
 :pattern ( ($generated@@308 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@282 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@281 $generated@@487)) (<= 0 ($generated@@280 $generated@@486))))
 :pattern ( ($generated@@280 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@435 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@435 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@435 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@435 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@496 $generated@@497)) $generated@@58))
 :pattern ( ($generated@@435 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@498 ($generated@@443 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@443 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@443 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@443 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@68) (= (type $generated@@507) $generated@@68)) (= ($generated@@76 ($generated@@443 $generated@@506 $generated@@507)) $generated@@59))
 :pattern ( ($generated@@443 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@144) (= (type $generated@@509) $generated@@144)) (= ($generated@@271 ($generated@@229 $generated@@508 $generated@@509)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@68) (= (type $generated@@513) $generated@@68)) (= ($generated@@510 ($generated@@155 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@155 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@68) (= (type $generated@@517) $generated@@68)) (= ($generated@@514 ($generated@@155 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@155 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@144) (= (type $generated@@519) $generated@@144)) (= ($generated@@162 ($generated@@229 $generated@@518 $generated@@519)) $generated@@518))
 :pattern ( ($generated@@229 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@144) (= (type $generated@@521) $generated@@144)) (= ($generated@@163 ($generated@@229 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@229 $generated@@520 $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@282 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@281 $generated@@144)) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@280 $generated@@528))) ($generated@@265 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@78 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@533 Int) ) (! (= ($generated@@532 ($generated@@79 $generated@@533)) $generated@@533)
 :pattern ( ($generated@@79 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@534 ($generated@@248 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@248 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@76 ($generated@@248 $generated@@537)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@538 ($generated@@253 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@253 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@68) (= ($generated@@76 ($generated@@253 $generated@@541)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@542 ($generated@@168 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@168 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@68) (= ($generated@@76 ($generated@@168 $generated@@545)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@68) (= ($generated@@546 ($generated@@522 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@522 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@76 ($generated@@522 $generated@@549)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@144) (= ($generated@@271 ($generated@@287 $generated@@550)) $generated@@63))
 :pattern ( ($generated@@287 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@240 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@240 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@144) (= ($generated@@143 ($generated@@287 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@287 $generated@@554))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@271 ($generated@@291 $generated@@555)) $generated@@65)
 :pattern ( ($generated@@291 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@149 ($generated@@291 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@291 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@407 $generated@@558 ($generated@@295 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@295 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@68)) (= ($generated@@152 $generated@@559 ($generated@@435 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@317 $generated@@559) $generated@@562))) (and ($generated@@230 ($generated@@85 ($generated@@408 $generated@@559) $generated@@562) $generated@@561) ($generated@@230 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@85 ($generated@@408 $generated@@559) $generated@@562))
 :pattern ( ($generated@@85 ($generated@@317 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@152 $generated@@559 ($generated@@435 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@68)) (= ($generated@@152 $generated@@563 ($generated@@443 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@144) ($generated@@0 ($generated@@85 ($generated@@335 $generated@@563) $generated@@566))) (and ($generated@@230 ($generated@@85 ($generated@@418 $generated@@563) $generated@@566) $generated@@565) ($generated@@230 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@85 ($generated@@418 $generated@@563) $generated@@566))
 :pattern ( ($generated@@85 ($generated@@335 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@152 $generated@@563 ($generated@@443 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@144)) (= ($generated@@152 ($generated@@287 $generated@@568) ($generated@@240 $generated@@567)) ($generated@@230 $generated@@568 $generated@@567)))
 :pattern ( ($generated@@152 ($generated@@287 $generated@@568) ($generated@@240 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@152 ($generated@@291 $generated@@570) ($generated@@240 $generated@@569)) ($generated@@152 ($generated@@8 $generated@@570) $generated@@46)))
 :pattern ( ($generated@@152 ($generated@@291 $generated@@570) ($generated@@240 $generated@@569)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@144) (= (type $generated@@574) $generated@@144)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@229 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@229 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@144) (= (type $generated@@576) $generated@@144)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@229 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@229 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@144) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) $generated@@68)) ($generated@@230 $generated@@577 ($generated@@435 $generated@@578 $generated@@579))) (and (= ($generated@@295 ($generated@@407 ($generated@@319 $generated@@144 $generated@@144) $generated@@577)) $generated@@577) ($generated@@152 ($generated@@407 ($generated@@319 $generated@@144 $generated@@144) $generated@@577) ($generated@@435 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@230 $generated@@577 ($generated@@435 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@144) (= (type $generated@@581) $generated@@68)) (= (type $generated@@582) $generated@@68)) ($generated@@230 $generated@@580 ($generated@@443 $generated@@581 $generated@@582))) (and (= ($generated@@295 ($generated@@407 ($generated@@337 $generated@@144 $generated@@144) $generated@@580)) $generated@@580) ($generated@@152 ($generated@@407 ($generated@@337 $generated@@144 $generated@@144) $generated@@580) ($generated@@443 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@230 $generated@@580 ($generated@@443 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@68) (= (type $generated@@584) $generated@@68)) (= (type $generated@@585) $generated@@144)) ($generated@@230 $generated@@585 ($generated@@155 $generated@@583 $generated@@584))) (and (= ($generated@@295 ($generated@@407 $generated@@142 $generated@@585)) $generated@@585) ($generated@@152 ($generated@@407 $generated@@142 $generated@@585) ($generated@@155 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@230 $generated@@585 ($generated@@155 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@144) (< ($generated@@571 $generated@@586) ($generated@@572 ($generated@@287 $generated@@586))))
 :pattern ( ($generated@@287 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@142) (= (type $generated@@588) $generated@@68)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@589) (and ($generated@@141 $generated@@587) ($generated@@78 $generated@@587 ($generated@@240 $generated@@588) $generated@@589)))) ($generated@@265 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@265 ($generated@@143 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (! (let (($generated@@591 (type $generated@@590)))
 (not ($generated@@0 ($generated@@85 ($generated@@456 $generated@@591) $generated@@590))))
 :pattern ( (let (($generated@@591 (type $generated@@590)))
($generated@@85 ($generated@@456 $generated@@591) $generated@@590)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (and (= ($generated@@76 ($generated@@155 $generated@@592 $generated@@593)) $generated@@62) (= ($generated@@314 ($generated@@155 $generated@@592 $generated@@593)) $generated@@66)))
 :pattern ( ($generated@@155 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@142) (= ($generated@@571 ($generated@@295 $generated@@594)) ($generated@@572 $generated@@594)))
 :pattern ( ($generated@@571 ($generated@@295 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@144) ($generated@@230 $generated@@595 ($generated@@79 0))) (and (= ($generated@@295 ($generated@@407 $generated@@2 $generated@@595)) $generated@@595) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@595) ($generated@@79 0))))
 :pattern ( ($generated@@230 $generated@@595 ($generated@@79 0)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@144) (= (type $generated@@597) $generated@@68)) ($generated@@230 $generated@@596 ($generated@@248 $generated@@597))) (and (= ($generated@@295 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@596)) $generated@@596) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@596) ($generated@@248 $generated@@597))))
 :pattern ( ($generated@@230 $generated@@596 ($generated@@248 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@144) (= (type $generated@@599) $generated@@68)) ($generated@@230 $generated@@598 ($generated@@253 $generated@@599))) (and (= ($generated@@295 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@598)) $generated@@598) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@4) $generated@@598) ($generated@@253 $generated@@599))))
 :pattern ( ($generated@@230 $generated@@598 ($generated@@253 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@144) (= (type $generated@@601) $generated@@68)) ($generated@@230 $generated@@600 ($generated@@168 $generated@@601))) (and (= ($generated@@295 ($generated@@407 ($generated@@80 $generated@@144 $generated@@2) $generated@@600)) $generated@@600) ($generated@@152 ($generated@@407 ($generated@@80 $generated@@144 $generated@@2) $generated@@600) ($generated@@168 $generated@@601))))
 :pattern ( ($generated@@230 $generated@@600 ($generated@@168 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@144) (= (type $generated@@603) $generated@@68)) ($generated@@230 $generated@@602 ($generated@@522 $generated@@603))) (and (= ($generated@@295 ($generated@@407 ($generated@@281 $generated@@144) $generated@@602)) $generated@@602) ($generated@@152 ($generated@@407 ($generated@@281 $generated@@144) $generated@@602) ($generated@@522 $generated@@603))))
 :pattern ( ($generated@@230 $generated@@602 ($generated@@522 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (= (type $generated@@604) $generated@@68) (= (type $generated@@605) $generated@@144)) ($generated@@230 $generated@@605 ($generated@@240 $generated@@604))) (and (= ($generated@@295 ($generated@@407 $generated@@142 $generated@@605)) $generated@@605) ($generated@@152 ($generated@@407 $generated@@142 $generated@@605) ($generated@@240 $generated@@604))))
 :pattern ( ($generated@@230 $generated@@605 ($generated@@240 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@606) ($generated@@80 $generated@@144 $generated@@2)) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@606 ($generated@@168 $generated@@607) $generated@@608) (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@144) (< 0 ($generated ($generated@@85 $generated@@606 $generated@@609)))) ($generated@@265 $generated@@609 $generated@@607 $generated@@608))
 :pattern ( ($generated@@85 $generated@@606 $generated@@609))
))))
 :pattern ( ($generated@@78 $generated@@606 ($generated@@168 $generated@@607) $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@142) (= (type $generated@@611) $generated@@68)) (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@612) (and ($generated@@154 $generated@@610) (exists (($generated@@613 T@U) ) (!  (and (= (type $generated@@613) $generated@@68) ($generated@@78 $generated@@610 ($generated@@155 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@78 $generated@@610 ($generated@@155 $generated@@611 $generated@@613) $generated@@612))
))))) ($generated@@265 ($generated@@162 $generated@@610) $generated@@611 $generated@@612))
 :pattern ( ($generated@@265 ($generated@@162 $generated@@610) $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) $generated@@142) (= (type $generated@@615) $generated@@68)) (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@264 $generated@@616) (and ($generated@@154 $generated@@614) (exists (($generated@@617 T@U) ) (!  (and (= (type $generated@@617) $generated@@68) ($generated@@78 $generated@@614 ($generated@@155 $generated@@617 $generated@@615) $generated@@616))
 :pattern ( ($generated@@78 $generated@@614 ($generated@@155 $generated@@617 $generated@@615) $generated@@616))
))))) ($generated@@265 ($generated@@163 $generated@@614) $generated@@615 $generated@@616))
 :pattern ( ($generated@@265 ($generated@@163 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@144) (= (type $generated@@619) $generated@@144)) (= ($generated@@229 ($generated@@260 $generated@@618) ($generated@@260 $generated@@619)) ($generated@@260 ($generated@@229 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@229 ($generated@@260 $generated@@618) ($generated@@260 $generated@@619)))
)))
(assert (forall (($generated@@620 Int) ) (! (= ($generated@@295 ($generated@@8 ($generated@@258 $generated@@620))) ($generated@@260 ($generated@@295 ($generated@@8 $generated@@620))))
 :pattern ( ($generated@@295 ($generated@@8 ($generated@@258 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@144) (= ($generated@@287 ($generated@@260 $generated@@621)) ($generated@@260 ($generated@@287 $generated@@621))))
 :pattern ( ($generated@@287 ($generated@@260 $generated@@621)))
)))
(assert (forall (($generated@@622 Int) ) (! (= ($generated@@291 ($generated@@258 $generated@@622)) ($generated@@260 ($generated@@291 $generated@@622)))
 :pattern ( ($generated@@291 ($generated@@258 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@295 ($generated@@260 $generated@@623)) ($generated@@260 ($generated@@295 $generated@@623)))
 :pattern ( ($generated@@295 ($generated@@260 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@282 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@281 $generated@@625)) (= ($generated@@280 $generated@@624) 0)) (= $generated@@624 ($generated@@279 $generated@@625))))
 :pattern ( ($generated@@280 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@80 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@308 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@308 $generated@@626) ($generated ($generated@@85 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@308 ($generated@@86 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@2)) ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@3)) ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@635) $generated@@4)) ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@78 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@637) $generated@@480)) ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@78 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@639) $generated@@144)) ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@78 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@281 $generated@@144)) (= (type $generated@@641) $generated@@68)) (= ($generated@@152 $generated@@640 ($generated@@522 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@280 $generated@@640))) ($generated@@230 ($generated@@523 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@523 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@152 $generated@@640 ($generated@@522 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@281 $generated@@144)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@280 $generated@@644))) (< ($generated@@572 ($generated@@407 $generated@@142 ($generated@@523 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@572 ($generated@@407 $generated@@142 ($generated@@523 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@319 $generated@@144 $generated@@144)) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) $generated@@68)) ($generated@@152 $generated@@646 ($generated@@435 $generated@@647 $generated@@648))) (and (and ($generated@@152 ($generated@@317 $generated@@646) ($generated@@248 $generated@@647)) ($generated@@152 ($generated@@364 $generated@@646) ($generated@@248 $generated@@648))) ($generated@@152 ($generated@@406 $generated@@646) ($generated@@248 ($generated@@155 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@152 $generated@@646 ($generated@@435 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@337 $generated@@144 $generated@@144)) (= (type $generated@@650) $generated@@68)) (= (type $generated@@651) $generated@@68)) ($generated@@152 $generated@@649 ($generated@@443 $generated@@650 $generated@@651))) (and (and ($generated@@152 ($generated@@335 $generated@@649) ($generated@@253 $generated@@650)) ($generated@@152 ($generated@@375 $generated@@649) ($generated@@253 $generated@@651))) ($generated@@152 ($generated@@417 $generated@@649) ($generated@@253 ($generated@@155 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@152 $generated@@649 ($generated@@443 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@152 $generated@@652 $generated@@46))
 :pattern ( ($generated@@152 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@152 $generated@@653 $generated@@47))
 :pattern ( ($generated@@152 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@152 $generated@@654 $generated@@44))
 :pattern ( ($generated@@152 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@480) ($generated@@152 $generated@@655 $generated@@45))
 :pattern ( ($generated@@152 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@144) ($generated@@152 $generated@@656 $generated@@48))
 :pattern ( ($generated@@152 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 (T@U) Bool)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () T@U)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () T@U)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@657) $generated@@142) (= (type $generated@@658) $generated@@142)) (= (type $generated@@669) $generated@@142)) (= (type $generated@@670) $generated@@68)) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@672) $generated@@142)) (= (type $generated@@665) $generated@@81)) (= (type $generated@@666) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@659) $generated@@144)) (= (type $generated@@660) $generated@@68)) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@664) $generated@@144)) (= (type $generated@@668) $generated@@142)) (= (type $generated@@673) ($generated@@175 $generated@@81 $generated@@4))) (= (type $generated@@674) $generated@@142)) (= (type $generated@@675) $generated@@142)) (= (type $generated@@676) $generated@@142)) (= (type $generated@@677) $generated@@142)) (= (type $generated@@678) $generated@@142)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@679  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@140 $generated@@657 ($generated@@291 ($generated@@258 5))))))
(let (($generated@@680  (=> (not ($generated@@238 $generated@@46 $generated@@658)) (=> (and ($generated@@230 $generated@@659 $generated@@660) ($generated@@265 $generated@@659 $generated@@660 $generated@@661)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@141 $generated@@658)) (=> ($generated@@141 $generated@@658) (=> (and ($generated@@264 $generated@@662) ($generated@@663 $generated@@662)) (=> (and (and (and ($generated@@230 $generated@@664 $generated@@46) ($generated@@265 $generated@@664 $generated@@46 $generated@@662)) (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@81) (=> (and (not (= $generated@@681 $generated@@665)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@666 $generated@@681) $generated@@60))) (= ($generated@@85 $generated@@662 $generated@@681) ($generated@@85 $generated@@666 $generated@@681))))
 :pattern ( ($generated@@85 $generated@@662 $generated@@681))
))) (and (and ($generated@@136 $generated@@666 $generated@@662) (= $generated@@667 ($generated ($generated@@407 $generated@@2 $generated@@664)))) (and (= $generated@@657 $generated@@668) (= (ControlFlow 0 5) 2)))) $generated@@679))))))))
(let (($generated@@682  (=> ($generated@@238 $generated@@46 $generated@@658) (=> (and ($generated@@152 $generated@@669 ($generated@@240 $generated@@670)) ($generated@@78 $generated@@669 ($generated@@240 $generated@@670) $generated@@661)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@148 $generated@@658)) (=> ($generated@@148 $generated@@658) (=> (and ($generated@@264 $generated@@671) ($generated@@663 $generated@@671)) (=> (and (and (and ($generated@@152 $generated@@672 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@672 ($generated@@240 $generated@@46) $generated@@671)) (and ($generated@@148 $generated@@672) (= ($generated@@149 $generated@@672) ($generated@@149 $generated@@658)))) (and (and (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@81) (=> (and (not (= $generated@@683 $generated@@665)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@666 $generated@@683) $generated@@60))) (= ($generated@@85 $generated@@671 $generated@@683) ($generated@@85 $generated@@666 $generated@@683))))
 :pattern ( ($generated@@85 $generated@@671 $generated@@683))
)) ($generated@@136 $generated@@666 $generated@@671)) (and (= $generated@@657 $generated@@672) (= (ControlFlow 0 3) 2)))) $generated@@679))))))))
(let (($generated@@684  (=> (= $generated@@673 ($generated@@174 $generated@@665 $generated@@661 $generated@@60 false)) (=> (and (and (and ($generated@@152 $generated@@674 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@674 ($generated@@240 $generated@@46) $generated@@661)) (and ($generated@@152 $generated@@675 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@675 ($generated@@240 $generated@@46) $generated@@661))) (and (and ($generated@@152 $generated@@676 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@676 ($generated@@240 $generated@@46) $generated@@661)) (and ($generated@@264 $generated@@666) ($generated@@663 $generated@@666)))) (=> (and (and (and (and ($generated@@152 $generated@@658 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@658 ($generated@@240 $generated@@46) $generated@@666)) ($generated@@394 $generated@@658)) (and ($generated@@140 $generated@@658 ($generated@@291 ($generated@@258 5))) (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@81) (=> (and (not (= $generated@@685 $generated@@665)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@661 $generated@@685) $generated@@60))) (= ($generated@@85 $generated@@666 $generated@@685) ($generated@@85 $generated@@661 $generated@@685))))
 :pattern ( ($generated@@85 $generated@@666 $generated@@685))
)))) (and (and ($generated@@136 $generated@@661 $generated@@666) ($generated@@78 $generated@@658 ($generated@@240 $generated@@46) $generated@@666)) (and ($generated@@239 $generated@@46 $generated@@658) ($generated@@239 $generated@@46 $generated@@658)))) (and (=> (= (ControlFlow 0 7) 3) $generated@@682) (=> (= (ControlFlow 0 7) 5) $generated@@680)))))))
(let (($generated@@686  (=> (and (and (and (and ($generated@@264 $generated@@661) ($generated@@663 $generated@@661)) (and ($generated@@152 $generated@@668 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@668 ($generated@@240 $generated@@46) $generated@@661))) (and (and ($generated@@152 $generated@@677 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@677 ($generated@@240 $generated@@46) $generated@@661)) true)) (and (and (and ($generated@@152 $generated@@678 ($generated@@240 $generated@@46)) ($generated@@78 $generated@@678 ($generated@@240 $generated@@46) $generated@@661)) true) (and (= 2 $generated@@237) (= (ControlFlow 0 8) 7)))) $generated@@684)))
$generated@@686))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
