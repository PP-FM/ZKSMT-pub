(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@271 (Int) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@67)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@67)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@80 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@70 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@80) (= (type $generated@@208) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@209) ($generated@@69 $generated@@4))) (= (type $generated@@211) $generated@@80)) (= (type $generated@@212) ($generated@@69 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (= (type $generated@@215) $generated@@67))
(assert (forall (($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@139) ($generated@@135 $generated@@216 $generated@@215)) ($generated@@214 $generated@@216))
 :pattern ( ($generated@@214 $generated@@216) ($generated@@135 $generated@@216 $generated@@215))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@139)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@148)) (= (type $generated@@224) $generated@@148)) (= ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@139) (= (type $generated@@226) $generated@@139)) (= ($generated@@145 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@145 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@139) (= (type $generated@@229) $generated@@139)) (= ($generated@@227 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@67)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@233) $generated@@67)) (= ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@148) ($generated@@0 ($generated@@84 $generated@@232 $generated@@234))) ($generated@@218 $generated@@234 $generated@@233))
 :pattern ( ($generated@@84 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@148) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@218 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@67) (= (type $generated@@249) $generated@@67)) (= (type $generated@@250) $generated@@148)) (= (type $generated@@251) $generated@@148)) (= (type $generated@@252) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@246 $generated@@252)) (= ($generated@@77 ($generated@@217 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@77 ($generated@@217 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@71)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@139) (= ($generated@@137 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@139) (= ($generated@@214 $generated@@256) (= ($generated@@253 $generated@@256) $generated@@63)))
 :pattern ( ($generated@@214 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@139) ($generated@@137 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@148) (= (type $generated@@259) $generated@@148)) (= $generated@@257 ($generated@@217 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@137 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@139) (= (type $generated@@270) $generated@@139)) true) (= ($generated@@227 $generated@@269 $generated@@270) (= ($generated@@268 $generated@@269) ($generated@@268 $generated@@270))))
 :pattern ( ($generated@@227 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 Int) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@139)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@139) ($generated@@214 $generated@@273)) (exists (($generated@@274 Int) ) (= $generated@@273 ($generated@@271 $generated@@274))))
 :pattern ( ($generated@@214 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@148)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@247 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@247 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@79 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@82 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@79 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@84 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@79 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@82 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@79 $generated@@323 $generated@@2)) (= ($generated@@154 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@84 $generated@@322 $generated@@324))) (<= ($generated ($generated@@84 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@84 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@154 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@148) ($generated@@218 $generated@@328 $generated@@215)) (and (= ($generated@@275 ($generated@@325 $generated@@139 $generated@@328)) $generated@@328) ($generated@@135 ($generated@@325 $generated@@139 $generated@@328) $generated@@215)))
 :pattern ( ($generated@@218 $generated@@328 $generated@@215))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@79 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@79 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@84 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@352) $generated@@67)) (= ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@351 $generated@@353)))) ($generated@@218 $generated@@353 $generated@@352))
 :pattern ( ($generated@@84 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)))
)))
(assert (forall (($generated@@354 Int) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@246 $generated@@355)) (= ($generated@@77 ($generated@@271 $generated@@354) $generated@@215 $generated@@355) ($generated@@77 ($generated@@8 $generated@@354) $generated@@46 $generated@@355)))
 :pattern ( ($generated@@77 ($generated@@271 $generated@@354) $generated@@215 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@148) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@247 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@148) ($generated@@0 ($generated@@84 $generated@@360 $generated@@363))) ($generated@@247 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@84 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@84 ($generated@@281 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@84 ($generated@@281 $generated@@365) $generated@@364)))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@290 (type $generated@@369))))
(let (($generated@@371 ($generated@@289 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@373) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@372) ($generated@@146 ($generated@@325 $generated@@139 $generated@@373)))) (= ($generated@@84 ($generated@@367 $generated@@372) ($generated@@146 ($generated@@325 $generated@@139 $generated@@373))) ($generated@@147 ($generated@@325 $generated@@139 $generated@@373))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@308 (type $generated@@377))))
(let (($generated@@379 ($generated@@307 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@381) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@380) ($generated@@146 ($generated@@325 $generated@@139 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@146 ($generated@@325 $generated@@139 $generated@@381))) ($generated@@147 ($generated@@325 $generated@@139 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@289 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@288 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@84 ($generated@@333 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@382) $generated@@386))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@84 ($generated@@333 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@307 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@306 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@344 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@344 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@67)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))) (and ($generated@@247 ($generated@@84 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@247 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))) (and ($generated@@247 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@247 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@79 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@308 (type $generated@@410))))
(let (($generated@@412 ($generated@@307 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@306 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@305 $generated@@412 $generated@@411)) (= ($generated@@304 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@304 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@308 (type $generated@@413))))
(let (($generated@@415 ($generated@@307 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@306 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@305 $generated@@415 $generated@@414)) (= ($generated@@344 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@344 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@308 (type $generated@@416))))
(let (($generated@@418 ($generated@@307 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@306 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@305 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@148))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@290 (type $generated@@419))))
(let (($generated@@421 ($generated@@289 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@288 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@287 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@148) (= (type $generated@@423) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@419) ($generated@@275 ($generated@@217 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@308 (type $generated@@424))))
(let (($generated@@426 ($generated@@307 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@306 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@305 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@148) (= (type $generated@@428) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@424) ($generated@@275 ($generated@@217 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@148) ($generated@@218 $generated@@429 $generated@@46)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@429)) $generated@@429) ($generated@@135 ($generated@@325 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@148) ($generated@@218 $generated@@430 $generated@@47)) (and (= ($generated@@275 ($generated@@325 $generated@@3 $generated@@430)) $generated@@430) ($generated@@135 ($generated@@325 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@148) ($generated@@218 $generated@@431 $generated@@44)) (and (= ($generated@@275 ($generated@@325 $generated@@4 $generated@@431)) $generated@@431) ($generated@@135 ($generated@@325 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@148) ($generated@@218 $generated@@433 $generated@@45)) (and (= ($generated@@275 ($generated@@325 $generated@@432 $generated@@433)) $generated@@433) ($generated@@135 ($generated@@325 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@67) (= ($generated@@218 ($generated@@275 $generated@@434) $generated@@435) ($generated@@135 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@218 ($generated@@275 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@82 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@79 $generated@@437 $generated@@2)) (<= 0 ($generated@@280 $generated@@436))))
 :pattern ( ($generated@@280 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@263 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@262 $generated@@439)) (<= 0 ($generated@@261 $generated@@438))))
 :pattern ( ($generated@@261 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@392 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@392 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@392 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@75 ($generated@@392 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@400 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@400 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@148) (= (type $generated@@461) $generated@@148)) (= ($generated@@253 ($generated@@217 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@217 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@138 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@138 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@138 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@138 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@148) (= (type $generated@@471) $generated@@148)) (= ($generated@@146 ($generated@@217 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@217 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@148) (= (type $generated@@473) $generated@@148)) (= ($generated@@147 ($generated@@217 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@217 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@263 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@262 $generated@@148)) (= (type $generated@@481) $generated@@67)) (= (type $generated@@482) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@261 $generated@@480))) ($generated@@247 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@77 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@78 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@78 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@230 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@230 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@235 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@235 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@153 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@153 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@153 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@253 ($generated@@271 $generated@@502)) $generated@@63)
 :pattern ( ($generated@@271 $generated@@502))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@268 ($generated@@271 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@271 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@325 $generated@@505 ($generated@@275 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@275 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@135 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@506) $generated@@509))) (and ($generated@@218 ($generated@@84 ($generated@@367 $generated@@506) $generated@@509) $generated@@508) ($generated@@218 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@506) $generated@@509))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@135 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@135 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@510) $generated@@513))) (and ($generated@@218 ($generated@@84 ($generated@@375 $generated@@510) $generated@@513) $generated@@512) ($generated@@218 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@510) $generated@@513))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@135 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) (= (type $generated@@517) $generated@@148)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@217 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@217 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@148) (= (type $generated@@519) $generated@@148)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@217 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@217 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@135 ($generated@@271 $generated@@520) $generated@@215) ($generated@@135 ($generated@@8 $generated@@520) $generated@@46))
 :pattern ( ($generated@@135 ($generated@@271 $generated@@520) $generated@@215))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@67)) ($generated@@218 $generated@@521 ($generated@@392 $generated@@522 $generated@@523))) (and (= ($generated@@275 ($generated@@325 ($generated@@288 $generated@@148 $generated@@148) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@325 ($generated@@288 $generated@@148 $generated@@148) $generated@@521) ($generated@@392 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@218 $generated@@521 ($generated@@392 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@148) (= (type $generated@@525) $generated@@67)) (= (type $generated@@526) $generated@@67)) ($generated@@218 $generated@@524 ($generated@@400 $generated@@525 $generated@@526))) (and (= ($generated@@275 ($generated@@325 ($generated@@306 $generated@@148 $generated@@148) $generated@@524)) $generated@@524) ($generated@@135 ($generated@@325 ($generated@@306 $generated@@148 $generated@@148) $generated@@524) ($generated@@400 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@218 $generated@@524 ($generated@@400 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@148)) ($generated@@218 $generated@@529 ($generated@@138 $generated@@527 $generated@@528))) (and (= ($generated@@275 ($generated@@325 $generated@@139 $generated@@529)) $generated@@529) ($generated@@135 ($generated@@325 $generated@@139 $generated@@529) ($generated@@138 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@218 $generated@@529 ($generated@@138 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@84 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@84 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@72)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@67) (= (type $generated@@535) $generated@@67)) (and (= ($generated@@75 ($generated@@138 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@138 $generated@@534 $generated@@535)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@139) (= (type $generated@@537) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@537) (and ($generated@@214 $generated@@536) ($generated@@77 $generated@@536 $generated@@215 $generated@@537)))) ($generated@@77 ($generated@@8 ($generated@@268 $generated@@536)) $generated@@46 $generated@@537))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@268 $generated@@536)) $generated@@46 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@139) (= ($generated@@514 ($generated@@275 $generated@@538)) ($generated@@515 $generated@@538)))
 :pattern ( ($generated@@514 ($generated@@275 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@148) ($generated@@218 $generated@@539 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@539)) $generated@@539) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@539) ($generated@@78 0))))
 :pattern ( ($generated@@218 $generated@@539 ($generated@@78 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@148) (= (type $generated@@541) $generated@@67)) ($generated@@218 $generated@@540 ($generated@@230 $generated@@541))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@540)) $generated@@540) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@540) ($generated@@230 $generated@@541))))
 :pattern ( ($generated@@218 $generated@@540 ($generated@@230 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@148) (= (type $generated@@543) $generated@@67)) ($generated@@218 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@542)) $generated@@542) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@218 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@148) (= (type $generated@@545) $generated@@67)) ($generated@@218 $generated@@544 ($generated@@153 $generated@@545))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@2) $generated@@544)) $generated@@544) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@2) $generated@@544) ($generated@@153 $generated@@545))))
 :pattern ( ($generated@@218 $generated@@544 ($generated@@153 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@148) (= (type $generated@@547) $generated@@67)) ($generated@@218 $generated@@546 ($generated@@474 $generated@@547))) (and (= ($generated@@275 ($generated@@325 ($generated@@262 $generated@@148) $generated@@546)) $generated@@546) ($generated@@135 ($generated@@325 ($generated@@262 $generated@@148) $generated@@546) ($generated@@474 $generated@@547))))
 :pattern ( ($generated@@218 $generated@@546 ($generated@@474 $generated@@547)))
)))
(assert (= ($generated@@75 $generated@@215) $generated@@64))
(assert (= ($generated@@532 $generated@@215) $generated@@66))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@549) $generated@@67)) (= (type $generated@@550) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@548 ($generated@@153 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@548 $generated@@551)))) ($generated@@247 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@84 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@77 $generated@@548 ($generated@@153 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@139) (= (type $generated@@553) $generated@@67)) (= (type $generated@@554) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@554) (and ($generated@@137 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@67) ($generated@@77 $generated@@552 ($generated@@138 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@77 $generated@@552 ($generated@@138 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@247 ($generated@@146 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@247 ($generated@@146 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@139) (= (type $generated@@557) $generated@@67)) (= (type $generated@@558) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@558) (and ($generated@@137 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@67) ($generated@@77 $generated@@556 ($generated@@138 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@77 $generated@@556 ($generated@@138 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@247 ($generated@@147 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@247 ($generated@@147 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@148) (= (type $generated@@561) $generated@@148)) (= ($generated@@217 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)) ($generated@@242 ($generated@@217 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@217 ($generated@@242 $generated@@560) ($generated@@242 $generated@@561)))
)))
(assert (forall (($generated@@562 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@240 $generated@@562))) ($generated@@242 ($generated@@275 ($generated@@8 $generated@@562))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@240 $generated@@562))))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@271 ($generated@@240 $generated@@563)) ($generated@@242 ($generated@@271 $generated@@563)))
 :pattern ( ($generated@@271 ($generated@@240 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@275 ($generated@@242 $generated@@564)) ($generated@@242 ($generated@@275 $generated@@564)))
 :pattern ( ($generated@@275 ($generated@@242 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@263 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@262 $generated@@566)) (= ($generated@@261 $generated@@565) 0)) (= $generated@@565 ($generated@@260 $generated@@566))))
 :pattern ( ($generated@@261 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@79 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@280 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@280 $generated@@567) ($generated ($generated@@84 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@280 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@2)) ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@3)) ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@4)) ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@432)) ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@148)) ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@262 $generated@@148)) (= (type $generated@@582) $generated@@67)) (= ($generated@@135 $generated@@581 ($generated@@474 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@261 $generated@@581))) ($generated@@218 ($generated@@475 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@475 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@135 $generated@@581 ($generated@@474 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@262 $generated@@148)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@261 $generated@@585))) (< ($generated@@515 ($generated@@325 $generated@@139 ($generated@@475 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@515 ($generated@@325 $generated@@139 ($generated@@475 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@67)) ($generated@@135 $generated@@587 ($generated@@392 $generated@@588 $generated@@589))) (and (and ($generated@@135 ($generated@@286 $generated@@587) ($generated@@230 $generated@@588)) ($generated@@135 ($generated@@333 $generated@@587) ($generated@@230 $generated@@589))) ($generated@@135 ($generated@@366 $generated@@587) ($generated@@230 ($generated@@138 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@135 $generated@@587 ($generated@@392 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@135 $generated@@590 ($generated@@400 $generated@@591 $generated@@592))) (and (and ($generated@@135 ($generated@@304 $generated@@590) ($generated@@235 $generated@@591)) ($generated@@135 ($generated@@344 $generated@@590) ($generated@@235 $generated@@592))) ($generated@@135 ($generated@@374 $generated@@590) ($generated@@235 ($generated@@138 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@135 $generated@@590 ($generated@@400 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@135 $generated@@593 $generated@@46))
 :pattern ( ($generated@@135 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@135 $generated@@594 $generated@@47))
 :pattern ( ($generated@@135 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@135 $generated@@595 $generated@@44))
 :pattern ( ($generated@@135 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@432) ($generated@@135 $generated@@596 $generated@@45))
 :pattern ( ($generated@@135 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@148) ($generated@@135 $generated@@597 $generated@@48))
 :pattern ( ($generated@@135 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(assert  (and (and (and (= (type $generated@@598) ($generated@@160 $generated@@80 $generated@@4)) (= (type $generated@@599) $generated@@80)) (= (type $generated@@600) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@602) $generated@@139)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@604  (=> (and ($generated@@214 ($generated@@242 ($generated@@271 ($generated@@240 0)))) (= (ControlFlow 0 3) (- 0 2))) (>= ($generated@@240 ($generated@@268 ($generated@@242 ($generated@@271 ($generated@@240 0))))) ($generated@@240 0)))))
(let (($generated@@605 true))
(let (($generated@@606  (=> (= $generated@@598 ($generated@@159 $generated@@599 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@605) (=> (= (ControlFlow 0 4) 3) $generated@@604)))))
(let (($generated@@607  (=> (and (and (and ($generated@@246 $generated@@600) ($generated@@601 $generated@@600)) ($generated@@135 $generated@@602 $generated@@215)) (and (= 1 $generated@@603) (= (ControlFlow 0 5) 4))) $generated@@606)))
$generated@@607)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@276 (Int) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@80 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@69) (= (type $generated@@145) $generated@@69)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@69)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@81 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@69)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@82 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@72 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@82) (= (type $generated@@210) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@211) ($generated@@71 $generated@@4))) (= (type $generated@@213) $generated@@82)) (= (type $generated@@214) ($generated@@71 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert  (and (= (type $generated@@216) $generated@@69) (= (type $generated@@217) $generated@@69)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (= (type $generated@@218) $generated@@141) (= (type $generated@@219) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@218 $generated@@216 $generated@@219) ($generated@@79 $generated@@218 $generated@@217 $generated@@219)))
 :pattern ( ($generated@@79 $generated@@218 $generated@@216 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@141) ($generated@@137 $generated@@221 $generated@@217)) ($generated@@220 $generated@@221))
 :pattern ( ($generated@@220 $generated@@221) ($generated@@137 $generated@@221 $generated@@217))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@141)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@69) (= (type $generated@@227) $generated@@69)) (= (type $generated@@228) $generated@@150)) (= (type $generated@@229) $generated@@150)) (= ($generated@@137 ($generated@@222 $generated@@228 $generated@@229) ($generated@@140 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@137 ($generated@@222 $generated@@228 $generated@@229) ($generated@@140 $generated@@226 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@141) (= (type $generated@@231) $generated@@141)) (= ($generated@@147 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@147 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@141) (= (type $generated@@234) $generated@@141)) (= ($generated@@232 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@69)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@81 $generated@@150 $generated@@4)) (= (type $generated@@238) $generated@@69)) (= ($generated@@137 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@150) ($generated@@0 ($generated@@86 $generated@@237 $generated@@239))) ($generated@@223 $generated@@239 $generated@@238))
 :pattern ( ($generated@@86 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@137 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@69)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@81 $generated@@150 $generated@@4)) (= (type $generated@@243) $generated@@69)) (= ($generated@@137 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@150) ($generated@@0 ($generated@@86 $generated@@242 $generated@@244))) ($generated@@223 $generated@@244 $generated@@243))
 :pattern ( ($generated@@86 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@137 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@245 $generated@@246) $generated@@246)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@69) (= (type $generated@@254) $generated@@69)) (= (type $generated@@255) $generated@@150)) (= (type $generated@@256) $generated@@150)) (= (type $generated@@257) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@251 $generated@@257)) (= ($generated@@79 ($generated@@222 $generated@@255 $generated@@256) ($generated@@140 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@79 ($generated@@222 $generated@@255 $generated@@256) ($generated@@140 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@73)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@141) (= ($generated@@139 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@141) (= ($generated@@220 $generated@@261) (= ($generated@@258 $generated@@261) $generated@@63)))
 :pattern ( ($generated@@220 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@141) ($generated@@139 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@150) (= (type $generated@@264) $generated@@150)) (= $generated@@262 ($generated@@222 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@139 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (= (type $generated@@274) $generated@@141) (= (type $generated@@275) $generated@@141)) true) (= ($generated@@232 $generated@@274 $generated@@275) (= ($generated@@273 $generated@@274) ($generated@@273 $generated@@275))))
 :pattern ( ($generated@@232 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 Int) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@141)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@141) ($generated@@220 $generated@@278)) (exists (($generated@@279 Int) ) (= $generated@@278 ($generated@@276 $generated@@279))))
 :pattern ( ($generated@@220 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@150)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@69) (= (type $generated@@284) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@252 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@79 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@252 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@81 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@84 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@81 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@86 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@81 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@86 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@86 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@81 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@86 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@86 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@84 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@81 $generated@@328 $generated@@2)) (= ($generated@@156 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@86 $generated@@327 $generated@@329))) (<= ($generated ($generated@@86 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@86 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@156 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@150) ($generated@@223 $generated@@333 $generated@@217)) (and (= ($generated@@280 ($generated@@330 $generated@@141 $generated@@333)) $generated@@333) ($generated@@137 ($generated@@330 $generated@@141 $generated@@333) $generated@@217)))
 :pattern ( ($generated@@223 $generated@@333 $generated@@217))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@150) ($generated@@223 $generated@@334 $generated@@216)) (and (= ($generated@@280 ($generated@@330 $generated@@141 $generated@@334)) $generated@@334) ($generated@@137 ($generated@@330 $generated@@141 $generated@@334) $generated@@216)))
 :pattern ( ($generated@@223 $generated@@334 $generated@@216))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@295 (type $generated@@335))))
(let (($generated@@337 ($generated@@294 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@293 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@292 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@86 ($generated@@291 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@291 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@295 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@295 (type $generated@@342))))
(let (($generated@@344 ($generated@@294 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@293 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@292 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@86 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@313 (type $generated@@346))))
(let (($generated@@348 ($generated@@312 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@311 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@310 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@309 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@313 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@81 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@313 (type $generated@@353))))
(let (($generated@@355 ($generated@@312 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@311 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@310 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@86 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@81 $generated@@150 $generated@@2)) (= (type $generated@@358) $generated@@69)) (= ($generated@@137 $generated@@357 ($generated@@155 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@150) (< 0 ($generated ($generated@@86 $generated@@357 $generated@@359)))) ($generated@@223 $generated@@359 $generated@@358))
 :pattern ( ($generated@@86 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@137 $generated@@357 ($generated@@155 $generated@@358)))
)))
(assert (forall (($generated@@360 Int) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@251 $generated@@361)) (= ($generated@@79 ($generated@@276 $generated@@360) $generated@@217 $generated@@361) ($generated@@79 ($generated@@8 $generated@@360) $generated@@46 $generated@@361)))
 :pattern ( ($generated@@79 ($generated@@276 $generated@@360) $generated@@217 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@81 $generated@@150 $generated@@4)) (= (type $generated@@363) $generated@@69)) (= (type $generated@@364) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@362 ($generated@@235 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@150) ($generated@@0 ($generated@@86 $generated@@362 $generated@@365))) ($generated@@252 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@86 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@79 $generated@@362 ($generated@@235 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@81 $generated@@150 $generated@@4)) (= (type $generated@@367) $generated@@69)) (= (type $generated@@368) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@366 ($generated@@240 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@0 ($generated@@86 $generated@@366 $generated@@369))) ($generated@@252 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@86 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@79 $generated@@366 ($generated@@240 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@86 ($generated@@286 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@86 ($generated@@286 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@81 $generated@@150 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@295 (type $generated@@375))))
(let (($generated@@377 ($generated@@294 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@81 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@379) $generated@@150)) (= ($generated@@0 ($generated@@86 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@86 ($generated@@291 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379)))) (= ($generated@@86 ($generated@@373 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@379))))))
 :pattern ( ($generated@@86 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@81 $generated@@150 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@313 (type $generated@@383))))
(let (($generated@@385 ($generated@@312 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@81 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@387) $generated@@150)) (= ($generated@@0 ($generated@@86 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@86 ($generated@@309 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387)))) (= ($generated@@86 ($generated@@381 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@387))))))
 :pattern ( ($generated@@86 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@294 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@293 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@86 ($generated@@339 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@86 ($generated@@291 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@86 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@86 ($generated@@291 $generated@@388) $generated@@392))
 :pattern ( ($generated@@86 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@86 ($generated@@339 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@312 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@311 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@86 ($generated@@350 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@86 ($generated@@309 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@86 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@393) $generated@@397))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@86 ($generated@@350 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@69)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@402) $generated@@69)) (= (type $generated@@403) $generated@@69)) (= (type $generated@@404) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@150) ($generated@@0 ($generated@@86 ($generated@@291 $generated@@401) $generated@@405))) (and ($generated@@252 ($generated@@86 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@252 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@86 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@86 ($generated@@291 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@79 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@69)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@410) $generated@@69)) (= (type $generated@@411) $generated@@69)) (= (type $generated@@412) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@150) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@409) $generated@@413))) (and ($generated@@252 ($generated@@86 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@252 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@79 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (= (type $generated@@414) $generated@@141) (= ($generated@@137 $generated@@414 $generated@@216)  (and ($generated@@137 $generated@@414 $generated@@217) (>= ($generated@@273 $generated@@414) ($generated@@245 0)))))
 :pattern ( ($generated@@137 $generated@@414 $generated@@216))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@81 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@313 (type $generated@@417))))
(let (($generated@@419 ($generated@@312 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@311 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@310 $generated@@419 $generated@@418)) (= ($generated@@309 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@309 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@313 (type $generated@@420))))
(let (($generated@@422 ($generated@@312 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@311 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@310 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@313 (type $generated@@423))))
(let (($generated@@425 ($generated@@312 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@311 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@310 $generated@@425 $generated@@424)) (= ($generated@@380 $generated@@423) ($generated@@415 $generated@@150))))))
 :pattern ( ($generated@@380 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@295 (type $generated@@426))))
(let (($generated@@428 ($generated@@294 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@293 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@292 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@150) (= (type $generated@@430) $generated@@150)) ($generated@@0 ($generated@@86 ($generated@@372 $generated@@426) ($generated@@280 ($generated@@222 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@372 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@313 (type $generated@@431))))
(let (($generated@@433 ($generated@@312 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@311 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@310 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@150) (= (type $generated@@435) $generated@@150)) ($generated@@0 ($generated@@86 ($generated@@380 $generated@@431) ($generated@@280 ($generated@@222 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@380 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@150) ($generated@@223 $generated@@436 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@330 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@150) ($generated@@223 $generated@@437 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@437)) $generated@@437) ($generated@@137 ($generated@@330 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@150) ($generated@@223 $generated@@438 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@330 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@223 $generated@@440 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@439 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@330 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@69) (= ($generated@@223 ($generated@@280 $generated@@441) $generated@@442) ($generated@@137 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@223 ($generated@@280 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@84 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@81 $generated@@444 $generated@@2)) (<= 0 ($generated@@285 $generated@@443))))
 :pattern ( ($generated@@285 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@268 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@267 $generated@@446)) (<= 0 ($generated@@266 $generated@@445))))
 :pattern ( ($generated@@266 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@69)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@69) (= (type $generated@@450) $generated@@69)) (= ($generated@@447 ($generated@@398 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@398 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@69)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@69) (= (type $generated@@454) $generated@@69)) (= ($generated@@451 ($generated@@398 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@398 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@69) (= (type $generated@@456) $generated@@69)) (= ($generated@@77 ($generated@@398 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@69)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@69) (= (type $generated@@460) $generated@@69)) (= ($generated@@457 ($generated@@406 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@406 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@69)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@69) (= (type $generated@@464) $generated@@69)) (= ($generated@@461 ($generated@@406 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@406 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@69) (= (type $generated@@466) $generated@@69)) (= ($generated@@77 ($generated@@406 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@258 ($generated@@222 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@140 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@140 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@140 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@140 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@150) (= (type $generated@@478) $generated@@150)) (= ($generated@@148 ($generated@@222 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@222 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@150) (= (type $generated@@480) $generated@@150)) (= ($generated@@149 ($generated@@222 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@222 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@268 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@267 $generated@@150)) (= (type $generated@@488) $generated@@69)) (= (type $generated@@489) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@266 $generated@@487))) ($generated@@252 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@79 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@80 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@80 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@69)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@69) (= ($generated@@493 ($generated@@235 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@69) (= ($generated@@77 ($generated@@235 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@69)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@69) (= ($generated@@497 ($generated@@240 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@240 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@69) (= ($generated@@77 ($generated@@240 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@69) (= ($generated@@501 ($generated@@155 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@155 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@69) (= ($generated@@77 ($generated@@155 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@69) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@69) (= ($generated@@77 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 Int) ) (! (= ($generated@@258 ($generated@@276 $generated@@509)) $generated@@63)
 :pattern ( ($generated@@276 $generated@@509))
)))
(assert (forall (($generated@@510 Int) ) (! (= ($generated@@273 ($generated@@276 $generated@@510)) $generated@@510)
 :pattern ( ($generated@@276 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@330 $generated@@512 ($generated@@280 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@280 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@514) $generated@@69)) (= (type $generated@@515) $generated@@69)) (= ($generated@@137 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) ($generated@@0 ($generated@@86 ($generated@@291 $generated@@513) $generated@@516))) (and ($generated@@223 ($generated@@86 ($generated@@373 $generated@@513) $generated@@516) $generated@@515) ($generated@@223 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@86 ($generated@@373 $generated@@513) $generated@@516))
 :pattern ( ($generated@@86 ($generated@@291 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@137 $generated@@513 ($generated@@398 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@518) $generated@@69)) (= (type $generated@@519) $generated@@69)) (= ($generated@@137 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@517) $generated@@520))) (and ($generated@@223 ($generated@@86 ($generated@@381 $generated@@517) $generated@@520) $generated@@519) ($generated@@223 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@86 ($generated@@381 $generated@@517) $generated@@520))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@137 $generated@@517 ($generated@@406 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@150) (= (type $generated@@524) $generated@@150)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@222 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@222 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@150)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@222 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@222 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 Int) ) (! (= ($generated@@137 ($generated@@276 $generated@@527) $generated@@217) ($generated@@137 ($generated@@8 $generated@@527) $generated@@46))
 :pattern ( ($generated@@137 ($generated@@276 $generated@@527) $generated@@217))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@150) (= (type $generated@@529) $generated@@69)) (= (type $generated@@530) $generated@@69)) ($generated@@223 $generated@@528 ($generated@@398 $generated@@529 $generated@@530))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@528)) $generated@@528) ($generated@@137 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@528) ($generated@@398 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@223 $generated@@528 ($generated@@398 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@69)) (= (type $generated@@533) $generated@@69)) ($generated@@223 $generated@@531 ($generated@@406 $generated@@532 $generated@@533))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@531)) $generated@@531) ($generated@@137 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@531) ($generated@@406 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@223 $generated@@531 ($generated@@406 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@69) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@150)) ($generated@@223 $generated@@536 ($generated@@140 $generated@@534 $generated@@535))) (and (= ($generated@@280 ($generated@@330 $generated@@141 $generated@@536)) $generated@@536) ($generated@@137 ($generated@@330 $generated@@141 $generated@@536) ($generated@@140 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@223 $generated@@536 ($generated@@140 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@86 ($generated@@415 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@86 ($generated@@415 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@74)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@69) (= (type $generated@@542) $generated@@69)) (and (= ($generated@@77 ($generated@@140 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@140 $generated@@541 $generated@@542)) $generated@@66)))
 :pattern ( ($generated@@140 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@141) (= (type $generated@@544) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@251 $generated@@544) (and ($generated@@220 $generated@@543) ($generated@@79 $generated@@543 $generated@@217 $generated@@544)))) ($generated@@79 ($generated@@8 ($generated@@273 $generated@@543)) $generated@@46 $generated@@544))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@273 $generated@@543)) $generated@@46 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@141) (= ($generated@@521 ($generated@@280 $generated@@545)) ($generated@@522 $generated@@545)))
 :pattern ( ($generated@@521 ($generated@@280 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@150) ($generated@@223 $generated@@546 ($generated@@80 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@546)) $generated@@546) ($generated@@137 ($generated@@330 ($generated@@81 $generated@@150 $generated@@4) $generated@@546) ($generated@@80 0))))
 :pattern ( ($generated@@223 $generated@@546 ($generated@@80 0)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@150) (= (type $generated@@548) $generated@@69)) ($generated@@223 $generated@@547 ($generated@@235 $generated@@548))) (and (= ($generated@@280 ($generated@@330 ($generated@@81 $generated@@150 $generated@@4) $generated@@547)) $generated@@547) ($generated@@137 ($generated@@330 ($generated@@81 $generated@@150 $generated@@4) $generated@@547) ($generated@@235 $generated@@548))))
 :pattern ( ($generated@@223 $generated@@547 ($generated@@235 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@150) (= (type $generated@@550) $generated@@69)) ($generated@@223 $generated@@549 ($generated@@240 $generated@@550))) (and (= ($generated@@280 ($generated@@330 ($generated@@81 $generated@@150 $generated@@4) $generated@@549)) $generated@@549) ($generated@@137 ($generated@@330 ($generated@@81 $generated@@150 $generated@@4) $generated@@549) ($generated@@240 $generated@@550))))
 :pattern ( ($generated@@223 $generated@@549 ($generated@@240 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@150) (= (type $generated@@552) $generated@@69)) ($generated@@223 $generated@@551 ($generated@@155 $generated@@552))) (and (= ($generated@@280 ($generated@@330 ($generated@@81 $generated@@150 $generated@@2) $generated@@551)) $generated@@551) ($generated@@137 ($generated@@330 ($generated@@81 $generated@@150 $generated@@2) $generated@@551) ($generated@@155 $generated@@552))))
 :pattern ( ($generated@@223 $generated@@551 ($generated@@155 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@150) (= (type $generated@@554) $generated@@69)) ($generated@@223 $generated@@553 ($generated@@481 $generated@@554))) (and (= ($generated@@280 ($generated@@330 ($generated@@267 $generated@@150) $generated@@553)) $generated@@553) ($generated@@137 ($generated@@330 ($generated@@267 $generated@@150) $generated@@553) ($generated@@481 $generated@@554))))
 :pattern ( ($generated@@223 $generated@@553 ($generated@@481 $generated@@554)))
)))
(assert (= ($generated@@77 $generated@@217) $generated@@64))
(assert (= ($generated@@539 $generated@@217) $generated@@67))
(assert (= ($generated@@77 $generated@@216) $generated@@65))
(assert (= ($generated@@539 $generated@@216) $generated@@68))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@81 $generated@@150 $generated@@2)) (= (type $generated@@556) $generated@@69)) (= (type $generated@@557) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@555 ($generated@@155 $generated@@556) $generated@@557) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@150) (< 0 ($generated ($generated@@86 $generated@@555 $generated@@558)))) ($generated@@252 $generated@@558 $generated@@556 $generated@@557))
 :pattern ( ($generated@@86 $generated@@555 $generated@@558))
))))
 :pattern ( ($generated@@79 $generated@@555 ($generated@@155 $generated@@556) $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@141) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@251 $generated@@561) (and ($generated@@139 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@69) ($generated@@79 $generated@@559 ($generated@@140 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@79 $generated@@559 ($generated@@140 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@252 ($generated@@148 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@252 ($generated@@148 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@141) (= (type $generated@@564) $generated@@69)) (= (type $generated@@565) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@251 $generated@@565) (and ($generated@@139 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@69) ($generated@@79 $generated@@563 ($generated@@140 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@79 $generated@@563 ($generated@@140 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@252 ($generated@@149 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@252 ($generated@@149 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@150)) (= ($generated@@222 ($generated@@247 $generated@@567) ($generated@@247 $generated@@568)) ($generated@@247 ($generated@@222 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@222 ($generated@@247 $generated@@567) ($generated@@247 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@245 $generated@@569))) ($generated@@247 ($generated@@280 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@245 $generated@@569))))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@276 ($generated@@245 $generated@@570)) ($generated@@247 ($generated@@276 $generated@@570)))
 :pattern ( ($generated@@276 ($generated@@245 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@280 ($generated@@247 $generated@@571)) ($generated@@247 ($generated@@280 $generated@@571)))
 :pattern ( ($generated@@280 ($generated@@247 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@268 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@267 $generated@@573)) (= ($generated@@266 $generated@@572) 0)) (= $generated@@572 ($generated@@265 $generated@@573))))
 :pattern ( ($generated@@266 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@81 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@285 ($generated@@87 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@285 $generated@@574) ($generated ($generated@@86 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@285 ($generated@@87 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@579) $generated@@2)) ($generated@@79 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@79 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@581) $generated@@3)) ($generated@@79 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@79 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@583) $generated@@4)) ($generated@@79 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@79 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@585) $generated@@439)) ($generated@@79 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@79 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@587) $generated@@150)) ($generated@@79 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@79 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@267 $generated@@150)) (= (type $generated@@589) $generated@@69)) (= ($generated@@137 $generated@@588 ($generated@@481 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@266 $generated@@588))) ($generated@@223 ($generated@@482 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@482 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@137 $generated@@588 ($generated@@481 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@267 $generated@@150)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@266 $generated@@592))) (< ($generated@@522 ($generated@@330 $generated@@141 ($generated@@482 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@522 ($generated@@330 $generated@@141 ($generated@@482 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@595) $generated@@69)) (= (type $generated@@596) $generated@@69)) ($generated@@137 $generated@@594 ($generated@@398 $generated@@595 $generated@@596))) (and (and ($generated@@137 ($generated@@291 $generated@@594) ($generated@@235 $generated@@595)) ($generated@@137 ($generated@@339 $generated@@594) ($generated@@235 $generated@@596))) ($generated@@137 ($generated@@372 $generated@@594) ($generated@@235 ($generated@@140 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@137 $generated@@594 ($generated@@398 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@598) $generated@@69)) (= (type $generated@@599) $generated@@69)) ($generated@@137 $generated@@597 ($generated@@406 $generated@@598 $generated@@599))) (and (and ($generated@@137 ($generated@@309 $generated@@597) ($generated@@240 $generated@@598)) ($generated@@137 ($generated@@350 $generated@@597) ($generated@@240 $generated@@599))) ($generated@@137 ($generated@@380 $generated@@597) ($generated@@240 ($generated@@140 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@137 $generated@@597 ($generated@@406 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@137 $generated@@600 $generated@@46))
 :pattern ( ($generated@@137 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@137 $generated@@601 $generated@@47))
 :pattern ( ($generated@@137 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@137 $generated@@602 $generated@@44))
 :pattern ( ($generated@@137 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@439) ($generated@@137 $generated@@603 $generated@@45))
 :pattern ( ($generated@@137 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@150) ($generated@@137 $generated@@604 $generated@@48))
 :pattern ( ($generated@@137 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () Int)
(assert  (and (and (and (and (= (type $generated@@605) $generated@@141) (= (type $generated@@606) ($generated@@162 $generated@@82 $generated@@4))) (= (type $generated@@607) $generated@@82)) (= (type $generated@@608) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@610) $generated@@141)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@612  (=> (= $generated@@605 ($generated@@247 ($generated@@276 ($generated@@245 1)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (>= ($generated@@273 $generated@@605) ($generated@@245 0))) (=> (>= ($generated@@273 $generated@@605) ($generated@@245 0)) (=> (and ($generated@@220 ($generated@@247 ($generated@@276 ($generated@@245 1)))) (= (ControlFlow 0 3) (- 0 2))) ($generated@@0 ($generated@@247 ($generated@@11 (not (= ($generated@@273 ($generated@@247 ($generated@@276 ($generated@@245 1)))) 0)))))))))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (= $generated@@606 ($generated@@161 $generated@@607 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@613) (=> (= (ControlFlow 0 5) 3) $generated@@612)))))
(let (($generated@@615  (=> (and (and (and ($generated@@251 $generated@@608) ($generated@@609 $generated@@608)) ($generated@@137 $generated@@610 $generated@@216)) (and (= 2 $generated@@611) (= (ControlFlow 0 6) 5))) $generated@@614)))
$generated@@615)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@297 (Int) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (Int Int) Int)
(declare-fun $generated@@441 (T@T) T@U)
(declare-fun $generated@@465 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@547 (T@U) Int)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@82 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (= (type $generated@@145) $generated@@71)))
(assert  (=> (<= 3 $generated@@141) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@143) (or ($generated@@144 $generated@@146) (and (not (= 3 $generated@@141)) ($generated@@139 $generated@@146 $generated@@145)))) true)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@71) (= (type $generated@@152) $generated@@71)) (= (type $generated@@153) $generated@@143)) ($generated@@139 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@139 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@143) (= (type $generated@@161) $generated@@143)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@71)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@83 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@71)) ($generated@@139 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@139 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@84 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@74 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@84) (= (type $generated@@217) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@218) ($generated@@73 $generated@@4))) (= (type $generated@@220) $generated@@84)) (= (type $generated@@221) ($generated@@73 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@84 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@74 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@84) (= (type $generated@@229) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@230) ($generated@@73 $generated@@4))) (= (type $generated@@232) $generated@@84)) (= (type $generated@@233) ($generated@@73 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert  (and (= (type $generated@@235) $generated@@71) (= (type $generated@@236) $generated@@71)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@143) (= (type $generated@@238) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@237 $generated@@235 $generated@@238) ($generated@@81 $generated@@237 $generated@@236 $generated@@238)))
 :pattern ( ($generated@@81 $generated@@237 $generated@@235 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@143) (= (type $generated@@240) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@239 $generated@@145 $generated@@240) ($generated@@81 $generated@@239 $generated@@235 $generated@@240)))
 :pattern ( ($generated@@81 $generated@@239 $generated@@145 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@143) ($generated@@139 $generated@@242 $generated@@236)) ($generated@@241 $generated@@242))
 :pattern ( ($generated@@241 $generated@@242) ($generated@@139 $generated@@242 $generated@@236))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@143)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@71) (= (type $generated@@248) $generated@@71)) (= (type $generated@@249) $generated@@157)) (= (type $generated@@250) $generated@@157)) (= ($generated@@139 ($generated@@243 $generated@@249 $generated@@250) ($generated@@148 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@139 ($generated@@243 $generated@@249 $generated@@250) ($generated@@148 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@143) (= (type $generated@@252) $generated@@143)) (= ($generated@@154 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@154 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@143) (= (type $generated@@255) $generated@@143)) (= ($generated@@253 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@259) $generated@@71)) (= ($generated@@139 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@157) ($generated@@0 ($generated@@88 $generated@@258 $generated@@260))) ($generated@@244 $generated@@260 $generated@@259))
 :pattern ( ($generated@@88 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@139 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@264) $generated@@71)) (= ($generated@@139 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@157) ($generated@@0 ($generated@@88 $generated@@263 $generated@@265))) ($generated@@244 $generated@@265 $generated@@264))
 :pattern ( ($generated@@88 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@139 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@71) (= (type $generated@@275) $generated@@71)) (= (type $generated@@276) $generated@@157)) (= (type $generated@@277) $generated@@157)) (= (type $generated@@278) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@272 $generated@@278)) (= ($generated@@81 ($generated@@243 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@81 ($generated@@243 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@75)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@143) (= ($generated@@147 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@143) (= ($generated@@241 $generated@@282) (= ($generated@@279 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@241 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@143) ($generated@@147 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@157) (= (type $generated@@285) $generated@@157)) (= $generated@@283 ($generated@@243 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@147 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) true) (= ($generated@@253 $generated@@295 $generated@@296) (= ($generated@@294 $generated@@295) ($generated@@294 $generated@@296))))
 :pattern ( ($generated@@253 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 Int) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@143)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@143) ($generated@@241 $generated@@299)) (exists (($generated@@300 Int) ) (= $generated@@299 ($generated@@297 $generated@@300))))
 :pattern ( ($generated@@241 $generated@@299))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@157)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@71) (= (type $generated@@305) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@273 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@81 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@273 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@83 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@86 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@83 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@88 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@83 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@88 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@88 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@83 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@88 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@88 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@86 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@83 $generated@@349 $generated@@2)) (= ($generated@@163 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@88 $generated@@348 $generated@@350))) (<= ($generated ($generated@@88 $generated@@348 $generated@@350)) ($generated@@306 $generated@@348))))
 :pattern ( ($generated@@88 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@163 $generated@@348))
)))
(assert (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) ($generated@@244 $generated@@354 $generated@@236)) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@354)) $generated@@354) ($generated@@139 ($generated@@351 $generated@@143 $generated@@354) $generated@@236)))
 :pattern ( ($generated@@244 $generated@@354 $generated@@236))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@157) ($generated@@244 $generated@@355 $generated@@235)) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@355)) $generated@@355) ($generated@@139 ($generated@@351 $generated@@143 $generated@@355) $generated@@235)))
 :pattern ( ($generated@@244 $generated@@355 $generated@@235))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@157) ($generated@@244 $generated@@356 $generated@@145)) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@356)) $generated@@356) ($generated@@139 ($generated@@351 $generated@@143 $generated@@356) $generated@@145)))
 :pattern ( ($generated@@244 $generated@@356 $generated@@145))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@88 ($generated@@312 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@312 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@316 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@83 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@316 (type $generated@@364))))
(let (($generated@@366 ($generated@@315 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@314 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@313 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@88 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@334 (type $generated@@368))))
(let (($generated@@370 ($generated@@333 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@332 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@331 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@88 ($generated@@330 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@330 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@334 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@83 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@334 (type $generated@@375))))
(let (($generated@@377 ($generated@@333 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@332 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@331 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@88 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@83 $generated@@157 $generated@@2)) (= (type $generated@@380) $generated@@71)) (= ($generated@@139 $generated@@379 ($generated@@162 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@379 $generated@@381)))) ($generated@@244 $generated@@381 $generated@@380))
 :pattern ( ($generated@@88 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@139 $generated@@379 ($generated@@162 $generated@@380)))
)))
(assert (forall (($generated@@382 Int) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@272 $generated@@383)) (= ($generated@@81 ($generated@@297 $generated@@382) $generated@@236 $generated@@383) ($generated@@81 ($generated@@8 $generated@@382) $generated@@46 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@382) $generated@@236 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@143) (= ($generated@@139 $generated@@384 $generated@@145)  (and ($generated@@139 $generated@@384 $generated@@235) (not (= ($generated@@294 $generated@@384) 0)))))
 :pattern ( ($generated@@139 $generated@@384 $generated@@145))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@386) $generated@@71)) (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@385 ($generated@@256 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@157) ($generated@@0 ($generated@@88 $generated@@385 $generated@@388))) ($generated@@273 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@88 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@81 $generated@@385 ($generated@@256 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@390) $generated@@71)) (= (type $generated@@391) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@389 ($generated@@261 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@157) ($generated@@0 ($generated@@88 $generated@@389 $generated@@392))) ($generated@@273 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@88 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@81 $generated@@389 ($generated@@261 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@88 ($generated@@307 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@88 ($generated@@307 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@83 $generated@@157 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@316 (type $generated@@398))))
(let (($generated@@400 ($generated@@315 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@83 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@402) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@88 ($generated@@312 $generated@@401) ($generated@@155 ($generated@@351 $generated@@143 $generated@@402)))) (= ($generated@@88 ($generated@@396 $generated@@401) ($generated@@155 ($generated@@351 $generated@@143 $generated@@402))) ($generated@@156 ($generated@@351 $generated@@143 $generated@@402))))))
 :pattern ( ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@83 $generated@@157 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@334 (type $generated@@406))))
(let (($generated@@408 ($generated@@333 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@83 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@410) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@88 ($generated@@330 $generated@@409) ($generated@@155 ($generated@@351 $generated@@143 $generated@@410)))) (= ($generated@@88 ($generated@@404 $generated@@409) ($generated@@155 ($generated@@351 $generated@@143 $generated@@410))) ($generated@@156 ($generated@@351 $generated@@143 $generated@@410))))))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@315 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@314 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@88 ($generated@@361 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@88 ($generated@@312 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@88 ($generated@@312 $generated@@411) $generated@@415))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@88 ($generated@@361 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@333 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@332 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@88 ($generated@@372 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@88 ($generated@@330 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@88 ($generated@@330 $generated@@416) $generated@@420))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@88 ($generated@@372 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@71)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@425) $generated@@71)) (= (type $generated@@426) $generated@@71)) (= (type $generated@@427) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@312 $generated@@424) $generated@@428))) (and ($generated@@273 ($generated@@88 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@273 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@88 ($generated@@312 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@81 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@71)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@433) $generated@@71)) (= (type $generated@@434) $generated@@71)) (= (type $generated@@435) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@330 $generated@@432) $generated@@436))) (and ($generated@@273 ($generated@@88 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@273 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@88 ($generated@@330 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@81 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 Int) ($generated@@439 Int) ) (! (= ($generated@@437 $generated@@438 $generated@@439) (div $generated@@438 $generated@@439))
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@143) (= ($generated@@139 $generated@@440 $generated@@235)  (and ($generated@@139 $generated@@440 $generated@@236) (>= ($generated@@294 $generated@@440) ($generated@@266 0)))))
 :pattern ( ($generated@@139 $generated@@440 $generated@@235))
)))
(assert (forall (($generated@@442 T@T) ) (! (= (type ($generated@@441 $generated@@442)) ($generated@@83 $generated@@442 $generated@@4))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@334 (type $generated@@443))))
(let (($generated@@445 ($generated@@333 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@332 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@331 $generated@@445 $generated@@444)) (= ($generated@@330 $generated@@443) ($generated@@441 $generated@@445))))))
 :pattern ( ($generated@@330 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@334 (type $generated@@446))))
(let (($generated@@448 ($generated@@333 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@332 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@331 $generated@@448 $generated@@447)) (= ($generated@@372 $generated@@446) ($generated@@441 $generated@@447))))))
 :pattern ( ($generated@@372 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@334 (type $generated@@449))))
(let (($generated@@451 ($generated@@333 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@332 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@331 $generated@@451 $generated@@450)) (= ($generated@@403 $generated@@449) ($generated@@441 $generated@@157))))))
 :pattern ( ($generated@@403 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@316 (type $generated@@452))))
(let (($generated@@454 ($generated@@315 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@314 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@313 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@157) (= (type $generated@@456) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@395 $generated@@452) ($generated@@301 ($generated@@243 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@395 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@334 (type $generated@@457))))
(let (($generated@@459 ($generated@@333 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@332 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@331 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@157) (= (type $generated@@461) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@403 $generated@@457) ($generated@@301 ($generated@@243 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@403 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@157) ($generated@@244 $generated@@462 $generated@@46)) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@462)) $generated@@462) ($generated@@139 ($generated@@351 $generated@@2 $generated@@462) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@462 $generated@@46))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@157) ($generated@@244 $generated@@463 $generated@@47)) (and (= ($generated@@301 ($generated@@351 $generated@@3 $generated@@463)) $generated@@463) ($generated@@139 ($generated@@351 $generated@@3 $generated@@463) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@463 $generated@@47))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) ($generated@@244 $generated@@464 $generated@@44)) (and (= ($generated@@301 ($generated@@351 $generated@@4 $generated@@464)) $generated@@464) ($generated@@139 ($generated@@351 $generated@@4 $generated@@464) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@464 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@465) 20))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@157) ($generated@@244 $generated@@466 $generated@@45)) (and (= ($generated@@301 ($generated@@351 $generated@@465 $generated@@466)) $generated@@466) ($generated@@139 ($generated@@351 $generated@@465 $generated@@466) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@466 $generated@@45))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@71) (= ($generated@@244 ($generated@@301 $generated@@467) $generated@@468) ($generated@@139 $generated@@467 $generated@@468)))
 :pattern ( ($generated@@244 ($generated@@301 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@86 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@83 $generated@@470 $generated@@2)) (<= 0 ($generated@@306 $generated@@469))))
 :pattern ( ($generated@@306 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@289 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@288 $generated@@472)) (<= 0 ($generated@@287 $generated@@471))))
 :pattern ( ($generated@@287 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@71)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@71) (= (type $generated@@476) $generated@@71)) (= ($generated@@473 ($generated@@421 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@421 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@71)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@71) (= (type $generated@@480) $generated@@71)) (= ($generated@@477 ($generated@@421 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@71) (= (type $generated@@482) $generated@@71)) (= ($generated@@79 ($generated@@421 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@71)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@71) (= (type $generated@@486) $generated@@71)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@71)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@71) (= (type $generated@@490) $generated@@71)) (= ($generated@@487 ($generated@@429 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@429 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@71) (= (type $generated@@492) $generated@@71)) (= ($generated@@79 ($generated@@429 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@157) (= (type $generated@@494) $generated@@157)) (= ($generated@@279 ($generated@@243 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@71)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@71) (= (type $generated@@498) $generated@@71)) (= ($generated@@495 ($generated@@148 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@148 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@71)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@71) (= (type $generated@@502) $generated@@71)) (= ($generated@@499 ($generated@@148 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@148 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@157) (= (type $generated@@504) $generated@@157)) (= ($generated@@155 ($generated@@243 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@157) (= (type $generated@@506) $generated@@157)) (= ($generated@@156 ($generated@@243 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@71)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@289 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@288 $generated@@157)) (= (type $generated@@514) $generated@@71)) (= (type $generated@@515) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@287 $generated@@513))) ($generated@@273 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@81 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@82 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@82 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@71)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@71) (= ($generated@@519 ($generated@@256 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@256 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@71) (= ($generated@@79 ($generated@@256 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@71)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@71) (= ($generated@@523 ($generated@@261 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@261 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@71) (= ($generated@@79 ($generated@@261 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@71)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@71) (= ($generated@@527 ($generated@@162 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@162 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@71) (= ($generated@@79 ($generated@@162 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@71) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@71) (= ($generated@@79 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@279 ($generated@@297 $generated@@535)) $generated@@63)
 :pattern ( ($generated@@297 $generated@@535))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@294 ($generated@@297 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@297 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
(= ($generated@@351 $generated@@538 ($generated@@301 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@301 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@540) $generated@@71)) (= (type $generated@@541) $generated@@71)) (= ($generated@@139 $generated@@539 ($generated@@421 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@312 $generated@@539) $generated@@542))) (and ($generated@@244 ($generated@@88 ($generated@@396 $generated@@539) $generated@@542) $generated@@541) ($generated@@244 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@539) $generated@@542))
 :pattern ( ($generated@@88 ($generated@@312 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@139 $generated@@539 ($generated@@421 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@543) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@544) $generated@@71)) (= (type $generated@@545) $generated@@71)) (= ($generated@@139 $generated@@543 ($generated@@429 $generated@@544 $generated@@545)) (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@330 $generated@@543) $generated@@546))) (and ($generated@@244 ($generated@@88 ($generated@@404 $generated@@543) $generated@@546) $generated@@545) ($generated@@244 $generated@@546 $generated@@544)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@543) $generated@@546))
 :pattern ( ($generated@@88 ($generated@@330 $generated@@543) $generated@@546))
))))
 :pattern ( ($generated@@139 $generated@@543 ($generated@@429 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@157) (= (type $generated@@550) $generated@@157)) (< ($generated@@547 $generated@@549) ($generated@@548 ($generated@@243 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@243 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@157) (= (type $generated@@552) $generated@@157)) (< ($generated@@547 $generated@@552) ($generated@@548 ($generated@@243 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@243 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@139 ($generated@@297 $generated@@553) $generated@@236) ($generated@@139 ($generated@@8 $generated@@553) $generated@@46))
 :pattern ( ($generated@@139 ($generated@@297 $generated@@553) $generated@@236))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@157) (= (type $generated@@555) $generated@@71)) (= (type $generated@@556) $generated@@71)) ($generated@@244 $generated@@554 ($generated@@421 $generated@@555 $generated@@556))) (and (= ($generated@@301 ($generated@@351 ($generated@@314 $generated@@157 $generated@@157) $generated@@554)) $generated@@554) ($generated@@139 ($generated@@351 ($generated@@314 $generated@@157 $generated@@157) $generated@@554) ($generated@@421 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@244 $generated@@554 ($generated@@421 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@157) (= (type $generated@@558) $generated@@71)) (= (type $generated@@559) $generated@@71)) ($generated@@244 $generated@@557 ($generated@@429 $generated@@558 $generated@@559))) (and (= ($generated@@301 ($generated@@351 ($generated@@332 $generated@@157 $generated@@157) $generated@@557)) $generated@@557) ($generated@@139 ($generated@@351 ($generated@@332 $generated@@157 $generated@@157) $generated@@557) ($generated@@429 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@244 $generated@@557 ($generated@@429 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@71) (= (type $generated@@561) $generated@@71)) (= (type $generated@@562) $generated@@157)) ($generated@@244 $generated@@562 ($generated@@148 $generated@@560 $generated@@561))) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@562)) $generated@@562) ($generated@@139 ($generated@@351 $generated@@143 $generated@@562) ($generated@@148 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@244 $generated@@562 ($generated@@148 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@88 ($generated@@441 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@88 ($generated@@441 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@76)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@71) (= (type $generated@@568) $generated@@71)) (and (= ($generated@@79 ($generated@@148 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@565 ($generated@@148 $generated@@567 $generated@@568)) $generated@@67)))
 :pattern ( ($generated@@148 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@143) (= (type $generated@@570) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@272 $generated@@570) (and ($generated@@241 $generated@@569) ($generated@@81 $generated@@569 $generated@@236 $generated@@570)))) ($generated@@81 ($generated@@8 ($generated@@294 $generated@@569)) $generated@@46 $generated@@570))
 :pattern ( ($generated@@81 ($generated@@8 ($generated@@294 $generated@@569)) $generated@@46 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@143) (= ($generated@@547 ($generated@@301 $generated@@571)) ($generated@@548 $generated@@571)))
 :pattern ( ($generated@@547 ($generated@@301 $generated@@571)))
)))
(assert  (=> (<= 3 $generated@@141) (forall (($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@143) (or ($generated@@144 $generated@@572) (and (not (= 3 $generated@@141)) ($generated@@139 $generated@@572 $generated@@145)))) (and (and ($generated@@241 $generated@@572) (=> (< ($generated@@266 0) ($generated@@294 $generated@@572)) ($generated@@241 $generated@@572))) (= ($generated@@142 $generated@@572) (> (ite (<= ($generated@@294 $generated@@572) ($generated@@266 0)) ($generated@@437 1 ($generated@@266 0)) ($generated@@294 $generated@@572)) 1))))
 :pattern ( ($generated@@142 $generated@@572))
))))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@157) ($generated@@244 $generated@@573 ($generated@@82 0))) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@573)) $generated@@573) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@573) ($generated@@82 0))))
 :pattern ( ($generated@@244 $generated@@573 ($generated@@82 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@157) (= (type $generated@@575) $generated@@71)) ($generated@@244 $generated@@574 ($generated@@256 $generated@@575))) (and (= ($generated@@301 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@574)) $generated@@574) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@574) ($generated@@256 $generated@@575))))
 :pattern ( ($generated@@244 $generated@@574 ($generated@@256 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@157) (= (type $generated@@577) $generated@@71)) ($generated@@244 $generated@@576 ($generated@@261 $generated@@577))) (and (= ($generated@@301 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@576)) $generated@@576) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@576) ($generated@@261 $generated@@577))))
 :pattern ( ($generated@@244 $generated@@576 ($generated@@261 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@157) (= (type $generated@@579) $generated@@71)) ($generated@@244 $generated@@578 ($generated@@162 $generated@@579))) (and (= ($generated@@301 ($generated@@351 ($generated@@83 $generated@@157 $generated@@2) $generated@@578)) $generated@@578) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@2) $generated@@578) ($generated@@162 $generated@@579))))
 :pattern ( ($generated@@244 $generated@@578 ($generated@@162 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@157) (= (type $generated@@581) $generated@@71)) ($generated@@244 $generated@@580 ($generated@@507 $generated@@581))) (and (= ($generated@@301 ($generated@@351 ($generated@@288 $generated@@157) $generated@@580)) $generated@@580) ($generated@@139 ($generated@@351 ($generated@@288 $generated@@157) $generated@@580) ($generated@@507 $generated@@581))))
 :pattern ( ($generated@@244 $generated@@580 ($generated@@507 $generated@@581)))
)))
(assert (= ($generated@@79 $generated@@236) $generated@@64))
(assert (= ($generated@@565 $generated@@236) $generated@@68))
(assert (= ($generated@@79 $generated@@235) $generated@@65))
(assert (= ($generated@@565 $generated@@235) $generated@@69))
(assert (= ($generated@@79 $generated@@145) $generated@@66))
(assert (= ($generated@@565 $generated@@145) $generated@@70))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@83 $generated@@157 $generated@@2)) (= (type $generated@@583) $generated@@71)) (= (type $generated@@584) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@582 ($generated@@162 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@582 $generated@@585)))) ($generated@@273 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@88 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@81 $generated@@582 ($generated@@162 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@143) (= (type $generated@@587) $generated@@71)) (= (type $generated@@588) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@272 $generated@@588) (and ($generated@@147 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@71) ($generated@@81 $generated@@586 ($generated@@148 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@81 $generated@@586 ($generated@@148 $generated@@587 $generated@@589) $generated@@588))
))))) ($generated@@273 ($generated@@155 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@273 ($generated@@155 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@143) (= (type $generated@@591) $generated@@71)) (= (type $generated@@592) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@272 $generated@@592) (and ($generated@@147 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@71) ($generated@@81 $generated@@590 ($generated@@148 $generated@@593 $generated@@591) $generated@@592))
 :pattern ( ($generated@@81 $generated@@590 ($generated@@148 $generated@@593 $generated@@591) $generated@@592))
))))) ($generated@@273 ($generated@@156 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@273 ($generated@@156 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@157) (= (type $generated@@595) $generated@@157)) (= ($generated@@243 ($generated@@268 $generated@@594) ($generated@@268 $generated@@595)) ($generated@@268 ($generated@@243 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@243 ($generated@@268 $generated@@594) ($generated@@268 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@266 $generated@@596))) ($generated@@268 ($generated@@301 ($generated@@8 $generated@@596))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@266 $generated@@596))))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@297 ($generated@@266 $generated@@597)) ($generated@@268 ($generated@@297 $generated@@597)))
 :pattern ( ($generated@@297 ($generated@@266 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@301 ($generated@@268 $generated@@598)) ($generated@@268 ($generated@@301 $generated@@598)))
 :pattern ( ($generated@@301 ($generated@@268 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@289 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@288 $generated@@600)) (= ($generated@@287 $generated@@599) 0)) (= $generated@@599 ($generated@@286 $generated@@600))))
 :pattern ( ($generated@@287 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@83 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@306 ($generated@@89 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@306 $generated@@601) ($generated ($generated@@88 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@306 ($generated@@89 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert  (=> (<= 3 $generated@@141) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@143) (or ($generated@@144 ($generated@@268 $generated@@605)) (and (not (= 3 $generated@@141)) ($generated@@139 $generated@@605 $generated@@145)))) (and (and ($generated@@241 ($generated@@268 $generated@@605)) (=> (< ($generated@@266 0) ($generated@@266 ($generated@@294 ($generated@@268 $generated@@605)))) ($generated@@241 ($generated@@268 $generated@@605)))) (= ($generated@@142 ($generated@@268 $generated@@605)) (> (ite (<= ($generated@@266 ($generated@@294 ($generated@@268 $generated@@605))) ($generated@@266 0)) ($generated@@437 1 ($generated@@266 0)) ($generated@@294 ($generated@@268 $generated@@605))) 1))))
 :weight 3
 :pattern ( ($generated@@142 ($generated@@268 $generated@@605)))
))))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@607) $generated@@2)) ($generated@@81 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@81 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@609) $generated@@3)) ($generated@@81 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@81 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@611) $generated@@4)) ($generated@@81 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@81 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@613) $generated@@465)) ($generated@@81 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@81 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@615) $generated@@157)) ($generated@@81 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@81 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@288 $generated@@157)) (= (type $generated@@617) $generated@@71)) (= ($generated@@139 $generated@@616 ($generated@@507 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@287 $generated@@616))) ($generated@@244 ($generated@@508 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@508 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@139 $generated@@616 ($generated@@507 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@288 $generated@@157)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@287 $generated@@620))) (< ($generated@@548 ($generated@@351 $generated@@143 ($generated@@508 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@548 ($generated@@351 $generated@@143 ($generated@@508 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@623) $generated@@71)) (= (type $generated@@624) $generated@@71)) ($generated@@139 $generated@@622 ($generated@@421 $generated@@623 $generated@@624))) (and (and ($generated@@139 ($generated@@312 $generated@@622) ($generated@@256 $generated@@623)) ($generated@@139 ($generated@@361 $generated@@622) ($generated@@256 $generated@@624))) ($generated@@139 ($generated@@395 $generated@@622) ($generated@@256 ($generated@@148 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@139 $generated@@622 ($generated@@421 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@626) $generated@@71)) (= (type $generated@@627) $generated@@71)) ($generated@@139 $generated@@625 ($generated@@429 $generated@@626 $generated@@627))) (and (and ($generated@@139 ($generated@@330 $generated@@625) ($generated@@261 $generated@@626)) ($generated@@139 ($generated@@372 $generated@@625) ($generated@@261 $generated@@627))) ($generated@@139 ($generated@@403 $generated@@625) ($generated@@261 ($generated@@148 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@139 $generated@@625 ($generated@@429 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@139 $generated@@628 $generated@@46))
 :pattern ( ($generated@@139 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@139 $generated@@629 $generated@@47))
 :pattern ( ($generated@@139 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@139 $generated@@630 $generated@@44))
 :pattern ( ($generated@@139 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@465) ($generated@@139 $generated@@631 $generated@@45))
 :pattern ( ($generated@@139 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@157) ($generated@@139 $generated@@632 $generated@@48))
 :pattern ( ($generated@@139 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(declare-fun $generated@@642 () T@T)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@633) $generated@@143) (= (type $generated@@634) ($generated@@169 $generated@@84 $generated@@4))) (= (type $generated@@635) $generated@@84)) (= (type $generated@@636) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@637) ($generated@@169 $generated@@84 $generated@@4))) (= ($generated@@1 $generated@@642) 21)) (forall (($generated@@643 T@U) ) (! (= (type ($generated@@638 $generated@@643)) $generated@@642)
 :pattern ( ($generated@@638 $generated@@643))
))) (= (type $generated@@639) $generated@@642)) (= (type $generated@@640) $generated@@642)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@644 true))
(let (($generated@@645  (=> (< ($generated@@266 0) ($generated@@294 $generated@@633)) (=> (and ($generated@@241 $generated@@633) (= (ControlFlow 0 5) 2)) $generated@@644))))
(let (($generated@@646  (=> (<= ($generated@@294 $generated@@633) ($generated@@266 0)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (not (= ($generated@@266 0) 0))) (=> (not (= ($generated@@266 0) 0)) (=> (= (ControlFlow 0 3) 2) $generated@@644))))))
(let (($generated@@647  (=> (and (= $generated@@634 ($generated@@223 $generated@@635 $generated@@636 $generated@@60 false)) ($generated@@241 $generated@@633)) (and (=> (= (ControlFlow 0 6) 3) $generated@@646) (=> (= (ControlFlow 0 6) 5) $generated@@645)))))
(let (($generated@@648 true))
(let (($generated@@649  (=> (= $generated@@637 ($generated@@168 $generated@@635 $generated@@636 $generated@@60 false)) (=> (and (= ($generated@@638 $generated@@639) $generated@@639) (= ($generated@@638 $generated@@640) $generated@@640)) (and (=> (= (ControlFlow 0 7) 1) $generated@@648) (=> (= (ControlFlow 0 7) 6) $generated@@647))))))
(let (($generated@@650  (=> (and (and (and ($generated@@272 $generated@@636) ($generated@@641 $generated@@636)) ($generated@@139 $generated@@633 $generated@@145)) (and (= 3 $generated@@141) (= (ControlFlow 0 8) 7))) $generated@@649)))
$generated@@650))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@297 (Int) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (Int Int) Int)
(declare-fun $generated@@442 (T@T) T@U)
(declare-fun $generated@@466 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@82 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (= (type $generated@@145) $generated@@71)))
(assert  (=> (<= 3 $generated@@141) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@143) (or ($generated@@144 $generated@@146) (and (not (= 3 $generated@@141)) ($generated@@139 $generated@@146 $generated@@145)))) true)
 :pattern ( ($generated@@142 $generated@@146))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@71)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@71) (= (type $generated@@152) $generated@@71)) (= (type $generated@@153) $generated@@143)) ($generated@@139 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@139 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@143) (= (type $generated@@161) $generated@@143)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@71)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@83 $generated@@157 $generated@@2)) (= (type $generated@@166) $generated@@71)) ($generated@@139 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@139 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@84 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@74 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@84) (= (type $generated@@217) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@218) ($generated@@73 $generated@@4))) (= (type $generated@@220) $generated@@84)) (= (type $generated@@221) ($generated@@73 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@84 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@74 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@84) (= (type $generated@@229) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@230) ($generated@@73 $generated@@4))) (= (type $generated@@232) $generated@@84)) (= (type $generated@@233) ($generated@@73 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert  (and (= (type $generated@@235) $generated@@71) (= (type $generated@@236) $generated@@71)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@143) (= (type $generated@@238) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@237 $generated@@235 $generated@@238) ($generated@@81 $generated@@237 $generated@@236 $generated@@238)))
 :pattern ( ($generated@@81 $generated@@237 $generated@@235 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@143) (= (type $generated@@240) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@239 $generated@@145 $generated@@240) ($generated@@81 $generated@@239 $generated@@235 $generated@@240)))
 :pattern ( ($generated@@81 $generated@@239 $generated@@145 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@143) ($generated@@139 $generated@@242 $generated@@236)) ($generated@@241 $generated@@242))
 :pattern ( ($generated@@241 $generated@@242) ($generated@@139 $generated@@242 $generated@@236))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@143)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@71) (= (type $generated@@248) $generated@@71)) (= (type $generated@@249) $generated@@157)) (= (type $generated@@250) $generated@@157)) (= ($generated@@139 ($generated@@243 $generated@@249 $generated@@250) ($generated@@148 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@139 ($generated@@243 $generated@@249 $generated@@250) ($generated@@148 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@143) (= (type $generated@@252) $generated@@143)) (= ($generated@@154 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@154 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@143) (= (type $generated@@255) $generated@@143)) (= ($generated@@253 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@253 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@259) $generated@@71)) (= ($generated@@139 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@157) ($generated@@0 ($generated@@88 $generated@@258 $generated@@260))) ($generated@@244 $generated@@260 $generated@@259))
 :pattern ( ($generated@@88 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@139 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@264) $generated@@71)) (= ($generated@@139 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@157) ($generated@@0 ($generated@@88 $generated@@263 $generated@@265))) ($generated@@244 $generated@@265 $generated@@264))
 :pattern ( ($generated@@88 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@139 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 Int) ) (! (= ($generated@@266 $generated@@267) $generated@@267)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@71) (= (type $generated@@275) $generated@@71)) (= (type $generated@@276) $generated@@157)) (= (type $generated@@277) $generated@@157)) (= (type $generated@@278) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@272 $generated@@278)) (= ($generated@@81 ($generated@@243 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@81 ($generated@@243 $generated@@276 $generated@@277) ($generated@@148 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@75)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@143) (= ($generated@@147 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@143) (= ($generated@@241 $generated@@282) (= ($generated@@279 $generated@@282) $generated@@63)))
 :pattern ( ($generated@@241 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@143) ($generated@@147 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@157) (= (type $generated@@285) $generated@@157)) (= $generated@@283 ($generated@@243 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@147 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@143) (= (type $generated@@296) $generated@@143)) true) (= ($generated@@253 $generated@@295 $generated@@296) (= ($generated@@294 $generated@@295) ($generated@@294 $generated@@296))))
 :pattern ( ($generated@@253 $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@298 Int) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@143)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@143) ($generated@@241 $generated@@299)) (exists (($generated@@300 Int) ) (= $generated@@299 ($generated@@297 $generated@@300))))
 :pattern ( ($generated@@241 $generated@@299))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@157)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@71) (= (type $generated@@305) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@273 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@81 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@273 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@83 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@86 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@83 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@88 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@83 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@88 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@88 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@83 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@88 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@88 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@86 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@83 $generated@@349 $generated@@2)) (= ($generated@@163 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@88 $generated@@348 $generated@@350))) (<= ($generated ($generated@@88 $generated@@348 $generated@@350)) ($generated@@306 $generated@@348))))
 :pattern ( ($generated@@88 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@163 $generated@@348))
)))
(assert (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@157) ($generated@@244 $generated@@354 $generated@@236)) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@354)) $generated@@354) ($generated@@139 ($generated@@351 $generated@@143 $generated@@354) $generated@@236)))
 :pattern ( ($generated@@244 $generated@@354 $generated@@236))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@157) ($generated@@244 $generated@@355 $generated@@235)) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@355)) $generated@@355) ($generated@@139 ($generated@@351 $generated@@143 $generated@@355) $generated@@235)))
 :pattern ( ($generated@@244 $generated@@355 $generated@@235))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@157) ($generated@@244 $generated@@356 $generated@@145)) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@356)) $generated@@356) ($generated@@139 ($generated@@351 $generated@@143 $generated@@356) $generated@@145)))
 :pattern ( ($generated@@244 $generated@@356 $generated@@145))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@316 (type $generated@@357))))
(let (($generated@@359 ($generated@@315 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@314 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@313 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@88 ($generated@@312 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@312 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@316 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@83 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@316 (type $generated@@364))))
(let (($generated@@366 ($generated@@315 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@314 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@313 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@88 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@334 (type $generated@@368))))
(let (($generated@@370 ($generated@@333 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@332 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@331 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@88 ($generated@@330 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@330 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@334 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@83 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@334 (type $generated@@375))))
(let (($generated@@377 ($generated@@333 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@332 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@331 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@88 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@83 $generated@@157 $generated@@2)) (= (type $generated@@380) $generated@@71)) (= ($generated@@139 $generated@@379 ($generated@@162 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@379 $generated@@381)))) ($generated@@244 $generated@@381 $generated@@380))
 :pattern ( ($generated@@88 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@139 $generated@@379 ($generated@@162 $generated@@380)))
)))
(assert (forall (($generated@@382 Int) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@272 $generated@@383)) (= ($generated@@81 ($generated@@297 $generated@@382) $generated@@236 $generated@@383) ($generated@@81 ($generated@@8 $generated@@382) $generated@@46 $generated@@383)))
 :pattern ( ($generated@@81 ($generated@@297 $generated@@382) $generated@@236 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@143) (= ($generated@@139 $generated@@384 $generated@@145)  (and ($generated@@139 $generated@@384 $generated@@235) (not (= ($generated@@294 $generated@@384) 0)))))
 :pattern ( ($generated@@139 $generated@@384 $generated@@145))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@386) $generated@@71)) (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@385 ($generated@@256 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@157) ($generated@@0 ($generated@@88 $generated@@385 $generated@@388))) ($generated@@273 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@88 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@81 $generated@@385 ($generated@@256 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@83 $generated@@157 $generated@@4)) (= (type $generated@@390) $generated@@71)) (= (type $generated@@391) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@389 ($generated@@261 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@157) ($generated@@0 ($generated@@88 $generated@@389 $generated@@392))) ($generated@@273 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@88 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@81 $generated@@389 ($generated@@261 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@88 ($generated@@307 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@88 ($generated@@307 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@83 $generated@@157 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@316 (type $generated@@398))))
(let (($generated@@400 ($generated@@315 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@83 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@402) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@88 ($generated@@312 $generated@@401) ($generated@@155 ($generated@@351 $generated@@143 $generated@@402)))) (= ($generated@@88 ($generated@@396 $generated@@401) ($generated@@155 ($generated@@351 $generated@@143 $generated@@402))) ($generated@@156 ($generated@@351 $generated@@143 $generated@@402))))))
 :pattern ( ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@83 $generated@@157 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@334 (type $generated@@406))))
(let (($generated@@408 ($generated@@333 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@83 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@410) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@88 ($generated@@330 $generated@@409) ($generated@@155 ($generated@@351 $generated@@143 $generated@@410)))) (= ($generated@@88 ($generated@@404 $generated@@409) ($generated@@155 ($generated@@351 $generated@@143 $generated@@410))) ($generated@@156 ($generated@@351 $generated@@143 $generated@@410))))))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@315 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@314 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@88 ($generated@@361 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@88 ($generated@@312 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@88 ($generated@@312 $generated@@411) $generated@@415))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@88 ($generated@@361 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@333 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@332 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@88 ($generated@@372 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@88 ($generated@@330 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@88 ($generated@@330 $generated@@416) $generated@@420))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@88 ($generated@@372 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@71)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@425) $generated@@71)) (= (type $generated@@426) $generated@@71)) (= (type $generated@@427) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@312 $generated@@424) $generated@@428))) (and ($generated@@273 ($generated@@88 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@273 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@88 ($generated@@312 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@81 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@71)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@433) $generated@@71)) (= (type $generated@@434) $generated@@71)) (= (type $generated@@435) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@330 $generated@@432) $generated@@436))) (and ($generated@@273 ($generated@@88 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@273 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@88 ($generated@@330 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@81 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 Int) ($generated@@439 Int) ) (! (= ($generated@@437 $generated@@438 $generated@@439) (div $generated@@438 $generated@@439))
 :pattern ( ($generated@@437 $generated@@438 $generated@@439))
)))
(assert  (=> (<= 3 $generated@@141) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@143) (or ($generated@@144 $generated@@440) (and (not (= 3 $generated@@141)) ($generated@@139 $generated@@440 $generated@@145)))) (and ($generated@@241 $generated@@440) (= ($generated@@142 $generated@@440) (ite (<= ($generated@@294 $generated@@440) ($generated@@266 0)) ($generated@@437 1 ($generated@@266 0)) 1))))
 :pattern ( ($generated@@142 $generated@@440))
))))
(assert (forall (($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@143) (= ($generated@@139 $generated@@441 $generated@@235)  (and ($generated@@139 $generated@@441 $generated@@236) (>= ($generated@@294 $generated@@441) ($generated@@266 0)))))
 :pattern ( ($generated@@139 $generated@@441 $generated@@235))
)))
(assert (forall (($generated@@443 T@T) ) (! (= (type ($generated@@442 $generated@@443)) ($generated@@83 $generated@@443 $generated@@4))
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@334 (type $generated@@444))))
(let (($generated@@446 ($generated@@333 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@332 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@331 $generated@@446 $generated@@445)) (= ($generated@@330 $generated@@444) ($generated@@442 $generated@@446))))))
 :pattern ( ($generated@@330 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@334 (type $generated@@447))))
(let (($generated@@449 ($generated@@333 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@332 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@331 $generated@@449 $generated@@448)) (= ($generated@@372 $generated@@447) ($generated@@442 $generated@@448))))))
 :pattern ( ($generated@@372 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@334 (type $generated@@450))))
(let (($generated@@452 ($generated@@333 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@332 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@331 $generated@@452 $generated@@451)) (= ($generated@@403 $generated@@450) ($generated@@442 $generated@@157))))))
 :pattern ( ($generated@@403 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@316 (type $generated@@453))))
(let (($generated@@455 ($generated@@315 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@314 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@313 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@157) (= (type $generated@@457) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@395 $generated@@453) ($generated@@301 ($generated@@243 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@395 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@334 (type $generated@@458))))
(let (($generated@@460 ($generated@@333 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@332 $generated@@460 $generated@@459)) (or (= $generated@@458 ($generated@@331 $generated@@460 $generated@@459)) (exists (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (and (and (= (type $generated@@461) $generated@@157) (= (type $generated@@462) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@403 $generated@@458) ($generated@@301 ($generated@@243 $generated@@461 $generated@@462)))))
 :no-pattern (type $generated@@461)
 :no-pattern (type $generated@@462)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
))))))
 :pattern ( ($generated@@403 $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@157) ($generated@@244 $generated@@463 $generated@@46)) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@463)) $generated@@463) ($generated@@139 ($generated@@351 $generated@@2 $generated@@463) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@463 $generated@@46))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) ($generated@@244 $generated@@464 $generated@@47)) (and (= ($generated@@301 ($generated@@351 $generated@@3 $generated@@464)) $generated@@464) ($generated@@139 ($generated@@351 $generated@@3 $generated@@464) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@464 $generated@@47))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@157) ($generated@@244 $generated@@465 $generated@@44)) (and (= ($generated@@301 ($generated@@351 $generated@@4 $generated@@465)) $generated@@465) ($generated@@139 ($generated@@351 $generated@@4 $generated@@465) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@465 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@466) 20))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@157) ($generated@@244 $generated@@467 $generated@@45)) (and (= ($generated@@301 ($generated@@351 $generated@@466 $generated@@467)) $generated@@467) ($generated@@139 ($generated@@351 $generated@@466 $generated@@467) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@467 $generated@@45))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (= (type $generated@@469) $generated@@71) (= ($generated@@244 ($generated@@301 $generated@@468) $generated@@469) ($generated@@139 $generated@@468 $generated@@469)))
 :pattern ( ($generated@@244 ($generated@@301 $generated@@468) $generated@@469))
)))
(assert  (=> (<= 3 $generated@@141) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@143) (or ($generated@@144 ($generated@@268 $generated@@470)) (and (not (= 3 $generated@@141)) ($generated@@139 $generated@@470 $generated@@145)))) (and ($generated@@241 ($generated@@268 $generated@@470)) (= ($generated@@142 ($generated@@268 $generated@@470)) (ite (<= ($generated@@266 ($generated@@294 ($generated@@268 $generated@@470))) ($generated@@266 0)) ($generated@@437 1 ($generated@@266 0)) 1))))
 :weight 3
 :pattern ( ($generated@@142 ($generated@@268 $generated@@470)))
))))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@86 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@83 $generated@@472 $generated@@2)) (<= 0 ($generated@@306 $generated@@471))))
 :pattern ( ($generated@@306 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@289 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@288 $generated@@474)) (<= 0 ($generated@@287 $generated@@473))))
 :pattern ( ($generated@@287 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@71)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@71) (= (type $generated@@478) $generated@@71)) (= ($generated@@475 ($generated@@421 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@71)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@71) (= (type $generated@@482) $generated@@71)) (= ($generated@@479 ($generated@@421 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@421 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@71) (= (type $generated@@484) $generated@@71)) (= ($generated@@79 ($generated@@421 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@71)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@71) (= (type $generated@@488) $generated@@71)) (= ($generated@@485 ($generated@@429 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@71)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@71) (= (type $generated@@492) $generated@@71)) (= ($generated@@489 ($generated@@429 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@429 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@71) (= (type $generated@@494) $generated@@71)) (= ($generated@@79 ($generated@@429 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@157) (= (type $generated@@496) $generated@@157)) (= ($generated@@279 ($generated@@243 $generated@@495 $generated@@496)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@71)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@71) (= (type $generated@@500) $generated@@71)) (= ($generated@@497 ($generated@@148 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@148 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@71)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@71) (= (type $generated@@504) $generated@@71)) (= ($generated@@501 ($generated@@148 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@148 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@157) (= (type $generated@@506) $generated@@157)) (= ($generated@@155 ($generated@@243 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@243 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@157) (= (type $generated@@508) $generated@@157)) (= ($generated@@156 ($generated@@243 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@243 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@71)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@289 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@288 $generated@@157)) (= (type $generated@@516) $generated@@71)) (= (type $generated@@517) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@287 $generated@@515))) ($generated@@273 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@81 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@82 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@82 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@71)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@71) (= ($generated@@521 ($generated@@256 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@256 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@71) (= ($generated@@79 ($generated@@256 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@71)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@71) (= ($generated@@525 ($generated@@261 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@261 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@71) (= ($generated@@79 ($generated@@261 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@71)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@71) (= ($generated@@529 ($generated@@162 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@162 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@71) (= ($generated@@79 ($generated@@162 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@71)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@71) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@71) (= ($generated@@79 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@279 ($generated@@297 $generated@@537)) $generated@@63)
 :pattern ( ($generated@@297 $generated@@537))
)))
(assert (forall (($generated@@538 Int) ) (! (= ($generated@@294 ($generated@@297 $generated@@538)) $generated@@538)
 :pattern ( ($generated@@297 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@351 $generated@@540 ($generated@@301 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@301 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@542) $generated@@71)) (= (type $generated@@543) $generated@@71)) (= ($generated@@139 $generated@@541 ($generated@@421 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@312 $generated@@541) $generated@@544))) (and ($generated@@244 ($generated@@88 ($generated@@396 $generated@@541) $generated@@544) $generated@@543) ($generated@@244 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@541) $generated@@544))
 :pattern ( ($generated@@88 ($generated@@312 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@139 $generated@@541 ($generated@@421 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@546) $generated@@71)) (= (type $generated@@547) $generated@@71)) (= ($generated@@139 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@330 $generated@@545) $generated@@548))) (and ($generated@@244 ($generated@@88 ($generated@@404 $generated@@545) $generated@@548) $generated@@547) ($generated@@244 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@545) $generated@@548))
 :pattern ( ($generated@@88 ($generated@@330 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@139 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@157) (= (type $generated@@552) $generated@@157)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@243 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@243 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@157) (= (type $generated@@554) $generated@@157)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@243 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@243 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@139 ($generated@@297 $generated@@555) $generated@@236) ($generated@@139 ($generated@@8 $generated@@555) $generated@@46))
 :pattern ( ($generated@@139 ($generated@@297 $generated@@555) $generated@@236))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@157) (= (type $generated@@557) $generated@@71)) (= (type $generated@@558) $generated@@71)) ($generated@@244 $generated@@556 ($generated@@421 $generated@@557 $generated@@558))) (and (= ($generated@@301 ($generated@@351 ($generated@@314 $generated@@157 $generated@@157) $generated@@556)) $generated@@556) ($generated@@139 ($generated@@351 ($generated@@314 $generated@@157 $generated@@157) $generated@@556) ($generated@@421 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@244 $generated@@556 ($generated@@421 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@157) (= (type $generated@@560) $generated@@71)) (= (type $generated@@561) $generated@@71)) ($generated@@244 $generated@@559 ($generated@@429 $generated@@560 $generated@@561))) (and (= ($generated@@301 ($generated@@351 ($generated@@332 $generated@@157 $generated@@157) $generated@@559)) $generated@@559) ($generated@@139 ($generated@@351 ($generated@@332 $generated@@157 $generated@@157) $generated@@559) ($generated@@429 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@244 $generated@@559 ($generated@@429 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@71) (= (type $generated@@563) $generated@@71)) (= (type $generated@@564) $generated@@157)) ($generated@@244 $generated@@564 ($generated@@148 $generated@@562 $generated@@563))) (and (= ($generated@@301 ($generated@@351 $generated@@143 $generated@@564)) $generated@@564) ($generated@@139 ($generated@@351 $generated@@143 $generated@@564) ($generated@@148 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@244 $generated@@564 ($generated@@148 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@88 ($generated@@442 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@88 ($generated@@442 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@76)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@71) (= (type $generated@@570) $generated@@71)) (and (= ($generated@@79 ($generated@@148 $generated@@569 $generated@@570)) $generated@@62) (= ($generated@@567 ($generated@@148 $generated@@569 $generated@@570)) $generated@@67)))
 :pattern ( ($generated@@148 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@143) (= (type $generated@@572) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@272 $generated@@572) (and ($generated@@241 $generated@@571) ($generated@@81 $generated@@571 $generated@@236 $generated@@572)))) ($generated@@81 ($generated@@8 ($generated@@294 $generated@@571)) $generated@@46 $generated@@572))
 :pattern ( ($generated@@81 ($generated@@8 ($generated@@294 $generated@@571)) $generated@@46 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@143) (= ($generated@@549 ($generated@@301 $generated@@573)) ($generated@@550 $generated@@573)))
 :pattern ( ($generated@@549 ($generated@@301 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@157) ($generated@@244 $generated@@574 ($generated@@82 0))) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@574)) $generated@@574) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@574) ($generated@@82 0))))
 :pattern ( ($generated@@244 $generated@@574 ($generated@@82 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@157) (= (type $generated@@576) $generated@@71)) ($generated@@244 $generated@@575 ($generated@@256 $generated@@576))) (and (= ($generated@@301 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@575)) $generated@@575) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@575) ($generated@@256 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@575 ($generated@@256 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@71)) ($generated@@244 $generated@@577 ($generated@@261 $generated@@578))) (and (= ($generated@@301 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@577)) $generated@@577) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@4) $generated@@577) ($generated@@261 $generated@@578))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@261 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@157) (= (type $generated@@580) $generated@@71)) ($generated@@244 $generated@@579 ($generated@@162 $generated@@580))) (and (= ($generated@@301 ($generated@@351 ($generated@@83 $generated@@157 $generated@@2) $generated@@579)) $generated@@579) ($generated@@139 ($generated@@351 ($generated@@83 $generated@@157 $generated@@2) $generated@@579) ($generated@@162 $generated@@580))))
 :pattern ( ($generated@@244 $generated@@579 ($generated@@162 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@71)) ($generated@@244 $generated@@581 ($generated@@509 $generated@@582))) (and (= ($generated@@301 ($generated@@351 ($generated@@288 $generated@@157) $generated@@581)) $generated@@581) ($generated@@139 ($generated@@351 ($generated@@288 $generated@@157) $generated@@581) ($generated@@509 $generated@@582))))
 :pattern ( ($generated@@244 $generated@@581 ($generated@@509 $generated@@582)))
)))
(assert (= ($generated@@79 $generated@@236) $generated@@64))
(assert (= ($generated@@567 $generated@@236) $generated@@68))
(assert (= ($generated@@79 $generated@@235) $generated@@65))
(assert (= ($generated@@567 $generated@@235) $generated@@69))
(assert (= ($generated@@79 $generated@@145) $generated@@66))
(assert (= ($generated@@567 $generated@@145) $generated@@70))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@83 $generated@@157 $generated@@2)) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@583 ($generated@@162 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@583 $generated@@586)))) ($generated@@273 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@88 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@81 $generated@@583 ($generated@@162 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@143) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@272 $generated@@589) (and ($generated@@147 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@71) ($generated@@81 $generated@@587 ($generated@@148 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@81 $generated@@587 ($generated@@148 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@273 ($generated@@155 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@273 ($generated@@155 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@143) (= (type $generated@@592) $generated@@71)) (= (type $generated@@593) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@272 $generated@@593) (and ($generated@@147 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@71) ($generated@@81 $generated@@591 ($generated@@148 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@81 $generated@@591 ($generated@@148 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@273 ($generated@@156 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@273 ($generated@@156 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@157) (= (type $generated@@596) $generated@@157)) (= ($generated@@243 ($generated@@268 $generated@@595) ($generated@@268 $generated@@596)) ($generated@@268 ($generated@@243 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@243 ($generated@@268 $generated@@595) ($generated@@268 $generated@@596)))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@266 $generated@@597))) ($generated@@268 ($generated@@301 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@266 $generated@@597))))
)))
(assert (forall (($generated@@598 Int) ) (! (= ($generated@@297 ($generated@@266 $generated@@598)) ($generated@@268 ($generated@@297 $generated@@598)))
 :pattern ( ($generated@@297 ($generated@@266 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (= ($generated@@301 ($generated@@268 $generated@@599)) ($generated@@268 ($generated@@301 $generated@@599)))
 :pattern ( ($generated@@301 ($generated@@268 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 ($generated@@289 (type $generated@@600))))
 (=> (and (= (type $generated@@600) ($generated@@288 $generated@@601)) (= ($generated@@287 $generated@@600) 0)) (= $generated@@600 ($generated@@286 $generated@@601))))
 :pattern ( ($generated@@287 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@603)))
 (=> (and (and (= (type $generated@@602) ($generated@@83 $generated@@605 $generated@@2)) (= (type $generated@@604) $generated@@2)) (<= 0 ($generated $generated@@604))) (= ($generated@@306 ($generated@@89 $generated@@602 $generated@@603 $generated@@604)) (+ (- ($generated@@306 $generated@@602) ($generated ($generated@@88 $generated@@602 $generated@@603))) ($generated $generated@@604)))))
 :pattern ( ($generated@@306 ($generated@@89 $generated@@602 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@607) $generated@@2)) ($generated@@81 $generated@@607 $generated@@46 $generated@@606))
 :pattern ( ($generated@@81 $generated@@607 $generated@@46 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@609) $generated@@3)) ($generated@@81 $generated@@609 $generated@@47 $generated@@608))
 :pattern ( ($generated@@81 $generated@@609 $generated@@47 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@611) $generated@@4)) ($generated@@81 $generated@@611 $generated@@44 $generated@@610))
 :pattern ( ($generated@@81 $generated@@611 $generated@@44 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@613) $generated@@466)) ($generated@@81 $generated@@613 $generated@@45 $generated@@612))
 :pattern ( ($generated@@81 $generated@@613 $generated@@45 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@615) $generated@@157)) ($generated@@81 $generated@@615 $generated@@48 $generated@@614))
 :pattern ( ($generated@@81 $generated@@615 $generated@@48 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@288 $generated@@157)) (= (type $generated@@617) $generated@@71)) (= ($generated@@139 $generated@@616 ($generated@@509 $generated@@617)) (forall (($generated@@618 Int) ) (!  (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@287 $generated@@616))) ($generated@@244 ($generated@@510 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@510 $generated@@616 $generated@@618))
))))
 :pattern ( ($generated@@139 $generated@@616 ($generated@@509 $generated@@617)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 Int) ) (!  (=> (= (type $generated@@620) ($generated@@288 $generated@@157)) (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@287 $generated@@620))) (< ($generated@@550 ($generated@@351 $generated@@143 ($generated@@510 $generated@@620 $generated@@621))) ($generated@@619 $generated@@620))))
 :pattern ( ($generated@@550 ($generated@@351 $generated@@143 ($generated@@510 $generated@@620 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@314 $generated@@157 $generated@@157)) (= (type $generated@@623) $generated@@71)) (= (type $generated@@624) $generated@@71)) ($generated@@139 $generated@@622 ($generated@@421 $generated@@623 $generated@@624))) (and (and ($generated@@139 ($generated@@312 $generated@@622) ($generated@@256 $generated@@623)) ($generated@@139 ($generated@@361 $generated@@622) ($generated@@256 $generated@@624))) ($generated@@139 ($generated@@395 $generated@@622) ($generated@@256 ($generated@@148 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@139 $generated@@622 ($generated@@421 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@332 $generated@@157 $generated@@157)) (= (type $generated@@626) $generated@@71)) (= (type $generated@@627) $generated@@71)) ($generated@@139 $generated@@625 ($generated@@429 $generated@@626 $generated@@627))) (and (and ($generated@@139 ($generated@@330 $generated@@625) ($generated@@261 $generated@@626)) ($generated@@139 ($generated@@372 $generated@@625) ($generated@@261 $generated@@627))) ($generated@@139 ($generated@@403 $generated@@625) ($generated@@261 ($generated@@148 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@139 $generated@@625 ($generated@@429 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@2) ($generated@@139 $generated@@628 $generated@@46))
 :pattern ( ($generated@@139 $generated@@628 $generated@@46))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@3) ($generated@@139 $generated@@629 $generated@@47))
 :pattern ( ($generated@@139 $generated@@629 $generated@@47))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@4) ($generated@@139 $generated@@630 $generated@@44))
 :pattern ( ($generated@@139 $generated@@630 $generated@@44))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@466) ($generated@@139 $generated@@631 $generated@@45))
 :pattern ( ($generated@@139 $generated@@631 $generated@@45))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@157) ($generated@@139 $generated@@632 $generated@@48))
 :pattern ( ($generated@@139 $generated@@632 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 (T@U) T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 (T@U) Bool)
(declare-fun $generated@@642 () T@T)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@633) $generated@@143) (= (type $generated@@634) ($generated@@169 $generated@@84 $generated@@4))) (= (type $generated@@635) $generated@@84)) (= (type $generated@@636) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@637) ($generated@@169 $generated@@84 $generated@@4))) (= ($generated@@1 $generated@@642) 21)) (forall (($generated@@643 T@U) ) (! (= (type ($generated@@638 $generated@@643)) $generated@@642)
 :pattern ( ($generated@@638 $generated@@643))
))) (= (type $generated@@639) $generated@@642)) (= (type $generated@@640) $generated@@642)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@644 true))
(let (($generated@@645  (=> (and (<= ($generated@@294 $generated@@633) ($generated@@266 0)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@266 0) 0)))))
(let (($generated@@646  (=> (and (= $generated@@634 ($generated@@223 $generated@@635 $generated@@636 $generated@@60 false)) ($generated@@241 $generated@@633)) (and (=> (= (ControlFlow 0 5) 3) $generated@@645) (=> (= (ControlFlow 0 5) 4) $generated@@644)))))
(let (($generated@@647 true))
(let (($generated@@648  (=> (= $generated@@637 ($generated@@168 $generated@@635 $generated@@636 $generated@@60 false)) (=> (and (= ($generated@@638 $generated@@639) $generated@@639) (= ($generated@@638 $generated@@640) $generated@@640)) (and (=> (= (ControlFlow 0 6) 1) $generated@@647) (=> (= (ControlFlow 0 6) 5) $generated@@646))))))
(let (($generated@@649  (=> (and (and (and ($generated@@272 $generated@@636) ($generated@@641 $generated@@636)) ($generated@@139 $generated@@633 $generated@@145)) (and (= 3 $generated@@141) (= (ControlFlow 0 7) 6))) $generated@@648)))
$generated@@649)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@T) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (Int) Int)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U T@U) Bool)
(declare-fun $generated@@149 (Int) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@179 (T@U) Int)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@196 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@201 (T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@203 (T@T T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) T@U)
(declare-fun $generated@@271 (T@U T@U) Bool)
(declare-fun $generated@@280 (T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@295 (T@U T@U T@U) Bool)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (Int Int) Int)
(declare-fun $generated@@471 (T@T) T@U)
(declare-fun $generated@@495 () T@T)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@539 (T@U Int) T@U)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(declare-fun $generated@@582 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@663 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@91 $generated@@97 $generated@@98)) 12))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@92 ($generated@@91 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@91 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@91 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@91 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@93 (type $generated@@103))))
(= (type ($generated@@94 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@94 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@95 $generated@@106 $generated@@107 $generated@@108)) ($generated@@91 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@95 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@93 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@94 ($generated@@95 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@94 ($generated@@95 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@94 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@94 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ) (! (= (type ($generated@@80 $generated@@123)) ($generated@@91 $generated@@87 $generated@@4))
 :pattern ( ($generated@@80 $generated@@123))
))) (forall (($generated@@124 T@U) ) (! (= (type ($generated@@81 $generated@@124)) $generated@@82)
 :pattern ( ($generated@@81 $generated@@124))
))) (forall (($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(= (type ($generated@@84 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@84 $generated@@125))
))) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 (type $generated@@128)))
(= (type ($generated@@85 $generated@@127 $generated@@128)) ($generated@@91 $generated@@129 $generated@@4)))
 :pattern ( ($generated@@85 $generated@@127 $generated@@128))
))) (forall (($generated@@130 T@T) ) (! (= (type ($generated@@86 $generated@@130)) ($generated@@91 $generated@@130 $generated@@4))
 :pattern ( ($generated@@86 $generated@@130))
))) (forall (($generated@@131 T@U) ) (! (= (type ($generated@@88 $generated@@131)) $generated@@87)
 :pattern ( ($generated@@88 $generated@@131))
))) (= ($generated@@1 $generated@@96) 14)) (forall (($generated@@132 Int) ) (! (= (type ($generated@@89 $generated@@132)) $generated@@96)
 :pattern ( ($generated@@89 $generated@@132))
))))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@82) (or $generated@@83 (not (= 1 $generated@@79)))) (= ($generated@@80 ($generated@@81 $generated@@133)) ($generated@@84 ($generated@@85 ($generated@@85 ($generated@@85 ($generated@@85 ($generated@@86 $generated@@87) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 (- 0 1)))))) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 0))))) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 1))))) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 2))))))))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@133)))
))))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@82) (or $generated@@83 (not (= 1 $generated@@79)))) (= ($generated@@80 ($generated@@81 $generated@@134)) ($generated@@84 ($generated@@85 ($generated@@85 ($generated@@85 ($generated@@85 ($generated@@86 $generated@@87) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 (- 0 1)))))) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 0))))) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 1))))) ($generated@@88 ($generated@@84 ($generated@@89 ($generated@@90 2))))))))
 :weight 3
 :pattern ( ($generated@@80 ($generated@@81 $generated@@134)))
))))
(assert (forall (($generated@@136 T@U) ) (! (= (type ($generated@@135 $generated@@136)) $generated@@72)
 :pattern ( ($generated@@135 $generated@@136))
)))
(assert (= ($generated@@135 $generated@@44) $generated@@49))
(assert (= ($generated@@135 $generated@@45) $generated@@50))
(assert (= ($generated@@135 $generated@@46) $generated@@51))
(assert (= ($generated@@135 $generated@@47) $generated@@52))
(assert (= ($generated@@135 $generated@@48) $generated@@53))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@137 $generated@@140 $generated@@141 $generated@@142)) ($generated@@91 $generated@@87 $generated@@4))
 :pattern ( ($generated@@137 $generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@71) (= (type $generated@@144) ($generated@@91 $generated@@87 $generated@@4))) (= (type $generated@@145) ($generated@@91 $generated@@87 $generated@@4))) (= (type $generated@@146) $generated@@87)) (= ($generated@@0 ($generated@@94 ($generated@@137 $generated@@143 $generated@@144 $generated@@145) $generated@@146)) (exists (($generated@@147 T@U) ) (!  (and (= (type $generated@@147) $generated@@96) (and (and ($generated@@139 $generated@@147 $generated@@143) (and ($generated@@0 ($generated@@94 $generated@@144 ($generated@@88 $generated@@147))) ($generated@@138 $generated@@147))) (= $generated@@146 ($generated@@88 $generated@@147))))
 :pattern ( ($generated@@138 $generated@@147))
 :pattern ( ($generated@@94 $generated@@145 ($generated@@88 $generated@@147)))
))))
 :pattern ( ($generated@@94 ($generated@@137 $generated@@143 $generated@@144 $generated@@145) $generated@@146))
)))
(assert  (and (and (and (and (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@74 (type $generated@@155))))
(= (type ($generated@@152 $generated@@154 $generated@@155)) $generated@@156))
 :pattern ( ($generated@@152 $generated@@154 $generated@@155))
))) (= ($generated@@1 $generated@@151) 16)) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= (type ($generated@@153 $generated@@157 $generated@@158 $generated@@159)) $generated@@151)
 :pattern ( ($generated@@153 $generated@@157 $generated@@158 $generated@@159))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@74 (type $generated@@161))))
 (=> (= (type $generated@@162) $generated@@163) (= ($generated@@152 ($generated@@153 $generated@@160 $generated@@161 $generated@@162) $generated@@161) $generated@@162)))
 :weight 0
))) (and (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@166 $generated@@167) (= ($generated@@152 ($generated@@153 $generated@@165 $generated@@166 $generated@@164) $generated@@167) ($generated@@152 $generated@@165 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@152 ($generated@@153 $generated@@169 $generated@@170 $generated@@168) $generated@@171) ($generated@@152 $generated@@169 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 Int) ) (! (= (type ($generated@@149 $generated@@172)) $generated@@71)
 :pattern ( ($generated@@149 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (= (type $generated@@173) $generated@@2) (= (type $generated@@174) ($generated@@91 $generated@@150 $generated@@151))) ($generated@@148 $generated@@173 ($generated@@149 0) $generated@@174))
 :pattern ( ($generated@@148 $generated@@173 ($generated@@149 0) $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@2) ($generated@@139 $generated@@175 ($generated@@149 0)))
 :pattern ( ($generated@@139 $generated@@175 ($generated@@149 0)))
)))
(assert (= (type $generated@@177) $generated@@71))
(assert  (=> (<= 3 $generated@@79) (forall (($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@178) $generated@@96) (or ($generated@@176 $generated@@178) (and (not (= 3 $generated@@79)) ($generated@@139 $generated@@178 $generated@@177)))) true)
 :pattern ( ($generated@@138 $generated@@178))
))))
(assert  (=> (<= 3 $generated@@79) (forall (($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@96) (or ($generated@@180 $generated@@181) (and (not (= 3 $generated@@79)) ($generated@@139 $generated@@181 $generated@@177)))) true)
 :pattern ( ($generated@@179 $generated@@181))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@184 $generated@@185)) $generated@@71)
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@71) (= (type $generated@@187) $generated@@71)) (= (type $generated@@188) $generated@@96)) ($generated@@139 $generated@@188 ($generated@@183 $generated@@186 $generated@@187))) ($generated@@182 $generated@@188))
 :pattern ( ($generated@@182 $generated@@188) ($generated@@139 $generated@@188 ($generated@@183 $generated@@186 $generated@@187)))
)))
(assert  (and (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@87)
 :pattern ( ($generated@@190 $generated@@192))
)) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@87)
 :pattern ( ($generated@@191 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@96) (= (type $generated@@195) $generated@@96)) true) (= ($generated@@189 $generated@@194 $generated@@195)  (and (= ($generated@@190 $generated@@194) ($generated@@190 $generated@@195)) (= ($generated@@191 $generated@@194) ($generated@@191 $generated@@195)))))
 :pattern ( ($generated@@189 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@196 $generated@@198)) $generated@@71)
 :pattern ( ($generated@@196 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and (and (= (type $generated@@199) ($generated@@91 $generated@@87 $generated@@2)) (= (type $generated@@200) $generated@@71)) ($generated@@139 $generated@@199 ($generated@@196 $generated@@200))) ($generated@@197 $generated@@199))
 :pattern ( ($generated@@139 $generated@@199 ($generated@@196 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@207 $generated@@208)) 17)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@209 $generated@@210)) $generated@@209)
 :pattern ( ($generated@@203 $generated@@209 $generated@@210))
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@205 ($generated@@203 $generated@@211 $generated@@212)) $generated@@212)
 :pattern ( ($generated@@203 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@205 (type $generated@@213))))
(= (type ($generated@@201 $generated@@213 $generated@@214 $generated@@215)) $generated@@216))
 :pattern ( ($generated@@201 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 (type $generated@@220)))
(let (($generated@@222 (type $generated@@218)))
(= (type ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@203 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@206 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@205 (type $generated@@223))))
 (=> (= (type $generated@@226) $generated@@227) (= ($generated@@201 ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@224 $generated@@225) $generated@@226)))
 :weight 0
))) (and (and (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@230 $generated@@232) (= ($generated@@201 ($generated@@206 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@201 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@237 $generated@@239) (= ($generated@@201 ($generated@@206 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@201 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (or true (= ($generated@@201 ($generated@@206 $generated@@241 $generated@@242 $generated@@243 $generated@@240) $generated@@244 $generated@@245) ($generated@@201 $generated@@241 $generated@@244 $generated@@245)))
 :weight 0
)))) (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@203 $generated@@150 $generated@@4))
 :pattern ( ($generated@@202 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
))))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@74 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@150) (= (type $generated@@251) ($generated@@91 $generated@@150 $generated@@151))) (= (type $generated@@252) ($generated@@73 $generated@@4))) (= (type $generated@@254) $generated@@150)) (= (type $generated@@255) ($generated@@73 $generated@@256))) (= ($generated@@0 ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@152 ($generated@@94 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@201 ($generated@@202 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert  (and (= (type $generated@@257) $generated@@71) (= (type $generated@@258) $generated@@71)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@96) (= (type $generated@@260) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@259 $generated@@257 $generated@@260) ($generated@@148 $generated@@259 $generated@@258 $generated@@260)))
 :pattern ( ($generated@@148 $generated@@259 $generated@@257 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@96) (= (type $generated@@262) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@261 $generated@@177 $generated@@262) ($generated@@148 $generated@@261 $generated@@257 $generated@@262)))
 :pattern ( ($generated@@148 $generated@@261 $generated@@177 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@96) ($generated@@139 $generated@@264 $generated@@258)) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@263 $generated@@264) ($generated@@139 $generated@@264 $generated@@258))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@71)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert  (=> (<= 4 $generated@@79) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@91 $generated@@87 $generated@@4)) (or ($generated@@266 $generated@@269) (and (not (= 4 $generated@@79)) ($generated@@139 $generated@@269 ($generated@@267 $generated@@177))))) true)
 :pattern ( ($generated@@265 $generated@@269))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (! (= (type ($generated@@270 $generated@@272 $generated@@273)) $generated@@96)
 :pattern ( ($generated@@270 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@71) (= (type $generated@@275) $generated@@71)) (= (type $generated@@276) $generated@@87)) (= (type $generated@@277) $generated@@87)) (= ($generated@@139 ($generated@@270 $generated@@276 $generated@@277) ($generated@@183 $generated@@274 $generated@@275))  (and ($generated@@271 $generated@@276 $generated@@274) ($generated@@271 $generated@@277 $generated@@275))))
 :pattern ( ($generated@@139 ($generated@@270 $generated@@276 $generated@@277) ($generated@@183 $generated@@274 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@96) (= (type $generated@@279) $generated@@96)) (= ($generated@@189 $generated@@278 $generated@@279) (= $generated@@278 $generated@@279)))
 :pattern ( ($generated@@189 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@96) (= (type $generated@@282) $generated@@96)) (= ($generated@@280 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@280 $generated@@281 $generated@@282))
)))
(assert  (=> (<= 1 $generated@@79) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@82) (or $generated@@83 (not (= 1 $generated@@79)))) ($generated@@139 ($generated@@80 $generated@@283) ($generated@@267 $generated@@258)))
 :pattern ( ($generated@@80 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) ($generated@@91 $generated@@87 $generated@@4)) (= (type $generated@@285) $generated@@71)) (= ($generated@@139 $generated@@284 ($generated@@267 $generated@@285)) (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@87) ($generated@@0 ($generated@@94 $generated@@284 $generated@@286))) ($generated@@271 $generated@@286 $generated@@285))
 :pattern ( ($generated@@94 $generated@@284 $generated@@286))
))))
 :pattern ( ($generated@@139 $generated@@284 ($generated@@267 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@71)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) ($generated@@91 $generated@@87 $generated@@4)) (= (type $generated@@290) $generated@@71)) (= ($generated@@139 $generated@@289 ($generated@@287 $generated@@290)) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@87) ($generated@@0 ($generated@@94 $generated@@289 $generated@@291))) ($generated@@271 $generated@@291 $generated@@290))
 :pattern ( ($generated@@94 $generated@@289 $generated@@291))
))))
 :pattern ( ($generated@@139 $generated@@289 ($generated@@287 $generated@@290)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@90 $generated@@292) $generated@@292)
 :pattern ( ($generated@@90 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (= ($generated@@84 $generated@@293) $generated@@293)
 :pattern ( ($generated@@84 $generated@@293))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@296) $generated@@71) (= (type $generated@@297) $generated@@71)) (= (type $generated@@298) $generated@@87)) (= (type $generated@@299) $generated@@87)) (= (type $generated@@300) ($generated@@91 $generated@@150 $generated@@151))) ($generated@@294 $generated@@300)) (= ($generated@@148 ($generated@@270 $generated@@298 $generated@@299) ($generated@@183 $generated@@296 $generated@@297) $generated@@300)  (and ($generated@@295 $generated@@298 $generated@@296 $generated@@300) ($generated@@295 $generated@@299 $generated@@297 $generated@@300))))
 :pattern ( ($generated@@148 ($generated@@270 $generated@@298 $generated@@299) ($generated@@183 $generated@@296 $generated@@297) $generated@@300))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@75)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@96) (= ($generated@@182 $generated@@303) (= ($generated@@301 $generated@@303) $generated@@61)))
 :pattern ( ($generated@@182 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@96) (= ($generated@@263 $generated@@304) (= ($generated@@301 $generated@@304) $generated@@63)))
 :pattern ( ($generated@@263 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@96) ($generated@@182 $generated@@305)) (exists (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (and (and (= (type $generated@@306) $generated@@87) (= (type $generated@@307) $generated@@87)) (= $generated@@305 ($generated@@270 $generated@@306 $generated@@307)))
 :no-pattern (type $generated@@306)
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
)))
 :pattern ( ($generated@@182 $generated@@305))
)))
(assert  (and (and (forall (($generated@@312 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@312)) 18)) (forall (($generated@@313 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@310 $generated@@313))
))) (forall (($generated@@314 T@T) ) (! (= (type ($generated@@308 $generated@@314)) ($generated@@310 $generated@@314))
 :pattern ( ($generated@@308 $generated@@314))
))))
(assert (forall (($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@315)) 0)
 :pattern ( ($generated@@308 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (= (type $generated@@317) $generated@@96) (= (type $generated@@318) $generated@@96)) true) (= ($generated@@280 $generated@@317 $generated@@318) (= ($generated@@316 $generated@@317) ($generated@@316 $generated@@318))))
 :pattern ( ($generated@@280 $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@96) ($generated@@263 $generated@@319)) (exists (($generated@@320 Int) ) (= $generated@@319 ($generated@@89 $generated@@320))))
 :pattern ( ($generated@@263 $generated@@319))
)))
(assert  (=> (<= 4 $generated@@79) (forall (($generated@@321 T@U) ) (!  (=> (and (= (type $generated@@321) ($generated@@91 $generated@@87 $generated@@4)) (or ($generated@@266 ($generated@@84 $generated@@321)) (and (not (= 4 $generated@@79)) ($generated@@139 $generated@@321 ($generated@@267 $generated@@177))))) (and (forall (($generated@@322 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@96) ($generated@@139 $generated@@322 $generated@@177)) ($generated@@0 ($generated@@94 ($generated@@84 $generated@@321) ($generated@@88 $generated@@322)))) ($generated@@180 $generated@@322))
 :pattern ( ($generated@@179 $generated@@322))
 :pattern ( ($generated@@94 $generated@@321 ($generated@@88 $generated@@322)))
)) (= ($generated@@265 ($generated@@84 $generated@@321)) (forall (($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@323) $generated@@96) ($generated@@139 $generated@@323 $generated@@177)) ($generated@@0 ($generated@@94 ($generated@@84 $generated@@321) ($generated@@88 $generated@@323)))) (= ($generated@@179 $generated@@323) ($generated@@90 1)))
 :pattern ( ($generated@@179 $generated@@323))
 :pattern ( ($generated@@94 $generated@@321 ($generated@@88 $generated@@323)))
)))))
 :weight 3
 :pattern ( ($generated@@265 ($generated@@84 $generated@@321)))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@71) (= (type $generated@@326) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@295 ($generated@@88 $generated@@324) $generated@@325 $generated@@326) ($generated@@148 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@295 ($generated@@88 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@T) ) (! (= (type ($generated@@328 $generated@@329)) ($generated@@91 $generated@@329 $generated@@2))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@92 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@91 $generated@@331 $generated@@2)) (and (= (= ($generated@@327 $generated@@330) 0) (= $generated@@330 ($generated@@328 $generated@@331))) (=> (not (= ($generated@@327 $generated@@330) 0)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) (< 0 ($generated ($generated@@94 $generated@@330 $generated@@332))))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@91 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@94 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@94 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert  (and (and (and (and (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@356 $generated@@357)) 20)) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@353 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@360 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@353 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@354 (type $generated@@362))))
(= (type ($generated@@351 $generated@@362)) ($generated@@91 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@362))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= (type ($generated@@352 $generated@@364 $generated@@365)) ($generated@@353 $generated@@364 $generated@@365))
 :pattern ( ($generated@@352 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@T) ) (! (let (($generated@@368 (type $generated@@366)))
 (not ($generated@@0 ($generated@@94 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366))))
 :pattern ( (let (($generated@@368 (type $generated@@366)))
($generated@@94 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366)))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@92 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@91 $generated@@370 $generated@@2)) (= ($generated@@197 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@94 $generated@@369 $generated@@371))) (<= ($generated ($generated@@94 $generated@@369 $generated@@371)) ($generated@@327 $generated@@369))))
 :pattern ( ($generated@@94 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@197 $generated@@369))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@87) ($generated@@271 $generated@@375 $generated@@258)) (and (= ($generated@@88 ($generated@@372 $generated@@96 $generated@@375)) $generated@@375) ($generated@@139 ($generated@@372 $generated@@96 $generated@@375) $generated@@258)))
 :pattern ( ($generated@@271 $generated@@375 $generated@@258))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@87) ($generated@@271 $generated@@376 $generated@@257)) (and (= ($generated@@88 ($generated@@372 $generated@@96 $generated@@376)) $generated@@376) ($generated@@139 ($generated@@372 $generated@@96 $generated@@376) $generated@@257)))
 :pattern ( ($generated@@271 $generated@@376 $generated@@257))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@87) ($generated@@271 $generated@@377 $generated@@177)) (and (= ($generated@@88 ($generated@@372 $generated@@96 $generated@@377)) $generated@@377) ($generated@@139 ($generated@@372 $generated@@96 $generated@@377) $generated@@177)))
 :pattern ( ($generated@@271 $generated@@377 $generated@@177))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@337 (type $generated@@378))))
(let (($generated@@380 ($generated@@336 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@335 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@334 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@94 ($generated@@333 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@333 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@337 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@91 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@337 (type $generated@@385))))
(let (($generated@@387 ($generated@@336 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@335 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@334 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@94 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@355 (type $generated@@389))))
(let (($generated@@391 ($generated@@354 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@353 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@352 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) ($generated@@0 ($generated@@94 ($generated@@351 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@351 $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@355 (type $generated@@394))))
(= (type ($generated@@393 $generated@@394)) ($generated@@91 $generated@@395 $generated@@4)))
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@355 (type $generated@@396))))
(let (($generated@@398 ($generated@@354 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@353 $generated@@398 $generated@@397)) (or (= $generated@@396 ($generated@@352 $generated@@398 $generated@@397)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@397) ($generated@@0 ($generated@@94 ($generated@@393 $generated@@396) $generated@@399)))
 :no-pattern (type $generated@@399)
 :no-pattern ($generated $generated@@399)
 :no-pattern ($generated@@0 $generated@@399)
))))))
 :pattern ( ($generated@@393 $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@91 $generated@@87 $generated@@2)) (= (type $generated@@401) $generated@@71)) (= ($generated@@139 $generated@@400 ($generated@@196 $generated@@401)) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@87) (< 0 ($generated ($generated@@94 $generated@@400 $generated@@402)))) ($generated@@271 $generated@@402 $generated@@401))
 :pattern ( ($generated@@94 $generated@@400 $generated@@402))
))))
 :pattern ( ($generated@@139 $generated@@400 ($generated@@196 $generated@@401)))
)))
(assert (forall (($generated@@403 Int) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@91 $generated@@150 $generated@@151)) ($generated@@294 $generated@@404)) (= ($generated@@148 ($generated@@89 $generated@@403) $generated@@258 $generated@@404) ($generated@@148 ($generated@@8 $generated@@403) $generated@@46 $generated@@404)))
 :pattern ( ($generated@@148 ($generated@@89 $generated@@403) $generated@@258 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (= (type $generated@@405) $generated@@96) (= ($generated@@139 $generated@@405 $generated@@177)  (and ($generated@@139 $generated@@405 $generated@@257) (not (= ($generated@@316 $generated@@405) 0)))))
 :pattern ( ($generated@@139 $generated@@405 $generated@@177))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@91 $generated@@87 $generated@@4)) (= (type $generated@@407) $generated@@71)) (= (type $generated@@408) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@406 ($generated@@267 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@87) ($generated@@0 ($generated@@94 $generated@@406 $generated@@409))) ($generated@@295 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@94 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@148 $generated@@406 ($generated@@267 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@91 $generated@@87 $generated@@4)) (= (type $generated@@411) $generated@@71)) (= (type $generated@@412) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@410 ($generated@@287 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@87) ($generated@@0 ($generated@@94 $generated@@410 $generated@@413))) ($generated@@295 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@94 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@148 $generated@@410 ($generated@@287 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@94 ($generated@@328 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@94 ($generated@@328 $generated@@415) $generated@@414)))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@91 $generated@@87 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@337 (type $generated@@419))))
(let (($generated@@421 ($generated@@336 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@91 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@335 $generated@@87 $generated@@87)) (= (type $generated@@423) $generated@@87)) (= ($generated@@0 ($generated@@94 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@94 ($generated@@333 $generated@@422) ($generated@@190 ($generated@@372 $generated@@96 $generated@@423)))) (= ($generated@@94 ($generated@@417 $generated@@422) ($generated@@190 ($generated@@372 $generated@@96 $generated@@423))) ($generated@@191 ($generated@@372 $generated@@96 $generated@@423))))))
 :pattern ( ($generated@@94 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@91 $generated@@87 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@355 (type $generated@@427))))
(let (($generated@@429 ($generated@@354 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@91 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@353 $generated@@87 $generated@@87)) (= (type $generated@@431) $generated@@87)) (= ($generated@@0 ($generated@@94 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@94 ($generated@@351 $generated@@430) ($generated@@190 ($generated@@372 $generated@@96 $generated@@431)))) (= ($generated@@94 ($generated@@425 $generated@@430) ($generated@@190 ($generated@@372 $generated@@96 $generated@@431))) ($generated@@191 ($generated@@372 $generated@@96 $generated@@431))))))
 :pattern ( ($generated@@94 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (let (($generated@@434 (type $generated@@433)))
(let (($generated@@435 ($generated@@336 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@335 $generated@@435 $generated@@434)) (= ($generated@@0 ($generated@@94 ($generated@@382 $generated@@432) $generated@@433)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) (and ($generated@@0 ($generated@@94 ($generated@@333 $generated@@432) $generated@@436)) (= $generated@@433 ($generated@@94 ($generated@@417 $generated@@432) $generated@@436))))
 :pattern ( ($generated@@94 ($generated@@333 $generated@@432) $generated@@436))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@432) $generated@@436))
))))))
 :pattern ( ($generated@@94 ($generated@@382 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@438)))
(let (($generated@@440 ($generated@@354 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@353 $generated@@440 $generated@@439)) (= ($generated@@0 ($generated@@94 ($generated@@393 $generated@@437) $generated@@438)) (exists (($generated@@441 T@U) ) (!  (and (= (type $generated@@441) $generated@@440) (and ($generated@@0 ($generated@@94 ($generated@@351 $generated@@437) $generated@@441)) (= $generated@@438 ($generated@@94 ($generated@@425 $generated@@437) $generated@@441))))
 :pattern ( ($generated@@94 ($generated@@351 $generated@@437) $generated@@441))
 :pattern ( ($generated@@94 ($generated@@425 $generated@@437) $generated@@441))
))))))
 :pattern ( ($generated@@94 ($generated@@393 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@71)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@335 $generated@@87 $generated@@87)) (= (type $generated@@446) $generated@@71)) (= (type $generated@@447) $generated@@71)) (= (type $generated@@448) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@87) ($generated@@0 ($generated@@94 ($generated@@333 $generated@@445) $generated@@449))) (and ($generated@@295 ($generated@@94 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@295 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@94 ($generated@@333 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@148 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@71)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@353 $generated@@87 $generated@@87)) (= (type $generated@@454) $generated@@71)) (= (type $generated@@455) $generated@@71)) (= (type $generated@@456) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@87) ($generated@@0 ($generated@@94 ($generated@@351 $generated@@453) $generated@@457))) (and ($generated@@295 ($generated@@94 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@295 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@94 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@94 ($generated@@351 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@148 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 Int) ($generated@@460 Int) ) (! (= ($generated@@458 $generated@@459 $generated@@460) (div $generated@@459 $generated@@460))
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert  (=> (<= 3 $generated@@79) (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@96) (or ($generated@@180 $generated@@461) (and (not (= 3 $generated@@79)) ($generated@@139 $generated@@461 $generated@@177)))) (and ($generated@@263 $generated@@461) (= ($generated@@179 $generated@@461) (ite (<= ($generated@@316 $generated@@461) ($generated@@90 0)) ($generated@@458 1 ($generated@@90 0)) 1))))
 :pattern ( ($generated@@179 $generated@@461))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (! (let (($generated@@465 (type $generated@@463)))
 (=> (and (and (= (type $generated@@462) ($generated@@91 $generated@@465 $generated@@4)) (= (type $generated@@464) $generated@@465)) ($generated@@0 ($generated@@94 $generated@@462 $generated@@464))) ($generated@@0 ($generated@@94 ($generated@@85 $generated@@462 $generated@@463) $generated@@464))))
 :pattern ( ($generated@@85 $generated@@462 $generated@@463) ($generated@@94 $generated@@462 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (! (let (($generated@@469 (type $generated@@467)))
 (=> (and (= (type $generated@@466) ($generated@@91 $generated@@469 $generated@@4)) (= (type $generated@@468) $generated@@469)) (= ($generated@@0 ($generated@@94 ($generated@@85 $generated@@466 $generated@@467) $generated@@468))  (or (= $generated@@468 $generated@@467) ($generated@@0 ($generated@@94 $generated@@466 $generated@@468))))))
 :pattern ( ($generated@@94 ($generated@@85 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@96) (= ($generated@@139 $generated@@470 $generated@@257)  (and ($generated@@139 $generated@@470 $generated@@258) (>= ($generated@@316 $generated@@470) ($generated@@90 0)))))
 :pattern ( ($generated@@139 $generated@@470 $generated@@257))
)))
(assert (forall (($generated@@472 T@T) ) (! (= (type ($generated@@471 $generated@@472)) ($generated@@91 $generated@@472 $generated@@4))
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@355 (type $generated@@473))))
(let (($generated@@475 ($generated@@354 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@353 $generated@@475 $generated@@474)) (= (= $generated@@473 ($generated@@352 $generated@@475 $generated@@474)) (= ($generated@@351 $generated@@473) ($generated@@471 $generated@@475))))))
 :pattern ( ($generated@@351 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@355 (type $generated@@476))))
(let (($generated@@478 ($generated@@354 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@353 $generated@@478 $generated@@477)) (= (= $generated@@476 ($generated@@352 $generated@@478 $generated@@477)) (= ($generated@@393 $generated@@476) ($generated@@471 $generated@@477))))))
 :pattern ( ($generated@@393 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@355 (type $generated@@479))))
(let (($generated@@481 ($generated@@354 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@353 $generated@@481 $generated@@480)) (= (= $generated@@479 ($generated@@352 $generated@@481 $generated@@480)) (= ($generated@@424 $generated@@479) ($generated@@471 $generated@@87))))))
 :pattern ( ($generated@@424 $generated@@479))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@337 (type $generated@@482))))
(let (($generated@@484 ($generated@@336 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@335 $generated@@484 $generated@@483)) (or (= $generated@@482 ($generated@@334 $generated@@484 $generated@@483)) (exists (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (and (and (= (type $generated@@485) $generated@@87) (= (type $generated@@486) $generated@@87)) ($generated@@0 ($generated@@94 ($generated@@416 $generated@@482) ($generated@@88 ($generated@@270 $generated@@485 $generated@@486)))))
 :no-pattern (type $generated@@485)
 :no-pattern (type $generated@@486)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
 :no-pattern ($generated $generated@@486)
 :no-pattern ($generated@@0 $generated@@486)
))))))
 :pattern ( ($generated@@416 $generated@@482))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@355 (type $generated@@487))))
(let (($generated@@489 ($generated@@354 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@353 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@352 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@87) (= (type $generated@@491) $generated@@87)) ($generated@@0 ($generated@@94 ($generated@@424 $generated@@487) ($generated@@88 ($generated@@270 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@424 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@87) ($generated@@271 $generated@@492 $generated@@46)) (and (= ($generated@@88 ($generated@@372 $generated@@2 $generated@@492)) $generated@@492) ($generated@@139 ($generated@@372 $generated@@2 $generated@@492) $generated@@46)))
 :pattern ( ($generated@@271 $generated@@492 $generated@@46))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@87) ($generated@@271 $generated@@493 $generated@@47)) (and (= ($generated@@88 ($generated@@372 $generated@@3 $generated@@493)) $generated@@493) ($generated@@139 ($generated@@372 $generated@@3 $generated@@493) $generated@@47)))
 :pattern ( ($generated@@271 $generated@@493 $generated@@47))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@87) ($generated@@271 $generated@@494 $generated@@44)) (and (= ($generated@@88 ($generated@@372 $generated@@4 $generated@@494)) $generated@@494) ($generated@@139 ($generated@@372 $generated@@4 $generated@@494) $generated@@44)))
 :pattern ( ($generated@@271 $generated@@494 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@495) 21))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@87) ($generated@@271 $generated@@496 $generated@@45)) (and (= ($generated@@88 ($generated@@372 $generated@@495 $generated@@496)) $generated@@496) ($generated@@139 ($generated@@372 $generated@@495 $generated@@496) $generated@@45)))
 :pattern ( ($generated@@271 $generated@@496 $generated@@45))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@71) (= ($generated@@271 ($generated@@88 $generated@@497) $generated@@498) ($generated@@139 $generated@@497 $generated@@498)))
 :pattern ( ($generated@@271 ($generated@@88 $generated@@497) $generated@@498))
)))
(assert  (=> (<= 3 $generated@@79) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@96) (or ($generated@@180 ($generated@@84 $generated@@499)) (and (not (= 3 $generated@@79)) ($generated@@139 $generated@@499 $generated@@177)))) (and ($generated@@263 ($generated@@84 $generated@@499)) (= ($generated@@179 ($generated@@84 $generated@@499)) (ite (<= ($generated@@90 ($generated@@316 ($generated@@84 $generated@@499))) ($generated@@90 0)) ($generated@@458 1 ($generated@@90 0)) 1))))
 :weight 3
 :pattern ( ($generated@@179 ($generated@@84 $generated@@499)))
))))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@92 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@91 $generated@@501 $generated@@2)) (<= 0 ($generated@@327 $generated@@500))))
 :pattern ( ($generated@@327 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 ($generated@@311 (type $generated@@502))))
 (=> (= (type $generated@@502) ($generated@@310 $generated@@503)) (<= 0 ($generated@@309 $generated@@502))))
 :pattern ( ($generated@@309 $generated@@502))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@71)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@71) (= (type $generated@@507) $generated@@71)) (= ($generated@@504 ($generated@@442 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@442 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@71)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@71) (= (type $generated@@511) $generated@@71)) (= ($generated@@508 ($generated@@442 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@442 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@71) (= (type $generated@@513) $generated@@71)) (= ($generated@@135 ($generated@@442 $generated@@512 $generated@@513)) $generated@@58))
 :pattern ( ($generated@@442 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@71)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@71) (= (type $generated@@517) $generated@@71)) (= ($generated@@514 ($generated@@450 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@450 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@71)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@71) (= (type $generated@@521) $generated@@71)) (= ($generated@@518 ($generated@@450 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@450 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@71) (= (type $generated@@523) $generated@@71)) (= ($generated@@135 ($generated@@450 $generated@@522 $generated@@523)) $generated@@59))
 :pattern ( ($generated@@450 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@87) (= (type $generated@@525) $generated@@87)) (= ($generated@@301 ($generated@@270 $generated@@524 $generated@@525)) $generated@@61))
 :pattern ( ($generated@@270 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@71)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@71) (= (type $generated@@529) $generated@@71)) (= ($generated@@526 ($generated@@183 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@183 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@71) (= (type $generated@@533) $generated@@71)) (= ($generated@@530 ($generated@@183 $generated@@532 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@183 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@87) (= (type $generated@@535) $generated@@87)) (= ($generated@@190 ($generated@@270 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@270 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@87) (= (type $generated@@537) $generated@@87)) (= ($generated@@191 ($generated@@270 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@270 $generated@@536 $generated@@537))
)))
(assert  (and (forall (($generated@@540 T@U) ) (! (= (type ($generated@@538 $generated@@540)) $generated@@71)
 :pattern ( ($generated@@538 $generated@@540))
)) (forall (($generated@@541 T@U) ($generated@@542 Int) ) (! (let (($generated@@543 ($generated@@311 (type $generated@@541))))
(= (type ($generated@@539 $generated@@541 $generated@@542)) $generated@@543))
 :pattern ( ($generated@@539 $generated@@541 $generated@@542))
))))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@310 $generated@@87)) (= (type $generated@@545) $generated@@71)) (= (type $generated@@546) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@544 ($generated@@538 $generated@@545) $generated@@546) (forall (($generated@@547 Int) ) (!  (=> (and (<= 0 $generated@@547) (< $generated@@547 ($generated@@309 $generated@@544))) ($generated@@295 ($generated@@539 $generated@@544 $generated@@547) $generated@@545 $generated@@546))
 :pattern ( ($generated@@539 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@148 $generated@@544 ($generated@@538 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
 (=> (= (type $generated@@548) ($generated@@91 $generated@@550 $generated@@4)) ($generated@@0 ($generated@@94 ($generated@@85 $generated@@548 $generated@@549) $generated@@549))))
 :pattern ( ($generated@@85 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@551 ($generated@@149 $generated@@552)) $generated@@552)
 :pattern ( ($generated@@149 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@267 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@267 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@135 ($generated@@267 $generated@@556)) $generated@@54))
 :pattern ( ($generated@@267 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@71) (= ($generated@@557 ($generated@@287 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@287 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@71) (= ($generated@@135 ($generated@@287 $generated@@560)) $generated@@55))
 :pattern ( ($generated@@287 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@71)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@71) (= ($generated@@561 ($generated@@196 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@196 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@71) (= ($generated@@135 ($generated@@196 $generated@@564)) $generated@@56))
 :pattern ( ($generated@@196 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@71)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@71) (= ($generated@@565 ($generated@@538 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@538 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@71) (= ($generated@@135 ($generated@@538 $generated@@568)) $generated@@57))
 :pattern ( ($generated@@538 $generated@@568))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@301 ($generated@@89 $generated@@569)) $generated@@63)
 :pattern ( ($generated@@89 $generated@@569))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@316 ($generated@@89 $generated@@570)) $generated@@570)
 :pattern ( ($generated@@89 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
(= ($generated@@372 $generated@@572 ($generated@@88 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@88 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@335 $generated@@87 $generated@@87)) (= (type $generated@@574) $generated@@71)) (= (type $generated@@575) $generated@@71)) (= ($generated@@139 $generated@@573 ($generated@@442 $generated@@574 $generated@@575)) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@87) ($generated@@0 ($generated@@94 ($generated@@333 $generated@@573) $generated@@576))) (and ($generated@@271 ($generated@@94 ($generated@@417 $generated@@573) $generated@@576) $generated@@575) ($generated@@271 $generated@@576 $generated@@574)))
 :pattern ( ($generated@@94 ($generated@@417 $generated@@573) $generated@@576))
 :pattern ( ($generated@@94 ($generated@@333 $generated@@573) $generated@@576))
))))
 :pattern ( ($generated@@139 $generated@@573 ($generated@@442 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@353 $generated@@87 $generated@@87)) (= (type $generated@@578) $generated@@71)) (= (type $generated@@579) $generated@@71)) (= ($generated@@139 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@87) ($generated@@0 ($generated@@94 ($generated@@351 $generated@@577) $generated@@580))) (and ($generated@@271 ($generated@@94 ($generated@@425 $generated@@577) $generated@@580) $generated@@579) ($generated@@271 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@94 ($generated@@425 $generated@@577) $generated@@580))
 :pattern ( ($generated@@94 ($generated@@351 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@139 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@87) (= (type $generated@@584) $generated@@87)) (< ($generated@@581 $generated@@583) ($generated@@582 ($generated@@270 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@270 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@87) (= (type $generated@@586) $generated@@87)) (< ($generated@@581 $generated@@586) ($generated@@582 ($generated@@270 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@270 $generated@@585 $generated@@586))
)))
(assert  (and (forall (($generated@@589 T@U) ) (! (= (type ($generated@@587 $generated@@589)) $generated@@82)
 :pattern ( ($generated@@587 $generated@@589))
)) (= (type $generated@@588) $generated@@82)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@82) (= ($generated@@80 $generated@@590) ($generated@@80 $generated@@588)))
 :pattern ( ($generated@@80 ($generated@@587 $generated@@590)))
)))
(assert (forall (($generated@@591 Int) ) (! (= ($generated@@139 ($generated@@89 $generated@@591) $generated@@258) ($generated@@139 ($generated@@8 $generated@@591) $generated@@46))
 :pattern ( ($generated@@139 ($generated@@89 $generated@@591) $generated@@258))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@87) (= (type $generated@@593) $generated@@71)) (= (type $generated@@594) $generated@@71)) ($generated@@271 $generated@@592 ($generated@@442 $generated@@593 $generated@@594))) (and (= ($generated@@88 ($generated@@372 ($generated@@335 $generated@@87 $generated@@87) $generated@@592)) $generated@@592) ($generated@@139 ($generated@@372 ($generated@@335 $generated@@87 $generated@@87) $generated@@592) ($generated@@442 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@271 $generated@@592 ($generated@@442 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@87) (= (type $generated@@596) $generated@@71)) (= (type $generated@@597) $generated@@71)) ($generated@@271 $generated@@595 ($generated@@450 $generated@@596 $generated@@597))) (and (= ($generated@@88 ($generated@@372 ($generated@@353 $generated@@87 $generated@@87) $generated@@595)) $generated@@595) ($generated@@139 ($generated@@372 ($generated@@353 $generated@@87 $generated@@87) $generated@@595) ($generated@@450 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@271 $generated@@595 ($generated@@450 $generated@@596 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@71) (= (type $generated@@599) $generated@@71)) (= (type $generated@@600) $generated@@87)) ($generated@@271 $generated@@600 ($generated@@183 $generated@@598 $generated@@599))) (and (= ($generated@@88 ($generated@@372 $generated@@96 $generated@@600)) $generated@@600) ($generated@@139 ($generated@@372 $generated@@96 $generated@@600) ($generated@@183 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@271 $generated@@600 ($generated@@183 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@601)))
 (not ($generated@@0 ($generated@@94 ($generated@@86 $generated@@602) $generated@@601))))
 :pattern ( (let (($generated@@602 (type $generated@@601)))
($generated@@94 ($generated@@86 $generated@@602) $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
 (not ($generated@@0 ($generated@@94 ($generated@@471 $generated@@604) $generated@@603))))
 :pattern ( (let (($generated@@604 (type $generated@@603)))
($generated@@94 ($generated@@471 $generated@@604) $generated@@603)))
)))
(assert  (=> (<= 4 $generated@@79) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@91 $generated@@87 $generated@@4)) (or ($generated@@266 $generated@@605) (and (not (= 4 $generated@@79)) ($generated@@139 $generated@@605 ($generated@@267 $generated@@177))))) (and (forall (($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@606) $generated@@96) ($generated@@139 $generated@@606 $generated@@177)) ($generated@@0 ($generated@@94 $generated@@605 ($generated@@88 $generated@@606)))) ($generated@@180 $generated@@606))
 :pattern ( ($generated@@179 $generated@@606))
 :pattern ( ($generated@@94 $generated@@605 ($generated@@88 $generated@@606)))
)) (= ($generated@@265 $generated@@605) (forall (($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@96) ($generated@@139 $generated@@607 $generated@@177)) ($generated@@0 ($generated@@94 $generated@@605 ($generated@@88 $generated@@607)))) (= ($generated@@179 $generated@@607) ($generated@@90 1)))
 :pattern ( ($generated@@179 $generated@@607))
 :pattern ( ($generated@@94 $generated@@605 ($generated@@88 $generated@@607)))
)))))
 :pattern ( ($generated@@265 $generated@@605))
))))
(assert (forall (($generated@@609 T@U) ) (! (= (type ($generated@@608 $generated@@609)) $generated@@76)
 :pattern ( ($generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@71) (= (type $generated@@611) $generated@@71)) (and (= ($generated@@135 ($generated@@183 $generated@@610 $generated@@611)) $generated@@62) (= ($generated@@608 ($generated@@183 $generated@@610 $generated@@611)) $generated@@67)))
 :pattern ( ($generated@@183 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@96) (= (type $generated@@613) ($generated@@91 $generated@@150 $generated@@151))) (and ($generated@@294 $generated@@613) (and ($generated@@263 $generated@@612) ($generated@@148 $generated@@612 $generated@@258 $generated@@613)))) ($generated@@148 ($generated@@8 ($generated@@316 $generated@@612)) $generated@@46 $generated@@613))
 :pattern ( ($generated@@148 ($generated@@8 ($generated@@316 $generated@@612)) $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@96) (= ($generated@@581 ($generated@@88 $generated@@614)) ($generated@@582 $generated@@614)))
 :pattern ( ($generated@@581 ($generated@@88 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@82) (= ($generated@@80 ($generated@@81 $generated@@615)) ($generated@@80 $generated@@615)))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@615)))
)))
(assert  (=> (<= 3 $generated@@79) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@96) (or ($generated@@176 $generated@@616) (and (not (= 3 $generated@@79)) ($generated@@139 $generated@@616 $generated@@177)))) (and (and ($generated@@263 $generated@@616) (=> (< ($generated@@90 0) ($generated@@316 $generated@@616)) ($generated@@263 $generated@@616))) (= ($generated@@138 $generated@@616) (> (ite (<= ($generated@@316 $generated@@616) ($generated@@90 0)) ($generated@@458 1 ($generated@@90 0)) ($generated@@316 $generated@@616)) 1))))
 :pattern ( ($generated@@138 $generated@@616))
))))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@87) ($generated@@271 $generated@@617 ($generated@@149 0))) (and (= ($generated@@88 ($generated@@372 $generated@@2 $generated@@617)) $generated@@617) ($generated@@139 ($generated@@372 ($generated@@91 $generated@@87 $generated@@4) $generated@@617) ($generated@@149 0))))
 :pattern ( ($generated@@271 $generated@@617 ($generated@@149 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@87) (= (type $generated@@619) $generated@@71)) ($generated@@271 $generated@@618 ($generated@@267 $generated@@619))) (and (= ($generated@@88 ($generated@@372 ($generated@@91 $generated@@87 $generated@@4) $generated@@618)) $generated@@618) ($generated@@139 ($generated@@372 ($generated@@91 $generated@@87 $generated@@4) $generated@@618) ($generated@@267 $generated@@619))))
 :pattern ( ($generated@@271 $generated@@618 ($generated@@267 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@87) (= (type $generated@@621) $generated@@71)) ($generated@@271 $generated@@620 ($generated@@287 $generated@@621))) (and (= ($generated@@88 ($generated@@372 ($generated@@91 $generated@@87 $generated@@4) $generated@@620)) $generated@@620) ($generated@@139 ($generated@@372 ($generated@@91 $generated@@87 $generated@@4) $generated@@620) ($generated@@287 $generated@@621))))
 :pattern ( ($generated@@271 $generated@@620 ($generated@@287 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@87) (= (type $generated@@623) $generated@@71)) ($generated@@271 $generated@@622 ($generated@@196 $generated@@623))) (and (= ($generated@@88 ($generated@@372 ($generated@@91 $generated@@87 $generated@@2) $generated@@622)) $generated@@622) ($generated@@139 ($generated@@372 ($generated@@91 $generated@@87 $generated@@2) $generated@@622) ($generated@@196 $generated@@623))))
 :pattern ( ($generated@@271 $generated@@622 ($generated@@196 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@87) (= (type $generated@@625) $generated@@71)) ($generated@@271 $generated@@624 ($generated@@538 $generated@@625))) (and (= ($generated@@88 ($generated@@372 ($generated@@310 $generated@@87) $generated@@624)) $generated@@624) ($generated@@139 ($generated@@372 ($generated@@310 $generated@@87) $generated@@624) ($generated@@538 $generated@@625))))
 :pattern ( ($generated@@271 $generated@@624 ($generated@@538 $generated@@625)))
)))
(assert (= ($generated@@135 $generated@@258) $generated@@64))
(assert (= ($generated@@608 $generated@@258) $generated@@68))
(assert (= ($generated@@135 $generated@@257) $generated@@65))
(assert (= ($generated@@608 $generated@@257) $generated@@69))
(assert (= ($generated@@135 $generated@@177) $generated@@66))
(assert (= ($generated@@608 $generated@@177) $generated@@70))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@91 $generated@@87 $generated@@2)) (= (type $generated@@627) $generated@@71)) (= (type $generated@@628) ($generated@@91 $generated@@150 $generated@@151))) (= ($generated@@148 $generated@@626 ($generated@@196 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@87) (< 0 ($generated ($generated@@94 $generated@@626 $generated@@629)))) ($generated@@295 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@94 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@148 $generated@@626 ($generated@@196 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@96) (= (type $generated@@631) $generated@@71)) (= (type $generated@@632) ($generated@@91 $generated@@150 $generated@@151))) (and ($generated@@294 $generated@@632) (and ($generated@@182 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@71) ($generated@@148 $generated@@630 ($generated@@183 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@148 $generated@@630 ($generated@@183 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@295 ($generated@@190 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@295 ($generated@@190 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@96) (= (type $generated@@635) $generated@@71)) (= (type $generated@@636) ($generated@@91 $generated@@150 $generated@@151))) (and ($generated@@294 $generated@@636) (and ($generated@@182 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@71) ($generated@@148 $generated@@634 ($generated@@183 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@148 $generated@@634 ($generated@@183 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@295 ($generated@@191 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@295 ($generated@@191 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@87) (= (type $generated@@639) $generated@@87)) (= ($generated@@270 ($generated@@84 $generated@@638) ($generated@@84 $generated@@639)) ($generated@@84 ($generated@@270 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@270 ($generated@@84 $generated@@638) ($generated@@84 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@88 ($generated@@8 ($generated@@90 $generated@@640))) ($generated@@84 ($generated@@88 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@88 ($generated@@8 ($generated@@90 $generated@@640))))
)))
(assert (forall (($generated@@641 Int) ) (! (= ($generated@@89 ($generated@@90 $generated@@641)) ($generated@@84 ($generated@@89 $generated@@641)))
 :pattern ( ($generated@@89 ($generated@@90 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (= ($generated@@88 ($generated@@84 $generated@@642)) ($generated@@84 ($generated@@88 $generated@@642)))
 :pattern ( ($generated@@88 ($generated@@84 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@311 (type $generated@@643))))
 (=> (and (= (type $generated@@643) ($generated@@310 $generated@@644)) (= ($generated@@309 $generated@@643) 0)) (= $generated@@643 ($generated@@308 $generated@@644))))
 :pattern ( ($generated@@309 $generated@@643))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (! (let (($generated@@648 (type $generated@@646)))
 (=> (and (and (= (type $generated@@645) ($generated@@91 $generated@@648 $generated@@2)) (= (type $generated@@647) $generated@@2)) (<= 0 ($generated $generated@@647))) (= ($generated@@327 ($generated@@95 $generated@@645 $generated@@646 $generated@@647)) (+ (- ($generated@@327 $generated@@645) ($generated ($generated@@94 $generated@@645 $generated@@646))) ($generated $generated@@647)))))
 :pattern ( ($generated@@327 ($generated@@95 $generated@@645 $generated@@646 $generated@@647)))
)))
(assert  (=> (<= 3 $generated@@79) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@96) (or ($generated@@176 ($generated@@84 $generated@@649)) (and (not (= 3 $generated@@79)) ($generated@@139 $generated@@649 $generated@@177)))) (and (and ($generated@@263 ($generated@@84 $generated@@649)) (=> (< ($generated@@90 0) ($generated@@90 ($generated@@316 ($generated@@84 $generated@@649)))) ($generated@@263 ($generated@@84 $generated@@649)))) (= ($generated@@138 ($generated@@84 $generated@@649)) (> (ite (<= ($generated@@90 ($generated@@316 ($generated@@84 $generated@@649))) ($generated@@90 0)) ($generated@@458 1 ($generated@@90 0)) ($generated@@316 ($generated@@84 $generated@@649))) 1))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@84 $generated@@649)))
))))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@91 $generated@@150 $generated@@151)) (= (type $generated@@651) $generated@@2)) ($generated@@148 $generated@@651 $generated@@46 $generated@@650))
 :pattern ( ($generated@@148 $generated@@651 $generated@@46 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@91 $generated@@150 $generated@@151)) (= (type $generated@@653) $generated@@3)) ($generated@@148 $generated@@653 $generated@@47 $generated@@652))
 :pattern ( ($generated@@148 $generated@@653 $generated@@47 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@91 $generated@@150 $generated@@151)) (= (type $generated@@655) $generated@@4)) ($generated@@148 $generated@@655 $generated@@44 $generated@@654))
 :pattern ( ($generated@@148 $generated@@655 $generated@@44 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@91 $generated@@150 $generated@@151)) (= (type $generated@@657) $generated@@495)) ($generated@@148 $generated@@657 $generated@@45 $generated@@656))
 :pattern ( ($generated@@148 $generated@@657 $generated@@45 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@91 $generated@@150 $generated@@151)) (= (type $generated@@659) $generated@@87)) ($generated@@148 $generated@@659 $generated@@48 $generated@@658))
 :pattern ( ($generated@@148 $generated@@659 $generated@@48 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@310 $generated@@87)) (= (type $generated@@661) $generated@@71)) (= ($generated@@139 $generated@@660 ($generated@@538 $generated@@661)) (forall (($generated@@662 Int) ) (!  (=> (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@309 $generated@@660))) ($generated@@271 ($generated@@539 $generated@@660 $generated@@662) $generated@@661))
 :pattern ( ($generated@@539 $generated@@660 $generated@@662))
))))
 :pattern ( ($generated@@139 $generated@@660 ($generated@@538 $generated@@661)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 Int) ) (!  (=> (= (type $generated@@664) ($generated@@310 $generated@@87)) (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@309 $generated@@664))) (< ($generated@@582 ($generated@@372 $generated@@96 ($generated@@539 $generated@@664 $generated@@665))) ($generated@@663 $generated@@664))))
 :pattern ( ($generated@@582 ($generated@@372 $generated@@96 ($generated@@539 $generated@@664 $generated@@665))))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) ($generated@@335 $generated@@87 $generated@@87)) (= (type $generated@@667) $generated@@71)) (= (type $generated@@668) $generated@@71)) ($generated@@139 $generated@@666 ($generated@@442 $generated@@667 $generated@@668))) (and (and ($generated@@139 ($generated@@333 $generated@@666) ($generated@@267 $generated@@667)) ($generated@@139 ($generated@@382 $generated@@666) ($generated@@267 $generated@@668))) ($generated@@139 ($generated@@416 $generated@@666) ($generated@@267 ($generated@@183 $generated@@667 $generated@@668)))))
 :pattern ( ($generated@@139 $generated@@666 ($generated@@442 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@353 $generated@@87 $generated@@87)) (= (type $generated@@670) $generated@@71)) (= (type $generated@@671) $generated@@71)) ($generated@@139 $generated@@669 ($generated@@450 $generated@@670 $generated@@671))) (and (and ($generated@@139 ($generated@@351 $generated@@669) ($generated@@287 $generated@@670)) ($generated@@139 ($generated@@393 $generated@@669) ($generated@@287 $generated@@671))) ($generated@@139 ($generated@@424 $generated@@669) ($generated@@287 ($generated@@183 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@139 $generated@@669 ($generated@@450 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@2) ($generated@@139 $generated@@672 $generated@@46))
 :pattern ( ($generated@@139 $generated@@672 $generated@@46))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@3) ($generated@@139 $generated@@673 $generated@@47))
 :pattern ( ($generated@@139 $generated@@673 $generated@@47))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@4) ($generated@@139 $generated@@674 $generated@@44))
 :pattern ( ($generated@@139 $generated@@674 $generated@@44))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@495) ($generated@@139 $generated@@675 $generated@@45))
 :pattern ( ($generated@@139 $generated@@675 $generated@@45))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@87) ($generated@@139 $generated@@676 $generated@@48))
 :pattern ( ($generated@@139 $generated@@676 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@677 () Bool)
(declare-fun $generated@@678 () Bool)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 (T@U) Bool)
(declare-fun $generated@@688 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@679) ($generated@@91 $generated@@87 $generated@@4)) (= (type $generated@@680) ($generated@@91 $generated@@87 $generated@@4))) (= (type $generated@@681) ($generated@@91 $generated@@150 $generated@@151))) (= (type $generated@@682) $generated@@96)) (= (type $generated@@683) $generated@@82)) (= (type $generated@@684) $generated@@82)) (= (type $generated@@685) ($generated@@203 $generated@@150 $generated@@4))) (= (type $generated@@686) $generated@@150)) (= (type $generated@@688) ($generated@@91 $generated@@87 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@689 true))
(let (($generated@@690  (=> (and (not $generated@@677) (= (ControlFlow 0 3) 1)) $generated@@689)))
(let (($generated@@691  (=> (and $generated@@677 (= (ControlFlow 0 2) 1)) $generated@@689)))
(let (($generated@@692  (=> (and (=> $generated@@678 (and (forall (($generated@@693 T@U) ) (!  (=> (and (and (= (type $generated@@693) $generated@@96) ($generated@@139 $generated@@693 $generated@@177)) ($generated@@0 ($generated@@94 $generated@@679 ($generated@@88 $generated@@693)))) ($generated@@176 $generated@@693))
 :pattern ( ($generated@@138 $generated@@693))
 :pattern ( ($generated@@94 $generated@@679 ($generated@@88 $generated@@693)))
)) ($generated@@266 ($generated@@137 $generated@@177 $generated@@679 $generated@@679)))) (= $generated@@677  (and $generated@@678 ($generated@@265 ($generated@@137 $generated@@177 $generated@@679 $generated@@679))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) $generated@@677) (=> $generated@@677 (and (=> (= (ControlFlow 0 4) 2) $generated@@691) (=> (= (ControlFlow 0 4) 3) $generated@@690)))))))
(let (($generated@@694  (=> (and (and (= $generated@@680 ($generated@@137 $generated@@177 $generated@@679 $generated@@679)) ($generated@@148 $generated@@680 ($generated@@267 $generated@@177) $generated@@681)) (and ($generated@@266 ($generated@@137 $generated@@177 $generated@@679 $generated@@679)) (= (ControlFlow 0 7) 4))) $generated@@692)))
(let (($generated@@695  (=> (and (not (and ($generated@@0 ($generated@@94 $generated@@679 ($generated@@88 $generated@@682))) ($generated@@138 $generated@@682))) (= (ControlFlow 0 10) 7)) $generated@@694)))
(let (($generated@@696  (=> (and (and ($generated@@0 ($generated@@94 $generated@@679 ($generated@@88 $generated@@682))) ($generated@@138 $generated@@682)) (= (ControlFlow 0 9) 7)) $generated@@694)))
(let (($generated@@697  (=> (not ($generated@@0 ($generated@@94 $generated@@679 ($generated@@88 $generated@@682)))) (and (=> (= (ControlFlow 0 12) 9) $generated@@696) (=> (= (ControlFlow 0 12) 10) $generated@@695)))))
(let (($generated@@698  (=> ($generated@@0 ($generated@@94 $generated@@679 ($generated@@88 $generated@@682))) (=> (and ($generated@@148 $generated@@682 $generated@@177 $generated@@681) ($generated@@176 $generated@@682)) (and (=> (= (ControlFlow 0 11) 9) $generated@@696) (=> (= (ControlFlow 0 11) 10) $generated@@695))))))
(let (($generated@@699  (=> (and ($generated@@139 $generated@@682 $generated@@177) ($generated@@148 $generated@@682 $generated@@177 $generated@@681)) (and (=> (= (ControlFlow 0 13) 11) $generated@@698) (=> (= (ControlFlow 0 13) 12) $generated@@697)))))
(let (($generated@@700  (=> (and (not (and ($generated@@139 $generated@@682 $generated@@177) ($generated@@148 $generated@@682 $generated@@177 $generated@@681))) (= (ControlFlow 0 8) 7)) $generated@@694)))
(let (($generated@@701  (=> $generated@@678 (and (=> (= (ControlFlow 0 14) 13) $generated@@699) (=> (= (ControlFlow 0 14) 8) $generated@@700)))))
(let (($generated@@702  (=> (and (not $generated@@678) (= (ControlFlow 0 6) 4)) $generated@@692)))
(let (($generated@@703  (=> (= ($generated@@587 $generated@@683) $generated@@683) (=> (and (= ($generated@@587 $generated@@684) $generated@@684) (= $generated@@685 ($generated@@202 $generated@@686 $generated@@681 $generated@@60 false))) (=> (and (and $generated@@83 $generated@@83) (and (= $generated@@679 ($generated@@80 $generated@@683)) (= $generated@@678 ($generated@@0 ($generated@@84 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 15) 14) $generated@@701) (=> (= (ControlFlow 0 15) 6) $generated@@702)))))))
(let (($generated@@704  (=> (and ($generated@@294 $generated@@681) ($generated@@687 $generated@@681)) (=> (and (and (and ($generated@@139 $generated@@688 ($generated@@267 $generated@@258)) ($generated@@148 $generated@@688 ($generated@@267 $generated@@258) $generated@@681)) true) (and (= 5 $generated@@79) (= (ControlFlow 0 16) 15))) $generated@@703))))
$generated@@704))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
