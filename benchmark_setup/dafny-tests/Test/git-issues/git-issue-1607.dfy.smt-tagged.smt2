(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@273 (Bool) T@U)
(declare-fun $generated@@277 (Bool) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 () T@U)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Bool)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@446 () T@T)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@601 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (= ($generated@@1 $generated@@78) 11))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (= (type $generated@@80) $generated@@78) (= (type $generated@@81) $generated@@78)) (and ($generated@@77 $generated@@80) ($generated@@77 $generated@@81))) (= ($generated@@76 $generated@@80 $generated@@81) (= ($generated@@79 $generated@@80) ($generated@@79 $generated@@81))))
 :pattern ( ($generated@@76 $generated@@80 $generated@@81) ($generated@@77 $generated@@80))
 :pattern ( ($generated@@76 $generated@@80 $generated@@81) ($generated@@77 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (and (= (type $generated@@84) $generated@@78) (= (type $generated@@85) $generated@@78)) (and ($generated@@82 $generated@@84) ($generated@@82 $generated@@85))) (= ($generated@@76 $generated@@84 $generated@@85) (= ($generated@@83 $generated@@84) ($generated@@83 $generated@@85))))
 :pattern ( ($generated@@76 $generated@@84 $generated@@85) ($generated@@82 $generated@@84))
 :pattern ( ($generated@@76 $generated@@84 $generated@@85) ($generated@@82 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@89 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@89 0)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@68)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@68) (= (type $generated@@153) $generated@@68)) (= (type $generated@@154) $generated@@78)) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@78) (= (type $generated@@162) $generated@@78)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@90 $generated@@158 $generated@@2)) (= (type $generated@@167) $generated@@68)) ($generated@@146 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@146 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@91 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@71 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@91) (= (type $generated@@218) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@219) ($generated@@70 $generated@@4))) (= (type $generated@@221) $generated@@91)) (= (type $generated@@222) ($generated@@70 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@78)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@68) (= (type $generated@@229) $generated@@68)) (= (type $generated@@230) $generated@@158)) (= (type $generated@@231) $generated@@158)) (= ($generated@@146 ($generated@@224 $generated@@230 $generated@@231) ($generated@@149 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@146 ($generated@@224 $generated@@230 $generated@@231) ($generated@@149 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@78) (= (type $generated@@233) $generated@@78)) (= ($generated@@155 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@155 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@78) (= (type $generated@@235) $generated@@78)) (= ($generated@@76 $generated@@234 $generated@@235) (= $generated@@234 $generated@@235)))
 :pattern ( ($generated@@76 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@68)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@90 $generated@@158 $generated@@4)) (= (type $generated@@239) $generated@@68)) (= ($generated@@146 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@158) ($generated@@0 ($generated@@95 $generated@@238 $generated@@240))) ($generated@@225 $generated@@240 $generated@@239))
 :pattern ( ($generated@@95 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@146 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@68)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@90 $generated@@158 $generated@@4)) (= (type $generated@@244) $generated@@68)) (= ($generated@@146 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@158) ($generated@@0 ($generated@@95 $generated@@243 $generated@@245))) ($generated@@225 $generated@@245 $generated@@244))
 :pattern ( ($generated@@95 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@146 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@68) (= (type $generated@@253) $generated@@68)) (= (type $generated@@254) $generated@@158)) (= (type $generated@@255) $generated@@158)) (= (type $generated@@256) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@250 $generated@@256)) (= ($generated@@88 ($generated@@224 $generated@@254 $generated@@255) ($generated@@149 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@88 ($generated@@224 $generated@@254 $generated@@255) ($generated@@149 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@72)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@78) (= ($generated@@148 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@78) (= ($generated@@77 $generated@@260) (= ($generated@@257 $generated@@260) $generated@@63)))
 :pattern ( ($generated@@77 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@78) (= ($generated@@82 $generated@@261) (= ($generated@@257 $generated@@261) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@78) ($generated@@148 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@158) (= (type $generated@@264) $generated@@158)) (= $generated@@262 ($generated@@224 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@148 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@274 Bool) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@78)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@78) ($generated@@77 $generated@@275)) (exists (($generated@@276 Bool) ) (= $generated@@275 ($generated@@273 $generated@@276))))
 :pattern ( ($generated@@77 $generated@@275))
)))
(assert (forall (($generated@@278 Bool) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@78)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@78) ($generated@@82 $generated@@279)) (exists (($generated@@280 Bool) ) (= $generated@@279 ($generated@@277 $generated@@280))))
 :pattern ( ($generated@@82 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@158)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@68) (= (type $generated@@285) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@251 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@88 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@251 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@90 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@93 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@90 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@95 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@90 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@95 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@95 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@90 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@95 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@95 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@93 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@90 $generated@@329 $generated@@2)) (= ($generated@@164 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@95 $generated@@328 $generated@@330))) (<= ($generated ($generated@@95 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@95 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@164 $generated@@328))
)))
(assert  (and (= (type $generated@@331) $generated@@68) (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@158) ($generated@@225 $generated@@335 $generated@@331)) (and (= ($generated@@281 ($generated@@332 $generated@@78 $generated@@335)) $generated@@335) ($generated@@146 ($generated@@332 $generated@@78 $generated@@335) $generated@@331)))
 :pattern ( ($generated@@225 $generated@@335 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@296 (type $generated@@336))))
(let (($generated@@338 ($generated@@295 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@294 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@293 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@95 ($generated@@292 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@292 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@296 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@90 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@296 (type $generated@@343))))
(let (($generated@@345 ($generated@@295 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@294 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@293 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@95 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@314 (type $generated@@347))))
(let (($generated@@349 ($generated@@313 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@312 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@311 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@95 ($generated@@310 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@310 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@314 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@90 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@314 (type $generated@@354))))
(let (($generated@@356 ($generated@@313 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@312 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@311 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@95 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@90 $generated@@158 $generated@@2)) (= (type $generated@@359) $generated@@68)) (= ($generated@@146 $generated@@358 ($generated@@163 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@158) (< 0 ($generated ($generated@@95 $generated@@358 $generated@@360)))) ($generated@@225 $generated@@360 $generated@@359))
 :pattern ( ($generated@@95 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@146 $generated@@358 ($generated@@163 $generated@@359)))
)))
(assert (forall (($generated@@361 Bool) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@250 $generated@@362)) (= ($generated@@88 ($generated@@273 $generated@@361) $generated@@331 $generated@@362) ($generated@@88 ($generated@@11 $generated@@361) $generated@@44 $generated@@362)))
 :pattern ( ($generated@@88 ($generated@@273 $generated@@361) $generated@@331 $generated@@362))
)))
(assert (forall (($generated@@363 Bool) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@250 $generated@@364)) (= ($generated@@88 ($generated@@277 $generated@@363) $generated@@331 $generated@@364) ($generated@@88 ($generated@@11 $generated@@363) $generated@@44 $generated@@364)))
 :pattern ( ($generated@@88 ($generated@@277 $generated@@363) $generated@@331 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@78) ($generated@@365 $generated@@366)) (or ($generated@@77 $generated@@366) ($generated@@82 $generated@@366)))
 :pattern ( ($generated@@365 $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@90 $generated@@158 $generated@@4)) (= (type $generated@@368) $generated@@68)) (= (type $generated@@369) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@367 ($generated@@236 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@158) ($generated@@0 ($generated@@95 $generated@@367 $generated@@370))) ($generated@@251 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@95 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@88 $generated@@367 ($generated@@236 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@90 $generated@@158 $generated@@4)) (= (type $generated@@372) $generated@@68)) (= (type $generated@@373) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@371 ($generated@@241 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@158) ($generated@@0 ($generated@@95 $generated@@371 $generated@@374))) ($generated@@251 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@95 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@88 $generated@@371 ($generated@@241 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(= ($generated ($generated@@95 ($generated@@287 $generated@@376) $generated@@375)) 0))
 :pattern ( (let (($generated@@376 (type $generated@@375)))
($generated@@95 ($generated@@287 $generated@@376) $generated@@375)))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@90 $generated@@158 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@296 (type $generated@@380))))
(let (($generated@@382 ($generated@@295 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@90 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@294 $generated@@158 $generated@@158)) (= (type $generated@@384) $generated@@158)) (= ($generated@@0 ($generated@@95 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@95 ($generated@@292 $generated@@383) ($generated@@156 ($generated@@332 $generated@@78 $generated@@384)))) (= ($generated@@95 ($generated@@378 $generated@@383) ($generated@@156 ($generated@@332 $generated@@78 $generated@@384))) ($generated@@157 ($generated@@332 $generated@@78 $generated@@384))))))
 :pattern ( ($generated@@95 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@90 $generated@@158 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@314 (type $generated@@388))))
(let (($generated@@390 ($generated@@313 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@90 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@392) $generated@@158)) (= ($generated@@0 ($generated@@95 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@95 ($generated@@310 $generated@@391) ($generated@@156 ($generated@@332 $generated@@78 $generated@@392)))) (= ($generated@@95 ($generated@@386 $generated@@391) ($generated@@156 ($generated@@332 $generated@@78 $generated@@392))) ($generated@@157 ($generated@@332 $generated@@78 $generated@@392))))))
 :pattern ( ($generated@@95 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@295 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@294 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@95 ($generated@@340 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@95 ($generated@@292 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@95 ($generated@@378 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@95 ($generated@@292 $generated@@393) $generated@@397))
 :pattern ( ($generated@@95 ($generated@@378 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@95 ($generated@@340 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@313 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@312 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@95 ($generated@@351 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@95 ($generated@@310 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@95 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@95 ($generated@@310 $generated@@398) $generated@@402))
 :pattern ( ($generated@@95 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@95 ($generated@@351 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@68)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@294 $generated@@158 $generated@@158)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) $generated@@68)) (= (type $generated@@409) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@158) ($generated@@0 ($generated@@95 ($generated@@292 $generated@@406) $generated@@410))) (and ($generated@@251 ($generated@@95 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@251 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@95 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@95 ($generated@@292 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@88 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@68)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@415) $generated@@68)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@158) ($generated@@0 ($generated@@95 ($generated@@310 $generated@@414) $generated@@418))) (and ($generated@@251 ($generated@@95 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@251 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@95 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@95 ($generated@@310 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@88 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 Bool) ) (! (= ($generated@@79 ($generated@@273 $generated@@419)) $generated@@419)
 :pattern ( ($generated@@273 $generated@@419))
)))
(assert (forall (($generated@@420 Bool) ) (! (= ($generated@@83 ($generated@@277 $generated@@420)) $generated@@420)
 :pattern ( ($generated@@277 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@78) ($generated@@146 $generated@@421 $generated@@331)) (or ($generated@@77 $generated@@421) ($generated@@82 $generated@@421)))
 :pattern ( ($generated@@82 $generated@@421) ($generated@@146 $generated@@421 $generated@@331))
 :pattern ( ($generated@@77 $generated@@421) ($generated@@146 $generated@@421 $generated@@331))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@90 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@314 (type $generated@@424))))
(let (($generated@@426 ($generated@@313 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@312 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@311 $generated@@426 $generated@@425)) (= ($generated@@310 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@310 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@314 (type $generated@@427))))
(let (($generated@@429 ($generated@@313 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@312 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@311 $generated@@429 $generated@@428)) (= ($generated@@351 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@351 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@314 (type $generated@@430))))
(let (($generated@@432 ($generated@@313 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@312 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@311 $generated@@432 $generated@@431)) (= ($generated@@385 $generated@@430) ($generated@@422 $generated@@158))))))
 :pattern ( ($generated@@385 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@296 (type $generated@@433))))
(let (($generated@@435 ($generated@@295 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@294 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@293 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@158) (= (type $generated@@437) $generated@@158)) ($generated@@0 ($generated@@95 ($generated@@377 $generated@@433) ($generated@@281 ($generated@@224 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@377 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@314 (type $generated@@438))))
(let (($generated@@440 ($generated@@313 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@312 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@311 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@158) (= (type $generated@@442) $generated@@158)) ($generated@@0 ($generated@@95 ($generated@@385 $generated@@438) ($generated@@281 ($generated@@224 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@158) ($generated@@225 $generated@@443 $generated@@46)) (and (= ($generated@@281 ($generated@@332 $generated@@2 $generated@@443)) $generated@@443) ($generated@@146 ($generated@@332 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@158) ($generated@@225 $generated@@444 $generated@@47)) (and (= ($generated@@281 ($generated@@332 $generated@@3 $generated@@444)) $generated@@444) ($generated@@146 ($generated@@332 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@158) ($generated@@225 $generated@@445 $generated@@44)) (and (= ($generated@@281 ($generated@@332 $generated@@4 $generated@@445)) $generated@@445) ($generated@@146 ($generated@@332 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@445 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@446) 20))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@158) ($generated@@225 $generated@@447 $generated@@45)) (and (= ($generated@@281 ($generated@@332 $generated@@446 $generated@@447)) $generated@@447) ($generated@@146 ($generated@@332 $generated@@446 $generated@@447) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@447 $generated@@45))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (= (type $generated@@449) $generated@@68) (= ($generated@@225 ($generated@@281 $generated@@448) $generated@@449) ($generated@@146 $generated@@448 $generated@@449)))
 :pattern ( ($generated@@225 ($generated@@281 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@93 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@90 $generated@@451 $generated@@2)) (<= 0 ($generated@@286 $generated@@450))))
 :pattern ( ($generated@@286 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@268 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@267 $generated@@453)) (<= 0 ($generated@@266 $generated@@452))))
 :pattern ( ($generated@@266 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@68) (= (type $generated@@457) $generated@@68)) (= ($generated@@454 ($generated@@403 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@403 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ) (! (= (type ($generated@@458 $generated@@459)) $generated@@68)
 :pattern ( ($generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@458 ($generated@@403 $generated@@460 $generated@@461)) $generated@@461))
 :pattern ( ($generated@@403 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@86 ($generated@@403 $generated@@462 $generated@@463)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@411 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@411 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@68)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@468 ($generated@@411 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@411 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@86 ($generated@@411 $generated@@472 $generated@@473)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@158) (= (type $generated@@475) $generated@@158)) (= ($generated@@257 ($generated@@224 $generated@@474 $generated@@475)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@149 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@149 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@149 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@149 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@158) (= (type $generated@@485) $generated@@158)) (= ($generated@@156 ($generated@@224 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@224 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@158) (= (type $generated@@487) $generated@@158)) (= ($generated@@157 ($generated@@224 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@224 $generated@@486 $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@268 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@267 $generated@@158)) (= (type $generated@@495) $generated@@68)) (= (type $generated@@496) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@266 $generated@@494))) ($generated@@251 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@88 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@89 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@89 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@68) (= ($generated@@500 ($generated@@236 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@236 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@86 ($generated@@236 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@504 ($generated@@241 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@241 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@86 ($generated@@241 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@68)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@508 ($generated@@163 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@163 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@68) (= ($generated@@86 ($generated@@163 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@86 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 Bool) ) (! (= ($generated@@257 ($generated@@273 $generated@@516)) $generated@@63)
 :pattern ( ($generated@@273 $generated@@516))
)))
(assert (forall (($generated@@517 Bool) ) (! (= ($generated@@257 ($generated@@277 $generated@@517)) $generated@@65)
 :pattern ( ($generated@@277 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 (type $generated@@518)))
(= ($generated@@332 $generated@@519 ($generated@@281 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@281 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@294 $generated@@158 $generated@@158)) (= (type $generated@@521) $generated@@68)) (= (type $generated@@522) $generated@@68)) (= ($generated@@146 $generated@@520 ($generated@@403 $generated@@521 $generated@@522)) (forall (($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@158) ($generated@@0 ($generated@@95 ($generated@@292 $generated@@520) $generated@@523))) (and ($generated@@225 ($generated@@95 ($generated@@378 $generated@@520) $generated@@523) $generated@@522) ($generated@@225 $generated@@523 $generated@@521)))
 :pattern ( ($generated@@95 ($generated@@378 $generated@@520) $generated@@523))
 :pattern ( ($generated@@95 ($generated@@292 $generated@@520) $generated@@523))
))))
 :pattern ( ($generated@@146 $generated@@520 ($generated@@403 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@525) $generated@@68)) (= (type $generated@@526) $generated@@68)) (= ($generated@@146 $generated@@524 ($generated@@411 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@158) ($generated@@0 ($generated@@95 ($generated@@310 $generated@@524) $generated@@527))) (and ($generated@@225 ($generated@@95 ($generated@@386 $generated@@524) $generated@@527) $generated@@526) ($generated@@225 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@95 ($generated@@386 $generated@@524) $generated@@527))
 :pattern ( ($generated@@95 ($generated@@310 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@146 $generated@@524 ($generated@@411 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@158) (= (type $generated@@531) $generated@@158)) (< ($generated@@528 $generated@@530) ($generated@@529 ($generated@@224 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@158) (= (type $generated@@533) $generated@@158)) (< ($generated@@528 $generated@@533) ($generated@@529 ($generated@@224 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 Bool) ) (! (= ($generated@@146 ($generated@@273 $generated@@534) $generated@@331) ($generated@@146 ($generated@@11 $generated@@534) $generated@@44))
 :pattern ( ($generated@@146 ($generated@@273 $generated@@534) $generated@@331))
)))
(assert (forall (($generated@@535 Bool) ) (! (= ($generated@@146 ($generated@@277 $generated@@535) $generated@@331) ($generated@@146 ($generated@@11 $generated@@535) $generated@@44))
 :pattern ( ($generated@@146 ($generated@@277 $generated@@535) $generated@@331))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@158) (= (type $generated@@537) $generated@@68)) (= (type $generated@@538) $generated@@68)) ($generated@@225 $generated@@536 ($generated@@403 $generated@@537 $generated@@538))) (and (= ($generated@@281 ($generated@@332 ($generated@@294 $generated@@158 $generated@@158) $generated@@536)) $generated@@536) ($generated@@146 ($generated@@332 ($generated@@294 $generated@@158 $generated@@158) $generated@@536) ($generated@@403 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@225 $generated@@536 ($generated@@403 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@158) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) ($generated@@225 $generated@@539 ($generated@@411 $generated@@540 $generated@@541))) (and (= ($generated@@281 ($generated@@332 ($generated@@312 $generated@@158 $generated@@158) $generated@@539)) $generated@@539) ($generated@@146 ($generated@@332 ($generated@@312 $generated@@158 $generated@@158) $generated@@539) ($generated@@411 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@225 $generated@@539 ($generated@@411 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@68) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) $generated@@158)) ($generated@@225 $generated@@544 ($generated@@149 $generated@@542 $generated@@543))) (and (= ($generated@@281 ($generated@@332 $generated@@78 $generated@@544)) $generated@@544) ($generated@@146 ($generated@@332 $generated@@78 $generated@@544) ($generated@@149 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@149 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@95 ($generated@@422 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@95 ($generated@@422 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@73)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@68) (= (type $generated@@550) $generated@@68)) (and (= ($generated@@86 ($generated@@149 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@149 $generated@@549 $generated@@550)) $generated@@66)))
 :pattern ( ($generated@@149 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@78) (= (type $generated@@552) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@250 $generated@@552) (and ($generated@@77 $generated@@551) ($generated@@88 $generated@@551 $generated@@331 $generated@@552)))) ($generated@@88 ($generated@@11 ($generated@@79 $generated@@551)) $generated@@44 $generated@@552))
 :pattern ( ($generated@@88 ($generated@@11 ($generated@@79 $generated@@551)) $generated@@44 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@78) (= (type $generated@@554) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@250 $generated@@554) (and ($generated@@82 $generated@@553) ($generated@@88 $generated@@553 $generated@@331 $generated@@554)))) ($generated@@88 ($generated@@11 ($generated@@83 $generated@@553)) $generated@@44 $generated@@554))
 :pattern ( ($generated@@88 ($generated@@11 ($generated@@83 $generated@@553)) $generated@@44 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@78) (= ($generated@@528 ($generated@@281 $generated@@555)) ($generated@@529 $generated@@555)))
 :pattern ( ($generated@@528 ($generated@@281 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@158) ($generated@@225 $generated@@556 ($generated@@89 0))) (and (= ($generated@@281 ($generated@@332 $generated@@2 $generated@@556)) $generated@@556) ($generated@@146 ($generated@@332 ($generated@@90 $generated@@158 $generated@@4) $generated@@556) ($generated@@89 0))))
 :pattern ( ($generated@@225 $generated@@556 ($generated@@89 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@158) (= (type $generated@@558) $generated@@68)) ($generated@@225 $generated@@557 ($generated@@236 $generated@@558))) (and (= ($generated@@281 ($generated@@332 ($generated@@90 $generated@@158 $generated@@4) $generated@@557)) $generated@@557) ($generated@@146 ($generated@@332 ($generated@@90 $generated@@158 $generated@@4) $generated@@557) ($generated@@236 $generated@@558))))
 :pattern ( ($generated@@225 $generated@@557 ($generated@@236 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@158) (= (type $generated@@560) $generated@@68)) ($generated@@225 $generated@@559 ($generated@@241 $generated@@560))) (and (= ($generated@@281 ($generated@@332 ($generated@@90 $generated@@158 $generated@@4) $generated@@559)) $generated@@559) ($generated@@146 ($generated@@332 ($generated@@90 $generated@@158 $generated@@4) $generated@@559) ($generated@@241 $generated@@560))))
 :pattern ( ($generated@@225 $generated@@559 ($generated@@241 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@158) (= (type $generated@@562) $generated@@68)) ($generated@@225 $generated@@561 ($generated@@163 $generated@@562))) (and (= ($generated@@281 ($generated@@332 ($generated@@90 $generated@@158 $generated@@2) $generated@@561)) $generated@@561) ($generated@@146 ($generated@@332 ($generated@@90 $generated@@158 $generated@@2) $generated@@561) ($generated@@163 $generated@@562))))
 :pattern ( ($generated@@225 $generated@@561 ($generated@@163 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@158) (= (type $generated@@564) $generated@@68)) ($generated@@225 $generated@@563 ($generated@@488 $generated@@564))) (and (= ($generated@@281 ($generated@@332 ($generated@@267 $generated@@158) $generated@@563)) $generated@@563) ($generated@@146 ($generated@@332 ($generated@@267 $generated@@158) $generated@@563) ($generated@@488 $generated@@564))))
 :pattern ( ($generated@@225 $generated@@563 ($generated@@488 $generated@@564)))
)))
(assert (= ($generated@@86 $generated@@331) $generated@@64))
(assert (= ($generated@@547 $generated@@331) $generated@@67))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@90 $generated@@158 $generated@@2)) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@565 ($generated@@163 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@158) (< 0 ($generated ($generated@@95 $generated@@565 $generated@@568)))) ($generated@@251 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@95 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@88 $generated@@565 ($generated@@163 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@78) (= (type $generated@@570) $generated@@68)) (= (type $generated@@571) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@250 $generated@@571) (and ($generated@@148 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@68) ($generated@@88 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@88 $generated@@569 ($generated@@149 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@251 ($generated@@156 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@251 ($generated@@156 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@78) (= (type $generated@@574) $generated@@68)) (= (type $generated@@575) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@250 $generated@@575) (and ($generated@@148 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@68) ($generated@@88 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@88 $generated@@573 ($generated@@149 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@251 ($generated@@157 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@251 ($generated@@157 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@158) (= (type $generated@@578) $generated@@158)) (= ($generated@@224 ($generated@@246 $generated@@577) ($generated@@246 $generated@@578)) ($generated@@246 ($generated@@224 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@577) ($generated@@246 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@4) (= ($generated@@273 ($generated@@0 ($generated@@246 $generated@@579))) ($generated@@246 ($generated@@273 ($generated@@0 $generated@@579)))))
 :pattern ( ($generated@@273 ($generated@@0 ($generated@@246 $generated@@579))))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@4) (= ($generated@@277 ($generated@@0 ($generated@@246 $generated@@580))) ($generated@@246 ($generated@@277 ($generated@@0 $generated@@580)))))
 :pattern ( ($generated@@277 ($generated@@0 ($generated@@246 $generated@@580))))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@281 ($generated@@246 $generated@@581)) ($generated@@246 ($generated@@281 $generated@@581)))
 :pattern ( ($generated@@281 ($generated@@246 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@268 (type $generated@@582))))
 (=> (and (= (type $generated@@582) ($generated@@267 $generated@@583)) (= ($generated@@266 $generated@@582) 0)) (= $generated@@582 ($generated@@265 $generated@@583))))
 :pattern ( ($generated@@266 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@585)))
 (=> (and (and (= (type $generated@@584) ($generated@@90 $generated@@587 $generated@@2)) (= (type $generated@@586) $generated@@2)) (<= 0 ($generated $generated@@586))) (= ($generated@@286 ($generated@@96 $generated@@584 $generated@@585 $generated@@586)) (+ (- ($generated@@286 $generated@@584) ($generated ($generated@@95 $generated@@584 $generated@@585))) ($generated $generated@@586)))))
 :pattern ( ($generated@@286 ($generated@@96 $generated@@584 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@589) $generated@@2)) ($generated@@88 $generated@@589 $generated@@46 $generated@@588))
 :pattern ( ($generated@@88 $generated@@589 $generated@@46 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@591) $generated@@3)) ($generated@@88 $generated@@591 $generated@@47 $generated@@590))
 :pattern ( ($generated@@88 $generated@@591 $generated@@47 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@593) $generated@@4)) ($generated@@88 $generated@@593 $generated@@44 $generated@@592))
 :pattern ( ($generated@@88 $generated@@593 $generated@@44 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@595) $generated@@446)) ($generated@@88 $generated@@595 $generated@@45 $generated@@594))
 :pattern ( ($generated@@88 $generated@@595 $generated@@45 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@597) $generated@@158)) ($generated@@88 $generated@@597 $generated@@48 $generated@@596))
 :pattern ( ($generated@@88 $generated@@597 $generated@@48 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@267 $generated@@158)) (= (type $generated@@599) $generated@@68)) (= ($generated@@146 $generated@@598 ($generated@@488 $generated@@599)) (forall (($generated@@600 Int) ) (!  (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@266 $generated@@598))) ($generated@@225 ($generated@@489 $generated@@598 $generated@@600) $generated@@599))
 :pattern ( ($generated@@489 $generated@@598 $generated@@600))
))))
 :pattern ( ($generated@@146 $generated@@598 ($generated@@488 $generated@@599)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 Int) ) (!  (=> (= (type $generated@@602) ($generated@@267 $generated@@158)) (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@266 $generated@@602))) (< ($generated@@529 ($generated@@332 $generated@@78 ($generated@@489 $generated@@602 $generated@@603))) ($generated@@601 $generated@@602))))
 :pattern ( ($generated@@529 ($generated@@332 $generated@@78 ($generated@@489 $generated@@602 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@294 $generated@@158 $generated@@158)) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) $generated@@68)) ($generated@@146 $generated@@604 ($generated@@403 $generated@@605 $generated@@606))) (and (and ($generated@@146 ($generated@@292 $generated@@604) ($generated@@236 $generated@@605)) ($generated@@146 ($generated@@340 $generated@@604) ($generated@@236 $generated@@606))) ($generated@@146 ($generated@@377 $generated@@604) ($generated@@236 ($generated@@149 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@146 $generated@@604 ($generated@@403 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) ($generated@@312 $generated@@158 $generated@@158)) (= (type $generated@@608) $generated@@68)) (= (type $generated@@609) $generated@@68)) ($generated@@146 $generated@@607 ($generated@@411 $generated@@608 $generated@@609))) (and (and ($generated@@146 ($generated@@310 $generated@@607) ($generated@@241 $generated@@608)) ($generated@@146 ($generated@@351 $generated@@607) ($generated@@241 $generated@@609))) ($generated@@146 ($generated@@385 $generated@@607) ($generated@@241 ($generated@@149 $generated@@608 $generated@@609)))))
 :pattern ( ($generated@@146 $generated@@607 ($generated@@411 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@2) ($generated@@146 $generated@@610 $generated@@46))
 :pattern ( ($generated@@146 $generated@@610 $generated@@46))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@3) ($generated@@146 $generated@@611 $generated@@47))
 :pattern ( ($generated@@146 $generated@@611 $generated@@47))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@4) ($generated@@146 $generated@@612 $generated@@44))
 :pattern ( ($generated@@146 $generated@@612 $generated@@44))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@446) ($generated@@146 $generated@@613 $generated@@45))
 :pattern ( ($generated@@146 $generated@@613 $generated@@45))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@158) ($generated@@146 $generated@@614 $generated@@48))
 :pattern ( ($generated@@146 $generated@@614 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(declare-fun $generated@@620 () Int)
(assert  (and (and (and (= (type $generated@@615) $generated@@78) (= (type $generated@@616) ($generated@@170 $generated@@91 $generated@@4))) (= (type $generated@@617) $generated@@91)) (= (type $generated@@618) ($generated@@90 $generated@@91 $generated@@92))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@621  (=> (and (not ($generated@@77 $generated@@615)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@82 $generated@@615))))
(let (($generated@@622  (=> (and ($generated@@77 $generated@@615) (= (ControlFlow 0 2) (- 0 1))) ($generated@@77 $generated@@615))))
(let (($generated@@623  (=> (= $generated@@616 ($generated@@169 $generated@@617 $generated@@618 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@622) (=> (= (ControlFlow 0 5) 4) $generated@@621)))))
(let (($generated@@624  (=> (and ($generated@@250 $generated@@618) ($generated@@619 $generated@@618)) (=> (and (and (and ($generated@@146 $generated@@615 $generated@@331) ($generated@@88 $generated@@615 $generated@@331 $generated@@618)) ($generated@@365 $generated@@615)) (and (= 1 $generated@@620) (= (ControlFlow 0 6) 5))) $generated@@623))))
$generated@@624)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@270 (T@U) Int)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@277 (Bool) T@U)
(declare-fun $generated@@281 (Bool) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@324 (T@T T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@343 () T@U)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@T) T@U)
(declare-fun $generated@@459 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@502 (T@U Int) T@U)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (= ($generated@@1 $generated@@78) 11))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and (= (type $generated@@80) $generated@@78) (= (type $generated@@81) $generated@@78)) (and ($generated@@77 $generated@@80) ($generated@@77 $generated@@81))) (= ($generated@@76 $generated@@80 $generated@@81) (= ($generated@@79 $generated@@80) ($generated@@79 $generated@@81))))
 :pattern ( ($generated@@76 $generated@@80 $generated@@81) ($generated@@77 $generated@@80))
 :pattern ( ($generated@@76 $generated@@80 $generated@@81) ($generated@@77 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and (and (= (type $generated@@84) $generated@@78) (= (type $generated@@85) $generated@@78)) (and ($generated@@82 $generated@@84) ($generated@@82 $generated@@85))) (= ($generated@@76 $generated@@84 $generated@@85) (= ($generated@@83 $generated@@84) ($generated@@83 $generated@@85))))
 :pattern ( ($generated@@76 $generated@@84 $generated@@85) ($generated@@82 $generated@@84))
 :pattern ( ($generated@@76 $generated@@84 $generated@@85) ($generated@@82 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= (type ($generated@@86 $generated@@87)) $generated@@69)
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (= ($generated@@86 $generated@@44) $generated@@49))
(assert (= ($generated@@86 $generated@@45) $generated@@50))
(assert (= ($generated@@86 $generated@@46) $generated@@51))
(assert (= ($generated@@86 $generated@@47) $generated@@52))
(assert (= ($generated@@86 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@99 $generated@@100)) 12)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@90 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@90 $generated@@103 $generated@@104))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@94 (type $generated@@105))))
(= (type ($generated@@95 $generated@@105 $generated@@106)) $generated@@107))
 :pattern ( ($generated@@95 $generated@@105 $generated@@106))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 (type $generated@@110)))
(let (($generated@@112 (type $generated@@109)))
(= (type ($generated@@96 $generated@@108 $generated@@109 $generated@@110)) ($generated@@90 $generated@@112 $generated@@111))))
 :pattern ( ($generated@@96 $generated@@108 $generated@@109 $generated@@110))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@94 (type $generated@@113))))
 (=> (= (type $generated@@115) $generated@@116) (= ($generated@@95 ($generated@@96 $generated@@113 $generated@@114 $generated@@115) $generated@@114) $generated@@115)))
 :weight 0
))) (and (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@95 ($generated@@96 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@95 $generated@@118 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@95 $generated@@122 $generated@@124)))
 :weight 0
)))) (= ($generated@@1 $generated@@91) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@126))))
(= (type ($generated@@97 $generated@@125 $generated@@126)) $generated@@127))
 :pattern ( ($generated@@97 $generated@@125 $generated@@126))
))) (= ($generated@@1 $generated@@92) 14)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= (type ($generated@@98 $generated@@128 $generated@@129 $generated@@130)) $generated@@92)
 :pattern ( ($generated@@98 $generated@@128 $generated@@129 $generated@@130))
))) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@71 (type $generated@@132))))
 (=> (= (type $generated@@133) $generated@@134) (= ($generated@@97 ($generated@@98 $generated@@131 $generated@@132 $generated@@133) $generated@@132) $generated@@133)))
 :weight 0
))) (and (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@97 ($generated@@98 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@97 $generated@@136 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or true (= ($generated@@97 ($generated@@98 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@97 $generated@@140 $generated@@142)))
 :weight 0
)))) (forall (($generated@@143 Int) ) (! (= (type ($generated@@89 $generated@@143)) $generated@@68)
 :pattern ( ($generated@@89 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
 :pattern ( ($generated@@88 $generated@@144 ($generated@@89 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@148) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@91) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@97 ($generated@@95 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@89 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@89 0)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@154 $generated@@155)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@68) (= (type $generated@@157) $generated@@68)) (= (type $generated@@158) $generated@@78)) ($generated@@150 $generated@@158 ($generated@@153 $generated@@156 $generated@@157))) ($generated@@152 $generated@@158))
 :pattern ( ($generated@@152 $generated@@158) ($generated@@150 $generated@@158 ($generated@@153 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@78) (= (type $generated@@166) $generated@@78)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@90 $generated@@162 $generated@@2)) (= (type $generated@@171) $generated@@68)) ($generated@@150 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@150 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@91 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@71 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@91) (= (type $generated@@222) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@223) ($generated@@70 $generated@@4))) (= (type $generated@@225) $generated@@91)) (= (type $generated@@226) ($generated@@70 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@97 ($generated@@95 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@78)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@68) (= (type $generated@@233) $generated@@68)) (= (type $generated@@234) $generated@@162)) (= (type $generated@@235) $generated@@162)) (= ($generated@@150 ($generated@@228 $generated@@234 $generated@@235) ($generated@@153 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@150 ($generated@@228 $generated@@234 $generated@@235) ($generated@@153 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@78) (= (type $generated@@237) $generated@@78)) (= ($generated@@159 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@159 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@78) (= (type $generated@@239) $generated@@78)) (= ($generated@@76 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@76 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@90 $generated@@162 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@150 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@162) ($generated@@0 ($generated@@95 $generated@@242 $generated@@244))) ($generated@@229 $generated@@244 $generated@@243))
 :pattern ( ($generated@@95 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@150 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@90 $generated@@162 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@150 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@162) ($generated@@0 ($generated@@95 $generated@@247 $generated@@249))) ($generated@@229 $generated@@249 $generated@@248))
 :pattern ( ($generated@@95 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@150 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@68) (= (type $generated@@257) $generated@@68)) (= (type $generated@@258) $generated@@162)) (= (type $generated@@259) $generated@@162)) (= (type $generated@@260) ($generated@@90 $generated@@91 $generated@@92))) ($generated@@254 $generated@@260)) (= ($generated@@88 ($generated@@228 $generated@@258 $generated@@259) ($generated@@153 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@88 ($generated@@228 $generated@@258 $generated@@259) ($generated@@153 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@72)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@78) (= ($generated@@152 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@78) (= ($generated@@77 $generated@@264) (= ($generated@@261 $generated@@264) $generated@@64)))
 :pattern ( ($generated@@77 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@78) (= ($generated@@82 $generated@@265) (= ($generated@@261 $generated@@265) $generated@@65)))
 :pattern ( ($generated@@82 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@78) ($generated@@152 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@162) (= (type $generated@@268) $generated@@162)) (= $generated@@266 ($generated@@228 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@152 $generated@@266))
)))
(assert  (and (and (forall (($generated@@273 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@273)) 17)) (forall (($generated@@274 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
))) (forall (($generated@@275 T@T) ) (! (= (type ($generated@@269 $generated@@275)) ($generated@@271 $generated@@275))
 :pattern ( ($generated@@269 $generated@@275))
))))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@276)) 0)
 :pattern ( ($generated@@269 $generated@@276))
)))
(assert (forall (($generated@@278 Bool) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@78)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@78) ($generated@@77 $generated@@279)) (exists (($generated@@280 Bool) ) (= $generated@@279 ($generated@@277 $generated@@280))))
 :pattern ( ($generated@@77 $generated@@279))
)))
(assert (forall (($generated@@282 Bool) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@78)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@78) ($generated@@82 $generated@@283)) (exists (($generated@@284 Bool) ) (= $generated@@283 ($generated@@281 $generated@@284))))
 :pattern ( ($generated@@82 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@162)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@255 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@88 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@255 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@291) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@292) $generated@@162)) (= (type $generated@@293) $generated@@68)) ($generated@@146 $generated@@290 $generated@@291)) ($generated@@255 $generated@@292 $generated@@293 $generated@@290)) ($generated@@255 $generated@@292 $generated@@293 $generated@@291))
 :pattern ( ($generated@@146 $generated@@290 $generated@@291) ($generated@@255 $generated@@292 $generated@@293 $generated@@290))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@294) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@295) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@297) $generated@@68)) ($generated@@146 $generated@@294 $generated@@295)) ($generated@@88 $generated@@296 $generated@@297 $generated@@294)) ($generated@@88 $generated@@296 $generated@@297 $generated@@295))
 :pattern ( ($generated@@146 $generated@@294 $generated@@295) ($generated@@88 $generated@@296 $generated@@297 $generated@@294))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@90 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@93 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@90 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@95 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 18)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@90 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@95 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@95 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert  (and (and (and (and (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@327 $generated@@328)) 19)) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@324 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@326 ($generated@@324 $generated@@331 $generated@@332)) $generated@@332)
 :pattern ( ($generated@@324 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@325 (type $generated@@333))))
(= (type ($generated@@322 $generated@@333)) ($generated@@90 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@322 $generated@@333))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= (type ($generated@@323 $generated@@335 $generated@@336)) ($generated@@324 $generated@@335 $generated@@336))
 :pattern ( ($generated@@323 $generated@@335 $generated@@336))
))))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@T) ) (! (let (($generated@@339 (type $generated@@337)))
 (not ($generated@@0 ($generated@@95 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337))))
 :pattern ( (let (($generated@@339 (type $generated@@337)))
($generated@@95 ($generated@@322 ($generated@@323 $generated@@339 $generated@@338)) $generated@@337)))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@93 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@90 $generated@@341 $generated@@2)) (= ($generated@@168 $generated@@340) (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@341) (and (<= 0 ($generated ($generated@@95 $generated@@340 $generated@@342))) (<= ($generated ($generated@@95 $generated@@340 $generated@@342)) ($generated@@298 $generated@@340))))
 :pattern ( ($generated@@95 $generated@@340 $generated@@342))
)))))
 :pattern ( ($generated@@168 $generated@@340))
)))
(assert  (and (= (type $generated@@343) $generated@@68) (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@162) ($generated@@229 $generated@@347 $generated@@343)) (and (= ($generated@@285 ($generated@@344 $generated@@78 $generated@@347)) $generated@@347) ($generated@@150 ($generated@@344 $generated@@78 $generated@@347) $generated@@343)))
 :pattern ( ($generated@@229 $generated@@347 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@308 (type $generated@@348))))
(let (($generated@@350 ($generated@@307 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@306 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@305 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@95 ($generated@@304 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@304 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@308 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@90 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@308 (type $generated@@355))))
(let (($generated@@357 ($generated@@307 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@306 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@305 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@95 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@326 (type $generated@@359))))
(let (($generated@@361 ($generated@@325 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@324 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@323 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@95 ($generated@@322 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@322 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@326 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@90 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@326 (type $generated@@366))))
(let (($generated@@368 ($generated@@325 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@324 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@323 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@95 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@90 $generated@@162 $generated@@2)) (= (type $generated@@371) $generated@@68)) (= ($generated@@150 $generated@@370 ($generated@@167 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@162) (< 0 ($generated ($generated@@95 $generated@@370 $generated@@372)))) ($generated@@229 $generated@@372 $generated@@371))
 :pattern ( ($generated@@95 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@150 $generated@@370 ($generated@@167 $generated@@371)))
)))
(assert (forall (($generated@@373 Bool) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@254 $generated@@374)) (= ($generated@@88 ($generated@@277 $generated@@373) $generated@@343 $generated@@374) ($generated@@88 ($generated@@11 $generated@@373) $generated@@44 $generated@@374)))
 :pattern ( ($generated@@88 ($generated@@277 $generated@@373) $generated@@343 $generated@@374))
)))
(assert (forall (($generated@@375 Bool) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@90 $generated@@91 $generated@@92)) ($generated@@254 $generated@@376)) (= ($generated@@88 ($generated@@281 $generated@@375) $generated@@343 $generated@@376) ($generated@@88 ($generated@@11 $generated@@375) $generated@@44 $generated@@376)))
 :pattern ( ($generated@@88 ($generated@@281 $generated@@375) $generated@@343 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@90 $generated@@162 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@377 ($generated@@240 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@162) ($generated@@0 ($generated@@95 $generated@@377 $generated@@380))) ($generated@@255 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@95 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@88 $generated@@377 ($generated@@240 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@90 $generated@@162 $generated@@4)) (= (type $generated@@382) $generated@@68)) (= (type $generated@@383) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@381 ($generated@@245 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@162) ($generated@@0 ($generated@@95 $generated@@381 $generated@@384))) ($generated@@255 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@95 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@88 $generated@@381 ($generated@@245 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@95 ($generated@@299 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@95 ($generated@@299 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@90 $generated@@162 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@308 (type $generated@@390))))
(let (($generated@@392 ($generated@@307 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@90 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@394) $generated@@162)) (= ($generated@@0 ($generated@@95 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@95 ($generated@@304 $generated@@393) ($generated@@160 ($generated@@344 $generated@@78 $generated@@394)))) (= ($generated@@95 ($generated@@388 $generated@@393) ($generated@@160 ($generated@@344 $generated@@78 $generated@@394))) ($generated@@161 ($generated@@344 $generated@@78 $generated@@394))))))
 :pattern ( ($generated@@95 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@90 $generated@@162 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@326 (type $generated@@398))))
(let (($generated@@400 ($generated@@325 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@90 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@324 $generated@@162 $generated@@162)) (= (type $generated@@402) $generated@@162)) (= ($generated@@0 ($generated@@95 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@95 ($generated@@322 $generated@@401) ($generated@@160 ($generated@@344 $generated@@78 $generated@@402)))) (= ($generated@@95 ($generated@@396 $generated@@401) ($generated@@160 ($generated@@344 $generated@@78 $generated@@402))) ($generated@@161 ($generated@@344 $generated@@78 $generated@@402))))))
 :pattern ( ($generated@@95 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@307 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@306 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@95 ($generated@@352 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@95 ($generated@@304 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@95 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@95 ($generated@@304 $generated@@403) $generated@@407))
 :pattern ( ($generated@@95 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@95 ($generated@@352 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@325 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@324 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@95 ($generated@@363 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@95 ($generated@@322 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@95 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@95 ($generated@@322 $generated@@408) $generated@@412))
 :pattern ( ($generated@@95 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@95 ($generated@@363 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@68)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@162) ($generated@@0 ($generated@@95 ($generated@@304 $generated@@416) $generated@@420))) (and ($generated@@255 ($generated@@95 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@255 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@95 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@95 ($generated@@304 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@88 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@68)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@324 $generated@@162 $generated@@162)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@162) ($generated@@0 ($generated@@95 ($generated@@322 $generated@@424) $generated@@428))) (and ($generated@@255 ($generated@@95 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@255 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@95 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@95 ($generated@@322 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@88 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 Bool) ) (! (= ($generated@@79 ($generated@@277 $generated@@429)) $generated@@429)
 :pattern ( ($generated@@277 $generated@@429))
)))
(assert (forall (($generated@@430 Bool) ) (! (= ($generated@@83 ($generated@@281 $generated@@430)) $generated@@430)
 :pattern ( ($generated@@281 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@78) ($generated@@150 $generated@@431 $generated@@343)) (or ($generated@@77 $generated@@431) ($generated@@82 $generated@@431)))
 :pattern ( ($generated@@82 $generated@@431) ($generated@@150 $generated@@431 $generated@@343))
 :pattern ( ($generated@@77 $generated@@431) ($generated@@150 $generated@@431 $generated@@343))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@432) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@433) ($generated@@90 $generated@@91 $generated@@92))) (= (type $generated@@434) ($generated@@90 $generated@@91 $generated@@92))) (not (= $generated@@432 $generated@@434))) (and ($generated@@146 $generated@@432 $generated@@433) ($generated@@146 $generated@@433 $generated@@434))) ($generated@@146 $generated@@432 $generated@@434))
 :pattern ( ($generated@@146 $generated@@432 $generated@@433) ($generated@@146 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@T) ) (! (= (type ($generated@@435 $generated@@436)) ($generated@@90 $generated@@436 $generated@@4))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@326 (type $generated@@437))))
(let (($generated@@439 ($generated@@325 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@324 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@323 $generated@@439 $generated@@438)) (= ($generated@@322 $generated@@437) ($generated@@435 $generated@@439))))))
 :pattern ( ($generated@@322 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@326 (type $generated@@440))))
(let (($generated@@442 ($generated@@325 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@324 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@323 $generated@@442 $generated@@441)) (= ($generated@@363 $generated@@440) ($generated@@435 $generated@@441))))))
 :pattern ( ($generated@@363 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@326 (type $generated@@443))))
(let (($generated@@445 ($generated@@325 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@324 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@323 $generated@@445 $generated@@444)) (= ($generated@@395 $generated@@443) ($generated@@435 $generated@@162))))))
 :pattern ( ($generated@@395 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@308 (type $generated@@446))))
(let (($generated@@448 ($generated@@307 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@306 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@305 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@162) (= (type $generated@@450) $generated@@162)) ($generated@@0 ($generated@@95 ($generated@@387 $generated@@446) ($generated@@285 ($generated@@228 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@387 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@326 (type $generated@@451))))
(let (($generated@@453 ($generated@@325 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@324 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@323 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@162) (= (type $generated@@455) $generated@@162)) ($generated@@0 ($generated@@95 ($generated@@395 $generated@@451) ($generated@@285 ($generated@@228 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@395 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@162) ($generated@@229 $generated@@456 $generated@@46)) (and (= ($generated@@285 ($generated@@344 $generated@@2 $generated@@456)) $generated@@456) ($generated@@150 ($generated@@344 $generated@@2 $generated@@456) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@456 $generated@@46))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@162) ($generated@@229 $generated@@457 $generated@@47)) (and (= ($generated@@285 ($generated@@344 $generated@@3 $generated@@457)) $generated@@457) ($generated@@150 ($generated@@344 $generated@@3 $generated@@457) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@457 $generated@@47))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@162) ($generated@@229 $generated@@458 $generated@@44)) (and (= ($generated@@285 ($generated@@344 $generated@@4 $generated@@458)) $generated@@458) ($generated@@150 ($generated@@344 $generated@@4 $generated@@458) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@458 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@459) 20))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@162) ($generated@@229 $generated@@460 $generated@@45)) (and (= ($generated@@285 ($generated@@344 $generated@@459 $generated@@460)) $generated@@460) ($generated@@150 ($generated@@344 $generated@@459 $generated@@460) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@460 $generated@@45))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@68) (= ($generated@@229 ($generated@@285 $generated@@461) $generated@@462) ($generated@@150 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@229 ($generated@@285 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@93 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@90 $generated@@464 $generated@@2)) (<= 0 ($generated@@298 $generated@@463))))
 :pattern ( ($generated@@298 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@272 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@271 $generated@@466)) (<= 0 ($generated@@270 $generated@@465))))
 :pattern ( ($generated@@270 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@471 ($generated@@413 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@86 ($generated@@413 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@421 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@421 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@421 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@86 ($generated@@421 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@162) (= (type $generated@@488) $generated@@162)) (= ($generated@@261 ($generated@@228 $generated@@487 $generated@@488)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@68)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@68)) (= ($generated@@489 ($generated@@153 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@153 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@153 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@153 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@162) (= (type $generated@@498) $generated@@162)) (= ($generated@@160 ($generated@@228 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@228 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@162) (= (type $generated@@500) $generated@@162)) (= ($generated@@161 ($generated@@228 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@228 $generated@@499 $generated@@500))
)))
(assert  (and (forall (($generated@@503 T@U) ) (! (= (type ($generated@@501 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@503))
)) (forall (($generated@@504 T@U) ($generated@@505 Int) ) (! (let (($generated@@506 ($generated@@272 (type $generated@@504))))
(= (type ($generated@@502 $generated@@504 $generated@@505)) $generated@@506))
 :pattern ( ($generated@@502 $generated@@504 $generated@@505))
))))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@271 $generated@@162)) (= (type $generated@@508) $generated@@68)) (= (type $generated@@509) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@507 ($generated@@501 $generated@@508) $generated@@509) (forall (($generated@@510 Int) ) (!  (=> (and (<= 0 $generated@@510) (< $generated@@510 ($generated@@270 $generated@@507))) ($generated@@255 ($generated@@502 $generated@@507 $generated@@510) $generated@@508 $generated@@509))
 :pattern ( ($generated@@502 $generated@@507 $generated@@510))
))))
 :pattern ( ($generated@@88 $generated@@507 ($generated@@501 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@512 Int) ) (! (= ($generated@@511 ($generated@@89 $generated@@512)) $generated@@512)
 :pattern ( ($generated@@89 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@513 ($generated@@240 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@240 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@86 ($generated@@240 $generated@@516)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@517 ($generated@@245 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@245 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@86 ($generated@@245 $generated@@520)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@521 ($generated@@167 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@167 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@86 ($generated@@167 $generated@@524)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@525 ($generated@@501 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@501 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@86 ($generated@@501 $generated@@528)) $generated@@57))
 :pattern ( ($generated@@501 $generated@@528))
)))
(assert (forall (($generated@@529 Bool) ) (! (= ($generated@@261 ($generated@@277 $generated@@529)) $generated@@64)
 :pattern ( ($generated@@277 $generated@@529))
)))
(assert (forall (($generated@@530 Bool) ) (! (= ($generated@@261 ($generated@@281 $generated@@530)) $generated@@65)
 :pattern ( ($generated@@281 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@344 $generated@@532 ($generated@@285 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@285 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@150 $generated@@533 ($generated@@413 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@162) ($generated@@0 ($generated@@95 ($generated@@304 $generated@@533) $generated@@536))) (and ($generated@@229 ($generated@@95 ($generated@@388 $generated@@533) $generated@@536) $generated@@535) ($generated@@229 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@95 ($generated@@388 $generated@@533) $generated@@536))
 :pattern ( ($generated@@95 ($generated@@304 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@150 $generated@@533 ($generated@@413 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@324 $generated@@162 $generated@@162)) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) (= ($generated@@150 $generated@@537 ($generated@@421 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@162) ($generated@@0 ($generated@@95 ($generated@@322 $generated@@537) $generated@@540))) (and ($generated@@229 ($generated@@95 ($generated@@396 $generated@@537) $generated@@540) $generated@@539) ($generated@@229 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@95 ($generated@@396 $generated@@537) $generated@@540))
 :pattern ( ($generated@@95 ($generated@@322 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@150 $generated@@537 ($generated@@421 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@162) (= (type $generated@@544) $generated@@162)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@228 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@228 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@162) (= (type $generated@@546) $generated@@162)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@228 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@228 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 Bool) ) (! (= ($generated@@150 ($generated@@277 $generated@@547) $generated@@343) ($generated@@150 ($generated@@11 $generated@@547) $generated@@44))
 :pattern ( ($generated@@150 ($generated@@277 $generated@@547) $generated@@343))
)))
(assert (forall (($generated@@548 Bool) ) (! (= ($generated@@150 ($generated@@281 $generated@@548) $generated@@343) ($generated@@150 ($generated@@11 $generated@@548) $generated@@44))
 :pattern ( ($generated@@150 ($generated@@281 $generated@@548) $generated@@343))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@162) (= (type $generated@@550) $generated@@68)) (= (type $generated@@551) $generated@@68)) ($generated@@229 $generated@@549 ($generated@@413 $generated@@550 $generated@@551))) (and (= ($generated@@285 ($generated@@344 ($generated@@306 $generated@@162 $generated@@162) $generated@@549)) $generated@@549) ($generated@@150 ($generated@@344 ($generated@@306 $generated@@162 $generated@@162) $generated@@549) ($generated@@413 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@413 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@162) (= (type $generated@@553) $generated@@68)) (= (type $generated@@554) $generated@@68)) ($generated@@229 $generated@@552 ($generated@@421 $generated@@553 $generated@@554))) (and (= ($generated@@285 ($generated@@344 ($generated@@324 $generated@@162 $generated@@162) $generated@@552)) $generated@@552) ($generated@@150 ($generated@@344 ($generated@@324 $generated@@162 $generated@@162) $generated@@552) ($generated@@421 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@421 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@68) (= (type $generated@@556) $generated@@68)) (= (type $generated@@557) $generated@@162)) ($generated@@229 $generated@@557 ($generated@@153 $generated@@555 $generated@@556))) (and (= ($generated@@285 ($generated@@344 $generated@@78 $generated@@557)) $generated@@557) ($generated@@150 ($generated@@344 $generated@@78 $generated@@557) ($generated@@153 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@557 ($generated@@153 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@95 ($generated@@435 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@95 ($generated@@435 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@73)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@68) (= (type $generated@@563) $generated@@68)) (and (= ($generated@@86 ($generated@@153 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@560 ($generated@@153 $generated@@562 $generated@@563)) $generated@@66)))
 :pattern ( ($generated@@153 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@78) (= (type $generated@@565) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@254 $generated@@565) (and ($generated@@77 $generated@@564) ($generated@@88 $generated@@564 $generated@@343 $generated@@565)))) ($generated@@88 ($generated@@11 ($generated@@79 $generated@@564)) $generated@@44 $generated@@565))
 :pattern ( ($generated@@88 ($generated@@11 ($generated@@79 $generated@@564)) $generated@@44 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@78) (= (type $generated@@567) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@254 $generated@@567) (and ($generated@@82 $generated@@566) ($generated@@88 $generated@@566 $generated@@343 $generated@@567)))) ($generated@@88 ($generated@@11 ($generated@@83 $generated@@566)) $generated@@44 $generated@@567))
 :pattern ( ($generated@@88 ($generated@@11 ($generated@@83 $generated@@566)) $generated@@44 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@78) (= ($generated@@541 ($generated@@285 $generated@@568)) ($generated@@542 $generated@@568)))
 :pattern ( ($generated@@541 ($generated@@285 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@162) ($generated@@229 $generated@@569 ($generated@@89 0))) (and (= ($generated@@285 ($generated@@344 $generated@@2 $generated@@569)) $generated@@569) ($generated@@150 ($generated@@344 ($generated@@90 $generated@@162 $generated@@4) $generated@@569) ($generated@@89 0))))
 :pattern ( ($generated@@229 $generated@@569 ($generated@@89 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@162) (= (type $generated@@571) $generated@@68)) ($generated@@229 $generated@@570 ($generated@@240 $generated@@571))) (and (= ($generated@@285 ($generated@@344 ($generated@@90 $generated@@162 $generated@@4) $generated@@570)) $generated@@570) ($generated@@150 ($generated@@344 ($generated@@90 $generated@@162 $generated@@4) $generated@@570) ($generated@@240 $generated@@571))))
 :pattern ( ($generated@@229 $generated@@570 ($generated@@240 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@162) (= (type $generated@@573) $generated@@68)) ($generated@@229 $generated@@572 ($generated@@245 $generated@@573))) (and (= ($generated@@285 ($generated@@344 ($generated@@90 $generated@@162 $generated@@4) $generated@@572)) $generated@@572) ($generated@@150 ($generated@@344 ($generated@@90 $generated@@162 $generated@@4) $generated@@572) ($generated@@245 $generated@@573))))
 :pattern ( ($generated@@229 $generated@@572 ($generated@@245 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@162) (= (type $generated@@575) $generated@@68)) ($generated@@229 $generated@@574 ($generated@@167 $generated@@575))) (and (= ($generated@@285 ($generated@@344 ($generated@@90 $generated@@162 $generated@@2) $generated@@574)) $generated@@574) ($generated@@150 ($generated@@344 ($generated@@90 $generated@@162 $generated@@2) $generated@@574) ($generated@@167 $generated@@575))))
 :pattern ( ($generated@@229 $generated@@574 ($generated@@167 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@162) (= (type $generated@@577) $generated@@68)) ($generated@@229 $generated@@576 ($generated@@501 $generated@@577))) (and (= ($generated@@285 ($generated@@344 ($generated@@271 $generated@@162) $generated@@576)) $generated@@576) ($generated@@150 ($generated@@344 ($generated@@271 $generated@@162) $generated@@576) ($generated@@501 $generated@@577))))
 :pattern ( ($generated@@229 $generated@@576 ($generated@@501 $generated@@577)))
)))
(assert (= ($generated@@86 $generated@@343) $generated@@63))
(assert (= ($generated@@560 $generated@@343) $generated@@67))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@90 $generated@@162 $generated@@2)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) ($generated@@90 $generated@@91 $generated@@92))) (= ($generated@@88 $generated@@578 ($generated@@167 $generated@@579) $generated@@580) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@162) (< 0 ($generated ($generated@@95 $generated@@578 $generated@@581)))) ($generated@@255 $generated@@581 $generated@@579 $generated@@580))
 :pattern ( ($generated@@95 $generated@@578 $generated@@581))
))))
 :pattern ( ($generated@@88 $generated@@578 ($generated@@167 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@78) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@254 $generated@@584) (and ($generated@@152 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@68) ($generated@@88 $generated@@582 ($generated@@153 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@88 $generated@@582 ($generated@@153 $generated@@583 $generated@@585) $generated@@584))
))))) ($generated@@255 ($generated@@160 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@255 ($generated@@160 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@78) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) ($generated@@90 $generated@@91 $generated@@92))) (and ($generated@@254 $generated@@588) (and ($generated@@152 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@68) ($generated@@88 $generated@@586 ($generated@@153 $generated@@589 $generated@@587) $generated@@588))
 :pattern ( ($generated@@88 $generated@@586 ($generated@@153 $generated@@589 $generated@@587) $generated@@588))
))))) ($generated@@255 ($generated@@161 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@255 ($generated@@161 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@162) (= (type $generated@@591) $generated@@162)) (= ($generated@@228 ($generated@@250 $generated@@590) ($generated@@250 $generated@@591)) ($generated@@250 ($generated@@228 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@590) ($generated@@250 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) (= ($generated@@277 ($generated@@0 ($generated@@250 $generated@@592))) ($generated@@250 ($generated@@277 ($generated@@0 $generated@@592)))))
 :pattern ( ($generated@@277 ($generated@@0 ($generated@@250 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) (= ($generated@@281 ($generated@@0 ($generated@@250 $generated@@593))) ($generated@@250 ($generated@@281 ($generated@@0 $generated@@593)))))
 :pattern ( ($generated@@281 ($generated@@0 ($generated@@250 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@285 ($generated@@250 $generated@@594)) ($generated@@250 ($generated@@285 $generated@@594)))
 :pattern ( ($generated@@285 ($generated@@250 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@272 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@271 $generated@@596)) (= ($generated@@270 $generated@@595) 0)) (= $generated@@595 ($generated@@269 $generated@@596))))
 :pattern ( ($generated@@270 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@90 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@298 ($generated@@96 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@298 $generated@@597) ($generated ($generated@@95 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@298 ($generated@@96 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@602) $generated@@2)) ($generated@@88 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@88 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@604) $generated@@3)) ($generated@@88 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@88 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@606) $generated@@4)) ($generated@@88 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@88 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@608) $generated@@459)) ($generated@@88 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@88 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@90 $generated@@91 $generated@@92)) (= (type $generated@@610) $generated@@162)) ($generated@@88 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@88 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@271 $generated@@162)) (= (type $generated@@612) $generated@@68)) (= ($generated@@150 $generated@@611 ($generated@@501 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@270 $generated@@611))) ($generated@@229 ($generated@@502 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@502 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@150 $generated@@611 ($generated@@501 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@271 $generated@@162)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@270 $generated@@615))) (< ($generated@@542 ($generated@@344 $generated@@78 ($generated@@502 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@542 ($generated@@344 $generated@@78 ($generated@@502 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@306 $generated@@162 $generated@@162)) (= (type $generated@@618) $generated@@68)) (= (type $generated@@619) $generated@@68)) ($generated@@150 $generated@@617 ($generated@@413 $generated@@618 $generated@@619))) (and (and ($generated@@150 ($generated@@304 $generated@@617) ($generated@@240 $generated@@618)) ($generated@@150 ($generated@@352 $generated@@617) ($generated@@240 $generated@@619))) ($generated@@150 ($generated@@387 $generated@@617) ($generated@@240 ($generated@@153 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@150 $generated@@617 ($generated@@413 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@324 $generated@@162 $generated@@162)) (= (type $generated@@621) $generated@@68)) (= (type $generated@@622) $generated@@68)) ($generated@@150 $generated@@620 ($generated@@421 $generated@@621 $generated@@622))) (and (and ($generated@@150 ($generated@@322 $generated@@620) ($generated@@245 $generated@@621)) ($generated@@150 ($generated@@363 $generated@@620) ($generated@@245 $generated@@622))) ($generated@@150 ($generated@@395 $generated@@620) ($generated@@245 ($generated@@153 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@150 $generated@@620 ($generated@@421 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@150 $generated@@623 $generated@@46))
 :pattern ( ($generated@@150 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@150 $generated@@624 $generated@@47))
 :pattern ( ($generated@@150 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@150 $generated@@625 $generated@@44))
 :pattern ( ($generated@@150 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@459) ($generated@@150 $generated@@626 $generated@@45))
 :pattern ( ($generated@@150 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@162) ($generated@@150 $generated@@627 $generated@@48))
 :pattern ( ($generated@@150 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
