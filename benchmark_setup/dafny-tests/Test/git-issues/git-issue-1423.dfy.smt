(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U Int) T@U)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (Int) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@289 (T@U Int) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 () Int)
(declare-fun $generated@@340 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U T@U) Bool)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@228)) 17)) (forall (($generated@@229 T@T) ) (! (= ($generated@@226 ($generated@@227 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@227 $generated@@229))
))) (forall (($generated@@230 T@U) ($generated@@231 Int) ) (! (let (($generated@@232 ($generated@@226 (type $generated@@230))))
(= (type ($generated@@225 $generated@@230 $generated@@231)) ($generated@@227 $generated@@232)))
 :pattern ( ($generated@@225 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 Int) ) (! (let (($generated@@235 ($generated@@226 (type $generated@@233))))
 (=> (and (= (type $generated@@233) ($generated@@227 $generated@@235)) (= $generated@@234 0)) (= ($generated@@225 $generated@@233 $generated@@234) $generated@@233)))
 :pattern ( ($generated@@225 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@149) ($generated@@0 ($generated@@81 $generated@@238 $generated@@240))) ($generated@@216 $generated@@240 $generated@@239))
 :pattern ( ($generated@@81 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@136 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@149) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@216 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@136 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 Int) ) (! (= ($generated@@246 $generated@@247) $generated@@247)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@149)) (= (type $generated@@257) $generated@@149)) (= (type $generated@@258) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@252 $generated@@258)) (= ($generated@@74 ($generated@@215 $generated@@256 $generated@@257) ($generated@@139 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@256 $generated@@257) ($generated@@139 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 Int) ) (! (let (($generated@@262 ($generated@@226 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@227 $generated@@262)) (=> (and (<= 0 $generated@@261) (<= $generated@@261 ($generated@@259 $generated@@260))) (= ($generated@@259 ($generated@@225 $generated@@260 $generated@@261)) (- ($generated@@259 $generated@@260) $generated@@261)))))
 :pattern ( ($generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@140) (= ($generated@@138 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@140) ($generated@@138 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@149) (= (type $generated@@268) $generated@@149)) (= $generated@@266 ($generated@@215 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@138 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@227 $generated@@270))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@259 ($generated@@269 $generated@@271)) 0)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 Int) ) (! (let (($generated@@275 ($generated@@226 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@227 $generated@@275)) (=> (and (< 0 $generated@@274) (<= $generated@@274 ($generated@@259 $generated@@273))) (< ($generated@@272 ($generated@@225 $generated@@273 $generated@@274)) ($generated@@272 $generated@@273)))))
 :pattern ( ($generated@@272 ($generated@@225 $generated@@273 $generated@@274)))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@149)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@253 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@74 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@253 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@283) $generated@@149)) (= (type $generated@@284) $generated@@64)) ($generated@@132 $generated@@281 $generated@@282)) ($generated@@253 $generated@@283 $generated@@284 $generated@@281)) ($generated@@253 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@132 $generated@@281 $generated@@282) ($generated@@253 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@288) $generated@@64)) ($generated@@132 $generated@@285 $generated@@286)) ($generated@@74 $generated@@287 $generated@@288 $generated@@285)) ($generated@@74 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@132 $generated@@285 $generated@@286) ($generated@@74 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 Int) ) (! (let (($generated@@292 ($generated@@226 (type $generated@@290))))
(= (type ($generated@@289 $generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@226 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@227 $generated@@296)) (=> (and (and (<= 0 $generated@@294) (<= 0 $generated@@295)) (< $generated@@295 (- ($generated@@259 $generated@@293) $generated@@294))) (= ($generated@@289 ($generated@@225 $generated@@293 $generated@@294) $generated@@295) ($generated@@289 $generated@@293 (+ $generated@@295 $generated@@294))))))
 :weight 25
 :pattern ( ($generated@@289 ($generated@@225 $generated@@293 $generated@@294) $generated@@295))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@76 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@79 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@76 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@81 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@64)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert  (=> (<= 0 $generated@@339) (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@64) (= (type $generated@@345) ($generated@@227 $generated@@149))) (or ($generated@@341 $generated@@344 $generated@@345) (and (not (= 0 $generated@@339)) ($generated@@136 $generated@@345 ($generated@@342 $generated@@344))))) true)
 :pattern ( ($generated@@340 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@79 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@76 $generated@@347 $generated@@2)) (= ($generated@@155 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@81 $generated@@346 $generated@@348))) (<= ($generated ($generated@@81 $generated@@346 $generated@@348)) ($generated@@297 $generated@@346))))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@155 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@307 (type $generated@@349))))
(let (($generated@@351 ($generated@@306 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@305 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@304 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@303 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@307 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@76 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@307 (type $generated@@356))))
(let (($generated@@358 ($generated@@306 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@305 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@304 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@325 (type $generated@@360))))
(let (($generated@@362 ($generated@@324 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@323 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@322 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@321 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@325 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@76 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(let (($generated@@369 ($generated@@324 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@323 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@322 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@372) $generated@@64)) (= ($generated@@136 $generated@@371 ($generated@@154 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@371 $generated@@373)))) ($generated@@216 $generated@@373 $generated@@372))
 :pattern ( ($generated@@81 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@136 $generated@@371 ($generated@@154 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@374 ($generated@@236 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@149) ($generated@@0 ($generated@@81 $generated@@374 $generated@@377))) ($generated@@253 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@81 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@374 ($generated@@236 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@241 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@149) ($generated@@0 ($generated@@81 $generated@@378 $generated@@381))) ($generated@@253 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@81 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@241 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@81 ($generated@@298 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@81 ($generated@@298 $generated@@383) $generated@@382)))
)))
(assert  (and (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@384 $generated@@387)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@384 $generated@@387))
)) (forall (($generated@@388 T@T) ($generated@@389 T@U) ) (! (= (type ($generated@@385 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@385 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@307 (type $generated@@390))))
(let (($generated@@392 ($generated@@306 (type $generated@@390))))
(= (type ($generated@@386 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@386 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@394) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@384 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@393) ($generated@@147 ($generated@@385 $generated@@140 $generated@@394)))) (= ($generated@@81 ($generated@@386 $generated@@393) ($generated@@147 ($generated@@385 $generated@@140 $generated@@394))) ($generated@@148 ($generated@@385 $generated@@140 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@325 (type $generated@@398))))
(let (($generated@@400 ($generated@@324 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@402) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@401) ($generated@@147 ($generated@@385 $generated@@140 $generated@@402)))) (= ($generated@@81 ($generated@@396 $generated@@401) ($generated@@147 ($generated@@385 $generated@@140 $generated@@402))) ($generated@@148 ($generated@@385 $generated@@140 $generated@@402))))))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@306 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@305 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@81 ($generated@@353 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@81 ($generated@@386 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@324 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@323 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@81 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@416) $generated@@420))) (and ($generated@@253 ($generated@@81 ($generated@@386 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@253 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@425) $generated@@64)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@424) $generated@@428))) (and ($generated@@253 ($generated@@81 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@253 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@429) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@430) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@429 $generated@@431))) (and ($generated@@132 $generated@@429 $generated@@430) ($generated@@132 $generated@@430 $generated@@431))) ($generated@@132 $generated@@429 $generated@@431))
 :pattern ( ($generated@@132 $generated@@429 $generated@@430) ($generated@@132 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@76 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@325 (type $generated@@434))))
(let (($generated@@436 ($generated@@324 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@323 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@322 $generated@@436 $generated@@435)) (= ($generated@@321 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@321 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@325 (type $generated@@437))))
(let (($generated@@439 ($generated@@324 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@323 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@322 $generated@@439 $generated@@438)) (= ($generated@@364 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@364 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@325 (type $generated@@440))))
(let (($generated@@442 ($generated@@324 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@323 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@322 $generated@@442 $generated@@441)) (= ($generated@@395 $generated@@440) ($generated@@432 $generated@@149))))))
 :pattern ( ($generated@@395 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@307 (type $generated@@443))))
(let (($generated@@445 ($generated@@306 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@305 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@304 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@149) (= (type $generated@@447) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@443) ($generated@@276 ($generated@@215 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@384 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@325 (type $generated@@448))))
(let (($generated@@450 ($generated@@324 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@323 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@322 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@149) (= (type $generated@@452) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@395 $generated@@448) ($generated@@276 ($generated@@215 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@395 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@149) ($generated@@216 $generated@@453 $generated@@46)) (and (= ($generated@@276 ($generated@@385 $generated@@2 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@385 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@149) ($generated@@216 $generated@@454 $generated@@47)) (and (= ($generated@@276 ($generated@@385 $generated@@3 $generated@@454)) $generated@@454) ($generated@@136 ($generated@@385 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) ($generated@@216 $generated@@455 $generated@@44)) (and (= ($generated@@276 ($generated@@385 $generated@@4 $generated@@455)) $generated@@455) ($generated@@136 ($generated@@385 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@149) ($generated@@216 $generated@@457 $generated@@45)) (and (= ($generated@@276 ($generated@@385 $generated@@456 $generated@@457)) $generated@@457) ($generated@@136 ($generated@@385 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@64) (= ($generated@@216 ($generated@@276 $generated@@458) $generated@@459) ($generated@@136 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@216 ($generated@@276 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@79 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@76 $generated@@461 $generated@@2)) (<= 0 ($generated@@297 $generated@@460))))
 :pattern ( ($generated@@297 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@226 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@227 $generated@@463)) (<= 0 ($generated@@259 $generated@@462))))
 :pattern ( ($generated@@259 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@413 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@413 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@413 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@413 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@421 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@421 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@421 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@421 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@72 ($generated@@421 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@149) (= (type $generated@@485) $generated@@149)) (= ($generated@@263 ($generated@@215 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@139 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@139 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@139 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@139 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) (= (type $generated@@495) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@215 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) (= (type $generated@@497) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@215 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@227 $generated@@149)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@498 ($generated@@342 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@259 $generated@@498))) ($generated@@253 ($generated@@289 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@289 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@74 $generated@@498 ($generated@@342 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@75 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@75 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@236 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@236 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@241 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@241 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@154 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@154 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@342 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@342 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@342 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@385 $generated@@521 ($generated@@276 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@276 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@136 $generated@@522 ($generated@@413 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@522) $generated@@525))) (and ($generated@@216 ($generated@@81 ($generated@@386 $generated@@522) $generated@@525) $generated@@524) ($generated@@216 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@136 $generated@@522 ($generated@@413 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@136 $generated@@526 ($generated@@421 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@526) $generated@@529))) (and ($generated@@216 ($generated@@81 ($generated@@396 $generated@@526) $generated@@529) $generated@@528) ($generated@@216 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@136 $generated@@526 ($generated@@421 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) (= (type $generated@@533) $generated@@149)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@215 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@215 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@149) (= (type $generated@@535) $generated@@149)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@215 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@215 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@149) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@536 ($generated@@413 $generated@@537 $generated@@538))) (and (= ($generated@@276 ($generated@@385 ($generated@@305 $generated@@149 $generated@@149) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@385 ($generated@@305 $generated@@149 $generated@@149) $generated@@536) ($generated@@413 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@536 ($generated@@413 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@421 $generated@@540 $generated@@541))) (and (= ($generated@@276 ($generated@@385 ($generated@@323 $generated@@149 $generated@@149) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@385 ($generated@@323 $generated@@149 $generated@@149) $generated@@539) ($generated@@421 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@421 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@149)) ($generated@@216 $generated@@544 ($generated@@139 $generated@@542 $generated@@543))) (and (= ($generated@@276 ($generated@@385 $generated@@140 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@385 $generated@@140 $generated@@544) ($generated@@139 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@216 $generated@@544 ($generated@@139 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@81 ($generated@@432 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@81 ($generated@@432 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@139 $generated@@549 $generated@@550)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@140) (= ($generated@@530 ($generated@@276 $generated@@551)) ($generated@@531 $generated@@551)))
 :pattern ( ($generated@@530 ($generated@@276 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) ($generated@@216 $generated@@552 ($generated@@75 0))) (and (= ($generated@@276 ($generated@@385 $generated@@2 $generated@@552)) $generated@@552) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@552) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@552 ($generated@@75 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@64)) ($generated@@216 $generated@@553 ($generated@@236 $generated@@554))) (and (= ($generated@@276 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@553) ($generated@@236 $generated@@554))))
 :pattern ( ($generated@@216 $generated@@553 ($generated@@236 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@64)) ($generated@@216 $generated@@555 ($generated@@241 $generated@@556))) (and (= ($generated@@276 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@555)) $generated@@555) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@555) ($generated@@241 $generated@@556))))
 :pattern ( ($generated@@216 $generated@@555 ($generated@@241 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@149) (= (type $generated@@558) $generated@@64)) ($generated@@216 $generated@@557 ($generated@@154 $generated@@558))) (and (= ($generated@@276 ($generated@@385 ($generated@@76 $generated@@149 $generated@@2) $generated@@557)) $generated@@557) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@2) $generated@@557) ($generated@@154 $generated@@558))))
 :pattern ( ($generated@@216 $generated@@557 ($generated@@154 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@149) (= (type $generated@@560) $generated@@64)) ($generated@@216 $generated@@559 ($generated@@342 $generated@@560))) (and (= ($generated@@276 ($generated@@385 ($generated@@227 $generated@@149) $generated@@559)) $generated@@559) ($generated@@136 ($generated@@385 ($generated@@227 $generated@@149) $generated@@559) ($generated@@342 $generated@@560))))
 :pattern ( ($generated@@216 $generated@@559 ($generated@@342 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ($generated@@563 Int) ) (! (let (($generated@@564 ($generated@@226 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@227 $generated@@564)) (=> (and (and (<= 0 $generated@@562) (<= $generated@@562 $generated@@563)) (< $generated@@563 ($generated@@259 $generated@@561))) (= ($generated@@289 ($generated@@225 $generated@@561 $generated@@562) (- $generated@@563 $generated@@562)) ($generated@@289 $generated@@561 $generated@@563)))))
 :weight 25
 :pattern ( ($generated@@289 $generated@@561 $generated@@563) ($generated@@225 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@565 ($generated@@154 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@565 $generated@@568)))) ($generated@@253 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@81 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@154 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 Int) ($generated@@571 Int) ) (! (let (($generated@@572 ($generated@@226 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@227 $generated@@572)) (=> (and (and (<= 0 $generated@@570) (<= 0 $generated@@571)) (<= (+ $generated@@570 $generated@@571) ($generated@@259 $generated@@569))) (= ($generated@@225 ($generated@@225 $generated@@569 $generated@@570) $generated@@571) ($generated@@225 $generated@@569 (+ $generated@@570 $generated@@571))))))
 :pattern ( ($generated@@225 ($generated@@225 $generated@@569 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@140) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@252 $generated@@575) (and ($generated@@138 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@64) ($generated@@74 $generated@@573 ($generated@@139 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@139 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@253 ($generated@@147 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@253 ($generated@@147 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@140) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@252 $generated@@579) (and ($generated@@138 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@64) ($generated@@74 $generated@@577 ($generated@@139 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@74 $generated@@577 ($generated@@139 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@253 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@253 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@149) (= (type $generated@@582) $generated@@149)) (= ($generated@@215 ($generated@@248 $generated@@581) ($generated@@248 $generated@@582)) ($generated@@248 ($generated@@215 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@215 ($generated@@248 $generated@@581) ($generated@@248 $generated@@582)))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@246 $generated@@583))) ($generated@@248 ($generated@@276 ($generated@@8 $generated@@583))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@246 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@276 ($generated@@248 $generated@@584)) ($generated@@248 ($generated@@276 $generated@@584)))
 :pattern ( ($generated@@276 ($generated@@248 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@226 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@227 $generated@@586)) (= ($generated@@259 $generated@@585) 0)) (= $generated@@585 ($generated@@269 $generated@@586))))
 :pattern ( ($generated@@259 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@76 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@297 ($generated@@82 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@297 $generated@@587) ($generated ($generated@@81 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@297 ($generated@@82 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@2)) ($generated@@74 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@3)) ($generated@@74 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@4)) ($generated@@74 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@456)) ($generated@@74 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@149)) ($generated@@74 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@227 $generated@@149)) (= (type $generated@@602) $generated@@64)) (= ($generated@@136 $generated@@601 ($generated@@342 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@259 $generated@@601))) ($generated@@216 ($generated@@289 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@289 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@136 $generated@@601 ($generated@@342 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@227 $generated@@149)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@259 $generated@@604))) (< ($generated@@531 ($generated@@385 $generated@@140 ($generated@@289 $generated@@604 $generated@@605))) ($generated@@272 $generated@@604))))
 :pattern ( ($generated@@531 ($generated@@385 $generated@@140 ($generated@@289 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@136 $generated@@606 ($generated@@413 $generated@@607 $generated@@608))) (and (and ($generated@@136 ($generated@@303 $generated@@606) ($generated@@236 $generated@@607)) ($generated@@136 ($generated@@353 $generated@@606) ($generated@@236 $generated@@608))) ($generated@@136 ($generated@@384 $generated@@606) ($generated@@236 ($generated@@139 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@136 $generated@@606 ($generated@@413 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@136 $generated@@609 ($generated@@421 $generated@@610 $generated@@611))) (and (and ($generated@@136 ($generated@@321 $generated@@609) ($generated@@241 $generated@@610)) ($generated@@136 ($generated@@364 $generated@@609) ($generated@@241 $generated@@611))) ($generated@@136 ($generated@@395 $generated@@609) ($generated@@241 ($generated@@139 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@136 $generated@@609 ($generated@@421 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@136 $generated@@612 $generated@@46))
 :pattern ( ($generated@@136 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@136 $generated@@613 $generated@@47))
 :pattern ( ($generated@@136 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@136 $generated@@614 $generated@@44))
 :pattern ( ($generated@@136 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@456) ($generated@@136 $generated@@615 $generated@@45))
 :pattern ( ($generated@@136 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@149) ($generated@@136 $generated@@616 $generated@@48))
 :pattern ( ($generated@@136 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@619) ($generated@@227 $generated@@149)) (= (type $generated@@620) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@621) $generated@@77)) (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@624  (=> (and (and (< $generated@@617 $generated@@618) (<= $generated@@618 ($generated@@259 $generated@@619))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 $generated@@618) (<= $generated@@618 ($generated@@259 $generated@@619))))))
(let (($generated@@625  (=> (and (<= $generated@@618 $generated@@617) (= (ControlFlow 0 4) 2)) $generated@@624)))
(let (($generated@@626  (=> (and (< $generated@@617 $generated@@618) (= (ControlFlow 0 3) 2)) $generated@@624)))
(let (($generated@@627  (=> (= $generated@@620 ($generated@@160 $generated@@621 $generated@@622 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@626) (=> (= (ControlFlow 0 5) 4) $generated@@625)))))
(let (($generated@@628  (=> (and (and (and ($generated@@252 $generated@@622) ($generated@@623 $generated@@622)) (and ($generated@@136 $generated@@619 ($generated@@342 $generated@@46)) ($generated@@74 $generated@@619 ($generated@@342 $generated@@46) $generated@@622))) (and (and (<= ($generated@@246 0) $generated@@617) (<= ($generated@@246 0) $generated@@618)) (and (= 1 $generated@@339) (= (ControlFlow 0 6) 5)))) $generated@@627)))
$generated@@628))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U Int) T@U)
(declare-fun $generated@@156 (T@U Int T@U) T@U)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U Int) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (Int) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@307 (T@T T@T) T@U)
(declare-fun $generated@@308 (T@T T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@T T@T) T@U)
(declare-fun $generated@@326 (T@T T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@342 () Int)
(declare-fun $generated@@343 (T@U T@U) Bool)
(declare-fun $generated@@344 (T@U T@U) Bool)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (forall (($generated@@160 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@160)) 16)) (forall (($generated@@161 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@161))
))) (forall (($generated@@162 T@U) ($generated@@163 Int) ) (! (let (($generated@@164 ($generated@@159 (type $generated@@162))))
(= (type ($generated@@155 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@155 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= (type ($generated@@156 $generated@@165 $generated@@166 $generated@@167)) ($generated@@157 $generated@@168)))
 :pattern ( ($generated@@156 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 Int) ($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 (type $generated@@171)))
 (=> (= (type $generated@@169) ($generated@@157 $generated@@173)) (=> (and (<= 0 $generated@@172) (< $generated@@172 ($generated@@158 $generated@@169))) (and (=> (= $generated@@170 $generated@@172) (= ($generated@@155 ($generated@@156 $generated@@169 $generated@@170 $generated@@171) $generated@@172) $generated@@171)) (=> (not (= $generated@@170 $generated@@172)) (= ($generated@@155 ($generated@@156 $generated@@169 $generated@@170 $generated@@171) $generated@@172) ($generated@@155 $generated@@169 $generated@@172)))))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@169 $generated@@170 $generated@@171) $generated@@172))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 17)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@77 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@136)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@64) (= (type $generated@@235) $generated@@64)) (= (type $generated@@236) $generated@@145)) (= (type $generated@@237) $generated@@145)) (= ($generated@@132 ($generated@@230 $generated@@236 $generated@@237) ($generated@@135 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@132 ($generated@@230 $generated@@236 $generated@@237) ($generated@@135 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 Int) ) (! (let (($generated@@241 ($generated@@159 (type $generated@@239))))
(= (type ($generated@@238 $generated@@239 $generated@@240)) ($generated@@157 $generated@@241)))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 Int) ($generated@@244 T@U) ($generated@@245 Int) ) (! (let (($generated@@246 (type $generated@@244)))
 (=> (= (type $generated@@242) ($generated@@157 $generated@@246)) (=> (and (and (<= 0 $generated@@245) (<= $generated@@245 $generated@@243)) (< $generated@@243 ($generated@@158 $generated@@242))) (= ($generated@@238 ($generated@@156 $generated@@242 $generated@@243 $generated@@244) $generated@@245) ($generated@@156 ($generated@@238 $generated@@242 $generated@@245) (- $generated@@243 $generated@@245) $generated@@244)))))
 :pattern ( ($generated@@238 ($generated@@156 $generated@@242 $generated@@243 $generated@@244) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) (= (type $generated@@248) $generated@@136)) (= ($generated@@142 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@142 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 Int) ) (! (let (($generated@@251 ($generated@@159 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@157 $generated@@251)) (= $generated@@250 0)) (= ($generated@@238 $generated@@249 $generated@@250) $generated@@249)))
 :pattern ( ($generated@@238 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@231 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@132 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@145) ($generated@@0 ($generated@@81 $generated@@259 $generated@@261))) ($generated@@231 $generated@@261 $generated@@260))
 :pattern ( ($generated@@81 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@132 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@262 $generated@@263) $generated@@263)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(= (type ($generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@264 $generated@@267) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@64) (= (type $generated@@271) $generated@@64)) (= (type $generated@@272) $generated@@145)) (= (type $generated@@273) $generated@@145)) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@268 $generated@@274)) (= ($generated@@74 ($generated@@230 $generated@@272 $generated@@273) ($generated@@135 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@74 ($generated@@230 $generated@@272 $generated@@273) ($generated@@135 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@159 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@157 $generated@@277)) (=> (and (<= 0 $generated@@276) (<= $generated@@276 ($generated@@158 $generated@@275))) (= ($generated@@158 ($generated@@238 $generated@@275 $generated@@276)) (- ($generated@@158 $generated@@275) $generated@@276)))))
 :pattern ( ($generated@@158 ($generated@@238 $generated@@275 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@68)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@136) (= ($generated@@134 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@136) ($generated@@134 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@145) (= (type $generated@@283) $generated@@145)) (= $generated@@281 ($generated@@230 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@134 $generated@@281))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@157 $generated@@285))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@158 ($generated@@284 $generated@@286)) 0)
 :pattern ( ($generated@@284 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (! (let (($generated@@290 ($generated@@159 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@157 $generated@@290)) (=> (and (< 0 $generated@@289) (<= $generated@@289 ($generated@@158 $generated@@288))) (< ($generated@@287 ($generated@@238 $generated@@288 $generated@@289)) ($generated@@287 $generated@@288)))))
 :pattern ( ($generated@@287 ($generated@@238 $generated@@288 $generated@@289)))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@145)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@64) (= (type $generated@@295) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@269 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@74 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@269 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 Int) ($generated@@298 Int) ) (! (let (($generated@@299 ($generated@@159 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@157 $generated@@299)) (=> (and (and (<= 0 $generated@@297) (<= 0 $generated@@298)) (< $generated@@298 (- ($generated@@158 $generated@@296) $generated@@297))) (= ($generated@@155 ($generated@@238 $generated@@296 $generated@@297) $generated@@298) ($generated@@155 $generated@@296 (+ $generated@@298 $generated@@297))))))
 :weight 25
 :pattern ( ($generated@@155 ($generated@@238 $generated@@296 $generated@@297) $generated@@298))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@76 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@79 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@76 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@81 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert  (and (and (and (and (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@311 $generated@@312)) 18)) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@313 $generated@@314)) $generated@@313)
 :pattern ( ($generated@@308 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@310 ($generated@@308 $generated@@315 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@308 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@309 (type $generated@@317))))
(= (type ($generated@@306 $generated@@317)) ($generated@@76 $generated@@318 $generated@@4)))
 :pattern ( ($generated@@306 $generated@@317))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= (type ($generated@@307 $generated@@319 $generated@@320)) ($generated@@308 $generated@@319 $generated@@320))
 :pattern ( ($generated@@307 $generated@@319 $generated@@320))
))))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@T) ) (! (let (($generated@@323 (type $generated@@321)))
 (not ($generated@@0 ($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321))))
 :pattern ( (let (($generated@@323 (type $generated@@321)))
($generated@@81 ($generated@@306 ($generated@@307 $generated@@323 $generated@@322)) $generated@@321)))
)))
(assert  (and (and (and (and (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (= ($generated@@1 ($generated@@326 $generated@@329 $generated@@330)) 19)) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= ($generated@@327 ($generated@@326 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@326 $generated@@331 $generated@@332))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@328 ($generated@@326 $generated@@333 $generated@@334)) $generated@@334)
 :pattern ( ($generated@@326 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@327 (type $generated@@335))))
(= (type ($generated@@324 $generated@@335)) ($generated@@76 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@335))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= (type ($generated@@325 $generated@@337 $generated@@338)) ($generated@@326 $generated@@337 $generated@@338))
 :pattern ( ($generated@@325 $generated@@337 $generated@@338))
))))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@T) ) (! (let (($generated@@341 (type $generated@@339)))
 (not ($generated@@0 ($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339))))
 :pattern ( (let (($generated@@341 (type $generated@@339)))
($generated@@81 ($generated@@324 ($generated@@325 $generated@@341 $generated@@340)) $generated@@339)))
)))
(assert (forall (($generated@@346 T@U) ) (! (= (type ($generated@@345 $generated@@346)) $generated@@64)
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert  (=> (<= 0 $generated@@342) (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (= (type $generated@@347) $generated@@64) (= (type $generated@@348) ($generated@@157 $generated@@145))) (or ($generated@@344 $generated@@347 $generated@@348) (and (not (= 0 $generated@@342)) ($generated@@132 $generated@@348 ($generated@@345 $generated@@347))))) true)
 :pattern ( ($generated@@343 $generated@@347 $generated@@348))
))))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@79 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@76 $generated@@350 $generated@@2)) (= ($generated@@151 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@81 $generated@@349 $generated@@351))) (<= ($generated ($generated@@81 $generated@@349 $generated@@351)) ($generated@@300 $generated@@349))))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@151 $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@310 (type $generated@@352))))
(let (($generated@@354 ($generated@@309 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@308 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@307 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@306 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@310 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@310 (type $generated@@359))))
(let (($generated@@361 ($generated@@309 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@308 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@307 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@328 (type $generated@@363))))
(let (($generated@@365 ($generated@@327 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@326 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@325 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@324 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@328 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@76 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@328 (type $generated@@370))))
(let (($generated@@372 ($generated@@327 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@326 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@325 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@375) $generated@@64)) (= ($generated@@132 $generated@@374 ($generated@@150 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@374 $generated@@376)))) ($generated@@231 $generated@@376 $generated@@375))
 :pattern ( ($generated@@81 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@132 $generated@@374 ($generated@@150 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 Int) ($generated@@379 T@U) ($generated@@380 Int) ) (! (let (($generated@@381 (type $generated@@379)))
 (=> (= (type $generated@@377) ($generated@@157 $generated@@381)) (=> (and (and (<= 0 $generated@@378) (< $generated@@378 $generated@@380)) (<= $generated@@380 ($generated@@158 $generated@@377))) (= ($generated@@238 ($generated@@156 $generated@@377 $generated@@378 $generated@@379) $generated@@380) ($generated@@238 $generated@@377 $generated@@380)))))
 :pattern ( ($generated@@238 ($generated@@156 $generated@@377 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@383) $generated@@64)) (= (type $generated@@384) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@382 ($generated@@252 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@145) ($generated@@0 ($generated@@81 $generated@@382 $generated@@385))) ($generated@@269 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@81 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@74 $generated@@382 ($generated@@252 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@257 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@145) ($generated@@0 ($generated@@81 $generated@@386 $generated@@389))) ($generated@@269 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@81 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@257 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@81 ($generated@@301 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@81 ($generated@@301 $generated@@391) $generated@@390)))
)))
(assert  (and (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@392 $generated@@395)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@392 $generated@@395))
)) (forall (($generated@@396 T@T) ($generated@@397 T@U) ) (! (= (type ($generated@@393 $generated@@396 $generated@@397)) $generated@@396)
 :pattern ( ($generated@@393 $generated@@396 $generated@@397))
))) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@310 (type $generated@@398))))
(let (($generated@@400 ($generated@@309 (type $generated@@398))))
(= (type ($generated@@394 $generated@@398)) ($generated@@76 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@394 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@401) ($generated@@143 ($generated@@393 $generated@@136 $generated@@402)))) (= ($generated@@81 ($generated@@394 $generated@@401) ($generated@@143 ($generated@@393 $generated@@136 $generated@@402))) ($generated@@144 ($generated@@393 $generated@@136 $generated@@402))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@328 (type $generated@@406))))
(let (($generated@@408 ($generated@@327 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@76 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@410) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@409) ($generated@@143 ($generated@@393 $generated@@136 $generated@@410)))) (= ($generated@@81 ($generated@@404 $generated@@409) ($generated@@143 ($generated@@393 $generated@@136 $generated@@410))) ($generated@@144 ($generated@@393 $generated@@136 $generated@@410))))))
 :pattern ( ($generated@@81 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@309 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@308 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@81 ($generated@@306 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@81 ($generated@@394 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@327 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@326 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@81 ($generated@@324 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@81 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@425) $generated@@64)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@424) $generated@@428))) (and ($generated@@269 ($generated@@81 ($generated@@394 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@269 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@424) $generated@@428))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@433) $generated@@64)) (= (type $generated@@434) $generated@@64)) (= (type $generated@@435) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@432) $generated@@436))) (and ($generated@@269 ($generated@@81 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@269 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@74 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@76 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@328 (type $generated@@439))))
(let (($generated@@441 ($generated@@327 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@326 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@325 $generated@@441 $generated@@440)) (= ($generated@@324 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@324 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@328 (type $generated@@442))))
(let (($generated@@444 ($generated@@327 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@326 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@325 $generated@@444 $generated@@443)) (= ($generated@@367 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@367 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@328 (type $generated@@445))))
(let (($generated@@447 ($generated@@327 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@326 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@325 $generated@@447 $generated@@446)) (= ($generated@@403 $generated@@445) ($generated@@437 $generated@@145))))))
 :pattern ( ($generated@@403 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@310 (type $generated@@448))))
(let (($generated@@450 ($generated@@309 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@308 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@307 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@145) (= (type $generated@@452) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@448) ($generated@@291 ($generated@@230 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@392 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@328 (type $generated@@453))))
(let (($generated@@455 ($generated@@327 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@326 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@325 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@403 $generated@@453) ($generated@@291 ($generated@@230 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@403 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) ($generated@@231 $generated@@458 $generated@@46)) (and (= ($generated@@291 ($generated@@393 $generated@@2 $generated@@458)) $generated@@458) ($generated@@132 ($generated@@393 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) ($generated@@231 $generated@@459 $generated@@47)) (and (= ($generated@@291 ($generated@@393 $generated@@3 $generated@@459)) $generated@@459) ($generated@@132 ($generated@@393 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@145) ($generated@@231 $generated@@460 $generated@@44)) (and (= ($generated@@291 ($generated@@393 $generated@@4 $generated@@460)) $generated@@460) ($generated@@132 ($generated@@393 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@145) ($generated@@231 $generated@@462 $generated@@45)) (and (= ($generated@@291 ($generated@@393 $generated@@461 $generated@@462)) $generated@@462) ($generated@@132 ($generated@@393 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@64) (= ($generated@@231 ($generated@@291 $generated@@463) $generated@@464) ($generated@@132 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@231 ($generated@@291 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@79 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@76 $generated@@466 $generated@@2)) (<= 0 ($generated@@300 $generated@@465))))
 :pattern ( ($generated@@300 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@159 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@157 $generated@@468)) (<= 0 ($generated@@158 $generated@@467))))
 :pattern ( ($generated@@158 $generated@@467))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@421 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@421 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@421 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@421 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@72 ($generated@@421 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@429 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@429 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@429 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@429 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@64) (= (type $generated@@488) $generated@@64)) (= ($generated@@72 ($generated@@429 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@145) (= (type $generated@@490) $generated@@145)) (= ($generated@@278 ($generated@@230 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@135 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@135 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@135 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@135 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@145) (= (type $generated@@500) $generated@@145)) (= ($generated@@143 ($generated@@230 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@230 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@145) (= (type $generated@@502) $generated@@145)) (= ($generated@@144 ($generated@@230 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@230 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@157 $generated@@145)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@503 ($generated@@345 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@158 $generated@@503))) ($generated@@269 ($generated@@155 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@155 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@74 $generated@@503 ($generated@@345 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@75 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@75 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@252 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@252 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@64)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@513 ($generated@@257 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@257 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@150 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@150 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@521 ($generated@@345 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@345 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@72 ($generated@@345 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@345 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@393 $generated@@526 ($generated@@291 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@291 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) (= ($generated@@132 $generated@@527 ($generated@@421 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@306 $generated@@527) $generated@@530))) (and ($generated@@231 ($generated@@81 ($generated@@394 $generated@@527) $generated@@530) $generated@@529) ($generated@@231 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@81 ($generated@@394 $generated@@527) $generated@@530))
 :pattern ( ($generated@@81 ($generated@@306 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@132 $generated@@527 ($generated@@421 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) (= ($generated@@132 $generated@@531 ($generated@@429 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@531) $generated@@534))) (and ($generated@@231 ($generated@@81 ($generated@@404 $generated@@531) $generated@@534) $generated@@533) ($generated@@231 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@81 ($generated@@404 $generated@@531) $generated@@534))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@132 $generated@@531 ($generated@@429 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) (= (type $generated@@538) $generated@@145)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@230 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@145)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@230 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) ($generated@@231 $generated@@541 ($generated@@421 $generated@@542 $generated@@543))) (and (= ($generated@@291 ($generated@@393 ($generated@@308 $generated@@145 $generated@@145) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@393 ($generated@@308 $generated@@145 $generated@@145) $generated@@541) ($generated@@421 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@231 $generated@@541 ($generated@@421 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) (= (type $generated@@546) $generated@@64)) ($generated@@231 $generated@@544 ($generated@@429 $generated@@545 $generated@@546))) (and (= ($generated@@291 ($generated@@393 ($generated@@326 $generated@@145 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@393 ($generated@@326 $generated@@145 $generated@@145) $generated@@544) ($generated@@429 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@231 $generated@@544 ($generated@@429 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@64) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) $generated@@145)) ($generated@@231 $generated@@549 ($generated@@135 $generated@@547 $generated@@548))) (and (= ($generated@@291 ($generated@@393 $generated@@136 $generated@@549)) $generated@@549) ($generated@@132 ($generated@@393 $generated@@136 $generated@@549) ($generated@@135 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@231 $generated@@549 ($generated@@135 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@81 ($generated@@437 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@81 ($generated@@437 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 Int) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (=> (= (type $generated@@552) ($generated@@157 $generated@@555)) (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@158 $generated@@552))) (= ($generated@@158 ($generated@@156 $generated@@552 $generated@@553 $generated@@554)) ($generated@@158 $generated@@552)))))
 :pattern ( ($generated@@158 ($generated@@156 $generated@@552 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@69)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@135 $generated@@558 $generated@@559)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@136) (= ($generated@@535 ($generated@@291 $generated@@560)) ($generated@@536 $generated@@560)))
 :pattern ( ($generated@@535 ($generated@@291 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@145) ($generated@@231 $generated@@561 ($generated@@75 0))) (and (= ($generated@@291 ($generated@@393 $generated@@2 $generated@@561)) $generated@@561) ($generated@@132 ($generated@@393 ($generated@@76 $generated@@145 $generated@@4) $generated@@561) ($generated@@75 0))))
 :pattern ( ($generated@@231 $generated@@561 ($generated@@75 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@145) (= (type $generated@@563) $generated@@64)) ($generated@@231 $generated@@562 ($generated@@252 $generated@@563))) (and (= ($generated@@291 ($generated@@393 ($generated@@76 $generated@@145 $generated@@4) $generated@@562)) $generated@@562) ($generated@@132 ($generated@@393 ($generated@@76 $generated@@145 $generated@@4) $generated@@562) ($generated@@252 $generated@@563))))
 :pattern ( ($generated@@231 $generated@@562 ($generated@@252 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@64)) ($generated@@231 $generated@@564 ($generated@@257 $generated@@565))) (and (= ($generated@@291 ($generated@@393 ($generated@@76 $generated@@145 $generated@@4) $generated@@564)) $generated@@564) ($generated@@132 ($generated@@393 ($generated@@76 $generated@@145 $generated@@4) $generated@@564) ($generated@@257 $generated@@565))))
 :pattern ( ($generated@@231 $generated@@564 ($generated@@257 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@145) (= (type $generated@@567) $generated@@64)) ($generated@@231 $generated@@566 ($generated@@150 $generated@@567))) (and (= ($generated@@291 ($generated@@393 ($generated@@76 $generated@@145 $generated@@2) $generated@@566)) $generated@@566) ($generated@@132 ($generated@@393 ($generated@@76 $generated@@145 $generated@@2) $generated@@566) ($generated@@150 $generated@@567))))
 :pattern ( ($generated@@231 $generated@@566 ($generated@@150 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@145) (= (type $generated@@569) $generated@@64)) ($generated@@231 $generated@@568 ($generated@@345 $generated@@569))) (and (= ($generated@@291 ($generated@@393 ($generated@@157 $generated@@145) $generated@@568)) $generated@@568) ($generated@@132 ($generated@@393 ($generated@@157 $generated@@145) $generated@@568) ($generated@@345 $generated@@569))))
 :pattern ( ($generated@@231 $generated@@568 ($generated@@345 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 Int) ($generated@@572 Int) ) (! (let (($generated@@573 ($generated@@159 (type $generated@@570))))
 (=> (= (type $generated@@570) ($generated@@157 $generated@@573)) (=> (and (and (<= 0 $generated@@571) (<= $generated@@571 $generated@@572)) (< $generated@@572 ($generated@@158 $generated@@570))) (= ($generated@@155 ($generated@@238 $generated@@570 $generated@@571) (- $generated@@572 $generated@@571)) ($generated@@155 $generated@@570 $generated@@572)))))
 :weight 25
 :pattern ( ($generated@@155 $generated@@570 $generated@@572) ($generated@@238 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@574 ($generated@@150 $generated@@575) $generated@@576) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@574 $generated@@577)))) ($generated@@269 $generated@@577 $generated@@575 $generated@@576))
 :pattern ( ($generated@@81 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@74 $generated@@574 ($generated@@150 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ($generated@@580 Int) ) (! (let (($generated@@581 ($generated@@159 (type $generated@@578))))
 (=> (= (type $generated@@578) ($generated@@157 $generated@@581)) (=> (and (and (<= 0 $generated@@579) (<= 0 $generated@@580)) (<= (+ $generated@@579 $generated@@580) ($generated@@158 $generated@@578))) (= ($generated@@238 ($generated@@238 $generated@@578 $generated@@579) $generated@@580) ($generated@@238 $generated@@578 (+ $generated@@579 $generated@@580))))))
 :pattern ( ($generated@@238 ($generated@@238 $generated@@578 $generated@@579) $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@136) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@584) (and ($generated@@134 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@64) ($generated@@74 $generated@@582 ($generated@@135 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@74 $generated@@582 ($generated@@135 $generated@@583 $generated@@585) $generated@@584))
))))) ($generated@@269 ($generated@@143 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@269 ($generated@@143 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@136) (= (type $generated@@587) $generated@@64)) (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@588) (and ($generated@@134 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@64) ($generated@@74 $generated@@586 ($generated@@135 $generated@@589 $generated@@587) $generated@@588))
 :pattern ( ($generated@@74 $generated@@586 ($generated@@135 $generated@@589 $generated@@587) $generated@@588))
))))) ($generated@@269 ($generated@@144 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@269 ($generated@@144 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@145) (= (type $generated@@591) $generated@@145)) (= ($generated@@230 ($generated@@264 $generated@@590) ($generated@@264 $generated@@591)) ($generated@@264 ($generated@@230 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@230 ($generated@@264 $generated@@590) ($generated@@264 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@291 ($generated@@8 ($generated@@262 $generated@@592))) ($generated@@264 ($generated@@291 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@291 ($generated@@8 ($generated@@262 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@291 ($generated@@264 $generated@@593)) ($generated@@264 ($generated@@291 $generated@@593)))
 :pattern ( ($generated@@291 ($generated@@264 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@159 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@157 $generated@@595)) (= ($generated@@158 $generated@@594) 0)) (= $generated@@594 ($generated@@284 $generated@@595))))
 :pattern ( ($generated@@158 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@597)))
 (=> (and (and (= (type $generated@@596) ($generated@@76 $generated@@599 $generated@@2)) (= (type $generated@@598) $generated@@2)) (<= 0 ($generated $generated@@598))) (= ($generated@@300 ($generated@@82 $generated@@596 $generated@@597 $generated@@598)) (+ (- ($generated@@300 $generated@@596) ($generated ($generated@@81 $generated@@596 $generated@@597))) ($generated $generated@@598)))))
 :pattern ( ($generated@@300 ($generated@@82 $generated@@596 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@601) $generated@@2)) ($generated@@74 $generated@@601 $generated@@46 $generated@@600))
 :pattern ( ($generated@@74 $generated@@601 $generated@@46 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@603) $generated@@3)) ($generated@@74 $generated@@603 $generated@@47 $generated@@602))
 :pattern ( ($generated@@74 $generated@@603 $generated@@47 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@605) $generated@@4)) ($generated@@74 $generated@@605 $generated@@44 $generated@@604))
 :pattern ( ($generated@@74 $generated@@605 $generated@@44 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@607) $generated@@461)) ($generated@@74 $generated@@607 $generated@@45 $generated@@606))
 :pattern ( ($generated@@74 $generated@@607 $generated@@45 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@145)) ($generated@@74 $generated@@609 $generated@@48 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@48 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@157 $generated@@145)) (= (type $generated@@611) $generated@@64)) (= ($generated@@132 $generated@@610 ($generated@@345 $generated@@611)) (forall (($generated@@612 Int) ) (!  (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@158 $generated@@610))) ($generated@@231 ($generated@@155 $generated@@610 $generated@@612) $generated@@611))
 :pattern ( ($generated@@155 $generated@@610 $generated@@612))
))))
 :pattern ( ($generated@@132 $generated@@610 ($generated@@345 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 Int) ) (!  (=> (= (type $generated@@613) ($generated@@157 $generated@@145)) (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@158 $generated@@613))) (< ($generated@@536 ($generated@@393 $generated@@136 ($generated@@155 $generated@@613 $generated@@614))) ($generated@@287 $generated@@613))))
 :pattern ( ($generated@@536 ($generated@@393 $generated@@136 ($generated@@155 $generated@@613 $generated@@614))))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) ($generated@@308 $generated@@145 $generated@@145)) (= (type $generated@@616) $generated@@64)) (= (type $generated@@617) $generated@@64)) ($generated@@132 $generated@@615 ($generated@@421 $generated@@616 $generated@@617))) (and (and ($generated@@132 ($generated@@306 $generated@@615) ($generated@@252 $generated@@616)) ($generated@@132 ($generated@@356 $generated@@615) ($generated@@252 $generated@@617))) ($generated@@132 ($generated@@392 $generated@@615) ($generated@@252 ($generated@@135 $generated@@616 $generated@@617)))))
 :pattern ( ($generated@@132 $generated@@615 ($generated@@421 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@326 $generated@@145 $generated@@145)) (= (type $generated@@619) $generated@@64)) (= (type $generated@@620) $generated@@64)) ($generated@@132 $generated@@618 ($generated@@429 $generated@@619 $generated@@620))) (and (and ($generated@@132 ($generated@@324 $generated@@618) ($generated@@257 $generated@@619)) ($generated@@132 ($generated@@367 $generated@@618) ($generated@@257 $generated@@620))) ($generated@@132 ($generated@@403 $generated@@618) ($generated@@257 ($generated@@135 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@132 $generated@@618 ($generated@@429 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@2) ($generated@@132 $generated@@621 $generated@@46))
 :pattern ( ($generated@@132 $generated@@621 $generated@@46))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@3) ($generated@@132 $generated@@622 $generated@@47))
 :pattern ( ($generated@@132 $generated@@622 $generated@@47))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@4) ($generated@@132 $generated@@623 $generated@@44))
 :pattern ( ($generated@@132 $generated@@623 $generated@@44))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@461) ($generated@@132 $generated@@624 $generated@@45))
 :pattern ( ($generated@@132 $generated@@624 $generated@@45))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@145) ($generated@@132 $generated@@625 $generated@@48))
 :pattern ( ($generated@@132 $generated@@625 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () Int)
(declare-fun $generated@@633 () Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@626) ($generated@@176 $generated@@77 $generated@@4)) (= (type $generated@@627) $generated@@77)) (= (type $generated@@628) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@630) ($generated@@157 $generated@@145))) (= (type $generated@@631) ($generated@@157 $generated@@145))) (= (type $generated@@634) ($generated@@157 $generated@@145))) (= (type $generated@@636) ($generated@@157 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@637  (=> (= $generated@@626 ($generated@@175 $generated@@627 $generated@@628 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@158 $generated@@630)))) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@158 $generated@@630))) (=> (= $generated@@631 ($generated@@156 $generated@@630 $generated@@629 ($generated@@291 ($generated@@8 $generated@@632)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@633) (<= $generated@@633 ($generated@@158 $generated@@631)))) (=> (= $generated@@634 ($generated@@238 $generated@@631 $generated@@633)) (=> (and (and ($generated@@74 $generated@@634 ($generated@@345 $generated@@46) $generated@@628) ($generated@@344 $generated@@46 ($generated@@238 $generated@@631 $generated@@633))) (and ($generated@@344 $generated@@46 ($generated@@238 $generated@@631 $generated@@633)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@343 $generated@@46 ($generated@@238 $generated@@631 $generated@@633)))))))))))
(let (($generated@@638  (=> (and ($generated@@268 $generated@@628) ($generated@@635 $generated@@628)) (=> (and (and ($generated@@132 $generated@@630 ($generated@@345 $generated@@46)) ($generated@@74 $generated@@630 ($generated@@345 $generated@@46) $generated@@628)) (and (<= ($generated@@262 0) $generated@@629) (<= ($generated@@262 0) $generated@@633))) (=> (and (and (and (and ($generated@@132 $generated@@636 ($generated@@345 $generated@@46)) ($generated@@74 $generated@@636 ($generated@@345 $generated@@46) $generated@@628)) true) (= 1 $generated@@342)) (and (and (< $generated@@629 $generated@@633) (<= $generated@@633 ($generated@@158 $generated@@630))) (and ($generated@@343 $generated@@46 ($generated@@238 $generated@@630 $generated@@633)) (= (ControlFlow 0 5) 2)))) $generated@@637)))))
$generated@@638)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U Int) T@U)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (Int) Int)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@289 (T@U Int) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 () Int)
(declare-fun $generated@@340 (T@U T@U) Bool)
(declare-fun $generated@@341 (T@U T@U) Bool)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@385 (T@T T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@432 (T@T) T@U)
(declare-fun $generated@@456 () T@T)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@502 (T@U) Int)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert  (and (and (forall (($generated@@228 T@T) ) (= ($generated@@1 ($generated@@227 $generated@@228)) 17)) (forall (($generated@@229 T@T) ) (! (= ($generated@@226 ($generated@@227 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@227 $generated@@229))
))) (forall (($generated@@230 T@U) ($generated@@231 Int) ) (! (let (($generated@@232 ($generated@@226 (type $generated@@230))))
(= (type ($generated@@225 $generated@@230 $generated@@231)) ($generated@@227 $generated@@232)))
 :pattern ( ($generated@@225 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 Int) ) (! (let (($generated@@235 ($generated@@226 (type $generated@@233))))
 (=> (and (= (type $generated@@233) ($generated@@227 $generated@@235)) (= $generated@@234 0)) (= ($generated@@225 $generated@@233 $generated@@234) $generated@@233)))
 :pattern ( ($generated@@225 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@149) ($generated@@0 ($generated@@81 $generated@@238 $generated@@240))) ($generated@@216 $generated@@240 $generated@@239))
 :pattern ( ($generated@@81 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@136 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@136 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@149) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@216 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@136 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 Int) ) (! (= ($generated@@246 $generated@@247) $generated@@247)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (let (($generated@@250 (type $generated@@249)))
(= (type ($generated@@248 $generated@@249)) $generated@@250))
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (= ($generated@@248 $generated@@251) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@254) $generated@@64) (= (type $generated@@255) $generated@@64)) (= (type $generated@@256) $generated@@149)) (= (type $generated@@257) $generated@@149)) (= (type $generated@@258) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@252 $generated@@258)) (= ($generated@@74 ($generated@@215 $generated@@256 $generated@@257) ($generated@@139 $generated@@254 $generated@@255) $generated@@258)  (and ($generated@@253 $generated@@256 $generated@@254 $generated@@258) ($generated@@253 $generated@@257 $generated@@255 $generated@@258))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@256 $generated@@257) ($generated@@139 $generated@@254 $generated@@255) $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 Int) ) (! (let (($generated@@262 ($generated@@226 (type $generated@@260))))
 (=> (= (type $generated@@260) ($generated@@227 $generated@@262)) (=> (and (<= 0 $generated@@261) (<= $generated@@261 ($generated@@259 $generated@@260))) (= ($generated@@259 ($generated@@225 $generated@@260 $generated@@261)) (- ($generated@@259 $generated@@260) $generated@@261)))))
 :pattern ( ($generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (= (type $generated@@265) $generated@@140) (= ($generated@@138 $generated@@265) (= ($generated@@263 $generated@@265) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@140) ($generated@@138 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@149) (= (type $generated@@268) $generated@@149)) (= $generated@@266 ($generated@@215 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@138 $generated@@266))
)))
(assert (forall (($generated@@270 T@T) ) (! (= (type ($generated@@269 $generated@@270)) ($generated@@227 $generated@@270))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@T) ) (! (= ($generated@@259 ($generated@@269 $generated@@271)) 0)
 :pattern ( ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 Int) ) (! (let (($generated@@275 ($generated@@226 (type $generated@@273))))
 (=> (= (type $generated@@273) ($generated@@227 $generated@@275)) (=> (and (< 0 $generated@@274) (<= $generated@@274 ($generated@@259 $generated@@273))) (< ($generated@@272 ($generated@@225 $generated@@273 $generated@@274)) ($generated@@272 $generated@@273)))))
 :pattern ( ($generated@@272 ($generated@@225 $generated@@273 $generated@@274)))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@149)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@253 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@74 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@253 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@281) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@283) $generated@@149)) (= (type $generated@@284) $generated@@64)) ($generated@@132 $generated@@281 $generated@@282)) ($generated@@253 $generated@@283 $generated@@284 $generated@@281)) ($generated@@253 $generated@@283 $generated@@284 $generated@@282))
 :pattern ( ($generated@@132 $generated@@281 $generated@@282) ($generated@@253 $generated@@283 $generated@@284 $generated@@281))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@285) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@288) $generated@@64)) ($generated@@132 $generated@@285 $generated@@286)) ($generated@@74 $generated@@287 $generated@@288 $generated@@285)) ($generated@@74 $generated@@287 $generated@@288 $generated@@286))
 :pattern ( ($generated@@132 $generated@@285 $generated@@286) ($generated@@74 $generated@@287 $generated@@288 $generated@@285))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 Int) ) (! (let (($generated@@292 ($generated@@226 (type $generated@@290))))
(= (type ($generated@@289 $generated@@290 $generated@@291)) $generated@@292))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 Int) ($generated@@295 Int) ) (! (let (($generated@@296 ($generated@@226 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@227 $generated@@296)) (=> (and (and (<= 0 $generated@@294) (<= 0 $generated@@295)) (< $generated@@295 (- ($generated@@259 $generated@@293) $generated@@294))) (= ($generated@@289 ($generated@@225 $generated@@293 $generated@@294) $generated@@295) ($generated@@289 $generated@@293 (+ $generated@@295 $generated@@294))))))
 :weight 25
 :pattern ( ($generated@@289 ($generated@@225 $generated@@293 $generated@@294) $generated@@295))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@76 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@79 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@76 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@81 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@76 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@81 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@81 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@64)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert  (=> (<= 0 $generated@@339) (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@64) (= (type $generated@@345) ($generated@@227 $generated@@149))) (or ($generated@@341 $generated@@344 $generated@@345) (and (not (= 0 $generated@@339)) ($generated@@136 $generated@@345 ($generated@@342 $generated@@344))))) true)
 :pattern ( ($generated@@340 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@79 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@76 $generated@@347 $generated@@2)) (= ($generated@@155 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@81 $generated@@346 $generated@@348))) (<= ($generated ($generated@@81 $generated@@346 $generated@@348)) ($generated@@297 $generated@@346))))
 :pattern ( ($generated@@81 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@155 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@307 (type $generated@@349))))
(let (($generated@@351 ($generated@@306 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@305 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@304 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@303 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@307 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@76 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@307 (type $generated@@356))))
(let (($generated@@358 ($generated@@306 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@305 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@304 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@81 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@325 (type $generated@@360))))
(let (($generated@@362 ($generated@@324 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@323 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@322 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@321 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@325 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@76 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(let (($generated@@369 ($generated@@324 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@323 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@322 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@372) $generated@@64)) (= ($generated@@136 $generated@@371 ($generated@@154 $generated@@372)) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@371 $generated@@373)))) ($generated@@216 $generated@@373 $generated@@372))
 :pattern ( ($generated@@81 $generated@@371 $generated@@373))
))))
 :pattern ( ($generated@@136 $generated@@371 ($generated@@154 $generated@@372)))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (and (= (type $generated@@374) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@375) $generated@@64)) (= (type $generated@@376) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@374 ($generated@@236 $generated@@375) $generated@@376) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@149) ($generated@@0 ($generated@@81 $generated@@374 $generated@@377))) ($generated@@253 $generated@@377 $generated@@375 $generated@@376))
 :pattern ( ($generated@@81 $generated@@374 $generated@@377))
))))
 :pattern ( ($generated@@74 $generated@@374 ($generated@@236 $generated@@375) $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@241 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@149) ($generated@@0 ($generated@@81 $generated@@378 $generated@@381))) ($generated@@253 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@81 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@241 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(= ($generated ($generated@@81 ($generated@@298 $generated@@383) $generated@@382)) 0))
 :pattern ( (let (($generated@@383 (type $generated@@382)))
($generated@@81 ($generated@@298 $generated@@383) $generated@@382)))
)))
(assert  (and (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@384 $generated@@387)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@384 $generated@@387))
)) (forall (($generated@@388 T@T) ($generated@@389 T@U) ) (! (= (type ($generated@@385 $generated@@388 $generated@@389)) $generated@@388)
 :pattern ( ($generated@@385 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@307 (type $generated@@390))))
(let (($generated@@392 ($generated@@306 (type $generated@@390))))
(= (type ($generated@@386 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@386 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@394) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@384 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@393) ($generated@@147 ($generated@@385 $generated@@140 $generated@@394)))) (= ($generated@@81 ($generated@@386 $generated@@393) ($generated@@147 ($generated@@385 $generated@@140 $generated@@394))) ($generated@@148 ($generated@@385 $generated@@140 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@325 (type $generated@@398))))
(let (($generated@@400 ($generated@@324 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@76 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@402) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@401) ($generated@@147 ($generated@@385 $generated@@140 $generated@@402)))) (= ($generated@@81 ($generated@@396 $generated@@401) ($generated@@147 ($generated@@385 $generated@@140 $generated@@402))) ($generated@@148 ($generated@@385 $generated@@140 $generated@@402))))))
 :pattern ( ($generated@@81 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@306 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@305 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@81 ($generated@@353 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@81 ($generated@@303 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@81 ($generated@@386 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@81 ($generated@@353 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@324 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@323 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@81 ($generated@@321 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@81 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@416) $generated@@420))) (and ($generated@@253 ($generated@@81 ($generated@@386 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@253 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@425) $generated@@64)) (= (type $generated@@426) $generated@@64)) (= (type $generated@@427) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@424) $generated@@428))) (and ($generated@@253 ($generated@@81 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@253 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@74 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@429) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@430) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@431) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@429 $generated@@431))) (and ($generated@@132 $generated@@429 $generated@@430) ($generated@@132 $generated@@430 $generated@@431))) ($generated@@132 $generated@@429 $generated@@431))
 :pattern ( ($generated@@132 $generated@@429 $generated@@430) ($generated@@132 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@T) ) (! (= (type ($generated@@432 $generated@@433)) ($generated@@76 $generated@@433 $generated@@4))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@325 (type $generated@@434))))
(let (($generated@@436 ($generated@@324 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@323 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@322 $generated@@436 $generated@@435)) (= ($generated@@321 $generated@@434) ($generated@@432 $generated@@436))))))
 :pattern ( ($generated@@321 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@325 (type $generated@@437))))
(let (($generated@@439 ($generated@@324 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@323 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@322 $generated@@439 $generated@@438)) (= ($generated@@364 $generated@@437) ($generated@@432 $generated@@438))))))
 :pattern ( ($generated@@364 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@325 (type $generated@@440))))
(let (($generated@@442 ($generated@@324 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@323 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@322 $generated@@442 $generated@@441)) (= ($generated@@395 $generated@@440) ($generated@@432 $generated@@149))))))
 :pattern ( ($generated@@395 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@307 (type $generated@@443))))
(let (($generated@@445 ($generated@@306 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@305 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@304 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (and (and (= (type $generated@@446) $generated@@149) (= (type $generated@@447) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@384 $generated@@443) ($generated@@276 ($generated@@215 $generated@@446 $generated@@447)))))
 :no-pattern (type $generated@@446)
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@384 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@325 (type $generated@@448))))
(let (($generated@@450 ($generated@@324 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@323 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@322 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@149) (= (type $generated@@452) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@395 $generated@@448) ($generated@@276 ($generated@@215 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@395 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@149) ($generated@@216 $generated@@453 $generated@@46)) (and (= ($generated@@276 ($generated@@385 $generated@@2 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@385 $generated@@2 $generated@@453) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@453 $generated@@46))
)))
(assert (forall (($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@149) ($generated@@216 $generated@@454 $generated@@47)) (and (= ($generated@@276 ($generated@@385 $generated@@3 $generated@@454)) $generated@@454) ($generated@@136 ($generated@@385 $generated@@3 $generated@@454) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@454 $generated@@47))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) ($generated@@216 $generated@@455 $generated@@44)) (and (= ($generated@@276 ($generated@@385 $generated@@4 $generated@@455)) $generated@@455) ($generated@@136 ($generated@@385 $generated@@4 $generated@@455) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@455 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@456) 20))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@149) ($generated@@216 $generated@@457 $generated@@45)) (and (= ($generated@@276 ($generated@@385 $generated@@456 $generated@@457)) $generated@@457) ($generated@@136 ($generated@@385 $generated@@456 $generated@@457) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@457 $generated@@45))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (= (type $generated@@459) $generated@@64) (= ($generated@@216 ($generated@@276 $generated@@458) $generated@@459) ($generated@@136 $generated@@458 $generated@@459)))
 :pattern ( ($generated@@216 ($generated@@276 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@79 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@76 $generated@@461 $generated@@2)) (<= 0 ($generated@@297 $generated@@460))))
 :pattern ( ($generated@@297 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@226 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@227 $generated@@463)) (<= 0 ($generated@@259 $generated@@462))))
 :pattern ( ($generated@@259 $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@413 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@413 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@413 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@413 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@64) (= (type $generated@@473) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@472 $generated@@473)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@474 ($generated@@421 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@421 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@421 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@421 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@64) (= (type $generated@@483) $generated@@64)) (= ($generated@@72 ($generated@@421 $generated@@482 $generated@@483)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@149) (= (type $generated@@485) $generated@@149)) (= ($generated@@263 ($generated@@215 $generated@@484 $generated@@485)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@64) (= (type $generated@@489) $generated@@64)) (= ($generated@@486 ($generated@@139 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@139 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@139 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@139 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) (= (type $generated@@495) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@215 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) (= (type $generated@@497) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@215 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (and (= (type $generated@@498) ($generated@@227 $generated@@149)) (= (type $generated@@499) $generated@@64)) (= (type $generated@@500) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@498 ($generated@@342 $generated@@499) $generated@@500) (forall (($generated@@501 Int) ) (!  (=> (and (<= 0 $generated@@501) (< $generated@@501 ($generated@@259 $generated@@498))) ($generated@@253 ($generated@@289 $generated@@498 $generated@@501) $generated@@499 $generated@@500))
 :pattern ( ($generated@@289 $generated@@498 $generated@@501))
))))
 :pattern ( ($generated@@74 $generated@@498 ($generated@@342 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@502 ($generated@@75 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@75 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@236 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@236 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@507)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@508 ($generated@@241 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@241 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@511)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@64)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@512 ($generated@@154 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@154 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@515)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@64)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@516 ($generated@@342 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@342 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@72 ($generated@@342 $generated@@519)) $generated@@57))
 :pattern ( ($generated@@342 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
(= ($generated@@385 $generated@@521 ($generated@@276 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@276 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@64)) (= ($generated@@136 $generated@@522 ($generated@@413 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@303 $generated@@522) $generated@@525))) (and ($generated@@216 ($generated@@81 ($generated@@386 $generated@@522) $generated@@525) $generated@@524) ($generated@@216 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@522) $generated@@525))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@136 $generated@@522 ($generated@@413 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) (= ($generated@@136 $generated@@526 ($generated@@421 $generated@@527 $generated@@528)) (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@321 $generated@@526) $generated@@529))) (and ($generated@@216 ($generated@@81 ($generated@@396 $generated@@526) $generated@@529) $generated@@528) ($generated@@216 $generated@@529 $generated@@527)))
 :pattern ( ($generated@@81 ($generated@@396 $generated@@526) $generated@@529))
 :pattern ( ($generated@@81 ($generated@@321 $generated@@526) $generated@@529))
))))
 :pattern ( ($generated@@136 $generated@@526 ($generated@@421 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) (= (type $generated@@533) $generated@@149)) (< ($generated@@530 $generated@@532) ($generated@@531 ($generated@@215 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@215 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@149) (= (type $generated@@535) $generated@@149)) (< ($generated@@530 $generated@@535) ($generated@@531 ($generated@@215 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@215 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@149) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) ($generated@@216 $generated@@536 ($generated@@413 $generated@@537 $generated@@538))) (and (= ($generated@@276 ($generated@@385 ($generated@@305 $generated@@149 $generated@@149) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@385 ($generated@@305 $generated@@149 $generated@@149) $generated@@536) ($generated@@413 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@216 $generated@@536 ($generated@@413 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@149) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) ($generated@@216 $generated@@539 ($generated@@421 $generated@@540 $generated@@541))) (and (= ($generated@@276 ($generated@@385 ($generated@@323 $generated@@149 $generated@@149) $generated@@539)) $generated@@539) ($generated@@136 ($generated@@385 ($generated@@323 $generated@@149 $generated@@149) $generated@@539) ($generated@@421 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@216 $generated@@539 ($generated@@421 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@149)) ($generated@@216 $generated@@544 ($generated@@139 $generated@@542 $generated@@543))) (and (= ($generated@@276 ($generated@@385 $generated@@140 $generated@@544)) $generated@@544) ($generated@@136 ($generated@@385 $generated@@140 $generated@@544) ($generated@@139 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@216 $generated@@544 ($generated@@139 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@545)))
 (not ($generated@@0 ($generated@@81 ($generated@@432 $generated@@546) $generated@@545))))
 :pattern ( (let (($generated@@546 (type $generated@@545)))
($generated@@81 ($generated@@432 $generated@@546) $generated@@545)))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@69)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@64) (= (type $generated@@550) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@549 $generated@@550)) $generated@@62) (= ($generated@@547 ($generated@@139 $generated@@549 $generated@@550)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@140) (= ($generated@@530 ($generated@@276 $generated@@551)) ($generated@@531 $generated@@551)))
 :pattern ( ($generated@@530 ($generated@@276 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) ($generated@@216 $generated@@552 ($generated@@75 0))) (and (= ($generated@@276 ($generated@@385 $generated@@2 $generated@@552)) $generated@@552) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@552) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@552 ($generated@@75 0)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@64)) ($generated@@216 $generated@@553 ($generated@@236 $generated@@554))) (and (= ($generated@@276 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@553) ($generated@@236 $generated@@554))))
 :pattern ( ($generated@@216 $generated@@553 ($generated@@236 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@149) (= (type $generated@@556) $generated@@64)) ($generated@@216 $generated@@555 ($generated@@241 $generated@@556))) (and (= ($generated@@276 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@555)) $generated@@555) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@4) $generated@@555) ($generated@@241 $generated@@556))))
 :pattern ( ($generated@@216 $generated@@555 ($generated@@241 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@149) (= (type $generated@@558) $generated@@64)) ($generated@@216 $generated@@557 ($generated@@154 $generated@@558))) (and (= ($generated@@276 ($generated@@385 ($generated@@76 $generated@@149 $generated@@2) $generated@@557)) $generated@@557) ($generated@@136 ($generated@@385 ($generated@@76 $generated@@149 $generated@@2) $generated@@557) ($generated@@154 $generated@@558))))
 :pattern ( ($generated@@216 $generated@@557 ($generated@@154 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@149) (= (type $generated@@560) $generated@@64)) ($generated@@216 $generated@@559 ($generated@@342 $generated@@560))) (and (= ($generated@@276 ($generated@@385 ($generated@@227 $generated@@149) $generated@@559)) $generated@@559) ($generated@@136 ($generated@@385 ($generated@@227 $generated@@149) $generated@@559) ($generated@@342 $generated@@560))))
 :pattern ( ($generated@@216 $generated@@559 ($generated@@342 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ($generated@@563 Int) ) (! (let (($generated@@564 ($generated@@226 (type $generated@@561))))
 (=> (= (type $generated@@561) ($generated@@227 $generated@@564)) (=> (and (and (<= 0 $generated@@562) (<= $generated@@562 $generated@@563)) (< $generated@@563 ($generated@@259 $generated@@561))) (= ($generated@@289 ($generated@@225 $generated@@561 $generated@@562) (- $generated@@563 $generated@@562)) ($generated@@289 $generated@@561 $generated@@563)))))
 :weight 25
 :pattern ( ($generated@@289 $generated@@561 $generated@@563) ($generated@@225 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@565 ($generated@@154 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@565 $generated@@568)))) ($generated@@253 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@81 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@154 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 Int) ($generated@@571 Int) ) (! (let (($generated@@572 ($generated@@226 (type $generated@@569))))
 (=> (= (type $generated@@569) ($generated@@227 $generated@@572)) (=> (and (and (<= 0 $generated@@570) (<= 0 $generated@@571)) (<= (+ $generated@@570 $generated@@571) ($generated@@259 $generated@@569))) (= ($generated@@225 ($generated@@225 $generated@@569 $generated@@570) $generated@@571) ($generated@@225 $generated@@569 (+ $generated@@570 $generated@@571))))))
 :pattern ( ($generated@@225 ($generated@@225 $generated@@569 $generated@@570) $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@140) (= (type $generated@@574) $generated@@64)) (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@252 $generated@@575) (and ($generated@@138 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@64) ($generated@@74 $generated@@573 ($generated@@139 $generated@@574 $generated@@576) $generated@@575))
 :pattern ( ($generated@@74 $generated@@573 ($generated@@139 $generated@@574 $generated@@576) $generated@@575))
))))) ($generated@@253 ($generated@@147 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@253 ($generated@@147 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@140) (= (type $generated@@578) $generated@@64)) (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@252 $generated@@579) (and ($generated@@138 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@64) ($generated@@74 $generated@@577 ($generated@@139 $generated@@580 $generated@@578) $generated@@579))
 :pattern ( ($generated@@74 $generated@@577 ($generated@@139 $generated@@580 $generated@@578) $generated@@579))
))))) ($generated@@253 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@253 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@149) (= (type $generated@@582) $generated@@149)) (= ($generated@@215 ($generated@@248 $generated@@581) ($generated@@248 $generated@@582)) ($generated@@248 ($generated@@215 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@215 ($generated@@248 $generated@@581) ($generated@@248 $generated@@582)))
)))
(assert (forall (($generated@@583 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@246 $generated@@583))) ($generated@@248 ($generated@@276 ($generated@@8 $generated@@583))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@246 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ) (! (= ($generated@@276 ($generated@@248 $generated@@584)) ($generated@@248 ($generated@@276 $generated@@584)))
 :pattern ( ($generated@@276 ($generated@@248 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@226 (type $generated@@585))))
 (=> (and (= (type $generated@@585) ($generated@@227 $generated@@586)) (= ($generated@@259 $generated@@585) 0)) (= $generated@@585 ($generated@@269 $generated@@586))))
 :pattern ( ($generated@@259 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@588)))
 (=> (and (and (= (type $generated@@587) ($generated@@76 $generated@@590 $generated@@2)) (= (type $generated@@589) $generated@@2)) (<= 0 ($generated $generated@@589))) (= ($generated@@297 ($generated@@82 $generated@@587 $generated@@588 $generated@@589)) (+ (- ($generated@@297 $generated@@587) ($generated ($generated@@81 $generated@@587 $generated@@588))) ($generated $generated@@589)))))
 :pattern ( ($generated@@297 ($generated@@82 $generated@@587 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@592) $generated@@2)) ($generated@@74 $generated@@592 $generated@@46 $generated@@591))
 :pattern ( ($generated@@74 $generated@@592 $generated@@46 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@594) $generated@@3)) ($generated@@74 $generated@@594 $generated@@47 $generated@@593))
 :pattern ( ($generated@@74 $generated@@594 $generated@@47 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@596) $generated@@4)) ($generated@@74 $generated@@596 $generated@@44 $generated@@595))
 :pattern ( ($generated@@74 $generated@@596 $generated@@44 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@598) $generated@@456)) ($generated@@74 $generated@@598 $generated@@45 $generated@@597))
 :pattern ( ($generated@@74 $generated@@598 $generated@@45 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@600) $generated@@149)) ($generated@@74 $generated@@600 $generated@@48 $generated@@599))
 :pattern ( ($generated@@74 $generated@@600 $generated@@48 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@227 $generated@@149)) (= (type $generated@@602) $generated@@64)) (= ($generated@@136 $generated@@601 ($generated@@342 $generated@@602)) (forall (($generated@@603 Int) ) (!  (=> (and (<= 0 $generated@@603) (< $generated@@603 ($generated@@259 $generated@@601))) ($generated@@216 ($generated@@289 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@289 $generated@@601 $generated@@603))
))))
 :pattern ( ($generated@@136 $generated@@601 ($generated@@342 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@227 $generated@@149)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@259 $generated@@604))) (< ($generated@@531 ($generated@@385 $generated@@140 ($generated@@289 $generated@@604 $generated@@605))) ($generated@@272 $generated@@604))))
 :pattern ( ($generated@@531 ($generated@@385 $generated@@140 ($generated@@289 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@305 $generated@@149 $generated@@149)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@608) $generated@@64)) ($generated@@136 $generated@@606 ($generated@@413 $generated@@607 $generated@@608))) (and (and ($generated@@136 ($generated@@303 $generated@@606) ($generated@@236 $generated@@607)) ($generated@@136 ($generated@@353 $generated@@606) ($generated@@236 $generated@@608))) ($generated@@136 ($generated@@384 $generated@@606) ($generated@@236 ($generated@@139 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@136 $generated@@606 ($generated@@413 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@323 $generated@@149 $generated@@149)) (= (type $generated@@610) $generated@@64)) (= (type $generated@@611) $generated@@64)) ($generated@@136 $generated@@609 ($generated@@421 $generated@@610 $generated@@611))) (and (and ($generated@@136 ($generated@@321 $generated@@609) ($generated@@241 $generated@@610)) ($generated@@136 ($generated@@364 $generated@@609) ($generated@@241 $generated@@611))) ($generated@@136 ($generated@@395 $generated@@609) ($generated@@241 ($generated@@139 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@136 $generated@@609 ($generated@@421 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@136 $generated@@612 $generated@@46))
 :pattern ( ($generated@@136 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@136 $generated@@613 $generated@@47))
 :pattern ( ($generated@@136 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@136 $generated@@614 $generated@@44))
 :pattern ( ($generated@@136 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@456) ($generated@@136 $generated@@615 $generated@@45))
 :pattern ( ($generated@@136 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@149) ($generated@@136 $generated@@616 $generated@@48))
 :pattern ( ($generated@@136 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@619) ($generated@@227 $generated@@149)) (= (type $generated@@620) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@621) $generated@@77)) (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@624  (=> (and (and (< $generated@@617 $generated@@618) (<= $generated@@618 ($generated@@259 $generated@@619))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 $generated@@618) (<= $generated@@618 ($generated@@259 $generated@@619))))))
(let (($generated@@625  (=> (and (<= $generated@@618 $generated@@617) (= (ControlFlow 0 4) 2)) $generated@@624)))
(let (($generated@@626  (=> (and (< $generated@@617 $generated@@618) (= (ControlFlow 0 3) 2)) $generated@@624)))
(let (($generated@@627  (=> (= $generated@@620 ($generated@@160 $generated@@621 $generated@@622 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@626) (=> (= (ControlFlow 0 5) 4) $generated@@625)))))
(let (($generated@@628  (=> (and (and (and ($generated@@252 $generated@@622) ($generated@@623 $generated@@622)) (and ($generated@@136 $generated@@619 ($generated@@342 $generated@@46)) ($generated@@74 $generated@@619 ($generated@@342 $generated@@46) $generated@@622))) (and (and (<= ($generated@@246 0) $generated@@617) (<= ($generated@@246 0) $generated@@618)) (and (= 1 $generated@@339) (= (ControlFlow 0 6) 5)))) $generated@@627)))
$generated@@628))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U Int) T@U)
(declare-fun $generated@@156 (T@U Int T@U) T@U)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U Int) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@262 (Int) Int)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 () Int)
(declare-fun $generated@@348 (T@U T@U) Bool)
(declare-fun $generated@@349 (T@U T@U) Bool)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@T T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (forall (($generated@@160 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@160)) 16)) (forall (($generated@@161 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@157 $generated@@161))
))) (forall (($generated@@162 T@U) ($generated@@163 Int) ) (! (let (($generated@@164 ($generated@@159 (type $generated@@162))))
(= (type ($generated@@155 $generated@@162 $generated@@163)) $generated@@164))
 :pattern ( ($generated@@155 $generated@@162 $generated@@163))
))) (forall (($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 T@U) ) (! (let (($generated@@168 (type $generated@@167)))
(= (type ($generated@@156 $generated@@165 $generated@@166 $generated@@167)) ($generated@@157 $generated@@168)))
 :pattern ( ($generated@@156 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 Int) ($generated@@171 T@U) ($generated@@172 Int) ) (! (let (($generated@@173 (type $generated@@171)))
 (=> (= (type $generated@@169) ($generated@@157 $generated@@173)) (=> (and (<= 0 $generated@@172) (< $generated@@172 ($generated@@158 $generated@@169))) (and (=> (= $generated@@170 $generated@@172) (= ($generated@@155 ($generated@@156 $generated@@169 $generated@@170 $generated@@171) $generated@@172) $generated@@171)) (=> (not (= $generated@@170 $generated@@172)) (= ($generated@@155 ($generated@@156 $generated@@169 $generated@@170 $generated@@171) $generated@@172) ($generated@@155 $generated@@169 $generated@@172)))))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@169 $generated@@170 $generated@@171) $generated@@172))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 17)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@77 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= (type ($generated@@230 $generated@@232 $generated@@233)) $generated@@136)
 :pattern ( ($generated@@230 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (and (= (type $generated@@234) $generated@@64) (= (type $generated@@235) $generated@@64)) (= (type $generated@@236) $generated@@145)) (= (type $generated@@237) $generated@@145)) (= ($generated@@132 ($generated@@230 $generated@@236 $generated@@237) ($generated@@135 $generated@@234 $generated@@235))  (and ($generated@@231 $generated@@236 $generated@@234) ($generated@@231 $generated@@237 $generated@@235))))
 :pattern ( ($generated@@132 ($generated@@230 $generated@@236 $generated@@237) ($generated@@135 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 Int) ) (! (let (($generated@@241 ($generated@@159 (type $generated@@239))))
(= (type ($generated@@238 $generated@@239 $generated@@240)) ($generated@@157 $generated@@241)))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 Int) ($generated@@244 T@U) ($generated@@245 Int) ) (! (let (($generated@@246 (type $generated@@244)))
 (=> (= (type $generated@@242) ($generated@@157 $generated@@246)) (=> (and (and (<= 0 $generated@@245) (<= $generated@@245 $generated@@243)) (< $generated@@243 ($generated@@158 $generated@@242))) (= ($generated@@238 ($generated@@156 $generated@@242 $generated@@243 $generated@@244) $generated@@245) ($generated@@156 ($generated@@238 $generated@@242 $generated@@245) (- $generated@@243 $generated@@245) $generated@@244)))))
 :pattern ( ($generated@@238 ($generated@@156 $generated@@242 $generated@@243 $generated@@244) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) (= (type $generated@@248) $generated@@136)) (= ($generated@@142 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@142 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 Int) ) (! (let (($generated@@251 ($generated@@159 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@157 $generated@@251)) (= $generated@@250 0)) (= ($generated@@238 $generated@@249 $generated@@250) $generated@@249)))
 :pattern ( ($generated@@238 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@231 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@64)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@260) $generated@@64)) (= ($generated@@132 $generated@@259 ($generated@@257 $generated@@260)) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@145) ($generated@@0 ($generated@@81 $generated@@259 $generated@@261))) ($generated@@231 $generated@@261 $generated@@260))
 :pattern ( ($generated@@81 $generated@@259 $generated@@261))
))))
 :pattern ( ($generated@@132 $generated@@259 ($generated@@257 $generated@@260)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@262 $generated@@263) $generated@@263)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (let (($generated@@266 (type $generated@@265)))
(= (type ($generated@@264 $generated@@265)) $generated@@266))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@264 $generated@@267) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@64) (= (type $generated@@271) $generated@@64)) (= (type $generated@@272) $generated@@145)) (= (type $generated@@273) $generated@@145)) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@268 $generated@@274)) (= ($generated@@74 ($generated@@230 $generated@@272 $generated@@273) ($generated@@135 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@74 ($generated@@230 $generated@@272 $generated@@273) ($generated@@135 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 Int) ) (! (let (($generated@@277 ($generated@@159 (type $generated@@275))))
 (=> (= (type $generated@@275) ($generated@@157 $generated@@277)) (=> (and (<= 0 $generated@@276) (<= $generated@@276 ($generated@@158 $generated@@275))) (= ($generated@@158 ($generated@@238 $generated@@275 $generated@@276)) (- ($generated@@158 $generated@@275) $generated@@276)))))
 :pattern ( ($generated@@158 ($generated@@238 $generated@@275 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@68)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@136) (= ($generated@@134 $generated@@280) (= ($generated@@278 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@159 (type $generated@@282))))
 (=> (and (= (type $generated@@282) ($generated@@157 $generated@@284)) (= (type $generated@@283) ($generated@@157 $generated@@284))) (= ($generated@@281 $generated@@282 $generated@@283)  (and (= ($generated@@158 $generated@@282) ($generated@@158 $generated@@283)) (forall (($generated@@285 Int) ) (!  (=> (and (<= 0 $generated@@285) (< $generated@@285 ($generated@@158 $generated@@282))) (= ($generated@@155 $generated@@282 $generated@@285) ($generated@@155 $generated@@283 $generated@@285)))
 :pattern ( ($generated@@155 $generated@@282 $generated@@285))
 :pattern ( ($generated@@155 $generated@@283 $generated@@285))
))))))
 :pattern ( ($generated@@281 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@136) ($generated@@134 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@145) (= (type $generated@@288) $generated@@145)) (= $generated@@286 ($generated@@230 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@134 $generated@@286))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@157 $generated@@290))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@158 ($generated@@289 $generated@@291)) 0)
 :pattern ( ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 Int) ) (! (let (($generated@@295 ($generated@@159 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@157 $generated@@295)) (=> (and (< 0 $generated@@294) (<= $generated@@294 ($generated@@158 $generated@@293))) (< ($generated@@292 ($generated@@238 $generated@@293 $generated@@294)) ($generated@@292 $generated@@293)))))
 :pattern ( ($generated@@292 ($generated@@238 $generated@@293 $generated@@294)))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@145)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@64) (= (type $generated@@300) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@269 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@74 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@269 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 Int) ($generated@@303 Int) ) (! (let (($generated@@304 ($generated@@159 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@157 $generated@@304)) (=> (and (and (<= 0 $generated@@302) (<= 0 $generated@@303)) (< $generated@@303 (- ($generated@@158 $generated@@301) $generated@@302))) (= ($generated@@155 ($generated@@238 $generated@@301 $generated@@302) $generated@@303) ($generated@@155 $generated@@301 (+ $generated@@303 $generated@@302))))))
 :weight 25
 :pattern ( ($generated@@155 ($generated@@238 $generated@@301 $generated@@302) $generated@@303))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@76 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@81 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@81 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@81 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@351 T@U) ) (! (= (type ($generated@@350 $generated@@351)) $generated@@64)
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert  (=> (<= 0 $generated@@347) (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@352) $generated@@64) (= (type $generated@@353) ($generated@@157 $generated@@145))) (or ($generated@@349 $generated@@352 $generated@@353) (and (not (= 0 $generated@@347)) ($generated@@132 $generated@@353 ($generated@@350 $generated@@352))))) true)
 :pattern ( ($generated@@348 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@79 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@76 $generated@@355 $generated@@2)) (= ($generated@@151 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@81 $generated@@354 $generated@@356))) (<= ($generated ($generated@@81 $generated@@354 $generated@@356)) ($generated@@305 $generated@@354))))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@151 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@315 (type $generated@@357))))
(let (($generated@@359 ($generated@@314 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@313 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@312 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@311 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@315 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@315 (type $generated@@364))))
(let (($generated@@366 ($generated@@314 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@313 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@312 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@333 (type $generated@@368))))
(let (($generated@@370 ($generated@@332 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@331 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@330 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@329 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@333 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@76 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@333 (type $generated@@375))))
(let (($generated@@377 ($generated@@332 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@331 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@330 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@380) $generated@@64)) (= ($generated@@132 $generated@@379 ($generated@@150 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@379 $generated@@381)))) ($generated@@231 $generated@@381 $generated@@380))
 :pattern ( ($generated@@81 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@132 $generated@@379 ($generated@@150 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 Int) ($generated@@384 T@U) ($generated@@385 Int) ) (! (let (($generated@@386 (type $generated@@384)))
 (=> (= (type $generated@@382) ($generated@@157 $generated@@386)) (=> (and (and (<= 0 $generated@@383) (< $generated@@383 $generated@@385)) (<= $generated@@385 ($generated@@158 $generated@@382))) (= ($generated@@238 ($generated@@156 $generated@@382 $generated@@383 $generated@@384) $generated@@385) ($generated@@238 $generated@@382 $generated@@385)))))
 :pattern ( ($generated@@238 ($generated@@156 $generated@@382 $generated@@383 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@252 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 $generated@@387 $generated@@390))) ($generated@@269 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@81 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@252 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@392) $generated@@64)) (= (type $generated@@393) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@391 ($generated@@257 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@145) ($generated@@0 ($generated@@81 $generated@@391 $generated@@394))) ($generated@@269 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@81 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@74 $generated@@391 ($generated@@257 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@81 ($generated@@306 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@81 ($generated@@306 $generated@@396) $generated@@395)))
)))
(assert  (and (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@397 $generated@@400)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@397 $generated@@400))
)) (forall (($generated@@401 T@T) ($generated@@402 T@U) ) (! (= (type ($generated@@398 $generated@@401 $generated@@402)) $generated@@401)
 :pattern ( ($generated@@398 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@315 (type $generated@@403))))
(let (($generated@@405 ($generated@@314 (type $generated@@403))))
(= (type ($generated@@399 $generated@@403)) ($generated@@76 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@399 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@397 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@406) ($generated@@143 ($generated@@398 $generated@@136 $generated@@407)))) (= ($generated@@81 ($generated@@399 $generated@@406) ($generated@@143 ($generated@@398 $generated@@136 $generated@@407))) ($generated@@144 ($generated@@398 $generated@@136 $generated@@407))))))
 :pattern ( ($generated@@81 ($generated@@397 $generated@@406) $generated@@407))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@333 (type $generated@@411))))
(let (($generated@@413 ($generated@@332 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@76 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@331 $generated@@145 $generated@@145)) (= (type $generated@@415) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@81 ($generated@@329 $generated@@414) ($generated@@143 ($generated@@398 $generated@@136 $generated@@415)))) (= ($generated@@81 ($generated@@409 $generated@@414) ($generated@@143 ($generated@@398 $generated@@136 $generated@@415))) ($generated@@144 ($generated@@398 $generated@@136 $generated@@415))))))
 :pattern ( ($generated@@81 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@314 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@313 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@81 ($generated@@399 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(let (($generated@@424 ($generated@@332 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@331 $generated@@424 $generated@@423)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@421) $generated@@422)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) (and ($generated@@0 ($generated@@81 ($generated@@329 $generated@@421) $generated@@425)) (= $generated@@422 ($generated@@81 ($generated@@409 $generated@@421) $generated@@425))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@421) $generated@@425))
))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@429) $generated@@433))) (and ($generated@@269 ($generated@@81 ($generated@@399 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@269 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@429) $generated@@433))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@331 $generated@@145 $generated@@145)) (= (type $generated@@438) $generated@@64)) (= (type $generated@@439) $generated@@64)) (= (type $generated@@440) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@437) $generated@@441))) (and ($generated@@269 ($generated@@81 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@269 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@74 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@159 (type $generated@@442))))
 (=> (and (and (= (type $generated@@442) ($generated@@157 $generated@@444)) (= (type $generated@@443) ($generated@@157 $generated@@444))) ($generated@@281 $generated@@442 $generated@@443)) (= $generated@@442 $generated@@443)))
 :pattern ( ($generated@@281 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@76 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@333 (type $generated@@447))))
(let (($generated@@449 ($generated@@332 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@331 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@330 $generated@@449 $generated@@448)) (= ($generated@@329 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@329 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@333 (type $generated@@450))))
(let (($generated@@452 ($generated@@332 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@331 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@330 $generated@@452 $generated@@451)) (= ($generated@@372 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@372 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@333 (type $generated@@453))))
(let (($generated@@455 ($generated@@332 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@331 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@330 $generated@@455 $generated@@454)) (= ($generated@@408 $generated@@453) ($generated@@445 $generated@@145))))))
 :pattern ( ($generated@@408 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@315 (type $generated@@456))))
(let (($generated@@458 ($generated@@314 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@313 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@312 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@397 $generated@@456) ($generated@@296 ($generated@@230 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@333 (type $generated@@461))))
(let (($generated@@463 ($generated@@332 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@331 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@330 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@145) (= (type $generated@@465) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@408 $generated@@461) ($generated@@296 ($generated@@230 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@408 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@145) ($generated@@231 $generated@@466 $generated@@46)) (and (= ($generated@@296 ($generated@@398 $generated@@2 $generated@@466)) $generated@@466) ($generated@@132 ($generated@@398 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@231 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) ($generated@@231 $generated@@467 $generated@@47)) (and (= ($generated@@296 ($generated@@398 $generated@@3 $generated@@467)) $generated@@467) ($generated@@132 ($generated@@398 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@231 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) ($generated@@231 $generated@@468 $generated@@44)) (and (= ($generated@@296 ($generated@@398 $generated@@4 $generated@@468)) $generated@@468) ($generated@@132 ($generated@@398 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@231 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 20))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) ($generated@@231 $generated@@470 $generated@@45)) (and (= ($generated@@296 ($generated@@398 $generated@@469 $generated@@470)) $generated@@470) ($generated@@132 ($generated@@398 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@231 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@231 ($generated@@296 $generated@@471) $generated@@472) ($generated@@132 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@231 ($generated@@296 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@79 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@76 $generated@@474 $generated@@2)) (<= 0 ($generated@@305 $generated@@473))))
 :pattern ( ($generated@@305 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@159 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@157 $generated@@476)) (<= 0 ($generated@@158 $generated@@475))))
 :pattern ( ($generated@@158 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@426 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@426 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@426 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@426 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@72 ($generated@@426 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@426 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@434 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@434 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@64) (= (type $generated@@494) $generated@@64)) (= ($generated@@491 ($generated@@434 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@434 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@72 ($generated@@434 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@434 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) (= (type $generated@@498) $generated@@145)) (= ($generated@@278 ($generated@@230 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@230 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@135 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@135 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@64) (= (type $generated@@506) $generated@@64)) (= ($generated@@503 ($generated@@135 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@135 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@145) (= (type $generated@@508) $generated@@145)) (= ($generated@@143 ($generated@@230 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@230 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) (= (type $generated@@510) $generated@@145)) (= ($generated@@144 ($generated@@230 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@230 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@157 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@511 ($generated@@350 $generated@@512) $generated@@513) (forall (($generated@@514 Int) ) (!  (=> (and (<= 0 $generated@@514) (< $generated@@514 ($generated@@158 $generated@@511))) ($generated@@269 ($generated@@155 $generated@@511 $generated@@514) $generated@@512 $generated@@513))
 :pattern ( ($generated@@155 $generated@@511 $generated@@514))
))))
 :pattern ( ($generated@@74 $generated@@511 ($generated@@350 $generated@@512) $generated@@513))
)))
(assert (forall (($generated@@516 Int) ) (! (= ($generated@@515 ($generated@@75 $generated@@516)) $generated@@516)
 :pattern ( ($generated@@75 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@64)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@64) (= ($generated@@517 ($generated@@252 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@252 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@520)) $generated@@54))
 :pattern ( ($generated@@252 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@64)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@64) (= ($generated@@521 ($generated@@257 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@257 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@72 ($generated@@257 $generated@@524)) $generated@@55))
 :pattern ( ($generated@@257 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@64)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@64) (= ($generated@@525 ($generated@@150 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@150 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@528)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@64)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@64) (= ($generated@@529 ($generated@@350 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@350 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@64) (= ($generated@@72 ($generated@@350 $generated@@532)) $generated@@57))
 :pattern ( ($generated@@350 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@398 $generated@@534 ($generated@@296 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@296 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@64)) (= ($generated@@132 $generated@@535 ($generated@@426 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@535) $generated@@538))) (and ($generated@@231 ($generated@@81 ($generated@@399 $generated@@535) $generated@@538) $generated@@537) ($generated@@231 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@535) $generated@@538))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@132 $generated@@535 ($generated@@426 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@331 $generated@@145 $generated@@145)) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) $generated@@64)) (= ($generated@@132 $generated@@539 ($generated@@434 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@539) $generated@@542))) (and ($generated@@231 ($generated@@81 ($generated@@409 $generated@@539) $generated@@542) $generated@@541) ($generated@@231 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@539) $generated@@542))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@132 $generated@@539 ($generated@@434 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@145)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@230 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@230 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@145)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@230 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@230 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) $generated@@64)) ($generated@@231 $generated@@549 ($generated@@426 $generated@@550 $generated@@551))) (and (= ($generated@@296 ($generated@@398 ($generated@@313 $generated@@145 $generated@@145) $generated@@549)) $generated@@549) ($generated@@132 ($generated@@398 ($generated@@313 $generated@@145 $generated@@145) $generated@@549) ($generated@@426 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@231 $generated@@549 ($generated@@426 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@64)) ($generated@@231 $generated@@552 ($generated@@434 $generated@@553 $generated@@554))) (and (= ($generated@@296 ($generated@@398 ($generated@@331 $generated@@145 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@398 ($generated@@331 $generated@@145 $generated@@145) $generated@@552) ($generated@@434 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@231 $generated@@552 ($generated@@434 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) $generated@@145)) ($generated@@231 $generated@@557 ($generated@@135 $generated@@555 $generated@@556))) (and (= ($generated@@296 ($generated@@398 $generated@@136 $generated@@557)) $generated@@557) ($generated@@132 ($generated@@398 $generated@@136 $generated@@557) ($generated@@135 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@231 $generated@@557 ($generated@@135 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@558)))
 (not ($generated@@0 ($generated@@81 ($generated@@445 $generated@@559) $generated@@558))))
 :pattern ( (let (($generated@@559 (type $generated@@558)))
($generated@@81 ($generated@@445 $generated@@559) $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 Int) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
 (=> (= (type $generated@@560) ($generated@@157 $generated@@563)) (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@158 $generated@@560))) (= ($generated@@158 ($generated@@156 $generated@@560 $generated@@561 $generated@@562)) ($generated@@158 $generated@@560)))))
 :pattern ( ($generated@@158 ($generated@@156 $generated@@560 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@69)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@64) (= (type $generated@@567) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@566 $generated@@567)) $generated@@62) (= ($generated@@564 ($generated@@135 $generated@@566 $generated@@567)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@136) (= ($generated@@543 ($generated@@296 $generated@@568)) ($generated@@544 $generated@@568)))
 :pattern ( ($generated@@543 ($generated@@296 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@145) ($generated@@231 $generated@@569 ($generated@@75 0))) (and (= ($generated@@296 ($generated@@398 $generated@@2 $generated@@569)) $generated@@569) ($generated@@132 ($generated@@398 ($generated@@76 $generated@@145 $generated@@4) $generated@@569) ($generated@@75 0))))
 :pattern ( ($generated@@231 $generated@@569 ($generated@@75 0)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@145) (= (type $generated@@571) $generated@@64)) ($generated@@231 $generated@@570 ($generated@@252 $generated@@571))) (and (= ($generated@@296 ($generated@@398 ($generated@@76 $generated@@145 $generated@@4) $generated@@570)) $generated@@570) ($generated@@132 ($generated@@398 ($generated@@76 $generated@@145 $generated@@4) $generated@@570) ($generated@@252 $generated@@571))))
 :pattern ( ($generated@@231 $generated@@570 ($generated@@252 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@145) (= (type $generated@@573) $generated@@64)) ($generated@@231 $generated@@572 ($generated@@257 $generated@@573))) (and (= ($generated@@296 ($generated@@398 ($generated@@76 $generated@@145 $generated@@4) $generated@@572)) $generated@@572) ($generated@@132 ($generated@@398 ($generated@@76 $generated@@145 $generated@@4) $generated@@572) ($generated@@257 $generated@@573))))
 :pattern ( ($generated@@231 $generated@@572 ($generated@@257 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@145) (= (type $generated@@575) $generated@@64)) ($generated@@231 $generated@@574 ($generated@@150 $generated@@575))) (and (= ($generated@@296 ($generated@@398 ($generated@@76 $generated@@145 $generated@@2) $generated@@574)) $generated@@574) ($generated@@132 ($generated@@398 ($generated@@76 $generated@@145 $generated@@2) $generated@@574) ($generated@@150 $generated@@575))))
 :pattern ( ($generated@@231 $generated@@574 ($generated@@150 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@145) (= (type $generated@@577) $generated@@64)) ($generated@@231 $generated@@576 ($generated@@350 $generated@@577))) (and (= ($generated@@296 ($generated@@398 ($generated@@157 $generated@@145) $generated@@576)) $generated@@576) ($generated@@132 ($generated@@398 ($generated@@157 $generated@@145) $generated@@576) ($generated@@350 $generated@@577))))
 :pattern ( ($generated@@231 $generated@@576 ($generated@@350 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 Int) ($generated@@580 Int) ) (! (let (($generated@@581 ($generated@@159 (type $generated@@578))))
 (=> (= (type $generated@@578) ($generated@@157 $generated@@581)) (=> (and (and (<= 0 $generated@@579) (<= $generated@@579 $generated@@580)) (< $generated@@580 ($generated@@158 $generated@@578))) (= ($generated@@155 ($generated@@238 $generated@@578 $generated@@579) (- $generated@@580 $generated@@579)) ($generated@@155 $generated@@578 $generated@@580)))))
 :weight 25
 :pattern ( ($generated@@155 $generated@@578 $generated@@580) ($generated@@238 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@582 ($generated@@150 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@582 $generated@@585)))) ($generated@@269 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@81 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@74 $generated@@582 ($generated@@150 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 Int) ($generated@@588 Int) ) (! (let (($generated@@589 ($generated@@159 (type $generated@@586))))
 (=> (= (type $generated@@586) ($generated@@157 $generated@@589)) (=> (and (and (<= 0 $generated@@587) (<= 0 $generated@@588)) (<= (+ $generated@@587 $generated@@588) ($generated@@158 $generated@@586))) (= ($generated@@238 ($generated@@238 $generated@@586 $generated@@587) $generated@@588) ($generated@@238 $generated@@586 (+ $generated@@587 $generated@@588))))))
 :pattern ( ($generated@@238 ($generated@@238 $generated@@586 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@136) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@592) (and ($generated@@134 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@64) ($generated@@74 $generated@@590 ($generated@@135 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@74 $generated@@590 ($generated@@135 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@269 ($generated@@143 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@269 ($generated@@143 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@136) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@268 $generated@@596) (and ($generated@@134 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@64) ($generated@@74 $generated@@594 ($generated@@135 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@135 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@269 ($generated@@144 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@269 ($generated@@144 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@145) (= (type $generated@@599) $generated@@145)) (= ($generated@@230 ($generated@@264 $generated@@598) ($generated@@264 $generated@@599)) ($generated@@264 ($generated@@230 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@230 ($generated@@264 $generated@@598) ($generated@@264 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@262 $generated@@600))) ($generated@@264 ($generated@@296 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@262 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@296 ($generated@@264 $generated@@601)) ($generated@@264 ($generated@@296 $generated@@601)))
 :pattern ( ($generated@@296 ($generated@@264 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@159 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@157 $generated@@603)) (= ($generated@@158 $generated@@602) 0)) (= $generated@@602 ($generated@@289 $generated@@603))))
 :pattern ( ($generated@@158 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@76 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@305 ($generated@@82 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@305 $generated@@604) ($generated ($generated@@81 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@305 ($generated@@82 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@609) $generated@@2)) ($generated@@74 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@74 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@3)) ($generated@@74 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) $generated@@4)) ($generated@@74 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@74 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) $generated@@469)) ($generated@@74 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@74 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@145)) ($generated@@74 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@157 $generated@@145)) (= (type $generated@@619) $generated@@64)) (= ($generated@@132 $generated@@618 ($generated@@350 $generated@@619)) (forall (($generated@@620 Int) ) (!  (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@158 $generated@@618))) ($generated@@231 ($generated@@155 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@155 $generated@@618 $generated@@620))
))))
 :pattern ( ($generated@@132 $generated@@618 ($generated@@350 $generated@@619)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 Int) ) (!  (=> (= (type $generated@@621) ($generated@@157 $generated@@145)) (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@158 $generated@@621))) (< ($generated@@544 ($generated@@398 $generated@@136 ($generated@@155 $generated@@621 $generated@@622))) ($generated@@292 $generated@@621))))
 :pattern ( ($generated@@544 ($generated@@398 $generated@@136 ($generated@@155 $generated@@621 $generated@@622))))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@624) $generated@@64)) (= (type $generated@@625) $generated@@64)) ($generated@@132 $generated@@623 ($generated@@426 $generated@@624 $generated@@625))) (and (and ($generated@@132 ($generated@@311 $generated@@623) ($generated@@252 $generated@@624)) ($generated@@132 ($generated@@361 $generated@@623) ($generated@@252 $generated@@625))) ($generated@@132 ($generated@@397 $generated@@623) ($generated@@252 ($generated@@135 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@132 $generated@@623 ($generated@@426 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@331 $generated@@145 $generated@@145)) (= (type $generated@@627) $generated@@64)) (= (type $generated@@628) $generated@@64)) ($generated@@132 $generated@@626 ($generated@@434 $generated@@627 $generated@@628))) (and (and ($generated@@132 ($generated@@329 $generated@@626) ($generated@@257 $generated@@627)) ($generated@@132 ($generated@@372 $generated@@626) ($generated@@257 $generated@@628))) ($generated@@132 ($generated@@408 $generated@@626) ($generated@@257 ($generated@@135 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@132 $generated@@626 ($generated@@434 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@2) ($generated@@132 $generated@@629 $generated@@46))
 :pattern ( ($generated@@132 $generated@@629 $generated@@46))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@3) ($generated@@132 $generated@@630 $generated@@47))
 :pattern ( ($generated@@132 $generated@@630 $generated@@47))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@4) ($generated@@132 $generated@@631 $generated@@44))
 :pattern ( ($generated@@132 $generated@@631 $generated@@44))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@469) ($generated@@132 $generated@@632 $generated@@45))
 :pattern ( ($generated@@132 $generated@@632 $generated@@45))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@145) ($generated@@132 $generated@@633 $generated@@48))
 :pattern ( ($generated@@132 $generated@@633 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 (T@U) Bool)
(declare-fun $generated@@644 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@634) ($generated@@176 $generated@@77 $generated@@4)) (= (type $generated@@635) $generated@@77)) (= (type $generated@@636) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@638) ($generated@@157 $generated@@145))) (= (type $generated@@639) ($generated@@157 $generated@@145))) (= (type $generated@@642) ($generated@@157 $generated@@145))) (= (type $generated@@644) ($generated@@157 $generated@@145))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@645  (=> (= $generated@@634 ($generated@@175 $generated@@635 $generated@@636 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@158 $generated@@638)))) (=> (and (<= 0 $generated@@637) (< $generated@@637 ($generated@@158 $generated@@638))) (=> (= $generated@@639 ($generated@@156 $generated@@638 $generated@@637 ($generated@@296 ($generated@@8 $generated@@640)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 $generated@@641) (<= $generated@@641 ($generated@@158 $generated@@638)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@641) (<= $generated@@641 ($generated@@158 $generated@@639)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@281 ($generated@@238 $generated@@638 $generated@@641) ($generated@@238 $generated@@639 $generated@@641))) (=> ($generated@@281 ($generated@@238 $generated@@638 $generated@@641) ($generated@@238 $generated@@639 $generated@@641)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@641) (<= $generated@@641 ($generated@@158 $generated@@639)))) (=> (= $generated@@642 ($generated@@238 $generated@@639 $generated@@641)) (=> (and (and ($generated@@74 $generated@@642 ($generated@@350 $generated@@46) $generated@@636) ($generated@@349 $generated@@46 ($generated@@238 $generated@@639 $generated@@641))) (and ($generated@@349 $generated@@46 ($generated@@238 $generated@@639 $generated@@641)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@348 $generated@@46 ($generated@@238 $generated@@639 $generated@@641)))))))))))))))
(let (($generated@@646  (=> (and ($generated@@268 $generated@@636) ($generated@@643 $generated@@636)) (=> (and (and ($generated@@132 $generated@@638 ($generated@@350 $generated@@46)) ($generated@@74 $generated@@638 ($generated@@350 $generated@@46) $generated@@636)) (and (<= ($generated@@262 0) $generated@@637) (<= ($generated@@262 0) $generated@@641))) (=> (and (and (and (and ($generated@@132 $generated@@644 ($generated@@350 $generated@@46)) ($generated@@74 $generated@@644 ($generated@@350 $generated@@46) $generated@@636)) true) (= 1 $generated@@347)) (and (and (< $generated@@637 $generated@@641) (<= $generated@@641 ($generated@@158 $generated@@638))) (and ($generated@@348 $generated@@46 ($generated@@238 $generated@@638 $generated@@641)) (= (ControlFlow 0 8) 2)))) $generated@@645)))))
$generated@@646)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
