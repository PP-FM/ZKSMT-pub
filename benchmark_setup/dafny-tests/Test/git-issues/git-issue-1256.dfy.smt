(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 0)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 0) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 0) ($generated@@157 0))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 0 256))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@181 true))
(let (($generated@@182  (=> (and (< $generated@@173 ($generated@@157 1000)) (= (ControlFlow 0 6) 4)) $generated@@181)))
(let (($generated@@183  (=> (and (<= ($generated@@157 1000) $generated@@173) (= (ControlFlow 0 5) 4)) $generated@@181)))
(let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@157 1000) ($generated@@157 1000))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@159 ($generated@@11 (< 1000 2000))))))))
(let (($generated@@185  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (and (=> (= (ControlFlow 0 7) 2) $generated@@184) (=> (= (ControlFlow 0 7) 5) $generated@@183)) (=> (= (ControlFlow 0 7) 6) $generated@@182)))))
(let (($generated@@186  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 0 $generated@@180) (= (ControlFlow 0 8) 7))) $generated@@185)))
$generated@@186)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 () Int)
(declare-fun $generated@@239 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@240 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@241 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U Int T@U) Int)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@263 (T@U Int T@U) Bool)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U T@U) Int)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@498 (T@U Int) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert  (=> (<= 1 $generated@@238) (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Int) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@66) (= (type $generated@@243) $generated@@66)) (= (type $generated@@245) $generated@@150)) (or ($generated@@240 $generated@@242 $generated@@243 $generated@@244 $generated@@245) (and (not (= 1 $generated@@238)) (and (<= ($generated@@241 0) $generated@@244) ($generated@@229 $generated@@245 $generated@@243))))) true)
 :pattern ( ($generated@@239 $generated@@242 $generated@@243 $generated@@244 $generated@@245))
))))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@66)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@249) $generated@@66)) (= ($generated@@137 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@150) ($generated@@0 ($generated@@83 $generated@@248 $generated@@250))) ($generated@@229 $generated@@250 $generated@@249))
 :pattern ( ($generated@@83 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@137 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@254) $generated@@66)) (= ($generated@@137 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@150) ($generated@@0 ($generated@@83 $generated@@253 $generated@@255))) ($generated@@229 $generated@@255 $generated@@254))
 :pattern ( ($generated@@83 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@137 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@256 Int) ) (! (= ($generated@@241 $generated@@256) $generated@@256)
 :pattern ( ($generated@@241 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert  (=> (<= 2 $generated@@238) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 Int) ($generated@@269 T@U) ) (!  (=> (and (and (and (= (type $generated@@266) $generated@@66) (= (type $generated@@267) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@269) $generated@@150)) (or ($generated@@263 $generated@@266 ($generated@@241 $generated@@268) $generated@@269) (and (not (= 2 $generated@@238)) (and (and (and ($generated@@262 $generated@@267) (<= ($generated@@241 0) $generated@@268)) ($generated@@229 $generated@@269 $generated@@266)) ($generated@@239 $generated@@266 $generated@@266 ($generated@@241 $generated@@268) $generated@@269))))) (and ($generated@@264 $generated@@266 $generated@@269) (= ($generated@@261 $generated@@266 ($generated@@241 $generated@@268) $generated@@269) (let (($generated@@270 ($generated@@265 $generated@@266 $generated@@269)))
$generated@@270))))
 :weight 3
 :pattern ( ($generated@@261 $generated@@266 ($generated@@241 $generated@@268) $generated@@269) ($generated@@262 $generated@@267))
))))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@66) (= (type $generated@@273) $generated@@66)) (= (type $generated@@274) $generated@@150)) (= (type $generated@@275) $generated@@150)) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@262 $generated@@276)) (= ($generated@@76 ($generated@@228 $generated@@274 $generated@@275) ($generated@@140 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@274 $generated@@275) ($generated@@140 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@70)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@141) (= ($generated@@139 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@141) ($generated@@139 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@150) (= (type $generated@@282) $generated@@150)) (= $generated@@280 ($generated@@228 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@139 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@2) (= ($generated@@137 $generated@@291 $generated@@134) (<= ($generated@@241 0) ($generated $generated@@291))))
 :pattern ( ($generated@@137 $generated@@291 $generated@@134))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@150)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@66) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@271 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@76 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@271 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@78 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@81 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@78 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@83 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@78 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@83 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@81 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@78 $generated@@340 $generated@@2)) (= ($generated@@156 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@83 $generated@@339 $generated@@341))) (<= ($generated ($generated@@83 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@83 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@156 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@150) ($generated@@229 $generated@@345 $generated@@134)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@345)) $generated@@345) ($generated@@137 ($generated@@342 $generated@@2 $generated@@345) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@345 $generated@@134))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@303 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@78 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(let (($generated@@355 ($generated@@306 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@305 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@304 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@83 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@325 (type $generated@@357))))
(let (($generated@@359 ($generated@@324 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@323 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@322 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@321 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@78 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@83 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@369) $generated@@66)) (= ($generated@@137 $generated@@368 ($generated@@155 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@368 $generated@@370)))) ($generated@@229 $generated@@370 $generated@@369))
 :pattern ( ($generated@@83 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@137 $generated@@368 ($generated@@155 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@372) $generated@@66)) (= (type $generated@@373) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@371 ($generated@@246 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@150) ($generated@@0 ($generated@@83 $generated@@371 $generated@@374))) ($generated@@271 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@83 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@76 $generated@@371 ($generated@@246 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@376) $generated@@66)) (= (type $generated@@377) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@375 ($generated@@251 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@150) ($generated@@0 ($generated@@83 $generated@@375 $generated@@378))) ($generated@@271 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@83 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@76 $generated@@375 ($generated@@251 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@83 ($generated@@298 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@83 ($generated@@298 $generated@@380) $generated@@379)))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@307 (type $generated@@384))))
(let (($generated@@386 ($generated@@306 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@78 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@388) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@387) ($generated@@148 ($generated@@342 $generated@@141 $generated@@388)))) (= ($generated@@83 ($generated@@382 $generated@@387) ($generated@@148 ($generated@@342 $generated@@141 $generated@@388))) ($generated@@149 ($generated@@342 $generated@@141 $generated@@388))))))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert  (and (forall (($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@391)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@389 $generated@@391))
)) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@325 (type $generated@@392))))
(let (($generated@@394 ($generated@@324 (type $generated@@392))))
(= (type ($generated@@390 $generated@@392)) ($generated@@78 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@390 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@323 $generated@@150 $generated@@150)) (= (type $generated@@396) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@395) ($generated@@148 ($generated@@342 $generated@@141 $generated@@396)))) (= ($generated@@83 ($generated@@390 $generated@@395) ($generated@@148 ($generated@@342 $generated@@141 $generated@@396))) ($generated@@149 ($generated@@342 $generated@@141 $generated@@396))))))
 :pattern ( ($generated@@83 ($generated@@389 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(let (($generated@@400 ($generated@@306 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@305 $generated@@400 $generated@@399)) (= ($generated@@0 ($generated@@83 ($generated@@350 $generated@@397) $generated@@398)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@400) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@397) $generated@@401)) (= $generated@@398 ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@397) $generated@@401))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@397) $generated@@401))
))))))
 :pattern ( ($generated@@83 ($generated@@350 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@324 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@323 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@83 ($generated@@361 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@83 ($generated@@321 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@83 ($generated@@361 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@66)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) $generated@@66)) (= (type $generated@@413) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@410) $generated@@414))) (and ($generated@@271 ($generated@@83 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@271 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@76 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@66)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@323 $generated@@150 $generated@@150)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) $generated@@66)) (= (type $generated@@421) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@418) $generated@@422))) (and ($generated@@271 ($generated@@83 ($generated@@390 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@271 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@418) $generated@@422))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@76 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert  (=> (<= 2 $generated@@238) (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 Int) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) $generated@@66) (= (type $generated@@424) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@426) $generated@@150)) (or ($generated@@263 $generated@@423 ($generated@@241 $generated@@425) ($generated@@257 $generated@@426)) (and (not (= 2 $generated@@238)) (and (and (and ($generated@@262 $generated@@424) (<= ($generated@@241 0) $generated@@425)) ($generated@@229 $generated@@426 $generated@@423)) ($generated@@239 $generated@@423 $generated@@423 ($generated@@241 $generated@@425) ($generated@@257 $generated@@426)))))) (and ($generated@@264 $generated@@423 ($generated@@257 $generated@@426)) (= ($generated@@261 $generated@@423 ($generated@@241 $generated@@425) ($generated@@257 $generated@@426)) (let (($generated@@427 ($generated@@265 $generated@@423 ($generated@@257 $generated@@426))))
$generated@@427))))
 :weight 3
 :pattern ( ($generated@@261 $generated@@423 ($generated@@241 $generated@@425) ($generated@@257 $generated@@426)) ($generated@@262 $generated@@424))
))))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@78 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@325 (type $generated@@430))))
(let (($generated@@432 ($generated@@324 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@323 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@322 $generated@@432 $generated@@431)) (= ($generated@@321 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@321 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@361 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@361 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@325 (type $generated@@436))))
(let (($generated@@438 ($generated@@324 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@323 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@322 $generated@@438 $generated@@437)) (= ($generated@@389 $generated@@436) ($generated@@428 $generated@@150))))))
 :pattern ( ($generated@@389 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@307 (type $generated@@439))))
(let (($generated@@441 ($generated@@306 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@305 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@304 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@150) (= (type $generated@@443) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@381 $generated@@439) ($generated@@292 ($generated@@228 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@381 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@325 (type $generated@@444))))
(let (($generated@@446 ($generated@@324 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@323 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@322 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@150) (= (type $generated@@448) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@389 $generated@@444) ($generated@@292 ($generated@@228 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@389 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@150) ($generated@@229 $generated@@449 $generated@@46)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@449)) $generated@@449) ($generated@@137 ($generated@@342 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@150) ($generated@@229 $generated@@450 $generated@@47)) (and (= ($generated@@292 ($generated@@342 $generated@@3 $generated@@450)) $generated@@450) ($generated@@137 ($generated@@342 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@150) ($generated@@229 $generated@@451 $generated@@44)) (and (= ($generated@@292 ($generated@@342 $generated@@4 $generated@@451)) $generated@@451) ($generated@@137 ($generated@@342 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@150) ($generated@@229 $generated@@453 $generated@@45)) (and (= ($generated@@292 ($generated@@342 $generated@@452 $generated@@453)) $generated@@453) ($generated@@137 ($generated@@342 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@66) (= ($generated@@229 ($generated@@292 $generated@@454) $generated@@455) ($generated@@137 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@229 ($generated@@292 $generated@@454) $generated@@455))
)))
(assert  (=> (<= 2 $generated@@238) (forall (($generated@@456 T@U) ($generated@@457 Int) ($generated@@458 T@U) ) (!  (=> (and (and (= (type $generated@@456) $generated@@66) (= (type $generated@@458) $generated@@150)) (or ($generated@@263 $generated@@456 $generated@@457 $generated@@458) (and (not (= 2 $generated@@238)) (and (and (<= ($generated@@241 0) $generated@@457) ($generated@@229 $generated@@458 $generated@@456)) ($generated@@239 $generated@@456 $generated@@456 $generated@@457 $generated@@458))))) (<= ($generated@@241 0) ($generated@@261 $generated@@456 $generated@@457 $generated@@458)))
 :pattern ( ($generated@@261 $generated@@456 $generated@@457 $generated@@458))
))))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@81 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@78 $generated@@460 $generated@@2)) (<= 0 ($generated@@297 $generated@@459))))
 :pattern ( ($generated@@297 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@286 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@285 $generated@@462)) (<= 0 ($generated@@284 $generated@@461))))
 :pattern ( ($generated@@284 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@407 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@407 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@407 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@74 ($generated@@407 $generated@@471 $generated@@472)) $generated@@58))
 :pattern ( ($generated@@407 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@66)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@66) (= (type $generated@@476) $generated@@66)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@74 ($generated@@415 $generated@@481 $generated@@482)) $generated@@59))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) (= ($generated@@277 ($generated@@228 $generated@@483 $generated@@484)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@66) (= (type $generated@@488) $generated@@66)) (= ($generated@@485 ($generated@@140 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@140 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@66) (= (type $generated@@492) $generated@@66)) (= ($generated@@489 ($generated@@140 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@140 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@150) (= (type $generated@@494) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@228 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@150) (= (type $generated@@496) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@228 $generated@@495 $generated@@496))
)))
(assert  (and (forall (($generated@@499 T@U) ) (! (= (type ($generated@@497 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@499))
)) (forall (($generated@@500 T@U) ($generated@@501 Int) ) (! (let (($generated@@502 ($generated@@286 (type $generated@@500))))
(= (type ($generated@@498 $generated@@500 $generated@@501)) $generated@@502))
 :pattern ( ($generated@@498 $generated@@500 $generated@@501))
))))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@285 $generated@@150)) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@503 ($generated@@497 $generated@@504) $generated@@505) (forall (($generated@@506 Int) ) (!  (=> (and (<= 0 $generated@@506) (< $generated@@506 ($generated@@284 $generated@@503))) ($generated@@271 ($generated@@498 $generated@@503 $generated@@506) $generated@@504 $generated@@505))
 :pattern ( ($generated@@498 $generated@@503 $generated@@506))
))))
 :pattern ( ($generated@@76 $generated@@503 ($generated@@497 $generated@@504) $generated@@505))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@507 ($generated@@77 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@77 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@246 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@246 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@246 $generated@@512)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@251 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@251 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@251 $generated@@516)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@66) (= ($generated@@517 ($generated@@155 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@155 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@520)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@66) (= ($generated@@521 ($generated@@497 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@497 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@66) (= ($generated@@74 ($generated@@497 $generated@@524)) $generated@@57))
 :pattern ( ($generated@@497 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
(= ($generated@@342 $generated@@526 ($generated@@292 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@292 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@528) $generated@@66)) (= (type $generated@@529) $generated@@66)) (= ($generated@@137 $generated@@527 ($generated@@407 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@527) $generated@@530))) (and ($generated@@229 ($generated@@83 ($generated@@382 $generated@@527) $generated@@530) $generated@@529) ($generated@@229 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@527) $generated@@530))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@137 $generated@@527 ($generated@@407 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@531) ($generated@@323 $generated@@150 $generated@@150)) (= (type $generated@@532) $generated@@66)) (= (type $generated@@533) $generated@@66)) (= ($generated@@137 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)) (forall (($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@321 $generated@@531) $generated@@534))) (and ($generated@@229 ($generated@@83 ($generated@@390 $generated@@531) $generated@@534) $generated@@533) ($generated@@229 $generated@@534 $generated@@532)))
 :pattern ( ($generated@@83 ($generated@@390 $generated@@531) $generated@@534))
 :pattern ( ($generated@@83 ($generated@@321 $generated@@531) $generated@@534))
))))
 :pattern ( ($generated@@137 $generated@@531 ($generated@@415 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@150)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@228 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@228 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@150) (= (type $generated@@540) $generated@@150)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@228 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@228 $generated@@539 $generated@@540))
)))
(assert  (=> (<= 2 $generated@@238) (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 Int) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@544) $generated@@150)) (or ($generated@@263 $generated@@541 $generated@@543 $generated@@544) (and (not (= 2 $generated@@238)) (and (and (and ($generated@@262 $generated@@542) (<= ($generated@@241 0) $generated@@543)) ($generated@@229 $generated@@544 $generated@@541)) ($generated@@239 $generated@@541 $generated@@541 $generated@@543 $generated@@544))))) (and ($generated@@264 $generated@@541 $generated@@544) (= ($generated@@261 $generated@@541 $generated@@543 $generated@@544) (let (($generated@@545 ($generated@@265 $generated@@541 $generated@@544)))
$generated@@545))))
 :pattern ( ($generated@@261 $generated@@541 $generated@@543 $generated@@544) ($generated@@262 $generated@@542))
))))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) $generated@@66)) ($generated@@229 $generated@@546 ($generated@@407 $generated@@547 $generated@@548))) (and (= ($generated@@292 ($generated@@342 ($generated@@305 $generated@@150 $generated@@150) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@342 ($generated@@305 $generated@@150 $generated@@150) $generated@@546) ($generated@@407 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@407 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@150) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) $generated@@66)) ($generated@@229 $generated@@549 ($generated@@415 $generated@@550 $generated@@551))) (and (= ($generated@@292 ($generated@@342 ($generated@@323 $generated@@150 $generated@@150) $generated@@549)) $generated@@549) ($generated@@137 ($generated@@342 ($generated@@323 $generated@@150 $generated@@150) $generated@@549) ($generated@@415 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@415 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@66) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) $generated@@150)) ($generated@@229 $generated@@554 ($generated@@140 $generated@@552 $generated@@553))) (and (= ($generated@@292 ($generated@@342 $generated@@141 $generated@@554)) $generated@@554) ($generated@@137 ($generated@@342 $generated@@141 $generated@@554) ($generated@@140 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@140 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@83 ($generated@@428 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@83 ($generated@@428 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@71)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@66) (= (type $generated@@560) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@559 $generated@@560)) $generated@@63) (= ($generated@@557 ($generated@@140 $generated@@559 $generated@@560)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@141) (= ($generated@@535 ($generated@@292 $generated@@561)) ($generated@@536 $generated@@561)))
 :pattern ( ($generated@@535 ($generated@@292 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@150) ($generated@@229 $generated@@562 ($generated@@77 0))) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@562)) $generated@@562) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@150 $generated@@4) $generated@@562) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@562 ($generated@@77 0)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@150) (= (type $generated@@564) $generated@@66)) ($generated@@229 $generated@@563 ($generated@@246 $generated@@564))) (and (= ($generated@@292 ($generated@@342 ($generated@@78 $generated@@150 $generated@@4) $generated@@563)) $generated@@563) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@150 $generated@@4) $generated@@563) ($generated@@246 $generated@@564))))
 :pattern ( ($generated@@229 $generated@@563 ($generated@@246 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (= (type $generated@@565) $generated@@150) (= (type $generated@@566) $generated@@66)) ($generated@@229 $generated@@565 ($generated@@251 $generated@@566))) (and (= ($generated@@292 ($generated@@342 ($generated@@78 $generated@@150 $generated@@4) $generated@@565)) $generated@@565) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@150 $generated@@4) $generated@@565) ($generated@@251 $generated@@566))))
 :pattern ( ($generated@@229 $generated@@565 ($generated@@251 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@150) (= (type $generated@@568) $generated@@66)) ($generated@@229 $generated@@567 ($generated@@155 $generated@@568))) (and (= ($generated@@292 ($generated@@342 ($generated@@78 $generated@@150 $generated@@2) $generated@@567)) $generated@@567) ($generated@@137 ($generated@@342 ($generated@@78 $generated@@150 $generated@@2) $generated@@567) ($generated@@155 $generated@@568))))
 :pattern ( ($generated@@229 $generated@@567 ($generated@@155 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@150) (= (type $generated@@570) $generated@@66)) ($generated@@229 $generated@@569 ($generated@@497 $generated@@570))) (and (= ($generated@@292 ($generated@@342 ($generated@@285 $generated@@150) $generated@@569)) $generated@@569) ($generated@@137 ($generated@@342 ($generated@@285 $generated@@150) $generated@@569) ($generated@@497 $generated@@570))))
 :pattern ( ($generated@@229 $generated@@569 ($generated@@497 $generated@@570)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@557 $generated@@134) $generated@@64))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@572) $generated@@66)) (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@571 ($generated@@155 $generated@@572) $generated@@573) (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@571 $generated@@574)))) ($generated@@271 $generated@@574 $generated@@572 $generated@@573))
 :pattern ( ($generated@@83 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@76 $generated@@571 ($generated@@155 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@66) (= (type $generated@@576) $generated@@150)) ($generated@@264 $generated@@575 $generated@@576)) (and (<= ($generated@@241 0) ($generated@@265 $generated@@575 $generated@@576)) (and (<= ($generated@@241 0) ($generated@@265 $generated@@575 $generated@@576)) ($generated@@239 $generated@@575 $generated@@575 ($generated@@265 $generated@@575 $generated@@576) $generated@@576))))
 :pattern ( ($generated@@265 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@141) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@579) (and ($generated@@139 $generated@@577) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@66) ($generated@@76 $generated@@577 ($generated@@140 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@76 $generated@@577 ($generated@@140 $generated@@578 $generated@@580) $generated@@579))
))))) ($generated@@271 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@271 ($generated@@148 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@141) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@262 $generated@@583) (and ($generated@@139 $generated@@581) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@66) ($generated@@76 $generated@@581 ($generated@@140 $generated@@584 $generated@@582) $generated@@583))
 :pattern ( ($generated@@76 $generated@@581 ($generated@@140 $generated@@584 $generated@@582) $generated@@583))
))))) ($generated@@271 ($generated@@149 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@271 ($generated@@149 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@150) (= (type $generated@@586) $generated@@150)) (= ($generated@@228 ($generated@@257 $generated@@585) ($generated@@257 $generated@@586)) ($generated@@257 ($generated@@228 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@228 ($generated@@257 $generated@@585) ($generated@@257 $generated@@586)))
)))
(assert (forall (($generated@@587 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@241 $generated@@587))) ($generated@@257 ($generated@@292 ($generated@@8 $generated@@587))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@241 $generated@@587))))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@292 ($generated@@257 $generated@@588)) ($generated@@257 ($generated@@292 $generated@@588)))
 :pattern ( ($generated@@292 ($generated@@257 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@286 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@285 $generated@@590)) (= ($generated@@284 $generated@@589) 0)) (= $generated@@589 ($generated@@283 $generated@@590))))
 :pattern ( ($generated@@284 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@78 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@297 ($generated@@84 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@297 $generated@@591) ($generated ($generated@@83 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@297 ($generated@@84 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@596) $generated@@2)) ($generated@@76 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@76 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@598) $generated@@3)) ($generated@@76 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@76 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@600) $generated@@4)) ($generated@@76 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@76 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@602) $generated@@452)) ($generated@@76 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@76 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@604) $generated@@150)) ($generated@@76 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@76 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@285 $generated@@150)) (= (type $generated@@606) $generated@@66)) (= ($generated@@137 $generated@@605 ($generated@@497 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@284 $generated@@605))) ($generated@@229 ($generated@@498 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@498 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@137 $generated@@605 ($generated@@497 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@285 $generated@@150)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@284 $generated@@609))) (< ($generated@@536 ($generated@@342 $generated@@141 ($generated@@498 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@536 ($generated@@342 $generated@@141 ($generated@@498 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) $generated@@66)) ($generated@@137 $generated@@611 ($generated@@407 $generated@@612 $generated@@613))) (and (and ($generated@@137 ($generated@@303 $generated@@611) ($generated@@246 $generated@@612)) ($generated@@137 ($generated@@350 $generated@@611) ($generated@@246 $generated@@613))) ($generated@@137 ($generated@@381 $generated@@611) ($generated@@246 ($generated@@140 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@137 $generated@@611 ($generated@@407 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@323 $generated@@150 $generated@@150)) (= (type $generated@@615) $generated@@66)) (= (type $generated@@616) $generated@@66)) ($generated@@137 $generated@@614 ($generated@@415 $generated@@615 $generated@@616))) (and (and ($generated@@137 ($generated@@321 $generated@@614) ($generated@@251 $generated@@615)) ($generated@@137 ($generated@@361 $generated@@614) ($generated@@251 $generated@@616))) ($generated@@137 ($generated@@389 $generated@@614) ($generated@@251 ($generated@@140 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@137 $generated@@614 ($generated@@415 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@137 $generated@@617 $generated@@46))
 :pattern ( ($generated@@137 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@137 $generated@@618 $generated@@47))
 :pattern ( ($generated@@137 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@137 $generated@@619 $generated@@44))
 :pattern ( ($generated@@137 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@452) ($generated@@137 $generated@@620 $generated@@45))
 :pattern ( ($generated@@137 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@150) ($generated@@137 $generated@@621 $generated@@48))
 :pattern ( ($generated@@137 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () T@U)
(declare-fun $generated@@627 () T@U)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@622) $generated@@66) (= (type $generated@@623) $generated@@150)) (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@626) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@627) $generated@@79)) (= (type $generated@@628) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@631  (=> (= (ControlFlow 0 3) (- 0 2)) (or (and ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134) (and (<= ($generated@@241 0) ($generated@@241 0)) ($generated@@239 $generated@@622 $generated@@622 ($generated@@241 0) $generated@@623))) (or (and ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134) (and (<= ($generated@@241 0) ($generated@@241 0)) ($generated@@239 $generated@@622 $generated@@622 ($generated@@241 0) $generated@@623))) (or (and ($generated@@137 ($generated@@8 ($generated@@241 0)) $generated@@134) (and (<= ($generated@@241 0) ($generated@@241 0)) ($generated@@239 $generated@@622 $generated@@622 ($generated@@241 0) $generated@@623))) (exists (($generated@@632 Int) )  (and (<= ($generated@@241 0) $generated@@632) (and (<= ($generated@@241 0) $generated@@632) ($generated@@239 $generated@@622 $generated@@622 $generated@@632 $generated@@623))))))))))
(let (($generated@@633  (=> (and (< $generated@@624 ($generated@@241 0)) (= (ControlFlow 0 6) 3)) $generated@@631)))
(let (($generated@@634  (=> (<= ($generated@@241 0) $generated@@624) (=> (and (and ($generated@@76 ($generated@@8 $generated@@624) $generated@@134 $generated@@625) ($generated@@271 $generated@@623 $generated@@622 $generated@@625)) (and ($generated@@240 $generated@@622 $generated@@622 $generated@@624 $generated@@623) (= (ControlFlow 0 5) 3))) $generated@@631))))
(let (($generated@@635  (=> (<= ($generated@@241 0) $generated@@624) (and (=> (= (ControlFlow 0 7) 5) $generated@@634) (=> (= (ControlFlow 0 7) 6) $generated@@633)))))
(let (($generated@@636  (=> (and (< $generated@@624 ($generated@@241 0)) (= (ControlFlow 0 4) 3)) $generated@@631)))
(let (($generated@@637  (=> (= $generated@@626 ($generated@@216 $generated@@627 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@635) (=> (= (ControlFlow 0 8) 4) $generated@@636)))))
(let (($generated@@638 true))
(let (($generated@@639  (=> (= $generated@@628 ($generated@@161 $generated@@627 $generated@@625 $generated@@60 false)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@629) $generated@@134 $generated@@625) ($generated@@271 $generated@@623 $generated@@622 $generated@@625)) (and ($generated@@240 $generated@@622 $generated@@622 $generated@@629 $generated@@623) ($generated@@239 $generated@@622 $generated@@622 $generated@@629 $generated@@623))) (and (=> (= (ControlFlow 0 9) 1) $generated@@638) (=> (= (ControlFlow 0 9) 8) $generated@@637))))))
(let (($generated@@640  (=> (and ($generated@@262 $generated@@625) ($generated@@630 $generated@@625)) (=> (and (and (<= ($generated@@241 0) $generated@@629) ($generated@@229 $generated@@623 $generated@@622)) (and (= 2 $generated@@238) (= (ControlFlow 0 10) 9))) $generated@@639))))
$generated@@640))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 (T@U T@U Int T@U) Int)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@232 (Int) Int)
(declare-fun $generated@@233 (T@T T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@237 (T@U T@U T@U T@U) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@259 (T@U T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@261 (T@T T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@264 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@315 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@350 (T@U T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@383 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@384 (T@U T@U T@U) Bool)
(declare-fun $generated@@385 () T@U)
(declare-fun $generated@@401 (T@U T@U) Bool)
(declare-fun $generated@@402 (T@T) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@427 (T@T) T@U)
(declare-fun $generated@@428 (T@U) Int)
(declare-fun $generated@@429 (T@T) T@T)
(declare-fun $generated@@430 (T@T) T@T)
(declare-fun $generated@@439 (T@U T@U T@U) T@U)
(declare-fun $generated@@440 (T@T T@T T@T T@T) T@T)
(declare-fun $generated@@441 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@442 (T@T) T@T)
(declare-fun $generated@@443 (T@T) T@T)
(declare-fun $generated@@444 (T@T) T@T)
(declare-fun $generated@@445 (T@T) T@T)
(declare-fun $generated@@446 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@T) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@538 (T@T T@T) T@U)
(declare-fun $generated@@539 (T@T T@T) T@T)
(declare-fun $generated@@540 (T@T) T@T)
(declare-fun $generated@@541 (T@T) T@T)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@556 (T@T T@T) T@U)
(declare-fun $generated@@557 (T@T T@T) T@T)
(declare-fun $generated@@558 (T@T) T@T)
(declare-fun $generated@@559 (T@T) T@T)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@596 (T@U) T@U)
(declare-fun $generated@@623 (T@U) T@U)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@631 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@649 (T@U T@U) T@U)
(declare-fun $generated@@657 (T@U T@U) T@U)
(declare-fun $generated@@681 (T@T) T@U)
(declare-fun $generated@@712 () T@T)
(declare-fun $generated@@720 (T@U) T@U)
(declare-fun $generated@@724 (T@U) T@U)
(declare-fun $generated@@730 (T@U) T@U)
(declare-fun $generated@@734 (T@U) T@U)
(declare-fun $generated@@742 (T@U) T@U)
(declare-fun $generated@@746 (T@U) T@U)
(declare-fun $generated@@754 (T@U) T@U)
(declare-fun $generated@@755 (T@U Int) T@U)
(declare-fun $generated@@764 (T@U) Int)
(declare-fun $generated@@766 (T@U) T@U)
(declare-fun $generated@@770 (T@U) T@U)
(declare-fun $generated@@774 (T@U) T@U)
(declare-fun $generated@@778 (T@U) T@U)
(declare-fun $generated@@799 (T@U) Int)
(declare-fun $generated@@800 (T@U) Int)
(declare-fun $generated@@904 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@141 $generated@@148 $generated@@149 $generated@@150)) $generated@@72)
 :pattern ( ($generated@@141 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@143 $generated@@151 $generated@@152 $generated@@153)) $generated@@72)
 :pattern ( ($generated@@143 $generated@@151 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@144) 15)) (= (type $generated@@147) ($generated@@84 $generated@@85 $generated@@86))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@72) (= (type $generated@@155) $generated@@72)) (= (type $generated@@156) $generated@@72)) (= (type $generated@@157) $generated@@142)) (= ($generated@@140 $generated@@157 ($generated@@141 $generated@@154 $generated@@155 $generated@@156))  (and ($generated@@140 $generated@@157 ($generated@@143 $generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@144) (= (type $generated@@159) $generated@@144)) (and ($generated@@145 $generated@@158 $generated@@154) ($generated@@145 $generated@@159 $generated@@155))) ($generated@@146 $generated@@154 $generated@@155 $generated@@156 $generated@@147 $generated@@157 $generated@@158 $generated@@159))
 :no-pattern (type $generated@@158)
 :no-pattern (type $generated@@159)
 :no-pattern ($generated $generated@@158)
 :no-pattern ($generated@@0 $generated@@158)
 :no-pattern ($generated $generated@@159)
 :no-pattern ($generated@@0 $generated@@159)
)))))
 :pattern ( ($generated@@140 $generated@@157 ($generated@@141 $generated@@154 $generated@@155 $generated@@156)))
)))
(assert (= (type $generated@@160) $generated@@72))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@2) (= (type $generated@@162) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@161 $generated@@160 $generated@@162))
 :pattern ( ($generated@@82 $generated@@161 $generated@@160 $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166 $generated@@167)) $generated@@72)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@168)) $generated@@72)
 :pattern ( ($generated@@164 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@72) (= (type $generated@@170) $generated@@72)) (= (type $generated@@171) $generated@@72)) (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170 $generated@@171)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@72) (= (type $generated@@175) $generated@@72)) (= (type $generated@@176) $generated@@72)) (= ($generated@@172 ($generated@@163 $generated@@174 $generated@@175 $generated@@176)) $generated@@175))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@72)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@72) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) $generated@@72)) (= ($generated@@177 ($generated@@163 $generated@@179 $generated@@180 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@163 $generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@72)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@72) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) $generated@@72)) (= ($generated@@182 ($generated@@143 $generated@@184 $generated@@185 $generated@@186)) $generated@@184))
 :pattern ( ($generated@@143 $generated@@184 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@187 $generated@@188)) $generated@@72)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@72) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) $generated@@72)) (= ($generated@@187 ($generated@@143 $generated@@189 $generated@@190 $generated@@191)) $generated@@190))
 :pattern ( ($generated@@143 $generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@72) (= (type $generated@@195) $generated@@72)) (= (type $generated@@196) $generated@@72)) (= ($generated@@192 ($generated@@143 $generated@@194 $generated@@195 $generated@@196)) $generated@@196))
 :pattern ( ($generated@@143 $generated@@194 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@72)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@199) $generated@@72) (= (type $generated@@200) $generated@@72)) (= (type $generated@@201) $generated@@72)) (= ($generated@@197 ($generated@@141 $generated@@199 $generated@@200 $generated@@201)) $generated@@199))
 :pattern ( ($generated@@141 $generated@@199 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (= (type $generated@@204) $generated@@72) (= (type $generated@@205) $generated@@72)) (= (type $generated@@206) $generated@@72)) (= ($generated@@202 ($generated@@141 $generated@@204 $generated@@205 $generated@@206)) $generated@@205))
 :pattern ( ($generated@@141 $generated@@204 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= (type ($generated@@207 $generated@@208)) $generated@@72)
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (= (type $generated@@209) $generated@@72) (= (type $generated@@210) $generated@@72)) (= (type $generated@@211) $generated@@72)) (= ($generated@@207 ($generated@@141 $generated@@209 $generated@@210 $generated@@211)) $generated@@211))
 :pattern ( ($generated@@141 $generated@@209 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@2) ($generated@@140 $generated@@212 ($generated@@83 0)))
 :pattern ( ($generated@@140 $generated@@212 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@215) 16) (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@216 $generated@@217)) $generated@@72)
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@218) $generated@@72) (= (type $generated@@219) $generated@@72)) (= (type $generated@@220) $generated@@215)) ($generated@@140 $generated@@220 ($generated@@214 $generated@@218 $generated@@219))) ($generated@@213 $generated@@220))
 :pattern ( ($generated@@213 $generated@@220) ($generated@@140 $generated@@220 ($generated@@214 $generated@@218 $generated@@219)))
)))
(assert  (and (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@144)
 :pattern ( ($generated@@222 $generated@@224))
)) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@144)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@215) (= (type $generated@@227) $generated@@215)) true) (= ($generated@@221 $generated@@226 $generated@@227)  (and (= ($generated@@222 $generated@@226) ($generated@@222 $generated@@227)) (= ($generated@@223 $generated@@226) ($generated@@223 $generated@@227)))))
 :pattern ( ($generated@@221 $generated@@226 $generated@@227))
)))
(assert  (and (and (forall (($generated@@238 T@T) ($generated@@239 T@U) ) (! (= (type ($generated@@233 $generated@@238 $generated@@239)) $generated@@238)
 :pattern ( ($generated@@233 $generated@@238 $generated@@239))
)) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@234 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) $generated@@144)
 :pattern ( ($generated@@234 $generated@@240 $generated@@241 $generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
))) (forall (($generated@@247 T@U) ) (! (= (type ($generated@@235 $generated@@247)) $generated@@144)
 :pattern ( ($generated@@235 $generated@@247))
))))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Int) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@248) $generated@@72) (= (type $generated@@249) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@250) $generated@@142)) (= (type $generated@@252) $generated@@144)) (or ($generated@@231 $generated@@248 $generated@@250 $generated@@251 $generated@@252) (and (not (= 1 $generated@@228)) (and (and (and (and ($generated@@230 $generated@@249) ($generated@@140 $generated@@250 ($generated@@141 $generated@@160 $generated@@248 $generated@@44))) (<= ($generated@@232 0) $generated@@251)) ($generated@@145 $generated@@252 $generated@@248)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@248 $generated@@44 $generated@@249 $generated@@250 ($generated@@235 ($generated@@8 $generated@@251)) $generated@@252))))))) (and ($generated@@236 $generated@@248 $generated@@249 $generated@@250 $generated@@252) (= ($generated@@229 $generated@@248 $generated@@250 $generated@@251 $generated@@252) (let (($generated@@253 ($generated@@237 $generated@@248 $generated@@249 $generated@@250 $generated@@252)))
$generated@@253))))
 :pattern ( ($generated@@229 $generated@@248 $generated@@250 $generated@@251 $generated@@252) ($generated@@230 $generated@@249))
))))
(assert (forall (($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@256)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (= (type $generated@@257) ($generated@@84 $generated@@144 $generated@@2)) (= (type $generated@@258) $generated@@72)) ($generated@@140 $generated@@257 ($generated@@254 $generated@@258))) ($generated@@255 $generated@@257))
 :pattern ( ($generated@@140 $generated@@257 ($generated@@254 $generated@@258)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@265 T@T) ($generated@@266 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@265 $generated@@266)) 17)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@267 $generated@@268)) $generated@@267)
 :pattern ( ($generated@@261 $generated@@267 $generated@@268))
))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@263 ($generated@@261 $generated@@269 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@261 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (! (let (($generated@@274 ($generated@@263 (type $generated@@271))))
(= (type ($generated@@259 $generated@@271 $generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@259 $generated@@271 $generated@@272 $generated@@273))
))) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(let (($generated@@280 (type $generated@@276)))
(= (type ($generated@@264 $generated@@275 $generated@@276 $generated@@277 $generated@@278)) ($generated@@261 $generated@@280 $generated@@279))))
 :pattern ( ($generated@@264 $generated@@275 $generated@@276 $generated@@277 $generated@@278))
))) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@263 (type $generated@@281))))
 (=> (= (type $generated@@284) $generated@@285) (= ($generated@@259 ($generated@@264 $generated@@281 $generated@@282 $generated@@283 $generated@@284) $generated@@282 $generated@@283) $generated@@284)))
 :weight 0
))) (and (and (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (or (= $generated@@288 $generated@@290) (= ($generated@@259 ($generated@@264 $generated@@287 $generated@@288 $generated@@289 $generated@@286) $generated@@290 $generated@@291) ($generated@@259 $generated@@287 $generated@@290 $generated@@291)))
 :weight 0
)) (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (or (= $generated@@295 $generated@@297) (= ($generated@@259 ($generated@@264 $generated@@293 $generated@@294 $generated@@295 $generated@@292) $generated@@296 $generated@@297) ($generated@@259 $generated@@293 $generated@@296 $generated@@297)))
 :weight 0
))) (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (or true (= ($generated@@259 ($generated@@264 $generated@@299 $generated@@300 $generated@@301 $generated@@298) $generated@@302 $generated@@303) ($generated@@259 $generated@@299 $generated@@302 $generated@@303)))
 :weight 0
)))) (forall (($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 Bool) ) (! (= (type ($generated@@260 $generated@@304 $generated@@305 $generated@@306 $generated@@307)) ($generated@@261 $generated@@85 $generated@@4))
 :pattern ( ($generated@@260 $generated@@304 $generated@@305 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 Bool) ($generated@@312 T@U) ($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@75 (type $generated@@313))))
 (=> (and (and (and (and (= (type $generated@@308) $generated@@85) (= (type $generated@@309) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@310) ($generated@@74 $generated@@4))) (= (type $generated@@312) $generated@@85)) (= (type $generated@@313) ($generated@@74 $generated@@314))) (= ($generated@@0 ($generated@@259 ($generated@@260 $generated@@308 $generated@@309 $generated@@310 $generated@@311) $generated@@312 $generated@@313))  (=> (and (not (= $generated@@312 $generated@@308)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@309 $generated@@312) $generated@@310))) $generated@@311))))
 :pattern ( ($generated@@259 ($generated@@260 $generated@@308 $generated@@309 $generated@@310 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 Bool) ) (! (= (type ($generated@@315 $generated@@316 $generated@@317 $generated@@318 $generated@@319)) ($generated@@261 $generated@@85 $generated@@4))
 :pattern ( ($generated@@315 $generated@@316 $generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 Bool) ($generated@@324 T@U) ($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@75 (type $generated@@325))))
 (=> (and (and (and (and (= (type $generated@@320) $generated@@85) (= (type $generated@@321) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@322) ($generated@@74 $generated@@4))) (= (type $generated@@324) $generated@@85)) (= (type $generated@@325) ($generated@@74 $generated@@326))) (= ($generated@@0 ($generated@@259 ($generated@@315 $generated@@320 $generated@@321 $generated@@322 $generated@@323) $generated@@324 $generated@@325))  (=> (and (not (= $generated@@324 $generated@@320)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@321 $generated@@324) $generated@@322))) $generated@@323))))
 :pattern ( ($generated@@259 ($generated@@315 $generated@@320 $generated@@321 $generated@@322 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (= (type ($generated@@327 $generated@@328)) $generated@@77)
 :pattern ( ($generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (and (= (type $generated@@329) $generated@@72) (= (type $generated@@330) $generated@@72)) (= (type $generated@@331) $generated@@72)) (and (= ($generated@@80 ($generated@@163 $generated@@329 $generated@@330 $generated@@331)) $generated@@62) (= ($generated@@327 ($generated@@163 $generated@@329 $generated@@330 $generated@@331)) $generated@@68)))
 :pattern ( ($generated@@163 $generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (and (= (type $generated@@332) $generated@@72) (= (type $generated@@333) $generated@@72)) (= (type $generated@@334) $generated@@72)) (and (= ($generated@@80 ($generated@@143 $generated@@332 $generated@@333 $generated@@334)) $generated@@63) (= ($generated@@327 ($generated@@143 $generated@@332 $generated@@333 $generated@@334)) $generated@@69)))
 :pattern ( ($generated@@143 $generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) $generated@@72) (= (type $generated@@336) $generated@@72)) (= (type $generated@@337) $generated@@72)) (and (= ($generated@@80 ($generated@@141 $generated@@335 $generated@@336 $generated@@337)) $generated@@64) (= ($generated@@327 ($generated@@141 $generated@@335 $generated@@336 $generated@@337)) $generated@@70)))
 :pattern ( ($generated@@141 $generated@@335 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@338) $generated@@72) (= (type $generated@@339) $generated@@72)) (= (type $generated@@340) $generated@@72)) (= (type $generated@@341) $generated@@144)) ($generated@@145 $generated@@341 ($generated@@163 $generated@@338 $generated@@339 $generated@@340))) (and (= ($generated@@235 ($generated@@233 $generated@@142 $generated@@341)) $generated@@341) ($generated@@140 ($generated@@233 $generated@@142 $generated@@341) ($generated@@163 $generated@@338 $generated@@339 $generated@@340))))
 :pattern ( ($generated@@145 $generated@@341 ($generated@@163 $generated@@338 $generated@@339 $generated@@340)))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@342) $generated@@72) (= (type $generated@@343) $generated@@72)) (= (type $generated@@344) $generated@@72)) (= (type $generated@@345) $generated@@144)) ($generated@@145 $generated@@345 ($generated@@143 $generated@@342 $generated@@343 $generated@@344))) (and (= ($generated@@235 ($generated@@233 $generated@@142 $generated@@345)) $generated@@345) ($generated@@140 ($generated@@233 $generated@@142 $generated@@345) ($generated@@143 $generated@@342 $generated@@343 $generated@@344))))
 :pattern ( ($generated@@145 $generated@@345 ($generated@@143 $generated@@342 $generated@@343 $generated@@344)))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@346) $generated@@72) (= (type $generated@@347) $generated@@72)) (= (type $generated@@348) $generated@@72)) (= (type $generated@@349) $generated@@144)) ($generated@@145 $generated@@349 ($generated@@141 $generated@@346 $generated@@347 $generated@@348))) (and (= ($generated@@235 ($generated@@233 $generated@@142 $generated@@349)) $generated@@349) ($generated@@140 ($generated@@233 $generated@@142 $generated@@349) ($generated@@141 $generated@@346 $generated@@347 $generated@@348))))
 :pattern ( ($generated@@145 $generated@@349 ($generated@@141 $generated@@346 $generated@@347 $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@215)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (and (= (type $generated@@353) $generated@@72) (= (type $generated@@354) $generated@@72)) (= (type $generated@@355) $generated@@144)) (= (type $generated@@356) $generated@@144)) (= ($generated@@140 ($generated@@350 $generated@@355 $generated@@356) ($generated@@214 $generated@@353 $generated@@354))  (and ($generated@@145 $generated@@355 $generated@@353) ($generated@@145 $generated@@356 $generated@@354))))
 :pattern ( ($generated@@140 ($generated@@350 $generated@@355 $generated@@356) ($generated@@214 $generated@@353 $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@357) $generated@@72) (= (type $generated@@358) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@359) $generated@@142)) (= (type $generated@@360) $generated@@144)) ($generated@@236 $generated@@357 $generated@@358 $generated@@359 $generated@@360)) (and (<= ($generated@@232 0) ($generated@@237 $generated@@357 $generated@@358 $generated@@359 $generated@@360)) (and (<= ($generated@@232 0) ($generated@@237 $generated@@357 $generated@@358 $generated@@359 $generated@@360)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@357 $generated@@44 $generated@@358 $generated@@359 ($generated@@235 ($generated@@8 ($generated@@237 $generated@@357 $generated@@358 $generated@@359 $generated@@360))) $generated@@360))))))
 :pattern ( ($generated@@237 $generated@@357 $generated@@358 $generated@@359 $generated@@360))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 Int) ($generated@@365 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@361) $generated@@72) (= (type $generated@@362) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@363) $generated@@142)) (= (type $generated@@365) $generated@@144)) (or ($generated@@231 $generated@@361 $generated@@363 $generated@@364 $generated@@365) (and (not (= 1 $generated@@228)) (and (and (and (and ($generated@@230 $generated@@362) ($generated@@140 $generated@@363 ($generated@@141 $generated@@160 $generated@@361 $generated@@44))) (<= ($generated@@232 0) $generated@@364)) ($generated@@145 $generated@@365 $generated@@361)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@361 $generated@@44 $generated@@362 $generated@@363 ($generated@@235 ($generated@@8 $generated@@364)) $generated@@365))))))) (<= ($generated@@232 0) ($generated@@229 $generated@@361 $generated@@363 $generated@@364 $generated@@365)))
 :pattern ( ($generated@@229 $generated@@361 $generated@@363 $generated@@364 $generated@@365) ($generated@@230 $generated@@362))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@215) (= (type $generated@@367) $generated@@215)) (= ($generated@@221 $generated@@366 $generated@@367) (= $generated@@366 $generated@@367)))
 :pattern ( ($generated@@221 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (= (type ($generated@@368 $generated@@369)) $generated@@72)
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@371) $generated@@72)) (= ($generated@@140 $generated@@370 ($generated@@368 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@144) ($generated@@0 ($generated@@89 $generated@@370 $generated@@372))) ($generated@@145 $generated@@372 $generated@@371))
 :pattern ( ($generated@@89 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@140 $generated@@370 ($generated@@368 $generated@@371)))
)))
(assert (forall (($generated@@374 T@U) ) (! (= (type ($generated@@373 $generated@@374)) $generated@@72)
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@376) $generated@@72)) (= ($generated@@140 $generated@@375 ($generated@@373 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@144) ($generated@@0 ($generated@@89 $generated@@375 $generated@@377))) ($generated@@145 $generated@@377 $generated@@376))
 :pattern ( ($generated@@89 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@373 $generated@@376)))
)))
(assert (forall (($generated@@378 Int) ) (! (= ($generated@@232 $generated@@378) $generated@@378)
 :pattern ( ($generated@@232 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(= (type ($generated@@379 $generated@@380)) $generated@@381))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (= ($generated@@379 $generated@@382) $generated@@382)
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (and (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@383 $generated@@386 $generated@@387 $generated@@388 $generated@@389 $generated@@390 $generated@@391 $generated@@392)) ($generated@@84 $generated@@144 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386 $generated@@387 $generated@@388 $generated@@389 $generated@@390 $generated@@391 $generated@@392))
)) (= (type $generated@@385) $generated@@85)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@393) $generated@@142) (= (type $generated@@394) $generated@@72)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@396) $generated@@72)) (= (type $generated@@397) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@230 $generated@@397)) (= ($generated@@82 $generated@@393 ($generated@@163 $generated@@394 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@144) (= (type $generated@@399) $generated@@144)) (=> (and (and (and ($generated@@145 $generated@@398 $generated@@394) ($generated@@384 $generated@@398 $generated@@394 $generated@@397)) (and ($generated@@145 $generated@@399 $generated@@395) ($generated@@384 $generated@@399 $generated@@395 $generated@@397))) ($generated@@146 $generated@@394 $generated@@395 $generated@@396 $generated@@397 $generated@@393 $generated@@398 $generated@@399)) (forall (($generated@@400 T@U) ) (!  (=> (= (type $generated@@400) $generated@@85) (=> (and (not (= $generated@@400 $generated@@385)) ($generated@@0 ($generated@@89 ($generated@@383 $generated@@394 $generated@@395 $generated@@396 $generated@@397 $generated@@393 $generated@@398 $generated@@399) ($generated@@235 $generated@@400)))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@397 $generated@@400) $generated@@60))))
 :pattern ( ($generated@@89 ($generated@@383 $generated@@394 $generated@@395 $generated@@396 $generated@@397 $generated@@393 $generated@@398 $generated@@399) ($generated@@235 $generated@@400)))
))))
 :pattern ( ($generated@@234 $generated@@394 $generated@@395 $generated@@396 $generated@@397 $generated@@393 $generated@@398 $generated@@399))
 :pattern ( ($generated@@383 $generated@@394 $generated@@395 $generated@@396 $generated@@397 $generated@@393 $generated@@398 $generated@@399))
))))
 :pattern ( ($generated@@82 $generated@@393 ($generated@@163 $generated@@394 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@403 T@T) ) (! (= (type ($generated@@402 $generated@@403)) ($generated@@84 $generated@@403 $generated@@4))
 :pattern ( ($generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) $generated@@72) (= (type $generated@@405) $generated@@72)) (= (type $generated@@406) $generated@@72)) (= (type $generated@@407) $generated@@142)) (= ($generated@@140 $generated@@407 ($generated@@143 $generated@@404 $generated@@405 $generated@@406))  (and ($generated@@140 $generated@@407 ($generated@@163 $generated@@404 $generated@@405 $generated@@406)) (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@408) $generated@@144) (= (type $generated@@409) $generated@@144)) (and ($generated@@145 $generated@@408 $generated@@404) ($generated@@145 $generated@@409 $generated@@405))) ($generated@@401 ($generated@@383 $generated@@404 $generated@@405 $generated@@406 $generated@@147 $generated@@407 $generated@@408 $generated@@409) ($generated@@402 $generated@@144)))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
)))))
 :pattern ( ($generated@@140 $generated@@407 ($generated@@143 $generated@@404 $generated@@405 $generated@@406)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@410) $generated@@72) (= (type $generated@@411) $generated@@72)) (= (type $generated@@412) $generated@@144)) (= (type $generated@@413) $generated@@144)) (= (type $generated@@414) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@230 $generated@@414)) (= ($generated@@82 ($generated@@350 $generated@@412 $generated@@413) ($generated@@214 $generated@@410 $generated@@411) $generated@@414)  (and ($generated@@384 $generated@@412 $generated@@410 $generated@@414) ($generated@@384 $generated@@413 $generated@@411 $generated@@414))))
 :pattern ( ($generated@@82 ($generated@@350 $generated@@412 $generated@@413) ($generated@@214 $generated@@410 $generated@@411) $generated@@414))
)))
(assert (forall (($generated@@416 T@U) ) (! (= (type ($generated@@415 $generated@@416)) $generated@@76)
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@215) (= ($generated@@213 $generated@@417) (= ($generated@@415 $generated@@417) $generated@@65)))
 :pattern ( ($generated@@213 $generated@@417))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 Int) ($generated@@422 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@418) $generated@@72) (= (type $generated@@419) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@420) $generated@@142)) (= (type $generated@@422) $generated@@144)) (or ($generated@@231 $generated@@418 ($generated@@379 $generated@@420) ($generated@@232 $generated@@421) ($generated@@379 $generated@@422)) (and (not (= 1 $generated@@228)) (and (and (and (and ($generated@@230 $generated@@419) ($generated@@140 $generated@@420 ($generated@@141 $generated@@160 $generated@@418 $generated@@44))) (<= ($generated@@232 0) $generated@@421)) ($generated@@145 $generated@@422 $generated@@418)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@418 $generated@@44 $generated@@419 ($generated@@379 $generated@@420) ($generated@@235 ($generated@@8 ($generated@@232 $generated@@421))) ($generated@@379 $generated@@422)))))))) (and ($generated@@236 $generated@@418 $generated@@419 ($generated@@379 $generated@@420) ($generated@@379 $generated@@422)) (= ($generated@@229 $generated@@418 ($generated@@379 $generated@@420) ($generated@@232 $generated@@421) ($generated@@379 $generated@@422)) (let (($generated@@423 ($generated@@237 $generated@@418 $generated@@419 ($generated@@379 $generated@@420) ($generated@@379 $generated@@422))))
$generated@@423))))
 :weight 3
 :pattern ( ($generated@@229 $generated@@418 ($generated@@379 $generated@@420) ($generated@@232 $generated@@421) ($generated@@379 $generated@@422)) ($generated@@230 $generated@@419))
))))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@215) ($generated@@213 $generated@@424)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@144) (= (type $generated@@426) $generated@@144)) (= $generated@@424 ($generated@@350 $generated@@425 $generated@@426)))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
)))
 :pattern ( ($generated@@213 $generated@@424))
)))
(assert  (and (and (forall (($generated@@431 T@T) ) (= ($generated@@1 ($generated@@429 $generated@@431)) 18)) (forall (($generated@@432 T@T) ) (! (= ($generated@@430 ($generated@@429 $generated@@432)) $generated@@432)
 :pattern ( ($generated@@429 $generated@@432))
))) (forall (($generated@@433 T@T) ) (! (= (type ($generated@@427 $generated@@433)) ($generated@@429 $generated@@433))
 :pattern ( ($generated@@427 $generated@@433))
))))
(assert (forall (($generated@@434 T@T) ) (! (= ($generated@@428 ($generated@@427 $generated@@434)) 0)
 :pattern ( ($generated@@427 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@2) (= ($generated@@140 $generated@@435 $generated@@160) (<= ($generated@@232 0) ($generated $generated@@435))))
 :pattern ( ($generated@@140 $generated@@435 $generated@@160))
)))
(assert ($generated@@230 $generated@@147))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@72) (= (type $generated@@438) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@384 ($generated@@235 $generated@@436) $generated@@437 $generated@@438) ($generated@@82 $generated@@436 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@384 ($generated@@235 $generated@@436) $generated@@437 $generated@@438))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@447 T@T) ($generated@@448 T@T) ($generated@@449 T@T) ($generated@@450 T@T) ) (= ($generated@@1 ($generated@@440 $generated@@447 $generated@@448 $generated@@449 $generated@@450)) 19)) (forall (($generated@@451 T@T) ($generated@@452 T@T) ($generated@@453 T@T) ($generated@@454 T@T) ) (! (= ($generated@@442 ($generated@@440 $generated@@451 $generated@@452 $generated@@453 $generated@@454)) $generated@@451)
 :pattern ( ($generated@@440 $generated@@451 $generated@@452 $generated@@453 $generated@@454))
))) (forall (($generated@@455 T@T) ($generated@@456 T@T) ($generated@@457 T@T) ($generated@@458 T@T) ) (! (= ($generated@@443 ($generated@@440 $generated@@455 $generated@@456 $generated@@457 $generated@@458)) $generated@@456)
 :pattern ( ($generated@@440 $generated@@455 $generated@@456 $generated@@457 $generated@@458))
))) (forall (($generated@@459 T@T) ($generated@@460 T@T) ($generated@@461 T@T) ($generated@@462 T@T) ) (! (= ($generated@@444 ($generated@@440 $generated@@459 $generated@@460 $generated@@461 $generated@@462)) $generated@@461)
 :pattern ( ($generated@@440 $generated@@459 $generated@@460 $generated@@461 $generated@@462))
))) (forall (($generated@@463 T@T) ($generated@@464 T@T) ($generated@@465 T@T) ($generated@@466 T@T) ) (! (= ($generated@@445 ($generated@@440 $generated@@463 $generated@@464 $generated@@465 $generated@@466)) $generated@@466)
 :pattern ( ($generated@@440 $generated@@463 $generated@@464 $generated@@465 $generated@@466))
))) (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@445 (type $generated@@467))))
(= (type ($generated@@441 $generated@@467 $generated@@468 $generated@@469 $generated@@470)) $generated@@471))
 :pattern ( ($generated@@441 $generated@@467 $generated@@468 $generated@@469 $generated@@470))
))) (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(let (($generated@@478 (type $generated@@475)))
(let (($generated@@479 (type $generated@@474)))
(let (($generated@@480 (type $generated@@473)))
(= (type ($generated@@446 $generated@@472 $generated@@473 $generated@@474 $generated@@475 $generated@@476)) ($generated@@440 $generated@@480 $generated@@479 $generated@@478 $generated@@477))))))
 :pattern ( ($generated@@446 $generated@@472 $generated@@473 $generated@@474 $generated@@475 $generated@@476))
))) (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@445 (type $generated@@481))))
 (=> (= (type $generated@@485) $generated@@486) (= ($generated@@441 ($generated@@446 $generated@@481 $generated@@482 $generated@@483 $generated@@484 $generated@@485) $generated@@482 $generated@@483 $generated@@484) $generated@@485)))
 :weight 0
))) (and (and (and (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (or (= $generated@@489 $generated@@492) (= ($generated@@441 ($generated@@446 $generated@@488 $generated@@489 $generated@@490 $generated@@491 $generated@@487) $generated@@492 $generated@@493 $generated@@494) ($generated@@441 $generated@@488 $generated@@492 $generated@@493 $generated@@494)))
 :weight 0
)) (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (or (= $generated@@498 $generated@@501) (= ($generated@@441 ($generated@@446 $generated@@496 $generated@@497 $generated@@498 $generated@@499 $generated@@495) $generated@@500 $generated@@501 $generated@@502) ($generated@@441 $generated@@496 $generated@@500 $generated@@501 $generated@@502)))
 :weight 0
))) (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (or (= $generated@@507 $generated@@510) (= ($generated@@441 ($generated@@446 $generated@@504 $generated@@505 $generated@@506 $generated@@507 $generated@@503) $generated@@508 $generated@@509 $generated@@510) ($generated@@441 $generated@@504 $generated@@508 $generated@@509 $generated@@510)))
 :weight 0
))) (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (or true (= ($generated@@441 ($generated@@446 $generated@@512 $generated@@513 $generated@@514 $generated@@515 $generated@@511) $generated@@516 $generated@@517 $generated@@518) ($generated@@441 $generated@@512 $generated@@516 $generated@@517 $generated@@518)))
 :weight 0
)))) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (! (= (type ($generated@@439 $generated@@519 $generated@@520 $generated@@521)) $generated@@142)
 :pattern ( ($generated@@439 $generated@@519 $generated@@520 $generated@@521))
))))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@522) $generated@@72) (= (type $generated@@523) $generated@@72)) (= (type $generated@@524) $generated@@72)) (= (type $generated@@525) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@526) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@144))) (= (type $generated@@527) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@4))) (= (type $generated@@528) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 ($generated@@84 $generated@@144 $generated@@4)))) (= (type $generated@@529) $generated@@144)) (= (type $generated@@530) $generated@@144)) (= ($generated@@234 $generated@@522 $generated@@523 $generated@@524 $generated@@525 ($generated@@439 $generated@@526 $generated@@527 $generated@@528) $generated@@529 $generated@@530) ($generated@@441 $generated@@526 $generated@@525 $generated@@529 $generated@@530)))
 :pattern ( ($generated@@234 $generated@@522 $generated@@523 $generated@@524 $generated@@525 ($generated@@439 $generated@@526 $generated@@527 $generated@@528) $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@533 T@T) ) (! (= (type ($generated@@532 $generated@@533)) ($generated@@84 $generated@@533 $generated@@2))
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@87 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@84 $generated@@535 $generated@@2)) (and (= (= ($generated@@531 $generated@@534) 0) (= $generated@@534 ($generated@@532 $generated@@535))) (=> (not (= ($generated@@531 $generated@@534) 0)) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@535) (< 0 ($generated ($generated@@89 $generated@@534 $generated@@536))))
 :no-pattern (type $generated@@536)
 :no-pattern ($generated $generated@@536)
 :no-pattern ($generated@@0 $generated@@536)
))))))
 :pattern ( ($generated@@531 $generated@@534))
)))
(assert  (and (and (and (and (forall (($generated@@542 T@T) ($generated@@543 T@T) ) (= ($generated@@1 ($generated@@539 $generated@@542 $generated@@543)) 20)) (forall (($generated@@544 T@T) ($generated@@545 T@T) ) (! (= ($generated@@540 ($generated@@539 $generated@@544 $generated@@545)) $generated@@544)
 :pattern ( ($generated@@539 $generated@@544 $generated@@545))
))) (forall (($generated@@546 T@T) ($generated@@547 T@T) ) (! (= ($generated@@541 ($generated@@539 $generated@@546 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@539 $generated@@546 $generated@@547))
))) (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@540 (type $generated@@548))))
(= (type ($generated@@537 $generated@@548)) ($generated@@84 $generated@@549 $generated@@4)))
 :pattern ( ($generated@@537 $generated@@548))
))) (forall (($generated@@550 T@T) ($generated@@551 T@T) ) (! (= (type ($generated@@538 $generated@@550 $generated@@551)) ($generated@@539 $generated@@550 $generated@@551))
 :pattern ( ($generated@@538 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@T) ) (! (let (($generated@@554 (type $generated@@552)))
 (not ($generated@@0 ($generated@@89 ($generated@@537 ($generated@@538 $generated@@554 $generated@@553)) $generated@@552))))
 :pattern ( (let (($generated@@554 (type $generated@@552)))
($generated@@89 ($generated@@537 ($generated@@538 $generated@@554 $generated@@553)) $generated@@552)))
)))
(assert  (and (and (and (and (forall (($generated@@560 T@T) ($generated@@561 T@T) ) (= ($generated@@1 ($generated@@557 $generated@@560 $generated@@561)) 21)) (forall (($generated@@562 T@T) ($generated@@563 T@T) ) (! (= ($generated@@558 ($generated@@557 $generated@@562 $generated@@563)) $generated@@562)
 :pattern ( ($generated@@557 $generated@@562 $generated@@563))
))) (forall (($generated@@564 T@T) ($generated@@565 T@T) ) (! (= ($generated@@559 ($generated@@557 $generated@@564 $generated@@565)) $generated@@565)
 :pattern ( ($generated@@557 $generated@@564 $generated@@565))
))) (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@558 (type $generated@@566))))
(= (type ($generated@@555 $generated@@566)) ($generated@@84 $generated@@567 $generated@@4)))
 :pattern ( ($generated@@555 $generated@@566))
))) (forall (($generated@@568 T@T) ($generated@@569 T@T) ) (! (= (type ($generated@@556 $generated@@568 $generated@@569)) ($generated@@557 $generated@@568 $generated@@569))
 :pattern ( ($generated@@556 $generated@@568 $generated@@569))
))))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@T) ) (! (let (($generated@@572 (type $generated@@570)))
 (not ($generated@@0 ($generated@@89 ($generated@@555 ($generated@@556 $generated@@572 $generated@@571)) $generated@@570))))
 :pattern ( (let (($generated@@572 (type $generated@@570)))
($generated@@89 ($generated@@555 ($generated@@556 $generated@@572 $generated@@571)) $generated@@570)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (! (let (($generated@@575 ($generated@@87 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@84 $generated@@575 $generated@@4)) (= (type $generated@@574) ($generated@@84 $generated@@575 $generated@@4))) (= ($generated@@401 $generated@@573 $generated@@574) (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@575) (= ($generated@@0 ($generated@@89 $generated@@573 $generated@@576)) ($generated@@0 ($generated@@89 $generated@@574 $generated@@576))))
 :pattern ( ($generated@@89 $generated@@573 $generated@@576))
 :pattern ( ($generated@@89 $generated@@574 $generated@@576))
)))))
 :pattern ( ($generated@@401 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@87 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@84 $generated@@578 $generated@@2)) (= ($generated@@255 $generated@@577) (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@578) (and (<= 0 ($generated ($generated@@89 $generated@@577 $generated@@579))) (<= ($generated ($generated@@89 $generated@@577 $generated@@579)) ($generated@@531 $generated@@577))))
 :pattern ( ($generated@@89 $generated@@577 $generated@@579))
)))))
 :pattern ( ($generated@@255 $generated@@577))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@144) ($generated@@145 $generated@@580 $generated@@160)) (and (= ($generated@@235 ($generated@@233 $generated@@2 $generated@@580)) $generated@@580) ($generated@@140 ($generated@@233 $generated@@2 $generated@@580) $generated@@160)))
 :pattern ( ($generated@@145 $generated@@580 $generated@@160))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 ($generated@@541 (type $generated@@581))))
(let (($generated@@583 ($generated@@540 (type $generated@@581))))
 (=> (= (type $generated@@581) ($generated@@539 $generated@@583 $generated@@582)) (or (= $generated@@581 ($generated@@538 $generated@@583 $generated@@582)) (exists (($generated@@584 T@U) ) (!  (and (= (type $generated@@584) $generated@@583) ($generated@@0 ($generated@@89 ($generated@@537 $generated@@581) $generated@@584)))
 :no-pattern (type $generated@@584)
 :no-pattern ($generated $generated@@584)
 :no-pattern ($generated@@0 $generated@@584)
))))))
 :pattern ( ($generated@@537 $generated@@581))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 ($generated@@541 (type $generated@@586))))
(= (type ($generated@@585 $generated@@586)) ($generated@@84 $generated@@587 $generated@@4)))
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (let (($generated@@589 ($generated@@541 (type $generated@@588))))
(let (($generated@@590 ($generated@@540 (type $generated@@588))))
 (=> (= (type $generated@@588) ($generated@@539 $generated@@590 $generated@@589)) (or (= $generated@@588 ($generated@@538 $generated@@590 $generated@@589)) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@589) ($generated@@0 ($generated@@89 ($generated@@585 $generated@@588) $generated@@591)))
 :no-pattern (type $generated@@591)
 :no-pattern ($generated $generated@@591)
 :no-pattern ($generated@@0 $generated@@591)
))))))
 :pattern ( ($generated@@585 $generated@@588))
)))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@559 (type $generated@@592))))
(let (($generated@@594 ($generated@@558 (type $generated@@592))))
 (=> (= (type $generated@@592) ($generated@@557 $generated@@594 $generated@@593)) (or (= $generated@@592 ($generated@@556 $generated@@594 $generated@@593)) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@594) ($generated@@0 ($generated@@89 ($generated@@555 $generated@@592) $generated@@595)))
 :no-pattern (type $generated@@595)
 :no-pattern ($generated $generated@@595)
 :no-pattern ($generated@@0 $generated@@595)
))))))
 :pattern ( ($generated@@555 $generated@@592))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@559 (type $generated@@597))))
(= (type ($generated@@596 $generated@@597)) ($generated@@84 $generated@@598 $generated@@4)))
 :pattern ( ($generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@559 (type $generated@@599))))
(let (($generated@@601 ($generated@@558 (type $generated@@599))))
 (=> (= (type $generated@@599) ($generated@@557 $generated@@601 $generated@@600)) (or (= $generated@@599 ($generated@@556 $generated@@601 $generated@@600)) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@600) ($generated@@0 ($generated@@89 ($generated@@596 $generated@@599) $generated@@602)))
 :no-pattern (type $generated@@602)
 :no-pattern ($generated $generated@@602)
 :no-pattern ($generated@@0 $generated@@602)
))))))
 :pattern ( ($generated@@596 $generated@@599))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@84 $generated@@144 $generated@@2)) (= (type $generated@@604) $generated@@72)) (= ($generated@@140 $generated@@603 ($generated@@254 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@144) (< 0 ($generated ($generated@@89 $generated@@603 $generated@@605)))) ($generated@@145 $generated@@605 $generated@@604))
 :pattern ( ($generated@@89 $generated@@603 $generated@@605))
))))
 :pattern ( ($generated@@140 $generated@@603 ($generated@@254 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@142) (= (type $generated@@607) $generated@@72)) (= (type $generated@@608) $generated@@72)) (= (type $generated@@609) $generated@@72)) (= ($generated@@140 $generated@@606 ($generated@@163 $generated@@607 $generated@@608 $generated@@609)) (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@611) $generated@@144)) (= (type $generated@@612) $generated@@144)) (and (and ($generated@@230 $generated@@610) (and ($generated@@145 $generated@@611 $generated@@607) ($generated@@145 $generated@@612 $generated@@608))) ($generated@@146 $generated@@607 $generated@@608 $generated@@609 $generated@@610 $generated@@606 $generated@@611 $generated@@612))) ($generated@@145 ($generated@@234 $generated@@607 $generated@@608 $generated@@609 $generated@@610 $generated@@606 $generated@@611 $generated@@612) $generated@@609))
 :pattern ( ($generated@@234 $generated@@607 $generated@@608 $generated@@609 $generated@@610 $generated@@606 $generated@@611 $generated@@612))
))))
 :pattern ( ($generated@@140 $generated@@606 ($generated@@163 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@614) $generated@@72)) (= (type $generated@@615) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@613 ($generated@@368 $generated@@614) $generated@@615) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@144) ($generated@@0 ($generated@@89 $generated@@613 $generated@@616))) ($generated@@384 $generated@@616 $generated@@614 $generated@@615))
 :pattern ( ($generated@@89 $generated@@613 $generated@@616))
))))
 :pattern ( ($generated@@82 $generated@@613 ($generated@@368 $generated@@614) $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@617) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@618) $generated@@72)) (= (type $generated@@619) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@617 ($generated@@373 $generated@@618) $generated@@619) (forall (($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@144) ($generated@@0 ($generated@@89 $generated@@617 $generated@@620))) ($generated@@384 $generated@@620 $generated@@618 $generated@@619))
 :pattern ( ($generated@@89 $generated@@617 $generated@@620))
))))
 :pattern ( ($generated@@82 $generated@@617 ($generated@@373 $generated@@618) $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 (type $generated@@621)))
(= ($generated ($generated@@89 ($generated@@532 $generated@@622) $generated@@621)) 0))
 :pattern ( (let (($generated@@622 (type $generated@@621)))
($generated@@89 ($generated@@532 $generated@@622) $generated@@621)))
)))
(assert  (and (forall (($generated@@625 T@U) ) (! (= (type ($generated@@623 $generated@@625)) ($generated@@84 $generated@@144 $generated@@4))
 :pattern ( ($generated@@623 $generated@@625))
)) (forall (($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@541 (type $generated@@626))))
(let (($generated@@628 ($generated@@540 (type $generated@@626))))
(= (type ($generated@@624 $generated@@626)) ($generated@@84 $generated@@628 $generated@@627))))
 :pattern ( ($generated@@624 $generated@@626))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@539 $generated@@144 $generated@@144)) (= (type $generated@@630) $generated@@144)) (= ($generated@@0 ($generated@@89 ($generated@@623 $generated@@629) $generated@@630))  (and ($generated@@0 ($generated@@89 ($generated@@537 $generated@@629) ($generated@@222 ($generated@@233 $generated@@215 $generated@@630)))) (= ($generated@@89 ($generated@@624 $generated@@629) ($generated@@222 ($generated@@233 $generated@@215 $generated@@630))) ($generated@@223 ($generated@@233 $generated@@215 $generated@@630))))))
 :pattern ( ($generated@@89 ($generated@@623 $generated@@629) $generated@@630))
)))
(assert  (and (forall (($generated@@633 T@U) ) (! (= (type ($generated@@631 $generated@@633)) ($generated@@84 $generated@@144 $generated@@4))
 :pattern ( ($generated@@631 $generated@@633))
)) (forall (($generated@@634 T@U) ) (! (let (($generated@@635 ($generated@@559 (type $generated@@634))))
(let (($generated@@636 ($generated@@558 (type $generated@@634))))
(= (type ($generated@@632 $generated@@634)) ($generated@@84 $generated@@636 $generated@@635))))
 :pattern ( ($generated@@632 $generated@@634))
))))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@557 $generated@@144 $generated@@144)) (= (type $generated@@638) $generated@@144)) (= ($generated@@0 ($generated@@89 ($generated@@631 $generated@@637) $generated@@638))  (and ($generated@@0 ($generated@@89 ($generated@@555 $generated@@637) ($generated@@222 ($generated@@233 $generated@@215 $generated@@638)))) (= ($generated@@89 ($generated@@632 $generated@@637) ($generated@@222 ($generated@@233 $generated@@215 $generated@@638))) ($generated@@223 ($generated@@233 $generated@@215 $generated@@638))))))
 :pattern ( ($generated@@89 ($generated@@631 $generated@@637) $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (! (let (($generated@@641 (type $generated@@640)))
(let (($generated@@642 ($generated@@540 (type $generated@@639))))
 (=> (= (type $generated@@639) ($generated@@539 $generated@@642 $generated@@641)) (= ($generated@@0 ($generated@@89 ($generated@@585 $generated@@639) $generated@@640)) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@642) (and ($generated@@0 ($generated@@89 ($generated@@537 $generated@@639) $generated@@643)) (= $generated@@640 ($generated@@89 ($generated@@624 $generated@@639) $generated@@643))))
 :pattern ( ($generated@@89 ($generated@@537 $generated@@639) $generated@@643))
 :pattern ( ($generated@@89 ($generated@@624 $generated@@639) $generated@@643))
))))))
 :pattern ( ($generated@@89 ($generated@@585 $generated@@639) $generated@@640))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 (type $generated@@645)))
(let (($generated@@647 ($generated@@558 (type $generated@@644))))
 (=> (= (type $generated@@644) ($generated@@557 $generated@@647 $generated@@646)) (= ($generated@@0 ($generated@@89 ($generated@@596 $generated@@644) $generated@@645)) (exists (($generated@@648 T@U) ) (!  (and (= (type $generated@@648) $generated@@647) (and ($generated@@0 ($generated@@89 ($generated@@555 $generated@@644) $generated@@648)) (= $generated@@645 ($generated@@89 ($generated@@632 $generated@@644) $generated@@648))))
 :pattern ( ($generated@@89 ($generated@@555 $generated@@644) $generated@@648))
 :pattern ( ($generated@@89 ($generated@@632 $generated@@644) $generated@@648))
))))))
 :pattern ( ($generated@@89 ($generated@@596 $generated@@644) $generated@@645))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (! (= (type ($generated@@649 $generated@@650 $generated@@651)) $generated@@72)
 :pattern ( ($generated@@649 $generated@@650 $generated@@651))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@539 $generated@@144 $generated@@144)) (= (type $generated@@653) $generated@@72)) (= (type $generated@@654) $generated@@72)) (= (type $generated@@655) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@652 ($generated@@649 $generated@@653 $generated@@654) $generated@@655) (forall (($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@537 $generated@@652) $generated@@656))) (and ($generated@@384 ($generated@@89 ($generated@@624 $generated@@652) $generated@@656) $generated@@654 $generated@@655) ($generated@@384 $generated@@656 $generated@@653 $generated@@655)))
 :pattern ( ($generated@@89 ($generated@@624 $generated@@652) $generated@@656))
 :pattern ( ($generated@@89 ($generated@@537 $generated@@652) $generated@@656))
))))
 :pattern ( ($generated@@82 $generated@@652 ($generated@@649 $generated@@653 $generated@@654) $generated@@655))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (! (= (type ($generated@@657 $generated@@658 $generated@@659)) $generated@@72)
 :pattern ( ($generated@@657 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@557 $generated@@144 $generated@@144)) (= (type $generated@@661) $generated@@72)) (= (type $generated@@662) $generated@@72)) (= (type $generated@@663) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@660 ($generated@@657 $generated@@661 $generated@@662) $generated@@663) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@555 $generated@@660) $generated@@664))) (and ($generated@@384 ($generated@@89 ($generated@@632 $generated@@660) $generated@@664) $generated@@662 $generated@@663) ($generated@@384 $generated@@664 $generated@@661 $generated@@663)))
 :pattern ( ($generated@@89 ($generated@@632 $generated@@660) $generated@@664))
 :pattern ( ($generated@@89 ($generated@@555 $generated@@660) $generated@@664))
))))
 :pattern ( ($generated@@82 $generated@@660 ($generated@@657 $generated@@661 $generated@@662) $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (! (let (($generated@@667 ($generated@@87 (type $generated@@665))))
 (=> (and (and (= (type $generated@@665) ($generated@@84 $generated@@667 $generated@@4)) (= (type $generated@@666) ($generated@@84 $generated@@667 $generated@@4))) ($generated@@401 $generated@@665 $generated@@666)) (= $generated@@665 $generated@@666)))
 :pattern ( ($generated@@401 $generated@@665 $generated@@666))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@668) $generated@@72) (= (type $generated@@669) $generated@@72)) (= (type $generated@@670) $generated@@72)) (= (type $generated@@671) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@672) $generated@@142)) (= (type $generated@@673) $generated@@144)) (= (type $generated@@674) $generated@@144)) (and ($generated@@230 $generated@@671) (and (and ($generated@@145 $generated@@673 $generated@@668) ($generated@@145 $generated@@674 $generated@@669)) ($generated@@140 $generated@@672 ($generated@@163 $generated@@668 $generated@@669 $generated@@670))))) (= ($generated@@401 ($generated@@383 $generated@@668 $generated@@669 $generated@@670 $generated@@147 $generated@@672 $generated@@673 $generated@@674) ($generated@@402 $generated@@144)) ($generated@@401 ($generated@@383 $generated@@668 $generated@@669 $generated@@670 $generated@@671 $generated@@672 $generated@@673 $generated@@674) ($generated@@402 $generated@@144))))
 :pattern ( ($generated@@383 $generated@@668 $generated@@669 $generated@@670 $generated@@147 $generated@@672 $generated@@673 $generated@@674) ($generated@@230 $generated@@671))
 :pattern ( ($generated@@383 $generated@@668 $generated@@669 $generated@@670 $generated@@671 $generated@@672 $generated@@673 $generated@@674))
)))
(assert  (=> (<= 1 $generated@@228) (forall (($generated@@675 T@U) ($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 Int) ($generated@@679 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@675) $generated@@72) (= (type $generated@@676) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@677) $generated@@142)) (= (type $generated@@679) $generated@@144)) (or ($generated@@231 $generated@@675 $generated@@677 ($generated@@232 $generated@@678) $generated@@679) (and (not (= 1 $generated@@228)) (and (and (and (and ($generated@@230 $generated@@676) ($generated@@140 $generated@@677 ($generated@@141 $generated@@160 $generated@@675 $generated@@44))) (<= ($generated@@232 0) $generated@@678)) ($generated@@145 $generated@@679 $generated@@675)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@675 $generated@@44 $generated@@676 $generated@@677 ($generated@@235 ($generated@@8 ($generated@@232 $generated@@678))) $generated@@679))))))) (and ($generated@@236 $generated@@675 $generated@@676 $generated@@677 $generated@@679) (= ($generated@@229 $generated@@675 $generated@@677 ($generated@@232 $generated@@678) $generated@@679) (let (($generated@@680 ($generated@@237 $generated@@675 $generated@@676 $generated@@677 $generated@@679)))
$generated@@680))))
 :weight 3
 :pattern ( ($generated@@229 $generated@@675 $generated@@677 ($generated@@232 $generated@@678) $generated@@679) ($generated@@230 $generated@@676))
))))
(assert (forall (($generated@@682 T@T) ) (! (= (type ($generated@@681 $generated@@682)) ($generated@@84 $generated@@682 $generated@@4))
 :pattern ( ($generated@@681 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ) (! (let (($generated@@684 ($generated@@559 (type $generated@@683))))
(let (($generated@@685 ($generated@@558 (type $generated@@683))))
 (=> (= (type $generated@@683) ($generated@@557 $generated@@685 $generated@@684)) (= (= $generated@@683 ($generated@@556 $generated@@685 $generated@@684)) (= ($generated@@555 $generated@@683) ($generated@@681 $generated@@685))))))
 :pattern ( ($generated@@555 $generated@@683))
)))
(assert (forall (($generated@@686 T@U) ) (! (let (($generated@@687 ($generated@@559 (type $generated@@686))))
(let (($generated@@688 ($generated@@558 (type $generated@@686))))
 (=> (= (type $generated@@686) ($generated@@557 $generated@@688 $generated@@687)) (= (= $generated@@686 ($generated@@556 $generated@@688 $generated@@687)) (= ($generated@@596 $generated@@686) ($generated@@681 $generated@@687))))))
 :pattern ( ($generated@@596 $generated@@686))
)))
(assert (forall (($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@559 (type $generated@@689))))
(let (($generated@@691 ($generated@@558 (type $generated@@689))))
 (=> (= (type $generated@@689) ($generated@@557 $generated@@691 $generated@@690)) (= (= $generated@@689 ($generated@@556 $generated@@691 $generated@@690)) (= ($generated@@631 $generated@@689) ($generated@@681 $generated@@144))))))
 :pattern ( ($generated@@631 $generated@@689))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@692) $generated@@142) (= (type $generated@@693) $generated@@72)) (= (type $generated@@694) $generated@@72)) (= (type $generated@@695) $generated@@72)) (= (type $generated@@696) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@230 $generated@@696) ($generated@@82 $generated@@692 ($generated@@163 $generated@@693 $generated@@694 $generated@@695) $generated@@696))) (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) $generated@@144) (= (type $generated@@698) $generated@@144)) (=> (and (and ($generated@@384 $generated@@697 $generated@@693 $generated@@696) ($generated@@384 $generated@@698 $generated@@694 $generated@@696)) ($generated@@146 $generated@@693 $generated@@694 $generated@@695 $generated@@696 $generated@@692 $generated@@697 $generated@@698)) ($generated@@384 ($generated@@234 $generated@@693 $generated@@694 $generated@@695 $generated@@696 $generated@@692 $generated@@697 $generated@@698) $generated@@695 $generated@@696)))
 :pattern ( ($generated@@234 $generated@@693 $generated@@694 $generated@@695 $generated@@696 $generated@@692 $generated@@697 $generated@@698))
)))
 :pattern ( ($generated@@82 $generated@@692 ($generated@@163 $generated@@693 $generated@@694 $generated@@695) $generated@@696))
)))
(assert (forall (($generated@@699 T@U) ) (! (let (($generated@@700 ($generated@@541 (type $generated@@699))))
(let (($generated@@701 ($generated@@540 (type $generated@@699))))
 (=> (= (type $generated@@699) ($generated@@539 $generated@@701 $generated@@700)) (or (= $generated@@699 ($generated@@538 $generated@@701 $generated@@700)) (exists (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (and (and (= (type $generated@@702) $generated@@144) (= (type $generated@@703) $generated@@144)) ($generated@@0 ($generated@@89 ($generated@@623 $generated@@699) ($generated@@235 ($generated@@350 $generated@@702 $generated@@703)))))
 :no-pattern (type $generated@@702)
 :no-pattern (type $generated@@703)
 :no-pattern ($generated $generated@@702)
 :no-pattern ($generated@@0 $generated@@702)
 :no-pattern ($generated $generated@@703)
 :no-pattern ($generated@@0 $generated@@703)
))))))
 :pattern ( ($generated@@623 $generated@@699))
)))
(assert (forall (($generated@@704 T@U) ) (! (let (($generated@@705 ($generated@@559 (type $generated@@704))))
(let (($generated@@706 ($generated@@558 (type $generated@@704))))
 (=> (= (type $generated@@704) ($generated@@557 $generated@@706 $generated@@705)) (or (= $generated@@704 ($generated@@556 $generated@@706 $generated@@705)) (exists (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (and (and (= (type $generated@@707) $generated@@144) (= (type $generated@@708) $generated@@144)) ($generated@@0 ($generated@@89 ($generated@@631 $generated@@704) ($generated@@235 ($generated@@350 $generated@@707 $generated@@708)))))
 :no-pattern (type $generated@@707)
 :no-pattern (type $generated@@708)
 :no-pattern ($generated $generated@@707)
 :no-pattern ($generated@@0 $generated@@707)
 :no-pattern ($generated $generated@@708)
 :no-pattern ($generated@@0 $generated@@708)
))))))
 :pattern ( ($generated@@631 $generated@@704))
)))
(assert (forall (($generated@@709 T@U) ) (!  (=> (and (= (type $generated@@709) $generated@@144) ($generated@@145 $generated@@709 $generated@@46)) (and (= ($generated@@235 ($generated@@233 $generated@@2 $generated@@709)) $generated@@709) ($generated@@140 ($generated@@233 $generated@@2 $generated@@709) $generated@@46)))
 :pattern ( ($generated@@145 $generated@@709 $generated@@46))
)))
(assert (forall (($generated@@710 T@U) ) (!  (=> (and (= (type $generated@@710) $generated@@144) ($generated@@145 $generated@@710 $generated@@47)) (and (= ($generated@@235 ($generated@@233 $generated@@3 $generated@@710)) $generated@@710) ($generated@@140 ($generated@@233 $generated@@3 $generated@@710) $generated@@47)))
 :pattern ( ($generated@@145 $generated@@710 $generated@@47))
)))
(assert (forall (($generated@@711 T@U) ) (!  (=> (and (= (type $generated@@711) $generated@@144) ($generated@@145 $generated@@711 $generated@@44)) (and (= ($generated@@235 ($generated@@233 $generated@@4 $generated@@711)) $generated@@711) ($generated@@140 ($generated@@233 $generated@@4 $generated@@711) $generated@@44)))
 :pattern ( ($generated@@145 $generated@@711 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@712) 22))
(assert (forall (($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@713) $generated@@144) ($generated@@145 $generated@@713 $generated@@45)) (and (= ($generated@@235 ($generated@@233 $generated@@712 $generated@@713)) $generated@@713) ($generated@@140 ($generated@@233 $generated@@712 $generated@@713) $generated@@45)))
 :pattern ( ($generated@@145 $generated@@713 $generated@@45))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@72) (= ($generated@@145 ($generated@@235 $generated@@714) $generated@@715) ($generated@@140 $generated@@714 $generated@@715)))
 :pattern ( ($generated@@145 ($generated@@235 $generated@@714) $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ) (! (let (($generated@@717 ($generated@@87 (type $generated@@716))))
 (=> (= (type $generated@@716) ($generated@@84 $generated@@717 $generated@@2)) (<= 0 ($generated@@531 $generated@@716))))
 :pattern ( ($generated@@531 $generated@@716))
)))
(assert (forall (($generated@@718 T@U) ) (! (let (($generated@@719 ($generated@@430 (type $generated@@718))))
 (=> (= (type $generated@@718) ($generated@@429 $generated@@719)) (<= 0 ($generated@@428 $generated@@718))))
 :pattern ( ($generated@@428 $generated@@718))
)))
(assert (forall (($generated@@721 T@U) ) (! (= (type ($generated@@720 $generated@@721)) $generated@@72)
 :pattern ( ($generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@72) (= (type $generated@@723) $generated@@72)) (= ($generated@@720 ($generated@@649 $generated@@722 $generated@@723)) $generated@@722))
 :pattern ( ($generated@@649 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ) (! (= (type ($generated@@724 $generated@@725)) $generated@@72)
 :pattern ( ($generated@@724 $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@72) (= (type $generated@@727) $generated@@72)) (= ($generated@@724 ($generated@@649 $generated@@726 $generated@@727)) $generated@@727))
 :pattern ( ($generated@@649 $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) $generated@@72) (= (type $generated@@729) $generated@@72)) (= ($generated@@80 ($generated@@649 $generated@@728 $generated@@729)) $generated@@58))
 :pattern ( ($generated@@649 $generated@@728 $generated@@729))
)))
(assert (forall (($generated@@731 T@U) ) (! (= (type ($generated@@730 $generated@@731)) $generated@@72)
 :pattern ( ($generated@@730 $generated@@731))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) $generated@@72) (= (type $generated@@733) $generated@@72)) (= ($generated@@730 ($generated@@657 $generated@@732 $generated@@733)) $generated@@732))
 :pattern ( ($generated@@657 $generated@@732 $generated@@733))
)))
(assert (forall (($generated@@735 T@U) ) (! (= (type ($generated@@734 $generated@@735)) $generated@@72)
 :pattern ( ($generated@@734 $generated@@735))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@72) (= (type $generated@@737) $generated@@72)) (= ($generated@@734 ($generated@@657 $generated@@736 $generated@@737)) $generated@@737))
 :pattern ( ($generated@@657 $generated@@736 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) $generated@@72) (= (type $generated@@739) $generated@@72)) (= ($generated@@80 ($generated@@657 $generated@@738 $generated@@739)) $generated@@59))
 :pattern ( ($generated@@657 $generated@@738 $generated@@739))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@144) (= (type $generated@@741) $generated@@144)) (= ($generated@@415 ($generated@@350 $generated@@740 $generated@@741)) $generated@@65))
 :pattern ( ($generated@@350 $generated@@740 $generated@@741))
)))
(assert (forall (($generated@@743 T@U) ) (! (= (type ($generated@@742 $generated@@743)) $generated@@72)
 :pattern ( ($generated@@742 $generated@@743))
)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ) (!  (=> (and (= (type $generated@@744) $generated@@72) (= (type $generated@@745) $generated@@72)) (= ($generated@@742 ($generated@@214 $generated@@744 $generated@@745)) $generated@@744))
 :pattern ( ($generated@@214 $generated@@744 $generated@@745))
)))
(assert (forall (($generated@@747 T@U) ) (! (= (type ($generated@@746 $generated@@747)) $generated@@72)
 :pattern ( ($generated@@746 $generated@@747))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ) (!  (=> (and (= (type $generated@@748) $generated@@72) (= (type $generated@@749) $generated@@72)) (= ($generated@@746 ($generated@@214 $generated@@748 $generated@@749)) $generated@@749))
 :pattern ( ($generated@@214 $generated@@748 $generated@@749))
)))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ) (!  (=> (and (= (type $generated@@750) $generated@@144) (= (type $generated@@751) $generated@@144)) (= ($generated@@222 ($generated@@350 $generated@@750 $generated@@751)) $generated@@750))
 :pattern ( ($generated@@350 $generated@@750 $generated@@751))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (= (type $generated@@752) $generated@@144) (= (type $generated@@753) $generated@@144)) (= ($generated@@223 ($generated@@350 $generated@@752 $generated@@753)) $generated@@753))
 :pattern ( ($generated@@350 $generated@@752 $generated@@753))
)))
(assert  (and (forall (($generated@@756 T@U) ) (! (= (type ($generated@@754 $generated@@756)) $generated@@72)
 :pattern ( ($generated@@754 $generated@@756))
)) (forall (($generated@@757 T@U) ($generated@@758 Int) ) (! (let (($generated@@759 ($generated@@430 (type $generated@@757))))
(= (type ($generated@@755 $generated@@757 $generated@@758)) $generated@@759))
 :pattern ( ($generated@@755 $generated@@757 $generated@@758))
))))
(assert (forall (($generated@@760 T@U) ($generated@@761 T@U) ($generated@@762 T@U) ) (!  (=> (and (and (= (type $generated@@760) ($generated@@429 $generated@@144)) (= (type $generated@@761) $generated@@72)) (= (type $generated@@762) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@760 ($generated@@754 $generated@@761) $generated@@762) (forall (($generated@@763 Int) ) (!  (=> (and (<= 0 $generated@@763) (< $generated@@763 ($generated@@428 $generated@@760))) ($generated@@384 ($generated@@755 $generated@@760 $generated@@763) $generated@@761 $generated@@762))
 :pattern ( ($generated@@755 $generated@@760 $generated@@763))
))))
 :pattern ( ($generated@@82 $generated@@760 ($generated@@754 $generated@@761) $generated@@762))
)))
(assert (forall (($generated@@765 Int) ) (! (= ($generated@@764 ($generated@@83 $generated@@765)) $generated@@765)
 :pattern ( ($generated@@83 $generated@@765))
)))
(assert (forall (($generated@@767 T@U) ) (! (= (type ($generated@@766 $generated@@767)) $generated@@72)
 :pattern ( ($generated@@766 $generated@@767))
)))
(assert (forall (($generated@@768 T@U) ) (!  (=> (= (type $generated@@768) $generated@@72) (= ($generated@@766 ($generated@@368 $generated@@768)) $generated@@768))
 :pattern ( ($generated@@368 $generated@@768))
)))
(assert (forall (($generated@@769 T@U) ) (!  (=> (= (type $generated@@769) $generated@@72) (= ($generated@@80 ($generated@@368 $generated@@769)) $generated@@54))
 :pattern ( ($generated@@368 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ) (! (= (type ($generated@@770 $generated@@771)) $generated@@72)
 :pattern ( ($generated@@770 $generated@@771))
)))
(assert (forall (($generated@@772 T@U) ) (!  (=> (= (type $generated@@772) $generated@@72) (= ($generated@@770 ($generated@@373 $generated@@772)) $generated@@772))
 :pattern ( ($generated@@373 $generated@@772))
)))
(assert (forall (($generated@@773 T@U) ) (!  (=> (= (type $generated@@773) $generated@@72) (= ($generated@@80 ($generated@@373 $generated@@773)) $generated@@55))
 :pattern ( ($generated@@373 $generated@@773))
)))
(assert (forall (($generated@@775 T@U) ) (! (= (type ($generated@@774 $generated@@775)) $generated@@72)
 :pattern ( ($generated@@774 $generated@@775))
)))
(assert (forall (($generated@@776 T@U) ) (!  (=> (= (type $generated@@776) $generated@@72) (= ($generated@@774 ($generated@@254 $generated@@776)) $generated@@776))
 :pattern ( ($generated@@254 $generated@@776))
)))
(assert (forall (($generated@@777 T@U) ) (!  (=> (= (type $generated@@777) $generated@@72) (= ($generated@@80 ($generated@@254 $generated@@777)) $generated@@56))
 :pattern ( ($generated@@254 $generated@@777))
)))
(assert (forall (($generated@@779 T@U) ) (! (= (type ($generated@@778 $generated@@779)) $generated@@72)
 :pattern ( ($generated@@778 $generated@@779))
)))
(assert (forall (($generated@@780 T@U) ) (!  (=> (= (type $generated@@780) $generated@@72) (= ($generated@@778 ($generated@@754 $generated@@780)) $generated@@780))
 :pattern ( ($generated@@754 $generated@@780))
)))
(assert (forall (($generated@@781 T@U) ) (!  (=> (= (type $generated@@781) $generated@@72) (= ($generated@@80 ($generated@@754 $generated@@781)) $generated@@57))
 :pattern ( ($generated@@754 $generated@@781))
)))
(assert (forall (($generated@@782 T@U) ) (! (let (($generated@@783 (type $generated@@782)))
(= ($generated@@233 $generated@@783 ($generated@@235 $generated@@782)) $generated@@782))
 :pattern ( ($generated@@235 $generated@@782))
)))
(assert (forall (($generated@@784 T@U) ($generated@@785 T@U) ($generated@@786 T@U) ) (!  (=> (and (and (= (type $generated@@784) ($generated@@539 $generated@@144 $generated@@144)) (= (type $generated@@785) $generated@@72)) (= (type $generated@@786) $generated@@72)) (= ($generated@@140 $generated@@784 ($generated@@649 $generated@@785 $generated@@786)) (forall (($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@787) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@537 $generated@@784) $generated@@787))) (and ($generated@@145 ($generated@@89 ($generated@@624 $generated@@784) $generated@@787) $generated@@786) ($generated@@145 $generated@@787 $generated@@785)))
 :pattern ( ($generated@@89 ($generated@@624 $generated@@784) $generated@@787))
 :pattern ( ($generated@@89 ($generated@@537 $generated@@784) $generated@@787))
))))
 :pattern ( ($generated@@140 $generated@@784 ($generated@@649 $generated@@785 $generated@@786)))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ) (!  (=> (and (and (= (type $generated@@788) ($generated@@557 $generated@@144 $generated@@144)) (= (type $generated@@789) $generated@@72)) (= (type $generated@@790) $generated@@72)) (= ($generated@@140 $generated@@788 ($generated@@657 $generated@@789 $generated@@790)) (forall (($generated@@791 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@555 $generated@@788) $generated@@791))) (and ($generated@@145 ($generated@@89 ($generated@@632 $generated@@788) $generated@@791) $generated@@790) ($generated@@145 $generated@@791 $generated@@789)))
 :pattern ( ($generated@@89 ($generated@@632 $generated@@788) $generated@@791))
 :pattern ( ($generated@@89 ($generated@@555 $generated@@788) $generated@@791))
))))
 :pattern ( ($generated@@140 $generated@@788 ($generated@@657 $generated@@789 $generated@@790)))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ($generated@@794 T@U) ($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ($generated@@798 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@792) $generated@@72) (= (type $generated@@793) $generated@@72)) (= (type $generated@@794) $generated@@72)) (= (type $generated@@795) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@796) $generated@@142)) (= (type $generated@@797) $generated@@144)) (= (type $generated@@798) $generated@@144)) (and (and ($generated@@230 $generated@@795) (and (and ($generated@@145 $generated@@797 $generated@@792) ($generated@@145 $generated@@798 $generated@@793)) ($generated@@140 $generated@@796 ($generated@@163 $generated@@792 $generated@@793 $generated@@794)))) ($generated@@401 ($generated@@383 $generated@@792 $generated@@793 $generated@@794 $generated@@147 $generated@@796 $generated@@797 $generated@@798) ($generated@@402 $generated@@144)))) (= ($generated@@146 $generated@@792 $generated@@793 $generated@@794 $generated@@147 $generated@@796 $generated@@797 $generated@@798) ($generated@@146 $generated@@792 $generated@@793 $generated@@794 $generated@@795 $generated@@796 $generated@@797 $generated@@798)))
 :pattern ( ($generated@@146 $generated@@792 $generated@@793 $generated@@794 $generated@@147 $generated@@796 $generated@@797 $generated@@798) ($generated@@230 $generated@@795))
 :pattern ( ($generated@@146 $generated@@792 $generated@@793 $generated@@794 $generated@@795 $generated@@796 $generated@@797 $generated@@798))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ) (!  (=> (and (= (type $generated@@801) $generated@@144) (= (type $generated@@802) $generated@@144)) (< ($generated@@799 $generated@@801) ($generated@@800 ($generated@@350 $generated@@801 $generated@@802))))
 :pattern ( ($generated@@350 $generated@@801 $generated@@802))
)))
(assert (forall (($generated@@803 T@U) ($generated@@804 T@U) ) (!  (=> (and (= (type $generated@@803) $generated@@144) (= (type $generated@@804) $generated@@144)) (< ($generated@@799 $generated@@804) ($generated@@800 ($generated@@350 $generated@@803 $generated@@804))))
 :pattern ( ($generated@@350 $generated@@803 $generated@@804))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ($generated@@808 T@U) ($generated@@809 T@U) ($generated@@810 T@U) ($generated@@811 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@805) $generated@@142) (= (type $generated@@806) $generated@@72)) (= (type $generated@@807) $generated@@72)) (= (type $generated@@808) $generated@@72)) (= (type $generated@@809) $generated@@72)) (= (type $generated@@810) $generated@@72)) (= (type $generated@@811) $generated@@72)) (and (and (and ($generated@@140 $generated@@805 ($generated@@163 $generated@@806 $generated@@807 $generated@@808)) (forall (($generated@@812 T@U) ) (!  (=> (and (= (type $generated@@812) $generated@@144) ($generated@@145 $generated@@812 $generated@@809)) ($generated@@145 $generated@@812 $generated@@806))
 :pattern ( ($generated@@145 $generated@@812 $generated@@809))
 :pattern ( ($generated@@145 $generated@@812 $generated@@806))
))) (forall (($generated@@813 T@U) ) (!  (=> (and (= (type $generated@@813) $generated@@144) ($generated@@145 $generated@@813 $generated@@810)) ($generated@@145 $generated@@813 $generated@@807))
 :pattern ( ($generated@@145 $generated@@813 $generated@@810))
 :pattern ( ($generated@@145 $generated@@813 $generated@@807))
))) (forall (($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@814) $generated@@144) ($generated@@145 $generated@@814 $generated@@808)) ($generated@@145 $generated@@814 $generated@@811))
 :pattern ( ($generated@@145 $generated@@814 $generated@@808))
 :pattern ( ($generated@@145 $generated@@814 $generated@@811))
)))) ($generated@@140 $generated@@805 ($generated@@163 $generated@@809 $generated@@810 $generated@@811)))
 :pattern ( ($generated@@140 $generated@@805 ($generated@@163 $generated@@806 $generated@@807 $generated@@808)) ($generated@@140 $generated@@805 ($generated@@163 $generated@@809 $generated@@810 $generated@@811)))
)))
(assert (forall (($generated@@815 T@U) ($generated@@816 T@U) ($generated@@817 T@U) ) (!  (=> (and (and (and (= (type $generated@@815) $generated@@144) (= (type $generated@@816) $generated@@72)) (= (type $generated@@817) $generated@@72)) ($generated@@145 $generated@@815 ($generated@@649 $generated@@816 $generated@@817))) (and (= ($generated@@235 ($generated@@233 ($generated@@539 $generated@@144 $generated@@144) $generated@@815)) $generated@@815) ($generated@@140 ($generated@@233 ($generated@@539 $generated@@144 $generated@@144) $generated@@815) ($generated@@649 $generated@@816 $generated@@817))))
 :pattern ( ($generated@@145 $generated@@815 ($generated@@649 $generated@@816 $generated@@817)))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ($generated@@820 T@U) ) (!  (=> (and (and (and (= (type $generated@@818) $generated@@144) (= (type $generated@@819) $generated@@72)) (= (type $generated@@820) $generated@@72)) ($generated@@145 $generated@@818 ($generated@@657 $generated@@819 $generated@@820))) (and (= ($generated@@235 ($generated@@233 ($generated@@557 $generated@@144 $generated@@144) $generated@@818)) $generated@@818) ($generated@@140 ($generated@@233 ($generated@@557 $generated@@144 $generated@@144) $generated@@818) ($generated@@657 $generated@@819 $generated@@820))))
 :pattern ( ($generated@@145 $generated@@818 ($generated@@657 $generated@@819 $generated@@820)))
)))
(assert (forall (($generated@@821 T@U) ($generated@@822 T@U) ($generated@@823 T@U) ) (!  (=> (and (and (and (= (type $generated@@821) $generated@@72) (= (type $generated@@822) $generated@@72)) (= (type $generated@@823) $generated@@144)) ($generated@@145 $generated@@823 ($generated@@214 $generated@@821 $generated@@822))) (and (= ($generated@@235 ($generated@@233 $generated@@215 $generated@@823)) $generated@@823) ($generated@@140 ($generated@@233 $generated@@215 $generated@@823) ($generated@@214 $generated@@821 $generated@@822))))
 :pattern ( ($generated@@145 $generated@@823 ($generated@@214 $generated@@821 $generated@@822)))
)))
(assert (forall (($generated@@824 T@U) ) (! (let (($generated@@825 (type $generated@@824)))
 (not ($generated@@0 ($generated@@89 ($generated@@402 $generated@@825) $generated@@824))))
 :pattern ( (let (($generated@@825 (type $generated@@824)))
($generated@@89 ($generated@@402 $generated@@825) $generated@@824)))
)))
(assert (forall (($generated@@826 T@U) ) (! (let (($generated@@827 (type $generated@@826)))
 (not ($generated@@0 ($generated@@89 ($generated@@681 $generated@@827) $generated@@826))))
 :pattern ( (let (($generated@@827 (type $generated@@826)))
($generated@@89 ($generated@@681 $generated@@827) $generated@@826)))
)))
(assert (forall (($generated@@828 T@U) ($generated@@829 T@U) ($generated@@830 T@U) ($generated@@831 T@U) ($generated@@832 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@828) $generated@@72) (= (type $generated@@829) $generated@@72)) (= (type $generated@@830) $generated@@72)) (= (type $generated@@831) $generated@@142)) (= (type $generated@@832) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@831 ($generated@@143 $generated@@828 $generated@@829 $generated@@830) $generated@@832) ($generated@@82 $generated@@831 ($generated@@163 $generated@@828 $generated@@829 $generated@@830) $generated@@832)))
 :pattern ( ($generated@@82 $generated@@831 ($generated@@143 $generated@@828 $generated@@829 $generated@@830) $generated@@832))
)))
(assert (forall (($generated@@833 T@U) ($generated@@834 T@U) ($generated@@835 T@U) ($generated@@836 T@U) ($generated@@837 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@833) $generated@@72) (= (type $generated@@834) $generated@@72)) (= (type $generated@@835) $generated@@72)) (= (type $generated@@836) $generated@@142)) (= (type $generated@@837) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@836 ($generated@@141 $generated@@833 $generated@@834 $generated@@835) $generated@@837) ($generated@@82 $generated@@836 ($generated@@143 $generated@@833 $generated@@834 $generated@@835) $generated@@837)))
 :pattern ( ($generated@@82 $generated@@836 ($generated@@141 $generated@@833 $generated@@834 $generated@@835) $generated@@837))
)))
(assert (forall (($generated@@838 T@U) ($generated@@839 T@U) ) (!  (=> (and (= (type $generated@@838) $generated@@72) (= (type $generated@@839) $generated@@72)) (and (= ($generated@@80 ($generated@@214 $generated@@838 $generated@@839)) $generated@@66) (= ($generated@@327 ($generated@@214 $generated@@838 $generated@@839)) $generated@@71)))
 :pattern ( ($generated@@214 $generated@@838 $generated@@839))
)))
(assert (forall (($generated@@840 T@U) ) (!  (=> (= (type $generated@@840) $generated@@215) (= ($generated@@799 ($generated@@235 $generated@@840)) ($generated@@800 $generated@@840)))
 :pattern ( ($generated@@799 ($generated@@235 $generated@@840)))
)))
(assert (forall (($generated@@841 T@U) ) (!  (=> (and (= (type $generated@@841) $generated@@144) ($generated@@145 $generated@@841 ($generated@@83 0))) (and (= ($generated@@235 ($generated@@233 $generated@@2 $generated@@841)) $generated@@841) ($generated@@140 ($generated@@233 ($generated@@84 $generated@@144 $generated@@4) $generated@@841) ($generated@@83 0))))
 :pattern ( ($generated@@145 $generated@@841 ($generated@@83 0)))
)))
(assert (forall (($generated@@842 T@U) ($generated@@843 T@U) ) (!  (=> (and (and (= (type $generated@@842) $generated@@144) (= (type $generated@@843) $generated@@72)) ($generated@@145 $generated@@842 ($generated@@368 $generated@@843))) (and (= ($generated@@235 ($generated@@233 ($generated@@84 $generated@@144 $generated@@4) $generated@@842)) $generated@@842) ($generated@@140 ($generated@@233 ($generated@@84 $generated@@144 $generated@@4) $generated@@842) ($generated@@368 $generated@@843))))
 :pattern ( ($generated@@145 $generated@@842 ($generated@@368 $generated@@843)))
)))
(assert (forall (($generated@@844 T@U) ($generated@@845 T@U) ) (!  (=> (and (and (= (type $generated@@844) $generated@@144) (= (type $generated@@845) $generated@@72)) ($generated@@145 $generated@@844 ($generated@@373 $generated@@845))) (and (= ($generated@@235 ($generated@@233 ($generated@@84 $generated@@144 $generated@@4) $generated@@844)) $generated@@844) ($generated@@140 ($generated@@233 ($generated@@84 $generated@@144 $generated@@4) $generated@@844) ($generated@@373 $generated@@845))))
 :pattern ( ($generated@@145 $generated@@844 ($generated@@373 $generated@@845)))
)))
(assert (forall (($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (and (= (type $generated@@846) $generated@@144) (= (type $generated@@847) $generated@@72)) ($generated@@145 $generated@@846 ($generated@@254 $generated@@847))) (and (= ($generated@@235 ($generated@@233 ($generated@@84 $generated@@144 $generated@@2) $generated@@846)) $generated@@846) ($generated@@140 ($generated@@233 ($generated@@84 $generated@@144 $generated@@2) $generated@@846) ($generated@@254 $generated@@847))))
 :pattern ( ($generated@@145 $generated@@846 ($generated@@254 $generated@@847)))
)))
(assert (forall (($generated@@848 T@U) ($generated@@849 T@U) ) (!  (=> (and (and (= (type $generated@@848) $generated@@144) (= (type $generated@@849) $generated@@72)) ($generated@@145 $generated@@848 ($generated@@754 $generated@@849))) (and (= ($generated@@235 ($generated@@233 ($generated@@429 $generated@@144) $generated@@848)) $generated@@848) ($generated@@140 ($generated@@233 ($generated@@429 $generated@@144) $generated@@848) ($generated@@754 $generated@@849))))
 :pattern ( ($generated@@145 $generated@@848 ($generated@@754 $generated@@849)))
)))
(assert (= ($generated@@80 $generated@@160) $generated@@61))
(assert (= ($generated@@327 $generated@@160) $generated@@67))
(assert (forall (($generated@@850 T@U) ($generated@@851 T@U) ($generated@@852 T@U) ) (!  (=> (and (and (= (type $generated@@850) ($generated@@84 $generated@@144 $generated@@2)) (= (type $generated@@851) $generated@@72)) (= (type $generated@@852) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@850 ($generated@@254 $generated@@851) $generated@@852) (forall (($generated@@853 T@U) ) (!  (=> (and (= (type $generated@@853) $generated@@144) (< 0 ($generated ($generated@@89 $generated@@850 $generated@@853)))) ($generated@@384 $generated@@853 $generated@@851 $generated@@852))
 :pattern ( ($generated@@89 $generated@@850 $generated@@853))
))))
 :pattern ( ($generated@@82 $generated@@850 ($generated@@254 $generated@@851) $generated@@852))
)))
(assert (forall (($generated@@854 T@U) ($generated@@855 T@U) ($generated@@856 T@U) ($generated@@857 T@U) ($generated@@858 T@U) ($generated@@859 T@U) ($generated@@860 T@U) ($generated@@861 T@U) ($generated@@862 T@U) ($generated@@863 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@854) $generated@@72) (= (type $generated@@855) $generated@@72)) (= (type $generated@@856) $generated@@72)) (= (type $generated@@857) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@858) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@144))) (= (type $generated@@859) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@4))) (= (type $generated@@860) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 ($generated@@84 $generated@@144 $generated@@4)))) (= (type $generated@@861) $generated@@144)) (= (type $generated@@862) $generated@@144)) (= (type $generated@@863) $generated@@144)) (= ($generated@@0 ($generated@@89 ($generated@@383 $generated@@854 $generated@@855 $generated@@856 $generated@@857 ($generated@@439 $generated@@858 $generated@@859 $generated@@860) $generated@@861 $generated@@862) $generated@@863)) ($generated@@0 ($generated@@89 ($generated@@441 $generated@@860 $generated@@857 $generated@@861 $generated@@862) $generated@@863))))
 :pattern ( ($generated@@89 ($generated@@383 $generated@@854 $generated@@855 $generated@@856 $generated@@857 ($generated@@439 $generated@@858 $generated@@859 $generated@@860) $generated@@861 $generated@@862) $generated@@863))
)))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ($generated@@866 T@U) ) (!  (=> (and (and (and (= (type $generated@@864) $generated@@215) (= (type $generated@@865) $generated@@72)) (= (type $generated@@866) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@230 $generated@@866) (and ($generated@@213 $generated@@864) (exists (($generated@@867 T@U) ) (!  (and (= (type $generated@@867) $generated@@72) ($generated@@82 $generated@@864 ($generated@@214 $generated@@865 $generated@@867) $generated@@866))
 :pattern ( ($generated@@82 $generated@@864 ($generated@@214 $generated@@865 $generated@@867) $generated@@866))
))))) ($generated@@384 ($generated@@222 $generated@@864) $generated@@865 $generated@@866))
 :pattern ( ($generated@@384 ($generated@@222 $generated@@864) $generated@@865 $generated@@866))
)))
(assert (forall (($generated@@868 T@U) ($generated@@869 T@U) ($generated@@870 T@U) ) (!  (=> (and (and (and (= (type $generated@@868) $generated@@215) (= (type $generated@@869) $generated@@72)) (= (type $generated@@870) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@230 $generated@@870) (and ($generated@@213 $generated@@868) (exists (($generated@@871 T@U) ) (!  (and (= (type $generated@@871) $generated@@72) ($generated@@82 $generated@@868 ($generated@@214 $generated@@871 $generated@@869) $generated@@870))
 :pattern ( ($generated@@82 $generated@@868 ($generated@@214 $generated@@871 $generated@@869) $generated@@870))
))))) ($generated@@384 ($generated@@223 $generated@@868) $generated@@869 $generated@@870))
 :pattern ( ($generated@@384 ($generated@@223 $generated@@868) $generated@@869 $generated@@870))
)))
(assert (forall (($generated@@872 T@U) ($generated@@873 T@U) ) (!  (=> (and (= (type $generated@@872) $generated@@144) (= (type $generated@@873) $generated@@144)) (= ($generated@@350 ($generated@@379 $generated@@872) ($generated@@379 $generated@@873)) ($generated@@379 ($generated@@350 $generated@@872 $generated@@873))))
 :pattern ( ($generated@@350 ($generated@@379 $generated@@872) ($generated@@379 $generated@@873)))
)))
(assert (forall (($generated@@874 Int) ) (! (= ($generated@@235 ($generated@@8 ($generated@@232 $generated@@874))) ($generated@@379 ($generated@@235 ($generated@@8 $generated@@874))))
 :pattern ( ($generated@@235 ($generated@@8 ($generated@@232 $generated@@874))))
)))
(assert (forall (($generated@@875 T@U) ) (! (= ($generated@@235 ($generated@@379 $generated@@875)) ($generated@@379 ($generated@@235 $generated@@875)))
 :pattern ( ($generated@@235 ($generated@@379 $generated@@875)))
)))
(assert (forall (($generated@@876 T@U) ($generated@@877 T@U) ($generated@@878 T@U) ($generated@@879 T@U) ($generated@@880 T@U) ($generated@@881 T@U) ($generated@@882 T@U) ($generated@@883 T@U) ($generated@@884 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@876) $generated@@72) (= (type $generated@@877) $generated@@72)) (= (type $generated@@878) $generated@@72)) (= (type $generated@@879) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@880) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@144))) (= (type $generated@@881) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@4))) (= (type $generated@@882) ($generated@@440 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 ($generated@@84 $generated@@144 $generated@@4)))) (= (type $generated@@883) $generated@@144)) (= (type $generated@@884) $generated@@144)) ($generated@@0 ($generated@@441 $generated@@881 $generated@@879 $generated@@883 $generated@@884))) ($generated@@146 $generated@@876 $generated@@877 $generated@@878 $generated@@879 ($generated@@439 $generated@@880 $generated@@881 $generated@@882) $generated@@883 $generated@@884))
 :pattern ( ($generated@@146 $generated@@876 $generated@@877 $generated@@878 $generated@@879 ($generated@@439 $generated@@880 $generated@@881 $generated@@882) $generated@@883 $generated@@884))
)))
(assert (forall (($generated@@885 T@U) ) (! (let (($generated@@886 ($generated@@430 (type $generated@@885))))
 (=> (and (= (type $generated@@885) ($generated@@429 $generated@@886)) (= ($generated@@428 $generated@@885) 0)) (= $generated@@885 ($generated@@427 $generated@@886))))
 :pattern ( ($generated@@428 $generated@@885))
)))
(assert (forall (($generated@@887 T@U) ($generated@@888 T@U) ($generated@@889 T@U) ) (! (let (($generated@@890 (type $generated@@888)))
 (=> (and (and (= (type $generated@@887) ($generated@@84 $generated@@890 $generated@@2)) (= (type $generated@@889) $generated@@2)) (<= 0 ($generated $generated@@889))) (= ($generated@@531 ($generated@@90 $generated@@887 $generated@@888 $generated@@889)) (+ (- ($generated@@531 $generated@@887) ($generated ($generated@@89 $generated@@887 $generated@@888))) ($generated $generated@@889)))))
 :pattern ( ($generated@@531 ($generated@@90 $generated@@887 $generated@@888 $generated@@889)))
)))
(assert (forall (($generated@@891 T@U) ($generated@@892 T@U) ) (!  (=> (and (= (type $generated@@891) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@892) $generated@@2)) ($generated@@82 $generated@@892 $generated@@46 $generated@@891))
 :pattern ( ($generated@@82 $generated@@892 $generated@@46 $generated@@891))
)))
(assert (forall (($generated@@893 T@U) ($generated@@894 T@U) ) (!  (=> (and (= (type $generated@@893) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@894) $generated@@3)) ($generated@@82 $generated@@894 $generated@@47 $generated@@893))
 :pattern ( ($generated@@82 $generated@@894 $generated@@47 $generated@@893))
)))
(assert (forall (($generated@@895 T@U) ($generated@@896 T@U) ) (!  (=> (and (= (type $generated@@895) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@896) $generated@@4)) ($generated@@82 $generated@@896 $generated@@44 $generated@@895))
 :pattern ( ($generated@@82 $generated@@896 $generated@@44 $generated@@895))
)))
(assert (forall (($generated@@897 T@U) ($generated@@898 T@U) ) (!  (=> (and (= (type $generated@@897) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@898) $generated@@712)) ($generated@@82 $generated@@898 $generated@@45 $generated@@897))
 :pattern ( ($generated@@82 $generated@@898 $generated@@45 $generated@@897))
)))
(assert (forall (($generated@@899 T@U) ($generated@@900 T@U) ) (!  (=> (and (= (type $generated@@899) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@900) $generated@@144)) ($generated@@82 $generated@@900 $generated@@48 $generated@@899))
 :pattern ( ($generated@@82 $generated@@900 $generated@@48 $generated@@899))
)))
(assert (forall (($generated@@901 T@U) ($generated@@902 T@U) ) (!  (=> (and (= (type $generated@@901) ($generated@@429 $generated@@144)) (= (type $generated@@902) $generated@@72)) (= ($generated@@140 $generated@@901 ($generated@@754 $generated@@902)) (forall (($generated@@903 Int) ) (!  (=> (and (<= 0 $generated@@903) (< $generated@@903 ($generated@@428 $generated@@901))) ($generated@@145 ($generated@@755 $generated@@901 $generated@@903) $generated@@902))
 :pattern ( ($generated@@755 $generated@@901 $generated@@903))
))))
 :pattern ( ($generated@@140 $generated@@901 ($generated@@754 $generated@@902)))
)))
(assert (forall (($generated@@905 T@U) ($generated@@906 Int) ) (!  (=> (= (type $generated@@905) ($generated@@429 $generated@@144)) (=> (and (<= 0 $generated@@906) (< $generated@@906 ($generated@@428 $generated@@905))) (< ($generated@@800 ($generated@@233 $generated@@215 ($generated@@755 $generated@@905 $generated@@906))) ($generated@@904 $generated@@905))))
 :pattern ( ($generated@@800 ($generated@@233 $generated@@215 ($generated@@755 $generated@@905 $generated@@906))))
)))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ($generated@@909 T@U) ) (!  (=> (and (and (and (= (type $generated@@907) ($generated@@539 $generated@@144 $generated@@144)) (= (type $generated@@908) $generated@@72)) (= (type $generated@@909) $generated@@72)) ($generated@@140 $generated@@907 ($generated@@649 $generated@@908 $generated@@909))) (and (and ($generated@@140 ($generated@@537 $generated@@907) ($generated@@368 $generated@@908)) ($generated@@140 ($generated@@585 $generated@@907) ($generated@@368 $generated@@909))) ($generated@@140 ($generated@@623 $generated@@907) ($generated@@368 ($generated@@214 $generated@@908 $generated@@909)))))
 :pattern ( ($generated@@140 $generated@@907 ($generated@@649 $generated@@908 $generated@@909)))
)))
(assert (forall (($generated@@910 T@U) ($generated@@911 T@U) ($generated@@912 T@U) ) (!  (=> (and (and (and (= (type $generated@@910) ($generated@@557 $generated@@144 $generated@@144)) (= (type $generated@@911) $generated@@72)) (= (type $generated@@912) $generated@@72)) ($generated@@140 $generated@@910 ($generated@@657 $generated@@911 $generated@@912))) (and (and ($generated@@140 ($generated@@555 $generated@@910) ($generated@@373 $generated@@911)) ($generated@@140 ($generated@@596 $generated@@910) ($generated@@373 $generated@@912))) ($generated@@140 ($generated@@631 $generated@@910) ($generated@@373 ($generated@@214 $generated@@911 $generated@@912)))))
 :pattern ( ($generated@@140 $generated@@910 ($generated@@657 $generated@@911 $generated@@912)))
)))
(assert (forall (($generated@@913 T@U) ) (!  (=> (= (type $generated@@913) $generated@@2) ($generated@@140 $generated@@913 $generated@@46))
 :pattern ( ($generated@@140 $generated@@913 $generated@@46))
)))
(assert (forall (($generated@@914 T@U) ) (!  (=> (= (type $generated@@914) $generated@@3) ($generated@@140 $generated@@914 $generated@@47))
 :pattern ( ($generated@@140 $generated@@914 $generated@@47))
)))
(assert (forall (($generated@@915 T@U) ) (!  (=> (= (type $generated@@915) $generated@@4) ($generated@@140 $generated@@915 $generated@@44))
 :pattern ( ($generated@@140 $generated@@915 $generated@@44))
)))
(assert (forall (($generated@@916 T@U) ) (!  (=> (= (type $generated@@916) $generated@@712) ($generated@@140 $generated@@916 $generated@@45))
 :pattern ( ($generated@@140 $generated@@916 $generated@@45))
)))
(assert (forall (($generated@@917 T@U) ) (!  (=> (= (type $generated@@917) $generated@@144) ($generated@@140 $generated@@917 $generated@@48))
 :pattern ( ($generated@@140 $generated@@917 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@918 () T@U)
(declare-fun $generated@@919 () T@U)
(declare-fun $generated@@920 () T@U)
(declare-fun $generated@@921 () T@U)
(declare-fun $generated@@922 () Int)
(declare-fun $generated@@923 () T@U)
(declare-fun $generated@@924 () T@U)
(declare-fun $generated@@925 () Int)
(declare-fun $generated@@926 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@918) $generated@@72) (= (type $generated@@919) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@920) $generated@@142)) (= (type $generated@@921) $generated@@144)) (= (type $generated@@923) ($generated@@261 $generated@@85 $generated@@4))) (= (type $generated@@924) ($generated@@261 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@927  (=> (= (ControlFlow 0 3) (- 0 2)) (or (and ($generated@@140 ($generated@@8 ($generated@@232 0)) $generated@@160) (and (<= ($generated@@232 0) ($generated@@232 0)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@918 $generated@@44 $generated@@919 $generated@@920 ($generated@@235 ($generated@@8 ($generated@@232 0))) $generated@@921))))) (or (and ($generated@@140 ($generated@@8 ($generated@@232 0)) $generated@@160) (and (<= ($generated@@232 0) ($generated@@232 0)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@918 $generated@@44 $generated@@919 $generated@@920 ($generated@@235 ($generated@@8 ($generated@@232 0))) $generated@@921))))) (or (and ($generated@@140 ($generated@@8 ($generated@@232 0)) $generated@@160) (and (<= ($generated@@232 0) ($generated@@232 0)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@918 $generated@@44 $generated@@919 $generated@@920 ($generated@@235 ($generated@@8 ($generated@@232 0))) $generated@@921))))) (exists (($generated@@928 T@U) ) (!  (and (= (type $generated@@928) $generated@@2) (and (<= ($generated@@232 0) ($generated $generated@@928)) (and (<= ($generated@@232 0) ($generated $generated@@928)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@918 $generated@@44 $generated@@919 $generated@@920 ($generated@@235 $generated@@928) $generated@@921))))))
 :no-pattern (type $generated@@928)
 :no-pattern ($generated $generated@@928)
 :no-pattern ($generated@@0 $generated@@928)
))))))))
(let (($generated@@929  (=> (and (< $generated@@922 ($generated@@232 0)) (= (ControlFlow 0 6) 3)) $generated@@927)))
(let (($generated@@930  (=> (and (<= ($generated@@232 0) $generated@@922) (= (ControlFlow 0 5) 3)) $generated@@927)))
(let (($generated@@931  (=> (<= ($generated@@232 0) $generated@@922) (and (=> (= (ControlFlow 0 7) 5) $generated@@930) (=> (= (ControlFlow 0 7) 6) $generated@@929)))))
(let (($generated@@932  (=> (and (< $generated@@922 ($generated@@232 0)) (= (ControlFlow 0 4) 3)) $generated@@927)))
(let (($generated@@933  (=> (= $generated@@923 ($generated@@315 $generated@@385 $generated@@919 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@931) (=> (= (ControlFlow 0 8) 4) $generated@@932)))))
(let (($generated@@934 true))
(let (($generated@@935  (=> (and (= $generated@@924 ($generated@@260 $generated@@385 $generated@@919 $generated@@60 false)) ($generated@@0 ($generated@@233 $generated@@4 ($generated@@234 $generated@@160 $generated@@918 $generated@@44 $generated@@919 $generated@@920 ($generated@@235 ($generated@@8 $generated@@925)) $generated@@921)))) (and (=> (= (ControlFlow 0 9) 1) $generated@@934) (=> (= (ControlFlow 0 9) 8) $generated@@933)))))
(let (($generated@@936  (=> (and (and (and ($generated@@230 $generated@@919) ($generated@@926 $generated@@919)) ($generated@@140 $generated@@920 ($generated@@141 $generated@@160 $generated@@918 $generated@@44))) (and (and (<= ($generated@@232 0) $generated@@925) ($generated@@145 $generated@@921 $generated@@918)) (and (= 1 $generated@@228) (= (ControlFlow 0 10) 9)))) $generated@@935)))
$generated@@936))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@222 (T@U) T@U)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@233 (T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@U) T@U)
(declare-fun $generated@@329 (T@U T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@348 (Int) Int)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@354 (T@U) Bool)
(declare-fun $generated@@355 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@356 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@357 (T@U T@U T@U) Bool)
(declare-fun $generated@@358 () T@U)
(declare-fun $generated@@381 (T@U T@U) Bool)
(declare-fun $generated@@382 (T@T) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@398 () Int)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@404 (T@U T@U T@U) Int)
(declare-fun $generated@@405 (T@U T@U T@U) Bool)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@413 (T@U) Int)
(declare-fun $generated@@414 (T@T) T@T)
(declare-fun $generated@@415 (T@T) T@T)
(declare-fun $generated@@424 (T@U T@U T@U) T@U)
(declare-fun $generated@@425 (T@T T@T T@T T@T) T@T)
(declare-fun $generated@@426 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@427 (T@T) T@T)
(declare-fun $generated@@428 (T@T) T@T)
(declare-fun $generated@@429 (T@T) T@T)
(declare-fun $generated@@430 (T@T) T@T)
(declare-fun $generated@@431 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@517 (T@T) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@T T@T) T@U)
(declare-fun $generated@@524 (T@T T@T) T@T)
(declare-fun $generated@@525 (T@T) T@T)
(declare-fun $generated@@526 (T@T) T@T)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@541 (T@T T@T) T@U)
(declare-fun $generated@@542 (T@T T@T) T@T)
(declare-fun $generated@@543 (T@T) T@T)
(declare-fun $generated@@544 (T@T) T@T)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@608 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@616 (T@U) T@U)
(declare-fun $generated@@617 (T@U) T@U)
(declare-fun $generated@@634 (T@U T@U Int) Int)
(declare-fun $generated@@635 (T@U T@U Int) Bool)
(declare-fun $generated@@640 (T@U T@U) T@U)
(declare-fun $generated@@648 (T@U T@U) T@U)
(declare-fun $generated@@666 (T@T) T@U)
(declare-fun $generated@@702 () T@T)
(declare-fun $generated@@710 (T@U) T@U)
(declare-fun $generated@@714 (T@U) T@U)
(declare-fun $generated@@720 (T@U) T@U)
(declare-fun $generated@@724 (T@U) T@U)
(declare-fun $generated@@732 (T@U) T@U)
(declare-fun $generated@@736 (T@U) T@U)
(declare-fun $generated@@744 (T@U) T@U)
(declare-fun $generated@@745 (T@U Int) T@U)
(declare-fun $generated@@754 (T@U) Int)
(declare-fun $generated@@756 (T@U) T@U)
(declare-fun $generated@@760 (T@U) T@U)
(declare-fun $generated@@764 (T@U) T@U)
(declare-fun $generated@@768 (T@U) T@U)
(declare-fun $generated@@789 (T@U) Int)
(declare-fun $generated@@790 (T@U) Int)
(declare-fun $generated@@904 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert  (and (and (and (and (= ($generated@@1 $generated@@142) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@141 $generated@@148 $generated@@149 $generated@@150)) $generated@@72)
 :pattern ( ($generated@@141 $generated@@148 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@143 $generated@@151 $generated@@152 $generated@@153)) $generated@@72)
 :pattern ( ($generated@@143 $generated@@151 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@144) 15)) (= (type $generated@@147) ($generated@@84 $generated@@85 $generated@@86))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@72) (= (type $generated@@155) $generated@@72)) (= (type $generated@@156) $generated@@72)) (= (type $generated@@157) $generated@@142)) (= ($generated@@140 $generated@@157 ($generated@@141 $generated@@154 $generated@@155 $generated@@156))  (and ($generated@@140 $generated@@157 ($generated@@143 $generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@144) (= (type $generated@@159) $generated@@144)) (and ($generated@@145 $generated@@158 $generated@@154) ($generated@@145 $generated@@159 $generated@@155))) ($generated@@146 $generated@@154 $generated@@155 $generated@@156 $generated@@147 $generated@@157 $generated@@158 $generated@@159))
 :no-pattern (type $generated@@158)
 :no-pattern (type $generated@@159)
 :no-pattern ($generated $generated@@158)
 :no-pattern ($generated@@0 $generated@@158)
 :no-pattern ($generated $generated@@159)
 :no-pattern ($generated@@0 $generated@@159)
)))))
 :pattern ( ($generated@@140 $generated@@157 ($generated@@141 $generated@@154 $generated@@155 $generated@@156)))
)))
(assert (= (type $generated@@160) $generated@@72))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@2) (= (type $generated@@162) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@161 $generated@@160 $generated@@162))
 :pattern ( ($generated@@82 $generated@@161 $generated@@160 $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166 $generated@@167)) $generated@@72)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166 $generated@@167))
)) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@168)) $generated@@72)
 :pattern ( ($generated@@164 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@169) $generated@@72) (= (type $generated@@170) $generated@@72)) (= (type $generated@@171) $generated@@72)) (= ($generated@@164 ($generated@@163 $generated@@169 $generated@@170 $generated@@171)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@72)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@72) (= (type $generated@@175) $generated@@72)) (= (type $generated@@176) $generated@@72)) (= ($generated@@172 ($generated@@163 $generated@@174 $generated@@175 $generated@@176)) $generated@@175))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@72)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@72) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) $generated@@72)) (= ($generated@@177 ($generated@@163 $generated@@179 $generated@@180 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@163 $generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= (type ($generated@@182 $generated@@183)) $generated@@72)
 :pattern ( ($generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@72) (= (type $generated@@185) $generated@@72)) (= (type $generated@@186) $generated@@72)) (= ($generated@@182 ($generated@@143 $generated@@184 $generated@@185 $generated@@186)) $generated@@184))
 :pattern ( ($generated@@143 $generated@@184 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@187 $generated@@188)) $generated@@72)
 :pattern ( ($generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@72) (= (type $generated@@190) $generated@@72)) (= (type $generated@@191) $generated@@72)) (= ($generated@@187 ($generated@@143 $generated@@189 $generated@@190 $generated@@191)) $generated@@190))
 :pattern ( ($generated@@143 $generated@@189 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@192 $generated@@193)) $generated@@72)
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@194) $generated@@72) (= (type $generated@@195) $generated@@72)) (= (type $generated@@196) $generated@@72)) (= ($generated@@192 ($generated@@143 $generated@@194 $generated@@195 $generated@@196)) $generated@@196))
 :pattern ( ($generated@@143 $generated@@194 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (= (type ($generated@@197 $generated@@198)) $generated@@72)
 :pattern ( ($generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@199) $generated@@72) (= (type $generated@@200) $generated@@72)) (= (type $generated@@201) $generated@@72)) (= ($generated@@197 ($generated@@141 $generated@@199 $generated@@200 $generated@@201)) $generated@@199))
 :pattern ( ($generated@@141 $generated@@199 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@202 $generated@@203)) $generated@@72)
 :pattern ( ($generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and (and (= (type $generated@@204) $generated@@72) (= (type $generated@@205) $generated@@72)) (= (type $generated@@206) $generated@@72)) (= ($generated@@202 ($generated@@141 $generated@@204 $generated@@205 $generated@@206)) $generated@@205))
 :pattern ( ($generated@@141 $generated@@204 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! (= (type ($generated@@207 $generated@@208)) $generated@@72)
 :pattern ( ($generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and (= (type $generated@@209) $generated@@72) (= (type $generated@@210) $generated@@72)) (= (type $generated@@211) $generated@@72)) (= ($generated@@207 ($generated@@141 $generated@@209 $generated@@210 $generated@@211)) $generated@@211))
 :pattern ( ($generated@@141 $generated@@209 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> (= (type $generated@@212) $generated@@2) ($generated@@140 $generated@@212 ($generated@@83 0)))
 :pattern ( ($generated@@140 $generated@@212 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@215) 16) (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@216 $generated@@217)) $generated@@72)
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and (and (= (type $generated@@218) $generated@@72) (= (type $generated@@219) $generated@@72)) (= (type $generated@@220) $generated@@215)) ($generated@@140 $generated@@220 ($generated@@214 $generated@@218 $generated@@219))) ($generated@@213 $generated@@220))
 :pattern ( ($generated@@213 $generated@@220) ($generated@@140 $generated@@220 ($generated@@214 $generated@@218 $generated@@219)))
)))
(assert  (and (forall (($generated@@224 T@U) ) (! (= (type ($generated@@222 $generated@@224)) $generated@@144)
 :pattern ( ($generated@@222 $generated@@224))
)) (forall (($generated@@225 T@U) ) (! (= (type ($generated@@223 $generated@@225)) $generated@@144)
 :pattern ( ($generated@@223 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (= (type $generated@@226) $generated@@215) (= (type $generated@@227) $generated@@215)) true) (= ($generated@@221 $generated@@226 $generated@@227)  (and (= ($generated@@222 $generated@@226) ($generated@@222 $generated@@227)) (= ($generated@@223 $generated@@226) ($generated@@223 $generated@@227)))))
 :pattern ( ($generated@@221 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@228 $generated@@230)) $generated@@72)
 :pattern ( ($generated@@228 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (= (type $generated@@231) ($generated@@84 $generated@@144 $generated@@2)) (= (type $generated@@232) $generated@@72)) ($generated@@140 $generated@@231 ($generated@@228 $generated@@232))) ($generated@@229 $generated@@231))
 :pattern ( ($generated@@140 $generated@@231 ($generated@@228 $generated@@232)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@239 $generated@@240)) 17)) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@236 ($generated@@235 $generated@@241 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@235 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@237 ($generated@@235 $generated@@243 $generated@@244)) $generated@@244)
 :pattern ( ($generated@@235 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@237 (type $generated@@245))))
(= (type ($generated@@233 $generated@@245 $generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@233 $generated@@245 $generated@@246 $generated@@247))
))) (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 (type $generated@@252)))
(let (($generated@@254 (type $generated@@250)))
(= (type ($generated@@238 $generated@@249 $generated@@250 $generated@@251 $generated@@252)) ($generated@@235 $generated@@254 $generated@@253))))
 :pattern ( ($generated@@238 $generated@@249 $generated@@250 $generated@@251 $generated@@252))
))) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (! (let (($generated@@259 ($generated@@237 (type $generated@@255))))
 (=> (= (type $generated@@258) $generated@@259) (= ($generated@@233 ($generated@@238 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@256 $generated@@257) $generated@@258)))
 :weight 0
))) (and (and (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (or (= $generated@@262 $generated@@264) (= ($generated@@233 ($generated@@238 $generated@@261 $generated@@262 $generated@@263 $generated@@260) $generated@@264 $generated@@265) ($generated@@233 $generated@@261 $generated@@264 $generated@@265)))
 :weight 0
)) (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (or (= $generated@@269 $generated@@271) (= ($generated@@233 ($generated@@238 $generated@@267 $generated@@268 $generated@@269 $generated@@266) $generated@@270 $generated@@271) ($generated@@233 $generated@@267 $generated@@270 $generated@@271)))
 :weight 0
))) (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ) (!  (or true (= ($generated@@233 ($generated@@238 $generated@@273 $generated@@274 $generated@@275 $generated@@272) $generated@@276 $generated@@277) ($generated@@233 $generated@@273 $generated@@276 $generated@@277)))
 :weight 0
)))) (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Bool) ) (! (= (type ($generated@@234 $generated@@278 $generated@@279 $generated@@280 $generated@@281)) ($generated@@235 $generated@@85 $generated@@4))
 :pattern ( ($generated@@234 $generated@@278 $generated@@279 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 Bool) ($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@75 (type $generated@@287))))
 (=> (and (and (and (and (= (type $generated@@282) $generated@@85) (= (type $generated@@283) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@284) ($generated@@74 $generated@@4))) (= (type $generated@@286) $generated@@85)) (= (type $generated@@287) ($generated@@74 $generated@@288))) (= ($generated@@0 ($generated@@233 ($generated@@234 $generated@@282 $generated@@283 $generated@@284 $generated@@285) $generated@@286 $generated@@287))  (=> (and (not (= $generated@@286 $generated@@282)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@283 $generated@@286) $generated@@284))) $generated@@285))))
 :pattern ( ($generated@@233 ($generated@@234 $generated@@282 $generated@@283 $generated@@284 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 Bool) ) (! (= (type ($generated@@289 $generated@@290 $generated@@291 $generated@@292 $generated@@293)) ($generated@@235 $generated@@85 $generated@@4))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291 $generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 Bool) ($generated@@298 T@U) ($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@75 (type $generated@@299))))
 (=> (and (and (and (and (= (type $generated@@294) $generated@@85) (= (type $generated@@295) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@296) ($generated@@74 $generated@@4))) (= (type $generated@@298) $generated@@85)) (= (type $generated@@299) ($generated@@74 $generated@@300))) (= ($generated@@0 ($generated@@233 ($generated@@289 $generated@@294 $generated@@295 $generated@@296 $generated@@297) $generated@@298 $generated@@299))  (=> (and (not (= $generated@@298 $generated@@294)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@295 $generated@@298) $generated@@296))) $generated@@297))))
 :pattern ( ($generated@@233 ($generated@@289 $generated@@294 $generated@@295 $generated@@296 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@77)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (= (type $generated@@303) $generated@@72) (= (type $generated@@304) $generated@@72)) (= (type $generated@@305) $generated@@72)) (and (= ($generated@@80 ($generated@@163 $generated@@303 $generated@@304 $generated@@305)) $generated@@62) (= ($generated@@301 ($generated@@163 $generated@@303 $generated@@304 $generated@@305)) $generated@@68)))
 :pattern ( ($generated@@163 $generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@72) (= (type $generated@@307) $generated@@72)) (= (type $generated@@308) $generated@@72)) (and (= ($generated@@80 ($generated@@143 $generated@@306 $generated@@307 $generated@@308)) $generated@@63) (= ($generated@@301 ($generated@@143 $generated@@306 $generated@@307 $generated@@308)) $generated@@69)))
 :pattern ( ($generated@@143 $generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (= (type $generated@@309) $generated@@72) (= (type $generated@@310) $generated@@72)) (= (type $generated@@311) $generated@@72)) (and (= ($generated@@80 ($generated@@141 $generated@@309 $generated@@310 $generated@@311)) $generated@@64) (= ($generated@@301 ($generated@@141 $generated@@309 $generated@@310 $generated@@311)) $generated@@70)))
 :pattern ( ($generated@@141 $generated@@309 $generated@@310 $generated@@311))
)))
(assert  (and (forall (($generated@@314 T@U) ) (! (= (type ($generated@@312 $generated@@314)) $generated@@144)
 :pattern ( ($generated@@312 $generated@@314))
)) (forall (($generated@@315 T@T) ($generated@@316 T@U) ) (! (= (type ($generated@@313 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@313 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) $generated@@72) (= (type $generated@@318) $generated@@72)) (= (type $generated@@319) $generated@@72)) (= (type $generated@@320) $generated@@144)) ($generated@@145 $generated@@320 ($generated@@163 $generated@@317 $generated@@318 $generated@@319))) (and (= ($generated@@312 ($generated@@313 $generated@@142 $generated@@320)) $generated@@320) ($generated@@140 ($generated@@313 $generated@@142 $generated@@320) ($generated@@163 $generated@@317 $generated@@318 $generated@@319))))
 :pattern ( ($generated@@145 $generated@@320 ($generated@@163 $generated@@317 $generated@@318 $generated@@319)))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@321) $generated@@72) (= (type $generated@@322) $generated@@72)) (= (type $generated@@323) $generated@@72)) (= (type $generated@@324) $generated@@144)) ($generated@@145 $generated@@324 ($generated@@143 $generated@@321 $generated@@322 $generated@@323))) (and (= ($generated@@312 ($generated@@313 $generated@@142 $generated@@324)) $generated@@324) ($generated@@140 ($generated@@313 $generated@@142 $generated@@324) ($generated@@143 $generated@@321 $generated@@322 $generated@@323))))
 :pattern ( ($generated@@145 $generated@@324 ($generated@@143 $generated@@321 $generated@@322 $generated@@323)))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@325) $generated@@72) (= (type $generated@@326) $generated@@72)) (= (type $generated@@327) $generated@@72)) (= (type $generated@@328) $generated@@144)) ($generated@@145 $generated@@328 ($generated@@141 $generated@@325 $generated@@326 $generated@@327))) (and (= ($generated@@312 ($generated@@313 $generated@@142 $generated@@328)) $generated@@328) ($generated@@140 ($generated@@313 $generated@@142 $generated@@328) ($generated@@141 $generated@@325 $generated@@326 $generated@@327))))
 :pattern ( ($generated@@145 $generated@@328 ($generated@@141 $generated@@325 $generated@@326 $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (! (= (type ($generated@@329 $generated@@330 $generated@@331)) $generated@@215)
 :pattern ( ($generated@@329 $generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (= (type $generated@@332) $generated@@72) (= (type $generated@@333) $generated@@72)) (= (type $generated@@334) $generated@@144)) (= (type $generated@@335) $generated@@144)) (= ($generated@@140 ($generated@@329 $generated@@334 $generated@@335) ($generated@@214 $generated@@332 $generated@@333))  (and ($generated@@145 $generated@@334 $generated@@332) ($generated@@145 $generated@@335 $generated@@333))))
 :pattern ( ($generated@@140 ($generated@@329 $generated@@334 $generated@@335) ($generated@@214 $generated@@332 $generated@@333)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@215) (= (type $generated@@337) $generated@@215)) (= ($generated@@221 $generated@@336 $generated@@337) (= $generated@@336 $generated@@337)))
 :pattern ( ($generated@@221 $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@72)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@341) $generated@@72)) (= ($generated@@140 $generated@@340 ($generated@@338 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@144) ($generated@@0 ($generated@@89 $generated@@340 $generated@@342))) ($generated@@145 $generated@@342 $generated@@341))
 :pattern ( ($generated@@89 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@140 $generated@@340 ($generated@@338 $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (= (type ($generated@@343 $generated@@344)) $generated@@72)
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@346) $generated@@72)) (= ($generated@@140 $generated@@345 ($generated@@343 $generated@@346)) (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@144) ($generated@@0 ($generated@@89 $generated@@345 $generated@@347))) ($generated@@145 $generated@@347 $generated@@346))
 :pattern ( ($generated@@89 $generated@@345 $generated@@347))
))))
 :pattern ( ($generated@@140 $generated@@345 ($generated@@343 $generated@@346)))
)))
(assert (forall (($generated@@349 Int) ) (! (= ($generated@@348 $generated@@349) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 (type $generated@@351)))
(= (type ($generated@@350 $generated@@351)) $generated@@352))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (= ($generated@@350 $generated@@353) $generated@@353)
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert  (and (and (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (! (= (type ($generated@@355 $generated@@359 $generated@@360 $generated@@361 $generated@@362 $generated@@363 $generated@@364 $generated@@365)) $generated@@144)
 :pattern ( ($generated@@355 $generated@@359 $generated@@360 $generated@@361 $generated@@362 $generated@@363 $generated@@364 $generated@@365))
)) (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (! (= (type ($generated@@356 $generated@@366 $generated@@367 $generated@@368 $generated@@369 $generated@@370 $generated@@371 $generated@@372)) ($generated@@84 $generated@@144 $generated@@4))
 :pattern ( ($generated@@356 $generated@@366 $generated@@367 $generated@@368 $generated@@369 $generated@@370 $generated@@371 $generated@@372))
))) (= (type $generated@@358) $generated@@85)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@373) $generated@@142) (= (type $generated@@374) $generated@@72)) (= (type $generated@@375) $generated@@72)) (= (type $generated@@376) $generated@@72)) (= (type $generated@@377) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@354 $generated@@377)) (= ($generated@@82 $generated@@373 ($generated@@163 $generated@@374 $generated@@375 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@144) (= (type $generated@@379) $generated@@144)) (=> (and (and (and ($generated@@145 $generated@@378 $generated@@374) ($generated@@357 $generated@@378 $generated@@374 $generated@@377)) (and ($generated@@145 $generated@@379 $generated@@375) ($generated@@357 $generated@@379 $generated@@375 $generated@@377))) ($generated@@146 $generated@@374 $generated@@375 $generated@@376 $generated@@377 $generated@@373 $generated@@378 $generated@@379)) (forall (($generated@@380 T@U) ) (!  (=> (= (type $generated@@380) $generated@@85) (=> (and (not (= $generated@@380 $generated@@358)) ($generated@@0 ($generated@@89 ($generated@@356 $generated@@374 $generated@@375 $generated@@376 $generated@@377 $generated@@373 $generated@@378 $generated@@379) ($generated@@312 $generated@@380)))) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@377 $generated@@380) $generated@@60))))
 :pattern ( ($generated@@89 ($generated@@356 $generated@@374 $generated@@375 $generated@@376 $generated@@377 $generated@@373 $generated@@378 $generated@@379) ($generated@@312 $generated@@380)))
))))
 :pattern ( ($generated@@355 $generated@@374 $generated@@375 $generated@@376 $generated@@377 $generated@@373 $generated@@378 $generated@@379))
 :pattern ( ($generated@@356 $generated@@374 $generated@@375 $generated@@376 $generated@@377 $generated@@373 $generated@@378 $generated@@379))
))))
 :pattern ( ($generated@@82 $generated@@373 ($generated@@163 $generated@@374 $generated@@375 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@383 T@T) ) (! (= (type ($generated@@382 $generated@@383)) ($generated@@84 $generated@@383 $generated@@4))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@384) $generated@@72) (= (type $generated@@385) $generated@@72)) (= (type $generated@@386) $generated@@72)) (= (type $generated@@387) $generated@@142)) (= ($generated@@140 $generated@@387 ($generated@@143 $generated@@384 $generated@@385 $generated@@386))  (and ($generated@@140 $generated@@387 ($generated@@163 $generated@@384 $generated@@385 $generated@@386)) (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@388) $generated@@144) (= (type $generated@@389) $generated@@144)) (and ($generated@@145 $generated@@388 $generated@@384) ($generated@@145 $generated@@389 $generated@@385))) ($generated@@381 ($generated@@356 $generated@@384 $generated@@385 $generated@@386 $generated@@147 $generated@@387 $generated@@388 $generated@@389) ($generated@@382 $generated@@144)))
 :no-pattern (type $generated@@388)
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
)))))
 :pattern ( ($generated@@140 $generated@@387 ($generated@@143 $generated@@384 $generated@@385 $generated@@386)))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@390) $generated@@72) (= (type $generated@@391) $generated@@72)) (= (type $generated@@392) $generated@@144)) (= (type $generated@@393) $generated@@144)) (= (type $generated@@394) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@354 $generated@@394)) (= ($generated@@82 ($generated@@329 $generated@@392 $generated@@393) ($generated@@214 $generated@@390 $generated@@391) $generated@@394)  (and ($generated@@357 $generated@@392 $generated@@390 $generated@@394) ($generated@@357 $generated@@393 $generated@@391 $generated@@394))))
 :pattern ( ($generated@@82 ($generated@@329 $generated@@392 $generated@@393) ($generated@@214 $generated@@390 $generated@@391) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ) (! (= (type ($generated@@395 $generated@@396)) $generated@@76)
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@215) (= ($generated@@213 $generated@@397) (= ($generated@@395 $generated@@397) $generated@@65)))
 :pattern ( ($generated@@213 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (= (type ($generated@@399 $generated@@400)) $generated@@144)
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert  (=> (< 0 $generated@@398) (forall (($generated@@401 T@U) ) (!  (=> (= (type $generated@@401) $generated@@72) ($generated@@145 ($generated@@399 $generated@@401) $generated@@401))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert  (=> (< 0 $generated@@398) (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (= (type $generated@@402) $generated@@72) (= (type $generated@@403) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@354 $generated@@403)) ($generated@@357 ($generated@@399 $generated@@402) $generated@@402 $generated@@403))
 :pattern ( ($generated@@357 ($generated@@399 $generated@@402) $generated@@402 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) $generated@@72) (= (type $generated@@407) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@408) $generated@@142)) ($generated@@405 $generated@@406 $generated@@407 $generated@@408)) (and (<= ($generated@@348 0) ($generated@@404 $generated@@406 $generated@@407 $generated@@408)) (and (<= ($generated@@348 0) ($generated@@404 $generated@@406 $generated@@407 $generated@@408)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@407 $generated@@408 ($generated@@312 ($generated@@8 ($generated@@404 $generated@@406 $generated@@407 $generated@@408))) ($generated@@312 ($generated@@11 (= ($generated@@399 $generated@@406) ($generated@@399 $generated@@406))))))))))
 :pattern ( ($generated@@404 $generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@215) ($generated@@213 $generated@@409)) (exists (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (and (and (= (type $generated@@410) $generated@@144) (= (type $generated@@411) $generated@@144)) (= $generated@@409 ($generated@@329 $generated@@410 $generated@@411)))
 :no-pattern (type $generated@@410)
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
)))
 :pattern ( ($generated@@213 $generated@@409))
)))
(assert  (and (and (forall (($generated@@416 T@T) ) (= ($generated@@1 ($generated@@414 $generated@@416)) 18)) (forall (($generated@@417 T@T) ) (! (= ($generated@@415 ($generated@@414 $generated@@417)) $generated@@417)
 :pattern ( ($generated@@414 $generated@@417))
))) (forall (($generated@@418 T@T) ) (! (= (type ($generated@@412 $generated@@418)) ($generated@@414 $generated@@418))
 :pattern ( ($generated@@412 $generated@@418))
))))
(assert (forall (($generated@@419 T@T) ) (! (= ($generated@@413 ($generated@@412 $generated@@419)) 0)
 :pattern ( ($generated@@412 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (!  (=> (= (type $generated@@420) $generated@@2) (= ($generated@@140 $generated@@420 $generated@@160) (<= ($generated@@348 0) ($generated $generated@@420))))
 :pattern ( ($generated@@140 $generated@@420 $generated@@160))
)))
(assert ($generated@@354 $generated@@147))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@72) (= (type $generated@@423) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@357 ($generated@@312 $generated@@421) $generated@@422 $generated@@423) ($generated@@82 $generated@@421 $generated@@422 $generated@@423)))
 :pattern ( ($generated@@357 ($generated@@312 $generated@@421) $generated@@422 $generated@@423))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@432 T@T) ($generated@@433 T@T) ($generated@@434 T@T) ($generated@@435 T@T) ) (= ($generated@@1 ($generated@@425 $generated@@432 $generated@@433 $generated@@434 $generated@@435)) 19)) (forall (($generated@@436 T@T) ($generated@@437 T@T) ($generated@@438 T@T) ($generated@@439 T@T) ) (! (= ($generated@@427 ($generated@@425 $generated@@436 $generated@@437 $generated@@438 $generated@@439)) $generated@@436)
 :pattern ( ($generated@@425 $generated@@436 $generated@@437 $generated@@438 $generated@@439))
))) (forall (($generated@@440 T@T) ($generated@@441 T@T) ($generated@@442 T@T) ($generated@@443 T@T) ) (! (= ($generated@@428 ($generated@@425 $generated@@440 $generated@@441 $generated@@442 $generated@@443)) $generated@@441)
 :pattern ( ($generated@@425 $generated@@440 $generated@@441 $generated@@442 $generated@@443))
))) (forall (($generated@@444 T@T) ($generated@@445 T@T) ($generated@@446 T@T) ($generated@@447 T@T) ) (! (= ($generated@@429 ($generated@@425 $generated@@444 $generated@@445 $generated@@446 $generated@@447)) $generated@@446)
 :pattern ( ($generated@@425 $generated@@444 $generated@@445 $generated@@446 $generated@@447))
))) (forall (($generated@@448 T@T) ($generated@@449 T@T) ($generated@@450 T@T) ($generated@@451 T@T) ) (! (= ($generated@@430 ($generated@@425 $generated@@448 $generated@@449 $generated@@450 $generated@@451)) $generated@@451)
 :pattern ( ($generated@@425 $generated@@448 $generated@@449 $generated@@450 $generated@@451))
))) (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@430 (type $generated@@452))))
(= (type ($generated@@426 $generated@@452 $generated@@453 $generated@@454 $generated@@455)) $generated@@456))
 :pattern ( ($generated@@426 $generated@@452 $generated@@453 $generated@@454 $generated@@455))
))) (forall (($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(let (($generated@@463 (type $generated@@460)))
(let (($generated@@464 (type $generated@@459)))
(let (($generated@@465 (type $generated@@458)))
(= (type ($generated@@431 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461)) ($generated@@425 $generated@@465 $generated@@464 $generated@@463 $generated@@462))))))
 :pattern ( ($generated@@431 $generated@@457 $generated@@458 $generated@@459 $generated@@460 $generated@@461))
))) (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@430 (type $generated@@466))))
 (=> (= (type $generated@@470) $generated@@471) (= ($generated@@426 ($generated@@431 $generated@@466 $generated@@467 $generated@@468 $generated@@469 $generated@@470) $generated@@467 $generated@@468 $generated@@469) $generated@@470)))
 :weight 0
))) (and (and (and (forall (($generated@@472 T@U) ($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (or (= $generated@@474 $generated@@477) (= ($generated@@426 ($generated@@431 $generated@@473 $generated@@474 $generated@@475 $generated@@476 $generated@@472) $generated@@477 $generated@@478 $generated@@479) ($generated@@426 $generated@@473 $generated@@477 $generated@@478 $generated@@479)))
 :weight 0
)) (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (or (= $generated@@483 $generated@@486) (= ($generated@@426 ($generated@@431 $generated@@481 $generated@@482 $generated@@483 $generated@@484 $generated@@480) $generated@@485 $generated@@486 $generated@@487) ($generated@@426 $generated@@481 $generated@@485 $generated@@486 $generated@@487)))
 :weight 0
))) (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (or (= $generated@@492 $generated@@495) (= ($generated@@426 ($generated@@431 $generated@@489 $generated@@490 $generated@@491 $generated@@492 $generated@@488) $generated@@493 $generated@@494 $generated@@495) ($generated@@426 $generated@@489 $generated@@493 $generated@@494 $generated@@495)))
 :weight 0
))) (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (or true (= ($generated@@426 ($generated@@431 $generated@@497 $generated@@498 $generated@@499 $generated@@500 $generated@@496) $generated@@501 $generated@@502 $generated@@503) ($generated@@426 $generated@@497 $generated@@501 $generated@@502 $generated@@503)))
 :weight 0
)))) (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@424 $generated@@504 $generated@@505 $generated@@506)) $generated@@142)
 :pattern ( ($generated@@424 $generated@@504 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (= (type $generated@@507) $generated@@72) (= (type $generated@@508) $generated@@72)) (= (type $generated@@509) $generated@@72)) (= (type $generated@@510) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@511) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@144))) (= (type $generated@@512) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@4))) (= (type $generated@@513) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 ($generated@@84 $generated@@144 $generated@@4)))) (= (type $generated@@514) $generated@@144)) (= (type $generated@@515) $generated@@144)) (= ($generated@@355 $generated@@507 $generated@@508 $generated@@509 $generated@@510 ($generated@@424 $generated@@511 $generated@@512 $generated@@513) $generated@@514 $generated@@515) ($generated@@426 $generated@@511 $generated@@510 $generated@@514 $generated@@515)))
 :pattern ( ($generated@@355 $generated@@507 $generated@@508 $generated@@509 $generated@@510 ($generated@@424 $generated@@511 $generated@@512 $generated@@513) $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@518 T@T) ) (! (= (type ($generated@@517 $generated@@518)) ($generated@@84 $generated@@518 $generated@@2))
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@87 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@84 $generated@@520 $generated@@2)) (and (= (= ($generated@@516 $generated@@519) 0) (= $generated@@519 ($generated@@517 $generated@@520))) (=> (not (= ($generated@@516 $generated@@519) 0)) (exists (($generated@@521 T@U) ) (!  (and (= (type $generated@@521) $generated@@520) (< 0 ($generated ($generated@@89 $generated@@519 $generated@@521))))
 :no-pattern (type $generated@@521)
 :no-pattern ($generated $generated@@521)
 :no-pattern ($generated@@0 $generated@@521)
))))))
 :pattern ( ($generated@@516 $generated@@519))
)))
(assert  (and (and (and (and (forall (($generated@@527 T@T) ($generated@@528 T@T) ) (= ($generated@@1 ($generated@@524 $generated@@527 $generated@@528)) 20)) (forall (($generated@@529 T@T) ($generated@@530 T@T) ) (! (= ($generated@@525 ($generated@@524 $generated@@529 $generated@@530)) $generated@@529)
 :pattern ( ($generated@@524 $generated@@529 $generated@@530))
))) (forall (($generated@@531 T@T) ($generated@@532 T@T) ) (! (= ($generated@@526 ($generated@@524 $generated@@531 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@524 $generated@@531 $generated@@532))
))) (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@525 (type $generated@@533))))
(= (type ($generated@@522 $generated@@533)) ($generated@@84 $generated@@534 $generated@@4)))
 :pattern ( ($generated@@522 $generated@@533))
))) (forall (($generated@@535 T@T) ($generated@@536 T@T) ) (! (= (type ($generated@@523 $generated@@535 $generated@@536)) ($generated@@524 $generated@@535 $generated@@536))
 :pattern ( ($generated@@523 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@T) ) (! (let (($generated@@539 (type $generated@@537)))
 (not ($generated@@0 ($generated@@89 ($generated@@522 ($generated@@523 $generated@@539 $generated@@538)) $generated@@537))))
 :pattern ( (let (($generated@@539 (type $generated@@537)))
($generated@@89 ($generated@@522 ($generated@@523 $generated@@539 $generated@@538)) $generated@@537)))
)))
(assert  (and (and (and (and (forall (($generated@@545 T@T) ($generated@@546 T@T) ) (= ($generated@@1 ($generated@@542 $generated@@545 $generated@@546)) 21)) (forall (($generated@@547 T@T) ($generated@@548 T@T) ) (! (= ($generated@@543 ($generated@@542 $generated@@547 $generated@@548)) $generated@@547)
 :pattern ( ($generated@@542 $generated@@547 $generated@@548))
))) (forall (($generated@@549 T@T) ($generated@@550 T@T) ) (! (= ($generated@@544 ($generated@@542 $generated@@549 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@542 $generated@@549 $generated@@550))
))) (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@543 (type $generated@@551))))
(= (type ($generated@@540 $generated@@551)) ($generated@@84 $generated@@552 $generated@@4)))
 :pattern ( ($generated@@540 $generated@@551))
))) (forall (($generated@@553 T@T) ($generated@@554 T@T) ) (! (= (type ($generated@@541 $generated@@553 $generated@@554)) ($generated@@542 $generated@@553 $generated@@554))
 :pattern ( ($generated@@541 $generated@@553 $generated@@554))
))))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@T) ) (! (let (($generated@@557 (type $generated@@555)))
 (not ($generated@@0 ($generated@@89 ($generated@@540 ($generated@@541 $generated@@557 $generated@@556)) $generated@@555))))
 :pattern ( (let (($generated@@557 (type $generated@@555)))
($generated@@89 ($generated@@540 ($generated@@541 $generated@@557 $generated@@556)) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@87 (type $generated@@558))))
 (=> (and (= (type $generated@@558) ($generated@@84 $generated@@560 $generated@@4)) (= (type $generated@@559) ($generated@@84 $generated@@560 $generated@@4))) (= ($generated@@381 $generated@@558 $generated@@559) (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@560) (= ($generated@@0 ($generated@@89 $generated@@558 $generated@@561)) ($generated@@0 ($generated@@89 $generated@@559 $generated@@561))))
 :pattern ( ($generated@@89 $generated@@558 $generated@@561))
 :pattern ( ($generated@@89 $generated@@559 $generated@@561))
)))))
 :pattern ( ($generated@@381 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@87 (type $generated@@562))))
 (=> (= (type $generated@@562) ($generated@@84 $generated@@563 $generated@@2)) (= ($generated@@229 $generated@@562) (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@563) (and (<= 0 ($generated ($generated@@89 $generated@@562 $generated@@564))) (<= ($generated ($generated@@89 $generated@@562 $generated@@564)) ($generated@@516 $generated@@562))))
 :pattern ( ($generated@@89 $generated@@562 $generated@@564))
)))))
 :pattern ( ($generated@@229 $generated@@562))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@144) ($generated@@145 $generated@@565 $generated@@160)) (and (= ($generated@@312 ($generated@@313 $generated@@2 $generated@@565)) $generated@@565) ($generated@@140 ($generated@@313 $generated@@2 $generated@@565) $generated@@160)))
 :pattern ( ($generated@@145 $generated@@565 $generated@@160))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@526 (type $generated@@566))))
(let (($generated@@568 ($generated@@525 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@524 $generated@@568 $generated@@567)) (or (= $generated@@566 ($generated@@523 $generated@@568 $generated@@567)) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@568) ($generated@@0 ($generated@@89 ($generated@@522 $generated@@566) $generated@@569)))
 :no-pattern (type $generated@@569)
 :no-pattern ($generated $generated@@569)
 :no-pattern ($generated@@0 $generated@@569)
))))))
 :pattern ( ($generated@@522 $generated@@566))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@526 (type $generated@@571))))
(= (type ($generated@@570 $generated@@571)) ($generated@@84 $generated@@572 $generated@@4)))
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@526 (type $generated@@573))))
(let (($generated@@575 ($generated@@525 (type $generated@@573))))
 (=> (= (type $generated@@573) ($generated@@524 $generated@@575 $generated@@574)) (or (= $generated@@573 ($generated@@523 $generated@@575 $generated@@574)) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@574) ($generated@@0 ($generated@@89 ($generated@@570 $generated@@573) $generated@@576)))
 :no-pattern (type $generated@@576)
 :no-pattern ($generated $generated@@576)
 :no-pattern ($generated@@0 $generated@@576)
))))))
 :pattern ( ($generated@@570 $generated@@573))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@544 (type $generated@@577))))
(let (($generated@@579 ($generated@@543 (type $generated@@577))))
 (=> (= (type $generated@@577) ($generated@@542 $generated@@579 $generated@@578)) (or (= $generated@@577 ($generated@@541 $generated@@579 $generated@@578)) (exists (($generated@@580 T@U) ) (!  (and (= (type $generated@@580) $generated@@579) ($generated@@0 ($generated@@89 ($generated@@540 $generated@@577) $generated@@580)))
 :no-pattern (type $generated@@580)
 :no-pattern ($generated $generated@@580)
 :no-pattern ($generated@@0 $generated@@580)
))))))
 :pattern ( ($generated@@540 $generated@@577))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 ($generated@@544 (type $generated@@582))))
(= (type ($generated@@581 $generated@@582)) ($generated@@84 $generated@@583 $generated@@4)))
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@544 (type $generated@@584))))
(let (($generated@@586 ($generated@@543 (type $generated@@584))))
 (=> (= (type $generated@@584) ($generated@@542 $generated@@586 $generated@@585)) (or (= $generated@@584 ($generated@@541 $generated@@586 $generated@@585)) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@585) ($generated@@0 ($generated@@89 ($generated@@581 $generated@@584) $generated@@587)))
 :no-pattern (type $generated@@587)
 :no-pattern ($generated $generated@@587)
 :no-pattern ($generated@@0 $generated@@587)
))))))
 :pattern ( ($generated@@581 $generated@@584))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@84 $generated@@144 $generated@@2)) (= (type $generated@@589) $generated@@72)) (= ($generated@@140 $generated@@588 ($generated@@228 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@144) (< 0 ($generated ($generated@@89 $generated@@588 $generated@@590)))) ($generated@@145 $generated@@590 $generated@@589))
 :pattern ( ($generated@@89 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@140 $generated@@588 ($generated@@228 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@142) (= (type $generated@@592) $generated@@72)) (= (type $generated@@593) $generated@@72)) (= (type $generated@@594) $generated@@72)) (= ($generated@@140 $generated@@591 ($generated@@163 $generated@@592 $generated@@593 $generated@@594)) (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@596) $generated@@144)) (= (type $generated@@597) $generated@@144)) (and (and ($generated@@354 $generated@@595) (and ($generated@@145 $generated@@596 $generated@@592) ($generated@@145 $generated@@597 $generated@@593))) ($generated@@146 $generated@@592 $generated@@593 $generated@@594 $generated@@595 $generated@@591 $generated@@596 $generated@@597))) ($generated@@145 ($generated@@355 $generated@@592 $generated@@593 $generated@@594 $generated@@595 $generated@@591 $generated@@596 $generated@@597) $generated@@594))
 :pattern ( ($generated@@355 $generated@@592 $generated@@593 $generated@@594 $generated@@595 $generated@@591 $generated@@596 $generated@@597))
))))
 :pattern ( ($generated@@140 $generated@@591 ($generated@@163 $generated@@592 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@599) $generated@@72)) (= (type $generated@@600) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@598 ($generated@@338 $generated@@599) $generated@@600) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@144) ($generated@@0 ($generated@@89 $generated@@598 $generated@@601))) ($generated@@357 $generated@@601 $generated@@599 $generated@@600))
 :pattern ( ($generated@@89 $generated@@598 $generated@@601))
))))
 :pattern ( ($generated@@82 $generated@@598 ($generated@@338 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@84 $generated@@144 $generated@@4)) (= (type $generated@@603) $generated@@72)) (= (type $generated@@604) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@602 ($generated@@343 $generated@@603) $generated@@604) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@144) ($generated@@0 ($generated@@89 $generated@@602 $generated@@605))) ($generated@@357 $generated@@605 $generated@@603 $generated@@604))
 :pattern ( ($generated@@89 $generated@@602 $generated@@605))
))))
 :pattern ( ($generated@@82 $generated@@602 ($generated@@343 $generated@@603) $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
(= ($generated ($generated@@89 ($generated@@517 $generated@@607) $generated@@606)) 0))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@89 ($generated@@517 $generated@@607) $generated@@606)))
)))
(assert  (and (forall (($generated@@610 T@U) ) (! (= (type ($generated@@608 $generated@@610)) ($generated@@84 $generated@@144 $generated@@4))
 :pattern ( ($generated@@608 $generated@@610))
)) (forall (($generated@@611 T@U) ) (! (let (($generated@@612 ($generated@@526 (type $generated@@611))))
(let (($generated@@613 ($generated@@525 (type $generated@@611))))
(= (type ($generated@@609 $generated@@611)) ($generated@@84 $generated@@613 $generated@@612))))
 :pattern ( ($generated@@609 $generated@@611))
))))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@524 $generated@@144 $generated@@144)) (= (type $generated@@615) $generated@@144)) (= ($generated@@0 ($generated@@89 ($generated@@608 $generated@@614) $generated@@615))  (and ($generated@@0 ($generated@@89 ($generated@@522 $generated@@614) ($generated@@222 ($generated@@313 $generated@@215 $generated@@615)))) (= ($generated@@89 ($generated@@609 $generated@@614) ($generated@@222 ($generated@@313 $generated@@215 $generated@@615))) ($generated@@223 ($generated@@313 $generated@@215 $generated@@615))))))
 :pattern ( ($generated@@89 ($generated@@608 $generated@@614) $generated@@615))
)))
(assert  (and (forall (($generated@@618 T@U) ) (! (= (type ($generated@@616 $generated@@618)) ($generated@@84 $generated@@144 $generated@@4))
 :pattern ( ($generated@@616 $generated@@618))
)) (forall (($generated@@619 T@U) ) (! (let (($generated@@620 ($generated@@544 (type $generated@@619))))
(let (($generated@@621 ($generated@@543 (type $generated@@619))))
(= (type ($generated@@617 $generated@@619)) ($generated@@84 $generated@@621 $generated@@620))))
 :pattern ( ($generated@@617 $generated@@619))
))))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@542 $generated@@144 $generated@@144)) (= (type $generated@@623) $generated@@144)) (= ($generated@@0 ($generated@@89 ($generated@@616 $generated@@622) $generated@@623))  (and ($generated@@0 ($generated@@89 ($generated@@540 $generated@@622) ($generated@@222 ($generated@@313 $generated@@215 $generated@@623)))) (= ($generated@@89 ($generated@@617 $generated@@622) ($generated@@222 ($generated@@313 $generated@@215 $generated@@623))) ($generated@@223 ($generated@@313 $generated@@215 $generated@@623))))))
 :pattern ( ($generated@@89 ($generated@@616 $generated@@622) $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@625)))
(let (($generated@@627 ($generated@@525 (type $generated@@624))))
 (=> (= (type $generated@@624) ($generated@@524 $generated@@627 $generated@@626)) (= ($generated@@0 ($generated@@89 ($generated@@570 $generated@@624) $generated@@625)) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@627) (and ($generated@@0 ($generated@@89 ($generated@@522 $generated@@624) $generated@@628)) (= $generated@@625 ($generated@@89 ($generated@@609 $generated@@624) $generated@@628))))
 :pattern ( ($generated@@89 ($generated@@522 $generated@@624) $generated@@628))
 :pattern ( ($generated@@89 ($generated@@609 $generated@@624) $generated@@628))
))))))
 :pattern ( ($generated@@89 ($generated@@570 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 (type $generated@@630)))
(let (($generated@@632 ($generated@@543 (type $generated@@629))))
 (=> (= (type $generated@@629) ($generated@@542 $generated@@632 $generated@@631)) (= ($generated@@0 ($generated@@89 ($generated@@581 $generated@@629) $generated@@630)) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@632) (and ($generated@@0 ($generated@@89 ($generated@@540 $generated@@629) $generated@@633)) (= $generated@@630 ($generated@@89 ($generated@@617 $generated@@629) $generated@@633))))
 :pattern ( ($generated@@89 ($generated@@540 $generated@@629) $generated@@633))
 :pattern ( ($generated@@89 ($generated@@617 $generated@@629) $generated@@633))
))))))
 :pattern ( ($generated@@89 ($generated@@581 $generated@@629) $generated@@630))
)))
(assert  (=> (<= 1 $generated@@398) (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 Int) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@72) (= (type $generated@@637) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@638) $generated@@142)) (or ($generated@@635 $generated@@636 $generated@@638 $generated@@639) (and (not (= 1 $generated@@398)) (and (and (and ($generated@@354 $generated@@637) ($generated@@140 $generated@@638 ($generated@@141 $generated@@160 $generated@@44 $generated@@44))) (<= ($generated@@348 0) $generated@@639)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@637 $generated@@638 ($generated@@312 ($generated@@8 $generated@@639)) ($generated@@312 ($generated@@350 ($generated@@11 true)))))))))) (<= ($generated@@348 0) ($generated@@634 $generated@@636 $generated@@638 $generated@@639)))
 :pattern ( ($generated@@634 $generated@@636 $generated@@638 $generated@@639) ($generated@@354 $generated@@637))
))))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (! (= (type ($generated@@640 $generated@@641 $generated@@642)) $generated@@72)
 :pattern ( ($generated@@640 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@524 $generated@@144 $generated@@144)) (= (type $generated@@644) $generated@@72)) (= (type $generated@@645) $generated@@72)) (= (type $generated@@646) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@643 ($generated@@640 $generated@@644 $generated@@645) $generated@@646) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@522 $generated@@643) $generated@@647))) (and ($generated@@357 ($generated@@89 ($generated@@609 $generated@@643) $generated@@647) $generated@@645 $generated@@646) ($generated@@357 $generated@@647 $generated@@644 $generated@@646)))
 :pattern ( ($generated@@89 ($generated@@609 $generated@@643) $generated@@647))
 :pattern ( ($generated@@89 ($generated@@522 $generated@@643) $generated@@647))
))))
 :pattern ( ($generated@@82 $generated@@643 ($generated@@640 $generated@@644 $generated@@645) $generated@@646))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (! (= (type ($generated@@648 $generated@@649 $generated@@650)) $generated@@72)
 :pattern ( ($generated@@648 $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@651) ($generated@@542 $generated@@144 $generated@@144)) (= (type $generated@@652) $generated@@72)) (= (type $generated@@653) $generated@@72)) (= (type $generated@@654) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@651 ($generated@@648 $generated@@652 $generated@@653) $generated@@654) (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@540 $generated@@651) $generated@@655))) (and ($generated@@357 ($generated@@89 ($generated@@617 $generated@@651) $generated@@655) $generated@@653 $generated@@654) ($generated@@357 $generated@@655 $generated@@652 $generated@@654)))
 :pattern ( ($generated@@89 ($generated@@617 $generated@@651) $generated@@655))
 :pattern ( ($generated@@89 ($generated@@540 $generated@@651) $generated@@655))
))))
 :pattern ( ($generated@@82 $generated@@651 ($generated@@648 $generated@@652 $generated@@653) $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (! (let (($generated@@658 ($generated@@87 (type $generated@@656))))
 (=> (and (and (= (type $generated@@656) ($generated@@84 $generated@@658 $generated@@4)) (= (type $generated@@657) ($generated@@84 $generated@@658 $generated@@4))) ($generated@@381 $generated@@656 $generated@@657)) (= $generated@@656 $generated@@657)))
 :pattern ( ($generated@@381 $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@659) $generated@@72) (= (type $generated@@660) $generated@@72)) (= (type $generated@@661) $generated@@72)) (= (type $generated@@662) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@663) $generated@@142)) (= (type $generated@@664) $generated@@144)) (= (type $generated@@665) $generated@@144)) (and ($generated@@354 $generated@@662) (and (and ($generated@@145 $generated@@664 $generated@@659) ($generated@@145 $generated@@665 $generated@@660)) ($generated@@140 $generated@@663 ($generated@@163 $generated@@659 $generated@@660 $generated@@661))))) (= ($generated@@381 ($generated@@356 $generated@@659 $generated@@660 $generated@@661 $generated@@147 $generated@@663 $generated@@664 $generated@@665) ($generated@@382 $generated@@144)) ($generated@@381 ($generated@@356 $generated@@659 $generated@@660 $generated@@661 $generated@@662 $generated@@663 $generated@@664 $generated@@665) ($generated@@382 $generated@@144))))
 :pattern ( ($generated@@356 $generated@@659 $generated@@660 $generated@@661 $generated@@147 $generated@@663 $generated@@664 $generated@@665) ($generated@@354 $generated@@662))
 :pattern ( ($generated@@356 $generated@@659 $generated@@660 $generated@@661 $generated@@662 $generated@@663 $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@667 T@T) ) (! (= (type ($generated@@666 $generated@@667)) ($generated@@84 $generated@@667 $generated@@4))
 :pattern ( ($generated@@666 $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@544 (type $generated@@668))))
(let (($generated@@670 ($generated@@543 (type $generated@@668))))
 (=> (= (type $generated@@668) ($generated@@542 $generated@@670 $generated@@669)) (= (= $generated@@668 ($generated@@541 $generated@@670 $generated@@669)) (= ($generated@@540 $generated@@668) ($generated@@666 $generated@@670))))))
 :pattern ( ($generated@@540 $generated@@668))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 ($generated@@544 (type $generated@@671))))
(let (($generated@@673 ($generated@@543 (type $generated@@671))))
 (=> (= (type $generated@@671) ($generated@@542 $generated@@673 $generated@@672)) (= (= $generated@@671 ($generated@@541 $generated@@673 $generated@@672)) (= ($generated@@581 $generated@@671) ($generated@@666 $generated@@672))))))
 :pattern ( ($generated@@581 $generated@@671))
)))
(assert (forall (($generated@@674 T@U) ) (! (let (($generated@@675 ($generated@@544 (type $generated@@674))))
(let (($generated@@676 ($generated@@543 (type $generated@@674))))
 (=> (= (type $generated@@674) ($generated@@542 $generated@@676 $generated@@675)) (= (= $generated@@674 ($generated@@541 $generated@@676 $generated@@675)) (= ($generated@@616 $generated@@674) ($generated@@666 $generated@@144))))))
 :pattern ( ($generated@@616 $generated@@674))
)))
(assert  (=> (<= 1 $generated@@398) (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ($generated@@680 Int) ) (!  (=> (and (and (and (= (type $generated@@677) $generated@@72) (= (type $generated@@678) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@679) $generated@@142)) (or ($generated@@635 $generated@@677 $generated@@679 $generated@@680) (and (not (= 1 $generated@@398)) (and (and (and ($generated@@354 $generated@@678) ($generated@@140 $generated@@679 ($generated@@141 $generated@@160 $generated@@44 $generated@@44))) (<= ($generated@@348 0) $generated@@680)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@678 $generated@@679 ($generated@@312 ($generated@@8 $generated@@680)) ($generated@@312 ($generated@@350 ($generated@@11 true)))))))))) (and ($generated@@405 $generated@@677 $generated@@678 $generated@@679) (= ($generated@@634 $generated@@677 $generated@@679 $generated@@680) (let (($generated@@681 ($generated@@404 $generated@@677 $generated@@678 $generated@@679)))
$generated@@681))))
 :pattern ( ($generated@@634 $generated@@677 $generated@@679 $generated@@680) ($generated@@354 $generated@@678))
))))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@682) $generated@@142) (= (type $generated@@683) $generated@@72)) (= (type $generated@@684) $generated@@72)) (= (type $generated@@685) $generated@@72)) (= (type $generated@@686) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@354 $generated@@686) ($generated@@82 $generated@@682 ($generated@@163 $generated@@683 $generated@@684 $generated@@685) $generated@@686))) (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@144) (= (type $generated@@688) $generated@@144)) (=> (and (and ($generated@@357 $generated@@687 $generated@@683 $generated@@686) ($generated@@357 $generated@@688 $generated@@684 $generated@@686)) ($generated@@146 $generated@@683 $generated@@684 $generated@@685 $generated@@686 $generated@@682 $generated@@687 $generated@@688)) ($generated@@357 ($generated@@355 $generated@@683 $generated@@684 $generated@@685 $generated@@686 $generated@@682 $generated@@687 $generated@@688) $generated@@685 $generated@@686)))
 :pattern ( ($generated@@355 $generated@@683 $generated@@684 $generated@@685 $generated@@686 $generated@@682 $generated@@687 $generated@@688))
)))
 :pattern ( ($generated@@82 $generated@@682 ($generated@@163 $generated@@683 $generated@@684 $generated@@685) $generated@@686))
)))
(assert (forall (($generated@@689 T@U) ) (! (let (($generated@@690 ($generated@@526 (type $generated@@689))))
(let (($generated@@691 ($generated@@525 (type $generated@@689))))
 (=> (= (type $generated@@689) ($generated@@524 $generated@@691 $generated@@690)) (or (= $generated@@689 ($generated@@523 $generated@@691 $generated@@690)) (exists (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (and (and (= (type $generated@@692) $generated@@144) (= (type $generated@@693) $generated@@144)) ($generated@@0 ($generated@@89 ($generated@@608 $generated@@689) ($generated@@312 ($generated@@329 $generated@@692 $generated@@693)))))
 :no-pattern (type $generated@@692)
 :no-pattern (type $generated@@693)
 :no-pattern ($generated $generated@@692)
 :no-pattern ($generated@@0 $generated@@692)
 :no-pattern ($generated $generated@@693)
 :no-pattern ($generated@@0 $generated@@693)
))))))
 :pattern ( ($generated@@608 $generated@@689))
)))
(assert (forall (($generated@@694 T@U) ) (! (let (($generated@@695 ($generated@@544 (type $generated@@694))))
(let (($generated@@696 ($generated@@543 (type $generated@@694))))
 (=> (= (type $generated@@694) ($generated@@542 $generated@@696 $generated@@695)) (or (= $generated@@694 ($generated@@541 $generated@@696 $generated@@695)) (exists (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (and (and (= (type $generated@@697) $generated@@144) (= (type $generated@@698) $generated@@144)) ($generated@@0 ($generated@@89 ($generated@@616 $generated@@694) ($generated@@312 ($generated@@329 $generated@@697 $generated@@698)))))
 :no-pattern (type $generated@@697)
 :no-pattern (type $generated@@698)
 :no-pattern ($generated $generated@@697)
 :no-pattern ($generated@@0 $generated@@697)
 :no-pattern ($generated $generated@@698)
 :no-pattern ($generated@@0 $generated@@698)
))))))
 :pattern ( ($generated@@616 $generated@@694))
)))
(assert (forall (($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@699) $generated@@144) ($generated@@145 $generated@@699 $generated@@46)) (and (= ($generated@@312 ($generated@@313 $generated@@2 $generated@@699)) $generated@@699) ($generated@@140 ($generated@@313 $generated@@2 $generated@@699) $generated@@46)))
 :pattern ( ($generated@@145 $generated@@699 $generated@@46))
)))
(assert (forall (($generated@@700 T@U) ) (!  (=> (and (= (type $generated@@700) $generated@@144) ($generated@@145 $generated@@700 $generated@@47)) (and (= ($generated@@312 ($generated@@313 $generated@@3 $generated@@700)) $generated@@700) ($generated@@140 ($generated@@313 $generated@@3 $generated@@700) $generated@@47)))
 :pattern ( ($generated@@145 $generated@@700 $generated@@47))
)))
(assert (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@144) ($generated@@145 $generated@@701 $generated@@44)) (and (= ($generated@@312 ($generated@@313 $generated@@4 $generated@@701)) $generated@@701) ($generated@@140 ($generated@@313 $generated@@4 $generated@@701) $generated@@44)))
 :pattern ( ($generated@@145 $generated@@701 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@702) 22))
(assert (forall (($generated@@703 T@U) ) (!  (=> (and (= (type $generated@@703) $generated@@144) ($generated@@145 $generated@@703 $generated@@45)) (and (= ($generated@@312 ($generated@@313 $generated@@702 $generated@@703)) $generated@@703) ($generated@@140 ($generated@@313 $generated@@702 $generated@@703) $generated@@45)))
 :pattern ( ($generated@@145 $generated@@703 $generated@@45))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@72) (= ($generated@@145 ($generated@@312 $generated@@704) $generated@@705) ($generated@@140 $generated@@704 $generated@@705)))
 :pattern ( ($generated@@145 ($generated@@312 $generated@@704) $generated@@705))
)))
(assert (forall (($generated@@706 T@U) ) (! (let (($generated@@707 ($generated@@87 (type $generated@@706))))
 (=> (= (type $generated@@706) ($generated@@84 $generated@@707 $generated@@2)) (<= 0 ($generated@@516 $generated@@706))))
 :pattern ( ($generated@@516 $generated@@706))
)))
(assert (forall (($generated@@708 T@U) ) (! (let (($generated@@709 ($generated@@415 (type $generated@@708))))
 (=> (= (type $generated@@708) ($generated@@414 $generated@@709)) (<= 0 ($generated@@413 $generated@@708))))
 :pattern ( ($generated@@413 $generated@@708))
)))
(assert (forall (($generated@@711 T@U) ) (! (= (type ($generated@@710 $generated@@711)) $generated@@72)
 :pattern ( ($generated@@710 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (= (type $generated@@712) $generated@@72) (= (type $generated@@713) $generated@@72)) (= ($generated@@710 ($generated@@640 $generated@@712 $generated@@713)) $generated@@712))
 :pattern ( ($generated@@640 $generated@@712 $generated@@713))
)))
(assert (forall (($generated@@715 T@U) ) (! (= (type ($generated@@714 $generated@@715)) $generated@@72)
 :pattern ( ($generated@@714 $generated@@715))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) $generated@@72) (= (type $generated@@717) $generated@@72)) (= ($generated@@714 ($generated@@640 $generated@@716 $generated@@717)) $generated@@717))
 :pattern ( ($generated@@640 $generated@@716 $generated@@717))
)))
(assert (forall (($generated@@718 T@U) ($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@718) $generated@@72) (= (type $generated@@719) $generated@@72)) (= ($generated@@80 ($generated@@640 $generated@@718 $generated@@719)) $generated@@58))
 :pattern ( ($generated@@640 $generated@@718 $generated@@719))
)))
(assert (forall (($generated@@721 T@U) ) (! (= (type ($generated@@720 $generated@@721)) $generated@@72)
 :pattern ( ($generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (= (type $generated@@722) $generated@@72) (= (type $generated@@723) $generated@@72)) (= ($generated@@720 ($generated@@648 $generated@@722 $generated@@723)) $generated@@722))
 :pattern ( ($generated@@648 $generated@@722 $generated@@723))
)))
(assert (forall (($generated@@725 T@U) ) (! (= (type ($generated@@724 $generated@@725)) $generated@@72)
 :pattern ( ($generated@@724 $generated@@725))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@72) (= (type $generated@@727) $generated@@72)) (= ($generated@@724 ($generated@@648 $generated@@726 $generated@@727)) $generated@@727))
 :pattern ( ($generated@@648 $generated@@726 $generated@@727))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) $generated@@72) (= (type $generated@@729) $generated@@72)) (= ($generated@@80 ($generated@@648 $generated@@728 $generated@@729)) $generated@@59))
 :pattern ( ($generated@@648 $generated@@728 $generated@@729))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@730) $generated@@144) (= (type $generated@@731) $generated@@144)) (= ($generated@@395 ($generated@@329 $generated@@730 $generated@@731)) $generated@@65))
 :pattern ( ($generated@@329 $generated@@730 $generated@@731))
)))
(assert (forall (($generated@@733 T@U) ) (! (= (type ($generated@@732 $generated@@733)) $generated@@72)
 :pattern ( ($generated@@732 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@734) $generated@@72) (= (type $generated@@735) $generated@@72)) (= ($generated@@732 ($generated@@214 $generated@@734 $generated@@735)) $generated@@734))
 :pattern ( ($generated@@214 $generated@@734 $generated@@735))
)))
(assert (forall (($generated@@737 T@U) ) (! (= (type ($generated@@736 $generated@@737)) $generated@@72)
 :pattern ( ($generated@@736 $generated@@737))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) $generated@@72) (= (type $generated@@739) $generated@@72)) (= ($generated@@736 ($generated@@214 $generated@@738 $generated@@739)) $generated@@739))
 :pattern ( ($generated@@214 $generated@@738 $generated@@739))
)))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ) (!  (=> (and (= (type $generated@@740) $generated@@144) (= (type $generated@@741) $generated@@144)) (= ($generated@@222 ($generated@@329 $generated@@740 $generated@@741)) $generated@@740))
 :pattern ( ($generated@@329 $generated@@740 $generated@@741))
)))
(assert (forall (($generated@@742 T@U) ($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@742) $generated@@144) (= (type $generated@@743) $generated@@144)) (= ($generated@@223 ($generated@@329 $generated@@742 $generated@@743)) $generated@@743))
 :pattern ( ($generated@@329 $generated@@742 $generated@@743))
)))
(assert  (and (forall (($generated@@746 T@U) ) (! (= (type ($generated@@744 $generated@@746)) $generated@@72)
 :pattern ( ($generated@@744 $generated@@746))
)) (forall (($generated@@747 T@U) ($generated@@748 Int) ) (! (let (($generated@@749 ($generated@@415 (type $generated@@747))))
(= (type ($generated@@745 $generated@@747 $generated@@748)) $generated@@749))
 :pattern ( ($generated@@745 $generated@@747 $generated@@748))
))))
(assert (forall (($generated@@750 T@U) ($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (and (= (type $generated@@750) ($generated@@414 $generated@@144)) (= (type $generated@@751) $generated@@72)) (= (type $generated@@752) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@750 ($generated@@744 $generated@@751) $generated@@752) (forall (($generated@@753 Int) ) (!  (=> (and (<= 0 $generated@@753) (< $generated@@753 ($generated@@413 $generated@@750))) ($generated@@357 ($generated@@745 $generated@@750 $generated@@753) $generated@@751 $generated@@752))
 :pattern ( ($generated@@745 $generated@@750 $generated@@753))
))))
 :pattern ( ($generated@@82 $generated@@750 ($generated@@744 $generated@@751) $generated@@752))
)))
(assert (forall (($generated@@755 Int) ) (! (= ($generated@@754 ($generated@@83 $generated@@755)) $generated@@755)
 :pattern ( ($generated@@83 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ) (! (= (type ($generated@@756 $generated@@757)) $generated@@72)
 :pattern ( ($generated@@756 $generated@@757))
)))
(assert (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@72) (= ($generated@@756 ($generated@@338 $generated@@758)) $generated@@758))
 :pattern ( ($generated@@338 $generated@@758))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@72) (= ($generated@@80 ($generated@@338 $generated@@759)) $generated@@54))
 :pattern ( ($generated@@338 $generated@@759))
)))
(assert (forall (($generated@@761 T@U) ) (! (= (type ($generated@@760 $generated@@761)) $generated@@72)
 :pattern ( ($generated@@760 $generated@@761))
)))
(assert (forall (($generated@@762 T@U) ) (!  (=> (= (type $generated@@762) $generated@@72) (= ($generated@@760 ($generated@@343 $generated@@762)) $generated@@762))
 :pattern ( ($generated@@343 $generated@@762))
)))
(assert (forall (($generated@@763 T@U) ) (!  (=> (= (type $generated@@763) $generated@@72) (= ($generated@@80 ($generated@@343 $generated@@763)) $generated@@55))
 :pattern ( ($generated@@343 $generated@@763))
)))
(assert (forall (($generated@@765 T@U) ) (! (= (type ($generated@@764 $generated@@765)) $generated@@72)
 :pattern ( ($generated@@764 $generated@@765))
)))
(assert (forall (($generated@@766 T@U) ) (!  (=> (= (type $generated@@766) $generated@@72) (= ($generated@@764 ($generated@@228 $generated@@766)) $generated@@766))
 :pattern ( ($generated@@228 $generated@@766))
)))
(assert (forall (($generated@@767 T@U) ) (!  (=> (= (type $generated@@767) $generated@@72) (= ($generated@@80 ($generated@@228 $generated@@767)) $generated@@56))
 :pattern ( ($generated@@228 $generated@@767))
)))
(assert (forall (($generated@@769 T@U) ) (! (= (type ($generated@@768 $generated@@769)) $generated@@72)
 :pattern ( ($generated@@768 $generated@@769))
)))
(assert (forall (($generated@@770 T@U) ) (!  (=> (= (type $generated@@770) $generated@@72) (= ($generated@@768 ($generated@@744 $generated@@770)) $generated@@770))
 :pattern ( ($generated@@744 $generated@@770))
)))
(assert (forall (($generated@@771 T@U) ) (!  (=> (= (type $generated@@771) $generated@@72) (= ($generated@@80 ($generated@@744 $generated@@771)) $generated@@57))
 :pattern ( ($generated@@744 $generated@@771))
)))
(assert (forall (($generated@@772 T@U) ) (! (let (($generated@@773 (type $generated@@772)))
(= ($generated@@313 $generated@@773 ($generated@@312 $generated@@772)) $generated@@772))
 :pattern ( ($generated@@312 $generated@@772))
)))
(assert (forall (($generated@@774 T@U) ($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (and (= (type $generated@@774) ($generated@@524 $generated@@144 $generated@@144)) (= (type $generated@@775) $generated@@72)) (= (type $generated@@776) $generated@@72)) (= ($generated@@140 $generated@@774 ($generated@@640 $generated@@775 $generated@@776)) (forall (($generated@@777 T@U) ) (!  (=> (and (= (type $generated@@777) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@522 $generated@@774) $generated@@777))) (and ($generated@@145 ($generated@@89 ($generated@@609 $generated@@774) $generated@@777) $generated@@776) ($generated@@145 $generated@@777 $generated@@775)))
 :pattern ( ($generated@@89 ($generated@@609 $generated@@774) $generated@@777))
 :pattern ( ($generated@@89 ($generated@@522 $generated@@774) $generated@@777))
))))
 :pattern ( ($generated@@140 $generated@@774 ($generated@@640 $generated@@775 $generated@@776)))
)))
(assert (forall (($generated@@778 T@U) ($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (and (= (type $generated@@778) ($generated@@542 $generated@@144 $generated@@144)) (= (type $generated@@779) $generated@@72)) (= (type $generated@@780) $generated@@72)) (= ($generated@@140 $generated@@778 ($generated@@648 $generated@@779 $generated@@780)) (forall (($generated@@781 T@U) ) (!  (=> (and (= (type $generated@@781) $generated@@144) ($generated@@0 ($generated@@89 ($generated@@540 $generated@@778) $generated@@781))) (and ($generated@@145 ($generated@@89 ($generated@@617 $generated@@778) $generated@@781) $generated@@780) ($generated@@145 $generated@@781 $generated@@779)))
 :pattern ( ($generated@@89 ($generated@@617 $generated@@778) $generated@@781))
 :pattern ( ($generated@@89 ($generated@@540 $generated@@778) $generated@@781))
))))
 :pattern ( ($generated@@140 $generated@@778 ($generated@@648 $generated@@779 $generated@@780)))
)))
(assert (forall (($generated@@782 T@U) ($generated@@783 T@U) ($generated@@784 T@U) ($generated@@785 T@U) ($generated@@786 T@U) ($generated@@787 T@U) ($generated@@788 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@782) $generated@@72) (= (type $generated@@783) $generated@@72)) (= (type $generated@@784) $generated@@72)) (= (type $generated@@785) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@786) $generated@@142)) (= (type $generated@@787) $generated@@144)) (= (type $generated@@788) $generated@@144)) (and (and ($generated@@354 $generated@@785) (and (and ($generated@@145 $generated@@787 $generated@@782) ($generated@@145 $generated@@788 $generated@@783)) ($generated@@140 $generated@@786 ($generated@@163 $generated@@782 $generated@@783 $generated@@784)))) ($generated@@381 ($generated@@356 $generated@@782 $generated@@783 $generated@@784 $generated@@147 $generated@@786 $generated@@787 $generated@@788) ($generated@@382 $generated@@144)))) (= ($generated@@146 $generated@@782 $generated@@783 $generated@@784 $generated@@147 $generated@@786 $generated@@787 $generated@@788) ($generated@@146 $generated@@782 $generated@@783 $generated@@784 $generated@@785 $generated@@786 $generated@@787 $generated@@788)))
 :pattern ( ($generated@@146 $generated@@782 $generated@@783 $generated@@784 $generated@@147 $generated@@786 $generated@@787 $generated@@788) ($generated@@354 $generated@@785))
 :pattern ( ($generated@@146 $generated@@782 $generated@@783 $generated@@784 $generated@@785 $generated@@786 $generated@@787 $generated@@788))
)))
(assert (forall (($generated@@791 T@U) ($generated@@792 T@U) ) (!  (=> (and (= (type $generated@@791) $generated@@144) (= (type $generated@@792) $generated@@144)) (< ($generated@@789 $generated@@791) ($generated@@790 ($generated@@329 $generated@@791 $generated@@792))))
 :pattern ( ($generated@@329 $generated@@791 $generated@@792))
)))
(assert (forall (($generated@@793 T@U) ($generated@@794 T@U) ) (!  (=> (and (= (type $generated@@793) $generated@@144) (= (type $generated@@794) $generated@@144)) (< ($generated@@789 $generated@@794) ($generated@@790 ($generated@@329 $generated@@793 $generated@@794))))
 :pattern ( ($generated@@329 $generated@@793 $generated@@794))
)))
(assert (forall (($generated@@795 T@U) ($generated@@796 T@U) ($generated@@797 T@U) ($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ($generated@@801 T@U) ) (!  (=> (and (and (and (and (and (and (and (= (type $generated@@795) $generated@@142) (= (type $generated@@796) $generated@@72)) (= (type $generated@@797) $generated@@72)) (= (type $generated@@798) $generated@@72)) (= (type $generated@@799) $generated@@72)) (= (type $generated@@800) $generated@@72)) (= (type $generated@@801) $generated@@72)) (and (and (and ($generated@@140 $generated@@795 ($generated@@163 $generated@@796 $generated@@797 $generated@@798)) (forall (($generated@@802 T@U) ) (!  (=> (and (= (type $generated@@802) $generated@@144) ($generated@@145 $generated@@802 $generated@@799)) ($generated@@145 $generated@@802 $generated@@796))
 :pattern ( ($generated@@145 $generated@@802 $generated@@799))
 :pattern ( ($generated@@145 $generated@@802 $generated@@796))
))) (forall (($generated@@803 T@U) ) (!  (=> (and (= (type $generated@@803) $generated@@144) ($generated@@145 $generated@@803 $generated@@800)) ($generated@@145 $generated@@803 $generated@@797))
 :pattern ( ($generated@@145 $generated@@803 $generated@@800))
 :pattern ( ($generated@@145 $generated@@803 $generated@@797))
))) (forall (($generated@@804 T@U) ) (!  (=> (and (= (type $generated@@804) $generated@@144) ($generated@@145 $generated@@804 $generated@@798)) ($generated@@145 $generated@@804 $generated@@801))
 :pattern ( ($generated@@145 $generated@@804 $generated@@798))
 :pattern ( ($generated@@145 $generated@@804 $generated@@801))
)))) ($generated@@140 $generated@@795 ($generated@@163 $generated@@799 $generated@@800 $generated@@801)))
 :pattern ( ($generated@@140 $generated@@795 ($generated@@163 $generated@@796 $generated@@797 $generated@@798)) ($generated@@140 $generated@@795 ($generated@@163 $generated@@799 $generated@@800 $generated@@801)))
)))
(assert (forall (($generated@@805 T@U) ($generated@@806 T@U) ($generated@@807 T@U) ) (!  (=> (and (and (and (= (type $generated@@805) $generated@@144) (= (type $generated@@806) $generated@@72)) (= (type $generated@@807) $generated@@72)) ($generated@@145 $generated@@805 ($generated@@640 $generated@@806 $generated@@807))) (and (= ($generated@@312 ($generated@@313 ($generated@@524 $generated@@144 $generated@@144) $generated@@805)) $generated@@805) ($generated@@140 ($generated@@313 ($generated@@524 $generated@@144 $generated@@144) $generated@@805) ($generated@@640 $generated@@806 $generated@@807))))
 :pattern ( ($generated@@145 $generated@@805 ($generated@@640 $generated@@806 $generated@@807)))
)))
(assert (forall (($generated@@808 T@U) ($generated@@809 T@U) ($generated@@810 T@U) ) (!  (=> (and (and (and (= (type $generated@@808) $generated@@144) (= (type $generated@@809) $generated@@72)) (= (type $generated@@810) $generated@@72)) ($generated@@145 $generated@@808 ($generated@@648 $generated@@809 $generated@@810))) (and (= ($generated@@312 ($generated@@313 ($generated@@542 $generated@@144 $generated@@144) $generated@@808)) $generated@@808) ($generated@@140 ($generated@@313 ($generated@@542 $generated@@144 $generated@@144) $generated@@808) ($generated@@648 $generated@@809 $generated@@810))))
 :pattern ( ($generated@@145 $generated@@808 ($generated@@648 $generated@@809 $generated@@810)))
)))
(assert (forall (($generated@@811 T@U) ($generated@@812 T@U) ($generated@@813 T@U) ) (!  (=> (and (and (and (= (type $generated@@811) $generated@@72) (= (type $generated@@812) $generated@@72)) (= (type $generated@@813) $generated@@144)) ($generated@@145 $generated@@813 ($generated@@214 $generated@@811 $generated@@812))) (and (= ($generated@@312 ($generated@@313 $generated@@215 $generated@@813)) $generated@@813) ($generated@@140 ($generated@@313 $generated@@215 $generated@@813) ($generated@@214 $generated@@811 $generated@@812))))
 :pattern ( ($generated@@145 $generated@@813 ($generated@@214 $generated@@811 $generated@@812)))
)))
(assert (forall (($generated@@814 T@U) ) (! (let (($generated@@815 (type $generated@@814)))
 (not ($generated@@0 ($generated@@89 ($generated@@382 $generated@@815) $generated@@814))))
 :pattern ( (let (($generated@@815 (type $generated@@814)))
($generated@@89 ($generated@@382 $generated@@815) $generated@@814)))
)))
(assert (forall (($generated@@816 T@U) ) (! (let (($generated@@817 (type $generated@@816)))
 (not ($generated@@0 ($generated@@89 ($generated@@666 $generated@@817) $generated@@816))))
 :pattern ( (let (($generated@@817 (type $generated@@816)))
($generated@@89 ($generated@@666 $generated@@817) $generated@@816)))
)))
(assert (forall (($generated@@818 T@U) ($generated@@819 T@U) ($generated@@820 T@U) ($generated@@821 T@U) ($generated@@822 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@818) $generated@@72) (= (type $generated@@819) $generated@@72)) (= (type $generated@@820) $generated@@72)) (= (type $generated@@821) $generated@@142)) (= (type $generated@@822) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@821 ($generated@@143 $generated@@818 $generated@@819 $generated@@820) $generated@@822) ($generated@@82 $generated@@821 ($generated@@163 $generated@@818 $generated@@819 $generated@@820) $generated@@822)))
 :pattern ( ($generated@@82 $generated@@821 ($generated@@143 $generated@@818 $generated@@819 $generated@@820) $generated@@822))
)))
(assert (forall (($generated@@823 T@U) ($generated@@824 T@U) ($generated@@825 T@U) ($generated@@826 T@U) ($generated@@827 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@823) $generated@@72) (= (type $generated@@824) $generated@@72)) (= (type $generated@@825) $generated@@72)) (= (type $generated@@826) $generated@@142)) (= (type $generated@@827) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@826 ($generated@@141 $generated@@823 $generated@@824 $generated@@825) $generated@@827) ($generated@@82 $generated@@826 ($generated@@143 $generated@@823 $generated@@824 $generated@@825) $generated@@827)))
 :pattern ( ($generated@@82 $generated@@826 ($generated@@141 $generated@@823 $generated@@824 $generated@@825) $generated@@827))
)))
(assert (forall (($generated@@828 T@U) ($generated@@829 T@U) ) (!  (=> (and (= (type $generated@@828) $generated@@72) (= (type $generated@@829) $generated@@72)) (and (= ($generated@@80 ($generated@@214 $generated@@828 $generated@@829)) $generated@@66) (= ($generated@@301 ($generated@@214 $generated@@828 $generated@@829)) $generated@@71)))
 :pattern ( ($generated@@214 $generated@@828 $generated@@829))
)))
(assert  (=> (<= 1 $generated@@398) (forall (($generated@@830 T@U) ($generated@@831 T@U) ($generated@@832 T@U) ($generated@@833 Int) ) (!  (=> (and (and (and (= (type $generated@@830) $generated@@72) (= (type $generated@@831) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@832) $generated@@142)) (or ($generated@@635 $generated@@830 $generated@@832 ($generated@@348 $generated@@833)) (and (not (= 1 $generated@@398)) (and (and (and ($generated@@354 $generated@@831) ($generated@@140 $generated@@832 ($generated@@141 $generated@@160 $generated@@44 $generated@@44))) (<= ($generated@@348 0) $generated@@833)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@831 $generated@@832 ($generated@@312 ($generated@@8 ($generated@@348 $generated@@833))) ($generated@@312 ($generated@@350 ($generated@@11 true)))))))))) (and ($generated@@405 $generated@@830 $generated@@831 $generated@@832) (= ($generated@@634 $generated@@830 $generated@@832 ($generated@@348 $generated@@833)) (let (($generated@@834 ($generated@@404 $generated@@830 $generated@@831 $generated@@832)))
$generated@@834))))
 :weight 3
 :pattern ( ($generated@@634 $generated@@830 $generated@@832 ($generated@@348 $generated@@833)) ($generated@@354 $generated@@831))
))))
(assert (forall (($generated@@835 T@U) ) (!  (=> (= (type $generated@@835) $generated@@215) (= ($generated@@789 ($generated@@312 $generated@@835)) ($generated@@790 $generated@@835)))
 :pattern ( ($generated@@789 ($generated@@312 $generated@@835)))
)))
(assert (forall (($generated@@836 T@U) ) (!  (=> (and (= (type $generated@@836) $generated@@144) ($generated@@145 $generated@@836 ($generated@@83 0))) (and (= ($generated@@312 ($generated@@313 $generated@@2 $generated@@836)) $generated@@836) ($generated@@140 ($generated@@313 ($generated@@84 $generated@@144 $generated@@4) $generated@@836) ($generated@@83 0))))
 :pattern ( ($generated@@145 $generated@@836 ($generated@@83 0)))
)))
(assert (forall (($generated@@837 T@U) ($generated@@838 T@U) ) (!  (=> (and (and (= (type $generated@@837) $generated@@144) (= (type $generated@@838) $generated@@72)) ($generated@@145 $generated@@837 ($generated@@338 $generated@@838))) (and (= ($generated@@312 ($generated@@313 ($generated@@84 $generated@@144 $generated@@4) $generated@@837)) $generated@@837) ($generated@@140 ($generated@@313 ($generated@@84 $generated@@144 $generated@@4) $generated@@837) ($generated@@338 $generated@@838))))
 :pattern ( ($generated@@145 $generated@@837 ($generated@@338 $generated@@838)))
)))
(assert (forall (($generated@@839 T@U) ($generated@@840 T@U) ) (!  (=> (and (and (= (type $generated@@839) $generated@@144) (= (type $generated@@840) $generated@@72)) ($generated@@145 $generated@@839 ($generated@@343 $generated@@840))) (and (= ($generated@@312 ($generated@@313 ($generated@@84 $generated@@144 $generated@@4) $generated@@839)) $generated@@839) ($generated@@140 ($generated@@313 ($generated@@84 $generated@@144 $generated@@4) $generated@@839) ($generated@@343 $generated@@840))))
 :pattern ( ($generated@@145 $generated@@839 ($generated@@343 $generated@@840)))
)))
(assert (forall (($generated@@841 T@U) ($generated@@842 T@U) ) (!  (=> (and (and (= (type $generated@@841) $generated@@144) (= (type $generated@@842) $generated@@72)) ($generated@@145 $generated@@841 ($generated@@228 $generated@@842))) (and (= ($generated@@312 ($generated@@313 ($generated@@84 $generated@@144 $generated@@2) $generated@@841)) $generated@@841) ($generated@@140 ($generated@@313 ($generated@@84 $generated@@144 $generated@@2) $generated@@841) ($generated@@228 $generated@@842))))
 :pattern ( ($generated@@145 $generated@@841 ($generated@@228 $generated@@842)))
)))
(assert (forall (($generated@@843 T@U) ($generated@@844 T@U) ) (!  (=> (and (and (= (type $generated@@843) $generated@@144) (= (type $generated@@844) $generated@@72)) ($generated@@145 $generated@@843 ($generated@@744 $generated@@844))) (and (= ($generated@@312 ($generated@@313 ($generated@@414 $generated@@144) $generated@@843)) $generated@@843) ($generated@@140 ($generated@@313 ($generated@@414 $generated@@144) $generated@@843) ($generated@@744 $generated@@844))))
 :pattern ( ($generated@@145 $generated@@843 ($generated@@744 $generated@@844)))
)))
(assert (= ($generated@@80 $generated@@160) $generated@@61))
(assert (= ($generated@@301 $generated@@160) $generated@@67))
(assert (forall (($generated@@845 T@U) ($generated@@846 T@U) ($generated@@847 T@U) ) (!  (=> (and (and (= (type $generated@@845) ($generated@@84 $generated@@144 $generated@@2)) (= (type $generated@@846) $generated@@72)) (= (type $generated@@847) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@845 ($generated@@228 $generated@@846) $generated@@847) (forall (($generated@@848 T@U) ) (!  (=> (and (= (type $generated@@848) $generated@@144) (< 0 ($generated ($generated@@89 $generated@@845 $generated@@848)))) ($generated@@357 $generated@@848 $generated@@846 $generated@@847))
 :pattern ( ($generated@@89 $generated@@845 $generated@@848))
))))
 :pattern ( ($generated@@82 $generated@@845 ($generated@@228 $generated@@846) $generated@@847))
)))
(assert (forall (($generated@@849 T@U) ($generated@@850 T@U) ($generated@@851 T@U) ($generated@@852 T@U) ($generated@@853 T@U) ($generated@@854 T@U) ($generated@@855 T@U) ($generated@@856 T@U) ($generated@@857 T@U) ($generated@@858 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@849) $generated@@72) (= (type $generated@@850) $generated@@72)) (= (type $generated@@851) $generated@@72)) (= (type $generated@@852) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@853) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@144))) (= (type $generated@@854) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@4))) (= (type $generated@@855) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 ($generated@@84 $generated@@144 $generated@@4)))) (= (type $generated@@856) $generated@@144)) (= (type $generated@@857) $generated@@144)) (= (type $generated@@858) $generated@@144)) (= ($generated@@0 ($generated@@89 ($generated@@356 $generated@@849 $generated@@850 $generated@@851 $generated@@852 ($generated@@424 $generated@@853 $generated@@854 $generated@@855) $generated@@856 $generated@@857) $generated@@858)) ($generated@@0 ($generated@@89 ($generated@@426 $generated@@855 $generated@@852 $generated@@856 $generated@@857) $generated@@858))))
 :pattern ( ($generated@@89 ($generated@@356 $generated@@849 $generated@@850 $generated@@851 $generated@@852 ($generated@@424 $generated@@853 $generated@@854 $generated@@855) $generated@@856 $generated@@857) $generated@@858))
)))
(assert  (=> (<= 1 $generated@@398) (forall (($generated@@859 T@U) ($generated@@860 T@U) ($generated@@861 T@U) ($generated@@862 Int) ) (!  (=> (and (and (and (= (type $generated@@859) $generated@@72) (= (type $generated@@860) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@861) $generated@@142)) (or ($generated@@635 $generated@@859 ($generated@@350 $generated@@861) ($generated@@348 $generated@@862)) (and (not (= 1 $generated@@398)) (and (and (and ($generated@@354 $generated@@860) ($generated@@140 $generated@@861 ($generated@@141 $generated@@160 $generated@@44 $generated@@44))) (<= ($generated@@348 0) $generated@@862)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@860 ($generated@@350 $generated@@861) ($generated@@312 ($generated@@8 ($generated@@348 $generated@@862))) ($generated@@312 ($generated@@350 ($generated@@11 true)))))))))) (and ($generated@@405 $generated@@859 $generated@@860 ($generated@@350 $generated@@861)) (= ($generated@@634 $generated@@859 ($generated@@350 $generated@@861) ($generated@@348 $generated@@862)) (let (($generated@@863 ($generated@@404 $generated@@859 $generated@@860 ($generated@@350 $generated@@861))))
$generated@@863))))
 :weight 3
 :pattern ( ($generated@@634 $generated@@859 ($generated@@350 $generated@@861) ($generated@@348 $generated@@862)) ($generated@@354 $generated@@860))
))))
(assert (forall (($generated@@864 T@U) ($generated@@865 T@U) ($generated@@866 T@U) ) (!  (=> (and (and (and (= (type $generated@@864) $generated@@215) (= (type $generated@@865) $generated@@72)) (= (type $generated@@866) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@354 $generated@@866) (and ($generated@@213 $generated@@864) (exists (($generated@@867 T@U) ) (!  (and (= (type $generated@@867) $generated@@72) ($generated@@82 $generated@@864 ($generated@@214 $generated@@865 $generated@@867) $generated@@866))
 :pattern ( ($generated@@82 $generated@@864 ($generated@@214 $generated@@865 $generated@@867) $generated@@866))
))))) ($generated@@357 ($generated@@222 $generated@@864) $generated@@865 $generated@@866))
 :pattern ( ($generated@@357 ($generated@@222 $generated@@864) $generated@@865 $generated@@866))
)))
(assert (forall (($generated@@868 T@U) ($generated@@869 T@U) ($generated@@870 T@U) ) (!  (=> (and (and (and (= (type $generated@@868) $generated@@215) (= (type $generated@@869) $generated@@72)) (= (type $generated@@870) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@354 $generated@@870) (and ($generated@@213 $generated@@868) (exists (($generated@@871 T@U) ) (!  (and (= (type $generated@@871) $generated@@72) ($generated@@82 $generated@@868 ($generated@@214 $generated@@871 $generated@@869) $generated@@870))
 :pattern ( ($generated@@82 $generated@@868 ($generated@@214 $generated@@871 $generated@@869) $generated@@870))
))))) ($generated@@357 ($generated@@223 $generated@@868) $generated@@869 $generated@@870))
 :pattern ( ($generated@@357 ($generated@@223 $generated@@868) $generated@@869 $generated@@870))
)))
(assert (forall (($generated@@872 T@U) ($generated@@873 T@U) ) (!  (=> (and (= (type $generated@@872) $generated@@144) (= (type $generated@@873) $generated@@144)) (= ($generated@@329 ($generated@@350 $generated@@872) ($generated@@350 $generated@@873)) ($generated@@350 ($generated@@329 $generated@@872 $generated@@873))))
 :pattern ( ($generated@@329 ($generated@@350 $generated@@872) ($generated@@350 $generated@@873)))
)))
(assert (forall (($generated@@874 Int) ) (! (= ($generated@@312 ($generated@@8 ($generated@@348 $generated@@874))) ($generated@@350 ($generated@@312 ($generated@@8 $generated@@874))))
 :pattern ( ($generated@@312 ($generated@@8 ($generated@@348 $generated@@874))))
)))
(assert (forall (($generated@@875 T@U) ) (! (= ($generated@@312 ($generated@@350 $generated@@875)) ($generated@@350 ($generated@@312 $generated@@875)))
 :pattern ( ($generated@@312 ($generated@@350 $generated@@875)))
)))
(assert (forall (($generated@@876 T@U) ($generated@@877 T@U) ($generated@@878 T@U) ($generated@@879 T@U) ($generated@@880 T@U) ($generated@@881 T@U) ($generated@@882 T@U) ($generated@@883 T@U) ($generated@@884 T@U) ) (!  (=> (and (and (and (and (and (and (and (and (and (= (type $generated@@876) $generated@@72) (= (type $generated@@877) $generated@@72)) (= (type $generated@@878) $generated@@72)) (= (type $generated@@879) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@880) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@144))) (= (type $generated@@881) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 $generated@@4))) (= (type $generated@@882) ($generated@@425 ($generated@@84 $generated@@85 $generated@@86) $generated@@144 $generated@@144 ($generated@@84 $generated@@144 $generated@@4)))) (= (type $generated@@883) $generated@@144)) (= (type $generated@@884) $generated@@144)) ($generated@@0 ($generated@@426 $generated@@881 $generated@@879 $generated@@883 $generated@@884))) ($generated@@146 $generated@@876 $generated@@877 $generated@@878 $generated@@879 ($generated@@424 $generated@@880 $generated@@881 $generated@@882) $generated@@883 $generated@@884))
 :pattern ( ($generated@@146 $generated@@876 $generated@@877 $generated@@878 $generated@@879 ($generated@@424 $generated@@880 $generated@@881 $generated@@882) $generated@@883 $generated@@884))
)))
(assert (forall (($generated@@885 T@U) ) (! (let (($generated@@886 ($generated@@415 (type $generated@@885))))
 (=> (and (= (type $generated@@885) ($generated@@414 $generated@@886)) (= ($generated@@413 $generated@@885) 0)) (= $generated@@885 ($generated@@412 $generated@@886))))
 :pattern ( ($generated@@413 $generated@@885))
)))
(assert (forall (($generated@@887 T@U) ($generated@@888 T@U) ($generated@@889 T@U) ) (! (let (($generated@@890 (type $generated@@888)))
 (=> (and (and (= (type $generated@@887) ($generated@@84 $generated@@890 $generated@@2)) (= (type $generated@@889) $generated@@2)) (<= 0 ($generated $generated@@889))) (= ($generated@@516 ($generated@@90 $generated@@887 $generated@@888 $generated@@889)) (+ (- ($generated@@516 $generated@@887) ($generated ($generated@@89 $generated@@887 $generated@@888))) ($generated $generated@@889)))))
 :pattern ( ($generated@@516 ($generated@@90 $generated@@887 $generated@@888 $generated@@889)))
)))
(assert (forall (($generated@@891 T@U) ($generated@@892 T@U) ) (!  (=> (and (= (type $generated@@891) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@892) $generated@@2)) ($generated@@82 $generated@@892 $generated@@46 $generated@@891))
 :pattern ( ($generated@@82 $generated@@892 $generated@@46 $generated@@891))
)))
(assert (forall (($generated@@893 T@U) ($generated@@894 T@U) ) (!  (=> (and (= (type $generated@@893) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@894) $generated@@3)) ($generated@@82 $generated@@894 $generated@@47 $generated@@893))
 :pattern ( ($generated@@82 $generated@@894 $generated@@47 $generated@@893))
)))
(assert (forall (($generated@@895 T@U) ($generated@@896 T@U) ) (!  (=> (and (= (type $generated@@895) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@896) $generated@@4)) ($generated@@82 $generated@@896 $generated@@44 $generated@@895))
 :pattern ( ($generated@@82 $generated@@896 $generated@@44 $generated@@895))
)))
(assert (forall (($generated@@897 T@U) ($generated@@898 T@U) ) (!  (=> (and (= (type $generated@@897) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@898) $generated@@702)) ($generated@@82 $generated@@898 $generated@@45 $generated@@897))
 :pattern ( ($generated@@82 $generated@@898 $generated@@45 $generated@@897))
)))
(assert (forall (($generated@@899 T@U) ($generated@@900 T@U) ) (!  (=> (and (= (type $generated@@899) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@900) $generated@@144)) ($generated@@82 $generated@@900 $generated@@48 $generated@@899))
 :pattern ( ($generated@@82 $generated@@900 $generated@@48 $generated@@899))
)))
(assert (forall (($generated@@901 T@U) ($generated@@902 T@U) ) (!  (=> (and (= (type $generated@@901) ($generated@@414 $generated@@144)) (= (type $generated@@902) $generated@@72)) (= ($generated@@140 $generated@@901 ($generated@@744 $generated@@902)) (forall (($generated@@903 Int) ) (!  (=> (and (<= 0 $generated@@903) (< $generated@@903 ($generated@@413 $generated@@901))) ($generated@@145 ($generated@@745 $generated@@901 $generated@@903) $generated@@902))
 :pattern ( ($generated@@745 $generated@@901 $generated@@903))
))))
 :pattern ( ($generated@@140 $generated@@901 ($generated@@744 $generated@@902)))
)))
(assert (forall (($generated@@905 T@U) ($generated@@906 Int) ) (!  (=> (= (type $generated@@905) ($generated@@414 $generated@@144)) (=> (and (<= 0 $generated@@906) (< $generated@@906 ($generated@@413 $generated@@905))) (< ($generated@@790 ($generated@@313 $generated@@215 ($generated@@745 $generated@@905 $generated@@906))) ($generated@@904 $generated@@905))))
 :pattern ( ($generated@@790 ($generated@@313 $generated@@215 ($generated@@745 $generated@@905 $generated@@906))))
)))
(assert (forall (($generated@@907 T@U) ($generated@@908 T@U) ($generated@@909 T@U) ) (!  (=> (and (and (and (= (type $generated@@907) ($generated@@524 $generated@@144 $generated@@144)) (= (type $generated@@908) $generated@@72)) (= (type $generated@@909) $generated@@72)) ($generated@@140 $generated@@907 ($generated@@640 $generated@@908 $generated@@909))) (and (and ($generated@@140 ($generated@@522 $generated@@907) ($generated@@338 $generated@@908)) ($generated@@140 ($generated@@570 $generated@@907) ($generated@@338 $generated@@909))) ($generated@@140 ($generated@@608 $generated@@907) ($generated@@338 ($generated@@214 $generated@@908 $generated@@909)))))
 :pattern ( ($generated@@140 $generated@@907 ($generated@@640 $generated@@908 $generated@@909)))
)))
(assert (forall (($generated@@910 T@U) ($generated@@911 T@U) ($generated@@912 T@U) ) (!  (=> (and (and (and (= (type $generated@@910) ($generated@@542 $generated@@144 $generated@@144)) (= (type $generated@@911) $generated@@72)) (= (type $generated@@912) $generated@@72)) ($generated@@140 $generated@@910 ($generated@@648 $generated@@911 $generated@@912))) (and (and ($generated@@140 ($generated@@540 $generated@@910) ($generated@@343 $generated@@911)) ($generated@@140 ($generated@@581 $generated@@910) ($generated@@343 $generated@@912))) ($generated@@140 ($generated@@616 $generated@@910) ($generated@@343 ($generated@@214 $generated@@911 $generated@@912)))))
 :pattern ( ($generated@@140 $generated@@910 ($generated@@648 $generated@@911 $generated@@912)))
)))
(assert (forall (($generated@@913 T@U) ) (!  (=> (= (type $generated@@913) $generated@@2) ($generated@@140 $generated@@913 $generated@@46))
 :pattern ( ($generated@@140 $generated@@913 $generated@@46))
)))
(assert (forall (($generated@@914 T@U) ) (!  (=> (= (type $generated@@914) $generated@@3) ($generated@@140 $generated@@914 $generated@@47))
 :pattern ( ($generated@@140 $generated@@914 $generated@@47))
)))
(assert (forall (($generated@@915 T@U) ) (!  (=> (= (type $generated@@915) $generated@@4) ($generated@@140 $generated@@915 $generated@@44))
 :pattern ( ($generated@@140 $generated@@915 $generated@@44))
)))
(assert (forall (($generated@@916 T@U) ) (!  (=> (= (type $generated@@916) $generated@@702) ($generated@@140 $generated@@916 $generated@@45))
 :pattern ( ($generated@@140 $generated@@916 $generated@@45))
)))
(assert (forall (($generated@@917 T@U) ) (!  (=> (= (type $generated@@917) $generated@@144) ($generated@@140 $generated@@917 $generated@@48))
 :pattern ( ($generated@@140 $generated@@917 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@918 () T@U)
(declare-fun $generated@@919 () T@U)
(declare-fun $generated@@920 () T@U)
(declare-fun $generated@@921 () Int)
(declare-fun $generated@@922 () T@U)
(declare-fun $generated@@923 () T@U)
(declare-fun $generated@@924 () Int)
(declare-fun $generated@@925 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@918) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@919) $generated@@142)) (= (type $generated@@920) $generated@@72)) (= (type $generated@@922) ($generated@@235 $generated@@85 $generated@@4))) (= (type $generated@@923) ($generated@@235 $generated@@85 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@926  (=> (= (ControlFlow 0 3) (- 0 2)) (or (and ($generated@@140 ($generated@@8 ($generated@@348 0)) $generated@@160) (and (<= ($generated@@348 0) ($generated@@348 0)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@918 $generated@@919 ($generated@@312 ($generated@@8 ($generated@@348 0))) ($generated@@312 ($generated@@11 (= ($generated@@399 $generated@@920) ($generated@@399 $generated@@920))))))))) (or (and ($generated@@140 ($generated@@8 ($generated@@348 0)) $generated@@160) (and (<= ($generated@@348 0) ($generated@@348 0)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@918 $generated@@919 ($generated@@312 ($generated@@8 ($generated@@348 0))) ($generated@@312 ($generated@@11 (= ($generated@@399 $generated@@920) ($generated@@399 $generated@@920))))))))) (or (and ($generated@@140 ($generated@@8 ($generated@@348 0)) $generated@@160) (and (<= ($generated@@348 0) ($generated@@348 0)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@918 $generated@@919 ($generated@@312 ($generated@@8 ($generated@@348 0))) ($generated@@312 ($generated@@11 (= ($generated@@399 $generated@@920) ($generated@@399 $generated@@920))))))))) (exists (($generated@@927 T@U) ) (!  (and (= (type $generated@@927) $generated@@2) (and (<= ($generated@@348 0) ($generated $generated@@927)) (and (<= ($generated@@348 0) ($generated $generated@@927)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@918 $generated@@919 ($generated@@312 $generated@@927) ($generated@@312 ($generated@@11 (= ($generated@@399 $generated@@920) ($generated@@399 $generated@@920))))))))))
 :no-pattern (type $generated@@927)
 :no-pattern ($generated $generated@@927)
 :no-pattern ($generated@@0 $generated@@927)
))))))))
(let (($generated@@928  (=> (and (< $generated@@921 ($generated@@348 0)) (= (ControlFlow 0 6) 3)) $generated@@926)))
(let (($generated@@929  (=> (and (<= ($generated@@348 0) $generated@@921) (= (ControlFlow 0 5) 3)) $generated@@926)))
(let (($generated@@930  (=> (<= ($generated@@348 0) $generated@@921) (and (=> (= (ControlFlow 0 7) 5) $generated@@929) (=> (= (ControlFlow 0 7) 6) $generated@@928)))))
(let (($generated@@931  (=> (and (< $generated@@921 ($generated@@348 0)) (= (ControlFlow 0 4) 3)) $generated@@926)))
(let (($generated@@932  (=> (= $generated@@922 ($generated@@289 $generated@@358 $generated@@918 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@930) (=> (= (ControlFlow 0 8) 4) $generated@@931)))))
(let (($generated@@933 true))
(let (($generated@@934  (=> (and (= $generated@@923 ($generated@@234 $generated@@358 $generated@@918 $generated@@60 false)) ($generated@@0 ($generated@@313 $generated@@4 ($generated@@355 $generated@@160 $generated@@44 $generated@@44 $generated@@918 $generated@@919 ($generated@@312 ($generated@@8 $generated@@924)) ($generated@@312 ($generated@@350 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 9) 1) $generated@@933) (=> (= (ControlFlow 0 9) 8) $generated@@932)))))
(let (($generated@@935  (=> (and ($generated@@354 $generated@@918) ($generated@@925 $generated@@918)) (=> (and (and ($generated@@140 $generated@@919 ($generated@@141 $generated@@160 $generated@@44 $generated@@44)) (<= ($generated@@348 0) $generated@@924)) (and (= 1 $generated@@398) (= (ControlFlow 0 10) 9))) $generated@@934))))
$generated@@935))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 (T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@T) T@U)
(declare-fun $generated@@251 (T@U T@U) Int)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U T@U) Bool)
(declare-fun $generated@@295 (T@U T@U) Int)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@419 (T@U T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert  (and (and (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (= (type ($generated@@237 $generated@@241 $generated@@242 $generated@@243)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@237 $generated@@241 $generated@@242 $generated@@243))
)) (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 (type $generated@@245)))
(= (type ($generated@@239 $generated@@244 $generated@@245)) ($generated@@78 $generated@@246 $generated@@4)))
 :pattern ( ($generated@@239 $generated@@244 $generated@@245))
))) (forall (($generated@@247 T@T) ) (! (= (type ($generated@@240 $generated@@247)) ($generated@@78 $generated@@247 $generated@@4))
 :pattern ( ($generated@@240 $generated@@247))
))))
(assert  (=> (<= 0 $generated@@236) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@150)) (or ($generated@@238 $generated@@248 $generated@@249 $generated@@250) (and (not (= 0 $generated@@236)) ($generated@@229 $generated@@250 $generated@@249)))) (= ($generated@@237 $generated@@248 $generated@@249 $generated@@250) ($generated@@239 ($generated@@240 $generated@@150) $generated@@250)))
 :pattern ( ($generated@@237 $generated@@248 $generated@@249 $generated@@250))
))))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@66) (= (type $generated@@255) $generated@@150)) (or ($generated@@252 $generated@@254 $generated@@255) (and (not (= 1 $generated@@236)) ($generated@@229 $generated@@255 $generated@@254)))) (<= ($generated@@253 0) ($generated@@251 $generated@@254 $generated@@255)))
 :pattern ( ($generated@@251 $generated@@254 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@141) (= (type $generated@@257) $generated@@141)) (= ($generated@@147 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@147 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@66)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@261) $generated@@66)) (= ($generated@@137 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@150) ($generated@@0 ($generated@@83 $generated@@260 $generated@@262))) ($generated@@229 $generated@@262 $generated@@261))
 :pattern ( ($generated@@83 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@137 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@66)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@266) $generated@@66)) (= ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@150) ($generated@@0 ($generated@@83 $generated@@265 $generated@@267))) ($generated@@229 $generated@@267 $generated@@266))
 :pattern ( ($generated@@83 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@137 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@268 Int) ) (! (= ($generated@@253 $generated@@268) $generated@@268)
 :pattern ( ($generated@@253 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@66) (= (type $generated@@276) $generated@@66)) (= (type $generated@@277) $generated@@150)) (= (type $generated@@278) $generated@@150)) (= (type $generated@@279) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@273 $generated@@279)) (= ($generated@@76 ($generated@@228 $generated@@277 $generated@@278) ($generated@@140 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@277 $generated@@278) ($generated@@140 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@70)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@141) (= ($generated@@139 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@141) ($generated@@139 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@150) (= (type $generated@@285) $generated@@150)) (= $generated@@283 ($generated@@228 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@139 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (= (type $generated@@296) $generated@@66) (= (type $generated@@297) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@298) $generated@@150)) (or ($generated@@252 $generated@@296 $generated@@298) (and (not (= 1 $generated@@236)) (and ($generated@@273 $generated@@297) ($generated@@229 $generated@@298 $generated@@296))))) (and (and ($generated@@294 $generated@@296 $generated@@298) ($generated@@238 $generated@@296 $generated@@296 $generated@@298)) (= ($generated@@251 $generated@@296 $generated@@298) (let (($generated@@299 ($generated@@295 $generated@@296 $generated@@298)))
(ite ($generated@@0 ($generated@@83 ($generated@@237 $generated@@296 $generated@@296 $generated@@298) $generated@@298)) $generated@@299 (+ $generated@@299 1))))))
 :pattern ( ($generated@@251 $generated@@296 $generated@@298) ($generated@@273 $generated@@297))
))))
(assert (forall (($generated@@300 T@U) ) (!  (=> (= (type $generated@@300) $generated@@2) (= ($generated@@137 $generated@@300 $generated@@134) (<= ($generated@@253 0) ($generated $generated@@300))))
 :pattern ( ($generated@@137 $generated@@300 $generated@@134))
)))
(assert (forall (($generated@@302 T@U) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@150)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@66) (= (type $generated@@305) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@274 ($generated@@301 $generated@@303) $generated@@304 $generated@@305) ($generated@@76 $generated@@303 $generated@@304 $generated@@305)))
 :pattern ( ($generated@@274 ($generated@@301 $generated@@303) $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@78 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@81 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@78 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@83 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 18)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@78 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@83 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 19)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@78 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@83 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@83 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@81 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@78 $generated@@349 $generated@@2)) (= ($generated@@156 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@83 $generated@@348 $generated@@350))) (<= ($generated ($generated@@83 $generated@@348 $generated@@350)) ($generated@@306 $generated@@348))))
 :pattern ( ($generated@@83 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@156 $generated@@348))
)))
(assert (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@150) ($generated@@229 $generated@@354 $generated@@134)) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@354)) $generated@@354) ($generated@@137 ($generated@@351 $generated@@2 $generated@@354) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@354 $generated@@134))
)))
(assert  (=> (<= 0 $generated@@236) (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (and (= (type $generated@@355) $generated@@66) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) $generated@@150)) (or ($generated@@238 $generated@@355 $generated@@356 ($generated@@269 $generated@@357)) (and (not (= 0 $generated@@236)) ($generated@@229 $generated@@357 $generated@@356)))) (= ($generated@@237 $generated@@355 $generated@@356 ($generated@@269 $generated@@357)) ($generated@@269 ($generated@@239 ($generated@@240 $generated@@150) ($generated@@269 $generated@@357)))))
 :weight 3
 :pattern ( ($generated@@237 $generated@@355 $generated@@356 ($generated@@269 $generated@@357)))
))))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@316 (type $generated@@358))))
(let (($generated@@360 ($generated@@315 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@314 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@313 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@312 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@316 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@78 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@316 (type $generated@@365))))
(let (($generated@@367 ($generated@@315 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@314 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@313 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@334 (type $generated@@369))))
(let (($generated@@371 ($generated@@333 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@332 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@331 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@83 ($generated@@330 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@330 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@334 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@78 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@334 (type $generated@@376))))
(let (($generated@@378 ($generated@@333 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@332 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@331 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@381) $generated@@66)) (= ($generated@@137 $generated@@380 ($generated@@155 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@380 $generated@@382)))) ($generated@@229 $generated@@382 $generated@@381))
 :pattern ( ($generated@@83 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@137 $generated@@380 ($generated@@155 $generated@@381)))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@384) $generated@@66)) (= (type $generated@@385) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@383 ($generated@@258 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@150) ($generated@@0 ($generated@@83 $generated@@383 $generated@@386))) ($generated@@274 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@83 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@76 $generated@@383 ($generated@@258 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@388) $generated@@66)) (= (type $generated@@389) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@387 ($generated@@263 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@150) ($generated@@0 ($generated@@83 $generated@@387 $generated@@390))) ($generated@@274 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@83 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@76 $generated@@387 ($generated@@263 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(= ($generated ($generated@@83 ($generated@@307 $generated@@392) $generated@@391)) 0))
 :pattern ( (let (($generated@@392 (type $generated@@391)))
($generated@@83 ($generated@@307 $generated@@392) $generated@@391)))
)))
(assert  (and (forall (($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@395)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@393 $generated@@395))
)) (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@316 (type $generated@@396))))
(let (($generated@@398 ($generated@@315 (type $generated@@396))))
(= (type ($generated@@394 $generated@@396)) ($generated@@78 $generated@@398 $generated@@397))))
 :pattern ( ($generated@@394 $generated@@396))
))))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@399) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@400) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@393 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@399) ($generated@@148 ($generated@@351 $generated@@141 $generated@@400)))) (= ($generated@@83 ($generated@@394 $generated@@399) ($generated@@148 ($generated@@351 $generated@@141 $generated@@400))) ($generated@@149 ($generated@@351 $generated@@141 $generated@@400))))))
 :pattern ( ($generated@@83 ($generated@@393 $generated@@399) $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@334 (type $generated@@404))))
(let (($generated@@406 ($generated@@333 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@78 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@408) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@83 ($generated@@330 $generated@@407) ($generated@@148 ($generated@@351 $generated@@141 $generated@@408)))) (= ($generated@@83 ($generated@@402 $generated@@407) ($generated@@148 ($generated@@351 $generated@@141 $generated@@408))) ($generated@@149 ($generated@@351 $generated@@141 $generated@@408))))))
 :pattern ( ($generated@@83 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@315 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@314 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@83 ($generated@@362 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@83 ($generated@@312 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@83 ($generated@@394 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@394 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(let (($generated@@417 ($generated@@333 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@332 $generated@@417 $generated@@416)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@414) $generated@@415)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) (and ($generated@@0 ($generated@@83 ($generated@@330 $generated@@414) $generated@@418)) (= $generated@@415 ($generated@@83 ($generated@@402 $generated@@414) $generated@@418))))
 :pattern ( ($generated@@83 ($generated@@330 $generated@@414) $generated@@418))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@414) $generated@@418))
))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (= (type ($generated@@419 $generated@@420 $generated@@421)) $generated@@66)
 :pattern ( ($generated@@419 $generated@@420 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (and (= (type $generated@@422) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@423) $generated@@66)) (= (type $generated@@424) $generated@@66)) (= (type $generated@@425) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@422) $generated@@426))) (and ($generated@@274 ($generated@@83 ($generated@@394 $generated@@422) $generated@@426) $generated@@424 $generated@@425) ($generated@@274 $generated@@426 $generated@@423 $generated@@425)))
 :pattern ( ($generated@@83 ($generated@@394 $generated@@422) $generated@@426))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@422) $generated@@426))
))))
 :pattern ( ($generated@@76 $generated@@422 ($generated@@419 $generated@@423 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@66)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@431) $generated@@66)) (= (type $generated@@432) $generated@@66)) (= (type $generated@@433) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@330 $generated@@430) $generated@@434))) (and ($generated@@274 ($generated@@83 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@274 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@83 ($generated@@330 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@76 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (! (let (($generated@@438 (type $generated@@436)))
 (=> (and (and (= (type $generated@@435) ($generated@@78 $generated@@438 $generated@@4)) (= (type $generated@@437) $generated@@438)) ($generated@@0 ($generated@@83 $generated@@435 $generated@@437))) ($generated@@0 ($generated@@83 ($generated@@239 $generated@@435 $generated@@436) $generated@@437))))
 :pattern ( ($generated@@239 $generated@@435 $generated@@436) ($generated@@83 $generated@@435 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@440)))
 (=> (and (= (type $generated@@439) ($generated@@78 $generated@@442 $generated@@4)) (= (type $generated@@441) $generated@@442)) (= ($generated@@0 ($generated@@83 ($generated@@239 $generated@@439 $generated@@440) $generated@@441))  (or (= $generated@@441 $generated@@440) ($generated@@0 ($generated@@83 $generated@@439 $generated@@441))))))
 :pattern ( ($generated@@83 ($generated@@239 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@78 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@334 (type $generated@@445))))
(let (($generated@@447 ($generated@@333 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@332 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@331 $generated@@447 $generated@@446)) (= ($generated@@330 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@330 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@334 (type $generated@@448))))
(let (($generated@@450 ($generated@@333 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@332 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@331 $generated@@450 $generated@@449)) (= ($generated@@373 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@373 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@334 (type $generated@@451))))
(let (($generated@@453 ($generated@@333 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@332 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@331 $generated@@453 $generated@@452)) (= ($generated@@401 $generated@@451) ($generated@@443 $generated@@150))))))
 :pattern ( ($generated@@401 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@316 (type $generated@@454))))
(let (($generated@@456 ($generated@@315 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@314 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@313 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@150) (= (type $generated@@458) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@393 $generated@@454) ($generated@@301 ($generated@@228 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@393 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@334 (type $generated@@459))))
(let (($generated@@461 ($generated@@333 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@332 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@331 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@150) (= (type $generated@@463) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@401 $generated@@459) ($generated@@301 ($generated@@228 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@401 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@150) ($generated@@229 $generated@@464 $generated@@46)) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@464)) $generated@@464) ($generated@@137 ($generated@@351 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@150) ($generated@@229 $generated@@465 $generated@@47)) (and (= ($generated@@301 ($generated@@351 $generated@@3 $generated@@465)) $generated@@465) ($generated@@137 ($generated@@351 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@150) ($generated@@229 $generated@@466 $generated@@44)) (and (= ($generated@@301 ($generated@@351 $generated@@4 $generated@@466)) $generated@@466) ($generated@@137 ($generated@@351 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@150) ($generated@@229 $generated@@468 $generated@@45)) (and (= ($generated@@301 ($generated@@351 $generated@@467 $generated@@468)) $generated@@468) ($generated@@137 ($generated@@351 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@66) (= ($generated@@229 ($generated@@301 $generated@@469) $generated@@470) ($generated@@137 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@229 ($generated@@301 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@81 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@78 $generated@@472 $generated@@2)) (<= 0 ($generated@@306 $generated@@471))))
 :pattern ( ($generated@@306 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@289 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@288 $generated@@474)) (<= 0 ($generated@@287 $generated@@473))))
 :pattern ( ($generated@@287 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@419 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@419 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@419 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@419 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@74 ($generated@@419 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@419 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@66)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@66) (= (type $generated@@488) $generated@@66)) (= ($generated@@485 ($generated@@427 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@427 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@66) (= (type $generated@@492) $generated@@66)) (= ($generated@@489 ($generated@@427 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@427 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@66) (= (type $generated@@494) $generated@@66)) (= ($generated@@74 ($generated@@427 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@427 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@150) (= (type $generated@@496) $generated@@150)) (= ($generated@@280 ($generated@@228 $generated@@495 $generated@@496)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@66)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@66) (= (type $generated@@500) $generated@@66)) (= ($generated@@497 ($generated@@140 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@140 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@66) (= (type $generated@@504) $generated@@66)) (= ($generated@@501 ($generated@@140 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@140 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@150) (= (type $generated@@506) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@228 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@150) (= (type $generated@@508) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@228 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@289 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@288 $generated@@150)) (= (type $generated@@516) $generated@@66)) (= (type $generated@@517) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@287 $generated@@515))) ($generated@@274 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@76 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (! (let (($generated@@521 (type $generated@@520)))
 (=> (= (type $generated@@519) ($generated@@78 $generated@@521 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@239 $generated@@519 $generated@@520) $generated@@520))))
 :pattern ( ($generated@@239 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@77 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@77 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@66) (= ($generated@@524 ($generated@@258 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@258 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@66) (= ($generated@@74 ($generated@@258 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@66)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@66) (= ($generated@@528 ($generated@@263 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@263 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@66) (= ($generated@@74 ($generated@@263 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@66) (= ($generated@@532 ($generated@@155 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@155 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@66) (= ($generated@@536 ($generated@@509 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@509 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@66) (= ($generated@@74 ($generated@@509 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@351 $generated@@541 ($generated@@301 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@301 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@543) $generated@@66)) (= (type $generated@@544) $generated@@66)) (= ($generated@@137 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@312 $generated@@542) $generated@@545))) (and ($generated@@229 ($generated@@83 ($generated@@394 $generated@@542) $generated@@545) $generated@@544) ($generated@@229 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@83 ($generated@@394 $generated@@542) $generated@@545))
 :pattern ( ($generated@@83 ($generated@@312 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@137 $generated@@542 ($generated@@419 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@547) $generated@@66)) (= (type $generated@@548) $generated@@66)) (= ($generated@@137 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@330 $generated@@546) $generated@@549))) (and ($generated@@229 ($generated@@83 ($generated@@402 $generated@@546) $generated@@549) $generated@@548) ($generated@@229 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@83 ($generated@@402 $generated@@546) $generated@@549))
 :pattern ( ($generated@@83 ($generated@@330 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@137 $generated@@546 ($generated@@427 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@150)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@228 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@228 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@150)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@228 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@228 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) $generated@@66)) ($generated@@229 $generated@@556 ($generated@@419 $generated@@557 $generated@@558))) (and (= ($generated@@301 ($generated@@351 ($generated@@314 $generated@@150 $generated@@150) $generated@@556)) $generated@@556) ($generated@@137 ($generated@@351 ($generated@@314 $generated@@150 $generated@@150) $generated@@556) ($generated@@419 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@229 $generated@@556 ($generated@@419 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) $generated@@66)) ($generated@@229 $generated@@559 ($generated@@427 $generated@@560 $generated@@561))) (and (= ($generated@@301 ($generated@@351 ($generated@@332 $generated@@150 $generated@@150) $generated@@559)) $generated@@559) ($generated@@137 ($generated@@351 ($generated@@332 $generated@@150 $generated@@150) $generated@@559) ($generated@@427 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@229 $generated@@559 ($generated@@427 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@66) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@150)) ($generated@@229 $generated@@564 ($generated@@140 $generated@@562 $generated@@563))) (and (= ($generated@@301 ($generated@@351 $generated@@141 $generated@@564)) $generated@@564) ($generated@@137 ($generated@@351 $generated@@141 $generated@@564) ($generated@@140 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@229 $generated@@564 ($generated@@140 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@83 ($generated@@240 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@83 ($generated@@240 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@83 ($generated@@443 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@83 ($generated@@443 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@71)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@66) (= (type $generated@@572) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@571 $generated@@572)) $generated@@63) (= ($generated@@569 ($generated@@140 $generated@@571 $generated@@572)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@141) (= ($generated@@550 ($generated@@301 $generated@@573)) ($generated@@551 $generated@@573)))
 :pattern ( ($generated@@550 ($generated@@301 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@150) ($generated@@229 $generated@@574 ($generated@@77 0))) (and (= ($generated@@301 ($generated@@351 $generated@@2 $generated@@574)) $generated@@574) ($generated@@137 ($generated@@351 ($generated@@78 $generated@@150 $generated@@4) $generated@@574) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@574 ($generated@@77 0)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@66)) ($generated@@229 $generated@@575 ($generated@@258 $generated@@576))) (and (= ($generated@@301 ($generated@@351 ($generated@@78 $generated@@150 $generated@@4) $generated@@575)) $generated@@575) ($generated@@137 ($generated@@351 ($generated@@78 $generated@@150 $generated@@4) $generated@@575) ($generated@@258 $generated@@576))))
 :pattern ( ($generated@@229 $generated@@575 ($generated@@258 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@150) (= (type $generated@@578) $generated@@66)) ($generated@@229 $generated@@577 ($generated@@263 $generated@@578))) (and (= ($generated@@301 ($generated@@351 ($generated@@78 $generated@@150 $generated@@4) $generated@@577)) $generated@@577) ($generated@@137 ($generated@@351 ($generated@@78 $generated@@150 $generated@@4) $generated@@577) ($generated@@263 $generated@@578))))
 :pattern ( ($generated@@229 $generated@@577 ($generated@@263 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@150) (= (type $generated@@580) $generated@@66)) ($generated@@229 $generated@@579 ($generated@@155 $generated@@580))) (and (= ($generated@@301 ($generated@@351 ($generated@@78 $generated@@150 $generated@@2) $generated@@579)) $generated@@579) ($generated@@137 ($generated@@351 ($generated@@78 $generated@@150 $generated@@2) $generated@@579) ($generated@@155 $generated@@580))))
 :pattern ( ($generated@@229 $generated@@579 ($generated@@155 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@150) (= (type $generated@@582) $generated@@66)) ($generated@@229 $generated@@581 ($generated@@509 $generated@@582))) (and (= ($generated@@301 ($generated@@351 ($generated@@288 $generated@@150) $generated@@581)) $generated@@581) ($generated@@137 ($generated@@351 ($generated@@288 $generated@@150) $generated@@581) ($generated@@509 $generated@@582))))
 :pattern ( ($generated@@229 $generated@@581 ($generated@@509 $generated@@582)))
)))
(assert  (=> (<= 1 $generated@@236) (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@66) (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@585) $generated@@150)) (or ($generated@@252 $generated@@583 ($generated@@269 $generated@@585)) (and (not (= 1 $generated@@236)) (and ($generated@@273 $generated@@584) ($generated@@229 $generated@@585 $generated@@583))))) (and (and ($generated@@294 $generated@@583 ($generated@@269 $generated@@585)) ($generated@@238 $generated@@583 $generated@@583 ($generated@@269 $generated@@585))) (= ($generated@@251 $generated@@583 ($generated@@269 $generated@@585)) (let (($generated@@586 ($generated@@295 $generated@@583 ($generated@@269 $generated@@585))))
(ite ($generated@@0 ($generated@@83 ($generated@@269 ($generated@@237 $generated@@583 $generated@@583 ($generated@@269 $generated@@585))) ($generated@@269 $generated@@585))) $generated@@586 (+ $generated@@586 1))))))
 :weight 3
 :pattern ( ($generated@@251 $generated@@583 ($generated@@269 $generated@@585)) ($generated@@273 $generated@@584))
))))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@569 $generated@@134) $generated@@64))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@587 ($generated@@155 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@587 $generated@@590)))) ($generated@@274 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@83 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@76 $generated@@587 ($generated@@155 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@141) (= (type $generated@@592) $generated@@66)) (= (type $generated@@593) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@273 $generated@@593) (and ($generated@@139 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@66) ($generated@@76 $generated@@591 ($generated@@140 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@76 $generated@@591 ($generated@@140 $generated@@592 $generated@@594) $generated@@593))
))))) ($generated@@274 ($generated@@148 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@274 ($generated@@148 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@141) (= (type $generated@@596) $generated@@66)) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@273 $generated@@597) (and ($generated@@139 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@66) ($generated@@76 $generated@@595 ($generated@@140 $generated@@598 $generated@@596) $generated@@597))
 :pattern ( ($generated@@76 $generated@@595 ($generated@@140 $generated@@598 $generated@@596) $generated@@597))
))))) ($generated@@274 ($generated@@149 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@274 ($generated@@149 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@66) (= (type $generated@@600) $generated@@150)) ($generated@@294 $generated@@599 $generated@@600)) (and (<= ($generated@@253 0) ($generated@@295 $generated@@599 $generated@@600)) (and ($generated@@229 $generated@@600 $generated@@599) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@599 $generated@@599 $generated@@600) $generated@@600)))))
 :pattern ( ($generated@@295 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@150) (= (type $generated@@602) $generated@@150)) (= ($generated@@228 ($generated@@269 $generated@@601) ($generated@@269 $generated@@602)) ($generated@@269 ($generated@@228 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@228 ($generated@@269 $generated@@601) ($generated@@269 $generated@@602)))
)))
(assert  (=> (<= 0 $generated@@236) (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@66) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@150)) (or ($generated@@238 $generated@@603 $generated@@604 $generated@@605) (and (not (= 0 $generated@@236)) ($generated@@229 $generated@@605 $generated@@604)))) ($generated@@137 ($generated@@237 $generated@@603 $generated@@604 $generated@@605) ($generated@@258 $generated@@604)))
 :pattern ( ($generated@@237 $generated@@603 $generated@@604 $generated@@605))
))))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@301 ($generated@@8 ($generated@@253 $generated@@606))) ($generated@@269 ($generated@@301 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@301 ($generated@@8 ($generated@@253 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@301 ($generated@@269 $generated@@607)) ($generated@@269 ($generated@@301 $generated@@607)))
 :pattern ( ($generated@@301 ($generated@@269 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@289 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@288 $generated@@609)) (= ($generated@@287 $generated@@608) 0)) (= $generated@@608 ($generated@@286 $generated@@609))))
 :pattern ( ($generated@@287 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@78 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@306 ($generated@@84 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@306 $generated@@610) ($generated ($generated@@83 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@306 ($generated@@84 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@615) $generated@@2)) ($generated@@76 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@76 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@617) $generated@@3)) ($generated@@76 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@76 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@619) $generated@@4)) ($generated@@76 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@76 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@621) $generated@@467)) ($generated@@76 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@76 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@623) $generated@@150)) ($generated@@76 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@76 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@288 $generated@@150)) (= (type $generated@@625) $generated@@66)) (= ($generated@@137 $generated@@624 ($generated@@509 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@287 $generated@@624))) ($generated@@229 ($generated@@510 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@510 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@137 $generated@@624 ($generated@@509 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@288 $generated@@150)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@287 $generated@@628))) (< ($generated@@551 ($generated@@351 $generated@@141 ($generated@@510 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@551 ($generated@@351 $generated@@141 ($generated@@510 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@314 $generated@@150 $generated@@150)) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) $generated@@66)) ($generated@@137 $generated@@630 ($generated@@419 $generated@@631 $generated@@632))) (and (and ($generated@@137 ($generated@@312 $generated@@630) ($generated@@258 $generated@@631)) ($generated@@137 ($generated@@362 $generated@@630) ($generated@@258 $generated@@632))) ($generated@@137 ($generated@@393 $generated@@630) ($generated@@258 ($generated@@140 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@137 $generated@@630 ($generated@@419 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@332 $generated@@150 $generated@@150)) (= (type $generated@@634) $generated@@66)) (= (type $generated@@635) $generated@@66)) ($generated@@137 $generated@@633 ($generated@@427 $generated@@634 $generated@@635))) (and (and ($generated@@137 ($generated@@330 $generated@@633) ($generated@@263 $generated@@634)) ($generated@@137 ($generated@@373 $generated@@633) ($generated@@263 $generated@@635))) ($generated@@137 ($generated@@401 $generated@@633) ($generated@@263 ($generated@@140 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@137 $generated@@633 ($generated@@427 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@137 $generated@@636 $generated@@46))
 :pattern ( ($generated@@137 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@137 $generated@@637 $generated@@47))
 :pattern ( ($generated@@137 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@137 $generated@@638 $generated@@44))
 :pattern ( ($generated@@137 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@467) ($generated@@137 $generated@@639 $generated@@45))
 :pattern ( ($generated@@137 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@150) ($generated@@137 $generated@@640 $generated@@48))
 :pattern ( ($generated@@137 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@641) $generated@@66) (= (type $generated@@642) $generated@@150)) (= (type $generated@@644) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@645) $generated@@150)) (= (type $generated@@646) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@647) $generated@@79)) (= (type $generated@@648) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@650  (=> (and ($generated@@294 $generated@@641 $generated@@642) (= (ControlFlow 0 4) (- 0 3))) ($generated@@137 ($generated@@8 (ite ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642)) $generated@@643 (+ $generated@@643 1))) $generated@@134))))
(let (($generated@@651  (=> (and (not ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642))) (= (ControlFlow 0 6) 4)) $generated@@650)))
(let (($generated@@652  (=> (and ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642)) (= (ControlFlow 0 5) 4)) $generated@@650)))
(let (($generated@@653  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (and ($generated@@137 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (<= ($generated@@253 0) ($generated@@253 0)) (and ($generated@@229 $generated@@642 $generated@@641) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642))))) (or (and ($generated@@137 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (<= ($generated@@253 0) ($generated@@253 0)) (and ($generated@@229 $generated@@642 $generated@@641) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642))))) (exists (($generated@@654 Int) )  (and (<= ($generated@@253 0) $generated@@654) (and ($generated@@229 $generated@@642 $generated@@641) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642)))))))) (=> (or (and ($generated@@137 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (<= ($generated@@253 0) ($generated@@253 0)) (and ($generated@@229 $generated@@642 $generated@@641) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642))))) (or (and ($generated@@137 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (<= ($generated@@253 0) ($generated@@253 0)) (and ($generated@@229 $generated@@642 $generated@@641) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642))))) (exists (($generated@@655 Int) )  (and (<= ($generated@@253 0) $generated@@655) (and ($generated@@229 $generated@@642 $generated@@641) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642))))))) (=> (and (and (<= ($generated@@253 0) $generated@@643) (and ($generated@@229 $generated@@642 $generated@@641) ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@642)))) (and ($generated@@274 $generated@@642 $generated@@641 $generated@@644) ($generated@@238 $generated@@641 $generated@@641 $generated@@642))) (and (=> (= (ControlFlow 0 7) 5) $generated@@652) (=> (= (ControlFlow 0 7) 6) $generated@@651)))))))
(let (($generated@@656  (=> (and (not ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@645))) (= (ControlFlow 0 12) 7)) $generated@@653)))
(let (($generated@@657  (=> (and ($generated@@0 ($generated@@83 ($generated@@237 $generated@@641 $generated@@641 $generated@@642) $generated@@645)) (= (ControlFlow 0 11) 7)) $generated@@653)))
(let (($generated@@658  (=> (and (and ($generated@@229 $generated@@645 $generated@@641) ($generated@@274 $generated@@645 $generated@@641 $generated@@644)) (and ($generated@@274 $generated@@642 $generated@@641 $generated@@644) ($generated@@238 $generated@@641 $generated@@641 $generated@@642))) (and (=> (= (ControlFlow 0 13) 11) $generated@@657) (=> (= (ControlFlow 0 13) 12) $generated@@656)))))
(let (($generated@@659  (=> (and (not (and ($generated@@229 $generated@@645 $generated@@641) ($generated@@274 $generated@@645 $generated@@641 $generated@@644))) (= (ControlFlow 0 10) 7)) $generated@@653)))
(let (($generated@@660  (=> (<= ($generated@@253 0) $generated@@643) (and (=> (= (ControlFlow 0 14) 13) $generated@@658) (=> (= (ControlFlow 0 14) 10) $generated@@659)))))
(let (($generated@@661  (=> (and (< $generated@@643 ($generated@@253 0)) (= (ControlFlow 0 9) 7)) $generated@@653)))
(let (($generated@@662  (and (=> (= (ControlFlow 0 15) 14) $generated@@660) (=> (= (ControlFlow 0 15) 9) $generated@@661))))
(let (($generated@@663 true))
(let (($generated@@664  (=> (= $generated@@646 ($generated@@216 $generated@@647 $generated@@644 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 15) $generated@@662) (=> (= (ControlFlow 0 16) 2) $generated@@663)))))
(let (($generated@@665 true))
(let (($generated@@666  (=> (= $generated@@648 ($generated@@161 $generated@@647 $generated@@644 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 1) $generated@@665) (=> (= (ControlFlow 0 17) 16) $generated@@664)))))
(let (($generated@@667  (=> (and (and (and ($generated@@273 $generated@@644) ($generated@@649 $generated@@644)) ($generated@@229 $generated@@642 $generated@@641)) (and (= 1 $generated@@236) (= (ControlFlow 0 18) 17))) $generated@@666)))
$generated@@667)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@369 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@135) 14) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@132 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@132 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@134 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@134 $generated@@137))
))))
(assert (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@64) ($generated@@133 $generated@@139)) ($generated@@0 ($generated@@134 ($generated@@11 true))))
 :pattern ( ($generated@@132 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (forall (($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@153)) $generated@@135)
 :pattern ( ($generated@@151 $generated@@153))
)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@135)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@144) (= (type $generated@@156) $generated@@144)) true) (= ($generated@@150 $generated@@155 $generated@@156)  (and (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156)))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@140 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@140 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@234)) $generated@@135)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert  (=> (<= 0 $generated@@230) (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (= (type $generated@@235) $generated@@64) (= (type $generated@@236) ($generated@@76 $generated@@77 $generated@@78))) (or ($generated@@233 $generated@@235) (and (not (= 0 $generated@@230)) ($generated@@232 $generated@@236)))) (and ($generated@@133 $generated@@235) (= ($generated@@231 $generated@@235) (let (($generated@@237 ($generated@@132 $generated@@235)))
$generated@@237))))
 :pattern ( ($generated@@231 $generated@@235) ($generated@@232 $generated@@236))
))))
(assert  (=> (<= 0 $generated@@230) (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (or ($generated@@233 $generated@@238) (and (not (= 0 $generated@@230)) ($generated@@232 $generated@@239)))) (and ($generated@@133 $generated@@238) (= ($generated@@231 $generated@@238) (let (($generated@@240 ($generated@@132 $generated@@238)))
$generated@@240))))
 :weight 3
 :pattern ( ($generated@@231 $generated@@238) ($generated@@232 $generated@@239))
))))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@144)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@64) (= (type $generated@@246) $generated@@64)) (= (type $generated@@247) $generated@@135)) (= (type $generated@@248) $generated@@135)) (= ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@143 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@140 ($generated@@241 $generated@@247 $generated@@248) ($generated@@143 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@144) (= (type $generated@@250) $generated@@144)) (= ($generated@@150 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@150 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@254) $generated@@64)) (= ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@135) ($generated@@0 ($generated@@81 $generated@@253 $generated@@255))) ($generated@@242 $generated@@255 $generated@@254))
 :pattern ( ($generated@@81 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@140 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@64)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@259) $generated@@64)) (= ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@135) ($generated@@0 ($generated@@81 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@81 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@140 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@134 $generated@@261) $generated@@261)
 :pattern ( ($generated@@134 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) $generated@@64)) (= (type $generated@@265) $generated@@135)) (= (type $generated@@266) $generated@@135)) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@232 $generated@@267)) (= ($generated@@74 ($generated@@241 $generated@@265 $generated@@266) ($generated@@143 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@74 ($generated@@241 $generated@@265 $generated@@266) ($generated@@143 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@144) (= ($generated@@142 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@144) ($generated@@142 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@135) (= (type $generated@@273) $generated@@135)) (= $generated@@271 ($generated@@241 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@142 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert  (=> (<= 0 $generated@@230) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@64) (or ($generated@@233 $generated@@282) (not (= 0 $generated@@230)))) ($generated@@242 ($generated@@231 $generated@@282) $generated@@282))
 :pattern ( ($generated@@231 $generated@@282))
))))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@135)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@64) (= (type $generated@@287) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@262 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@74 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@262 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@76 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@79 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@76 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@81 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@76 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@81 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@76 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@81 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@79 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@76 $generated@@331 $generated@@2)) (= ($generated@@158 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@81 $generated@@330 $generated@@332))) (<= ($generated ($generated@@81 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@158 $generated@@330))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@298 (type $generated@@333))))
(let (($generated@@335 ($generated@@297 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@296 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@295 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@294 $generated@@333))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(= (type ($generated@@337 $generated@@338)) ($generated@@76 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@298 (type $generated@@340))))
(let (($generated@@342 ($generated@@297 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@296 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@295 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@337 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@337 $generated@@340))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@316 (type $generated@@344))))
(let (($generated@@346 ($generated@@315 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@314 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@313 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@312 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@316 (type $generated@@351))))
(let (($generated@@353 ($generated@@315 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@314 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@313 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@356) $generated@@64)) (= ($generated@@140 $generated@@355 ($generated@@157 $generated@@356)) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@355 $generated@@357)))) ($generated@@242 $generated@@357 $generated@@356))
 :pattern ( ($generated@@81 $generated@@355 $generated@@357))
))))
 :pattern ( ($generated@@140 $generated@@355 ($generated@@157 $generated@@356)))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@251 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@135) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@262 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@251 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@256 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@135) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@262 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@256 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(= ($generated ($generated@@81 ($generated@@289 $generated@@367) $generated@@366)) 0))
 :pattern ( (let (($generated@@367 (type $generated@@366)))
($generated@@81 ($generated@@289 $generated@@367) $generated@@366)))
)))
(assert  (and (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@368 $generated@@371)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@368 $generated@@371))
)) (forall (($generated@@372 T@T) ($generated@@373 T@U) ) (! (= (type ($generated@@369 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@369 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@298 (type $generated@@374))))
(let (($generated@@376 ($generated@@297 (type $generated@@374))))
(= (type ($generated@@370 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@370 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@296 $generated@@135 $generated@@135)) (= (type $generated@@378) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@377) ($generated@@151 ($generated@@369 $generated@@144 $generated@@378)))) (= ($generated@@81 ($generated@@370 $generated@@377) ($generated@@151 ($generated@@369 $generated@@144 $generated@@378))) ($generated@@152 ($generated@@369 $generated@@144 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@368 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@316 (type $generated@@382))))
(let (($generated@@384 ($generated@@315 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@386) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@385) ($generated@@151 ($generated@@369 $generated@@144 $generated@@386)))) (= ($generated@@81 ($generated@@380 $generated@@385) ($generated@@151 ($generated@@369 $generated@@144 $generated@@386))) ($generated@@152 ($generated@@369 $generated@@144 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@297 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@296 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@337 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@294 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@337 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@315 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@314 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@81 ($generated@@312 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@64)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@296 $generated@@135 $generated@@135)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@400) $generated@@404))) (and ($generated@@262 ($generated@@81 ($generated@@370 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@262 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@74 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@408) $generated@@412))) (and ($generated@@262 ($generated@@81 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@262 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@76 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@316 (type $generated@@415))))
(let (($generated@@417 ($generated@@315 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@314 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@313 $generated@@417 $generated@@416)) (= ($generated@@312 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@312 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@316 (type $generated@@418))))
(let (($generated@@420 ($generated@@315 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@314 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@313 $generated@@420 $generated@@419)) (= ($generated@@348 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@348 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@316 (type $generated@@421))))
(let (($generated@@423 ($generated@@315 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@314 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@313 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@135))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@298 (type $generated@@424))))
(let (($generated@@426 ($generated@@297 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@296 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@295 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@135) (= (type $generated@@428) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@368 $generated@@424) ($generated@@283 ($generated@@241 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@368 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@316 (type $generated@@429))))
(let (($generated@@431 ($generated@@315 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@314 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@313 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@135) (= (type $generated@@433) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@379 $generated@@429) ($generated@@283 ($generated@@241 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@135) ($generated@@242 $generated@@434 $generated@@46)) (and (= ($generated@@283 ($generated@@369 $generated@@2 $generated@@434)) $generated@@434) ($generated@@140 ($generated@@369 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@135) ($generated@@242 $generated@@435 $generated@@47)) (and (= ($generated@@283 ($generated@@369 $generated@@3 $generated@@435)) $generated@@435) ($generated@@140 ($generated@@369 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@135) ($generated@@242 $generated@@436 $generated@@44)) (and (= ($generated@@283 ($generated@@369 $generated@@4 $generated@@436)) $generated@@436) ($generated@@140 ($generated@@369 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@135) ($generated@@242 $generated@@438 $generated@@45)) (and (= ($generated@@283 ($generated@@369 $generated@@437 $generated@@438)) $generated@@438) ($generated@@140 ($generated@@369 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@64) (= ($generated@@242 ($generated@@283 $generated@@439) $generated@@440) ($generated@@140 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@242 ($generated@@283 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@79 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@76 $generated@@442 $generated@@2)) (<= 0 ($generated@@288 $generated@@441))))
 :pattern ( ($generated@@288 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@277 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@276 $generated@@444)) (<= 0 ($generated@@275 $generated@@443))))
 :pattern ( ($generated@@275 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@64)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@135) (= (type $generated@@466) $generated@@135)) (= ($generated@@268 ($generated@@241 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@143 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@143 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@143 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@143 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@135) (= (type $generated@@476) $generated@@135)) (= ($generated@@151 ($generated@@241 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@241 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@135) (= (type $generated@@478) $generated@@135)) (= ($generated@@152 ($generated@@241 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@241 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@277 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@276 $generated@@135)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@275 $generated@@485))) ($generated@@262 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@251 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@251 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@251 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@256 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@256 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@256 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@157 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@157 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@369 $generated@@508 ($generated@@283 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@283 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@296 $generated@@135 $generated@@135)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@140 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@294 $generated@@509) $generated@@512))) (and ($generated@@242 ($generated@@81 ($generated@@370 $generated@@509) $generated@@512) $generated@@511) ($generated@@242 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@294 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@140 $generated@@509 ($generated@@397 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@140 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@513) $generated@@516))) (and ($generated@@242 ($generated@@81 ($generated@@380 $generated@@513) $generated@@516) $generated@@515) ($generated@@242 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@380 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@140 $generated@@513 ($generated@@405 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) (= (type $generated@@520) $generated@@135)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@241 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@241 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@135) (= (type $generated@@522) $generated@@135)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@241 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@241 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@135) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@242 $generated@@523 ($generated@@397 $generated@@524 $generated@@525))) (and (= ($generated@@283 ($generated@@369 ($generated@@296 $generated@@135 $generated@@135) $generated@@523)) $generated@@523) ($generated@@140 ($generated@@369 ($generated@@296 $generated@@135 $generated@@135) $generated@@523) ($generated@@397 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@242 $generated@@523 ($generated@@397 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@135) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@242 $generated@@526 ($generated@@405 $generated@@527 $generated@@528))) (and (= ($generated@@283 ($generated@@369 ($generated@@314 $generated@@135 $generated@@135) $generated@@526)) $generated@@526) ($generated@@140 ($generated@@369 ($generated@@314 $generated@@135 $generated@@135) $generated@@526) ($generated@@405 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@242 $generated@@526 ($generated@@405 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@135)) ($generated@@242 $generated@@531 ($generated@@143 $generated@@529 $generated@@530))) (and (= ($generated@@283 ($generated@@369 $generated@@144 $generated@@531)) $generated@@531) ($generated@@140 ($generated@@369 $generated@@144 $generated@@531) ($generated@@143 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@242 $generated@@531 ($generated@@143 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@413 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@413 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@143 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@144) (= ($generated@@517 ($generated@@283 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@283 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@135) ($generated@@242 $generated@@539 ($generated@@75 0))) (and (= ($generated@@283 ($generated@@369 $generated@@2 $generated@@539)) $generated@@539) ($generated@@140 ($generated@@369 ($generated@@76 $generated@@135 $generated@@4) $generated@@539) ($generated@@75 0))))
 :pattern ( ($generated@@242 $generated@@539 ($generated@@75 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@135) (= (type $generated@@541) $generated@@64)) ($generated@@242 $generated@@540 ($generated@@251 $generated@@541))) (and (= ($generated@@283 ($generated@@369 ($generated@@76 $generated@@135 $generated@@4) $generated@@540)) $generated@@540) ($generated@@140 ($generated@@369 ($generated@@76 $generated@@135 $generated@@4) $generated@@540) ($generated@@251 $generated@@541))))
 :pattern ( ($generated@@242 $generated@@540 ($generated@@251 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@135) (= (type $generated@@543) $generated@@64)) ($generated@@242 $generated@@542 ($generated@@256 $generated@@543))) (and (= ($generated@@283 ($generated@@369 ($generated@@76 $generated@@135 $generated@@4) $generated@@542)) $generated@@542) ($generated@@140 ($generated@@369 ($generated@@76 $generated@@135 $generated@@4) $generated@@542) ($generated@@256 $generated@@543))))
 :pattern ( ($generated@@242 $generated@@542 ($generated@@256 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@135) (= (type $generated@@545) $generated@@64)) ($generated@@242 $generated@@544 ($generated@@157 $generated@@545))) (and (= ($generated@@283 ($generated@@369 ($generated@@76 $generated@@135 $generated@@2) $generated@@544)) $generated@@544) ($generated@@140 ($generated@@369 ($generated@@76 $generated@@135 $generated@@2) $generated@@544) ($generated@@157 $generated@@545))))
 :pattern ( ($generated@@242 $generated@@544 ($generated@@157 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@135) (= (type $generated@@547) $generated@@64)) ($generated@@242 $generated@@546 ($generated@@479 $generated@@547))) (and (= ($generated@@283 ($generated@@369 ($generated@@276 $generated@@135) $generated@@546)) $generated@@546) ($generated@@140 ($generated@@369 ($generated@@276 $generated@@135) $generated@@546) ($generated@@479 $generated@@547))))
 :pattern ( ($generated@@242 $generated@@546 ($generated@@479 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@548 ($generated@@157 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@548 $generated@@551)))) ($generated@@262 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@81 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@157 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@144) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@232 $generated@@554) (and ($generated@@142 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@143 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@143 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@262 ($generated@@151 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@262 ($generated@@151 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@144) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@232 $generated@@558) (and ($generated@@142 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@143 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@143 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@262 ($generated@@152 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@262 ($generated@@152 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@135) (= (type $generated@@561) $generated@@135)) (= ($generated@@241 ($generated@@134 $generated@@560) ($generated@@134 $generated@@561)) ($generated@@134 ($generated@@241 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@241 ($generated@@134 $generated@@560) ($generated@@134 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@283 ($generated@@134 $generated@@562)) ($generated@@134 ($generated@@283 $generated@@562)))
 :pattern ( ($generated@@283 ($generated@@134 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@277 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@276 $generated@@564)) (= ($generated@@275 $generated@@563) 0)) (= $generated@@563 ($generated@@274 $generated@@564))))
 :pattern ( ($generated@@275 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@288 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@288 $generated@@565) ($generated ($generated@@81 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@288 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@2)) ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@3)) ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@4)) ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@437)) ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@135)) ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@276 $generated@@135)) (= (type $generated@@580) $generated@@64)) (= ($generated@@140 $generated@@579 ($generated@@479 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@275 $generated@@579))) ($generated@@242 ($generated@@480 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@480 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@140 $generated@@579 ($generated@@479 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@276 $generated@@135)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@275 $generated@@583))) (< ($generated@@518 ($generated@@369 $generated@@144 ($generated@@480 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@518 ($generated@@369 $generated@@144 ($generated@@480 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@296 $generated@@135 $generated@@135)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@140 $generated@@585 ($generated@@397 $generated@@586 $generated@@587))) (and (and ($generated@@140 ($generated@@294 $generated@@585) ($generated@@251 $generated@@586)) ($generated@@140 ($generated@@337 $generated@@585) ($generated@@251 $generated@@587))) ($generated@@140 ($generated@@368 $generated@@585) ($generated@@251 ($generated@@143 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@140 $generated@@585 ($generated@@397 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@314 $generated@@135 $generated@@135)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@140 $generated@@588 ($generated@@405 $generated@@589 $generated@@590))) (and (and ($generated@@140 ($generated@@312 $generated@@588) ($generated@@256 $generated@@589)) ($generated@@140 ($generated@@348 $generated@@588) ($generated@@256 $generated@@590))) ($generated@@140 ($generated@@379 $generated@@588) ($generated@@256 ($generated@@143 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@140 $generated@@588 ($generated@@405 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@140 $generated@@591 $generated@@46))
 :pattern ( ($generated@@140 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@140 $generated@@592 $generated@@47))
 :pattern ( ($generated@@140 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@140 $generated@@593 $generated@@44))
 :pattern ( ($generated@@140 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@437) ($generated@@140 $generated@@594 $generated@@45))
 :pattern ( ($generated@@140 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@135) ($generated@@140 $generated@@595 $generated@@48))
 :pattern ( ($generated@@140 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@596) $generated@@135) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@164 $generated@@77 $generated@@4))) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) ($generated@@164 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@603  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@0 ($generated@@134 ($generated@@11 true))))))
(let (($generated@@604  (=> (and (not (and ($generated@@242 $generated@@596 $generated@@597) ($generated@@262 $generated@@596 $generated@@597 $generated@@598))) (= (ControlFlow 0 5) 3)) $generated@@603)))
(let (($generated@@605  (=> (and (and ($generated@@242 $generated@@596 $generated@@597) ($generated@@262 $generated@@596 $generated@@597 $generated@@598)) (= (ControlFlow 0 4) 3)) $generated@@603)))
(let (($generated@@606  (=> (= $generated@@599 ($generated@@218 $generated@@600 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@605) (=> (= (ControlFlow 0 6) 5) $generated@@604)))))
(let (($generated@@607 true))
(let (($generated@@608  (=> (= $generated@@601 ($generated@@163 $generated@@600 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@607) (=> (= (ControlFlow 0 7) 6) $generated@@606)))))
(let (($generated@@609  (=> (and (and ($generated@@232 $generated@@598) ($generated@@602 $generated@@598)) (and (= 0 $generated@@230) (= (ControlFlow 0 8) 7))) $generated@@608)))
$generated@@609))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@295 (T@T T@T) T@U)
(declare-fun $generated@@296 (T@T T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@333 (T@T T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@69)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (= (type $generated@@136) $generated@@68))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
 :pattern ( ($generated@@78 $generated@@137 $generated@@136 $generated@@138))
)))
(assert (= (type $generated@@139) $generated@@68))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
 :pattern ( ($generated@@78 $generated@@140 $generated@@139 $generated@@141))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@142 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@142 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (let (($generated@@148 (type $generated@@147)))
(= (type ($generated@@144 $generated@@147)) $generated@@148))
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@68) ($generated@@143 $generated@@149)) ($generated@@0 ($generated@@144 ($generated@@11 true))))
 :pattern ( ($generated@@142 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@79 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@153 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@154)) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158))) ($generated@@152 $generated@@159))
 :pattern ( ($generated@@152 $generated@@159) ($generated@@150 $generated@@159 ($generated@@153 $generated@@157 $generated@@158)))
)))
(assert  (and (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@145)
 :pattern ( ($generated@@161 $generated@@163))
)) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@145)
 :pattern ( ($generated@@162 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@154) (= (type $generated@@166) $generated@@154)) true) (= ($generated@@160 $generated@@165 $generated@@166)  (and (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)) (= ($generated@@162 $generated@@165) ($generated@@162 $generated@@166)))))
 :pattern ( ($generated@@160 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@68)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@80 $generated@@145 $generated@@2)) (= (type $generated@@171) $generated@@68)) ($generated@@150 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@150 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@81 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@71 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@81) (= (type $generated@@222) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@223) ($generated@@70 $generated@@4))) (= (type $generated@@225) $generated@@81)) (= (type $generated@@226) ($generated@@70 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@232)) $generated@@145)
 :pattern ( ($generated@@229 $generated@@232))
)))
(assert  (=> (<= 0 $generated@@228) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82))) (or ($generated@@231 $generated@@233) (and (not (= 0 $generated@@228)) ($generated@@230 $generated@@234)))) (and ($generated@@143 $generated@@233) (= ($generated@@229 $generated@@233) (let (($generated@@235 ($generated@@142 $generated@@233)))
$generated@@235))))
 :pattern ( ($generated@@229 $generated@@233) ($generated@@230 $generated@@234))
))))
(assert  (=> (<= 0 $generated@@228) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (and (= (type $generated@@236) $generated@@68) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) (or ($generated@@231 $generated@@236) (and (not (= 0 $generated@@228)) ($generated@@230 $generated@@237)))) (and ($generated@@143 $generated@@236) (= ($generated@@229 $generated@@236) (let (($generated@@238 ($generated@@142 $generated@@236)))
$generated@@238))))
 :weight 3
 :pattern ( ($generated@@229 $generated@@236) ($generated@@230 $generated@@237))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@154)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@145)) (= (type $generated@@246) $generated@@145)) (= ($generated@@150 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@150 ($generated@@239 $generated@@245 $generated@@246) ($generated@@153 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@154) (= (type $generated@@248) $generated@@154)) (= ($generated@@160 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@160 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@145 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@150 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@145) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@150 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@68)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@145 $generated@@4)) (= (type $generated@@257) $generated@@68)) (= ($generated@@150 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@145) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@150 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@144 $generated@@261) $generated@@261)
 :pattern ( ($generated@@144 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@68) (= (type $generated@@264) $generated@@68)) (= (type $generated@@265) $generated@@145)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@230 $generated@@267)) (= ($generated@@78 ($generated@@239 $generated@@265 $generated@@266) ($generated@@153 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@265 $generated@@266) ($generated@@153 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@72)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@154) (= ($generated@@152 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@154) ($generated@@152 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@145) (= (type $generated@@273) $generated@@145)) (= $generated@@271 ($generated@@239 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@152 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert  (=> (<= 0 $generated@@228) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@68) (or ($generated@@231 $generated@@282) (not (= 0 $generated@@228)))) ($generated@@240 ($generated@@229 $generated@@282) $generated@@282))
 :pattern ( ($generated@@229 $generated@@282))
))))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@145)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@262 ($generated@@283 $generated@@285) $generated@@286 $generated@@287) ($generated@@78 $generated@@285 $generated@@286 $generated@@287)))
 :pattern ( ($generated@@262 ($generated@@283 $generated@@285) $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@290 T@T) ) (! (= (type ($generated@@289 $generated@@290)) ($generated@@80 $generated@@290 $generated@@2))
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (let (($generated@@292 ($generated@@83 (type $generated@@291))))
 (=> (= (type $generated@@291) ($generated@@80 $generated@@292 $generated@@2)) (and (= (= ($generated@@288 $generated@@291) 0) (= $generated@@291 ($generated@@289 $generated@@292))) (=> (not (= ($generated@@288 $generated@@291) 0)) (exists (($generated@@293 T@U) ) (!  (and (= (type $generated@@293) $generated@@292) (< 0 ($generated ($generated@@85 $generated@@291 $generated@@293))))
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
))))))
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert  (and (and (and (and (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (= ($generated@@1 ($generated@@296 $generated@@299 $generated@@300)) 18)) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@297 ($generated@@296 $generated@@301 $generated@@302)) $generated@@301)
 :pattern ( ($generated@@296 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@296 $generated@@303 $generated@@304)) $generated@@304)
 :pattern ( ($generated@@296 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@297 (type $generated@@305))))
(= (type ($generated@@294 $generated@@305)) ($generated@@80 $generated@@306 $generated@@4)))
 :pattern ( ($generated@@294 $generated@@305))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= (type ($generated@@295 $generated@@307 $generated@@308)) ($generated@@296 $generated@@307 $generated@@308))
 :pattern ( ($generated@@295 $generated@@307 $generated@@308))
))))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@T) ) (! (let (($generated@@311 (type $generated@@309)))
 (not ($generated@@0 ($generated@@85 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309))))
 :pattern ( (let (($generated@@311 (type $generated@@309)))
($generated@@85 ($generated@@294 ($generated@@295 $generated@@311 $generated@@310)) $generated@@309)))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@80 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@85 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@83 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@80 $generated@@331 $generated@@2)) (= ($generated@@168 $generated@@330) (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@331) (and (<= 0 ($generated ($generated@@85 $generated@@330 $generated@@332))) (<= ($generated ($generated@@85 $generated@@330 $generated@@332)) ($generated@@288 $generated@@330))))
 :pattern ( ($generated@@85 $generated@@330 $generated@@332))
)))))
 :pattern ( ($generated@@168 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@U) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@240 $generated@@336 $generated@@136)) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@336)) $generated@@336) ($generated@@150 ($generated@@333 $generated@@2 $generated@@336) $generated@@136)))
 :pattern ( ($generated@@240 $generated@@336 $generated@@136))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@145) ($generated@@240 $generated@@337 $generated@@139)) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@337)) $generated@@337) ($generated@@150 ($generated@@333 $generated@@2 $generated@@337) $generated@@139)))
 :pattern ( ($generated@@240 $generated@@337 $generated@@139))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@298 (type $generated@@338))))
(let (($generated@@340 ($generated@@297 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@296 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@295 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@85 ($generated@@294 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@294 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@298 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@80 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@298 (type $generated@@345))))
(let (($generated@@347 ($generated@@297 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@296 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@295 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@85 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@316 (type $generated@@349))))
(let (($generated@@351 ($generated@@315 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@314 $generated@@351 $generated@@350)) (or (= $generated@@349 ($generated@@313 $generated@@351 $generated@@350)) (exists (($generated@@352 T@U) ) (!  (and (= (type $generated@@352) $generated@@351) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@349) $generated@@352)))
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
))))))
 :pattern ( ($generated@@312 $generated@@349))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@316 (type $generated@@354))))
(= (type ($generated@@353 $generated@@354)) ($generated@@80 $generated@@355 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@316 (type $generated@@356))))
(let (($generated@@358 ($generated@@315 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@314 $generated@@358 $generated@@357)) (or (= $generated@@356 ($generated@@313 $generated@@358 $generated@@357)) (exists (($generated@@359 T@U) ) (!  (and (= (type $generated@@359) $generated@@357) ($generated@@0 ($generated@@85 ($generated@@353 $generated@@356) $generated@@359)))
 :no-pattern (type $generated@@359)
 :no-pattern ($generated $generated@@359)
 :no-pattern ($generated@@0 $generated@@359)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@80 $generated@@145 $generated@@2)) (= (type $generated@@361) $generated@@68)) (= ($generated@@150 $generated@@360 ($generated@@167 $generated@@361)) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@145) (< 0 ($generated ($generated@@85 $generated@@360 $generated@@362)))) ($generated@@240 $generated@@362 $generated@@361))
 :pattern ( ($generated@@85 $generated@@360 $generated@@362))
))))
 :pattern ( ($generated@@150 $generated@@360 ($generated@@167 $generated@@361)))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@80 $generated@@145 $generated@@4)) (= (type $generated@@364) $generated@@68)) (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@363 ($generated@@249 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@145) ($generated@@0 ($generated@@85 $generated@@363 $generated@@366))) ($generated@@262 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@85 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@78 $generated@@363 ($generated@@249 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@80 $generated@@145 $generated@@4)) (= (type $generated@@368) $generated@@68)) (= (type $generated@@369) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@367 ($generated@@254 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@145) ($generated@@0 ($generated@@85 $generated@@367 $generated@@370))) ($generated@@262 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@85 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@78 $generated@@367 ($generated@@254 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(= ($generated ($generated@@85 ($generated@@289 $generated@@372) $generated@@371)) 0))
 :pattern ( (let (($generated@@372 (type $generated@@371)))
($generated@@85 ($generated@@289 $generated@@372) $generated@@371)))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@80 $generated@@145 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@298 (type $generated@@376))))
(let (($generated@@378 ($generated@@297 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@80 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@85 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@85 ($generated@@294 $generated@@379) ($generated@@161 ($generated@@333 $generated@@154 $generated@@380)))) (= ($generated@@85 ($generated@@374 $generated@@379) ($generated@@161 ($generated@@333 $generated@@154 $generated@@380))) ($generated@@162 ($generated@@333 $generated@@154 $generated@@380))))))
 :pattern ( ($generated@@85 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@80 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@316 (type $generated@@384))))
(let (($generated@@386 ($generated@@315 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@80 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@387) ($generated@@161 ($generated@@333 $generated@@154 $generated@@388)))) (= ($generated@@85 ($generated@@382 $generated@@387) ($generated@@161 ($generated@@333 $generated@@154 $generated@@388))) ($generated@@162 ($generated@@333 $generated@@154 $generated@@388))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@297 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@296 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@85 ($generated@@342 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@85 ($generated@@294 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@85 ($generated@@374 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@85 ($generated@@294 $generated@@389) $generated@@393))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@85 ($generated@@342 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@315 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@314 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@85 ($generated@@353 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@85 ($generated@@312 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@85 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@394) $generated@@398))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@85 ($generated@@353 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@68)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@68)) (= (type $generated@@404) $generated@@68)) (= (type $generated@@405) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@85 ($generated@@294 $generated@@402) $generated@@406))) (and ($generated@@262 ($generated@@85 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@262 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@294 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@78 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@68)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) $generated@@68)) (= (type $generated@@413) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@410) $generated@@414))) (and ($generated@@262 ($generated@@85 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@262 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@78 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@80 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@316 (type $generated@@417))))
(let (($generated@@419 ($generated@@315 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@314 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@313 $generated@@419 $generated@@418)) (= ($generated@@312 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@312 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@316 (type $generated@@420))))
(let (($generated@@422 ($generated@@315 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@314 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@313 $generated@@422 $generated@@421)) (= ($generated@@353 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@353 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@316 (type $generated@@423))))
(let (($generated@@425 ($generated@@315 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@314 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@313 $generated@@425 $generated@@424)) (= ($generated@@381 $generated@@423) ($generated@@415 $generated@@145))))))
 :pattern ( ($generated@@381 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@298 (type $generated@@426))))
(let (($generated@@428 ($generated@@297 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@296 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@295 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@85 ($generated@@373 $generated@@426) ($generated@@283 ($generated@@239 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@316 (type $generated@@431))))
(let (($generated@@433 ($generated@@315 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@314 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@313 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@145) (= (type $generated@@435) $generated@@145)) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@431) ($generated@@283 ($generated@@239 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@381 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@240 $generated@@436 $generated@@46)) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@436)) $generated@@436) ($generated@@150 ($generated@@333 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@240 $generated@@437 $generated@@47)) (and (= ($generated@@283 ($generated@@333 $generated@@3 $generated@@437)) $generated@@437) ($generated@@150 ($generated@@333 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@240 $generated@@438 $generated@@44)) (and (= ($generated@@283 ($generated@@333 $generated@@4 $generated@@438)) $generated@@438) ($generated@@150 ($generated@@333 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@240 $generated@@440 $generated@@45)) (and (= ($generated@@283 ($generated@@333 $generated@@439 $generated@@440)) $generated@@440) ($generated@@150 ($generated@@333 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@68) (= ($generated@@240 ($generated@@283 $generated@@441) $generated@@442) ($generated@@150 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@240 ($generated@@283 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@83 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@80 $generated@@444 $generated@@2)) (<= 0 ($generated@@288 $generated@@443))))
 :pattern ( ($generated@@288 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@277 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@276 $generated@@446)) (<= 0 ($generated@@275 $generated@@445))))
 :pattern ( ($generated@@275 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@68)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@68) (= (type $generated@@450) $generated@@68)) (= ($generated@@447 ($generated@@399 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@399 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@68)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@68) (= (type $generated@@454) $generated@@68)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@68) (= (type $generated@@456) $generated@@68)) (= ($generated@@76 ($generated@@399 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@68) (= (type $generated@@460) $generated@@68)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@68) (= (type $generated@@464) $generated@@68)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@76 ($generated@@407 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@268 ($generated@@239 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@68)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@68)) (= ($generated@@469 ($generated@@153 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@153 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@68)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@473 ($generated@@153 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@153 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@161 ($generated@@239 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@239 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@162 ($generated@@239 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@239 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@277 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@276 $generated@@145)) (= (type $generated@@488) $generated@@68)) (= (type $generated@@489) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@275 $generated@@487))) ($generated@@262 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@78 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@79 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@79 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@68) (= ($generated@@493 ($generated@@249 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@249 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@68) (= ($generated@@497 ($generated@@254 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@254 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@76 ($generated@@254 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@68) (= ($generated@@501 ($generated@@167 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@167 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@68) (= ($generated@@76 ($generated@@167 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@76 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@333 $generated@@510 ($generated@@283 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@283 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@68)) (= (type $generated@@513) $generated@@68)) (= ($generated@@150 $generated@@511 ($generated@@399 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@85 ($generated@@294 $generated@@511) $generated@@514))) (and ($generated@@240 ($generated@@85 ($generated@@374 $generated@@511) $generated@@514) $generated@@513) ($generated@@240 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@85 ($generated@@374 $generated@@511) $generated@@514))
 :pattern ( ($generated@@85 ($generated@@294 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@150 $generated@@511 ($generated@@399 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@68)) (= (type $generated@@517) $generated@@68)) (= ($generated@@150 $generated@@515 ($generated@@407 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@85 ($generated@@312 $generated@@515) $generated@@518))) (and ($generated@@240 ($generated@@85 ($generated@@382 $generated@@515) $generated@@518) $generated@@517) ($generated@@240 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@85 ($generated@@382 $generated@@515) $generated@@518))
 :pattern ( ($generated@@85 ($generated@@312 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@150 $generated@@515 ($generated@@407 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@145)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@239 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@239 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@239 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@239 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) $generated@@68)) ($generated@@240 $generated@@525 ($generated@@399 $generated@@526 $generated@@527))) (and (= ($generated@@283 ($generated@@333 ($generated@@296 $generated@@145 $generated@@145) $generated@@525)) $generated@@525) ($generated@@150 ($generated@@333 ($generated@@296 $generated@@145 $generated@@145) $generated@@525) ($generated@@399 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@240 $generated@@525 ($generated@@399 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@68)) (= (type $generated@@530) $generated@@68)) ($generated@@240 $generated@@528 ($generated@@407 $generated@@529 $generated@@530))) (and (= ($generated@@283 ($generated@@333 ($generated@@314 $generated@@145 $generated@@145) $generated@@528)) $generated@@528) ($generated@@150 ($generated@@333 ($generated@@314 $generated@@145 $generated@@145) $generated@@528) ($generated@@407 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@240 $generated@@528 ($generated@@407 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= (type $generated@@533) $generated@@145)) ($generated@@240 $generated@@533 ($generated@@153 $generated@@531 $generated@@532))) (and (= ($generated@@283 ($generated@@333 $generated@@154 $generated@@533)) $generated@@533) ($generated@@150 ($generated@@333 $generated@@154 $generated@@533) ($generated@@153 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@240 $generated@@533 ($generated@@153 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@85 ($generated@@415 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@85 ($generated@@415 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@73)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@68) (= (type $generated@@539) $generated@@68)) (and (= ($generated@@76 ($generated@@153 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@153 $generated@@538 $generated@@539)) $generated@@65)))
 :pattern ( ($generated@@153 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@154) (= ($generated@@519 ($generated@@283 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@283 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) ($generated@@240 $generated@@541 ($generated@@79 0))) (and (= ($generated@@283 ($generated@@333 $generated@@2 $generated@@541)) $generated@@541) ($generated@@150 ($generated@@333 ($generated@@80 $generated@@145 $generated@@4) $generated@@541) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@541 ($generated@@79 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@68)) ($generated@@240 $generated@@542 ($generated@@249 $generated@@543))) (and (= ($generated@@283 ($generated@@333 ($generated@@80 $generated@@145 $generated@@4) $generated@@542)) $generated@@542) ($generated@@150 ($generated@@333 ($generated@@80 $generated@@145 $generated@@4) $generated@@542) ($generated@@249 $generated@@543))))
 :pattern ( ($generated@@240 $generated@@542 ($generated@@249 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@68)) ($generated@@240 $generated@@544 ($generated@@254 $generated@@545))) (and (= ($generated@@283 ($generated@@333 ($generated@@80 $generated@@145 $generated@@4) $generated@@544)) $generated@@544) ($generated@@150 ($generated@@333 ($generated@@80 $generated@@145 $generated@@4) $generated@@544) ($generated@@254 $generated@@545))))
 :pattern ( ($generated@@240 $generated@@544 ($generated@@254 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@68)) ($generated@@240 $generated@@546 ($generated@@167 $generated@@547))) (and (= ($generated@@283 ($generated@@333 ($generated@@80 $generated@@145 $generated@@2) $generated@@546)) $generated@@546) ($generated@@150 ($generated@@333 ($generated@@80 $generated@@145 $generated@@2) $generated@@546) ($generated@@167 $generated@@547))))
 :pattern ( ($generated@@240 $generated@@546 ($generated@@167 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@68)) ($generated@@240 $generated@@548 ($generated@@481 $generated@@549))) (and (= ($generated@@283 ($generated@@333 ($generated@@276 $generated@@145) $generated@@548)) $generated@@548) ($generated@@150 ($generated@@333 ($generated@@276 $generated@@145) $generated@@548) ($generated@@481 $generated@@549))))
 :pattern ( ($generated@@240 $generated@@548 ($generated@@481 $generated@@549)))
)))
(assert (= ($generated@@76 $generated@@136) $generated@@63))
(assert (= ($generated@@536 $generated@@136) $generated@@66))
(assert (= ($generated@@76 $generated@@139) $generated@@64))
(assert (= ($generated@@536 $generated@@139) $generated@@67))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@80 $generated@@145 $generated@@2)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@550 ($generated@@167 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@145) (< 0 ($generated ($generated@@85 $generated@@550 $generated@@553)))) ($generated@@262 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@85 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@78 $generated@@550 ($generated@@167 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@230 $generated@@556) (and ($generated@@152 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@68) ($generated@@78 $generated@@554 ($generated@@153 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@78 $generated@@554 ($generated@@153 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@262 ($generated@@161 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@262 ($generated@@161 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@154) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@230 $generated@@560) (and ($generated@@152 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@68) ($generated@@78 $generated@@558 ($generated@@153 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@78 $generated@@558 ($generated@@153 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@262 ($generated@@162 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@262 ($generated@@162 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@2) (= ($generated@@150 $generated@@562 $generated@@136)  (and (<= ($generated@@259 0) ($generated $generated@@562)) (< ($generated $generated@@562) 256))))
 :pattern ( ($generated@@150 $generated@@562 $generated@@136))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@2) (= ($generated@@150 $generated@@563 $generated@@139)  (and (<= ($generated@@259 1000) ($generated $generated@@563)) (< ($generated $generated@@563) 2000))))
 :pattern ( ($generated@@150 $generated@@563 $generated@@139))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@145)) (= ($generated@@239 ($generated@@144 $generated@@564) ($generated@@144 $generated@@565)) ($generated@@144 ($generated@@239 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@239 ($generated@@144 $generated@@564) ($generated@@144 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@283 ($generated@@8 ($generated@@259 $generated@@566))) ($generated@@144 ($generated@@283 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@283 ($generated@@8 ($generated@@259 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@283 ($generated@@144 $generated@@567)) ($generated@@144 ($generated@@283 $generated@@567)))
 :pattern ( ($generated@@283 ($generated@@144 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@277 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@276 $generated@@569)) (= ($generated@@275 $generated@@568) 0)) (= $generated@@568 ($generated@@274 $generated@@569))))
 :pattern ( ($generated@@275 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@80 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@288 ($generated@@86 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@288 $generated@@570) ($generated ($generated@@85 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@288 ($generated@@86 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@575) $generated@@2)) ($generated@@78 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@78 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@577) $generated@@3)) ($generated@@78 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@78 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@579) $generated@@4)) ($generated@@78 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@78 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@581) $generated@@439)) ($generated@@78 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@78 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@583) $generated@@145)) ($generated@@78 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@78 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@276 $generated@@145)) (= (type $generated@@585) $generated@@68)) (= ($generated@@150 $generated@@584 ($generated@@481 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@275 $generated@@584))) ($generated@@240 ($generated@@482 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@482 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@150 $generated@@584 ($generated@@481 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@276 $generated@@145)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@275 $generated@@588))) (< ($generated@@520 ($generated@@333 $generated@@154 ($generated@@482 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@520 ($generated@@333 $generated@@154 ($generated@@482 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@296 $generated@@145 $generated@@145)) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) $generated@@68)) ($generated@@150 $generated@@590 ($generated@@399 $generated@@591 $generated@@592))) (and (and ($generated@@150 ($generated@@294 $generated@@590) ($generated@@249 $generated@@591)) ($generated@@150 ($generated@@342 $generated@@590) ($generated@@249 $generated@@592))) ($generated@@150 ($generated@@373 $generated@@590) ($generated@@249 ($generated@@153 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@150 $generated@@590 ($generated@@399 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@314 $generated@@145 $generated@@145)) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@150 $generated@@593 ($generated@@407 $generated@@594 $generated@@595))) (and (and ($generated@@150 ($generated@@312 $generated@@593) ($generated@@254 $generated@@594)) ($generated@@150 ($generated@@353 $generated@@593) ($generated@@254 $generated@@595))) ($generated@@150 ($generated@@381 $generated@@593) ($generated@@254 ($generated@@153 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@150 $generated@@593 ($generated@@407 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@150 $generated@@596 $generated@@46))
 :pattern ( ($generated@@150 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@150 $generated@@597 $generated@@47))
 :pattern ( ($generated@@150 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@150 $generated@@598 $generated@@44))
 :pattern ( ($generated@@150 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@439) ($generated@@150 $generated@@599 $generated@@45))
 :pattern ( ($generated@@150 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@145) ($generated@@150 $generated@@600 $generated@@48))
 :pattern ( ($generated@@150 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 (T@U) Bool)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () Int)
(assert  (and (and (= (type $generated@@601) ($generated@@174 $generated@@81 $generated@@4)) (= (type $generated@@602) $generated@@81)) (= (type $generated@@603) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@610  (=> (and (= $generated@@601 ($generated@@173 $generated@@602 $generated@@603 $generated@@60 false)) ($generated@@231 $generated@@46)) (=> (and (and (and ($generated@@231 $generated@@46) (= $generated@@604 ($generated@@259 ($generated ($generated@@333 $generated@@2 ($generated@@229 $generated@@46)))))) (and ($generated@@231 $generated@@136) ($generated@@231 $generated@@136))) (and (and (= $generated@@605 ($generated@@259 ($generated ($generated@@333 $generated@@2 ($generated@@229 $generated@@136))))) ($generated@@231 $generated@@139)) (and ($generated@@231 $generated@@139) (= $generated@@606 ($generated@@259 ($generated ($generated@@333 $generated@@2 ($generated@@229 $generated@@139)))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@604 $generated@@605)) (=> (= $generated@@604 $generated@@605) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@604 $generated@@606)) (=> (= $generated@@604 $generated@@606) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@144 ($generated@@11 false))))))))))))
(let (($generated@@611  (=> (and ($generated@@230 $generated@@603) ($generated@@607 $generated@@603)) (=> (and (and (<= ($generated@@259 0) $generated@@608) (< $generated@@608 256)) true) (=> (and (and (and (<= ($generated@@259 1000) $generated@@609) (< $generated@@609 2000)) true) (and (= 1 $generated@@228) (= (ControlFlow 0 5) 2))) $generated@@610)))))
$generated@@611)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@U) Int)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 (Int) Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 (T@U) Int)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@299 (T@T T@T) T@U)
(declare-fun $generated@@300 (T@T T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@317 (T@T T@T) T@U)
(declare-fun $generated@@318 (T@T T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@T T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 (T@U Int) T@U)
(declare-fun $generated@@493 (T@U) Int)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (= ($generated@@1 $generated@@135) 14) (forall (($generated@@136 T@U) ) (! (= (type ($generated@@132 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@132 $generated@@136))
))) (forall (($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(= (type ($generated@@134 $generated@@137)) $generated@@138))
 :pattern ( ($generated@@134 $generated@@137))
))))
(assert (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@64) ($generated@@133 $generated@@139)) ($generated@@0 ($generated@@134 ($generated@@11 true))))
 :pattern ( ($generated@@132 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@75 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 15) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@64)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@64) (= (type $generated@@148) $generated@@64)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (forall (($generated@@153 T@U) ) (! (= (type ($generated@@151 $generated@@153)) $generated@@135)
 :pattern ( ($generated@@151 $generated@@153))
)) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@152 $generated@@154)) $generated@@135)
 :pattern ( ($generated@@152 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@144) (= (type $generated@@156) $generated@@144)) true) (= ($generated@@150 $generated@@155 $generated@@156)  (and (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)) (= ($generated@@152 $generated@@155) ($generated@@152 $generated@@156)))))
 :pattern ( ($generated@@150 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@64)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@161) $generated@@64)) ($generated@@140 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@140 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@67 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@77) (= (type $generated@@212) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@213) ($generated@@66 $generated@@4))) (= (type $generated@@215) $generated@@77)) (= (type $generated@@216) ($generated@@66 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@164 $generated@@77 $generated@@4))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@162 ($generated@@218 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@64) ($generated@@231 $generated@@233)) (and (and (<= ($generated@@232 0) ($generated@@230 $generated@@233)) (< ($generated@@230 $generated@@233) 100)) (< ($generated@@230 $generated@@233) ($generated@@232 200))))
 :pattern ( ($generated@@230 $generated@@233))
)))
(assert  (=> (<= 0 $generated@@234) (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@64) (= (type $generated@@239) ($generated@@76 $generated@@77 $generated@@78))) (or ($generated@@237 $generated@@238) (and (not (= 0 $generated@@234)) ($generated@@236 $generated@@239)))) (and ($generated@@231 $generated@@238) (= ($generated@@235 $generated@@238) (let (($generated@@240 ($generated@@230 $generated@@238)))
$generated@@240))))
 :pattern ( ($generated@@235 $generated@@238) ($generated@@236 $generated@@239))
))))
(assert  (=> (<= 0 $generated@@234) (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) ($generated@@76 $generated@@77 $generated@@78))) (or ($generated@@237 $generated@@241) (and (not (= 0 $generated@@234)) ($generated@@236 $generated@@242)))) (and ($generated@@231 $generated@@241) (= ($generated@@235 $generated@@241) (let (($generated@@243 ($generated@@230 $generated@@241)))
$generated@@243))))
 :weight 3
 :pattern ( ($generated@@235 $generated@@241) ($generated@@236 $generated@@242))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@144)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@135)) (= (type $generated@@251) $generated@@135)) (= ($generated@@140 ($generated@@244 $generated@@250 $generated@@251) ($generated@@143 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@140 ($generated@@244 $generated@@250 $generated@@251) ($generated@@143 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@144) (= (type $generated@@253) $generated@@144)) (= ($generated@@150 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@150 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@257) $generated@@64)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@135) ($generated@@0 ($generated@@81 $generated@@256 $generated@@258))) ($generated@@245 $generated@@258 $generated@@257))
 :pattern ( ($generated@@81 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@64)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@140 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@135) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@245 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@140 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@232 $generated@@264) $generated@@264)
 :pattern ( ($generated@@232 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@134 $generated@@265) $generated@@265)
 :pattern ( ($generated@@134 $generated@@265))
)))
(assert  (=> (<= 0 $generated@@234) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@64) (or ($generated@@237 $generated@@266) (not (= 0 $generated@@234)))) true)
 :pattern ( ($generated@@235 $generated@@266))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@64) (= (type $generated@@269) $generated@@64)) (= (type $generated@@270) $generated@@135)) (= (type $generated@@271) $generated@@135)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@236 $generated@@272)) (= ($generated@@74 ($generated@@244 $generated@@270 $generated@@271) ($generated@@143 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@74 ($generated@@244 $generated@@270 $generated@@271) ($generated@@143 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@68)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@144) (= ($generated@@142 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@144) ($generated@@142 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@135) (= (type $generated@@278) $generated@@135)) (= $generated@@276 ($generated@@244 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@142 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@135)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@64) (= (type $generated@@291) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@74 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@267 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@76 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@79 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@76 $generated@@296 $generated@@2)) (and (= (= ($generated@@292 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@292 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@81 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@292 $generated@@295))
)))
(assert  (and (and (and (and (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (= ($generated@@1 ($generated@@300 $generated@@303 $generated@@304)) 18)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@301 ($generated@@300 $generated@@305 $generated@@306)) $generated@@305)
 :pattern ( ($generated@@300 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@300 $generated@@307 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@300 $generated@@307 $generated@@308))
))) (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@301 (type $generated@@309))))
(= (type ($generated@@298 $generated@@309)) ($generated@@76 $generated@@310 $generated@@4)))
 :pattern ( ($generated@@298 $generated@@309))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= (type ($generated@@299 $generated@@311 $generated@@312)) ($generated@@300 $generated@@311 $generated@@312))
 :pattern ( ($generated@@299 $generated@@311 $generated@@312))
))))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@T) ) (! (let (($generated@@315 (type $generated@@313)))
 (not ($generated@@0 ($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313))))
 :pattern ( (let (($generated@@315 (type $generated@@313)))
($generated@@81 ($generated@@298 ($generated@@299 $generated@@315 $generated@@314)) $generated@@313)))
)))
(assert  (and (and (and (and (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (= ($generated@@1 ($generated@@318 $generated@@321 $generated@@322)) 19)) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@323 $generated@@324)) $generated@@323)
 :pattern ( ($generated@@318 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@320 ($generated@@318 $generated@@325 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@318 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@319 (type $generated@@327))))
(= (type ($generated@@316 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@316 $generated@@327))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= (type ($generated@@317 $generated@@329 $generated@@330)) ($generated@@318 $generated@@329 $generated@@330))
 :pattern ( ($generated@@317 $generated@@329 $generated@@330))
))))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@T) ) (! (let (($generated@@333 (type $generated@@331)))
 (not ($generated@@0 ($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331))))
 :pattern ( (let (($generated@@333 (type $generated@@331)))
($generated@@81 ($generated@@316 ($generated@@317 $generated@@333 $generated@@332)) $generated@@331)))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@79 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@76 $generated@@335 $generated@@2)) (= ($generated@@158 $generated@@334) (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@335) (and (<= 0 ($generated ($generated@@81 $generated@@334 $generated@@336))) (<= ($generated ($generated@@81 $generated@@334 $generated@@336)) ($generated@@292 $generated@@334))))
 :pattern ( ($generated@@81 $generated@@334 $generated@@336))
)))))
 :pattern ( ($generated@@158 $generated@@334))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@302 (type $generated@@337))))
(let (($generated@@339 ($generated@@301 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@300 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@299 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@298 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@302 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@302 (type $generated@@344))))
(let (($generated@@346 ($generated@@301 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@300 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@299 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@320 (type $generated@@348))))
(let (($generated@@350 ($generated@@319 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@318 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@317 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@316 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@320 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@320 (type $generated@@355))))
(let (($generated@@357 ($generated@@319 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@318 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@317 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@81 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@359) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@360) $generated@@64)) (= ($generated@@140 $generated@@359 ($generated@@157 $generated@@360)) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@359 $generated@@361)))) ($generated@@245 $generated@@361 $generated@@360))
 :pattern ( ($generated@@81 $generated@@359 $generated@@361))
))))
 :pattern ( ($generated@@140 $generated@@359 ($generated@@157 $generated@@360)))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@363) $generated@@64)) (= (type $generated@@364) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@362 ($generated@@254 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@135) ($generated@@0 ($generated@@81 $generated@@362 $generated@@365))) ($generated@@267 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@81 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@74 $generated@@362 ($generated@@254 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@259 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@135) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@267 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@259 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@81 ($generated@@293 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@81 ($generated@@293 $generated@@371) $generated@@370)))
)))
(assert  (and (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@372 $generated@@375)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@372 $generated@@375))
)) (forall (($generated@@376 T@T) ($generated@@377 T@U) ) (! (= (type ($generated@@373 $generated@@376 $generated@@377)) $generated@@376)
 :pattern ( ($generated@@373 $generated@@376 $generated@@377))
))) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@302 (type $generated@@378))))
(let (($generated@@380 ($generated@@301 (type $generated@@378))))
(= (type ($generated@@374 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@374 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@300 $generated@@135 $generated@@135)) (= (type $generated@@382) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@381) ($generated@@151 ($generated@@373 $generated@@144 $generated@@382)))) (= ($generated@@81 ($generated@@374 $generated@@381) ($generated@@151 ($generated@@373 $generated@@144 $generated@@382))) ($generated@@152 ($generated@@373 $generated@@144 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@320 (type $generated@@386))))
(let (($generated@@388 ($generated@@319 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@76 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@318 $generated@@135 $generated@@135)) (= (type $generated@@390) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@389) ($generated@@151 ($generated@@373 $generated@@144 $generated@@390)))) (= ($generated@@81 ($generated@@384 $generated@@389) ($generated@@151 ($generated@@373 $generated@@144 $generated@@390))) ($generated@@152 ($generated@@373 $generated@@144 $generated@@390))))))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@301 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@300 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@298 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@374 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@319 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@318 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@81 ($generated@@352 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@81 ($generated@@316 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@81 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@81 ($generated@@352 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@300 $generated@@135 $generated@@135)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@404) $generated@@408))) (and ($generated@@267 ($generated@@81 ($generated@@374 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@267 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@64)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@318 $generated@@135 $generated@@135)) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@412) $generated@@416))) (and ($generated@@267 ($generated@@81 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@267 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@74 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@76 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@320 (type $generated@@419))))
(let (($generated@@421 ($generated@@319 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@318 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@317 $generated@@421 $generated@@420)) (= ($generated@@316 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@316 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@320 (type $generated@@422))))
(let (($generated@@424 ($generated@@319 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@318 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@317 $generated@@424 $generated@@423)) (= ($generated@@352 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@352 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@320 (type $generated@@425))))
(let (($generated@@427 ($generated@@319 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@318 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@317 $generated@@427 $generated@@426)) (= ($generated@@383 $generated@@425) ($generated@@417 $generated@@135))))))
 :pattern ( ($generated@@383 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@302 (type $generated@@428))))
(let (($generated@@430 ($generated@@301 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@300 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@299 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@135) (= (type $generated@@432) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@428) ($generated@@287 ($generated@@244 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@372 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@320 (type $generated@@433))))
(let (($generated@@435 ($generated@@319 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@318 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@317 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@135) (= (type $generated@@437) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@383 $generated@@433) ($generated@@287 ($generated@@244 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@383 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@135) ($generated@@245 $generated@@438 $generated@@46)) (and (= ($generated@@287 ($generated@@373 $generated@@2 $generated@@438)) $generated@@438) ($generated@@140 ($generated@@373 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@135) ($generated@@245 $generated@@439 $generated@@47)) (and (= ($generated@@287 ($generated@@373 $generated@@3 $generated@@439)) $generated@@439) ($generated@@140 ($generated@@373 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@135) ($generated@@245 $generated@@440 $generated@@44)) (and (= ($generated@@287 ($generated@@373 $generated@@4 $generated@@440)) $generated@@440) ($generated@@140 ($generated@@373 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@135) ($generated@@245 $generated@@442 $generated@@45)) (and (= ($generated@@287 ($generated@@373 $generated@@441 $generated@@442)) $generated@@442) ($generated@@140 ($generated@@373 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@64) (= ($generated@@245 ($generated@@287 $generated@@443) $generated@@444) ($generated@@140 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@245 ($generated@@287 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@79 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@76 $generated@@446 $generated@@2)) (<= 0 ($generated@@292 $generated@@445))))
 :pattern ( ($generated@@292 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@282 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@281 $generated@@448)) (<= 0 ($generated@@280 $generated@@447))))
 :pattern ( ($generated@@280 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@401 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@401 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@409 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@409 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@409 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@72 ($generated@@409 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@135) (= (type $generated@@470) $generated@@135)) (= ($generated@@273 ($generated@@244 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@143 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@143 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@143 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@143 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@135) (= (type $generated@@480) $generated@@135)) (= ($generated@@151 ($generated@@244 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@244 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@135) (= (type $generated@@482) $generated@@135)) (= ($generated@@152 ($generated@@244 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@244 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@485))
)) (forall (($generated@@486 T@U) ($generated@@487 Int) ) (! (let (($generated@@488 ($generated@@282 (type $generated@@486))))
(= (type ($generated@@484 $generated@@486 $generated@@487)) $generated@@488))
 :pattern ( ($generated@@484 $generated@@486 $generated@@487))
))))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (= (type $generated@@489) ($generated@@281 $generated@@135)) (= (type $generated@@490) $generated@@64)) (= (type $generated@@491) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491) (forall (($generated@@492 Int) ) (!  (=> (and (<= 0 $generated@@492) (< $generated@@492 ($generated@@280 $generated@@489))) ($generated@@267 ($generated@@484 $generated@@489 $generated@@492) $generated@@490 $generated@@491))
 :pattern ( ($generated@@484 $generated@@489 $generated@@492))
))))
 :pattern ( ($generated@@74 $generated@@489 ($generated@@483 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 Int) ) (! (= ($generated@@493 ($generated@@75 $generated@@494)) $generated@@494)
 :pattern ( ($generated@@75 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@254 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@254 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@254 $generated@@498)) $generated@@54))
 :pattern ( ($generated@@254 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@259 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@259 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@259 $generated@@502)) $generated@@55))
 :pattern ( ($generated@@259 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@157 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@157 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@157 $generated@@506)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@483 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@483 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@483 $generated@@510)) $generated@@57))
 :pattern ( ($generated@@483 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 (type $generated@@511)))
(= ($generated@@373 $generated@@512 ($generated@@287 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@287 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@300 $generated@@135 $generated@@135)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@140 $generated@@513 ($generated@@401 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@298 $generated@@513) $generated@@516))) (and ($generated@@245 ($generated@@81 ($generated@@374 $generated@@513) $generated@@516) $generated@@515) ($generated@@245 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@298 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@140 $generated@@513 ($generated@@401 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@318 $generated@@135 $generated@@135)) (= (type $generated@@518) $generated@@64)) (= (type $generated@@519) $generated@@64)) (= ($generated@@140 $generated@@517 ($generated@@409 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@316 $generated@@517) $generated@@520))) (and ($generated@@245 ($generated@@81 ($generated@@384 $generated@@517) $generated@@520) $generated@@519) ($generated@@245 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@81 ($generated@@384 $generated@@517) $generated@@520))
 :pattern ( ($generated@@81 ($generated@@316 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@140 $generated@@517 ($generated@@409 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@135) (= (type $generated@@524) $generated@@135)) (< ($generated@@521 $generated@@523) ($generated@@522 ($generated@@244 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@244 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@135) (= (type $generated@@526) $generated@@135)) (< ($generated@@521 $generated@@526) ($generated@@522 ($generated@@244 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@244 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@135) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@245 $generated@@527 ($generated@@401 $generated@@528 $generated@@529))) (and (= ($generated@@287 ($generated@@373 ($generated@@300 $generated@@135 $generated@@135) $generated@@527)) $generated@@527) ($generated@@140 ($generated@@373 ($generated@@300 $generated@@135 $generated@@135) $generated@@527) ($generated@@401 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@245 $generated@@527 ($generated@@401 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@135) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@245 $generated@@530 ($generated@@409 $generated@@531 $generated@@532))) (and (= ($generated@@287 ($generated@@373 ($generated@@318 $generated@@135 $generated@@135) $generated@@530)) $generated@@530) ($generated@@140 ($generated@@373 ($generated@@318 $generated@@135 $generated@@135) $generated@@530) ($generated@@409 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@245 $generated@@530 ($generated@@409 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@135)) ($generated@@245 $generated@@535 ($generated@@143 $generated@@533 $generated@@534))) (and (= ($generated@@287 ($generated@@373 $generated@@144 $generated@@535)) $generated@@535) ($generated@@140 ($generated@@373 $generated@@144 $generated@@535) ($generated@@143 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@245 $generated@@535 ($generated@@143 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@417 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@417 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (and (= ($generated@@72 ($generated@@143 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@143 $generated@@540 $generated@@541)) $generated@@63)))
 :pattern ( ($generated@@143 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@144) (= ($generated@@521 ($generated@@287 $generated@@542)) ($generated@@522 $generated@@542)))
 :pattern ( ($generated@@521 ($generated@@287 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@135) ($generated@@245 $generated@@543 ($generated@@75 0))) (and (= ($generated@@287 ($generated@@373 $generated@@2 $generated@@543)) $generated@@543) ($generated@@140 ($generated@@373 ($generated@@76 $generated@@135 $generated@@4) $generated@@543) ($generated@@75 0))))
 :pattern ( ($generated@@245 $generated@@543 ($generated@@75 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@135) (= (type $generated@@545) $generated@@64)) ($generated@@245 $generated@@544 ($generated@@254 $generated@@545))) (and (= ($generated@@287 ($generated@@373 ($generated@@76 $generated@@135 $generated@@4) $generated@@544)) $generated@@544) ($generated@@140 ($generated@@373 ($generated@@76 $generated@@135 $generated@@4) $generated@@544) ($generated@@254 $generated@@545))))
 :pattern ( ($generated@@245 $generated@@544 ($generated@@254 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@135) (= (type $generated@@547) $generated@@64)) ($generated@@245 $generated@@546 ($generated@@259 $generated@@547))) (and (= ($generated@@287 ($generated@@373 ($generated@@76 $generated@@135 $generated@@4) $generated@@546)) $generated@@546) ($generated@@140 ($generated@@373 ($generated@@76 $generated@@135 $generated@@4) $generated@@546) ($generated@@259 $generated@@547))))
 :pattern ( ($generated@@245 $generated@@546 ($generated@@259 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@135) (= (type $generated@@549) $generated@@64)) ($generated@@245 $generated@@548 ($generated@@157 $generated@@549))) (and (= ($generated@@287 ($generated@@373 ($generated@@76 $generated@@135 $generated@@2) $generated@@548)) $generated@@548) ($generated@@140 ($generated@@373 ($generated@@76 $generated@@135 $generated@@2) $generated@@548) ($generated@@157 $generated@@549))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@157 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@135) (= (type $generated@@551) $generated@@64)) ($generated@@245 $generated@@550 ($generated@@483 $generated@@551))) (and (= ($generated@@287 ($generated@@373 ($generated@@281 $generated@@135) $generated@@550)) $generated@@550) ($generated@@140 ($generated@@373 ($generated@@281 $generated@@135) $generated@@550) ($generated@@483 $generated@@551))))
 :pattern ( ($generated@@245 $generated@@550 ($generated@@483 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@552 ($generated@@157 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@552 $generated@@555)))) ($generated@@267 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@81 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@157 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@144) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@236 $generated@@558) (and ($generated@@142 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@143 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@143 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@267 ($generated@@151 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@267 ($generated@@151 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@144) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@236 $generated@@562) (and ($generated@@142 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@143 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@143 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@267 ($generated@@152 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@267 ($generated@@152 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@135) (= (type $generated@@565) $generated@@135)) (= ($generated@@244 ($generated@@134 $generated@@564) ($generated@@134 $generated@@565)) ($generated@@134 ($generated@@244 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@244 ($generated@@134 $generated@@564) ($generated@@134 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@232 $generated@@566))) ($generated@@134 ($generated@@287 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@232 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@287 ($generated@@134 $generated@@567)) ($generated@@134 ($generated@@287 $generated@@567)))
 :pattern ( ($generated@@287 ($generated@@134 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@282 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@281 $generated@@569)) (= ($generated@@280 $generated@@568) 0)) (= $generated@@568 ($generated@@279 $generated@@569))))
 :pattern ( ($generated@@280 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@76 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@292 ($generated@@82 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@292 $generated@@570) ($generated ($generated@@81 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@292 ($generated@@82 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@2)) ($generated@@74 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@3)) ($generated@@74 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@4)) ($generated@@74 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@441)) ($generated@@74 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@135)) ($generated@@74 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@281 $generated@@135)) (= (type $generated@@585) $generated@@64)) (= ($generated@@140 $generated@@584 ($generated@@483 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@280 $generated@@584))) ($generated@@245 ($generated@@484 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@484 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@140 $generated@@584 ($generated@@483 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@281 $generated@@135)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@280 $generated@@588))) (< ($generated@@522 ($generated@@373 $generated@@144 ($generated@@484 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@522 ($generated@@373 $generated@@144 ($generated@@484 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@300 $generated@@135 $generated@@135)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@140 $generated@@590 ($generated@@401 $generated@@591 $generated@@592))) (and (and ($generated@@140 ($generated@@298 $generated@@590) ($generated@@254 $generated@@591)) ($generated@@140 ($generated@@341 $generated@@590) ($generated@@254 $generated@@592))) ($generated@@140 ($generated@@372 $generated@@590) ($generated@@254 ($generated@@143 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@140 $generated@@590 ($generated@@401 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@318 $generated@@135 $generated@@135)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@140 $generated@@593 ($generated@@409 $generated@@594 $generated@@595))) (and (and ($generated@@140 ($generated@@316 $generated@@593) ($generated@@259 $generated@@594)) ($generated@@140 ($generated@@352 $generated@@593) ($generated@@259 $generated@@595))) ($generated@@140 ($generated@@383 $generated@@593) ($generated@@259 ($generated@@143 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@140 $generated@@593 ($generated@@409 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@140 $generated@@596 $generated@@46))
 :pattern ( ($generated@@140 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@140 $generated@@597 $generated@@47))
 :pattern ( ($generated@@140 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@140 $generated@@598 $generated@@44))
 :pattern ( ($generated@@140 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@441) ($generated@@140 $generated@@599 $generated@@45))
 :pattern ( ($generated@@140 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@135) ($generated@@140 $generated@@600 $generated@@48))
 :pattern ( ($generated@@140 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@602) $generated@@64) (= (type $generated@@601) $generated@@135)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@605) ($generated@@164 $generated@@77 $generated@@4))) (= (type $generated@@606) $generated@@77)) (= (type $generated@@607) ($generated@@164 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@609  (=> (= (ControlFlow 0 4) (- 0 3)) (or (and ($generated@@140 ($generated@@8 (- ($generated@@232 200) 1)) $generated@@46) (and (and (<= ($generated@@232 0) (- ($generated@@232 200) 1)) (< (- ($generated@@232 200) 1) 100)) (< (- ($generated@@232 200) 1) ($generated@@232 200)))) (or (and ($generated@@140 ($generated@@8 ($generated@@232 (- 100 1))) $generated@@46) (and (and (<= ($generated@@232 0) ($generated@@232 (- 100 1))) (< (- 100 1) 100)) (< (- 100 1) ($generated@@232 200)))) (or (and ($generated@@140 ($generated@@8 ($generated@@232 0)) $generated@@46) (and (and (<= ($generated@@232 0) ($generated@@232 0)) (< 0 100)) (< 0 ($generated@@232 200)))) (or (and ($generated@@140 ($generated@@8 ($generated@@232 0)) $generated@@46) (and (and (<= ($generated@@232 0) ($generated@@232 0)) (< 0 100)) (< 0 ($generated@@232 200)))) (exists (($generated@@610 Int) )  (and (and (<= ($generated@@232 0) $generated@@610) (< $generated@@610 100)) (< $generated@@610 ($generated@@232 200)))))))))))
(let (($generated@@611  (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@0 ($generated@@134 ($generated@@11 true)))) (=> ($generated@@0 ($generated@@134 ($generated@@11 true))) (=> (and (and ($generated@@245 $generated@@601 $generated@@602) ($generated@@267 $generated@@601 $generated@@602 $generated@@603)) (and ($generated@@133 $generated@@602) (= (ControlFlow 0 6) 4))) $generated@@609)))))
(let (($generated@@612  (=> (and (not (and ($generated@@245 $generated@@601 $generated@@602) ($generated@@267 $generated@@601 $generated@@602 $generated@@603))) (= (ControlFlow 0 9) 6)) $generated@@611)))
(let (($generated@@613  (=> (and (and ($generated@@245 $generated@@601 $generated@@602) ($generated@@267 $generated@@601 $generated@@602 $generated@@603)) (= (ControlFlow 0 8) 6)) $generated@@611)))
(let (($generated@@614  (=> (and (<= ($generated@@232 0) $generated@@604) (< $generated@@604 100)) (and (=> (= (ControlFlow 0 10) 8) $generated@@613) (=> (= (ControlFlow 0 10) 9) $generated@@612)))))
(let (($generated@@615  (=> (and (not (and (<= ($generated@@232 0) $generated@@604) (< $generated@@604 100))) (= (ControlFlow 0 5) 4)) $generated@@609)))
(let (($generated@@616  (=> (< $generated@@604 ($generated@@232 0)) (and (=> (= (ControlFlow 0 12) 10) $generated@@614) (=> (= (ControlFlow 0 12) 5) $generated@@615)))))
(let (($generated@@617  (=> (<= ($generated@@232 0) $generated@@604) (and (=> (= (ControlFlow 0 11) 10) $generated@@614) (=> (= (ControlFlow 0 11) 5) $generated@@615)))))
(let (($generated@@618  (and (=> (= (ControlFlow 0 13) 11) $generated@@617) (=> (= (ControlFlow 0 13) 12) $generated@@616))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (= $generated@@605 ($generated@@218 $generated@@606 $generated@@603 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@618) (=> (= (ControlFlow 0 14) 2) $generated@@619)))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (= $generated@@607 ($generated@@163 $generated@@606 $generated@@603 $generated@@60 false)) (and (=> (= (ControlFlow 0 15) 1) $generated@@621) (=> (= (ControlFlow 0 15) 14) $generated@@620)))))
(let (($generated@@623  (=> (and (and ($generated@@236 $generated@@603) ($generated@@608 $generated@@603)) (and (= 0 $generated@@234) (= (ControlFlow 0 16) 15))) $generated@@622)))
$generated@@623)))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 (T@U T@U) Int)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Int)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert (= ($generated@@1 $generated@@145) 15))
(assert  (=> (<= 0 $generated@@142) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@152) $generated@@145)) (or ($generated@@146 $generated@@150 $generated@@152) (and (not (= 0 $generated@@142)) (and ($generated@@144 $generated@@151) ($generated@@147 $generated@@152 $generated@@150))))) (and ($generated@@148 $generated@@150 $generated@@152) (= ($generated@@143 $generated@@150 $generated@@152) (let (($generated@@153 ($generated@@149 $generated@@150 $generated@@152)))
$generated@@153))))
 :pattern ( ($generated@@143 $generated@@150 $generated@@152) ($generated@@144 $generated@@151))
))))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@145)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@145)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@136) (= (type $generated@@160) $generated@@136)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@165) $generated@@64)) ($generated@@132 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@132 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@77 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@67 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@77) (= (type $generated@@216) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@217) ($generated@@66 $generated@@4))) (= (type $generated@@219) $generated@@77)) (= (type $generated@@220) ($generated@@66 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@168 $generated@@77 $generated@@4))
 :pattern ( ($generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@67 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@77) (= (type $generated@@228) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@229) ($generated@@66 $generated@@4))) (= (type $generated@@231) $generated@@77)) (= (type $generated@@232) ($generated@@66 $generated@@233))) (= ($generated@@0 ($generated@@166 ($generated@@222 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@166 ($generated@@222 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236)) $generated@@136)
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= ($generated@@132 ($generated@@234 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238))  (and ($generated@@147 $generated@@239 $generated@@237) ($generated@@147 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@132 ($generated@@234 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@136) (= (type $generated@@242) $generated@@136)) (= ($generated@@154 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@154 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@132 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@145) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@147 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@132 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@132 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@145) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@147 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@132 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@145)) (= (type $generated@@263) $generated@@145)) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@144 $generated@@264)) (= ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@135 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@135 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@136) (= ($generated@@134 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@136) ($generated@@134 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@145) (= (type $generated@@270) $generated@@145)) (= $generated@@268 ($generated@@234 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@134 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert  (=> (<= 0 $generated@@142) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@145)) (or ($generated@@146 $generated@@279 $generated@@280) (and (not (= 0 $generated@@142)) ($generated@@147 $generated@@280 $generated@@279)))) true)
 :pattern ( ($generated@@143 $generated@@279 $generated@@280))
))))
(assert  (=> (<= 0 $generated@@142) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@283) $generated@@145)) (or ($generated@@146 $generated@@281 ($generated@@255 $generated@@283)) (and (not (= 0 $generated@@142)) (and ($generated@@144 $generated@@282) ($generated@@147 $generated@@283 $generated@@281))))) (and ($generated@@148 $generated@@281 ($generated@@255 $generated@@283)) (= ($generated@@143 $generated@@281 ($generated@@255 $generated@@283)) (let (($generated@@284 ($generated@@149 $generated@@281 ($generated@@255 $generated@@283))))
$generated@@284))))
 :weight 3
 :pattern ( ($generated@@143 $generated@@281 ($generated@@255 $generated@@283)) ($generated@@144 $generated@@282))
))))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@145)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@74 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@76 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@79 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@76 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@81 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@76 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@2)) (= ($generated@@162 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@81 $generated@@332 $generated@@334))) (<= ($generated ($generated@@81 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@162 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@300 (type $generated@@335))))
(let (($generated@@337 ($generated@@299 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@298 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@297 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@296 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@300 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@300 (type $generated@@342))))
(let (($generated@@344 ($generated@@299 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@298 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@297 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@318 (type $generated@@346))))
(let (($generated@@348 ($generated@@317 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@316 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@315 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@314 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@318 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@318 (type $generated@@353))))
(let (($generated@@355 ($generated@@317 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@316 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@315 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@132 $generated@@357 ($generated@@161 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@147 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@132 $generated@@357 ($generated@@161 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@243 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@259 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@243 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@248 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@259 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@248 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@81 ($generated@@291 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@81 ($generated@@291 $generated@@369) $generated@@368)))
)))
(assert  (and (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@373))
)) (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@300 (type $generated@@376))))
(let (($generated@@378 ($generated@@299 (type $generated@@376))))
(= (type ($generated@@372 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@379) ($generated@@155 ($generated@@371 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@372 $generated@@379) ($generated@@155 ($generated@@371 $generated@@136 $generated@@380))) ($generated@@156 ($generated@@371 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@318 (type $generated@@384))))
(let (($generated@@386 ($generated@@317 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@387) ($generated@@155 ($generated@@371 $generated@@136 $generated@@388)))) (= ($generated@@81 ($generated@@382 $generated@@387) ($generated@@155 ($generated@@371 $generated@@136 $generated@@388))) ($generated@@156 ($generated@@371 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@299 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@298 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@317 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@316 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@402) $generated@@406))) (and ($generated@@259 ($generated@@81 ($generated@@372 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@259 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@410) $generated@@414))) (and ($generated@@259 ($generated@@81 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@259 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@318 (type $generated@@417))))
(let (($generated@@419 ($generated@@317 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@316 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@315 $generated@@419 $generated@@418)) (= ($generated@@314 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@314 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@318 (type $generated@@420))))
(let (($generated@@422 ($generated@@317 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@316 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@315 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@318 (type $generated@@423))))
(let (($generated@@425 ($generated@@317 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@316 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@315 $generated@@425 $generated@@424)) (= ($generated@@381 $generated@@423) ($generated@@415 $generated@@145))))))
 :pattern ( ($generated@@381 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@300 (type $generated@@426))))
(let (($generated@@428 ($generated@@299 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@298 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@297 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@426) ($generated@@285 ($generated@@234 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@370 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@318 (type $generated@@431))))
(let (($generated@@433 ($generated@@317 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@316 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@315 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@145) (= (type $generated@@435) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@431) ($generated@@285 ($generated@@234 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@381 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@147 $generated@@436 $generated@@46)) (and (= ($generated@@285 ($generated@@371 $generated@@2 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@371 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@147 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@147 $generated@@437 $generated@@47)) (and (= ($generated@@285 ($generated@@371 $generated@@3 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@371 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@147 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@147 $generated@@438 $generated@@44)) (and (= ($generated@@285 ($generated@@371 $generated@@4 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@371 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@147 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@147 $generated@@440 $generated@@45)) (and (= ($generated@@285 ($generated@@371 $generated@@439 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@371 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@147 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@147 ($generated@@285 $generated@@441) $generated@@442) ($generated@@132 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@147 ($generated@@285 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@290 $generated@@443))))
 :pattern ( ($generated@@290 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@274 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@273 $generated@@446)) (<= 0 ($generated@@272 $generated@@445))))
 :pattern ( ($generated@@272 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@399 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@399 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@265 ($generated@@234 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@155 ($generated@@234 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@234 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@156 ($generated@@234 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@234 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@274 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@273 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@272 $generated@@487))) ($generated@@259 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@243 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@243 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@248 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@248 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@161 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@161 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@161 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@371 $generated@@510 ($generated@@285 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@285 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@511) $generated@@64) (= (type $generated@@512) $generated@@145)) ($generated@@148 $generated@@511 $generated@@512)) (and (and (<= ($generated@@253 0) ($generated@@149 $generated@@511 $generated@@512)) (< ($generated@@149 $generated@@511 $generated@@512) 100)) (= $generated@@512 (let (($generated@@513 $generated@@512))
$generated@@513))))
 :pattern ( ($generated@@149 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@132 $generated@@514 ($generated@@399 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@514) $generated@@517))) (and ($generated@@147 ($generated@@81 ($generated@@372 $generated@@514) $generated@@517) $generated@@516) ($generated@@147 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@132 $generated@@514 ($generated@@399 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) (= ($generated@@132 $generated@@518 ($generated@@407 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@518) $generated@@521))) (and ($generated@@147 ($generated@@81 ($generated@@382 $generated@@518) $generated@@521) $generated@@520) ($generated@@147 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@518) $generated@@521))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@132 $generated@@518 ($generated@@407 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@234 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@234 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@145)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@234 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@234 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@147 $generated@@528 ($generated@@399 $generated@@529 $generated@@530))) (and (= ($generated@@285 ($generated@@371 ($generated@@298 $generated@@145 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@371 ($generated@@298 $generated@@145 $generated@@145) $generated@@528) ($generated@@399 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@147 $generated@@528 ($generated@@399 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@147 $generated@@531 ($generated@@407 $generated@@532 $generated@@533))) (and (= ($generated@@285 ($generated@@371 ($generated@@316 $generated@@145 $generated@@145) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@371 ($generated@@316 $generated@@145 $generated@@145) $generated@@531) ($generated@@407 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@147 $generated@@531 ($generated@@407 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@145)) ($generated@@147 $generated@@536 ($generated@@135 $generated@@534 $generated@@535))) (and (= ($generated@@285 ($generated@@371 $generated@@136 $generated@@536)) $generated@@536) ($generated@@132 ($generated@@371 $generated@@136 $generated@@536) ($generated@@135 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@147 $generated@@536 ($generated@@135 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@538) $generated@@537))))
 :pattern ( (let (($generated@@538 (type $generated@@537)))
($generated@@81 ($generated@@415 $generated@@538) $generated@@537)))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@69)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@64) (= (type $generated@@542) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@541 $generated@@542)) $generated@@62) (= ($generated@@539 ($generated@@135 $generated@@541 $generated@@542)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@136) (= ($generated@@522 ($generated@@285 $generated@@543)) ($generated@@523 $generated@@543)))
 :pattern ( ($generated@@522 ($generated@@285 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) ($generated@@147 $generated@@544 ($generated@@75 0))) (and (= ($generated@@285 ($generated@@371 $generated@@2 $generated@@544)) $generated@@544) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@544) ($generated@@75 0))))
 :pattern ( ($generated@@147 $generated@@544 ($generated@@75 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@64)) ($generated@@147 $generated@@545 ($generated@@243 $generated@@546))) (and (= ($generated@@285 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@545)) $generated@@545) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@545) ($generated@@243 $generated@@546))))
 :pattern ( ($generated@@147 $generated@@545 ($generated@@243 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) ($generated@@147 $generated@@547 ($generated@@248 $generated@@548))) (and (= ($generated@@285 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@248 $generated@@548))))
 :pattern ( ($generated@@147 $generated@@547 ($generated@@248 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@64)) ($generated@@147 $generated@@549 ($generated@@161 $generated@@550))) (and (= ($generated@@285 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@549)) $generated@@549) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@549) ($generated@@161 $generated@@550))))
 :pattern ( ($generated@@147 $generated@@549 ($generated@@161 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@147 $generated@@551 ($generated@@481 $generated@@552))) (and (= ($generated@@285 ($generated@@371 ($generated@@273 $generated@@145) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@371 ($generated@@273 $generated@@145) $generated@@551) ($generated@@481 $generated@@552))))
 :pattern ( ($generated@@147 $generated@@551 ($generated@@481 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@553 ($generated@@161 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@553 $generated@@556)))) ($generated@@259 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@81 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@161 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@136) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@144 $generated@@559) (and ($generated@@134 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@135 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@135 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@259 ($generated@@155 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@259 ($generated@@155 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@136) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@144 $generated@@563) (and ($generated@@134 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@64) ($generated@@74 $generated@@561 ($generated@@135 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@135 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@259 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@259 ($generated@@156 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@145) (= (type $generated@@566) $generated@@145)) (= ($generated@@234 ($generated@@255 $generated@@565) ($generated@@255 $generated@@566)) ($generated@@255 ($generated@@234 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@234 ($generated@@255 $generated@@565) ($generated@@255 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@253 $generated@@567))) ($generated@@255 ($generated@@285 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@253 $generated@@567))))
)))
(assert (forall (($generated@@568 T@U) ) (! (= ($generated@@285 ($generated@@255 $generated@@568)) ($generated@@255 ($generated@@285 $generated@@568)))
 :pattern ( ($generated@@285 ($generated@@255 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 ($generated@@274 (type $generated@@569))))
 (=> (and (= (type $generated@@569) ($generated@@273 $generated@@570)) (= ($generated@@272 $generated@@569) 0)) (= $generated@@569 ($generated@@271 $generated@@570))))
 :pattern ( ($generated@@272 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@572)))
 (=> (and (and (= (type $generated@@571) ($generated@@76 $generated@@574 $generated@@2)) (= (type $generated@@573) $generated@@2)) (<= 0 ($generated $generated@@573))) (= ($generated@@290 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)) (+ (- ($generated@@290 $generated@@571) ($generated ($generated@@81 $generated@@571 $generated@@572))) ($generated $generated@@573)))))
 :pattern ( ($generated@@290 ($generated@@82 $generated@@571 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@2)) ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@46 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@3)) ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@47 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@4)) ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@44 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@439)) ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@45 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@145)) ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@48 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@273 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= ($generated@@132 $generated@@585 ($generated@@481 $generated@@586)) (forall (($generated@@587 Int) ) (!  (=> (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@272 $generated@@585))) ($generated@@147 ($generated@@482 $generated@@585 $generated@@587) $generated@@586))
 :pattern ( ($generated@@482 $generated@@585 $generated@@587))
))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@481 $generated@@586)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 Int) ) (!  (=> (= (type $generated@@589) ($generated@@273 $generated@@145)) (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@272 $generated@@589))) (< ($generated@@523 ($generated@@371 $generated@@136 ($generated@@482 $generated@@589 $generated@@590))) ($generated@@588 $generated@@589))))
 :pattern ( ($generated@@523 ($generated@@371 $generated@@136 ($generated@@482 $generated@@589 $generated@@590))))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@592) $generated@@64)) (= (type $generated@@593) $generated@@64)) ($generated@@132 $generated@@591 ($generated@@399 $generated@@592 $generated@@593))) (and (and ($generated@@132 ($generated@@296 $generated@@591) ($generated@@243 $generated@@592)) ($generated@@132 ($generated@@339 $generated@@591) ($generated@@243 $generated@@593))) ($generated@@132 ($generated@@370 $generated@@591) ($generated@@243 ($generated@@135 $generated@@592 $generated@@593)))))
 :pattern ( ($generated@@132 $generated@@591 ($generated@@399 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) $generated@@64)) ($generated@@132 $generated@@594 ($generated@@407 $generated@@595 $generated@@596))) (and (and ($generated@@132 ($generated@@314 $generated@@594) ($generated@@248 $generated@@595)) ($generated@@132 ($generated@@350 $generated@@594) ($generated@@248 $generated@@596))) ($generated@@132 ($generated@@381 $generated@@594) ($generated@@248 ($generated@@135 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@132 $generated@@594 ($generated@@407 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@2) ($generated@@132 $generated@@597 $generated@@46))
 :pattern ( ($generated@@132 $generated@@597 $generated@@46))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@3) ($generated@@132 $generated@@598 $generated@@47))
 :pattern ( ($generated@@132 $generated@@598 $generated@@47))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@4) ($generated@@132 $generated@@599 $generated@@44))
 :pattern ( ($generated@@132 $generated@@599 $generated@@44))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@439) ($generated@@132 $generated@@600 $generated@@45))
 :pattern ( ($generated@@132 $generated@@600 $generated@@45))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@145) ($generated@@132 $generated@@601 $generated@@48))
 :pattern ( ($generated@@132 $generated@@601 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@602) $generated@@145) (= (type $generated@@604) $generated@@145)) (= (type $generated@@605) $generated@@64)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) $generated@@145)) (= (type $generated@@608) ($generated@@168 $generated@@77 $generated@@4))) (= (type $generated@@609) $generated@@77)) (= (type $generated@@610) ($generated@@168 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@612  (=> (= (ControlFlow 0 4) (- 0 3)) (or (and ($generated@@132 ($generated@@8 ($generated@@253 (- 100 1))) $generated@@46) (and (and (<= ($generated@@253 0) ($generated@@253 (- 100 1))) (< (- 100 1) 100)) (= $generated@@602 (let (($generated@@613 $generated@@602))
$generated@@613)))) (or (and ($generated@@132 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (and (<= ($generated@@253 0) ($generated@@253 0)) (< 0 100)) (= $generated@@602 (let (($generated@@614 $generated@@602))
$generated@@614)))) (or (and ($generated@@132 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (and (<= ($generated@@253 0) ($generated@@253 0)) (< 0 100)) (= $generated@@602 (let (($generated@@615 $generated@@602))
$generated@@615)))) (exists (($generated@@616 Int) )  (and (and (<= ($generated@@253 0) $generated@@616) (< $generated@@616 100)) (= $generated@@602 (let (($generated@@617 $generated@@602))
$generated@@617))))))))))
(let (($generated@@618  (=> (and (not (and (<= ($generated@@253 0) $generated@@603) (< $generated@@603 100))) (= (ControlFlow 0 6) 4)) $generated@@612)))
(let (($generated@@619  (=> (and (and (and (<= ($generated@@253 0) $generated@@603) (< $generated@@603 100)) (and ($generated@@147 $generated@@604 $generated@@605) ($generated@@259 $generated@@604 $generated@@605 $generated@@606))) (and (and (= $generated@@607 $generated@@602) ($generated@@147 $generated@@607 $generated@@605)) (and (= $generated@@604 $generated@@607) (= (ControlFlow 0 5) 4)))) $generated@@612)))
(let (($generated@@620  (=> (< $generated@@603 ($generated@@253 0)) (and (=> (= (ControlFlow 0 8) 5) $generated@@619) (=> (= (ControlFlow 0 8) 6) $generated@@618)))))
(let (($generated@@621  (=> (<= ($generated@@253 0) $generated@@603) (and (=> (= (ControlFlow 0 7) 5) $generated@@619) (=> (= (ControlFlow 0 7) 6) $generated@@618)))))
(let (($generated@@622  (and (=> (= (ControlFlow 0 9) 7) $generated@@621) (=> (= (ControlFlow 0 9) 8) $generated@@620))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@608 ($generated@@222 $generated@@609 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@622) (=> (= (ControlFlow 0 10) 2) $generated@@623)))))
(let (($generated@@625 true))
(let (($generated@@626  (=> (= $generated@@610 ($generated@@167 $generated@@609 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@625) (=> (= (ControlFlow 0 11) 10) $generated@@624)))))
(let (($generated@@627  (=> (and (and (and ($generated@@144 $generated@@606) ($generated@@611 $generated@@606)) ($generated@@147 $generated@@602 $generated@@605)) (and (= 0 $generated@@142) (= (ControlFlow 0 12) 11))) $generated@@626)))
$generated@@627))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 (T@U T@U) Int)
(declare-fun $generated@@144 (T@U) Bool)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Int)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (Int) Int)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@259 (T@U T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@271 (T@T) T@U)
(declare-fun $generated@@272 (T@U) Int)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert (= ($generated@@1 $generated@@145) 15))
(assert  (=> (<= 0 $generated@@142) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@64) (= (type $generated@@151) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@152) $generated@@145)) (or ($generated@@146 $generated@@150 $generated@@152) (and (not (= 0 $generated@@142)) (and ($generated@@144 $generated@@151) ($generated@@147 $generated@@152 $generated@@150))))) (and ($generated@@148 $generated@@150 $generated@@152) (= ($generated@@143 $generated@@150 $generated@@152) (let (($generated@@153 ($generated@@149 $generated@@150 $generated@@152)))
$generated@@153))))
 :pattern ( ($generated@@143 $generated@@150 $generated@@152) ($generated@@144 $generated@@151))
))))
(assert  (and (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@145)
 :pattern ( ($generated@@155 $generated@@157))
)) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@156 $generated@@158)) $generated@@145)
 :pattern ( ($generated@@156 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@136) (= (type $generated@@160) $generated@@136)) true) (= ($generated@@154 $generated@@159 $generated@@160)  (and (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)) (= ($generated@@156 $generated@@159) ($generated@@156 $generated@@160)))))
 :pattern ( ($generated@@154 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@64)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@165) $generated@@64)) ($generated@@132 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@132 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@77 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@67 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@77) (= (type $generated@@216) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@217) ($generated@@66 $generated@@4))) (= (type $generated@@219) $generated@@77)) (= (type $generated@@220) ($generated@@66 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@168 $generated@@77 $generated@@4))
 :pattern ( ($generated@@222 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@67 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@77) (= (type $generated@@228) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@229) ($generated@@66 $generated@@4))) (= (type $generated@@231) $generated@@77)) (= (type $generated@@232) ($generated@@66 $generated@@233))) (= ($generated@@0 ($generated@@166 ($generated@@222 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@166 ($generated@@222 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236)) $generated@@136)
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= ($generated@@132 ($generated@@234 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238))  (and ($generated@@147 $generated@@239 $generated@@237) ($generated@@147 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@132 ($generated@@234 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@136) (= (type $generated@@242) $generated@@136)) (= ($generated@@154 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@154 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@64)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@246) $generated@@64)) (= ($generated@@132 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@145) ($generated@@0 ($generated@@81 $generated@@245 $generated@@247))) ($generated@@147 $generated@@247 $generated@@246))
 :pattern ( ($generated@@81 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@132 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@64)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@251) $generated@@64)) (= ($generated@@132 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@145) ($generated@@0 ($generated@@81 $generated@@250 $generated@@252))) ($generated@@147 $generated@@252 $generated@@251))
 :pattern ( ($generated@@81 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@132 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 Int) ) (! (= ($generated@@253 $generated@@254) $generated@@254)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= ($generated@@255 $generated@@258) $generated@@258)
 :pattern ( ($generated@@255 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@260) $generated@@64) (= (type $generated@@261) $generated@@64)) (= (type $generated@@262) $generated@@145)) (= (type $generated@@263) $generated@@145)) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@144 $generated@@264)) (= ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@135 $generated@@260 $generated@@261) $generated@@264)  (and ($generated@@259 $generated@@262 $generated@@260 $generated@@264) ($generated@@259 $generated@@263 $generated@@261 $generated@@264))))
 :pattern ( ($generated@@74 ($generated@@234 $generated@@262 $generated@@263) ($generated@@135 $generated@@260 $generated@@261) $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@68)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@136) (= ($generated@@134 $generated@@267) (= ($generated@@265 $generated@@267) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@136) ($generated@@134 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@145) (= (type $generated@@270) $generated@@145)) (= $generated@@268 ($generated@@234 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@134 $generated@@268))
)))
(assert  (and (and (forall (($generated@@275 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@275)) 17)) (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) $generated@@276)
 :pattern ( ($generated@@273 $generated@@276))
))) (forall (($generated@@277 T@T) ) (! (= (type ($generated@@271 $generated@@277)) ($generated@@273 $generated@@277))
 :pattern ( ($generated@@271 $generated@@277))
))))
(assert (forall (($generated@@278 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@278)) 0)
 :pattern ( ($generated@@271 $generated@@278))
)))
(assert  (=> (<= 0 $generated@@142) (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) $generated@@145)) (or ($generated@@146 $generated@@279 $generated@@280) (and (not (= 0 $generated@@142)) ($generated@@147 $generated@@280 $generated@@279)))) true)
 :pattern ( ($generated@@143 $generated@@279 $generated@@280))
))))
(assert  (=> (<= 0 $generated@@142) (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@283) $generated@@145)) (or ($generated@@146 $generated@@281 ($generated@@255 $generated@@283)) (and (not (= 0 $generated@@142)) (and ($generated@@144 $generated@@282) ($generated@@147 $generated@@283 $generated@@281))))) (and ($generated@@148 $generated@@281 ($generated@@255 $generated@@283)) (= ($generated@@143 $generated@@281 ($generated@@255 $generated@@283)) (let (($generated@@284 ($generated@@149 $generated@@281 ($generated@@255 $generated@@283))))
$generated@@284))))
 :weight 3
 :pattern ( ($generated@@143 $generated@@281 ($generated@@255 $generated@@283)) ($generated@@144 $generated@@282))
))))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@145)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@74 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@259 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@76 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@79 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@76 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@81 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 18)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@76 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 19)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@2)) (= ($generated@@162 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@81 $generated@@332 $generated@@334))) (<= ($generated ($generated@@81 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@162 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@300 (type $generated@@335))))
(let (($generated@@337 ($generated@@299 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@298 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@297 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@296 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@300 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@76 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@300 (type $generated@@342))))
(let (($generated@@344 ($generated@@299 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@298 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@297 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@81 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@318 (type $generated@@346))))
(let (($generated@@348 ($generated@@317 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@316 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@315 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@314 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@318 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@318 (type $generated@@353))))
(let (($generated@@355 ($generated@@317 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@316 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@315 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@358) $generated@@64)) (= ($generated@@132 $generated@@357 ($generated@@161 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@357 $generated@@359)))) ($generated@@147 $generated@@359 $generated@@358))
 :pattern ( ($generated@@81 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@132 $generated@@357 ($generated@@161 $generated@@358)))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@243 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@259 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@243 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@248 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@259 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@248 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@81 ($generated@@291 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@81 ($generated@@291 $generated@@369) $generated@@368)))
)))
(assert  (and (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@373))
)) (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@300 (type $generated@@376))))
(let (($generated@@378 ($generated@@299 (type $generated@@376))))
(= (type ($generated@@372 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@379) ($generated@@155 ($generated@@371 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@372 $generated@@379) ($generated@@155 ($generated@@371 $generated@@136 $generated@@380))) ($generated@@156 ($generated@@371 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@318 (type $generated@@384))))
(let (($generated@@386 ($generated@@317 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@387) ($generated@@155 ($generated@@371 $generated@@136 $generated@@388)))) (= ($generated@@81 ($generated@@382 $generated@@387) ($generated@@155 ($generated@@371 $generated@@136 $generated@@388))) ($generated@@156 ($generated@@371 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@299 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@298 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@339 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@339 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@317 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@316 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@402) $generated@@406))) (and ($generated@@259 ($generated@@81 ($generated@@372 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@259 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@410) $generated@@414))) (and ($generated@@259 ($generated@@81 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@259 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@318 (type $generated@@417))))
(let (($generated@@419 ($generated@@317 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@316 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@315 $generated@@419 $generated@@418)) (= ($generated@@314 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@314 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@318 (type $generated@@420))))
(let (($generated@@422 ($generated@@317 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@316 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@315 $generated@@422 $generated@@421)) (= ($generated@@350 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@350 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@318 (type $generated@@423))))
(let (($generated@@425 ($generated@@317 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@316 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@315 $generated@@425 $generated@@424)) (= ($generated@@381 $generated@@423) ($generated@@415 $generated@@145))))))
 :pattern ( ($generated@@381 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@300 (type $generated@@426))))
(let (($generated@@428 ($generated@@299 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@298 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@297 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@426) ($generated@@285 ($generated@@234 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@370 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@318 (type $generated@@431))))
(let (($generated@@433 ($generated@@317 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@316 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@315 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@145) (= (type $generated@@435) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@431) ($generated@@285 ($generated@@234 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@381 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@147 $generated@@436 $generated@@46)) (and (= ($generated@@285 ($generated@@371 $generated@@2 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@371 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@147 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@147 $generated@@437 $generated@@47)) (and (= ($generated@@285 ($generated@@371 $generated@@3 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@371 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@147 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@147 $generated@@438 $generated@@44)) (and (= ($generated@@285 ($generated@@371 $generated@@4 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@371 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@147 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@147 $generated@@440 $generated@@45)) (and (= ($generated@@285 ($generated@@371 $generated@@439 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@371 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@147 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@147 ($generated@@285 $generated@@441) $generated@@442) ($generated@@132 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@147 ($generated@@285 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@290 $generated@@443))))
 :pattern ( ($generated@@290 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@274 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@273 $generated@@446)) (<= 0 ($generated@@272 $generated@@445))))
 :pattern ( ($generated@@272 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@399 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@399 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@399 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@407 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@407 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@407 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@407 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@265 ($generated@@234 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@155 ($generated@@234 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@234 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@156 ($generated@@234 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@234 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@274 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@273 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@272 $generated@@487))) ($generated@@259 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@243 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@243 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@243 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@243 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@248 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@248 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@248 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@248 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@161 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@161 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@161 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@371 $generated@@510 ($generated@@285 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@285 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@399 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@511) $generated@@514))) (and ($generated@@147 ($generated@@81 ($generated@@372 $generated@@511) $generated@@514) $generated@@513) ($generated@@147 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@399 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@407 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@515) $generated@@518))) (and ($generated@@147 ($generated@@81 ($generated@@382 $generated@@515) $generated@@518) $generated@@517) ($generated@@147 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@407 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@145)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@234 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@234 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@234 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@234 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@147 $generated@@525 ($generated@@399 $generated@@526 $generated@@527))) (and (= ($generated@@285 ($generated@@371 ($generated@@298 $generated@@145 $generated@@145) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@371 ($generated@@298 $generated@@145 $generated@@145) $generated@@525) ($generated@@399 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@147 $generated@@525 ($generated@@399 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@147 $generated@@528 ($generated@@407 $generated@@529 $generated@@530))) (and (= ($generated@@285 ($generated@@371 ($generated@@316 $generated@@145 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@371 ($generated@@316 $generated@@145 $generated@@145) $generated@@528) ($generated@@407 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@147 $generated@@528 ($generated@@407 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@145)) ($generated@@147 $generated@@533 ($generated@@135 $generated@@531 $generated@@532))) (and (= ($generated@@285 ($generated@@371 $generated@@136 $generated@@533)) $generated@@533) ($generated@@132 ($generated@@371 $generated@@136 $generated@@533) ($generated@@135 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@147 $generated@@533 ($generated@@135 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@81 ($generated@@415 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@135 $generated@@538 $generated@@539)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@136) (= ($generated@@519 ($generated@@285 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@285 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@145) ($generated@@147 $generated@@541 ($generated@@75 0))) (and (= ($generated@@285 ($generated@@371 $generated@@2 $generated@@541)) $generated@@541) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@541) ($generated@@75 0))))
 :pattern ( ($generated@@147 $generated@@541 ($generated@@75 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@147 $generated@@542 ($generated@@243 $generated@@543))) (and (= ($generated@@285 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@542) ($generated@@243 $generated@@543))))
 :pattern ( ($generated@@147 $generated@@542 ($generated@@243 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@147 $generated@@544 ($generated@@248 $generated@@545))) (and (= ($generated@@285 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@544) ($generated@@248 $generated@@545))))
 :pattern ( ($generated@@147 $generated@@544 ($generated@@248 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@147 $generated@@546 ($generated@@161 $generated@@547))) (and (= ($generated@@285 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@546) ($generated@@161 $generated@@547))))
 :pattern ( ($generated@@147 $generated@@546 ($generated@@161 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@147 $generated@@548 ($generated@@481 $generated@@549))) (and (= ($generated@@285 ($generated@@371 ($generated@@273 $generated@@145) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@371 ($generated@@273 $generated@@145) $generated@@548) ($generated@@481 $generated@@549))))
 :pattern ( ($generated@@147 $generated@@548 ($generated@@481 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@64) (= (type $generated@@551) $generated@@145)) ($generated@@148 $generated@@550 $generated@@551)) (and (and (<= ($generated@@253 0) ($generated@@149 $generated@@550 $generated@@551)) (< ($generated@@149 $generated@@550 $generated@@551) 100)) (= ($generated@@253 3) ($generated@@253 3))))
 :pattern ( ($generated@@149 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@552 ($generated@@161 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@552 $generated@@555)))) ($generated@@259 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@81 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@161 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@144 $generated@@558) (and ($generated@@134 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@259 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@259 ($generated@@155 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@144 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@259 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@259 ($generated@@156 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@145)) (= ($generated@@234 ($generated@@255 $generated@@564) ($generated@@255 $generated@@565)) ($generated@@255 ($generated@@234 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@234 ($generated@@255 $generated@@564) ($generated@@255 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@253 $generated@@566))) ($generated@@255 ($generated@@285 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@253 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@285 ($generated@@255 $generated@@567)) ($generated@@255 ($generated@@285 $generated@@567)))
 :pattern ( ($generated@@285 ($generated@@255 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@274 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@273 $generated@@569)) (= ($generated@@272 $generated@@568) 0)) (= $generated@@568 ($generated@@271 $generated@@569))))
 :pattern ( ($generated@@272 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@76 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@290 ($generated@@82 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@290 $generated@@570) ($generated ($generated@@81 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@290 ($generated@@82 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@2)) ($generated@@74 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@3)) ($generated@@74 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@579) $generated@@4)) ($generated@@74 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@74 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@581) $generated@@439)) ($generated@@74 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@74 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@145)) ($generated@@74 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@273 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= ($generated@@132 $generated@@584 ($generated@@481 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@272 $generated@@584))) ($generated@@147 ($generated@@482 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@482 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@481 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@273 $generated@@145)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@272 $generated@@588))) (< ($generated@@520 ($generated@@371 $generated@@136 ($generated@@482 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@520 ($generated@@371 $generated@@136 ($generated@@482 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@132 $generated@@590 ($generated@@399 $generated@@591 $generated@@592))) (and (and ($generated@@132 ($generated@@296 $generated@@590) ($generated@@243 $generated@@591)) ($generated@@132 ($generated@@339 $generated@@590) ($generated@@243 $generated@@592))) ($generated@@132 ($generated@@370 $generated@@590) ($generated@@243 ($generated@@135 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@132 $generated@@590 ($generated@@399 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@132 $generated@@593 ($generated@@407 $generated@@594 $generated@@595))) (and (and ($generated@@132 ($generated@@314 $generated@@593) ($generated@@248 $generated@@594)) ($generated@@132 ($generated@@350 $generated@@593) ($generated@@248 $generated@@595))) ($generated@@132 ($generated@@381 $generated@@593) ($generated@@248 ($generated@@135 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@132 $generated@@593 ($generated@@407 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@132 $generated@@596 $generated@@46))
 :pattern ( ($generated@@132 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@132 $generated@@597 $generated@@47))
 :pattern ( ($generated@@132 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@132 $generated@@598 $generated@@44))
 :pattern ( ($generated@@132 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@439) ($generated@@132 $generated@@599 $generated@@45))
 :pattern ( ($generated@@132 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@145) ($generated@@132 $generated@@600 $generated@@48))
 :pattern ( ($generated@@132 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@606) $generated@@145) (= (type $generated@@602) $generated@@145)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@605) $generated@@145)) (= (type $generated@@607) ($generated@@168 $generated@@77 $generated@@4))) (= (type $generated@@608) $generated@@77)) (= (type $generated@@609) ($generated@@168 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@611  (=> (= (ControlFlow 0 4) (- 0 3)) (or (and ($generated@@132 ($generated@@8 ($generated@@253 (- 100 1))) $generated@@46) (and (and (<= ($generated@@253 0) ($generated@@253 (- 100 1))) (< (- 100 1) 100)) (= ($generated@@253 3) ($generated@@253 3)))) (or (and ($generated@@132 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (and (<= ($generated@@253 0) ($generated@@253 0)) (< 0 100)) (= ($generated@@253 3) ($generated@@253 3)))) (or (and ($generated@@132 ($generated@@8 ($generated@@253 0)) $generated@@46) (and (and (<= ($generated@@253 0) ($generated@@253 0)) (< 0 100)) (= ($generated@@253 3) ($generated@@253 3)))) (exists (($generated@@612 Int) )  (and (and (<= ($generated@@253 0) $generated@@612) (< $generated@@612 100)) (= ($generated@@253 3) ($generated@@253 3))))))))))
(let (($generated@@613  (=> (and (not (and (<= ($generated@@253 0) $generated@@601) (< $generated@@601 100))) (= (ControlFlow 0 6) 4)) $generated@@611)))
(let (($generated@@614  (=> (and (and (and (<= ($generated@@253 0) $generated@@601) (< $generated@@601 100)) (and ($generated@@147 $generated@@602 $generated@@603) ($generated@@259 $generated@@602 $generated@@603 $generated@@604))) (and (and (= $generated@@605 $generated@@606) ($generated@@147 $generated@@605 $generated@@603)) (and (= $generated@@602 $generated@@605) (= (ControlFlow 0 5) 4)))) $generated@@611)))
(let (($generated@@615  (=> (< $generated@@601 ($generated@@253 0)) (and (=> (= (ControlFlow 0 8) 5) $generated@@614) (=> (= (ControlFlow 0 8) 6) $generated@@613)))))
(let (($generated@@616  (=> (<= ($generated@@253 0) $generated@@601) (and (=> (= (ControlFlow 0 7) 5) $generated@@614) (=> (= (ControlFlow 0 7) 6) $generated@@613)))))
(let (($generated@@617  (and (=> (= (ControlFlow 0 9) 7) $generated@@616) (=> (= (ControlFlow 0 9) 8) $generated@@615))))
(let (($generated@@618 true))
(let (($generated@@619  (=> (= $generated@@607 ($generated@@222 $generated@@608 $generated@@604 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 9) $generated@@617) (=> (= (ControlFlow 0 10) 2) $generated@@618)))))
(let (($generated@@620 true))
(let (($generated@@621  (=> (= $generated@@609 ($generated@@167 $generated@@608 $generated@@604 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 1) $generated@@620) (=> (= (ControlFlow 0 11) 10) $generated@@619)))))
(let (($generated@@622  (=> (and (and (and ($generated@@144 $generated@@604) ($generated@@610 $generated@@604)) ($generated@@147 $generated@@606 $generated@@603)) (and (= 0 $generated@@142) (= (ControlFlow 0 12) 11))) $generated@@621)))
$generated@@622))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 (T@U T@U) Int)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@350 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@600 (T@U T@U) Int)
(declare-fun $generated@@616 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (= (type $generated@@137) $generated@@69) (= (type $generated@@138) $generated@@82)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@82) (= (type $generated@@140) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@139 $generated@@137 $generated@@140)  (or (= $generated@@139 $generated@@138) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@139 $generated@@137 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@69)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@82) (= ($generated@@141 $generated@@166 $generated@@137)  (or (= $generated@@166 $generated@@138) (= ($generated@@164 $generated@@166) $generated@@137))))
 :pattern ( ($generated@@141 $generated@@166 $generated@@137))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@82 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@72 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@82) (= (type $generated@@217) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@218) ($generated@@71 $generated@@4))) (= (type $generated@@220) $generated@@82)) (= (type $generated@@221) ($generated@@71 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@82 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@72 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@82) (= (type $generated@@229) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@230) ($generated@@71 $generated@@4))) (= (type $generated@@232) $generated@@82)) (= (type $generated@@233) ($generated@@71 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert  (and (forall (($generated@@237 T@U) ) (! (= (type ($generated@@235 $generated@@237)) $generated@@69)
 :pattern ( ($generated@@235 $generated@@237))
)) (= (type $generated@@236) $generated@@69)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@69) (= (type $generated@@239) $generated@@82)) (= (type $generated@@240) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@239 ($generated@@235 $generated@@238) $generated@@240) ($generated@@79 $generated@@239 $generated@@236 $generated@@240)))
 :pattern ( ($generated@@79 $generated@@239 ($generated@@235 $generated@@238) $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@82) (= (type $generated@@242) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@241 $generated@@236 $generated@@242) ($generated@@79 $generated@@241 $generated@@137 $generated@@242)))
 :pattern ( ($generated@@79 $generated@@241 $generated@@236 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@69) (= (type $generated@@248) $generated@@69)) (= (type $generated@@249) $generated@@154)) (= (type $generated@@250) $generated@@154)) (= ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@145) (= (type $generated@@252) $generated@@145)) (= ($generated@@151 $generated@@251 $generated@@252) (= $generated@@251 $generated@@252)))
 :pattern ( ($generated@@151 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@154) ($generated@@0 ($generated@@86 $generated@@255 $generated@@257))) ($generated@@244 $generated@@257 $generated@@256))
 :pattern ( ($generated@@86 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@141 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@261) $generated@@69)) (= ($generated@@141 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@154) ($generated@@0 ($generated@@86 $generated@@260 $generated@@262))) ($generated@@244 $generated@@262 $generated@@261))
 :pattern ( ($generated@@86 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@141 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@274) $generated@@69) (= (type $generated@@275) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@276) $generated@@82)) (or ($generated@@272 $generated@@274 $generated@@276) (and (not (= 2 $generated@@269)) (and ($generated@@271 $generated@@275) ($generated@@141 $generated@@276 $generated@@236))))) (and ($generated@@273 $generated@@274 $generated@@276) (= ($generated@@270 $generated@@274 $generated@@276) ($generated@@263 12))))
 :pattern ( ($generated@@270 $generated@@274 $generated@@276) ($generated@@271 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@69) (= (type $generated@@279) $generated@@69)) (= (type $generated@@280) $generated@@154)) (= (type $generated@@281) $generated@@154)) (= (type $generated@@282) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@271 $generated@@282)) (= ($generated@@79 ($generated@@243 $generated@@280 $generated@@281) ($generated@@144 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@79 ($generated@@243 $generated@@280 $generated@@281) ($generated@@144 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@73)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@145) (= ($generated@@143 $generated@@285) (= ($generated@@283 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@145) ($generated@@143 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@154) (= (type $generated@@288) $generated@@154)) (= $generated@@286 ($generated@@243 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@143 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@154)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@69) (= (type $generated@@301) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@79 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@277 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@81 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@84 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@81 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@86 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@74)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@69) (and (= ($generated@@77 ($generated@@235 $generated@@310)) $generated@@65) (= ($generated@@308 ($generated@@235 $generated@@310)) $generated@@68)))
 :pattern ( ($generated@@235 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 18)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@81 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@86 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 19)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@81 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@86 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@84 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@81 $generated@@348 $generated@@2)) (= ($generated@@160 $generated@@347) (forall (($generated@@349 T@U) ) (!  (=> (= (type $generated@@349) $generated@@348) (and (<= 0 ($generated ($generated@@86 $generated@@347 $generated@@349))) (<= ($generated ($generated@@86 $generated@@347 $generated@@349)) ($generated@@302 $generated@@347))))
 :pattern ( ($generated@@86 $generated@@347 $generated@@349))
)))))
 :pattern ( ($generated@@160 $generated@@347))
)))
(assert (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@350 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@350 $generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@154) ($generated@@244 $generated@@353 $generated@@137)) (and (= ($generated@@297 ($generated@@350 $generated@@82 $generated@@353)) $generated@@353) ($generated@@141 ($generated@@350 $generated@@82 $generated@@353) $generated@@137)))
 :pattern ( ($generated@@244 $generated@@353 $generated@@137))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) ($generated@@244 $generated@@354 $generated@@236)) (and (= ($generated@@297 ($generated@@350 $generated@@82 $generated@@354)) $generated@@354) ($generated@@141 ($generated@@350 $generated@@82 $generated@@354) $generated@@236)))
 :pattern ( ($generated@@244 $generated@@354 $generated@@236))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@355) $generated@@69) (= (type $generated@@356) $generated@@82)) (or ($generated@@272 $generated@@355 $generated@@356) (and (not (= 2 $generated@@269)) ($generated@@141 $generated@@356 $generated@@236)))) true)
 :pattern ( ($generated@@270 $generated@@355 $generated@@356))
))))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@82) (= ($generated@@141 $generated@@357 $generated@@236)  (and ($generated@@141 $generated@@357 $generated@@137) (not (= $generated@@357 $generated@@138)))))
 :pattern ( ($generated@@141 $generated@@357 $generated@@236))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@315 (type $generated@@358))))
(let (($generated@@360 ($generated@@314 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@313 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@312 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@311 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@315 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@81 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@315 (type $generated@@365))))
(let (($generated@@367 ($generated@@314 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@313 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@312 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@86 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@333 (type $generated@@369))))
(let (($generated@@371 ($generated@@332 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@331 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@330 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@329 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@333 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@81 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@333 (type $generated@@376))))
(let (($generated@@378 ($generated@@332 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@331 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@330 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@86 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@381) $generated@@69)) (= ($generated@@141 $generated@@380 ($generated@@159 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@380 $generated@@382)))) ($generated@@244 $generated@@382 $generated@@381))
 :pattern ( ($generated@@86 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@141 $generated@@380 ($generated@@159 $generated@@381)))
)))
(assert  (=> (<= 2 $generated@@269) (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) $generated@@69) (= (type $generated@@384) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@385) $generated@@82)) (or ($generated@@272 $generated@@383 ($generated@@265 $generated@@385)) (and (not (= 2 $generated@@269)) (and ($generated@@271 $generated@@384) ($generated@@141 $generated@@385 $generated@@236))))) (and ($generated@@273 $generated@@383 ($generated@@265 $generated@@385)) (= ($generated@@270 $generated@@383 ($generated@@265 $generated@@385)) ($generated@@263 12))))
 :weight 3
 :pattern ( ($generated@@270 $generated@@383 ($generated@@265 $generated@@385)) ($generated@@271 $generated@@384))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@387) $generated@@69)) (= (type $generated@@388) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@386 ($generated@@253 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@154) ($generated@@0 ($generated@@86 $generated@@386 $generated@@389))) ($generated@@277 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@86 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@79 $generated@@386 ($generated@@253 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@391) $generated@@69)) (= (type $generated@@392) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@390 ($generated@@258 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@154) ($generated@@0 ($generated@@86 $generated@@390 $generated@@393))) ($generated@@277 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@86 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@79 $generated@@390 ($generated@@258 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(= ($generated ($generated@@86 ($generated@@303 $generated@@395) $generated@@394)) 0))
 :pattern ( (let (($generated@@395 (type $generated@@394)))
($generated@@86 ($generated@@303 $generated@@395) $generated@@394)))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@315 (type $generated@@399))))
(let (($generated@@401 ($generated@@314 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@402) ($generated@@152 ($generated@@350 $generated@@145 $generated@@403)))) (= ($generated@@86 ($generated@@397 $generated@@402) ($generated@@152 ($generated@@350 $generated@@145 $generated@@403))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@403))))))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert  (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@404 $generated@@406)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@404 $generated@@406))
)) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@333 (type $generated@@407))))
(let (($generated@@409 ($generated@@332 (type $generated@@407))))
(= (type ($generated@@405 $generated@@407)) ($generated@@81 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@405 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@411) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@404 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@410) ($generated@@152 ($generated@@350 $generated@@145 $generated@@411)))) (= ($generated@@86 ($generated@@405 $generated@@410) ($generated@@152 ($generated@@350 $generated@@145 $generated@@411))) ($generated@@153 ($generated@@350 $generated@@145 $generated@@411))))))
 :pattern ( ($generated@@86 ($generated@@404 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (let (($generated@@414 (type $generated@@413)))
(let (($generated@@415 ($generated@@314 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@313 $generated@@415 $generated@@414)) (= ($generated@@0 ($generated@@86 ($generated@@362 $generated@@412) $generated@@413)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (and ($generated@@0 ($generated@@86 ($generated@@311 $generated@@412) $generated@@416)) (= $generated@@413 ($generated@@86 ($generated@@397 $generated@@412) $generated@@416))))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@412) $generated@@416))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@412) $generated@@416))
))))))
 :pattern ( ($generated@@86 ($generated@@362 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@332 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@331 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@86 ($generated@@373 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@86 ($generated@@329 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@86 ($generated@@405 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@417) $generated@@421))
 :pattern ( ($generated@@86 ($generated@@405 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@86 ($generated@@373 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@69)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@425) $generated@@429))) (and ($generated@@277 ($generated@@86 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@277 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@79 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@69)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@434) $generated@@69)) (= (type $generated@@435) $generated@@69)) (= (type $generated@@436) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@433) $generated@@437))) (and ($generated@@277 ($generated@@86 ($generated@@405 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@277 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@86 ($generated@@405 $generated@@433) $generated@@437))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@79 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@81 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@333 (type $generated@@440))))
(let (($generated@@442 ($generated@@332 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@331 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@330 $generated@@442 $generated@@441)) (= ($generated@@329 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@329 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@333 (type $generated@@443))))
(let (($generated@@445 ($generated@@332 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@331 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@330 $generated@@445 $generated@@444)) (= ($generated@@373 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@373 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@333 (type $generated@@446))))
(let (($generated@@448 ($generated@@332 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@331 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@330 $generated@@448 $generated@@447)) (= ($generated@@404 $generated@@446) ($generated@@438 $generated@@154))))))
 :pattern ( ($generated@@404 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@315 (type $generated@@449))))
(let (($generated@@451 ($generated@@314 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@313 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@312 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@154) (= (type $generated@@453) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@396 $generated@@449) ($generated@@297 ($generated@@243 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@333 (type $generated@@454))))
(let (($generated@@456 ($generated@@332 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@331 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@330 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@154) (= (type $generated@@458) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@404 $generated@@454) ($generated@@297 ($generated@@243 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@404 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@154) ($generated@@244 $generated@@459 $generated@@46)) (and (= ($generated@@297 ($generated@@350 $generated@@2 $generated@@459)) $generated@@459) ($generated@@141 ($generated@@350 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@154) ($generated@@244 $generated@@460 $generated@@47)) (and (= ($generated@@297 ($generated@@350 $generated@@3 $generated@@460)) $generated@@460) ($generated@@141 ($generated@@350 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@154) ($generated@@244 $generated@@461 $generated@@44)) (and (= ($generated@@297 ($generated@@350 $generated@@4 $generated@@461)) $generated@@461) ($generated@@141 ($generated@@350 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@154) ($generated@@244 $generated@@463 $generated@@45)) (and (= ($generated@@297 ($generated@@350 $generated@@462 $generated@@463)) $generated@@463) ($generated@@141 ($generated@@350 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@69) (= ($generated@@244 ($generated@@297 $generated@@464) $generated@@465) ($generated@@141 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@244 ($generated@@297 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@84 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@81 $generated@@467 $generated@@2)) (<= 0 ($generated@@302 $generated@@466))))
 :pattern ( ($generated@@302 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@292 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@291 $generated@@469)) (<= 0 ($generated@@290 $generated@@468))))
 :pattern ( ($generated@@290 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@422 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@422 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@422 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@422 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@77 ($generated@@422 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@422 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@430 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@430 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@69)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@69) (= (type $generated@@487) $generated@@69)) (= ($generated@@484 ($generated@@430 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@69) (= (type $generated@@489) $generated@@69)) (= ($generated@@77 ($generated@@430 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@430 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@154) (= (type $generated@@491) $generated@@154)) (= ($generated@@283 ($generated@@243 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@144 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@144 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@69)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@69) (= (type $generated@@499) $generated@@69)) (= ($generated@@496 ($generated@@144 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@144 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@154) (= (type $generated@@501) $generated@@154)) (= ($generated@@152 ($generated@@243 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@243 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@154) (= (type $generated@@503) $generated@@154)) (= ($generated@@153 ($generated@@243 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@243 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@69)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@292 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@291 $generated@@154)) (= (type $generated@@511) $generated@@69)) (= (type $generated@@512) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@290 $generated@@510))) ($generated@@277 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@79 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@515 Int) ) (! (= ($generated@@514 ($generated@@80 $generated@@515)) $generated@@515)
 :pattern ( ($generated@@80 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@253 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@253 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@253 $generated@@519)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@258 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@258 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@523)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@159 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@159 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@159 $generated@@527)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@69)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@69) (= ($generated@@528 ($generated@@504 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@504 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@77 ($generated@@504 $generated@@531)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@69) (= ($generated@@532 ($generated@@235 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@235 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(= ($generated@@350 $generated@@536 ($generated@@297 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@297 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@538) $generated@@69)) (= (type $generated@@539) $generated@@69)) (= ($generated@@141 $generated@@537 ($generated@@422 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@311 $generated@@537) $generated@@540))) (and ($generated@@244 ($generated@@86 ($generated@@397 $generated@@537) $generated@@540) $generated@@539) ($generated@@244 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@537) $generated@@540))
 :pattern ( ($generated@@86 ($generated@@311 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@141 $generated@@537 ($generated@@422 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@542) $generated@@69)) (= (type $generated@@543) $generated@@69)) (= ($generated@@141 $generated@@541 ($generated@@430 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@329 $generated@@541) $generated@@544))) (and ($generated@@244 ($generated@@86 ($generated@@405 $generated@@541) $generated@@544) $generated@@543) ($generated@@244 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@86 ($generated@@405 $generated@@541) $generated@@544))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@141 $generated@@541 ($generated@@430 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@154) (= (type $generated@@548) $generated@@154)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@243 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@243 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) (= (type $generated@@550) $generated@@154)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@243 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@243 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@154) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@244 $generated@@551 ($generated@@422 $generated@@552 $generated@@553))) (and (= ($generated@@297 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@551)) $generated@@551) ($generated@@141 ($generated@@350 ($generated@@313 $generated@@154 $generated@@154) $generated@@551) ($generated@@422 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@244 $generated@@551 ($generated@@422 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@69)) ($generated@@244 $generated@@554 ($generated@@430 $generated@@555 $generated@@556))) (and (= ($generated@@297 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@554)) $generated@@554) ($generated@@141 ($generated@@350 ($generated@@331 $generated@@154 $generated@@154) $generated@@554) ($generated@@430 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@244 $generated@@554 ($generated@@430 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@69) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@154)) ($generated@@244 $generated@@559 ($generated@@144 $generated@@557 $generated@@558))) (and (= ($generated@@297 ($generated@@350 $generated@@145 $generated@@559)) $generated@@559) ($generated@@141 ($generated@@350 $generated@@145 $generated@@559) ($generated@@144 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@244 $generated@@559 ($generated@@144 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@86 ($generated@@438 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@86 ($generated@@438 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@69) (= (type $generated@@563) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@562 $generated@@563)) $generated@@62) (= ($generated@@308 ($generated@@144 $generated@@562 $generated@@563)) $generated@@66)))
 :pattern ( ($generated@@144 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@145) (= ($generated@@545 ($generated@@297 $generated@@564)) ($generated@@546 $generated@@564)))
 :pattern ( ($generated@@545 ($generated@@297 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@154) ($generated@@244 $generated@@565 ($generated@@80 0))) (and (= ($generated@@297 ($generated@@350 $generated@@2 $generated@@565)) $generated@@565) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@565) ($generated@@80 0))))
 :pattern ( ($generated@@244 $generated@@565 ($generated@@80 0)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@154) (= (type $generated@@567) $generated@@69)) ($generated@@244 $generated@@566 ($generated@@253 $generated@@567))) (and (= ($generated@@297 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566)) $generated@@566) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@566) ($generated@@253 $generated@@567))))
 :pattern ( ($generated@@244 $generated@@566 ($generated@@253 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@154) (= (type $generated@@569) $generated@@69)) ($generated@@244 $generated@@568 ($generated@@258 $generated@@569))) (and (= ($generated@@297 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@568)) $generated@@568) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@4) $generated@@568) ($generated@@258 $generated@@569))))
 :pattern ( ($generated@@244 $generated@@568 ($generated@@258 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@154) (= (type $generated@@571) $generated@@69)) ($generated@@244 $generated@@570 ($generated@@159 $generated@@571))) (and (= ($generated@@297 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@570)) $generated@@570) ($generated@@141 ($generated@@350 ($generated@@81 $generated@@154 $generated@@2) $generated@@570) ($generated@@159 $generated@@571))))
 :pattern ( ($generated@@244 $generated@@570 ($generated@@159 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@154) (= (type $generated@@573) $generated@@69)) ($generated@@244 $generated@@572 ($generated@@504 $generated@@573))) (and (= ($generated@@297 ($generated@@350 ($generated@@291 $generated@@154) $generated@@572)) $generated@@572) ($generated@@141 ($generated@@350 ($generated@@291 $generated@@154) $generated@@572) ($generated@@504 $generated@@573))))
 :pattern ( ($generated@@244 $generated@@572 ($generated@@504 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@69) (= (type $generated@@575) $generated@@154)) ($generated@@244 $generated@@575 ($generated@@235 $generated@@574))) (and (= ($generated@@297 ($generated@@350 $generated@@82 $generated@@575)) $generated@@575) ($generated@@141 ($generated@@350 $generated@@82 $generated@@575) ($generated@@235 $generated@@574))))
 :pattern ( ($generated@@244 $generated@@575 ($generated@@235 $generated@@574)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@63))
(assert (= ($generated@@308 $generated@@137) $generated@@67))
(assert (= ($generated@@77 $generated@@236) $generated@@64))
(assert (= ($generated@@308 $generated@@236) $generated@@67))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@576 ($generated@@159 $generated@@577) $generated@@578) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@576 $generated@@579)))) ($generated@@277 $generated@@579 $generated@@577 $generated@@578))
 :pattern ( ($generated@@86 $generated@@576 $generated@@579))
))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@159 $generated@@577) $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@69) (= (type $generated@@581) $generated@@82)) (= ($generated@@141 $generated@@581 ($generated@@235 $generated@@580))  (and ($generated@@141 $generated@@581 $generated@@236) ($generated@@0 ($generated@@265 ($generated@@11 true))))))
 :pattern ( ($generated@@141 $generated@@581 ($generated@@235 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@145) (= (type $generated@@583) $generated@@69)) (= (type $generated@@584) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@271 $generated@@584) (and ($generated@@143 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@69) ($generated@@79 $generated@@582 ($generated@@144 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@79 $generated@@582 ($generated@@144 $generated@@583 $generated@@585) $generated@@584))
))))) ($generated@@277 ($generated@@152 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@277 ($generated@@152 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@145) (= (type $generated@@587) $generated@@69)) (= (type $generated@@588) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@271 $generated@@588) (and ($generated@@143 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@69) ($generated@@79 $generated@@586 ($generated@@144 $generated@@589 $generated@@587) $generated@@588))
 :pattern ( ($generated@@79 $generated@@586 ($generated@@144 $generated@@589 $generated@@587) $generated@@588))
))))) ($generated@@277 ($generated@@153 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@277 ($generated@@153 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@154) (= (type $generated@@591) $generated@@154)) (= ($generated@@243 ($generated@@265 $generated@@590) ($generated@@265 $generated@@591)) ($generated@@265 ($generated@@243 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@243 ($generated@@265 $generated@@590) ($generated@@265 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@263 $generated@@592))) ($generated@@265 ($generated@@297 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@263 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@297 ($generated@@265 $generated@@593)) ($generated@@265 ($generated@@297 $generated@@593)))
 :pattern ( ($generated@@297 ($generated@@265 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 ($generated@@292 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@291 $generated@@595)) (= ($generated@@290 $generated@@594) 0)) (= $generated@@594 ($generated@@289 $generated@@595))))
 :pattern ( ($generated@@290 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@597)))
 (=> (and (and (= (type $generated@@596) ($generated@@81 $generated@@599 $generated@@2)) (= (type $generated@@598) $generated@@2)) (<= 0 ($generated $generated@@598))) (= ($generated@@302 ($generated@@87 $generated@@596 $generated@@597 $generated@@598)) (+ (- ($generated@@302 $generated@@596) ($generated ($generated@@86 $generated@@596 $generated@@597))) ($generated $generated@@598)))))
 :pattern ( ($generated@@302 ($generated@@87 $generated@@596 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@69) (= (type $generated@@602) $generated@@82)) ($generated@@273 $generated@@601 $generated@@602)) (= ($generated@@600 $generated@@601 $generated@@602) ($generated@@263 5)))
 :pattern ( ($generated@@600 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@604) $generated@@2)) ($generated@@79 $generated@@604 $generated@@46 $generated@@603))
 :pattern ( ($generated@@79 $generated@@604 $generated@@46 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@606) $generated@@3)) ($generated@@79 $generated@@606 $generated@@47 $generated@@605))
 :pattern ( ($generated@@79 $generated@@606 $generated@@47 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@608) $generated@@4)) ($generated@@79 $generated@@608 $generated@@44 $generated@@607))
 :pattern ( ($generated@@79 $generated@@608 $generated@@44 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@610) $generated@@462)) ($generated@@79 $generated@@610 $generated@@45 $generated@@609))
 :pattern ( ($generated@@79 $generated@@610 $generated@@45 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@612) $generated@@154)) ($generated@@79 $generated@@612 $generated@@48 $generated@@611))
 :pattern ( ($generated@@79 $generated@@612 $generated@@48 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@291 $generated@@154)) (= (type $generated@@614) $generated@@69)) (= ($generated@@141 $generated@@613 ($generated@@504 $generated@@614)) (forall (($generated@@615 Int) ) (!  (=> (and (<= 0 $generated@@615) (< $generated@@615 ($generated@@290 $generated@@613))) ($generated@@244 ($generated@@505 $generated@@613 $generated@@615) $generated@@614))
 :pattern ( ($generated@@505 $generated@@613 $generated@@615))
))))
 :pattern ( ($generated@@141 $generated@@613 ($generated@@504 $generated@@614)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 Int) ) (!  (=> (= (type $generated@@617) ($generated@@291 $generated@@154)) (=> (and (<= 0 $generated@@618) (< $generated@@618 ($generated@@290 $generated@@617))) (< ($generated@@546 ($generated@@350 $generated@@145 ($generated@@505 $generated@@617 $generated@@618))) ($generated@@616 $generated@@617))))
 :pattern ( ($generated@@546 ($generated@@350 $generated@@145 ($generated@@505 $generated@@617 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) ($generated@@313 $generated@@154 $generated@@154)) (= (type $generated@@620) $generated@@69)) (= (type $generated@@621) $generated@@69)) ($generated@@141 $generated@@619 ($generated@@422 $generated@@620 $generated@@621))) (and (and ($generated@@141 ($generated@@311 $generated@@619) ($generated@@253 $generated@@620)) ($generated@@141 ($generated@@362 $generated@@619) ($generated@@253 $generated@@621))) ($generated@@141 ($generated@@396 $generated@@619) ($generated@@253 ($generated@@144 $generated@@620 $generated@@621)))))
 :pattern ( ($generated@@141 $generated@@619 ($generated@@422 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) ($generated@@331 $generated@@154 $generated@@154)) (= (type $generated@@623) $generated@@69)) (= (type $generated@@624) $generated@@69)) ($generated@@141 $generated@@622 ($generated@@430 $generated@@623 $generated@@624))) (and (and ($generated@@141 ($generated@@329 $generated@@622) ($generated@@258 $generated@@623)) ($generated@@141 ($generated@@373 $generated@@622) ($generated@@258 $generated@@624))) ($generated@@141 ($generated@@404 $generated@@622) ($generated@@258 ($generated@@144 $generated@@623 $generated@@624)))))
 :pattern ( ($generated@@141 $generated@@622 ($generated@@430 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@2) ($generated@@141 $generated@@625 $generated@@46))
 :pattern ( ($generated@@141 $generated@@625 $generated@@46))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@3) ($generated@@141 $generated@@626 $generated@@47))
 :pattern ( ($generated@@141 $generated@@626 $generated@@47))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@4) ($generated@@141 $generated@@627 $generated@@44))
 :pattern ( ($generated@@141 $generated@@627 $generated@@44))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@462) ($generated@@141 $generated@@628 $generated@@45))
 :pattern ( ($generated@@141 $generated@@628 $generated@@45))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@154) ($generated@@141 $generated@@629 $generated@@48))
 :pattern ( ($generated@@141 $generated@@629 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@630) $generated@@82) (= (type $generated@@631) $generated@@69)) (= (type $generated@@632) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@633) $generated@@82)) (= (type $generated@@634) $generated@@82)) (= (type $generated@@635) ($generated@@169 $generated@@82 $generated@@4))) (= (type $generated@@636) ($generated@@169 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@638 true))
(let (($generated@@639  (=> (and ($generated@@141 $generated@@630 ($generated@@235 $generated@@631)) ($generated@@79 $generated@@630 ($generated@@235 $generated@@631) $generated@@632)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@141 $generated@@633 ($generated@@235 $generated@@631))) (=> ($generated@@141 $generated@@633 ($generated@@235 $generated@@631)) (=> (and (and (= $generated@@634 $generated@@633) ($generated@@141 $generated@@634 ($generated@@235 $generated@@631))) (and (= $generated@@630 $generated@@634) (= (ControlFlow 0 3) (- 0 2)))) (or (and ($generated@@141 ($generated@@8 ($generated@@263 5)) $generated@@46) (= ($generated@@263 5) ($generated@@263 5))) (or (and ($generated@@141 ($generated@@8 ($generated@@263 0)) $generated@@46) (= ($generated@@263 0) ($generated@@263 5))) (exists (($generated@@640 Int) ) (= $generated@@640 ($generated@@263 5)))))))))))
(let (($generated@@641  (=> (= $generated@@635 ($generated@@223 $generated@@138 $generated@@632 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@639) (=> (= (ControlFlow 0 6) 5) $generated@@638)))))
(let (($generated@@642 true))
(let (($generated@@643  (=> (= $generated@@636 ($generated@@168 $generated@@138 $generated@@632 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@642) (=> (= (ControlFlow 0 7) 6) $generated@@641)))))
(let (($generated@@644  (=> (and (and (and ($generated@@271 $generated@@632) ($generated@@637 $generated@@632)) ($generated@@141 $generated@@633 $generated@@236)) (and (= 2 $generated@@269) (= (ControlFlow 0 8) 7))) $generated@@643)))
$generated@@644)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@243 (T@U T@U) T@U)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 (T@U T@U) Int)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@254 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U T@U) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@T) T@U)
(declare-fun $generated@@467 () T@T)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@510 (T@U Int) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert  (and (= (type $generated@@137) $generated@@69) (= (type $generated@@138) $generated@@82)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@82) (= (type $generated@@140) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@139 $generated@@137 $generated@@140)  (or (= $generated@@139 $generated@@138) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@140 $generated@@139) $generated@@60)))))
 :pattern ( ($generated@@79 $generated@@139 $generated@@137 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@80 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@69)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@69) (= (type $generated@@149) $generated@@69)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@69)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@69)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@164 $generated@@165)) $generated@@69)
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= (type $generated@@166) $generated@@82) (= ($generated@@141 $generated@@166 $generated@@137)  (or (= $generated@@166 $generated@@138) (= ($generated@@164 $generated@@166) $generated@@137))))
 :pattern ( ($generated@@141 $generated@@166 $generated@@137))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@82 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@72 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@82) (= (type $generated@@217) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@218) ($generated@@71 $generated@@4))) (= (type $generated@@220) $generated@@82)) (= (type $generated@@221) ($generated@@71 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@169 $generated@@82 $generated@@4))
 :pattern ( ($generated@@223 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@72 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@82) (= (type $generated@@229) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@230) ($generated@@71 $generated@@4))) (= (type $generated@@232) $generated@@82)) (= (type $generated@@233) ($generated@@71 $generated@@234))) (= ($generated@@0 ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@167 ($generated@@223 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert  (and (forall (($generated@@237 T@U) ) (! (= (type ($generated@@235 $generated@@237)) $generated@@69)
 :pattern ( ($generated@@235 $generated@@237))
)) (= (type $generated@@236) $generated@@69)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (= (type $generated@@238) $generated@@69) (= (type $generated@@239) $generated@@82)) (= (type $generated@@240) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@239 ($generated@@235 $generated@@238) $generated@@240) ($generated@@79 $generated@@239 $generated@@236 $generated@@240)))
 :pattern ( ($generated@@79 $generated@@239 ($generated@@235 $generated@@238) $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@82) (= (type $generated@@242) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@241 $generated@@236 $generated@@242) ($generated@@79 $generated@@241 $generated@@137 $generated@@242)))
 :pattern ( ($generated@@79 $generated@@241 $generated@@236 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (! (= (type ($generated@@243 $generated@@245 $generated@@246)) $generated@@145)
 :pattern ( ($generated@@243 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) $generated@@69) (= (type $generated@@248) $generated@@69)) (= (type $generated@@249) $generated@@154)) (= (type $generated@@250) $generated@@154)) (= ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248))  (and ($generated@@244 $generated@@249 $generated@@247) ($generated@@244 $generated@@250 $generated@@248))))
 :pattern ( ($generated@@141 ($generated@@243 $generated@@249 $generated@@250) ($generated@@144 $generated@@247 $generated@@248)))
)))
(assert  (=> (<= 2 $generated@@251) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@257) $generated@@69) (= (type $generated@@258) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@259) $generated@@82)) (or ($generated@@254 $generated@@257 $generated@@259) (and (not (= 2 $generated@@251)) (and ($generated@@253 $generated@@258) ($generated@@141 $generated@@259 $generated@@236))))) (and ($generated@@255 $generated@@257 $generated@@259) (= ($generated@@252 $generated@@257 $generated@@259) (let (($generated@@260 ($generated@@256 $generated@@257 $generated@@259)))
$generated@@260))))
 :pattern ( ($generated@@252 $generated@@257 $generated@@259) ($generated@@253 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@145) (= (type $generated@@262) $generated@@145)) (= ($generated@@151 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@151 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@69)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@266) $generated@@69)) (= ($generated@@141 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@154) ($generated@@0 ($generated@@86 $generated@@265 $generated@@267))) ($generated@@244 $generated@@267 $generated@@266))
 :pattern ( ($generated@@86 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@141 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@69)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@271) $generated@@69)) (= ($generated@@141 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@154) ($generated@@0 ($generated@@86 $generated@@270 $generated@@272))) ($generated@@244 $generated@@272 $generated@@271))
 :pattern ( ($generated@@86 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@141 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@69) (= (type $generated@@281) $generated@@69)) (= (type $generated@@282) $generated@@154)) (= (type $generated@@283) $generated@@154)) (= (type $generated@@284) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@253 $generated@@284)) (= ($generated@@79 ($generated@@243 $generated@@282 $generated@@283) ($generated@@144 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@79 ($generated@@243 $generated@@282 $generated@@283) ($generated@@144 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@73)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@145) (= ($generated@@143 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@145) ($generated@@143 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@154) (= (type $generated@@290) $generated@@154)) (= $generated@@288 ($generated@@243 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@143 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@154)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@69) (= (type $generated@@303) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@279 ($generated@@299 $generated@@301) $generated@@302 $generated@@303) ($generated@@79 $generated@@301 $generated@@302 $generated@@303)))
 :pattern ( ($generated@@279 ($generated@@299 $generated@@301) $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@306 T@T) ) (! (= (type ($generated@@305 $generated@@306)) ($generated@@81 $generated@@306 $generated@@2))
 :pattern ( ($generated@@305 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@84 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@81 $generated@@308 $generated@@2)) (and (= (= ($generated@@304 $generated@@307) 0) (= $generated@@307 ($generated@@305 $generated@@308))) (=> (not (= ($generated@@304 $generated@@307) 0)) (exists (($generated@@309 T@U) ) (!  (and (= (type $generated@@309) $generated@@308) (< 0 ($generated ($generated@@86 $generated@@307 $generated@@309))))
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
))))))
 :pattern ( ($generated@@304 $generated@@307))
)))
(assert (forall (($generated@@311 T@U) ) (! (= (type ($generated@@310 $generated@@311)) $generated@@74)
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@69) (and (= ($generated@@77 ($generated@@235 $generated@@312)) $generated@@65) (= ($generated@@310 ($generated@@235 $generated@@312)) $generated@@68)))
 :pattern ( ($generated@@235 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@81 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@86 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@86 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@81 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@86 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@86 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@84 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@81 $generated@@350 $generated@@2)) (= ($generated@@160 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@86 $generated@@349 $generated@@351))) (<= ($generated ($generated@@86 $generated@@349 $generated@@351)) ($generated@@304 $generated@@349))))
 :pattern ( ($generated@@86 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@160 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@154) ($generated@@244 $generated@@355 $generated@@137)) (and (= ($generated@@299 ($generated@@352 $generated@@82 $generated@@355)) $generated@@355) ($generated@@141 ($generated@@352 $generated@@82 $generated@@355) $generated@@137)))
 :pattern ( ($generated@@244 $generated@@355 $generated@@137))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@154) ($generated@@244 $generated@@356 $generated@@236)) (and (= ($generated@@299 ($generated@@352 $generated@@82 $generated@@356)) $generated@@356) ($generated@@141 ($generated@@352 $generated@@82 $generated@@356) $generated@@236)))
 :pattern ( ($generated@@244 $generated@@356 $generated@@236))
)))
(assert  (=> (<= 2 $generated@@251) (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@357) $generated@@69) (= (type $generated@@358) $generated@@82)) (or ($generated@@254 $generated@@357 $generated@@358) (and (not (= 2 $generated@@251)) ($generated@@141 $generated@@358 $generated@@236)))) true)
 :pattern ( ($generated@@252 $generated@@357 $generated@@358))
))))
(assert  (=> (<= 2 $generated@@251) (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (and (= (type $generated@@359) $generated@@69) (= (type $generated@@360) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@361) $generated@@82)) (or ($generated@@254 $generated@@359 ($generated@@275 $generated@@361)) (and (not (= 2 $generated@@251)) (and ($generated@@253 $generated@@360) ($generated@@141 $generated@@361 $generated@@236))))) (and ($generated@@255 $generated@@359 ($generated@@275 $generated@@361)) (= ($generated@@252 $generated@@359 ($generated@@275 $generated@@361)) (let (($generated@@362 ($generated@@256 $generated@@359 ($generated@@275 $generated@@361))))
$generated@@362))))
 :weight 3
 :pattern ( ($generated@@252 $generated@@359 ($generated@@275 $generated@@361)) ($generated@@253 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@82) (= ($generated@@141 $generated@@363 $generated@@236)  (and ($generated@@141 $generated@@363 $generated@@137) (not (= $generated@@363 $generated@@138)))))
 :pattern ( ($generated@@141 $generated@@363 $generated@@236))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@317 (type $generated@@364))))
(let (($generated@@366 ($generated@@316 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@315 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@314 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@86 ($generated@@313 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@313 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@317 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@81 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@317 (type $generated@@371))))
(let (($generated@@373 ($generated@@316 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@315 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@314 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@86 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@335 (type $generated@@375))))
(let (($generated@@377 ($generated@@334 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@333 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@332 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@86 ($generated@@331 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@331 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@335 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@81 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@335 (type $generated@@382))))
(let (($generated@@384 ($generated@@334 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@333 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@332 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@86 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@387) $generated@@69)) (= ($generated@@141 $generated@@386 ($generated@@159 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@386 $generated@@388)))) ($generated@@244 $generated@@388 $generated@@387))
 :pattern ( ($generated@@86 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@141 $generated@@386 ($generated@@159 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@390) $generated@@69)) (= (type $generated@@391) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@389 ($generated@@263 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@154) ($generated@@0 ($generated@@86 $generated@@389 $generated@@392))) ($generated@@279 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@86 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@79 $generated@@389 ($generated@@263 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@81 $generated@@154 $generated@@4)) (= (type $generated@@394) $generated@@69)) (= (type $generated@@395) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@393 ($generated@@268 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@154) ($generated@@0 ($generated@@86 $generated@@393 $generated@@396))) ($generated@@279 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@86 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@79 $generated@@393 ($generated@@268 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@86 ($generated@@305 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@86 ($generated@@305 $generated@@398) $generated@@397)))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@399) $generated@@69) (= (type $generated@@400) $generated@@82)) ($generated@@255 $generated@@399 $generated@@400)) (= ($generated@@256 $generated@@399 $generated@@400) (ite ($generated@@141 $generated@@400 ($generated@@235 $generated@@399)) 3 4)))
 :pattern ( ($generated@@256 $generated@@399 $generated@@400))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@317 (type $generated@@404))))
(let (($generated@@406 ($generated@@316 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@81 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@408) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@86 ($generated@@313 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408)))) (= ($generated@@86 ($generated@@402 $generated@@407) ($generated@@152 ($generated@@352 $generated@@145 $generated@@408))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@408))))))
 :pattern ( ($generated@@86 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@81 $generated@@154 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@335 (type $generated@@412))))
(let (($generated@@414 ($generated@@334 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@81 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@416) $generated@@154)) (= ($generated@@0 ($generated@@86 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@86 ($generated@@331 $generated@@415) ($generated@@152 ($generated@@352 $generated@@145 $generated@@416)))) (= ($generated@@86 ($generated@@410 $generated@@415) ($generated@@152 ($generated@@352 $generated@@145 $generated@@416))) ($generated@@153 ($generated@@352 $generated@@145 $generated@@416))))))
 :pattern ( ($generated@@86 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@316 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@315 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@86 ($generated@@368 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@86 ($generated@@313 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@86 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@86 ($generated@@313 $generated@@417) $generated@@421))
 :pattern ( ($generated@@86 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@86 ($generated@@368 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@334 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@333 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@86 ($generated@@379 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@86 ($generated@@331 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@86 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@86 ($generated@@331 $generated@@422) $generated@@426))
 :pattern ( ($generated@@86 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@86 ($generated@@379 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@69)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@431) $generated@@69)) (= (type $generated@@432) $generated@@69)) (= (type $generated@@433) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@313 $generated@@430) $generated@@434))) (and ($generated@@279 ($generated@@86 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@279 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@86 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@86 ($generated@@313 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@79 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@69)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@439) $generated@@69)) (= (type $generated@@440) $generated@@69)) (= (type $generated@@441) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@331 $generated@@438) $generated@@442))) (and ($generated@@279 ($generated@@86 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@279 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@86 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@86 ($generated@@331 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@79 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@T) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@81 $generated@@444 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@335 (type $generated@@445))))
(let (($generated@@447 ($generated@@334 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@333 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@332 $generated@@447 $generated@@446)) (= ($generated@@331 $generated@@445) ($generated@@443 $generated@@447))))))
 :pattern ( ($generated@@331 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@335 (type $generated@@448))))
(let (($generated@@450 ($generated@@334 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@333 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@332 $generated@@450 $generated@@449)) (= ($generated@@379 $generated@@448) ($generated@@443 $generated@@449))))))
 :pattern ( ($generated@@379 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@335 (type $generated@@451))))
(let (($generated@@453 ($generated@@334 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@333 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@332 $generated@@453 $generated@@452)) (= ($generated@@409 $generated@@451) ($generated@@443 $generated@@154))))))
 :pattern ( ($generated@@409 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@317 (type $generated@@454))))
(let (($generated@@456 ($generated@@316 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@315 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@314 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@154) (= (type $generated@@458) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@401 $generated@@454) ($generated@@299 ($generated@@243 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@401 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@335 (type $generated@@459))))
(let (($generated@@461 ($generated@@334 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@333 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@332 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) ($generated@@0 ($generated@@86 ($generated@@409 $generated@@459) ($generated@@299 ($generated@@243 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@409 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@154) ($generated@@244 $generated@@464 $generated@@46)) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@464)) $generated@@464) ($generated@@141 ($generated@@352 $generated@@2 $generated@@464) $generated@@46)))
 :pattern ( ($generated@@244 $generated@@464 $generated@@46))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@154) ($generated@@244 $generated@@465 $generated@@47)) (and (= ($generated@@299 ($generated@@352 $generated@@3 $generated@@465)) $generated@@465) ($generated@@141 ($generated@@352 $generated@@3 $generated@@465) $generated@@47)))
 :pattern ( ($generated@@244 $generated@@465 $generated@@47))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@154) ($generated@@244 $generated@@466 $generated@@44)) (and (= ($generated@@299 ($generated@@352 $generated@@4 $generated@@466)) $generated@@466) ($generated@@141 ($generated@@352 $generated@@4 $generated@@466) $generated@@44)))
 :pattern ( ($generated@@244 $generated@@466 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@467) 20))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@154) ($generated@@244 $generated@@468 $generated@@45)) (and (= ($generated@@299 ($generated@@352 $generated@@467 $generated@@468)) $generated@@468) ($generated@@141 ($generated@@352 $generated@@467 $generated@@468) $generated@@45)))
 :pattern ( ($generated@@244 $generated@@468 $generated@@45))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@69) (= ($generated@@244 ($generated@@299 $generated@@469) $generated@@470) ($generated@@141 $generated@@469 $generated@@470)))
 :pattern ( ($generated@@244 ($generated@@299 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@84 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@81 $generated@@472 $generated@@2)) (<= 0 ($generated@@304 $generated@@471))))
 :pattern ( ($generated@@304 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@294 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@293 $generated@@474)) (<= 0 ($generated@@292 $generated@@473))))
 :pattern ( ($generated@@292 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@69)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@475 ($generated@@427 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@427 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@427 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@427 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@69) (= (type $generated@@484) $generated@@69)) (= ($generated@@77 ($generated@@427 $generated@@483 $generated@@484)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@69)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@485 ($generated@@435 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@435 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@69)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@69) (= (type $generated@@492) $generated@@69)) (= ($generated@@489 ($generated@@435 $generated@@491 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@435 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@77 ($generated@@435 $generated@@493 $generated@@494)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@154) (= (type $generated@@496) $generated@@154)) (= ($generated@@285 ($generated@@243 $generated@@495 $generated@@496)) $generated@@61))
 :pattern ( ($generated@@243 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@69)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@69) (= (type $generated@@500) $generated@@69)) (= ($generated@@497 ($generated@@144 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@144 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@69) (= (type $generated@@504) $generated@@69)) (= ($generated@@501 ($generated@@144 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@144 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@154) (= (type $generated@@506) $generated@@154)) (= ($generated@@152 ($generated@@243 $generated@@505 $generated@@506)) $generated@@505))
 :pattern ( ($generated@@243 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@154) (= (type $generated@@508) $generated@@154)) (= ($generated@@153 ($generated@@243 $generated@@507 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@243 $generated@@507 $generated@@508))
)))
(assert  (and (forall (($generated@@511 T@U) ) (! (= (type ($generated@@509 $generated@@511)) $generated@@69)
 :pattern ( ($generated@@509 $generated@@511))
)) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (! (let (($generated@@514 ($generated@@294 (type $generated@@512))))
(= (type ($generated@@510 $generated@@512 $generated@@513)) $generated@@514))
 :pattern ( ($generated@@510 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@293 $generated@@154)) (= (type $generated@@516) $generated@@69)) (= (type $generated@@517) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@515 ($generated@@509 $generated@@516) $generated@@517) (forall (($generated@@518 Int) ) (!  (=> (and (<= 0 $generated@@518) (< $generated@@518 ($generated@@292 $generated@@515))) ($generated@@279 ($generated@@510 $generated@@515 $generated@@518) $generated@@516 $generated@@517))
 :pattern ( ($generated@@510 $generated@@515 $generated@@518))
))))
 :pattern ( ($generated@@79 $generated@@515 ($generated@@509 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@519 ($generated@@80 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@80 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@521 ($generated@@263 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@263 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@69) (= ($generated@@77 ($generated@@263 $generated@@524)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@524))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@69)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@525 ($generated@@268 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@268 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@69) (= ($generated@@77 ($generated@@268 $generated@@528)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@69) (= ($generated@@529 ($generated@@159 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@159 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@69) (= ($generated@@77 ($generated@@159 $generated@@532)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@69)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@69) (= ($generated@@533 ($generated@@509 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@509 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@69) (= ($generated@@77 ($generated@@509 $generated@@536)) $generated@@57))
 :pattern ( ($generated@@509 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@69)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@69) (= ($generated@@537 ($generated@@235 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@235 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@352 $generated@@541 ($generated@@299 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@299 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@543) $generated@@69)) (= (type $generated@@544) $generated@@69)) (= ($generated@@141 $generated@@542 ($generated@@427 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@313 $generated@@542) $generated@@545))) (and ($generated@@244 ($generated@@86 ($generated@@402 $generated@@542) $generated@@545) $generated@@544) ($generated@@244 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@86 ($generated@@402 $generated@@542) $generated@@545))
 :pattern ( ($generated@@86 ($generated@@313 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@141 $generated@@542 ($generated@@427 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) (= ($generated@@141 $generated@@546 ($generated@@435 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@154) ($generated@@0 ($generated@@86 ($generated@@331 $generated@@546) $generated@@549))) (and ($generated@@244 ($generated@@86 ($generated@@410 $generated@@546) $generated@@549) $generated@@548) ($generated@@244 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@86 ($generated@@410 $generated@@546) $generated@@549))
 :pattern ( ($generated@@86 ($generated@@331 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@141 $generated@@546 ($generated@@435 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@154) (= (type $generated@@553) $generated@@154)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@243 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@243 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@154) (= (type $generated@@555) $generated@@154)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@243 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@243 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@154) (= (type $generated@@557) $generated@@69)) (= (type $generated@@558) $generated@@69)) ($generated@@244 $generated@@556 ($generated@@427 $generated@@557 $generated@@558))) (and (= ($generated@@299 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@556)) $generated@@556) ($generated@@141 ($generated@@352 ($generated@@315 $generated@@154 $generated@@154) $generated@@556) ($generated@@427 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@244 $generated@@556 ($generated@@427 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@154) (= (type $generated@@560) $generated@@69)) (= (type $generated@@561) $generated@@69)) ($generated@@244 $generated@@559 ($generated@@435 $generated@@560 $generated@@561))) (and (= ($generated@@299 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@559)) $generated@@559) ($generated@@141 ($generated@@352 ($generated@@333 $generated@@154 $generated@@154) $generated@@559) ($generated@@435 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@244 $generated@@559 ($generated@@435 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@69) (= (type $generated@@563) $generated@@69)) (= (type $generated@@564) $generated@@154)) ($generated@@244 $generated@@564 ($generated@@144 $generated@@562 $generated@@563))) (and (= ($generated@@299 ($generated@@352 $generated@@145 $generated@@564)) $generated@@564) ($generated@@141 ($generated@@352 $generated@@145 $generated@@564) ($generated@@144 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@244 $generated@@564 ($generated@@144 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@86 ($generated@@443 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@86 ($generated@@443 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@69) (= (type $generated@@568) $generated@@69)) (and (= ($generated@@77 ($generated@@144 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@310 ($generated@@144 $generated@@567 $generated@@568)) $generated@@66)))
 :pattern ( ($generated@@144 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@145) (= ($generated@@550 ($generated@@299 $generated@@569)) ($generated@@551 $generated@@569)))
 :pattern ( ($generated@@550 ($generated@@299 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@154) ($generated@@244 $generated@@570 ($generated@@80 0))) (and (= ($generated@@299 ($generated@@352 $generated@@2 $generated@@570)) $generated@@570) ($generated@@141 ($generated@@352 ($generated@@81 $generated@@154 $generated@@4) $generated@@570) ($generated@@80 0))))
 :pattern ( ($generated@@244 $generated@@570 ($generated@@80 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@154) (= (type $generated@@572) $generated@@69)) ($generated@@244 $generated@@571 ($generated@@263 $generated@@572))) (and (= ($generated@@299 ($generated@@352 ($generated@@81 $generated@@154 $generated@@4) $generated@@571)) $generated@@571) ($generated@@141 ($generated@@352 ($generated@@81 $generated@@154 $generated@@4) $generated@@571) ($generated@@263 $generated@@572))))
 :pattern ( ($generated@@244 $generated@@571 ($generated@@263 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@154) (= (type $generated@@574) $generated@@69)) ($generated@@244 $generated@@573 ($generated@@268 $generated@@574))) (and (= ($generated@@299 ($generated@@352 ($generated@@81 $generated@@154 $generated@@4) $generated@@573)) $generated@@573) ($generated@@141 ($generated@@352 ($generated@@81 $generated@@154 $generated@@4) $generated@@573) ($generated@@268 $generated@@574))))
 :pattern ( ($generated@@244 $generated@@573 ($generated@@268 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@154) (= (type $generated@@576) $generated@@69)) ($generated@@244 $generated@@575 ($generated@@159 $generated@@576))) (and (= ($generated@@299 ($generated@@352 ($generated@@81 $generated@@154 $generated@@2) $generated@@575)) $generated@@575) ($generated@@141 ($generated@@352 ($generated@@81 $generated@@154 $generated@@2) $generated@@575) ($generated@@159 $generated@@576))))
 :pattern ( ($generated@@244 $generated@@575 ($generated@@159 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@154) (= (type $generated@@578) $generated@@69)) ($generated@@244 $generated@@577 ($generated@@509 $generated@@578))) (and (= ($generated@@299 ($generated@@352 ($generated@@293 $generated@@154) $generated@@577)) $generated@@577) ($generated@@141 ($generated@@352 ($generated@@293 $generated@@154) $generated@@577) ($generated@@509 $generated@@578))))
 :pattern ( ($generated@@244 $generated@@577 ($generated@@509 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@69) (= (type $generated@@580) $generated@@154)) ($generated@@244 $generated@@580 ($generated@@235 $generated@@579))) (and (= ($generated@@299 ($generated@@352 $generated@@82 $generated@@580)) $generated@@580) ($generated@@141 ($generated@@352 $generated@@82 $generated@@580) ($generated@@235 $generated@@579))))
 :pattern ( ($generated@@244 $generated@@580 ($generated@@235 $generated@@579)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@63))
(assert (= ($generated@@310 $generated@@137) $generated@@67))
(assert (= ($generated@@77 $generated@@236) $generated@@64))
(assert (= ($generated@@310 $generated@@236) $generated@@67))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@81 $generated@@154 $generated@@2)) (= (type $generated@@582) $generated@@69)) (= (type $generated@@583) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@581 ($generated@@159 $generated@@582) $generated@@583) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@154) (< 0 ($generated ($generated@@86 $generated@@581 $generated@@584)))) ($generated@@279 $generated@@584 $generated@@582 $generated@@583))
 :pattern ( ($generated@@86 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@79 $generated@@581 ($generated@@159 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@69) (= (type $generated@@586) $generated@@82)) (= ($generated@@141 $generated@@586 ($generated@@235 $generated@@585))  (and ($generated@@141 $generated@@586 $generated@@236) ($generated@@0 ($generated@@275 ($generated@@11 true))))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@235 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@145) (= (type $generated@@588) $generated@@69)) (= (type $generated@@589) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@253 $generated@@589) (and ($generated@@143 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@69) ($generated@@79 $generated@@587 ($generated@@144 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@79 $generated@@587 ($generated@@144 $generated@@588 $generated@@590) $generated@@589))
))))) ($generated@@279 ($generated@@152 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@279 ($generated@@152 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (= (type $generated@@591) $generated@@145) (= (type $generated@@592) $generated@@69)) (= (type $generated@@593) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@253 $generated@@593) (and ($generated@@143 $generated@@591) (exists (($generated@@594 T@U) ) (!  (and (= (type $generated@@594) $generated@@69) ($generated@@79 $generated@@591 ($generated@@144 $generated@@594 $generated@@592) $generated@@593))
 :pattern ( ($generated@@79 $generated@@591 ($generated@@144 $generated@@594 $generated@@592) $generated@@593))
))))) ($generated@@279 ($generated@@153 $generated@@591) $generated@@592 $generated@@593))
 :pattern ( ($generated@@279 ($generated@@153 $generated@@591) $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@154) (= (type $generated@@596) $generated@@154)) (= ($generated@@243 ($generated@@275 $generated@@595) ($generated@@275 $generated@@596)) ($generated@@275 ($generated@@243 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@243 ($generated@@275 $generated@@595) ($generated@@275 $generated@@596)))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@299 ($generated@@8 ($generated@@273 $generated@@597))) ($generated@@275 ($generated@@299 ($generated@@8 $generated@@597))))
 :pattern ( ($generated@@299 ($generated@@8 ($generated@@273 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@299 ($generated@@275 $generated@@598)) ($generated@@275 ($generated@@299 $generated@@598)))
 :pattern ( ($generated@@299 ($generated@@275 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@294 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@293 $generated@@600)) (= ($generated@@292 $generated@@599) 0)) (= $generated@@599 ($generated@@291 $generated@@600))))
 :pattern ( ($generated@@292 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@81 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@304 ($generated@@87 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@304 $generated@@601) ($generated ($generated@@86 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@304 ($generated@@87 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@606) $generated@@2)) ($generated@@79 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@79 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@608) $generated@@3)) ($generated@@79 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@79 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@610) $generated@@4)) ($generated@@79 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@79 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@612) $generated@@467)) ($generated@@79 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@79 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@614) $generated@@154)) ($generated@@79 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@79 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@293 $generated@@154)) (= (type $generated@@616) $generated@@69)) (= ($generated@@141 $generated@@615 ($generated@@509 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@292 $generated@@615))) ($generated@@244 ($generated@@510 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@510 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@141 $generated@@615 ($generated@@509 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@293 $generated@@154)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@292 $generated@@619))) (< ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@551 ($generated@@352 $generated@@145 ($generated@@510 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@315 $generated@@154 $generated@@154)) (= (type $generated@@622) $generated@@69)) (= (type $generated@@623) $generated@@69)) ($generated@@141 $generated@@621 ($generated@@427 $generated@@622 $generated@@623))) (and (and ($generated@@141 ($generated@@313 $generated@@621) ($generated@@263 $generated@@622)) ($generated@@141 ($generated@@368 $generated@@621) ($generated@@263 $generated@@623))) ($generated@@141 ($generated@@401 $generated@@621) ($generated@@263 ($generated@@144 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@141 $generated@@621 ($generated@@427 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@333 $generated@@154 $generated@@154)) (= (type $generated@@625) $generated@@69)) (= (type $generated@@626) $generated@@69)) ($generated@@141 $generated@@624 ($generated@@435 $generated@@625 $generated@@626))) (and (and ($generated@@141 ($generated@@331 $generated@@624) ($generated@@268 $generated@@625)) ($generated@@141 ($generated@@379 $generated@@624) ($generated@@268 $generated@@626))) ($generated@@141 ($generated@@409 $generated@@624) ($generated@@268 ($generated@@144 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@141 $generated@@624 ($generated@@435 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@141 $generated@@627 $generated@@46))
 :pattern ( ($generated@@141 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@141 $generated@@628 $generated@@47))
 :pattern ( ($generated@@141 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@141 $generated@@629 $generated@@44))
 :pattern ( ($generated@@141 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@467) ($generated@@141 $generated@@630 $generated@@45))
 :pattern ( ($generated@@141 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@154) ($generated@@141 $generated@@631 $generated@@48))
 :pattern ( ($generated@@141 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@632) $generated@@82) (= (type $generated@@633) $generated@@69)) (= (type $generated@@634) ($generated@@169 $generated@@82 $generated@@4))) (= (type $generated@@635) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@636) ($generated@@169 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@638  (=> (= (ControlFlow 0 4) (- 0 3)) (or (and ($generated@@141 ($generated@@8 (ite ($generated@@141 $generated@@632 ($generated@@235 $generated@@633)) 3 4)) $generated@@46) (= (ite ($generated@@141 $generated@@632 ($generated@@235 $generated@@633)) 3 4) (ite ($generated@@141 $generated@@632 ($generated@@235 $generated@@633)) 3 4))) (or (and ($generated@@141 ($generated@@8 ($generated@@273 0)) $generated@@46) (= ($generated@@273 0) (ite ($generated@@141 $generated@@632 ($generated@@235 $generated@@633)) 3 4))) (exists (($generated@@639 Int) ) (= $generated@@639 (ite ($generated@@141 $generated@@632 ($generated@@235 $generated@@633)) 3 4))))))))
(let (($generated@@640  (=> (and (not ($generated@@141 $generated@@632 ($generated@@235 $generated@@633))) (= (ControlFlow 0 6) 4)) $generated@@638)))
(let (($generated@@641  (=> (and ($generated@@141 $generated@@632 ($generated@@235 $generated@@633)) (= (ControlFlow 0 5) 4)) $generated@@638)))
(let (($generated@@642  (and (=> (= (ControlFlow 0 7) 5) $generated@@641) (=> (= (ControlFlow 0 7) 6) $generated@@640))))
(let (($generated@@643 true))
(let (($generated@@644  (=> (= $generated@@634 ($generated@@223 $generated@@138 $generated@@635 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@642) (=> (= (ControlFlow 0 8) 2) $generated@@643)))))
(let (($generated@@645 true))
(let (($generated@@646  (=> (= $generated@@636 ($generated@@168 $generated@@138 $generated@@635 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 1) $generated@@645) (=> (= (ControlFlow 0 9) 8) $generated@@644)))))
(let (($generated@@647  (=> (and (and (and ($generated@@253 $generated@@635) ($generated@@637 $generated@@635)) ($generated@@141 $generated@@632 $generated@@236)) (and (= 2 $generated@@251) (= (ControlFlow 0 10) 9))) $generated@@646)))
$generated@@647))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 () T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) T@U)
(declare-fun $generated@@277 (T@U T@U) Bool)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@292 () Int)
(declare-fun $generated@@293 (T@U T@U T@U) T@U)
(declare-fun $generated@@294 (T@U T@U T@U) Bool)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@317 (T@U) Int)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@345 (T@T T@T) T@U)
(declare-fun $generated@@346 (T@T T@T) T@T)
(declare-fun $generated@@347 (T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@T) T@U)
(declare-fun $generated@@475 () T@T)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@560 (T@U) Int)
(declare-fun $generated@@636 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@73)) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@68) $generated@@77)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert  (and (= (type $generated@@140) $generated@@72) (= (type $generated@@141) $generated@@85)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@85) (= (type $generated@@143) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@142 $generated@@140 $generated@@143)  (or (= $generated@@142 $generated@@141) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@143 $generated@@142) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@142 $generated@@140 $generated@@143))
)))
(assert (= (type $generated@@144) $generated@@72))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@145) $generated@@85) (= (type $generated@@146) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@145 $generated@@144 $generated@@146)  (or (= $generated@@145 $generated@@141) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@146 $generated@@145) $generated@@60)))))
 :pattern ( ($generated@@82 $generated@@145 $generated@@144 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@147 $generated@@148 ($generated@@83 0)))
 :pattern ( ($generated@@147 $generated@@148 ($generated@@83 0)))
)))
(assert  (and (= ($generated@@1 $generated@@151) 14) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@152 $generated@@153)) $generated@@72)
 :pattern ( ($generated@@150 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (and (= (type $generated@@154) $generated@@72) (= (type $generated@@155) $generated@@72)) (= (type $generated@@156) $generated@@151)) ($generated@@147 $generated@@156 ($generated@@150 $generated@@154 $generated@@155))) ($generated@@149 $generated@@156))
 :pattern ( ($generated@@149 $generated@@156) ($generated@@147 $generated@@156 ($generated@@150 $generated@@154 $generated@@155)))
)))
(assert  (and (and (= ($generated@@1 $generated@@160) 15) (forall (($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@158 $generated@@161))
))) (forall (($generated@@162 T@U) ) (! (= (type ($generated@@159 $generated@@162)) $generated@@160)
 :pattern ( ($generated@@159 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) $generated@@151) (= (type $generated@@164) $generated@@151)) true) (= ($generated@@157 $generated@@163 $generated@@164)  (and (= ($generated@@158 $generated@@163) ($generated@@158 $generated@@164)) (= ($generated@@159 $generated@@163) ($generated@@159 $generated@@164)))))
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@72)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@84 $generated@@160 $generated@@2)) (= (type $generated@@169) $generated@@72)) ($generated@@147 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@147 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@170 $generated@@171)) $generated@@72)
 :pattern ( ($generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@85) (= ($generated@@147 $generated@@172 $generated@@144)  (or (= $generated@@172 $generated@@141) (= ($generated@@170 $generated@@172) $generated@@144))))
 :pattern ( ($generated@@147 $generated@@172 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@85 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@75 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@85) (= (type $generated@@223) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@224) ($generated@@74 $generated@@4))) (= (type $generated@@226) $generated@@85)) (= (type $generated@@227) ($generated@@74 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ) (! (= (type ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233)) ($generated@@175 $generated@@85 $generated@@4))
 :pattern ( ($generated@@229 $generated@@230 $generated@@231 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (let (($generated@@240 ($generated@@75 (type $generated@@239))))
 (=> (and (and (and (and (= (type $generated@@234) $generated@@85) (= (type $generated@@235) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@236) ($generated@@74 $generated@@4))) (= (type $generated@@238) $generated@@85)) (= (type $generated@@239) ($generated@@74 $generated@@240))) (= ($generated@@0 ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))  (=> (and (not (= $generated@@238 $generated@@234)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@235 $generated@@238) $generated@@236))) $generated@@237))))
 :pattern ( ($generated@@173 ($generated@@229 $generated@@234 $generated@@235 $generated@@236 $generated@@237) $generated@@238 $generated@@239))
)))
(assert  (and (forall (($generated@@243 T@U) ) (! (= (type ($generated@@241 $generated@@243)) $generated@@72)
 :pattern ( ($generated@@241 $generated@@243))
)) (= (type $generated@@242) $generated@@72)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@244) $generated@@72) (= (type $generated@@245) $generated@@85)) (= (type $generated@@246) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@245 ($generated@@241 $generated@@244) $generated@@246) ($generated@@82 $generated@@245 $generated@@242 $generated@@246)))
 :pattern ( ($generated@@82 $generated@@245 ($generated@@241 $generated@@244) $generated@@246))
)))
(assert (= (type $generated@@247) $generated@@72))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@85) (= (type $generated@@249) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@248 $generated@@247 $generated@@249) ($generated@@82 $generated@@248 $generated@@140 $generated@@249)))
 :pattern ( ($generated@@82 $generated@@248 $generated@@247 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@85) (= (type $generated@@251) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@250 $generated@@242 $generated@@251) ($generated@@82 $generated@@250 $generated@@144 $generated@@251)))
 :pattern ( ($generated@@82 $generated@@250 $generated@@242 $generated@@251))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@151)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@72) (= (type $generated@@257) $generated@@72)) (= (type $generated@@258) $generated@@160)) (= (type $generated@@259) $generated@@160)) (= ($generated@@147 ($generated@@252 $generated@@258 $generated@@259) ($generated@@150 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@147 ($generated@@252 $generated@@258 $generated@@259) ($generated@@150 $generated@@256 $generated@@257)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@151) (= (type $generated@@261) $generated@@151)) (= ($generated@@157 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@157 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@72)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) ($generated@@84 $generated@@160 $generated@@4)) (= (type $generated@@265) $generated@@72)) (= ($generated@@147 $generated@@264 ($generated@@262 $generated@@265)) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@160) ($generated@@0 ($generated@@89 $generated@@264 $generated@@266))) ($generated@@253 $generated@@266 $generated@@265))
 :pattern ( ($generated@@89 $generated@@264 $generated@@266))
))))
 :pattern ( ($generated@@147 $generated@@264 ($generated@@262 $generated@@265)))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@72)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@269) ($generated@@84 $generated@@160 $generated@@4)) (= (type $generated@@270) $generated@@72)) (= ($generated@@147 $generated@@269 ($generated@@267 $generated@@270)) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@160) ($generated@@0 ($generated@@89 $generated@@269 $generated@@271))) ($generated@@253 $generated@@271 $generated@@270))
 :pattern ( ($generated@@89 $generated@@269 $generated@@271))
))))
 :pattern ( ($generated@@147 $generated@@269 ($generated@@267 $generated@@270)))
)))
(assert (forall (($generated@@273 T@U) ) (! (let (($generated@@274 (type $generated@@273)))
(= (type ($generated@@272 $generated@@273)) $generated@@274))
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= ($generated@@272 $generated@@275) $generated@@275)
 :pattern ( ($generated@@272 $generated@@275))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (! (= (type ($generated@@276 $generated@@278 $generated@@279)) $generated@@85)
 :pattern ( ($generated@@276 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@72) (= (type $generated@@281) $generated@@85)) ($generated@@277 $generated@@280 $generated@@281)) (and ($generated@@147 ($generated@@276 $generated@@280 $generated@@281) $generated@@247) (= ($generated@@276 $generated@@280 $generated@@281) $generated@@281)))
 :pattern ( ($generated@@276 $generated@@280 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@72) (= (type $generated@@285) $generated@@72)) (= (type $generated@@286) $generated@@160)) (= (type $generated@@287) $generated@@160)) (= (type $generated@@288) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@282 $generated@@288)) (= ($generated@@82 ($generated@@252 $generated@@286 $generated@@287) ($generated@@150 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@82 ($generated@@252 $generated@@286 $generated@@287) ($generated@@150 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@76)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@151) (= ($generated@@149 $generated@@291) (= ($generated@@289 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@149 $generated@@291))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (! (= (type ($generated@@293 $generated@@295 $generated@@296 $generated@@297)) $generated@@85)
 :pattern ( ($generated@@293 $generated@@295 $generated@@296 $generated@@297))
)))
(assert  (=> (<= 2 $generated@@292) (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (= (type $generated@@298) $generated@@72) (= (type $generated@@299) $generated@@85)) (= (type $generated@@300) $generated@@85)) (or ($generated@@294 $generated@@298 $generated@@299 $generated@@300) (and (not (= 2 $generated@@292)) (and (and ($generated@@147 $generated@@299 $generated@@247) ($generated@@147 $generated@@300 ($generated@@241 $generated@@298))) (= $generated@@299 $generated@@300))))) ($generated@@147 ($generated@@293 $generated@@298 $generated@@299 $generated@@300) $generated@@247))
 :pattern ( ($generated@@293 $generated@@298 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@151) ($generated@@149 $generated@@301)) (exists (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (and (and (= (type $generated@@302) $generated@@160) (= (type $generated@@303) $generated@@160)) (= $generated@@301 ($generated@@252 $generated@@302 $generated@@303)))
 :no-pattern (type $generated@@302)
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@149 $generated@@301))
)))
(assert  (and (and (forall (($generated@@308 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@308)) 17)) (forall (($generated@@309 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@306 $generated@@309))
))) (forall (($generated@@310 T@T) ) (! (= (type ($generated@@304 $generated@@310)) ($generated@@306 $generated@@310))
 :pattern ( ($generated@@304 $generated@@310))
))))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@311)) 0)
 :pattern ( ($generated@@304 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= (type ($generated@@312 $generated@@313)) $generated@@160)
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@72) (= (type $generated@@316) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@283 ($generated@@312 $generated@@314) $generated@@315 $generated@@316) ($generated@@82 $generated@@314 $generated@@315 $generated@@316)))
 :pattern ( ($generated@@283 ($generated@@312 $generated@@314) $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@319 T@T) ) (! (= (type ($generated@@318 $generated@@319)) ($generated@@84 $generated@@319 $generated@@2))
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@87 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@84 $generated@@321 $generated@@2)) (and (= (= ($generated@@317 $generated@@320) 0) (= $generated@@320 ($generated@@318 $generated@@321))) (=> (not (= ($generated@@317 $generated@@320) 0)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) (< 0 ($generated ($generated@@89 $generated@@320 $generated@@322))))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@317 $generated@@320))
)))
(assert (forall (($generated@@324 T@U) ) (! (= (type ($generated@@323 $generated@@324)) $generated@@77)
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@72) (and (= ($generated@@80 ($generated@@241 $generated@@325)) $generated@@67) (= ($generated@@323 ($generated@@241 $generated@@325)) $generated@@71)))
 :pattern ( ($generated@@241 $generated@@325))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 18)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@84 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert  (and (and (and (and (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (= ($generated@@1 ($generated@@346 $generated@@349 $generated@@350)) 19)) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= ($generated@@347 ($generated@@346 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@346 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@348 ($generated@@346 $generated@@353 $generated@@354)) $generated@@354)
 :pattern ( ($generated@@346 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@347 (type $generated@@355))))
(= (type ($generated@@344 $generated@@355)) ($generated@@84 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@355))
))) (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@345 $generated@@357 $generated@@358)) ($generated@@346 $generated@@357 $generated@@358))
 :pattern ( ($generated@@345 $generated@@357 $generated@@358))
))))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@89 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@89 ($generated@@344 ($generated@@345 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@87 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@84 $generated@@363 $generated@@2)) (= ($generated@@166 $generated@@362) (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@363) (and (<= 0 ($generated ($generated@@89 $generated@@362 $generated@@364))) (<= ($generated ($generated@@89 $generated@@362 $generated@@364)) ($generated@@317 $generated@@362))))
 :pattern ( ($generated@@89 $generated@@362 $generated@@364))
)))))
 :pattern ( ($generated@@166 $generated@@362))
)))
(assert (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@365 $generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@160) ($generated@@253 $generated@@368 $generated@@140)) (and (= ($generated@@312 ($generated@@365 $generated@@85 $generated@@368)) $generated@@368) ($generated@@147 ($generated@@365 $generated@@85 $generated@@368) $generated@@140)))
 :pattern ( ($generated@@253 $generated@@368 $generated@@140))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@160) ($generated@@253 $generated@@369 $generated@@247)) (and (= ($generated@@312 ($generated@@365 $generated@@85 $generated@@369)) $generated@@369) ($generated@@147 ($generated@@365 $generated@@85 $generated@@369) $generated@@247)))
 :pattern ( ($generated@@253 $generated@@369 $generated@@247))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@160) ($generated@@253 $generated@@370 $generated@@144)) (and (= ($generated@@312 ($generated@@365 $generated@@85 $generated@@370)) $generated@@370) ($generated@@147 ($generated@@365 $generated@@85 $generated@@370) $generated@@144)))
 :pattern ( ($generated@@253 $generated@@370 $generated@@144))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@160) ($generated@@253 $generated@@371 $generated@@242)) (and (= ($generated@@312 ($generated@@365 $generated@@85 $generated@@371)) $generated@@371) ($generated@@147 ($generated@@365 $generated@@85 $generated@@371) $generated@@242)))
 :pattern ( ($generated@@253 $generated@@371 $generated@@242))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (= (type $generated@@372) $generated@@85) (= ($generated@@147 $generated@@372 $generated@@247)  (and ($generated@@147 $generated@@372 $generated@@140) (not (= $generated@@372 $generated@@141)))))
 :pattern ( ($generated@@147 $generated@@372 $generated@@247))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@85) (= ($generated@@147 $generated@@373 $generated@@242)  (and ($generated@@147 $generated@@373 $generated@@144) (not (= $generated@@373 $generated@@141)))))
 :pattern ( ($generated@@147 $generated@@373 $generated@@242))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@330 (type $generated@@374))))
(let (($generated@@376 ($generated@@329 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@328 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@327 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@376) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@326 $generated@@374))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@330 (type $generated@@379))))
(= (type ($generated@@378 $generated@@379)) ($generated@@84 $generated@@380 $generated@@4)))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@330 (type $generated@@381))))
(let (($generated@@383 ($generated@@329 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@328 $generated@@383 $generated@@382)) (or (= $generated@@381 ($generated@@327 $generated@@383 $generated@@382)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@382) ($generated@@0 ($generated@@89 ($generated@@378 $generated@@381) $generated@@384)))
 :no-pattern (type $generated@@384)
 :no-pattern ($generated $generated@@384)
 :no-pattern ($generated@@0 $generated@@384)
))))))
 :pattern ( ($generated@@378 $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@348 (type $generated@@385))))
(let (($generated@@387 ($generated@@347 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@346 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@345 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) ($generated@@0 ($generated@@89 ($generated@@344 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@344 $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@348 (type $generated@@390))))
(= (type ($generated@@389 $generated@@390)) ($generated@@84 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@348 (type $generated@@392))))
(let (($generated@@394 ($generated@@347 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@346 $generated@@394 $generated@@393)) (or (= $generated@@392 ($generated@@345 $generated@@394 $generated@@393)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@393) ($generated@@0 ($generated@@89 ($generated@@389 $generated@@392) $generated@@395)))
 :no-pattern (type $generated@@395)
 :no-pattern ($generated $generated@@395)
 :no-pattern ($generated@@0 $generated@@395)
))))))
 :pattern ( ($generated@@389 $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@84 $generated@@160 $generated@@2)) (= (type $generated@@397) $generated@@72)) (= ($generated@@147 $generated@@396 ($generated@@165 $generated@@397)) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@160) (< 0 ($generated ($generated@@89 $generated@@396 $generated@@398)))) ($generated@@253 $generated@@398 $generated@@397))
 :pattern ( ($generated@@89 $generated@@396 $generated@@398))
))))
 :pattern ( ($generated@@147 $generated@@396 ($generated@@165 $generated@@397)))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (= (type $generated@@399) ($generated@@84 $generated@@160 $generated@@4)) (= (type $generated@@400) $generated@@72)) (= (type $generated@@401) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@399 ($generated@@262 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@160) ($generated@@0 ($generated@@89 $generated@@399 $generated@@402))) ($generated@@283 $generated@@402 $generated@@400 $generated@@401))
 :pattern ( ($generated@@89 $generated@@399 $generated@@402))
))))
 :pattern ( ($generated@@82 $generated@@399 ($generated@@262 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (= (type $generated@@403) ($generated@@84 $generated@@160 $generated@@4)) (= (type $generated@@404) $generated@@72)) (= (type $generated@@405) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@403 ($generated@@267 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@160) ($generated@@0 ($generated@@89 $generated@@403 $generated@@406))) ($generated@@283 $generated@@406 $generated@@404 $generated@@405))
 :pattern ( ($generated@@89 $generated@@403 $generated@@406))
))))
 :pattern ( ($generated@@82 $generated@@403 ($generated@@267 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(= ($generated ($generated@@89 ($generated@@318 $generated@@408) $generated@@407)) 0))
 :pattern ( (let (($generated@@408 (type $generated@@407)))
($generated@@89 ($generated@@318 $generated@@408) $generated@@407)))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@84 $generated@@160 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@330 (type $generated@@412))))
(let (($generated@@414 ($generated@@329 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@84 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@328 $generated@@160 $generated@@160)) (= (type $generated@@416) $generated@@160)) (= ($generated@@0 ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@415) ($generated@@158 ($generated@@365 $generated@@151 $generated@@416)))) (= ($generated@@89 ($generated@@410 $generated@@415) ($generated@@158 ($generated@@365 $generated@@151 $generated@@416))) ($generated@@159 ($generated@@365 $generated@@151 $generated@@416))))))
 :pattern ( ($generated@@89 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert  (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@419)) ($generated@@84 $generated@@160 $generated@@4))
 :pattern ( ($generated@@417 $generated@@419))
)) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@348 (type $generated@@420))))
(let (($generated@@422 ($generated@@347 (type $generated@@420))))
(= (type ($generated@@418 $generated@@420)) ($generated@@84 $generated@@422 $generated@@421))))
 :pattern ( ($generated@@418 $generated@@420))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@346 $generated@@160 $generated@@160)) (= (type $generated@@424) $generated@@160)) (= ($generated@@0 ($generated@@89 ($generated@@417 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@89 ($generated@@344 $generated@@423) ($generated@@158 ($generated@@365 $generated@@151 $generated@@424)))) (= ($generated@@89 ($generated@@418 $generated@@423) ($generated@@158 ($generated@@365 $generated@@151 $generated@@424))) ($generated@@159 ($generated@@365 $generated@@151 $generated@@424))))))
 :pattern ( ($generated@@89 ($generated@@417 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@329 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@328 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@89 ($generated@@378 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@89 ($generated@@410 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@425) $generated@@429))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@89 ($generated@@378 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(let (($generated@@433 ($generated@@347 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@346 $generated@@433 $generated@@432)) (= ($generated@@0 ($generated@@89 ($generated@@389 $generated@@430) $generated@@431)) (exists (($generated@@434 T@U) ) (!  (and (= (type $generated@@434) $generated@@433) (and ($generated@@0 ($generated@@89 ($generated@@344 $generated@@430) $generated@@434)) (= $generated@@431 ($generated@@89 ($generated@@418 $generated@@430) $generated@@434))))
 :pattern ( ($generated@@89 ($generated@@344 $generated@@430) $generated@@434))
 :pattern ( ($generated@@89 ($generated@@418 $generated@@430) $generated@@434))
))))))
 :pattern ( ($generated@@89 ($generated@@389 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@72)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@328 $generated@@160 $generated@@160)) (= (type $generated@@439) $generated@@72)) (= (type $generated@@440) $generated@@72)) (= (type $generated@@441) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@160) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@438) $generated@@442))) (and ($generated@@283 ($generated@@89 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@283 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@82 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@72)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@346 $generated@@160 $generated@@160)) (= (type $generated@@447) $generated@@72)) (= (type $generated@@448) $generated@@72)) (= (type $generated@@449) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@160) ($generated@@0 ($generated@@89 ($generated@@344 $generated@@446) $generated@@450))) (and ($generated@@283 ($generated@@89 ($generated@@418 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@283 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@89 ($generated@@418 $generated@@446) $generated@@450))
 :pattern ( ($generated@@89 ($generated@@344 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@82 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@452 T@T) ) (! (= (type ($generated@@451 $generated@@452)) ($generated@@84 $generated@@452 $generated@@4))
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@348 (type $generated@@453))))
(let (($generated@@455 ($generated@@347 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@346 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@345 $generated@@455 $generated@@454)) (= ($generated@@344 $generated@@453) ($generated@@451 $generated@@455))))))
 :pattern ( ($generated@@344 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@348 (type $generated@@456))))
(let (($generated@@458 ($generated@@347 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@346 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@345 $generated@@458 $generated@@457)) (= ($generated@@389 $generated@@456) ($generated@@451 $generated@@457))))))
 :pattern ( ($generated@@389 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@348 (type $generated@@459))))
(let (($generated@@461 ($generated@@347 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@346 $generated@@461 $generated@@460)) (= (= $generated@@459 ($generated@@345 $generated@@461 $generated@@460)) (= ($generated@@417 $generated@@459) ($generated@@451 $generated@@160))))))
 :pattern ( ($generated@@417 $generated@@459))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@330 (type $generated@@462))))
(let (($generated@@464 ($generated@@329 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@328 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@327 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@160) (= (type $generated@@466) $generated@@160)) ($generated@@0 ($generated@@89 ($generated@@409 $generated@@462) ($generated@@312 ($generated@@252 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@409 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@348 (type $generated@@467))))
(let (($generated@@469 ($generated@@347 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@346 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@345 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@160) (= (type $generated@@471) $generated@@160)) ($generated@@0 ($generated@@89 ($generated@@417 $generated@@467) ($generated@@312 ($generated@@252 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@417 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@160) ($generated@@253 $generated@@472 $generated@@46)) (and (= ($generated@@312 ($generated@@365 $generated@@2 $generated@@472)) $generated@@472) ($generated@@147 ($generated@@365 $generated@@2 $generated@@472) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@472 $generated@@46))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@160) ($generated@@253 $generated@@473 $generated@@47)) (and (= ($generated@@312 ($generated@@365 $generated@@3 $generated@@473)) $generated@@473) ($generated@@147 ($generated@@365 $generated@@3 $generated@@473) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@473 $generated@@47))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@160) ($generated@@253 $generated@@474 $generated@@44)) (and (= ($generated@@312 ($generated@@365 $generated@@4 $generated@@474)) $generated@@474) ($generated@@147 ($generated@@365 $generated@@4 $generated@@474) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@474 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@475) 20))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@160) ($generated@@253 $generated@@476 $generated@@45)) (and (= ($generated@@312 ($generated@@365 $generated@@475 $generated@@476)) $generated@@476) ($generated@@147 ($generated@@365 $generated@@475 $generated@@476) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@476 $generated@@45))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@72) (= ($generated@@253 ($generated@@312 $generated@@477) $generated@@478) ($generated@@147 $generated@@477 $generated@@478)))
 :pattern ( ($generated@@253 ($generated@@312 $generated@@477) $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@87 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@84 $generated@@480 $generated@@2)) (<= 0 ($generated@@317 $generated@@479))))
 :pattern ( ($generated@@317 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@307 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@306 $generated@@482)) (<= 0 ($generated@@305 $generated@@481))))
 :pattern ( ($generated@@305 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@72)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@72) (= (type $generated@@486) $generated@@72)) (= ($generated@@483 ($generated@@435 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@435 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@72)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@72) (= (type $generated@@490) $generated@@72)) (= ($generated@@487 ($generated@@435 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@435 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@72) (= (type $generated@@492) $generated@@72)) (= ($generated@@80 ($generated@@435 $generated@@491 $generated@@492)) $generated@@58))
 :pattern ( ($generated@@435 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@72)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@72) (= (type $generated@@496) $generated@@72)) (= ($generated@@493 ($generated@@443 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@443 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@72)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@72) (= (type $generated@@500) $generated@@72)) (= ($generated@@497 ($generated@@443 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@443 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@72) (= (type $generated@@502) $generated@@72)) (= ($generated@@80 ($generated@@443 $generated@@501 $generated@@502)) $generated@@59))
 :pattern ( ($generated@@443 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@160) (= (type $generated@@504) $generated@@160)) (= ($generated@@289 ($generated@@252 $generated@@503 $generated@@504)) $generated@@63))
 :pattern ( ($generated@@252 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@72)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@72) (= (type $generated@@508) $generated@@72)) (= ($generated@@505 ($generated@@150 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@150 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@72)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@72) (= (type $generated@@512) $generated@@72)) (= ($generated@@509 ($generated@@150 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@150 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@160) (= (type $generated@@514) $generated@@160)) (= ($generated@@158 ($generated@@252 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@252 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@160) (= (type $generated@@516) $generated@@160)) (= ($generated@@159 ($generated@@252 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@252 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@85) ($generated@@147 $generated@@517 $generated@@140))
 :pattern ( ($generated@@147 $generated@@517 $generated@@140))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@72)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@307 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@306 $generated@@160)) (= (type $generated@@525) $generated@@72)) (= (type $generated@@526) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@305 $generated@@524))) ($generated@@283 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@83 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@83 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@72)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@72) (= ($generated@@530 ($generated@@262 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@262 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@72) (= ($generated@@80 ($generated@@262 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@262 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@72)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@72) (= ($generated@@534 ($generated@@267 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@267 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@72) (= ($generated@@80 ($generated@@267 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@267 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@72) (= ($generated@@538 ($generated@@165 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@165 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@72) (= ($generated@@80 ($generated@@165 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@72)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@72) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@72) (= ($generated@@80 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@72)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@72) (= ($generated@@546 ($generated@@241 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@241 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 (type $generated@@549)))
(= ($generated@@365 $generated@@550 ($generated@@312 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@312 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@328 $generated@@160 $generated@@160)) (= (type $generated@@552) $generated@@72)) (= (type $generated@@553) $generated@@72)) (= ($generated@@147 $generated@@551 ($generated@@435 $generated@@552 $generated@@553)) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@160) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@551) $generated@@554))) (and ($generated@@253 ($generated@@89 ($generated@@410 $generated@@551) $generated@@554) $generated@@553) ($generated@@253 $generated@@554 $generated@@552)))
 :pattern ( ($generated@@89 ($generated@@410 $generated@@551) $generated@@554))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@551) $generated@@554))
))))
 :pattern ( ($generated@@147 $generated@@551 ($generated@@435 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@555) ($generated@@346 $generated@@160 $generated@@160)) (= (type $generated@@556) $generated@@72)) (= (type $generated@@557) $generated@@72)) (= ($generated@@147 $generated@@555 ($generated@@443 $generated@@556 $generated@@557)) (forall (($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@160) ($generated@@0 ($generated@@89 ($generated@@344 $generated@@555) $generated@@558))) (and ($generated@@253 ($generated@@89 ($generated@@418 $generated@@555) $generated@@558) $generated@@557) ($generated@@253 $generated@@558 $generated@@556)))
 :pattern ( ($generated@@89 ($generated@@418 $generated@@555) $generated@@558))
 :pattern ( ($generated@@89 ($generated@@344 $generated@@555) $generated@@558))
))))
 :pattern ( ($generated@@147 $generated@@555 ($generated@@443 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@160) (= (type $generated@@562) $generated@@160)) (< ($generated@@559 $generated@@561) ($generated@@560 ($generated@@252 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@252 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@160) (= (type $generated@@564) $generated@@160)) (< ($generated@@559 $generated@@564) ($generated@@560 ($generated@@252 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@252 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@160) (= (type $generated@@566) $generated@@72)) (= (type $generated@@567) $generated@@72)) ($generated@@253 $generated@@565 ($generated@@435 $generated@@566 $generated@@567))) (and (= ($generated@@312 ($generated@@365 ($generated@@328 $generated@@160 $generated@@160) $generated@@565)) $generated@@565) ($generated@@147 ($generated@@365 ($generated@@328 $generated@@160 $generated@@160) $generated@@565) ($generated@@435 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@253 $generated@@565 ($generated@@435 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@160) (= (type $generated@@569) $generated@@72)) (= (type $generated@@570) $generated@@72)) ($generated@@253 $generated@@568 ($generated@@443 $generated@@569 $generated@@570))) (and (= ($generated@@312 ($generated@@365 ($generated@@346 $generated@@160 $generated@@160) $generated@@568)) $generated@@568) ($generated@@147 ($generated@@365 ($generated@@346 $generated@@160 $generated@@160) $generated@@568) ($generated@@443 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@253 $generated@@568 ($generated@@443 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@72) (= (type $generated@@572) $generated@@72)) (= (type $generated@@573) $generated@@160)) ($generated@@253 $generated@@573 ($generated@@150 $generated@@571 $generated@@572))) (and (= ($generated@@312 ($generated@@365 $generated@@151 $generated@@573)) $generated@@573) ($generated@@147 ($generated@@365 $generated@@151 $generated@@573) ($generated@@150 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@253 $generated@@573 ($generated@@150 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ) (! (let (($generated@@575 (type $generated@@574)))
 (not ($generated@@0 ($generated@@89 ($generated@@451 $generated@@575) $generated@@574))))
 :pattern ( (let (($generated@@575 (type $generated@@574)))
($generated@@89 ($generated@@451 $generated@@575) $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@72) (= (type $generated@@577) $generated@@72)) (and (= ($generated@@80 ($generated@@150 $generated@@576 $generated@@577)) $generated@@64) (= ($generated@@323 ($generated@@150 $generated@@576 $generated@@577)) $generated@@69)))
 :pattern ( ($generated@@150 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@151) (= ($generated@@559 ($generated@@312 $generated@@578)) ($generated@@560 $generated@@578)))
 :pattern ( ($generated@@559 ($generated@@312 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@160) ($generated@@253 $generated@@579 ($generated@@83 0))) (and (= ($generated@@312 ($generated@@365 $generated@@2 $generated@@579)) $generated@@579) ($generated@@147 ($generated@@365 ($generated@@84 $generated@@160 $generated@@4) $generated@@579) ($generated@@83 0))))
 :pattern ( ($generated@@253 $generated@@579 ($generated@@83 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@160) (= (type $generated@@581) $generated@@72)) ($generated@@253 $generated@@580 ($generated@@262 $generated@@581))) (and (= ($generated@@312 ($generated@@365 ($generated@@84 $generated@@160 $generated@@4) $generated@@580)) $generated@@580) ($generated@@147 ($generated@@365 ($generated@@84 $generated@@160 $generated@@4) $generated@@580) ($generated@@262 $generated@@581))))
 :pattern ( ($generated@@253 $generated@@580 ($generated@@262 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@160) (= (type $generated@@583) $generated@@72)) ($generated@@253 $generated@@582 ($generated@@267 $generated@@583))) (and (= ($generated@@312 ($generated@@365 ($generated@@84 $generated@@160 $generated@@4) $generated@@582)) $generated@@582) ($generated@@147 ($generated@@365 ($generated@@84 $generated@@160 $generated@@4) $generated@@582) ($generated@@267 $generated@@583))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@267 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@160) (= (type $generated@@585) $generated@@72)) ($generated@@253 $generated@@584 ($generated@@165 $generated@@585))) (and (= ($generated@@312 ($generated@@365 ($generated@@84 $generated@@160 $generated@@2) $generated@@584)) $generated@@584) ($generated@@147 ($generated@@365 ($generated@@84 $generated@@160 $generated@@2) $generated@@584) ($generated@@165 $generated@@585))))
 :pattern ( ($generated@@253 $generated@@584 ($generated@@165 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@160) (= (type $generated@@587) $generated@@72)) ($generated@@253 $generated@@586 ($generated@@518 $generated@@587))) (and (= ($generated@@312 ($generated@@365 ($generated@@306 $generated@@160) $generated@@586)) $generated@@586) ($generated@@147 ($generated@@365 ($generated@@306 $generated@@160) $generated@@586) ($generated@@518 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@586 ($generated@@518 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@72) (= (type $generated@@589) $generated@@160)) ($generated@@253 $generated@@589 ($generated@@241 $generated@@588))) (and (= ($generated@@312 ($generated@@365 $generated@@85 $generated@@589)) $generated@@589) ($generated@@147 ($generated@@365 $generated@@85 $generated@@589) ($generated@@241 $generated@@588))))
 :pattern ( ($generated@@253 $generated@@589 ($generated@@241 $generated@@588)))
)))
(assert  (=> (<= 2 $generated@@292) (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@590) $generated@@72) (= (type $generated@@591) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@592) $generated@@85)) (= (type $generated@@593) $generated@@85)) (or ($generated@@294 $generated@@590 ($generated@@272 $generated@@592) ($generated@@272 $generated@@593)) (and (not (= 2 $generated@@292)) (and (and (and ($generated@@282 $generated@@591) ($generated@@147 $generated@@592 $generated@@247)) ($generated@@147 $generated@@593 ($generated@@241 $generated@@590))) (= ($generated@@272 $generated@@592) ($generated@@272 $generated@@593)))))) (and ($generated@@277 $generated@@590 ($generated@@272 $generated@@592)) (= ($generated@@293 $generated@@590 ($generated@@272 $generated@@592) ($generated@@272 $generated@@593)) (let (($generated@@594 ($generated@@276 $generated@@590 ($generated@@272 $generated@@592))))
$generated@@594))))
 :weight 3
 :pattern ( ($generated@@293 $generated@@590 ($generated@@272 $generated@@592) ($generated@@272 $generated@@593)) ($generated@@282 $generated@@591))
))))
(assert (= ($generated@@80 $generated@@140) $generated@@61))
(assert (= ($generated@@323 $generated@@140) $generated@@68))
(assert (= ($generated@@80 $generated@@247) $generated@@62))
(assert (= ($generated@@323 $generated@@247) $generated@@68))
(assert (= ($generated@@80 $generated@@144) $generated@@65))
(assert (= ($generated@@323 $generated@@144) $generated@@70))
(assert (= ($generated@@80 $generated@@242) $generated@@66))
(assert (= ($generated@@323 $generated@@242) $generated@@70))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@595) ($generated@@84 $generated@@160 $generated@@2)) (= (type $generated@@596) $generated@@72)) (= (type $generated@@597) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@595 ($generated@@165 $generated@@596) $generated@@597) (forall (($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@160) (< 0 ($generated ($generated@@89 $generated@@595 $generated@@598)))) ($generated@@283 $generated@@598 $generated@@596 $generated@@597))
 :pattern ( ($generated@@89 $generated@@595 $generated@@598))
))))
 :pattern ( ($generated@@82 $generated@@595 ($generated@@165 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@72) (= (type $generated@@600) $generated@@85)) (= ($generated@@147 $generated@@600 ($generated@@241 $generated@@599))  (and ($generated@@147 $generated@@600 $generated@@242) ($generated@@0 ($generated@@272 ($generated@@11 true))))))
 :pattern ( ($generated@@147 $generated@@600 ($generated@@241 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@151) (= (type $generated@@602) $generated@@72)) (= (type $generated@@603) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@282 $generated@@603) (and ($generated@@149 $generated@@601) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) $generated@@72) ($generated@@82 $generated@@601 ($generated@@150 $generated@@602 $generated@@604) $generated@@603))
 :pattern ( ($generated@@82 $generated@@601 ($generated@@150 $generated@@602 $generated@@604) $generated@@603))
))))) ($generated@@283 ($generated@@158 $generated@@601) $generated@@602 $generated@@603))
 :pattern ( ($generated@@283 ($generated@@158 $generated@@601) $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@151) (= (type $generated@@606) $generated@@72)) (= (type $generated@@607) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@282 $generated@@607) (and ($generated@@149 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@72) ($generated@@82 $generated@@605 ($generated@@150 $generated@@608 $generated@@606) $generated@@607))
 :pattern ( ($generated@@82 $generated@@605 ($generated@@150 $generated@@608 $generated@@606) $generated@@607))
))))) ($generated@@283 ($generated@@159 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@283 ($generated@@159 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@160) (= (type $generated@@610) $generated@@160)) (= ($generated@@252 ($generated@@272 $generated@@609) ($generated@@272 $generated@@610)) ($generated@@272 ($generated@@252 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@252 ($generated@@272 $generated@@609) ($generated@@272 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@312 ($generated@@272 $generated@@611)) ($generated@@272 ($generated@@312 $generated@@611)))
 :pattern ( ($generated@@312 ($generated@@272 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@307 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@306 $generated@@613)) (= ($generated@@305 $generated@@612) 0)) (= $generated@@612 ($generated@@304 $generated@@613))))
 :pattern ( ($generated@@305 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@84 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@317 ($generated@@90 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@317 $generated@@614) ($generated ($generated@@89 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@317 ($generated@@90 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@619) $generated@@2)) ($generated@@82 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@82 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@621) $generated@@3)) ($generated@@82 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@82 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@623) $generated@@4)) ($generated@@82 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@82 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@625) $generated@@475)) ($generated@@82 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@82 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@627) $generated@@160)) ($generated@@82 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@82 $generated@@627 $generated@@48 $generated@@626))
)))
(assert  (=> (<= 2 $generated@@292) (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@628) $generated@@72) (= (type $generated@@629) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@630) $generated@@85)) (= (type $generated@@631) $generated@@85)) (or ($generated@@294 $generated@@628 $generated@@630 $generated@@631) (and (not (= 2 $generated@@292)) (and (and (and ($generated@@282 $generated@@629) ($generated@@147 $generated@@630 $generated@@247)) ($generated@@147 $generated@@631 ($generated@@241 $generated@@628))) (= $generated@@630 $generated@@631))))) (and ($generated@@277 $generated@@628 $generated@@630) (= ($generated@@293 $generated@@628 $generated@@630 $generated@@631) (let (($generated@@632 ($generated@@276 $generated@@628 $generated@@630)))
$generated@@632))))
 :pattern ( ($generated@@293 $generated@@628 $generated@@630 $generated@@631) ($generated@@282 $generated@@629))
))))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@306 $generated@@160)) (= (type $generated@@634) $generated@@72)) (= ($generated@@147 $generated@@633 ($generated@@518 $generated@@634)) (forall (($generated@@635 Int) ) (!  (=> (and (<= 0 $generated@@635) (< $generated@@635 ($generated@@305 $generated@@633))) ($generated@@253 ($generated@@519 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@519 $generated@@633 $generated@@635))
))))
 :pattern ( ($generated@@147 $generated@@633 ($generated@@518 $generated@@634)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 Int) ) (!  (=> (= (type $generated@@637) ($generated@@306 $generated@@160)) (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@305 $generated@@637))) (< ($generated@@560 ($generated@@365 $generated@@151 ($generated@@519 $generated@@637 $generated@@638))) ($generated@@636 $generated@@637))))
 :pattern ( ($generated@@560 ($generated@@365 $generated@@151 ($generated@@519 $generated@@637 $generated@@638))))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) ($generated@@328 $generated@@160 $generated@@160)) (= (type $generated@@640) $generated@@72)) (= (type $generated@@641) $generated@@72)) ($generated@@147 $generated@@639 ($generated@@435 $generated@@640 $generated@@641))) (and (and ($generated@@147 ($generated@@326 $generated@@639) ($generated@@262 $generated@@640)) ($generated@@147 ($generated@@378 $generated@@639) ($generated@@262 $generated@@641))) ($generated@@147 ($generated@@409 $generated@@639) ($generated@@262 ($generated@@150 $generated@@640 $generated@@641)))))
 :pattern ( ($generated@@147 $generated@@639 ($generated@@435 $generated@@640 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@346 $generated@@160 $generated@@160)) (= (type $generated@@643) $generated@@72)) (= (type $generated@@644) $generated@@72)) ($generated@@147 $generated@@642 ($generated@@443 $generated@@643 $generated@@644))) (and (and ($generated@@147 ($generated@@344 $generated@@642) ($generated@@267 $generated@@643)) ($generated@@147 ($generated@@389 $generated@@642) ($generated@@267 $generated@@644))) ($generated@@147 ($generated@@417 $generated@@642) ($generated@@267 ($generated@@150 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@147 $generated@@642 ($generated@@443 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@2) ($generated@@147 $generated@@645 $generated@@46))
 :pattern ( ($generated@@147 $generated@@645 $generated@@46))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@3) ($generated@@147 $generated@@646 $generated@@47))
 :pattern ( ($generated@@147 $generated@@646 $generated@@47))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@4) ($generated@@147 $generated@@647 $generated@@44))
 :pattern ( ($generated@@147 $generated@@647 $generated@@44))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@475) ($generated@@147 $generated@@648 $generated@@45))
 :pattern ( ($generated@@147 $generated@@648 $generated@@45))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@160) ($generated@@147 $generated@@649 $generated@@48))
 :pattern ( ($generated@@147 $generated@@649 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@650) $generated@@85) (= (type $generated@@651) $generated@@85)) (= (type $generated@@652) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@653) $generated@@72)) (= (type $generated@@654) ($generated@@175 $generated@@85 $generated@@4))) (= (type $generated@@655) ($generated@@175 $generated@@85 $generated@@4))) (= (type $generated@@656) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@658  (=> (= (ControlFlow 0 3) (- 0 2)) (or (and ($generated@@147 $generated@@650 $generated@@247) (= $generated@@650 $generated@@650)) (or (and ($generated@@147 $generated@@141 $generated@@247) (= $generated@@141 $generated@@650)) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@85) (and ($generated@@147 $generated@@659 $generated@@247) (= $generated@@659 $generated@@650)))
 :no-pattern (type $generated@@659)
 :no-pattern ($generated $generated@@659)
 :no-pattern ($generated@@0 $generated@@659)
)))))))
(let (($generated@@660  (=> (and (not (and ($generated@@147 $generated@@651 $generated@@247) ($generated@@82 $generated@@651 $generated@@247 $generated@@652))) (= (ControlFlow 0 6) 3)) $generated@@658)))
(let (($generated@@661  (=> (and ($generated@@147 $generated@@651 $generated@@247) ($generated@@82 $generated@@651 $generated@@247 $generated@@652)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@147 $generated@@650 ($generated@@241 $generated@@653))) (=> ($generated@@147 $generated@@650 ($generated@@241 $generated@@653)) (=> (= (ControlFlow 0 4) 3) $generated@@658))))))
(let (($generated@@662  (=> (= $generated@@654 ($generated@@229 $generated@@141 $generated@@652 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 4) $generated@@661) (=> (= (ControlFlow 0 7) 6) $generated@@660)))))
(let (($generated@@663 true))
(let (($generated@@664  (=> (and (= $generated@@655 ($generated@@174 $generated@@141 $generated@@652 $generated@@60 false)) (= $generated@@650 $generated@@656)) (and (=> (= (ControlFlow 0 8) 1) $generated@@663) (=> (= (ControlFlow 0 8) 7) $generated@@662)))))
(let (($generated@@665  (=> (and ($generated@@282 $generated@@652) ($generated@@657 $generated@@652)) (=> (and (and ($generated@@147 $generated@@650 $generated@@247) ($generated@@147 $generated@@656 ($generated@@241 $generated@@653))) (and (= 2 $generated@@292) (= (ControlFlow 0 9) 8))) $generated@@664))))
$generated@@665))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@188 (T@T T@T) T@T)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@265 () Int)
(declare-fun $generated@@266 (T@U T@U) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@269 (T@U T@U) Bool)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Int)
(declare-fun $generated@@280 (T@U T@U) T@U)
(declare-fun $generated@@281 (T@U T@U) Bool)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (Int) Int)
(declare-fun $generated@@308 (T@U T@U T@U) Bool)
(declare-fun $generated@@320 (T@T) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@339 (T@T) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@T T@T) T@U)
(declare-fun $generated@@367 (T@T T@T) T@T)
(declare-fun $generated@@368 (T@T) T@T)
(declare-fun $generated@@369 (T@T) T@T)
(declare-fun $generated@@386 (T@T T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@481 (T@T) T@U)
(declare-fun $generated@@505 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@549 (T@U Int) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@666 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@76) 6) (= (type $generated@@44) $generated@@76)) (= (type $generated@@45) $generated@@76)) (= (type $generated@@46) $generated@@76)) (= (type $generated@@47) $generated@@76)) (= (type $generated@@48) $generated@@76)) (= ($generated@@1 $generated@@77) 7)) (= (type $generated@@49) $generated@@77)) (= (type $generated@@50) $generated@@77)) (= (type $generated@@51) $generated@@77)) (= (type $generated@@52) $generated@@77)) (= (type $generated@@53) $generated@@77)) (= (type $generated@@54) $generated@@77)) (= (type $generated@@55) $generated@@77)) (= (type $generated@@56) $generated@@77)) (= (type $generated@@57) $generated@@77)) (= (type $generated@@58) $generated@@77)) (= (type $generated@@59) $generated@@77)) (forall (($generated@@82 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@82)) 8))) (forall (($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@78 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@78 $generated@@83))
))) (= (type $generated@@60) ($generated@@78 $generated@@4))) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@77)) (= ($generated@@1 $generated@@80) 9)) (= (type $generated@@63) $generated@@80)) (= (type $generated@@64) $generated@@77)) (= (type $generated@@65) $generated@@77)) (= (type $generated@@66) $generated@@77)) (= (type $generated@@67) $generated@@77)) (= (type $generated@@68) $generated@@80)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@80)) (= ($generated@@1 $generated@@81) 10)) (= (type $generated@@71) $generated@@81)) (= (type $generated@@72) $generated@@81)) (= (type $generated@@73) $generated@@81)) (= (type $generated@@74) $generated@@81)) (= (type $generated@@75) $generated@@81)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75)
)
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@77)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 11)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 12)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@79 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@79 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@76)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert  (and (= (type $generated@@144) $generated@@76) (= (type $generated@@145) $generated@@89)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@89) (= (type $generated@@147) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@146 $generated@@144 $generated@@147)  (or (= $generated@@146 $generated@@145) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@146 $generated@@144 $generated@@147))
)))
(assert (= (type $generated@@148) $generated@@76))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@89) (= (type $generated@@150) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@149 $generated@@148 $generated@@150)  (or (= $generated@@149 $generated@@145) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@86 $generated@@149 $generated@@148 $generated@@150))
)))
(assert  (and (= ($generated@@1 $generated@@153) 14) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@154 $generated@@155)) $generated@@89)
 :pattern ( ($generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@153) (= (type $generated@@157) $generated@@153)) (and ($generated@@152 $generated@@156) ($generated@@152 $generated@@157))) (= ($generated@@151 $generated@@156 $generated@@157) (= ($generated@@154 $generated@@156) ($generated@@154 $generated@@157))))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156 $generated@@157) ($generated@@152 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@158 $generated@@159 ($generated@@87 0)))
 :pattern ( ($generated@@158 $generated@@159 ($generated@@87 0)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@162 $generated@@163)) $generated@@76)
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (and (= (type $generated@@164) $generated@@76) (= (type $generated@@165) $generated@@76)) (= (type $generated@@166) $generated@@153)) ($generated@@158 $generated@@166 ($generated@@161 $generated@@164 $generated@@165))) ($generated@@160 $generated@@166))
 :pattern ( ($generated@@160 $generated@@166) ($generated@@158 $generated@@166 ($generated@@161 $generated@@164 $generated@@165)))
)))
(assert  (and (and (= ($generated@@1 $generated@@170) 15) (forall (($generated@@171 T@U) ) (! (= (type ($generated@@168 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@168 $generated@@171))
))) (forall (($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) $generated@@153) (= (type $generated@@174) $generated@@153)) true) (= ($generated@@167 $generated@@173 $generated@@174)  (and (= ($generated@@168 $generated@@173) ($generated@@168 $generated@@174)) (= ($generated@@169 $generated@@173) ($generated@@169 $generated@@174)))))
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
)))
(assert  (and (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@80)
 :pattern ( ($generated@@175 $generated@@177))
)) (= (type $generated@@176) $generated@@153)))
(assert (= ($generated@@175 $generated@@176) $generated@@68))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@76)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@88 $generated@@170 $generated@@2)) (= (type $generated@@182) $generated@@76)) ($generated@@158 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@158 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (! (= (type ($generated@@183 $generated@@184)) $generated@@76)
 :pattern ( ($generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= (type $generated@@185) $generated@@89) (= ($generated@@158 $generated@@185 $generated@@148)  (or (= $generated@@185 $generated@@145) (= ($generated@@183 $generated@@185) $generated@@148))))
 :pattern ( ($generated@@158 $generated@@185 $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@1 ($generated@@188 $generated@@192 $generated@@193)) 16)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@189 ($generated@@188 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@188 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@190 ($generated@@188 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@188 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@190 (type $generated@@198))))
(= (type ($generated@@186 $generated@@198 $generated@@199 $generated@@200)) $generated@@201))
 :pattern ( ($generated@@186 $generated@@198 $generated@@199 $generated@@200))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 (type $generated@@205)))
(let (($generated@@207 (type $generated@@203)))
(= (type ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205)) ($generated@@188 $generated@@207 $generated@@206))))
 :pattern ( ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (let (($generated@@212 ($generated@@190 (type $generated@@208))))
 (=> (= (type $generated@@211) $generated@@212) (= ($generated@@186 ($generated@@191 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@209 $generated@@210) $generated@@211)))
 :weight 0
))) (and (and (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@186 ($generated@@191 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@186 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@186 ($generated@@191 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@186 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
))) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or true (= ($generated@@186 ($generated@@191 $generated@@226 $generated@@227 $generated@@228 $generated@@225) $generated@@229 $generated@@230) ($generated@@186 $generated@@226 $generated@@229 $generated@@230)))
 :weight 0
)))) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ) (! (= (type ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234)) ($generated@@188 $generated@@89 $generated@@4))
 :pattern ( ($generated@@187 $generated@@231 $generated@@232 $generated@@233 $generated@@234))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (let (($generated@@241 ($generated@@79 (type $generated@@240))))
 (=> (and (and (and (and (= (type $generated@@235) $generated@@89) (= (type $generated@@236) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@237) ($generated@@78 $generated@@4))) (= (type $generated@@239) $generated@@89)) (= (type $generated@@240) ($generated@@78 $generated@@241))) (= ($generated@@0 ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))  (=> (and (not (= $generated@@239 $generated@@235)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@236 $generated@@239) $generated@@237))) $generated@@238))))
 :pattern ( ($generated@@186 ($generated@@187 $generated@@235 $generated@@236 $generated@@237 $generated@@238) $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ) (! (= (type ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246)) ($generated@@188 $generated@@89 $generated@@4))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ($generated@@251 T@U) ($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@79 (type $generated@@252))))
 (=> (and (and (and (and (= (type $generated@@247) $generated@@89) (= (type $generated@@248) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@249) ($generated@@78 $generated@@4))) (= (type $generated@@251) $generated@@89)) (= (type $generated@@252) ($generated@@78 $generated@@253))) (= ($generated@@0 ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))  (=> (and (not (= $generated@@251 $generated@@247)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@248 $generated@@251) $generated@@249))) $generated@@250))))
 :pattern ( ($generated@@186 ($generated@@242 $generated@@247 $generated@@248 $generated@@249 $generated@@250) $generated@@251 $generated@@252))
)))
(assert  (and (forall (($generated@@256 T@U) ) (! (= (type ($generated@@254 $generated@@256)) $generated@@76)
 :pattern ( ($generated@@254 $generated@@256))
)) (= (type $generated@@255) $generated@@76)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@257) $generated@@76) (= (type $generated@@258) $generated@@89)) (= (type $generated@@259) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@258 ($generated@@254 $generated@@257) $generated@@259) ($generated@@86 $generated@@258 $generated@@255 $generated@@259)))
 :pattern ( ($generated@@86 $generated@@258 ($generated@@254 $generated@@257) $generated@@259))
)))
(assert (= (type $generated@@260) $generated@@76))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@89) (= (type $generated@@262) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@261 $generated@@260 $generated@@262) ($generated@@86 $generated@@261 $generated@@144 $generated@@262)))
 :pattern ( ($generated@@86 $generated@@261 $generated@@260 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@89) (= (type $generated@@264) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@263 $generated@@255 $generated@@264) ($generated@@86 $generated@@263 $generated@@148 $generated@@264)))
 :pattern ( ($generated@@86 $generated@@263 $generated@@255 $generated@@264))
)))
(assert  (and (forall (($generated@@274 T@U) ) (! (let (($generated@@275 (type $generated@@274)))
(= (type ($generated@@267 $generated@@274)) $generated@@275))
 :pattern ( ($generated@@267 $generated@@274))
)) (= (type $generated@@270) $generated@@76)))
(assert  (=> (<= 2 $generated@@265) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (= (type $generated@@276) $generated@@76) (= (type $generated@@277) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@278) $generated@@153)) (or ($generated@@269 $generated@@276 ($generated@@267 $generated@@278)) (and (not (= 2 $generated@@265)) (and (and ($generated@@268 $generated@@277) ($generated@@158 $generated@@278 $generated@@270)) ($generated@@0 ($generated@@267 ($generated@@11 ($generated@@271 ($generated@@267 $generated@@278))))))))) (and ($generated@@272 $generated@@276 ($generated@@267 $generated@@278)) (= ($generated@@266 $generated@@276 ($generated@@267 $generated@@278)) (let (($generated@@279 ($generated@@273 $generated@@276 ($generated@@267 $generated@@278))))
$generated@@279))))
 :weight 3
 :pattern ( ($generated@@266 $generated@@276 ($generated@@267 $generated@@278)) ($generated@@268 $generated@@277))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! (= (type ($generated@@280 $generated@@282 $generated@@283)) $generated@@153)
 :pattern ( ($generated@@280 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (= (type $generated@@284) $generated@@76) (= (type $generated@@285) $generated@@76)) (= (type $generated@@286) $generated@@170)) (= (type $generated@@287) $generated@@170)) (= ($generated@@158 ($generated@@280 $generated@@286 $generated@@287) ($generated@@161 $generated@@284 $generated@@285))  (and ($generated@@281 $generated@@286 $generated@@284) ($generated@@281 $generated@@287 $generated@@285))))
 :pattern ( ($generated@@158 ($generated@@280 $generated@@286 $generated@@287) ($generated@@161 $generated@@284 $generated@@285)))
)))
(assert ($generated@@158 $generated@@176 $generated@@270))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@268 $generated@@288)) ($generated@@86 $generated@@176 $generated@@270 $generated@@288))
 :pattern ( ($generated@@86 $generated@@176 $generated@@270 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@153) (= (type $generated@@290) $generated@@153)) (= ($generated@@167 $generated@@289 $generated@@290) (= $generated@@289 $generated@@290)))
 :pattern ( ($generated@@167 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@153) (= (type $generated@@292) $generated@@153)) (= ($generated@@151 $generated@@291 $generated@@292) (= $generated@@291 $generated@@292)))
 :pattern ( ($generated@@151 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@76)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) ($generated@@88 $generated@@170 $generated@@4)) (= (type $generated@@296) $generated@@76)) (= ($generated@@158 $generated@@295 ($generated@@293 $generated@@296)) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@170) ($generated@@0 ($generated@@93 $generated@@295 $generated@@297))) ($generated@@281 $generated@@297 $generated@@296))
 :pattern ( ($generated@@93 $generated@@295 $generated@@297))
))))
 :pattern ( ($generated@@158 $generated@@295 ($generated@@293 $generated@@296)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@76)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@88 $generated@@170 $generated@@4)) (= (type $generated@@301) $generated@@76)) (= ($generated@@158 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@170) ($generated@@0 ($generated@@93 $generated@@300 $generated@@302))) ($generated@@281 $generated@@302 $generated@@301))
 :pattern ( ($generated@@93 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@158 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 Int) ) (! (= ($generated@@303 $generated@@304) $generated@@304)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (= ($generated@@267 $generated@@305) $generated@@305)
 :pattern ( ($generated@@267 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (= (type $generated@@306) $generated@@153) (= (type $generated@@307) $generated@@153)) (and ($generated@@271 $generated@@306) ($generated@@271 $generated@@307))) (= ($generated@@151 $generated@@306 $generated@@307) true))
 :pattern ( ($generated@@151 $generated@@306 $generated@@307) ($generated@@271 $generated@@306))
 :pattern ( ($generated@@151 $generated@@306 $generated@@307) ($generated@@271 $generated@@307))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@309) $generated@@76) (= (type $generated@@310) $generated@@76)) (= (type $generated@@311) $generated@@170)) (= (type $generated@@312) $generated@@170)) (= (type $generated@@313) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@268 $generated@@313)) (= ($generated@@86 ($generated@@280 $generated@@311 $generated@@312) ($generated@@161 $generated@@309 $generated@@310) $generated@@313)  (and ($generated@@308 $generated@@311 $generated@@309 $generated@@313) ($generated@@308 $generated@@312 $generated@@310 $generated@@313))))
 :pattern ( ($generated@@86 ($generated@@280 $generated@@311 $generated@@312) ($generated@@161 $generated@@309 $generated@@310) $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@153) (= ($generated@@160 $generated@@314) (= ($generated@@175 $generated@@314) $generated@@63)))
 :pattern ( ($generated@@160 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (= (type $generated@@315) $generated@@153) (= ($generated@@271 $generated@@315) (= ($generated@@175 $generated@@315) $generated@@68)))
 :pattern ( ($generated@@271 $generated@@315))
)))
(assert (forall (($generated@@316 T@U) ) (!  (=> (= (type $generated@@316) $generated@@153) (= ($generated@@152 $generated@@316) (= ($generated@@175 $generated@@316) $generated@@70)))
 :pattern ( ($generated@@152 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@317) $generated@@153) ($generated@@160 $generated@@317)) (exists (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (and (and (= (type $generated@@318) $generated@@170) (= (type $generated@@319) $generated@@170)) (= $generated@@317 ($generated@@280 $generated@@318 $generated@@319)))
 :no-pattern (type $generated@@318)
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
)))
 :pattern ( ($generated@@160 $generated@@317))
)))
(assert  (and (and (forall (($generated@@324 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@324)) 17)) (forall (($generated@@325 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@322 $generated@@325))
))) (forall (($generated@@326 T@T) ) (! (= (type ($generated@@320 $generated@@326)) ($generated@@322 $generated@@326))
 :pattern ( ($generated@@320 $generated@@326))
))))
(assert (forall (($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@327)) 0)
 :pattern ( ($generated@@320 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@153) ($generated@@271 $generated@@328)) (= $generated@@328 $generated@@176))
 :pattern ( ($generated@@271 $generated@@328))
)))
(assert (forall (($generated@@330 T@U) ) (! (= (type ($generated@@329 $generated@@330)) $generated@@153)
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@153) ($generated@@152 $generated@@331)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@89) (= $generated@@331 ($generated@@329 $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
)))
 :pattern ( ($generated@@152 $generated@@331))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@170)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@76) (= (type $generated@@337) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@308 ($generated@@333 $generated@@335) $generated@@336 $generated@@337) ($generated@@86 $generated@@335 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@308 ($generated@@333 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@340 T@T) ) (! (= (type ($generated@@339 $generated@@340)) ($generated@@88 $generated@@340 $generated@@2))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@91 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@88 $generated@@342 $generated@@2)) (and (= (= ($generated@@338 $generated@@341) 0) (= $generated@@341 ($generated@@339 $generated@@342))) (=> (not (= ($generated@@338 $generated@@341) 0)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) (< 0 ($generated ($generated@@93 $generated@@341 $generated@@343))))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@81)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@76) (and (= ($generated@@84 ($generated@@254 $generated@@346)) $generated@@67) (= ($generated@@344 ($generated@@254 $generated@@346)) $generated@@74)))
 :pattern ( ($generated@@254 $generated@@346))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 18)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@88 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@93 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@93 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert  (and (and (and (and (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (= ($generated@@1 ($generated@@367 $generated@@370 $generated@@371)) 19)) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@368 ($generated@@367 $generated@@372 $generated@@373)) $generated@@372)
 :pattern ( ($generated@@367 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@T) ($generated@@375 T@T) ) (! (= ($generated@@369 ($generated@@367 $generated@@374 $generated@@375)) $generated@@375)
 :pattern ( ($generated@@367 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@368 (type $generated@@376))))
(= (type ($generated@@365 $generated@@376)) ($generated@@88 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@365 $generated@@376))
))) (forall (($generated@@378 T@T) ($generated@@379 T@T) ) (! (= (type ($generated@@366 $generated@@378 $generated@@379)) ($generated@@367 $generated@@378 $generated@@379))
 :pattern ( ($generated@@366 $generated@@378 $generated@@379))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@T) ) (! (let (($generated@@382 (type $generated@@380)))
 (not ($generated@@0 ($generated@@93 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380))))
 :pattern ( (let (($generated@@382 (type $generated@@380)))
($generated@@93 ($generated@@365 ($generated@@366 $generated@@382 $generated@@381)) $generated@@380)))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@91 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@88 $generated@@384 $generated@@2)) (= ($generated@@179 $generated@@383) (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@384) (and (<= 0 ($generated ($generated@@93 $generated@@383 $generated@@385))) (<= ($generated ($generated@@93 $generated@@383 $generated@@385)) ($generated@@338 $generated@@383))))
 :pattern ( ($generated@@93 $generated@@383 $generated@@385))
)))))
 :pattern ( ($generated@@179 $generated@@383))
)))
(assert (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@386 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@170) ($generated@@281 $generated@@389 $generated@@144)) (and (= ($generated@@333 ($generated@@386 $generated@@89 $generated@@389)) $generated@@389) ($generated@@158 ($generated@@386 $generated@@89 $generated@@389) $generated@@144)))
 :pattern ( ($generated@@281 $generated@@389 $generated@@144))
)))
(assert (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@170) ($generated@@281 $generated@@390 $generated@@260)) (and (= ($generated@@333 ($generated@@386 $generated@@89 $generated@@390)) $generated@@390) ($generated@@158 ($generated@@386 $generated@@89 $generated@@390) $generated@@260)))
 :pattern ( ($generated@@281 $generated@@390 $generated@@260))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@170) ($generated@@281 $generated@@391 $generated@@148)) (and (= ($generated@@333 ($generated@@386 $generated@@89 $generated@@391)) $generated@@391) ($generated@@158 ($generated@@386 $generated@@89 $generated@@391) $generated@@148)))
 :pattern ( ($generated@@281 $generated@@391 $generated@@148))
)))
(assert (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@170) ($generated@@281 $generated@@392 $generated@@255)) (and (= ($generated@@333 ($generated@@386 $generated@@89 $generated@@392)) $generated@@392) ($generated@@158 ($generated@@386 $generated@@89 $generated@@392) $generated@@255)))
 :pattern ( ($generated@@281 $generated@@392 $generated@@255))
)))
(assert (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@170) ($generated@@281 $generated@@393 $generated@@270)) (and (= ($generated@@333 ($generated@@386 $generated@@153 $generated@@393)) $generated@@393) ($generated@@158 ($generated@@386 $generated@@153 $generated@@393) $generated@@270)))
 :pattern ( ($generated@@281 $generated@@393 $generated@@270))
)))
(assert (forall (($generated@@394 T@U) ) (!  (=> (= (type $generated@@394) $generated@@89) (= ($generated@@158 ($generated@@329 $generated@@394) $generated@@270) ($generated@@158 $generated@@394 $generated@@260)))
 :pattern ( ($generated@@158 ($generated@@329 $generated@@394) $generated@@270))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (= (type $generated@@395) $generated@@89) (= ($generated@@158 $generated@@395 $generated@@260)  (and ($generated@@158 $generated@@395 $generated@@144) (not (= $generated@@395 $generated@@145)))))
 :pattern ( ($generated@@158 $generated@@395 $generated@@260))
)))
(assert (forall (($generated@@396 T@U) ) (!  (=> (= (type $generated@@396) $generated@@89) (= ($generated@@158 $generated@@396 $generated@@255)  (and ($generated@@158 $generated@@396 $generated@@148) (not (= $generated@@396 $generated@@145)))))
 :pattern ( ($generated@@158 $generated@@396 $generated@@255))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@351 (type $generated@@397))))
(let (($generated@@399 ($generated@@350 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@349 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@348 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) ($generated@@0 ($generated@@93 ($generated@@347 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@347 $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@351 (type $generated@@402))))
(= (type ($generated@@401 $generated@@402)) ($generated@@88 $generated@@403 $generated@@4)))
 :pattern ( ($generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@351 (type $generated@@404))))
(let (($generated@@406 ($generated@@350 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@349 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@348 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@405) ($generated@@0 ($generated@@93 ($generated@@401 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@401 $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@369 (type $generated@@408))))
(let (($generated@@410 ($generated@@368 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@367 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@366 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) ($generated@@0 ($generated@@93 ($generated@@365 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@365 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@369 (type $generated@@413))))
(= (type ($generated@@412 $generated@@413)) ($generated@@88 $generated@@414 $generated@@4)))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@369 (type $generated@@415))))
(let (($generated@@417 ($generated@@368 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@367 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@366 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@416) ($generated@@0 ($generated@@93 ($generated@@412 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@412 $generated@@415))
)))
(assert  (=> (<= 2 $generated@@265) (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@419) $generated@@76) (= (type $generated@@420) $generated@@153)) (or ($generated@@269 $generated@@419 $generated@@420) (and (not (= 2 $generated@@265)) (and ($generated@@158 $generated@@420 $generated@@270) ($generated@@271 $generated@@420))))) true)
 :pattern ( ($generated@@266 $generated@@419 $generated@@420))
))))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@421) ($generated@@88 $generated@@170 $generated@@2)) (= (type $generated@@422) $generated@@76)) (= ($generated@@158 $generated@@421 ($generated@@178 $generated@@422)) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@170) (< 0 ($generated ($generated@@93 $generated@@421 $generated@@423)))) ($generated@@281 $generated@@423 $generated@@422))
 :pattern ( ($generated@@93 $generated@@421 $generated@@423))
))))
 :pattern ( ($generated@@158 $generated@@421 ($generated@@178 $generated@@422)))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@424) $generated@@76) (= (type $generated@@425) $generated@@153)) ($generated@@272 $generated@@424 $generated@@425)) (= ($generated@@273 $generated@@424 $generated@@425) (ite ($generated@@271 $generated@@425) 2 ($generated@@303 3))))
 :pattern ( ($generated@@273 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@88 $generated@@170 $generated@@4)) (= (type $generated@@427) $generated@@76)) (= (type $generated@@428) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@426 ($generated@@293 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@170) ($generated@@0 ($generated@@93 $generated@@426 $generated@@429))) ($generated@@308 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@93 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@86 $generated@@426 ($generated@@293 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@88 $generated@@170 $generated@@4)) (= (type $generated@@431) $generated@@76)) (= (type $generated@@432) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@430 ($generated@@298 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@170) ($generated@@0 ($generated@@93 $generated@@430 $generated@@433))) ($generated@@308 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@93 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@86 $generated@@430 ($generated@@298 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(= ($generated ($generated@@93 ($generated@@339 $generated@@435) $generated@@434)) 0))
 :pattern ( (let (($generated@@435 (type $generated@@434)))
($generated@@93 ($generated@@339 $generated@@435) $generated@@434)))
)))
(assert  (and (forall (($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@438)) ($generated@@88 $generated@@170 $generated@@4))
 :pattern ( ($generated@@436 $generated@@438))
)) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@351 (type $generated@@439))))
(let (($generated@@441 ($generated@@350 (type $generated@@439))))
(= (type ($generated@@437 $generated@@439)) ($generated@@88 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@437 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@443) $generated@@170)) (= ($generated@@0 ($generated@@93 ($generated@@436 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@93 ($generated@@347 $generated@@442) ($generated@@168 ($generated@@386 $generated@@153 $generated@@443)))) (= ($generated@@93 ($generated@@437 $generated@@442) ($generated@@168 ($generated@@386 $generated@@153 $generated@@443))) ($generated@@169 ($generated@@386 $generated@@153 $generated@@443))))))
 :pattern ( ($generated@@93 ($generated@@436 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@88 $generated@@170 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@369 (type $generated@@447))))
(let (($generated@@449 ($generated@@368 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@88 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@367 $generated@@170 $generated@@170)) (= (type $generated@@451) $generated@@170)) (= ($generated@@0 ($generated@@93 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@93 ($generated@@365 $generated@@450) ($generated@@168 ($generated@@386 $generated@@153 $generated@@451)))) (= ($generated@@93 ($generated@@445 $generated@@450) ($generated@@168 ($generated@@386 $generated@@153 $generated@@451))) ($generated@@169 ($generated@@386 $generated@@153 $generated@@451))))))
 :pattern ( ($generated@@93 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@350 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@349 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@93 ($generated@@401 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@93 ($generated@@347 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@93 ($generated@@437 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@93 ($generated@@347 $generated@@452) $generated@@456))
 :pattern ( ($generated@@93 ($generated@@437 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@93 ($generated@@401 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@368 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@367 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@93 ($generated@@412 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@93 ($generated@@365 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@93 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@93 ($generated@@365 $generated@@457) $generated@@461))
 :pattern ( ($generated@@93 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@93 ($generated@@412 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@76)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@466) $generated@@76)) (= (type $generated@@467) $generated@@76)) (= (type $generated@@468) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@170) ($generated@@0 ($generated@@93 ($generated@@347 $generated@@465) $generated@@469))) (and ($generated@@308 ($generated@@93 ($generated@@437 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@308 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@93 ($generated@@437 $generated@@465) $generated@@469))
 :pattern ( ($generated@@93 ($generated@@347 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@86 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@76)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@367 $generated@@170 $generated@@170)) (= (type $generated@@474) $generated@@76)) (= (type $generated@@475) $generated@@76)) (= (type $generated@@476) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@170) ($generated@@0 ($generated@@93 ($generated@@365 $generated@@473) $generated@@477))) (and ($generated@@308 ($generated@@93 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@308 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@93 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@93 ($generated@@365 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@86 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@478) $generated@@89) (= (type $generated@@479) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@268 $generated@@479)) (= ($generated@@86 ($generated@@329 $generated@@478) $generated@@270 $generated@@479) ($generated@@86 $generated@@478 $generated@@260 $generated@@479)))
 :pattern ( ($generated@@86 ($generated@@329 $generated@@478) $generated@@270 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@153) ($generated@@158 $generated@@480 $generated@@270)) (or ($generated@@271 $generated@@480) ($generated@@152 $generated@@480)))
 :pattern ( ($generated@@152 $generated@@480) ($generated@@158 $generated@@480 $generated@@270))
 :pattern ( ($generated@@271 $generated@@480) ($generated@@158 $generated@@480 $generated@@270))
)))
(assert (forall (($generated@@482 T@T) ) (! (= (type ($generated@@481 $generated@@482)) ($generated@@88 $generated@@482 $generated@@4))
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@369 (type $generated@@483))))
(let (($generated@@485 ($generated@@368 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@367 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@366 $generated@@485 $generated@@484)) (= ($generated@@365 $generated@@483) ($generated@@481 $generated@@485))))))
 :pattern ( ($generated@@365 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@369 (type $generated@@486))))
(let (($generated@@488 ($generated@@368 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@367 $generated@@488 $generated@@487)) (= (= $generated@@486 ($generated@@366 $generated@@488 $generated@@487)) (= ($generated@@412 $generated@@486) ($generated@@481 $generated@@487))))))
 :pattern ( ($generated@@412 $generated@@486))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@369 (type $generated@@489))))
(let (($generated@@491 ($generated@@368 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@367 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@366 $generated@@491 $generated@@490)) (= ($generated@@444 $generated@@489) ($generated@@481 $generated@@170))))))
 :pattern ( ($generated@@444 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@351 (type $generated@@492))))
(let (($generated@@494 ($generated@@350 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@349 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@348 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@170) (= (type $generated@@496) $generated@@170)) ($generated@@0 ($generated@@93 ($generated@@436 $generated@@492) ($generated@@333 ($generated@@280 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@436 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 ($generated@@369 (type $generated@@497))))
(let (($generated@@499 ($generated@@368 (type $generated@@497))))
 (=> (= (type $generated@@497) ($generated@@367 $generated@@499 $generated@@498)) (or (= $generated@@497 ($generated@@366 $generated@@499 $generated@@498)) (exists (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (and (and (= (type $generated@@500) $generated@@170) (= (type $generated@@501) $generated@@170)) ($generated@@0 ($generated@@93 ($generated@@444 $generated@@497) ($generated@@333 ($generated@@280 $generated@@500 $generated@@501)))))
 :no-pattern (type $generated@@500)
 :no-pattern (type $generated@@501)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
))))))
 :pattern ( ($generated@@444 $generated@@497))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@170) ($generated@@281 $generated@@502 $generated@@46)) (and (= ($generated@@333 ($generated@@386 $generated@@2 $generated@@502)) $generated@@502) ($generated@@158 ($generated@@386 $generated@@2 $generated@@502) $generated@@46)))
 :pattern ( ($generated@@281 $generated@@502 $generated@@46))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@170) ($generated@@281 $generated@@503 $generated@@47)) (and (= ($generated@@333 ($generated@@386 $generated@@3 $generated@@503)) $generated@@503) ($generated@@158 ($generated@@386 $generated@@3 $generated@@503) $generated@@47)))
 :pattern ( ($generated@@281 $generated@@503 $generated@@47))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@170) ($generated@@281 $generated@@504 $generated@@44)) (and (= ($generated@@333 ($generated@@386 $generated@@4 $generated@@504)) $generated@@504) ($generated@@158 ($generated@@386 $generated@@4 $generated@@504) $generated@@44)))
 :pattern ( ($generated@@281 $generated@@504 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@505) 20))
(assert (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@170) ($generated@@281 $generated@@506 $generated@@45)) (and (= ($generated@@333 ($generated@@386 $generated@@505 $generated@@506)) $generated@@506) ($generated@@158 ($generated@@386 $generated@@505 $generated@@506) $generated@@45)))
 :pattern ( ($generated@@281 $generated@@506 $generated@@45))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@76) (= ($generated@@281 ($generated@@333 $generated@@507) $generated@@508) ($generated@@158 $generated@@507 $generated@@508)))
 :pattern ( ($generated@@281 ($generated@@333 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@91 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@88 $generated@@510 $generated@@2)) (<= 0 ($generated@@338 $generated@@509))))
 :pattern ( ($generated@@338 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@323 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@322 $generated@@512)) (<= 0 ($generated@@321 $generated@@511))))
 :pattern ( ($generated@@321 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@76)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@76) (= (type $generated@@516) $generated@@76)) (= ($generated@@513 ($generated@@462 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@462 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@76)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@76) (= (type $generated@@520) $generated@@76)) (= ($generated@@517 ($generated@@462 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@462 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@76) (= (type $generated@@522) $generated@@76)) (= ($generated@@84 ($generated@@462 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@76)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@76) (= (type $generated@@526) $generated@@76)) (= ($generated@@523 ($generated@@470 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@470 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@76)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@76) (= (type $generated@@530) $generated@@76)) (= ($generated@@527 ($generated@@470 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@470 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@76) (= (type $generated@@532) $generated@@76)) (= ($generated@@84 ($generated@@470 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@170) (= (type $generated@@534) $generated@@170)) (= ($generated@@175 ($generated@@280 $generated@@533 $generated@@534)) $generated@@63))
 :pattern ( ($generated@@280 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@76)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@76) (= (type $generated@@538) $generated@@76)) (= ($generated@@535 ($generated@@161 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@161 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@76)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@76) (= (type $generated@@542) $generated@@76)) (= ($generated@@539 ($generated@@161 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@161 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@170) (= (type $generated@@544) $generated@@170)) (= ($generated@@168 ($generated@@280 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@280 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@170) (= (type $generated@@546) $generated@@170)) (= ($generated@@169 ($generated@@280 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@280 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@89) ($generated@@158 $generated@@547 $generated@@144))
 :pattern ( ($generated@@158 $generated@@547 $generated@@144))
)))
(assert  (and (forall (($generated@@550 T@U) ) (! (= (type ($generated@@548 $generated@@550)) $generated@@76)
 :pattern ( ($generated@@548 $generated@@550))
)) (forall (($generated@@551 T@U) ($generated@@552 Int) ) (! (let (($generated@@553 ($generated@@323 (type $generated@@551))))
(= (type ($generated@@549 $generated@@551 $generated@@552)) $generated@@553))
 :pattern ( ($generated@@549 $generated@@551 $generated@@552))
))))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@322 $generated@@170)) (= (type $generated@@555) $generated@@76)) (= (type $generated@@556) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@554 ($generated@@548 $generated@@555) $generated@@556) (forall (($generated@@557 Int) ) (!  (=> (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@321 $generated@@554))) ($generated@@308 ($generated@@549 $generated@@554 $generated@@557) $generated@@555 $generated@@556))
 :pattern ( ($generated@@549 $generated@@554 $generated@@557))
))))
 :pattern ( ($generated@@86 $generated@@554 ($generated@@548 $generated@@555) $generated@@556))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@558 ($generated@@87 $generated@@559)) $generated@@559)
 :pattern ( ($generated@@87 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@76)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@76) (= ($generated@@560 ($generated@@293 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@293 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@76) (= ($generated@@84 ($generated@@293 $generated@@563)) $generated@@54))
 :pattern ( ($generated@@293 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@76)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@76) (= ($generated@@564 ($generated@@298 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@298 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@76) (= ($generated@@84 ($generated@@298 $generated@@567)) $generated@@55))
 :pattern ( ($generated@@298 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@76)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@76) (= ($generated@@568 ($generated@@178 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@178 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@76) (= ($generated@@84 ($generated@@178 $generated@@571)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@76)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@76) (= ($generated@@572 ($generated@@548 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@548 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@76) (= ($generated@@84 ($generated@@548 $generated@@575)) $generated@@57))
 :pattern ( ($generated@@548 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@76)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@76) (= ($generated@@576 ($generated@@254 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@254 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@89) (= ($generated@@175 ($generated@@329 $generated@@579)) $generated@@70))
 :pattern ( ($generated@@329 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@89) (= ($generated@@154 ($generated@@329 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@329 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
(= ($generated@@386 $generated@@582 ($generated@@333 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@333 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@584) $generated@@76)) (= (type $generated@@585) $generated@@76)) (= ($generated@@158 $generated@@583 ($generated@@462 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@170) ($generated@@0 ($generated@@93 ($generated@@347 $generated@@583) $generated@@586))) (and ($generated@@281 ($generated@@93 ($generated@@437 $generated@@583) $generated@@586) $generated@@585) ($generated@@281 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@93 ($generated@@437 $generated@@583) $generated@@586))
 :pattern ( ($generated@@93 ($generated@@347 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@158 $generated@@583 ($generated@@462 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@367 $generated@@170 $generated@@170)) (= (type $generated@@588) $generated@@76)) (= (type $generated@@589) $generated@@76)) (= ($generated@@158 $generated@@587 ($generated@@470 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@170) ($generated@@0 ($generated@@93 ($generated@@365 $generated@@587) $generated@@590))) (and ($generated@@281 ($generated@@93 ($generated@@445 $generated@@587) $generated@@590) $generated@@589) ($generated@@281 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@93 ($generated@@445 $generated@@587) $generated@@590))
 :pattern ( ($generated@@93 ($generated@@365 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@158 $generated@@587 ($generated@@470 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@170) (= (type $generated@@594) $generated@@170)) (< ($generated@@591 $generated@@593) ($generated@@592 ($generated@@280 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@280 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@170) (= (type $generated@@596) $generated@@170)) (< ($generated@@591 $generated@@596) ($generated@@592 ($generated@@280 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@280 $generated@@595 $generated@@596))
)))
(assert  (=> (<= 2 $generated@@265) (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@76) (= (type $generated@@598) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@599) $generated@@153)) (or ($generated@@269 $generated@@597 $generated@@599) (and (not (= 2 $generated@@265)) (and (and ($generated@@268 $generated@@598) ($generated@@158 $generated@@599 $generated@@270)) ($generated@@271 $generated@@599))))) (and ($generated@@272 $generated@@597 $generated@@599) (= ($generated@@266 $generated@@597 $generated@@599) (let (($generated@@600 ($generated@@273 $generated@@597 $generated@@599)))
$generated@@600))))
 :pattern ( ($generated@@266 $generated@@597 $generated@@599) ($generated@@268 $generated@@598))
))))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@170) (= (type $generated@@602) $generated@@76)) (= (type $generated@@603) $generated@@76)) ($generated@@281 $generated@@601 ($generated@@462 $generated@@602 $generated@@603))) (and (= ($generated@@333 ($generated@@386 ($generated@@349 $generated@@170 $generated@@170) $generated@@601)) $generated@@601) ($generated@@158 ($generated@@386 ($generated@@349 $generated@@170 $generated@@170) $generated@@601) ($generated@@462 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@281 $generated@@601 ($generated@@462 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@170) (= (type $generated@@605) $generated@@76)) (= (type $generated@@606) $generated@@76)) ($generated@@281 $generated@@604 ($generated@@470 $generated@@605 $generated@@606))) (and (= ($generated@@333 ($generated@@386 ($generated@@367 $generated@@170 $generated@@170) $generated@@604)) $generated@@604) ($generated@@158 ($generated@@386 ($generated@@367 $generated@@170 $generated@@170) $generated@@604) ($generated@@470 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@281 $generated@@604 ($generated@@470 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@76) (= (type $generated@@608) $generated@@76)) (= (type $generated@@609) $generated@@170)) ($generated@@281 $generated@@609 ($generated@@161 $generated@@607 $generated@@608))) (and (= ($generated@@333 ($generated@@386 $generated@@153 $generated@@609)) $generated@@609) ($generated@@158 ($generated@@386 $generated@@153 $generated@@609) ($generated@@161 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@281 $generated@@609 ($generated@@161 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
 (not ($generated@@0 ($generated@@93 ($generated@@481 $generated@@611) $generated@@610))))
 :pattern ( (let (($generated@@611 (type $generated@@610)))
($generated@@93 ($generated@@481 $generated@@611) $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@76) (= (type $generated@@613) $generated@@76)) (and (= ($generated@@84 ($generated@@161 $generated@@612 $generated@@613)) $generated@@64) (= ($generated@@344 ($generated@@161 $generated@@612 $generated@@613)) $generated@@72)))
 :pattern ( ($generated@@161 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@153) (= ($generated@@591 ($generated@@333 $generated@@614)) ($generated@@592 $generated@@614)))
 :pattern ( ($generated@@591 ($generated@@333 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@170) ($generated@@281 $generated@@615 ($generated@@87 0))) (and (= ($generated@@333 ($generated@@386 $generated@@2 $generated@@615)) $generated@@615) ($generated@@158 ($generated@@386 ($generated@@88 $generated@@170 $generated@@4) $generated@@615) ($generated@@87 0))))
 :pattern ( ($generated@@281 $generated@@615 ($generated@@87 0)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@170) (= (type $generated@@617) $generated@@76)) ($generated@@281 $generated@@616 ($generated@@293 $generated@@617))) (and (= ($generated@@333 ($generated@@386 ($generated@@88 $generated@@170 $generated@@4) $generated@@616)) $generated@@616) ($generated@@158 ($generated@@386 ($generated@@88 $generated@@170 $generated@@4) $generated@@616) ($generated@@293 $generated@@617))))
 :pattern ( ($generated@@281 $generated@@616 ($generated@@293 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@170) (= (type $generated@@619) $generated@@76)) ($generated@@281 $generated@@618 ($generated@@298 $generated@@619))) (and (= ($generated@@333 ($generated@@386 ($generated@@88 $generated@@170 $generated@@4) $generated@@618)) $generated@@618) ($generated@@158 ($generated@@386 ($generated@@88 $generated@@170 $generated@@4) $generated@@618) ($generated@@298 $generated@@619))))
 :pattern ( ($generated@@281 $generated@@618 ($generated@@298 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@170) (= (type $generated@@621) $generated@@76)) ($generated@@281 $generated@@620 ($generated@@178 $generated@@621))) (and (= ($generated@@333 ($generated@@386 ($generated@@88 $generated@@170 $generated@@2) $generated@@620)) $generated@@620) ($generated@@158 ($generated@@386 ($generated@@88 $generated@@170 $generated@@2) $generated@@620) ($generated@@178 $generated@@621))))
 :pattern ( ($generated@@281 $generated@@620 ($generated@@178 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@170) (= (type $generated@@623) $generated@@76)) ($generated@@281 $generated@@622 ($generated@@548 $generated@@623))) (and (= ($generated@@333 ($generated@@386 ($generated@@322 $generated@@170) $generated@@622)) $generated@@622) ($generated@@158 ($generated@@386 ($generated@@322 $generated@@170) $generated@@622) ($generated@@548 $generated@@623))))
 :pattern ( ($generated@@281 $generated@@622 ($generated@@548 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@76) (= (type $generated@@625) $generated@@170)) ($generated@@281 $generated@@625 ($generated@@254 $generated@@624))) (and (= ($generated@@333 ($generated@@386 $generated@@89 $generated@@625)) $generated@@625) ($generated@@158 ($generated@@386 $generated@@89 $generated@@625) ($generated@@254 $generated@@624))))
 :pattern ( ($generated@@281 $generated@@625 ($generated@@254 $generated@@624)))
)))
(assert (= ($generated@@84 $generated@@144) $generated@@61))
(assert (= ($generated@@344 $generated@@144) $generated@@71))
(assert (= ($generated@@84 $generated@@260) $generated@@62))
(assert (= ($generated@@344 $generated@@260) $generated@@71))
(assert (= ($generated@@84 $generated@@148) $generated@@65))
(assert (= ($generated@@344 $generated@@148) $generated@@73))
(assert (= ($generated@@84 $generated@@255) $generated@@66))
(assert (= ($generated@@344 $generated@@255) $generated@@73))
(assert (= ($generated@@84 $generated@@270) $generated@@69))
(assert (= ($generated@@344 $generated@@270) $generated@@75))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@88 $generated@@170 $generated@@2)) (= (type $generated@@627) $generated@@76)) (= (type $generated@@628) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@626 ($generated@@178 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@170) (< 0 ($generated ($generated@@93 $generated@@626 $generated@@629)))) ($generated@@308 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@93 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@86 $generated@@626 ($generated@@178 $generated@@627) $generated@@628))
)))
(assert (= $generated@@176 ($generated@@267 $generated@@176)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@76) (= (type $generated@@631) $generated@@89)) (= ($generated@@158 $generated@@631 ($generated@@254 $generated@@630))  (and ($generated@@158 $generated@@631 $generated@@255) ($generated@@0 ($generated@@267 ($generated@@11 true))))))
 :pattern ( ($generated@@158 $generated@@631 ($generated@@254 $generated@@630)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@153) (= (type $generated@@633) $generated@@76)) (= (type $generated@@634) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@268 $generated@@634) (and ($generated@@160 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@76) ($generated@@86 $generated@@632 ($generated@@161 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@86 $generated@@632 ($generated@@161 $generated@@633 $generated@@635) $generated@@634))
))))) ($generated@@308 ($generated@@168 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@308 ($generated@@168 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@153) (= (type $generated@@637) $generated@@76)) (= (type $generated@@638) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@268 $generated@@638) (and ($generated@@160 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@76) ($generated@@86 $generated@@636 ($generated@@161 $generated@@639 $generated@@637) $generated@@638))
 :pattern ( ($generated@@86 $generated@@636 ($generated@@161 $generated@@639 $generated@@637) $generated@@638))
))))) ($generated@@308 ($generated@@169 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@308 ($generated@@169 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@153) (= (type $generated@@641) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@268 $generated@@641) (and ($generated@@152 $generated@@640) ($generated@@86 $generated@@640 $generated@@270 $generated@@641)))) ($generated@@86 ($generated@@154 $generated@@640) $generated@@260 $generated@@641))
 :pattern ( ($generated@@86 ($generated@@154 $generated@@640) $generated@@260 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@170) (= (type $generated@@643) $generated@@170)) (= ($generated@@280 ($generated@@267 $generated@@642) ($generated@@267 $generated@@643)) ($generated@@267 ($generated@@280 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@280 ($generated@@267 $generated@@642) ($generated@@267 $generated@@643)))
)))
(assert (forall (($generated@@644 Int) ) (! (= ($generated@@333 ($generated@@8 ($generated@@303 $generated@@644))) ($generated@@267 ($generated@@333 ($generated@@8 $generated@@644))))
 :pattern ( ($generated@@333 ($generated@@8 ($generated@@303 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ) (!  (=> (= (type $generated@@645) $generated@@89) (= ($generated@@329 ($generated@@267 $generated@@645)) ($generated@@267 ($generated@@329 $generated@@645))))
 :pattern ( ($generated@@329 ($generated@@267 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@333 ($generated@@267 $generated@@646)) ($generated@@267 ($generated@@333 $generated@@646)))
 :pattern ( ($generated@@333 ($generated@@267 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (let (($generated@@648 ($generated@@323 (type $generated@@647))))
 (=> (and (= (type $generated@@647) ($generated@@322 $generated@@648)) (= ($generated@@321 $generated@@647) 0)) (= $generated@@647 ($generated@@320 $generated@@648))))
 :pattern ( ($generated@@321 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (! (let (($generated@@652 (type $generated@@650)))
 (=> (and (and (= (type $generated@@649) ($generated@@88 $generated@@652 $generated@@2)) (= (type $generated@@651) $generated@@2)) (<= 0 ($generated $generated@@651))) (= ($generated@@338 ($generated@@94 $generated@@649 $generated@@650 $generated@@651)) (+ (- ($generated@@338 $generated@@649) ($generated ($generated@@93 $generated@@649 $generated@@650))) ($generated $generated@@651)))))
 :pattern ( ($generated@@338 ($generated@@94 $generated@@649 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@654) $generated@@2)) ($generated@@86 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@86 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@656) $generated@@3)) ($generated@@86 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@86 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@658) $generated@@4)) ($generated@@86 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@86 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@660) $generated@@505)) ($generated@@86 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@86 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@662) $generated@@170)) ($generated@@86 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@86 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@322 $generated@@170)) (= (type $generated@@664) $generated@@76)) (= ($generated@@158 $generated@@663 ($generated@@548 $generated@@664)) (forall (($generated@@665 Int) ) (!  (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@321 $generated@@663))) ($generated@@281 ($generated@@549 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@549 $generated@@663 $generated@@665))
))))
 :pattern ( ($generated@@158 $generated@@663 ($generated@@548 $generated@@664)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 Int) ) (!  (=> (= (type $generated@@667) ($generated@@322 $generated@@170)) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@321 $generated@@667))) (< ($generated@@592 ($generated@@386 $generated@@153 ($generated@@549 $generated@@667 $generated@@668))) ($generated@@666 $generated@@667))))
 :pattern ( ($generated@@592 ($generated@@386 $generated@@153 ($generated@@549 $generated@@667 $generated@@668))))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) ($generated@@349 $generated@@170 $generated@@170)) (= (type $generated@@670) $generated@@76)) (= (type $generated@@671) $generated@@76)) ($generated@@158 $generated@@669 ($generated@@462 $generated@@670 $generated@@671))) (and (and ($generated@@158 ($generated@@347 $generated@@669) ($generated@@293 $generated@@670)) ($generated@@158 ($generated@@401 $generated@@669) ($generated@@293 $generated@@671))) ($generated@@158 ($generated@@436 $generated@@669) ($generated@@293 ($generated@@161 $generated@@670 $generated@@671)))))
 :pattern ( ($generated@@158 $generated@@669 ($generated@@462 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) ($generated@@367 $generated@@170 $generated@@170)) (= (type $generated@@673) $generated@@76)) (= (type $generated@@674) $generated@@76)) ($generated@@158 $generated@@672 ($generated@@470 $generated@@673 $generated@@674))) (and (and ($generated@@158 ($generated@@365 $generated@@672) ($generated@@298 $generated@@673)) ($generated@@158 ($generated@@412 $generated@@672) ($generated@@298 $generated@@674))) ($generated@@158 ($generated@@444 $generated@@672) ($generated@@298 ($generated@@161 $generated@@673 $generated@@674)))))
 :pattern ( ($generated@@158 $generated@@672 ($generated@@470 $generated@@673 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@2) ($generated@@158 $generated@@675 $generated@@46))
 :pattern ( ($generated@@158 $generated@@675 $generated@@46))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@3) ($generated@@158 $generated@@676 $generated@@47))
 :pattern ( ($generated@@158 $generated@@676 $generated@@47))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@4) ($generated@@158 $generated@@677 $generated@@44))
 :pattern ( ($generated@@158 $generated@@677 $generated@@44))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@505) ($generated@@158 $generated@@678 $generated@@45))
 :pattern ( ($generated@@158 $generated@@678 $generated@@45))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@170) ($generated@@158 $generated@@679 $generated@@48))
 :pattern ( ($generated@@158 $generated@@679 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (= (type $generated@@680) $generated@@153) (= (type $generated@@681) $generated@@89)) (= (type $generated@@682) $generated@@89)) (= (type $generated@@683) $generated@@76)) (= (type $generated@@684) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@685) $generated@@89)) (= (type $generated@@686) ($generated@@188 $generated@@89 $generated@@4))) (= (type $generated@@687) ($generated@@188 $generated@@89 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@689  (=> (= (ControlFlow 0 5) (- 0 4)) (or (and ($generated@@158 ($generated@@8 (ite ($generated@@271 $generated@@680) 2 ($generated@@303 3))) $generated@@46) (= (ite ($generated@@271 $generated@@680) 2 ($generated@@303 3)) (ite ($generated@@271 $generated@@680) 2 ($generated@@303 3)))) (or (and ($generated@@158 ($generated@@8 ($generated@@303 0)) $generated@@46) (= ($generated@@303 0) (ite ($generated@@271 $generated@@680) 2 ($generated@@303 3)))) (exists (($generated@@690 Int) ) (= $generated@@690 (ite ($generated@@271 $generated@@680) 2 ($generated@@303 3)))))))))
(let (($generated@@691  (=> (and (and (= $generated@@680 ($generated@@329 $generated@@681)) ($generated@@158 $generated@@681 $generated@@260)) (and ($generated@@158 $generated@@682 ($generated@@254 $generated@@683)) ($generated@@86 $generated@@682 ($generated@@254 $generated@@683) $generated@@684))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@158 $generated@@681 ($generated@@254 $generated@@683))) (=> ($generated@@158 $generated@@681 ($generated@@254 $generated@@683)) (=> (and (and (= $generated@@685 $generated@@681) ($generated@@158 $generated@@685 ($generated@@254 $generated@@683))) (and (= $generated@@682 $generated@@685) (= (ControlFlow 0 7) 5))) $generated@@689))))))
(let (($generated@@692  (=> (and (= $generated@@680 $generated@@176) (= (ControlFlow 0 6) 5)) $generated@@689)))
(let (($generated@@693 true))
(let (($generated@@694  (=> (not (= $generated@@680 $generated@@176)) (and (=> (= (ControlFlow 0 9) 7) $generated@@691) (=> (= (ControlFlow 0 9) 3) $generated@@693)))))
(let (($generated@@695  (and (=> (= (ControlFlow 0 10) 6) $generated@@692) (=> (= (ControlFlow 0 10) 9) $generated@@694))))
(let (($generated@@696 true))
(let (($generated@@697  (=> (= $generated@@686 ($generated@@242 $generated@@145 $generated@@684 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 10) $generated@@695) (=> (= (ControlFlow 0 11) 2) $generated@@696)))))
(let (($generated@@698 true))
(let (($generated@@699  (=> (and (= $generated@@687 ($generated@@187 $generated@@145 $generated@@684 $generated@@60 false)) ($generated@@271 $generated@@680)) (and (=> (= (ControlFlow 0 12) 1) $generated@@698) (=> (= (ControlFlow 0 12) 11) $generated@@697)))))
(let (($generated@@700  (=> (and (and (and ($generated@@268 $generated@@684) ($generated@@688 $generated@@684)) ($generated@@158 $generated@@680 $generated@@270)) (and (= 2 $generated@@265) (= (ControlFlow 0 13) 12))) $generated@@699)))
$generated@@700))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 () Bool)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 () Int)
(declare-fun $generated@@252 (T@U) Int)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@341 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@362 (T@T T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@390 (T@U T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@T) T@U)
(declare-fun $generated@@430 () T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@473 (T@U Int) T@U)
(declare-fun $generated@@482 (T@U) Int)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@511 (T@U) Int)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert  (=> $generated@@233 (= $generated@@234 ($generated@@235 20))))
(assert (forall (($generated@@237 T@U) ) (! (= (type ($generated@@236 $generated@@237)) $generated@@64)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@239) $generated@@64)) (= ($generated@@132 $generated@@238 ($generated@@236 $generated@@239)) (forall (($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@145) ($generated@@0 ($generated@@81 $generated@@238 $generated@@240))) ($generated@@224 $generated@@240 $generated@@239))
 :pattern ( ($generated@@81 $generated@@238 $generated@@240))
))))
 :pattern ( ($generated@@132 $generated@@238 ($generated@@236 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@64)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@244) $generated@@64)) (= ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@145) ($generated@@0 ($generated@@81 $generated@@243 $generated@@245))) ($generated@@224 $generated@@245 $generated@@244))
 :pattern ( ($generated@@81 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@132 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@235 $generated@@246) $generated@@246)
 :pattern ( ($generated@@235 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert  (=> (<= 0 $generated@@251) (forall (($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@64) (or ($generated@@253 $generated@@254) (not (= 0 $generated@@251)))) true)
 :pattern ( ($generated@@252 $generated@@254))
))))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@255 $generated@@261)) (= ($generated@@74 ($generated@@223 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@136) (= ($generated@@134 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@136) ($generated@@134 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@145) (= (type $generated@@267) $generated@@145)) (= $generated@@265 ($generated@@223 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@134 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@145)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@64) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280) ($generated@@74 $generated@@278 $generated@@279 $generated@@280)))
 :pattern ( ($generated@@256 ($generated@@276 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@76 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@79 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@76 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@81 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@79 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@76 $generated@@324 $generated@@2)) (= ($generated@@151 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@81 $generated@@323 $generated@@325))) (<= ($generated ($generated@@81 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@81 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@151 $generated@@323))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@287 $generated@@326))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@291 (type $generated@@331))))
(= (type ($generated@@330 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@291 (type $generated@@333))))
(let (($generated@@335 ($generated@@290 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@289 $generated@@335 $generated@@334)) (or (= $generated@@333 ($generated@@288 $generated@@335 $generated@@334)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@330 $generated@@333) $generated@@336)))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@330 $generated@@333))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(let (($generated@@339 ($generated@@308 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@307 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@306 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@305 $generated@@337))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@309 (type $generated@@342))))
(= (type ($generated@@341 $generated@@342)) ($generated@@76 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@341 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@341 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@348) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@349) $generated@@64)) (= ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)) (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@348 $generated@@350)))) ($generated@@224 $generated@@350 $generated@@349))
 :pattern ( ($generated@@81 $generated@@348 $generated@@350))
))))
 :pattern ( ($generated@@132 $generated@@348 ($generated@@150 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (and (= (type $generated@@351) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@352) $generated@@64)) (= (type $generated@@353) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@145) ($generated@@0 ($generated@@81 $generated@@351 $generated@@354))) ($generated@@256 $generated@@354 $generated@@352 $generated@@353))
 :pattern ( ($generated@@81 $generated@@351 $generated@@354))
))))
 :pattern ( ($generated@@74 $generated@@351 ($generated@@236 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@356) $generated@@64)) (= (type $generated@@357) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@355 ($generated@@241 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@145) ($generated@@0 ($generated@@81 $generated@@355 $generated@@358))) ($generated@@256 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@81 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@74 $generated@@355 ($generated@@241 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 (type $generated@@359)))
(= ($generated ($generated@@81 ($generated@@282 $generated@@360) $generated@@359)) 0))
 :pattern ( (let (($generated@@360 (type $generated@@359)))
($generated@@81 ($generated@@282 $generated@@360) $generated@@359)))
)))
(assert  (and (and (forall (($generated@@364 T@U) ) (! (= (type ($generated@@361 $generated@@364)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@361 $generated@@364))
)) (forall (($generated@@365 T@T) ($generated@@366 T@U) ) (! (= (type ($generated@@362 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@362 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@291 (type $generated@@367))))
(let (($generated@@369 ($generated@@290 (type $generated@@367))))
(= (type ($generated@@363 $generated@@367)) ($generated@@76 $generated@@369 $generated@@368))))
 :pattern ( ($generated@@363 $generated@@367))
))))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@371) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371)))) (= ($generated@@81 ($generated@@363 $generated@@370) ($generated@@143 ($generated@@362 $generated@@136 $generated@@371))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@371))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@370) $generated@@371))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@309 (type $generated@@375))))
(let (($generated@@377 ($generated@@308 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379)))) (= ($generated@@81 ($generated@@373 $generated@@378) ($generated@@143 ($generated@@362 $generated@@136 $generated@@379))) ($generated@@144 ($generated@@362 $generated@@136 $generated@@379))))))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(let (($generated@@383 ($generated@@290 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@289 $generated@@383 $generated@@382)) (= ($generated@@0 ($generated@@81 ($generated@@330 $generated@@380) $generated@@381)) (exists (($generated@@384 T@U) ) (!  (and (= (type $generated@@384) $generated@@383) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@380) $generated@@384)) (= $generated@@381 ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@380) $generated@@384))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@380) $generated@@384))
))))))
 :pattern ( ($generated@@81 ($generated@@330 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@308 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@307 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@81 ($generated@@341 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@81 ($generated@@341 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@391 $generated@@392)) $generated@@64)
 :pattern ( ($generated@@390 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (and (= (type $generated@@393) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))) (and ($generated@@256 ($generated@@81 ($generated@@363 $generated@@393) $generated@@397) $generated@@395 $generated@@396) ($generated@@256 $generated@@397 $generated@@394 $generated@@396)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@393) $generated@@397))
))))
 :pattern ( ($generated@@74 $generated@@393 ($generated@@390 $generated@@394 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@64)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@402) $generated@@64)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))) (and ($generated@@256 ($generated@@81 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@256 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@74 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@T) ) (! (= (type ($generated@@406 $generated@@407)) ($generated@@76 $generated@@407 $generated@@4))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@309 (type $generated@@408))))
(let (($generated@@410 ($generated@@308 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@307 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@306 $generated@@410 $generated@@409)) (= ($generated@@305 $generated@@408) ($generated@@406 $generated@@410))))))
 :pattern ( ($generated@@305 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@309 (type $generated@@411))))
(let (($generated@@413 ($generated@@308 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@307 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@306 $generated@@413 $generated@@412)) (= ($generated@@341 $generated@@411) ($generated@@406 $generated@@412))))))
 :pattern ( ($generated@@341 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@309 (type $generated@@414))))
(let (($generated@@416 ($generated@@308 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@307 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@306 $generated@@416 $generated@@415)) (= ($generated@@372 $generated@@414) ($generated@@406 $generated@@145))))))
 :pattern ( ($generated@@372 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@291 (type $generated@@417))))
(let (($generated@@419 ($generated@@290 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@289 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@288 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (and (and (= (type $generated@@420) $generated@@145) (= (type $generated@@421) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@417) ($generated@@276 ($generated@@223 $generated@@420 $generated@@421)))))
 :no-pattern (type $generated@@420)
 :no-pattern (type $generated@@421)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
))))))
 :pattern ( ($generated@@361 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@309 (type $generated@@422))))
(let (($generated@@424 ($generated@@308 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@307 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@306 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@145) (= (type $generated@@426) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@372 $generated@@422) ($generated@@276 ($generated@@223 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@372 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@145) ($generated@@224 $generated@@427 $generated@@46)) (and (= ($generated@@276 ($generated@@362 $generated@@2 $generated@@427)) $generated@@427) ($generated@@132 ($generated@@362 $generated@@2 $generated@@427) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@427 $generated@@46))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@224 $generated@@428 $generated@@47)) (and (= ($generated@@276 ($generated@@362 $generated@@3 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@362 $generated@@3 $generated@@428) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@428 $generated@@47))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@44)) (and (= ($generated@@276 ($generated@@362 $generated@@4 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@362 $generated@@4 $generated@@429) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@430) 20))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@145) ($generated@@224 $generated@@431 $generated@@45)) (and (= ($generated@@276 ($generated@@362 $generated@@430 $generated@@431)) $generated@@431) ($generated@@132 ($generated@@362 $generated@@430 $generated@@431) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@431 $generated@@45))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (= (type $generated@@433) $generated@@64) (= ($generated@@224 ($generated@@276 $generated@@432) $generated@@433) ($generated@@132 $generated@@432 $generated@@433)))
 :pattern ( ($generated@@224 ($generated@@276 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@79 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@76 $generated@@435 $generated@@2)) (<= 0 ($generated@@281 $generated@@434))))
 :pattern ( ($generated@@281 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@271 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@270 $generated@@437)) (<= 0 ($generated@@269 $generated@@436))))
 :pattern ( ($generated@@269 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@390 $generated@@440 $generated@@441)) $generated@@440))
 :pattern ( ($generated@@390 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@390 $generated@@444 $generated@@445)) $generated@@445))
 :pattern ( ($generated@@390 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@72 ($generated@@390 $generated@@446 $generated@@447)) $generated@@58))
 :pattern ( ($generated@@390 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@398 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@398 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@398 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@398 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@72 ($generated@@398 $generated@@456 $generated@@457)) $generated@@59))
 :pattern ( ($generated@@398 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@262 ($generated@@223 $generated@@458 $generated@@459)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@135 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@135 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@135 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@145) (= (type $generated@@469) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@223 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) (= (type $generated@@471) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@223 $generated@@470 $generated@@471))
)))
(assert  (and (forall (($generated@@474 T@U) ) (! (= (type ($generated@@472 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@474))
)) (forall (($generated@@475 T@U) ($generated@@476 Int) ) (! (let (($generated@@477 ($generated@@271 (type $generated@@475))))
(= (type ($generated@@473 $generated@@475 $generated@@476)) $generated@@477))
 :pattern ( ($generated@@473 $generated@@475 $generated@@476))
))))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (and (= (type $generated@@478) ($generated@@270 $generated@@145)) (= (type $generated@@479) $generated@@64)) (= (type $generated@@480) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@478 ($generated@@472 $generated@@479) $generated@@480) (forall (($generated@@481 Int) ) (!  (=> (and (<= 0 $generated@@481) (< $generated@@481 ($generated@@269 $generated@@478))) ($generated@@256 ($generated@@473 $generated@@478 $generated@@481) $generated@@479 $generated@@480))
 :pattern ( ($generated@@473 $generated@@478 $generated@@481))
))))
 :pattern ( ($generated@@74 $generated@@478 ($generated@@472 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@483 Int) ) (! (= ($generated@@482 ($generated@@75 $generated@@483)) $generated@@483)
 :pattern ( ($generated@@75 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@236 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@236 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@236 $generated@@487)) $generated@@54))
 :pattern ( ($generated@@236 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@64)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@488 ($generated@@241 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@241 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@72 ($generated@@241 $generated@@491)) $generated@@55))
 :pattern ( ($generated@@241 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@150 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@150 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@495)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@472 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@472 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@472 $generated@@499)) $generated@@57))
 :pattern ( ($generated@@472 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 (type $generated@@500)))
(= ($generated@@362 $generated@@501 ($generated@@276 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@276 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (= (type $generated@@502) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) (= ($generated@@132 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)) (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@502) $generated@@505))) (and ($generated@@224 ($generated@@81 ($generated@@363 $generated@@502) $generated@@505) $generated@@504) ($generated@@224 $generated@@505 $generated@@503)))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@502) $generated@@505))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@502) $generated@@505))
))))
 :pattern ( ($generated@@132 $generated@@502 ($generated@@390 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@64)) (= ($generated@@132 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@506) $generated@@509))) (and ($generated@@224 ($generated@@81 ($generated@@373 $generated@@506) $generated@@509) $generated@@508) ($generated@@224 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@506) $generated@@509))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@132 $generated@@506 ($generated@@398 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@145) (= (type $generated@@513) $generated@@145)) (< ($generated@@510 $generated@@512) ($generated@@511 ($generated@@223 $generated@@512 $generated@@513))))
 :pattern ( ($generated@@223 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@145)) (< ($generated@@510 $generated@@515) ($generated@@511 ($generated@@223 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@223 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@224 $generated@@516 ($generated@@390 $generated@@517 $generated@@518))) (and (= ($generated@@276 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@516)) $generated@@516) ($generated@@132 ($generated@@362 ($generated@@289 $generated@@145 $generated@@145) $generated@@516) ($generated@@390 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@224 $generated@@516 ($generated@@390 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@145) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) ($generated@@224 $generated@@519 ($generated@@398 $generated@@520 $generated@@521))) (and (= ($generated@@276 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@519)) $generated@@519) ($generated@@132 ($generated@@362 ($generated@@307 $generated@@145 $generated@@145) $generated@@519) ($generated@@398 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@224 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@64) (= (type $generated@@523) $generated@@64)) (= (type $generated@@524) $generated@@145)) ($generated@@224 $generated@@524 ($generated@@135 $generated@@522 $generated@@523))) (and (= ($generated@@276 ($generated@@362 $generated@@136 $generated@@524)) $generated@@524) ($generated@@132 ($generated@@362 $generated@@136 $generated@@524) ($generated@@135 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@524 ($generated@@135 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 (type $generated@@525)))
 (not ($generated@@0 ($generated@@81 ($generated@@406 $generated@@526) $generated@@525))))
 :pattern ( (let (($generated@@526 (type $generated@@525)))
($generated@@81 ($generated@@406 $generated@@526) $generated@@525)))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@529 $generated@@530)) $generated@@62) (= ($generated@@527 ($generated@@135 $generated@@529 $generated@@530)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@529 $generated@@530))
)))
(assert  (=> (<= 0 $generated@@251) (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) ($generated@@76 $generated@@77 $generated@@78))) (or ($generated@@253 $generated@@531) (and (not (= 0 $generated@@251)) ($generated@@255 $generated@@532)))) (and $generated@@233 (= ($generated@@252 $generated@@531) (let (($generated@@533 $generated@@234))
$generated@@533))))
 :pattern ( ($generated@@252 $generated@@531) ($generated@@255 $generated@@532))
))))
(assert  (=> (<= 0 $generated@@251) (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (or ($generated@@253 $generated@@534) (and (not (= 0 $generated@@251)) ($generated@@255 $generated@@535)))) (and $generated@@233 (= ($generated@@252 $generated@@534) (let (($generated@@536 $generated@@234))
$generated@@536))))
 :weight 3
 :pattern ( ($generated@@252 $generated@@534) ($generated@@255 $generated@@535))
))))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@136) (= ($generated@@510 ($generated@@276 $generated@@537)) ($generated@@511 $generated@@537)))
 :pattern ( ($generated@@510 ($generated@@276 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) ($generated@@224 $generated@@538 ($generated@@75 0))) (and (= ($generated@@276 ($generated@@362 $generated@@2 $generated@@538)) $generated@@538) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@75 0)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@145) (= (type $generated@@540) $generated@@64)) ($generated@@224 $generated@@539 ($generated@@236 $generated@@540))) (and (= ($generated@@276 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@539)) $generated@@539) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@539) ($generated@@236 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@236 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@224 $generated@@541 ($generated@@241 $generated@@542))) (and (= ($generated@@276 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@4) $generated@@541) ($generated@@241 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@541 ($generated@@241 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) ($generated@@224 $generated@@543 ($generated@@150 $generated@@544))) (and (= ($generated@@276 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@362 ($generated@@76 $generated@@145 $generated@@2) $generated@@543) ($generated@@150 $generated@@544))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@150 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@64)) ($generated@@224 $generated@@545 ($generated@@472 $generated@@546))) (and (= ($generated@@276 ($generated@@362 ($generated@@270 $generated@@145) $generated@@545)) $generated@@545) ($generated@@132 ($generated@@362 ($generated@@270 $generated@@145) $generated@@545) ($generated@@472 $generated@@546))))
 :pattern ( ($generated@@224 $generated@@545 ($generated@@472 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@547) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@548) $generated@@64)) (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@547 ($generated@@150 $generated@@548) $generated@@549) (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@547 $generated@@550)))) ($generated@@256 $generated@@550 $generated@@548 $generated@@549))
 :pattern ( ($generated@@81 $generated@@547 $generated@@550))
))))
 :pattern ( ($generated@@74 $generated@@547 ($generated@@150 $generated@@548) $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@136) (= (type $generated@@552) $generated@@64)) (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@553) (and ($generated@@134 $generated@@551) (exists (($generated@@554 T@U) ) (!  (and (= (type $generated@@554) $generated@@64) ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
 :pattern ( ($generated@@74 $generated@@551 ($generated@@135 $generated@@552 $generated@@554) $generated@@553))
))))) ($generated@@256 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
 :pattern ( ($generated@@256 ($generated@@143 $generated@@551) $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@136) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@557) (and ($generated@@134 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@64) ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
 :pattern ( ($generated@@74 $generated@@555 ($generated@@135 $generated@@558 $generated@@556) $generated@@557))
))))) ($generated@@256 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@256 ($generated@@144 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) (= (type $generated@@560) $generated@@145)) (= ($generated@@223 ($generated@@247 $generated@@559) ($generated@@247 $generated@@560)) ($generated@@247 ($generated@@223 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@223 ($generated@@247 $generated@@559) ($generated@@247 $generated@@560)))
)))
(assert (forall (($generated@@561 Int) ) (! (= ($generated@@276 ($generated@@8 ($generated@@235 $generated@@561))) ($generated@@247 ($generated@@276 ($generated@@8 $generated@@561))))
 :pattern ( ($generated@@276 ($generated@@8 ($generated@@235 $generated@@561))))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@276 ($generated@@247 $generated@@562)) ($generated@@247 ($generated@@276 $generated@@562)))
 :pattern ( ($generated@@276 ($generated@@247 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@271 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@270 $generated@@564)) (= ($generated@@269 $generated@@563) 0)) (= $generated@@563 ($generated@@268 $generated@@564))))
 :pattern ( ($generated@@269 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@281 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@281 $generated@@565) ($generated ($generated@@81 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@281 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@2)) ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@3)) ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@4)) ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@430)) ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@145)) ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@270 $generated@@145)) (= (type $generated@@580) $generated@@64)) (= ($generated@@132 $generated@@579 ($generated@@472 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@579))) ($generated@@224 ($generated@@473 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@473 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@132 $generated@@579 ($generated@@472 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@270 $generated@@145)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@269 $generated@@583))) (< ($generated@@511 ($generated@@362 $generated@@136 ($generated@@473 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@511 ($generated@@362 $generated@@136 ($generated@@473 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@132 $generated@@585 ($generated@@390 $generated@@586 $generated@@587))) (and (and ($generated@@132 ($generated@@287 $generated@@585) ($generated@@236 $generated@@586)) ($generated@@132 ($generated@@330 $generated@@585) ($generated@@236 $generated@@587))) ($generated@@132 ($generated@@361 $generated@@585) ($generated@@236 ($generated@@135 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@132 $generated@@585 ($generated@@390 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@132 $generated@@588 ($generated@@398 $generated@@589 $generated@@590))) (and (and ($generated@@132 ($generated@@305 $generated@@588) ($generated@@241 $generated@@589)) ($generated@@132 ($generated@@341 $generated@@588) ($generated@@241 $generated@@590))) ($generated@@132 ($generated@@372 $generated@@588) ($generated@@241 ($generated@@135 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@132 $generated@@588 ($generated@@398 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@132 $generated@@591 $generated@@46))
 :pattern ( ($generated@@132 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@132 $generated@@592 $generated@@47))
 :pattern ( ($generated@@132 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@132 $generated@@593 $generated@@44))
 :pattern ( ($generated@@132 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@430) ($generated@@132 $generated@@594 $generated@@45))
 :pattern ( ($generated@@132 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@145) ($generated@@132 $generated@@595 $generated@@48))
 :pattern ( ($generated@@132 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@596) $generated@@145) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@599) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@603) $generated@@145)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@604  (=> (and (= ($generated@@235 2) ($generated@@235 2)) (= (ControlFlow 0 7) (- 0 6))) (or (and ($generated@@132 ($generated@@8 ($generated@@235 20)) $generated@@46) (= ($generated@@235 20) ($generated@@235 20))) (or (and ($generated@@132 ($generated@@8 ($generated@@235 0)) $generated@@46) (= ($generated@@235 0) ($generated@@235 20))) (exists (($generated@@605 Int) ) (= $generated@@605 ($generated@@235 20))))))))
(let (($generated@@606  (=> (and (and ($generated@@224 $generated@@596 $generated@@597) ($generated@@256 $generated@@596 $generated@@597 $generated@@598)) (= (ControlFlow 0 5) (- 0 4))) (= ($generated@@235 2) ($generated@@235 2)))))
(let (($generated@@607 true))
(let (($generated@@608  (and (and (=> (= (ControlFlow 0 8) 3) $generated@@607) (=> (= (ControlFlow 0 8) 5) $generated@@606)) (=> (= (ControlFlow 0 8) 7) $generated@@604))))
(let (($generated@@609 true))
(let (($generated@@610  (=> (= $generated@@599 ($generated@@211 $generated@@600 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@608) (=> (= (ControlFlow 0 9) 2) $generated@@609)))))
(let (($generated@@611 true))
(let (($generated@@612  (=> (= $generated@@601 ($generated@@156 $generated@@600 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@611) (=> (= (ControlFlow 0 10) 9) $generated@@610)))))
(let (($generated@@613  (=> (and ($generated@@255 $generated@@598) ($generated@@602 $generated@@598)) (=> (and (and (and ($generated@@224 $generated@@603 $generated@@597) ($generated@@256 $generated@@603 $generated@@597 $generated@@598)) true) (and (= 0 $generated@@251) (= (ControlFlow 0 11) 10))) $generated@@612))))
$generated@@613))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
