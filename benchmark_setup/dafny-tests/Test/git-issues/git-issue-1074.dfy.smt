(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@T T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@472 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@523 (T@U Int) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@72)) (= (type $generated@@67) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert  (and (and (= ($generated@@1 $generated@@141) 14) (= ($generated@@1 $generated@@143) 15)) (forall (($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@142 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@141) (= (type $generated@@146) $generated@@141)) (and ($generated@@140 $generated@@145) ($generated@@140 $generated@@146))) (= ($generated@@139 $generated@@145 $generated@@146) (= ($generated@@142 $generated@@145) ($generated@@142 $generated@@146))))
 :pattern ( ($generated@@139 $generated@@145 $generated@@146) ($generated@@140 $generated@@145))
 :pattern ( ($generated@@139 $generated@@145 $generated@@146) ($generated@@140 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= (type $generated@@148) $generated@@2) ($generated@@147 $generated@@148 ($generated@@82 0)))
 :pattern ( ($generated@@147 $generated@@148 ($generated@@82 0)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@151 $generated@@152)) $generated@@71)
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@71) (= (type $generated@@154) $generated@@71)) (= (type $generated@@155) $generated@@141)) ($generated@@147 $generated@@155 ($generated@@150 $generated@@153 $generated@@154))) ($generated@@149 $generated@@155))
 :pattern ( ($generated@@149 $generated@@155) ($generated@@147 $generated@@155 ($generated@@150 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@143)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@143)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@141) (= (type $generated@@162) $generated@@141)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@75)
 :pattern ( ($generated@@163 $generated@@165))
)) (= (type $generated@@164) $generated@@141)))
(assert (= ($generated@@163 $generated@@164) $generated@@65))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@71)
 :pattern ( ($generated@@166 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and (= (type $generated@@169) ($generated@@83 $generated@@143 $generated@@2)) (= (type $generated@@170) $generated@@71)) ($generated@@147 $generated@@169 ($generated@@166 $generated@@170))) ($generated@@167 $generated@@169))
 :pattern ( ($generated@@147 $generated@@169 ($generated@@166 $generated@@170)))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@71)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@71) (= (type $generated@@175) $generated@@141)) ($generated@@147 $generated@@175 ($generated@@172 $generated@@174))) ($generated@@171 $generated@@175))
 :pattern ( ($generated@@171 $generated@@175) ($generated@@147 $generated@@175 ($generated@@172 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 16)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@84 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@74 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@84) (= (type $generated@@226) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@227) ($generated@@73 $generated@@4))) (= (type $generated@@229) $generated@@84)) (= (type $generated@@230) ($generated@@73 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= (type ($generated@@232 $generated@@234 $generated@@235)) $generated@@71)
 :pattern ( ($generated@@232 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@236) $generated@@71) (= (type $generated@@237) $generated@@71)) (= (type $generated@@238) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@233 $generated@@238)) ($generated@@81 $generated@@164 ($generated@@232 $generated@@236 $generated@@237) $generated@@238))
 :pattern ( ($generated@@81 $generated@@164 ($generated@@232 $generated@@236 $generated@@237) $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@71) (= (type $generated@@240) $generated@@71)) ($generated@@147 $generated@@164 ($generated@@232 $generated@@239 $generated@@240)))
 :pattern ( ($generated@@147 $generated@@164 ($generated@@232 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@241 $generated@@243 $generated@@244)) $generated@@141)
 :pattern ( ($generated@@241 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (= (type $generated@@245) $generated@@71) (= (type $generated@@246) $generated@@71)) (= (type $generated@@247) $generated@@143)) (= (type $generated@@248) $generated@@143)) (= ($generated@@147 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246))  (and ($generated@@242 $generated@@247 $generated@@245) ($generated@@242 $generated@@248 $generated@@246))))
 :pattern ( ($generated@@147 ($generated@@241 $generated@@247 $generated@@248) ($generated@@150 $generated@@245 $generated@@246)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@141) (= (type $generated@@250) $generated@@141)) (= ($generated@@156 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@156 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) (= (type $generated@@253) $generated@@141)) (= ($generated@@251 $generated@@252 $generated@@253) (= $generated@@252 $generated@@253)))
 :pattern ( ($generated@@251 $generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@141) (= (type $generated@@255) $generated@@141)) (= ($generated@@139 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@139 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@83 $generated@@143 $generated@@4)) (= (type $generated@@259) $generated@@71)) (= ($generated@@147 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@143) ($generated@@0 ($generated@@88 $generated@@258 $generated@@260))) ($generated@@242 $generated@@260 $generated@@259))
 :pattern ( ($generated@@88 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@147 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@71)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@83 $generated@@143 $generated@@4)) (= (type $generated@@264) $generated@@71)) (= ($generated@@147 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@143) ($generated@@0 ($generated@@88 $generated@@263 $generated@@265))) ($generated@@242 $generated@@265 $generated@@264))
 :pattern ( ($generated@@88 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@147 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@141) (= (type $generated@@272) $generated@@141)) (and ($generated@@270 $generated@@271) ($generated@@270 $generated@@272))) (= ($generated@@139 $generated@@271 $generated@@272) true))
 :pattern ( ($generated@@139 $generated@@271 $generated@@272) ($generated@@270 $generated@@271))
 :pattern ( ($generated@@139 $generated@@271 $generated@@272) ($generated@@270 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@71) (= (type $generated@@275) $generated@@71)) (= (type $generated@@276) $generated@@143)) (= (type $generated@@277) $generated@@143)) (= (type $generated@@278) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@233 $generated@@278)) (= ($generated@@81 ($generated@@241 $generated@@276 $generated@@277) ($generated@@150 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@81 ($generated@@241 $generated@@276 $generated@@277) ($generated@@150 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@141) (= ($generated@@149 $generated@@279) (= ($generated@@163 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@149 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@141) (= ($generated@@171 $generated@@280) (= ($generated@@163 $generated@@280) $generated@@63)))
 :pattern ( ($generated@@171 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@141) (= ($generated@@270 $generated@@281) (= ($generated@@163 $generated@@281) $generated@@65)))
 :pattern ( ($generated@@270 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@141) (= ($generated@@140 $generated@@282) (= ($generated@@163 $generated@@282) $generated@@67)))
 :pattern ( ($generated@@140 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@141) ($generated@@149 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@143) (= (type $generated@@285) $generated@@143)) (= $generated@@283 ($generated@@241 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@149 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 17)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@141) ($generated@@270 $generated@@294)) (= $generated@@294 $generated@@164))
 :pattern ( ($generated@@270 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@143)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@297) $generated@@141) (= (type $generated@@298) $generated@@141)) true) (= ($generated@@251 $generated@@297 $generated@@298) (= ($generated@@295 $generated@@297) ($generated@@295 $generated@@298))))
 :pattern ( ($generated@@251 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@141)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@141) ($generated@@171 $generated@@301)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@143) (= $generated@@301 ($generated@@299 $generated@@302)))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@171 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@141)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@141) ($generated@@140 $generated@@305)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@143) (= $generated@@305 ($generated@@303 $generated@@306)))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@140 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@143)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@71) (= (type $generated@@311) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@273 ($generated@@307 $generated@@309) $generated@@310 $generated@@311) ($generated@@81 $generated@@309 $generated@@310 $generated@@311)))
 :pattern ( ($generated@@273 ($generated@@307 $generated@@309) $generated@@310 $generated@@311))
)))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@83 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@86 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@83 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@88 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (= (type ($generated@@318 $generated@@319)) $generated@@76)
 :pattern ( ($generated@@318 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@71) (and (= ($generated@@79 ($generated@@172 $generated@@320)) $generated@@64) (= ($generated@@318 ($generated@@172 $generated@@320)) $generated@@69)))
 :pattern ( ($generated@@172 $generated@@320))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 18)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@83 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@83 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@83 $generated@@358 $generated@@2)) (= ($generated@@167 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@312 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@167 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@325 (type $generated@@360))))
(let (($generated@@362 ($generated@@324 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@323 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@322 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@321 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@325 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@83 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@325 (type $generated@@367))))
(let (($generated@@369 ($generated@@324 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@323 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@322 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@343 (type $generated@@371))))
(let (($generated@@373 ($generated@@342 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@341 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@340 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@339 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@343 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@83 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@343 (type $generated@@378))))
(let (($generated@@380 ($generated@@342 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@341 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@340 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@83 $generated@@143 $generated@@2)) (= (type $generated@@383) $generated@@71)) (= ($generated@@147 $generated@@382 ($generated@@166 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@143) (< 0 ($generated ($generated@@88 $generated@@382 $generated@@384)))) ($generated@@242 $generated@@384 $generated@@383))
 :pattern ( ($generated@@88 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@147 $generated@@382 ($generated@@166 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) $generated@@71) (= (type $generated@@386) $generated@@143)) (= (type $generated@@387) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@233 $generated@@387)) (= ($generated@@81 ($generated@@299 $generated@@386) ($generated@@172 $generated@@385) $generated@@387) ($generated@@273 $generated@@386 $generated@@385 $generated@@387)))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@386) ($generated@@172 $generated@@385) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@141) ($generated@@388 $generated@@389)) (or ($generated@@270 $generated@@389) ($generated@@140 $generated@@389)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (= (type $generated@@390) ($generated@@83 $generated@@143 $generated@@4)) (= (type $generated@@391) $generated@@71)) (= (type $generated@@392) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@390 ($generated@@256 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@143) ($generated@@0 ($generated@@88 $generated@@390 $generated@@393))) ($generated@@273 $generated@@393 $generated@@391 $generated@@392))
 :pattern ( ($generated@@88 $generated@@390 $generated@@393))
))))
 :pattern ( ($generated@@81 $generated@@390 ($generated@@256 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (and (= (type $generated@@394) ($generated@@83 $generated@@143 $generated@@4)) (= (type $generated@@395) $generated@@71)) (= (type $generated@@396) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@394 ($generated@@261 $generated@@395) $generated@@396) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@143) ($generated@@0 ($generated@@88 $generated@@394 $generated@@397))) ($generated@@273 $generated@@397 $generated@@395 $generated@@396))
 :pattern ( ($generated@@88 $generated@@394 $generated@@397))
))))
 :pattern ( ($generated@@81 $generated@@394 ($generated@@261 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
(= ($generated ($generated@@88 ($generated@@313 $generated@@399) $generated@@398)) 0))
 :pattern ( (let (($generated@@399 (type $generated@@398)))
($generated@@88 ($generated@@313 $generated@@399) $generated@@398)))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) $generated@@71) (= (type $generated@@401) $generated@@71)) (= (type $generated@@402) $generated@@141)) ($generated@@147 $generated@@402 ($generated@@232 $generated@@400 $generated@@401))) (or ($generated@@270 $generated@@402) ($generated@@140 $generated@@402)))
 :pattern ( ($generated@@140 $generated@@402) ($generated@@147 $generated@@402 ($generated@@232 $generated@@400 $generated@@401)))
 :pattern ( ($generated@@270 $generated@@402) ($generated@@147 $generated@@402 ($generated@@232 $generated@@400 $generated@@401)))
)))
(assert  (and (and (forall (($generated@@406 T@U) ) (! (= (type ($generated@@403 $generated@@406)) ($generated@@83 $generated@@143 $generated@@4))
 :pattern ( ($generated@@403 $generated@@406))
)) (forall (($generated@@407 T@T) ($generated@@408 T@U) ) (! (= (type ($generated@@404 $generated@@407 $generated@@408)) $generated@@407)
 :pattern ( ($generated@@404 $generated@@407 $generated@@408))
))) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@325 (type $generated@@409))))
(let (($generated@@411 ($generated@@324 (type $generated@@409))))
(= (type ($generated@@405 $generated@@409)) ($generated@@83 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@405 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@323 $generated@@143 $generated@@143)) (= (type $generated@@413) $generated@@143)) (= ($generated@@0 ($generated@@88 ($generated@@403 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@412) ($generated@@157 ($generated@@404 $generated@@141 $generated@@413)))) (= ($generated@@88 ($generated@@405 $generated@@412) ($generated@@157 ($generated@@404 $generated@@141 $generated@@413))) ($generated@@158 ($generated@@404 $generated@@141 $generated@@413))))))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@83 $generated@@143 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@343 (type $generated@@417))))
(let (($generated@@419 ($generated@@342 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@83 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@421) $generated@@143)) (= ($generated@@0 ($generated@@88 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@420) ($generated@@157 ($generated@@404 $generated@@141 $generated@@421)))) (= ($generated@@88 ($generated@@415 $generated@@420) ($generated@@157 ($generated@@404 $generated@@141 $generated@@421))) ($generated@@158 ($generated@@404 $generated@@141 $generated@@421))))))
 :pattern ( ($generated@@88 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@324 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@323 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@88 ($generated@@364 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@88 ($generated@@321 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@88 ($generated@@405 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@422) $generated@@426))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@88 ($generated@@364 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@342 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@341 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@88 ($generated@@375 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@88 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@427) $generated@@431))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@88 ($generated@@375 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@71)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@323 $generated@@143 $generated@@143)) (= (type $generated@@436) $generated@@71)) (= (type $generated@@437) $generated@@71)) (= (type $generated@@438) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@143) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@435) $generated@@439))) (and ($generated@@273 ($generated@@88 ($generated@@405 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@273 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@435) $generated@@439))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@81 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@71)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@444) $generated@@71)) (= (type $generated@@445) $generated@@71)) (= (type $generated@@446) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@143) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@443) $generated@@447))) (and ($generated@@273 ($generated@@88 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@273 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@81 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@83 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@343 (type $generated@@450))))
(let (($generated@@452 ($generated@@342 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@341 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@340 $generated@@452 $generated@@451)) (= ($generated@@339 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@339 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@343 (type $generated@@453))))
(let (($generated@@455 ($generated@@342 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@341 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@340 $generated@@455 $generated@@454)) (= ($generated@@375 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@375 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@343 (type $generated@@456))))
(let (($generated@@458 ($generated@@342 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@341 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@340 $generated@@458 $generated@@457)) (= ($generated@@414 $generated@@456) ($generated@@448 $generated@@143))))))
 :pattern ( ($generated@@414 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@325 (type $generated@@459))))
(let (($generated@@461 ($generated@@324 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@323 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@322 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@143) (= (type $generated@@463) $generated@@143)) ($generated@@0 ($generated@@88 ($generated@@403 $generated@@459) ($generated@@307 ($generated@@241 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@403 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@343 (type $generated@@464))))
(let (($generated@@466 ($generated@@342 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@341 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@340 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@143) (= (type $generated@@468) $generated@@143)) ($generated@@0 ($generated@@88 ($generated@@414 $generated@@464) ($generated@@307 ($generated@@241 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@414 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@143) ($generated@@242 $generated@@469 $generated@@46)) (and (= ($generated@@307 ($generated@@404 $generated@@2 $generated@@469)) $generated@@469) ($generated@@147 ($generated@@404 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@242 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@143) ($generated@@242 $generated@@470 $generated@@47)) (and (= ($generated@@307 ($generated@@404 $generated@@3 $generated@@470)) $generated@@470) ($generated@@147 ($generated@@404 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@242 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@143) ($generated@@242 $generated@@471 $generated@@44)) (and (= ($generated@@307 ($generated@@404 $generated@@4 $generated@@471)) $generated@@471) ($generated@@147 ($generated@@404 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@242 $generated@@471 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@472) 20))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@143) ($generated@@242 $generated@@473 $generated@@45)) (and (= ($generated@@307 ($generated@@404 $generated@@472 $generated@@473)) $generated@@473) ($generated@@147 ($generated@@404 $generated@@472 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@242 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@71) (= ($generated@@242 ($generated@@307 $generated@@474) $generated@@475) ($generated@@147 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@242 ($generated@@307 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@86 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@83 $generated@@477 $generated@@2)) (<= 0 ($generated@@312 $generated@@476))))
 :pattern ( ($generated@@312 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@289 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@288 $generated@@479)) (<= 0 ($generated@@287 $generated@@478))))
 :pattern ( ($generated@@287 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@71)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@71) (= (type $generated@@483) $generated@@71)) (= ($generated@@480 ($generated@@432 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@432 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@71)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@71) (= (type $generated@@487) $generated@@71)) (= ($generated@@484 ($generated@@432 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@432 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@71) (= (type $generated@@489) $generated@@71)) (= ($generated@@79 ($generated@@432 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@71)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@71) (= (type $generated@@493) $generated@@71)) (= ($generated@@490 ($generated@@440 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@440 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@71)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@71) (= (type $generated@@497) $generated@@71)) (= ($generated@@494 ($generated@@440 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@440 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@71) (= (type $generated@@499) $generated@@71)) (= ($generated@@79 ($generated@@440 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@143) (= (type $generated@@501) $generated@@143)) (= ($generated@@163 ($generated@@241 $generated@@500 $generated@@501)) $generated@@61))
 :pattern ( ($generated@@241 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@71)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@71) (= (type $generated@@505) $generated@@71)) (= ($generated@@502 ($generated@@150 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@150 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@71)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@71) (= (type $generated@@509) $generated@@71)) (= ($generated@@506 ($generated@@150 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@150 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@143) (= (type $generated@@511) $generated@@143)) (= ($generated@@157 ($generated@@241 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@241 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@143) (= (type $generated@@513) $generated@@143)) (= ($generated@@158 ($generated@@241 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@241 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@71)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@71) (= (type $generated@@517) $generated@@71)) (= ($generated@@514 ($generated@@232 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@232 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@71)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@71) (= (type $generated@@521) $generated@@71)) (= ($generated@@518 ($generated@@232 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@232 $generated@@520 $generated@@521))
)))
(assert  (and (forall (($generated@@524 T@U) ) (! (= (type ($generated@@522 $generated@@524)) $generated@@71)
 :pattern ( ($generated@@522 $generated@@524))
)) (forall (($generated@@525 T@U) ($generated@@526 Int) ) (! (let (($generated@@527 ($generated@@289 (type $generated@@525))))
(= (type ($generated@@523 $generated@@525 $generated@@526)) $generated@@527))
 :pattern ( ($generated@@523 $generated@@525 $generated@@526))
))))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@288 $generated@@143)) (= (type $generated@@529) $generated@@71)) (= (type $generated@@530) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@528 ($generated@@522 $generated@@529) $generated@@530) (forall (($generated@@531 Int) ) (!  (=> (and (<= 0 $generated@@531) (< $generated@@531 ($generated@@287 $generated@@528))) ($generated@@273 ($generated@@523 $generated@@528 $generated@@531) $generated@@529 $generated@@530))
 :pattern ( ($generated@@523 $generated@@528 $generated@@531))
))))
 :pattern ( ($generated@@81 $generated@@528 ($generated@@522 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@71) (= (type $generated@@533) $generated@@71)) (= (type $generated@@534) $generated@@143)) (= ($generated@@147 ($generated@@303 $generated@@534) ($generated@@232 $generated@@532 $generated@@533)) ($generated@@242 $generated@@534 $generated@@533)))
 :pattern ( ($generated@@147 ($generated@@303 $generated@@534) ($generated@@232 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@536 Int) ) (! (= ($generated@@535 ($generated@@82 $generated@@536)) $generated@@536)
 :pattern ( ($generated@@82 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@71)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@71) (= ($generated@@537 ($generated@@256 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@256 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@71) (= ($generated@@79 ($generated@@256 $generated@@540)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@71) (= ($generated@@541 ($generated@@261 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@261 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@71) (= ($generated@@79 ($generated@@261 $generated@@544)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@71)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@71) (= ($generated@@545 ($generated@@166 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@166 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@71) (= ($generated@@79 ($generated@@166 $generated@@548)) $generated@@56))
 :pattern ( ($generated@@166 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@71) (= ($generated@@549 ($generated@@522 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@522 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@71) (= ($generated@@79 ($generated@@522 $generated@@552)) $generated@@57))
 :pattern ( ($generated@@522 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@143) (= ($generated@@163 ($generated@@299 $generated@@553)) $generated@@63))
 :pattern ( ($generated@@299 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@71)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@554 ($generated@@172 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@172 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@143) (= ($generated@@295 ($generated@@299 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@299 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@143) (= ($generated@@163 ($generated@@303 $generated@@558)) $generated@@67))
 :pattern ( ($generated@@303 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@143) (= ($generated@@142 ($generated@@303 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@303 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@404 $generated@@561 ($generated@@307 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@307 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@323 $generated@@143 $generated@@143)) (= (type $generated@@563) $generated@@71)) (= (type $generated@@564) $generated@@71)) (= ($generated@@147 $generated@@562 ($generated@@432 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@143) ($generated@@0 ($generated@@88 ($generated@@321 $generated@@562) $generated@@565))) (and ($generated@@242 ($generated@@88 ($generated@@405 $generated@@562) $generated@@565) $generated@@564) ($generated@@242 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@562) $generated@@565))
 :pattern ( ($generated@@88 ($generated@@321 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@147 $generated@@562 ($generated@@432 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@567) $generated@@71)) (= (type $generated@@568) $generated@@71)) (= ($generated@@147 $generated@@566 ($generated@@440 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@143) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@566) $generated@@569))) (and ($generated@@242 ($generated@@88 ($generated@@415 $generated@@566) $generated@@569) $generated@@568) ($generated@@242 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@88 ($generated@@415 $generated@@566) $generated@@569))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@147 $generated@@566 ($generated@@440 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@71) (= (type $generated@@571) $generated@@143)) (= ($generated@@147 ($generated@@299 $generated@@571) ($generated@@172 $generated@@570)) ($generated@@242 $generated@@571 $generated@@570)))
 :pattern ( ($generated@@147 ($generated@@299 $generated@@571) ($generated@@172 $generated@@570)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@143) (= (type $generated@@575) $generated@@143)) (< ($generated@@572 $generated@@574) ($generated@@573 ($generated@@241 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@241 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@143) (= (type $generated@@577) $generated@@143)) (< ($generated@@572 $generated@@577) ($generated@@573 ($generated@@241 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@241 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@143) (= (type $generated@@579) $generated@@71)) (= (type $generated@@580) $generated@@71)) ($generated@@242 $generated@@578 ($generated@@432 $generated@@579 $generated@@580))) (and (= ($generated@@307 ($generated@@404 ($generated@@323 $generated@@143 $generated@@143) $generated@@578)) $generated@@578) ($generated@@147 ($generated@@404 ($generated@@323 $generated@@143 $generated@@143) $generated@@578) ($generated@@432 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@242 $generated@@578 ($generated@@432 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@143) (= (type $generated@@582) $generated@@71)) (= (type $generated@@583) $generated@@71)) ($generated@@242 $generated@@581 ($generated@@440 $generated@@582 $generated@@583))) (and (= ($generated@@307 ($generated@@404 ($generated@@341 $generated@@143 $generated@@143) $generated@@581)) $generated@@581) ($generated@@147 ($generated@@404 ($generated@@341 $generated@@143 $generated@@143) $generated@@581) ($generated@@440 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@242 $generated@@581 ($generated@@440 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@71) (= (type $generated@@585) $generated@@71)) (= (type $generated@@586) $generated@@143)) ($generated@@242 $generated@@586 ($generated@@150 $generated@@584 $generated@@585))) (and (= ($generated@@307 ($generated@@404 $generated@@141 $generated@@586)) $generated@@586) ($generated@@147 ($generated@@404 $generated@@141 $generated@@586) ($generated@@150 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@242 $generated@@586 ($generated@@150 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@71) (= (type $generated@@588) $generated@@71)) (= (type $generated@@589) $generated@@143)) ($generated@@242 $generated@@589 ($generated@@232 $generated@@587 $generated@@588))) (and (= ($generated@@307 ($generated@@404 $generated@@141 $generated@@589)) $generated@@589) ($generated@@147 ($generated@@404 $generated@@141 $generated@@589) ($generated@@232 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@242 $generated@@589 ($generated@@232 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@143) (< ($generated@@572 $generated@@590) ($generated@@573 ($generated@@299 $generated@@590))))
 :pattern ( ($generated@@299 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@143) (< ($generated@@572 $generated@@591) ($generated@@573 ($generated@@303 $generated@@591))))
 :pattern ( ($generated@@303 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@141) (= (type $generated@@593) $generated@@71)) (= (type $generated@@594) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@233 $generated@@594) (and ($generated@@171 $generated@@592) ($generated@@81 $generated@@592 ($generated@@172 $generated@@593) $generated@@594)))) ($generated@@273 ($generated@@295 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@273 ($generated@@295 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 (type $generated@@595)))
 (not ($generated@@0 ($generated@@88 ($generated@@448 $generated@@596) $generated@@595))))
 :pattern ( (let (($generated@@596 (type $generated@@595)))
($generated@@88 ($generated@@448 $generated@@596) $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@71) (= (type $generated@@598) $generated@@71)) (and (= ($generated@@79 ($generated@@150 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@318 ($generated@@150 $generated@@597 $generated@@598)) $generated@@68)))
 :pattern ( ($generated@@150 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@71) (= (type $generated@@600) $generated@@71)) (and (= ($generated@@79 ($generated@@232 $generated@@599 $generated@@600)) $generated@@66) (= ($generated@@318 ($generated@@232 $generated@@599 $generated@@600)) $generated@@70)))
 :pattern ( ($generated@@232 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@141) (= ($generated@@572 ($generated@@307 $generated@@601)) ($generated@@573 $generated@@601)))
 :pattern ( ($generated@@572 ($generated@@307 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@143) ($generated@@242 $generated@@602 ($generated@@82 0))) (and (= ($generated@@307 ($generated@@404 $generated@@2 $generated@@602)) $generated@@602) ($generated@@147 ($generated@@404 ($generated@@83 $generated@@143 $generated@@4) $generated@@602) ($generated@@82 0))))
 :pattern ( ($generated@@242 $generated@@602 ($generated@@82 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@143) (= (type $generated@@604) $generated@@71)) ($generated@@242 $generated@@603 ($generated@@256 $generated@@604))) (and (= ($generated@@307 ($generated@@404 ($generated@@83 $generated@@143 $generated@@4) $generated@@603)) $generated@@603) ($generated@@147 ($generated@@404 ($generated@@83 $generated@@143 $generated@@4) $generated@@603) ($generated@@256 $generated@@604))))
 :pattern ( ($generated@@242 $generated@@603 ($generated@@256 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@143) (= (type $generated@@606) $generated@@71)) ($generated@@242 $generated@@605 ($generated@@261 $generated@@606))) (and (= ($generated@@307 ($generated@@404 ($generated@@83 $generated@@143 $generated@@4) $generated@@605)) $generated@@605) ($generated@@147 ($generated@@404 ($generated@@83 $generated@@143 $generated@@4) $generated@@605) ($generated@@261 $generated@@606))))
 :pattern ( ($generated@@242 $generated@@605 ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@143) (= (type $generated@@608) $generated@@71)) ($generated@@242 $generated@@607 ($generated@@166 $generated@@608))) (and (= ($generated@@307 ($generated@@404 ($generated@@83 $generated@@143 $generated@@2) $generated@@607)) $generated@@607) ($generated@@147 ($generated@@404 ($generated@@83 $generated@@143 $generated@@2) $generated@@607) ($generated@@166 $generated@@608))))
 :pattern ( ($generated@@242 $generated@@607 ($generated@@166 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@143) (= (type $generated@@610) $generated@@71)) ($generated@@242 $generated@@609 ($generated@@522 $generated@@610))) (and (= ($generated@@307 ($generated@@404 ($generated@@288 $generated@@143) $generated@@609)) $generated@@609) ($generated@@147 ($generated@@404 ($generated@@288 $generated@@143) $generated@@609) ($generated@@522 $generated@@610))))
 :pattern ( ($generated@@242 $generated@@609 ($generated@@522 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (and (= (type $generated@@611) $generated@@71) (= (type $generated@@612) $generated@@143)) ($generated@@242 $generated@@612 ($generated@@172 $generated@@611))) (and (= ($generated@@307 ($generated@@404 $generated@@141 $generated@@612)) $generated@@612) ($generated@@147 ($generated@@404 $generated@@141 $generated@@612) ($generated@@172 $generated@@611))))
 :pattern ( ($generated@@242 $generated@@612 ($generated@@172 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@613) ($generated@@83 $generated@@143 $generated@@2)) (= (type $generated@@614) $generated@@71)) (= (type $generated@@615) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@613 ($generated@@166 $generated@@614) $generated@@615) (forall (($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@143) (< 0 ($generated ($generated@@88 $generated@@613 $generated@@616)))) ($generated@@273 $generated@@616 $generated@@614 $generated@@615))
 :pattern ( ($generated@@88 $generated@@613 $generated@@616))
))))
 :pattern ( ($generated@@81 $generated@@613 ($generated@@166 $generated@@614) $generated@@615))
)))
(assert (= $generated@@164 ($generated@@266 $generated@@164)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@141) (= (type $generated@@618) $generated@@71)) (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@233 $generated@@619) (and ($generated@@149 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@71) ($generated@@81 $generated@@617 ($generated@@150 $generated@@618 $generated@@620) $generated@@619))
 :pattern ( ($generated@@81 $generated@@617 ($generated@@150 $generated@@618 $generated@@620) $generated@@619))
))))) ($generated@@273 ($generated@@157 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@273 ($generated@@157 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@141) (= (type $generated@@622) $generated@@71)) (= (type $generated@@623) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@233 $generated@@623) (and ($generated@@149 $generated@@621) (exists (($generated@@624 T@U) ) (!  (and (= (type $generated@@624) $generated@@71) ($generated@@81 $generated@@621 ($generated@@150 $generated@@624 $generated@@622) $generated@@623))
 :pattern ( ($generated@@81 $generated@@621 ($generated@@150 $generated@@624 $generated@@622) $generated@@623))
))))) ($generated@@273 ($generated@@158 $generated@@621) $generated@@622 $generated@@623))
 :pattern ( ($generated@@273 ($generated@@158 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@141) (= (type $generated@@626) $generated@@71)) (= (type $generated@@627) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@233 $generated@@627) (and ($generated@@140 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@71) ($generated@@81 $generated@@625 ($generated@@232 $generated@@628 $generated@@626) $generated@@627))
 :pattern ( ($generated@@81 $generated@@625 ($generated@@232 $generated@@628 $generated@@626) $generated@@627))
))))) ($generated@@273 ($generated@@142 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@273 ($generated@@142 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@629) $generated@@71) (= (type $generated@@630) $generated@@71)) (= (type $generated@@631) $generated@@143)) (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@233 $generated@@632)) (= ($generated@@81 ($generated@@303 $generated@@631) ($generated@@232 $generated@@629 $generated@@630) $generated@@632) ($generated@@273 $generated@@631 $generated@@630 $generated@@632)))
 :pattern ( ($generated@@81 ($generated@@303 $generated@@631) ($generated@@232 $generated@@629 $generated@@630) $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@143) (= (type $generated@@634) $generated@@143)) (= ($generated@@241 ($generated@@266 $generated@@633) ($generated@@266 $generated@@634)) ($generated@@266 ($generated@@241 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@241 ($generated@@266 $generated@@633) ($generated@@266 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@143) (= ($generated@@299 ($generated@@266 $generated@@635)) ($generated@@266 ($generated@@299 $generated@@635))))
 :pattern ( ($generated@@299 ($generated@@266 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@143) (= ($generated@@303 ($generated@@266 $generated@@636)) ($generated@@266 ($generated@@303 $generated@@636))))
 :pattern ( ($generated@@303 ($generated@@266 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (! (= ($generated@@307 ($generated@@266 $generated@@637)) ($generated@@266 ($generated@@307 $generated@@637)))
 :pattern ( ($generated@@307 ($generated@@266 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@289 (type $generated@@638))))
 (=> (and (= (type $generated@@638) ($generated@@288 $generated@@639)) (= ($generated@@287 $generated@@638) 0)) (= $generated@@638 ($generated@@286 $generated@@639))))
 :pattern ( ($generated@@287 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@641)))
 (=> (and (and (= (type $generated@@640) ($generated@@83 $generated@@643 $generated@@2)) (= (type $generated@@642) $generated@@2)) (<= 0 ($generated $generated@@642))) (= ($generated@@312 ($generated@@89 $generated@@640 $generated@@641 $generated@@642)) (+ (- ($generated@@312 $generated@@640) ($generated ($generated@@88 $generated@@640 $generated@@641))) ($generated $generated@@642)))))
 :pattern ( ($generated@@312 ($generated@@89 $generated@@640 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@645) $generated@@2)) ($generated@@81 $generated@@645 $generated@@46 $generated@@644))
 :pattern ( ($generated@@81 $generated@@645 $generated@@46 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@647) $generated@@3)) ($generated@@81 $generated@@647 $generated@@47 $generated@@646))
 :pattern ( ($generated@@81 $generated@@647 $generated@@47 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@649) $generated@@4)) ($generated@@81 $generated@@649 $generated@@44 $generated@@648))
 :pattern ( ($generated@@81 $generated@@649 $generated@@44 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@651) $generated@@472)) ($generated@@81 $generated@@651 $generated@@45 $generated@@650))
 :pattern ( ($generated@@81 $generated@@651 $generated@@45 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@653) $generated@@143)) ($generated@@81 $generated@@653 $generated@@48 $generated@@652))
 :pattern ( ($generated@@81 $generated@@653 $generated@@48 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@288 $generated@@143)) (= (type $generated@@655) $generated@@71)) (= ($generated@@147 $generated@@654 ($generated@@522 $generated@@655)) (forall (($generated@@656 Int) ) (!  (=> (and (<= 0 $generated@@656) (< $generated@@656 ($generated@@287 $generated@@654))) ($generated@@242 ($generated@@523 $generated@@654 $generated@@656) $generated@@655))
 :pattern ( ($generated@@523 $generated@@654 $generated@@656))
))))
 :pattern ( ($generated@@147 $generated@@654 ($generated@@522 $generated@@655)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 Int) ) (!  (=> (= (type $generated@@658) ($generated@@288 $generated@@143)) (=> (and (<= 0 $generated@@659) (< $generated@@659 ($generated@@287 $generated@@658))) (< ($generated@@573 ($generated@@404 $generated@@141 ($generated@@523 $generated@@658 $generated@@659))) ($generated@@657 $generated@@658))))
 :pattern ( ($generated@@573 ($generated@@404 $generated@@141 ($generated@@523 $generated@@658 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (and (and (= (type $generated@@660) ($generated@@323 $generated@@143 $generated@@143)) (= (type $generated@@661) $generated@@71)) (= (type $generated@@662) $generated@@71)) ($generated@@147 $generated@@660 ($generated@@432 $generated@@661 $generated@@662))) (and (and ($generated@@147 ($generated@@321 $generated@@660) ($generated@@256 $generated@@661)) ($generated@@147 ($generated@@364 $generated@@660) ($generated@@256 $generated@@662))) ($generated@@147 ($generated@@403 $generated@@660) ($generated@@256 ($generated@@150 $generated@@661 $generated@@662)))))
 :pattern ( ($generated@@147 $generated@@660 ($generated@@432 $generated@@661 $generated@@662)))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (and (and (= (type $generated@@663) ($generated@@341 $generated@@143 $generated@@143)) (= (type $generated@@664) $generated@@71)) (= (type $generated@@665) $generated@@71)) ($generated@@147 $generated@@663 ($generated@@440 $generated@@664 $generated@@665))) (and (and ($generated@@147 ($generated@@339 $generated@@663) ($generated@@261 $generated@@664)) ($generated@@147 ($generated@@375 $generated@@663) ($generated@@261 $generated@@665))) ($generated@@147 ($generated@@414 $generated@@663) ($generated@@261 ($generated@@150 $generated@@664 $generated@@665)))))
 :pattern ( ($generated@@147 $generated@@663 ($generated@@440 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@666 T@U) ) (!  (=> (= (type $generated@@666) $generated@@2) ($generated@@147 $generated@@666 $generated@@46))
 :pattern ( ($generated@@147 $generated@@666 $generated@@46))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@3) ($generated@@147 $generated@@667 $generated@@47))
 :pattern ( ($generated@@147 $generated@@667 $generated@@47))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@4) ($generated@@147 $generated@@668 $generated@@44))
 :pattern ( ($generated@@147 $generated@@668 $generated@@44))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@472) ($generated@@147 $generated@@669 $generated@@45))
 :pattern ( ($generated@@147 $generated@@669 $generated@@45))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@143) ($generated@@147 $generated@@670 $generated@@48))
 :pattern ( ($generated@@147 $generated@@670 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 (T@U) Bool)
(declare-fun $generated@@677 () Int)
(assert  (and (and (and (and (= (type $generated@@671) ($generated@@178 $generated@@84 $generated@@4)) (= (type $generated@@672) $generated@@84)) (= (type $generated@@673) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@674) $generated@@141)) (= (type $generated@@675) $generated@@141)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@678  (=> (and (and (= $generated@@671 ($generated@@177 $generated@@672 $generated@@673 $generated@@60 false)) (= $generated@@674 $generated@@675)) (and ($generated@@147 $generated@@674 ($generated@@232 $generated@@46 ($generated@@172 $generated@@47))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@140 $generated@@674))))
(let (($generated@@679  (=> (and ($generated@@233 $generated@@673) ($generated@@676 $generated@@673)) (=> (and (and (and (and ($generated@@147 $generated@@675 ($generated@@232 $generated@@46 ($generated@@172 $generated@@47))) ($generated@@81 $generated@@675 ($generated@@232 $generated@@46 ($generated@@172 $generated@@47)) $generated@@673)) ($generated@@388 $generated@@675)) (= 1 $generated@@677)) (and ($generated@@140 $generated@@675) (= (ControlFlow 0 3) 2))) $generated@@678))))
$generated@@679)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@242 (T@U T@U) Bool)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@262 (T@U) Bool)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@386 (T@U) Bool)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@T T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@430 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@448 (T@T) T@U)
(declare-fun $generated@@472 () T@T)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 (T@U Int) T@U)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@565 (T@U) Int)
(declare-fun $generated@@643 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@61) $generated@@75)) (= (type $generated@@62) $generated@@72)) (= (type $generated@@63) $generated@@75)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@75)) (= (type $generated@@66) $generated@@72)) (= (type $generated@@67) $generated@@75)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@82 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@143) 14) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@144 $generated@@145)) $generated@@71)
 :pattern ( ($generated@@142 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (and (= (type $generated@@146) $generated@@71) (= (type $generated@@147) $generated@@71)) (= (type $generated@@148) $generated@@143)) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147))) ($generated@@141 $generated@@148))
 :pattern ( ($generated@@141 $generated@@148) ($generated@@139 $generated@@148 ($generated@@142 $generated@@146 $generated@@147)))
)))
(assert  (and (and (= ($generated@@1 $generated@@152) 15) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@150 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@152)
 :pattern ( ($generated@@151 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) $generated@@143) (= (type $generated@@156) $generated@@143)) true) (= ($generated@@149 $generated@@155 $generated@@156)  (and (= ($generated@@150 $generated@@155) ($generated@@150 $generated@@156)) (= ($generated@@151 $generated@@155) ($generated@@151 $generated@@156)))))
 :pattern ( ($generated@@149 $generated@@155 $generated@@156))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@75)
 :pattern ( ($generated@@157 $generated@@159))
)) (= (type $generated@@158) $generated@@143)))
(assert (= ($generated@@157 $generated@@158) $generated@@65))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@71)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@83 $generated@@152 $generated@@2)) (= (type $generated@@164) $generated@@71)) ($generated@@139 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@139 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@166 $generated@@167)) $generated@@71)
 :pattern ( ($generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@71) (= (type $generated@@169) $generated@@143)) ($generated@@139 $generated@@169 ($generated@@166 $generated@@168))) ($generated@@165 $generated@@169))
 :pattern ( ($generated@@165 $generated@@169) ($generated@@139 $generated@@169 ($generated@@166 $generated@@168)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@84 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@74 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@84) (= (type $generated@@220) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@221) ($generated@@73 $generated@@4))) (= (type $generated@@223) $generated@@84)) (= (type $generated@@224) ($generated@@73 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@228 T@U) ) (! (= (type ($generated@@226 $generated@@228)) $generated@@71)
 :pattern ( ($generated@@226 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (= (type $generated@@229) $generated@@71) (= (type $generated@@230) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@227 $generated@@230)) ($generated@@81 $generated@@158 ($generated@@226 $generated@@229) $generated@@230))
 :pattern ( ($generated@@81 $generated@@158 ($generated@@226 $generated@@229) $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@143)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@71) (= (type $generated@@236) $generated@@71)) (= (type $generated@@237) $generated@@152)) (= (type $generated@@238) $generated@@152)) (= ($generated@@139 ($generated@@231 $generated@@237 $generated@@238) ($generated@@142 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@139 ($generated@@231 $generated@@237 $generated@@238) ($generated@@142 $generated@@235 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (!  (=> (= (type $generated@@239) $generated@@71) ($generated@@139 $generated@@158 ($generated@@226 $generated@@239)))
 :pattern ( ($generated@@139 $generated@@158 ($generated@@226 $generated@@239)))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) $generated@@143) (= (type $generated@@241) $generated@@143)) (= ($generated@@149 $generated@@240 $generated@@241) (= $generated@@240 $generated@@241)))
 :pattern ( ($generated@@149 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@143) (= (type $generated@@244) $generated@@143)) (= ($generated@@242 $generated@@243 $generated@@244) (= $generated@@243 $generated@@244)))
 :pattern ( ($generated@@242 $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@143) (= (type $generated@@247) $generated@@143)) (= ($generated@@245 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@71)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) ($generated@@83 $generated@@152 $generated@@4)) (= (type $generated@@251) $generated@@71)) (= ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@152) ($generated@@0 ($generated@@88 $generated@@250 $generated@@252))) ($generated@@232 $generated@@252 $generated@@251))
 :pattern ( ($generated@@88 $generated@@250 $generated@@252))
))))
 :pattern ( ($generated@@139 $generated@@250 ($generated@@248 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@71)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@83 $generated@@152 $generated@@4)) (= (type $generated@@256) $generated@@71)) (= ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@152) ($generated@@0 ($generated@@88 $generated@@255 $generated@@257))) ($generated@@232 $generated@@257 $generated@@256))
 :pattern ( ($generated@@88 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@139 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (let (($generated@@260 (type $generated@@259)))
(= (type ($generated@@258 $generated@@259)) $generated@@260))
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@258 $generated@@261) $generated@@261)
 :pattern ( ($generated@@258 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@263) $generated@@143) (= (type $generated@@264) $generated@@143)) (and ($generated@@262 $generated@@263) ($generated@@262 $generated@@264))) (= ($generated@@245 $generated@@263 $generated@@264) true))
 :pattern ( ($generated@@245 $generated@@263 $generated@@264) ($generated@@262 $generated@@263))
 :pattern ( ($generated@@245 $generated@@263 $generated@@264) ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@71) (= (type $generated@@267) $generated@@71)) (= (type $generated@@268) $generated@@152)) (= (type $generated@@269) $generated@@152)) (= (type $generated@@270) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@227 $generated@@270)) (= ($generated@@81 ($generated@@231 $generated@@268 $generated@@269) ($generated@@142 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@81 ($generated@@231 $generated@@268 $generated@@269) ($generated@@142 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@143) (= ($generated@@141 $generated@@271) (= ($generated@@157 $generated@@271) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@143) (= ($generated@@165 $generated@@272) (= ($generated@@157 $generated@@272) $generated@@63)))
 :pattern ( ($generated@@165 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@143) (= ($generated@@262 $generated@@273) (= ($generated@@157 $generated@@273) $generated@@65)))
 :pattern ( ($generated@@262 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@143) (= ($generated@@274 $generated@@275) (= ($generated@@157 $generated@@275) $generated@@67)))
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@143) ($generated@@141 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@152) (= (type $generated@@278) $generated@@152)) (= $generated@@276 ($generated@@231 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@141 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@143) ($generated@@262 $generated@@287)) (= $generated@@287 $generated@@158))
 :pattern ( ($generated@@262 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@152)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@143) (= (type $generated@@291) $generated@@143)) true) (= ($generated@@242 $generated@@290 $generated@@291) (= ($generated@@288 $generated@@290) ($generated@@288 $generated@@291))))
 :pattern ( ($generated@@242 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@143)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@143) ($generated@@165 $generated@@294)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@152) (= $generated@@294 ($generated@@292 $generated@@295)))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
)))
 :pattern ( ($generated@@165 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@143)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@143) ($generated@@274 $generated@@298)) (exists (($generated@@299 T@U) ) (!  (and (= (type $generated@@299) $generated@@143) (= $generated@@298 ($generated@@296 $generated@@299)))
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@274 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@152)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@71) (= (type $generated@@304) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@265 ($generated@@300 $generated@@302) $generated@@303 $generated@@304) ($generated@@81 $generated@@302 $generated@@303 $generated@@304)))
 :pattern ( ($generated@@265 ($generated@@300 $generated@@302) $generated@@303 $generated@@304))
)))
(assert (forall (($generated@@307 T@T) ) (! (= (type ($generated@@306 $generated@@307)) ($generated@@83 $generated@@307 $generated@@2))
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@86 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@83 $generated@@309 $generated@@2)) (and (= (= ($generated@@305 $generated@@308) 0) (= $generated@@308 ($generated@@306 $generated@@309))) (=> (not (= ($generated@@305 $generated@@308) 0)) (exists (($generated@@310 T@U) ) (!  (and (= (type $generated@@310) $generated@@309) (< 0 ($generated ($generated@@88 $generated@@308 $generated@@310))))
 :no-pattern (type $generated@@310)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
))))))
 :pattern ( ($generated@@305 $generated@@308))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@76)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@71) (and (= ($generated@@79 ($generated@@166 $generated@@313)) $generated@@64) (= ($generated@@311 ($generated@@166 $generated@@313)) $generated@@69)))
 :pattern ( ($generated@@166 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@71) (and (= ($generated@@79 ($generated@@226 $generated@@314)) $generated@@66) (= ($generated@@311 ($generated@@226 $generated@@314)) $generated@@70)))
 :pattern ( ($generated@@226 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@83 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@88 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@88 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@83 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@88 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@88 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@86 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@83 $generated@@352 $generated@@2)) (= ($generated@@161 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@88 $generated@@351 $generated@@353))) (<= ($generated ($generated@@88 $generated@@351 $generated@@353)) ($generated@@305 $generated@@351))))
 :pattern ( ($generated@@88 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@161 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@143)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@356) $generated@@143) (= (type $generated@@357) $generated@@143)) (and ($generated@@274 $generated@@356) ($generated@@274 $generated@@357))) (= ($generated@@245 $generated@@356 $generated@@357) ($generated@@242 ($generated@@354 $generated@@356) ($generated@@354 $generated@@357))))
 :pattern ( ($generated@@245 $generated@@356 $generated@@357) ($generated@@274 $generated@@356))
 :pattern ( ($generated@@245 $generated@@356 $generated@@357) ($generated@@274 $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@88 ($generated@@315 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@315 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@319 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@83 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(let (($generated@@367 ($generated@@318 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@317 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@316 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@88 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@337 (type $generated@@369))))
(let (($generated@@371 ($generated@@336 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@335 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@334 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@88 ($generated@@333 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@333 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@337 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@83 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(let (($generated@@378 ($generated@@336 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@335 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@334 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@88 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@83 $generated@@152 $generated@@2)) (= (type $generated@@381) $generated@@71)) (= ($generated@@139 $generated@@380 ($generated@@160 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@152) (< 0 ($generated ($generated@@88 $generated@@380 $generated@@382)))) ($generated@@232 $generated@@382 $generated@@381))
 :pattern ( ($generated@@88 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@139 $generated@@380 ($generated@@160 $generated@@381)))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (and (= (type $generated@@383) $generated@@71) (= (type $generated@@384) $generated@@152)) (= (type $generated@@385) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@227 $generated@@385)) (= ($generated@@81 ($generated@@292 $generated@@384) ($generated@@166 $generated@@383) $generated@@385) ($generated@@265 $generated@@384 $generated@@383 $generated@@385)))
 :pattern ( ($generated@@81 ($generated@@292 $generated@@384) ($generated@@166 $generated@@383) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@143) ($generated@@386 $generated@@387)) (or ($generated@@262 $generated@@387) ($generated@@274 $generated@@387)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@388) $generated@@71) (= (type $generated@@389) $generated@@143)) (= (type $generated@@390) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@227 $generated@@390)) (= ($generated@@81 ($generated@@296 $generated@@389) ($generated@@226 $generated@@388) $generated@@390) ($generated@@81 $generated@@389 ($generated@@166 $generated@@388) $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@389) ($generated@@226 $generated@@388) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@83 $generated@@152 $generated@@4)) (= (type $generated@@392) $generated@@71)) (= (type $generated@@393) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@391 ($generated@@248 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@152) ($generated@@0 ($generated@@88 $generated@@391 $generated@@394))) ($generated@@265 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@88 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@81 $generated@@391 ($generated@@248 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@83 $generated@@152 $generated@@4)) (= (type $generated@@396) $generated@@71)) (= (type $generated@@397) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@395 ($generated@@253 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@152) ($generated@@0 ($generated@@88 $generated@@395 $generated@@398))) ($generated@@265 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@88 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@81 $generated@@395 ($generated@@253 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@88 ($generated@@306 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@88 ($generated@@306 $generated@@400) $generated@@399)))
)))
(assert  (and (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@401 $generated@@404)) ($generated@@83 $generated@@152 $generated@@4))
 :pattern ( ($generated@@401 $generated@@404))
)) (forall (($generated@@405 T@T) ($generated@@406 T@U) ) (! (= (type ($generated@@402 $generated@@405 $generated@@406)) $generated@@405)
 :pattern ( ($generated@@402 $generated@@405 $generated@@406))
))) (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@319 (type $generated@@407))))
(let (($generated@@409 ($generated@@318 (type $generated@@407))))
(= (type ($generated@@403 $generated@@407)) ($generated@@83 $generated@@409 $generated@@408))))
 :pattern ( ($generated@@403 $generated@@407))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@410) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@411) $generated@@152)) (= ($generated@@0 ($generated@@88 ($generated@@401 $generated@@410) $generated@@411))  (and ($generated@@0 ($generated@@88 ($generated@@315 $generated@@410) ($generated@@150 ($generated@@402 $generated@@143 $generated@@411)))) (= ($generated@@88 ($generated@@403 $generated@@410) ($generated@@150 ($generated@@402 $generated@@143 $generated@@411))) ($generated@@151 ($generated@@402 $generated@@143 $generated@@411))))))
 :pattern ( ($generated@@88 ($generated@@401 $generated@@410) $generated@@411))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@83 $generated@@152 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@337 (type $generated@@415))))
(let (($generated@@417 ($generated@@336 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@83 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@335 $generated@@152 $generated@@152)) (= (type $generated@@419) $generated@@152)) (= ($generated@@0 ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@88 ($generated@@333 $generated@@418) ($generated@@150 ($generated@@402 $generated@@143 $generated@@419)))) (= ($generated@@88 ($generated@@413 $generated@@418) ($generated@@150 ($generated@@402 $generated@@143 $generated@@419))) ($generated@@151 ($generated@@402 $generated@@143 $generated@@419))))))
 :pattern ( ($generated@@88 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@318 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@317 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@362 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@315 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@403 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@315 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@362 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
(let (($generated@@428 ($generated@@336 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@335 $generated@@428 $generated@@427)) (= ($generated@@0 ($generated@@88 ($generated@@373 $generated@@425) $generated@@426)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) (and ($generated@@0 ($generated@@88 ($generated@@333 $generated@@425) $generated@@429)) (= $generated@@426 ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))))
 :pattern ( ($generated@@88 ($generated@@333 $generated@@425) $generated@@429))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@425) $generated@@429))
))))))
 :pattern ( ($generated@@88 ($generated@@373 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (= (type ($generated@@430 $generated@@431 $generated@@432)) $generated@@71)
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (and (and (= (type $generated@@433) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@434) $generated@@71)) (= (type $generated@@435) $generated@@71)) (= (type $generated@@436) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436) (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@152) ($generated@@0 ($generated@@88 ($generated@@315 $generated@@433) $generated@@437))) (and ($generated@@265 ($generated@@88 ($generated@@403 $generated@@433) $generated@@437) $generated@@435 $generated@@436) ($generated@@265 $generated@@437 $generated@@434 $generated@@436)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@433) $generated@@437))
 :pattern ( ($generated@@88 ($generated@@315 $generated@@433) $generated@@437))
))))
 :pattern ( ($generated@@81 $generated@@433 ($generated@@430 $generated@@434 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@71)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@335 $generated@@152 $generated@@152)) (= (type $generated@@442) $generated@@71)) (= (type $generated@@443) $generated@@71)) (= (type $generated@@444) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@152) ($generated@@0 ($generated@@88 ($generated@@333 $generated@@441) $generated@@445))) (and ($generated@@265 ($generated@@88 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@265 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@88 ($generated@@333 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@81 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (and (= (type $generated@@446) $generated@@71) (= (type $generated@@447) $generated@@143)) ($generated@@139 $generated@@447 ($generated@@226 $generated@@446))) (or ($generated@@262 $generated@@447) ($generated@@274 $generated@@447)))
 :pattern ( ($generated@@274 $generated@@447) ($generated@@139 $generated@@447 ($generated@@226 $generated@@446)))
 :pattern ( ($generated@@262 $generated@@447) ($generated@@139 $generated@@447 ($generated@@226 $generated@@446)))
)))
(assert (forall (($generated@@449 T@T) ) (! (= (type ($generated@@448 $generated@@449)) ($generated@@83 $generated@@449 $generated@@4))
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@337 (type $generated@@450))))
(let (($generated@@452 ($generated@@336 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@335 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@334 $generated@@452 $generated@@451)) (= ($generated@@333 $generated@@450) ($generated@@448 $generated@@452))))))
 :pattern ( ($generated@@333 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@337 (type $generated@@453))))
(let (($generated@@455 ($generated@@336 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@335 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@334 $generated@@455 $generated@@454)) (= ($generated@@373 $generated@@453) ($generated@@448 $generated@@454))))))
 :pattern ( ($generated@@373 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@337 (type $generated@@456))))
(let (($generated@@458 ($generated@@336 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@335 $generated@@458 $generated@@457)) (= (= $generated@@456 ($generated@@334 $generated@@458 $generated@@457)) (= ($generated@@412 $generated@@456) ($generated@@448 $generated@@152))))))
 :pattern ( ($generated@@412 $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ) (! (let (($generated@@460 ($generated@@319 (type $generated@@459))))
(let (($generated@@461 ($generated@@318 (type $generated@@459))))
 (=> (= (type $generated@@459) ($generated@@317 $generated@@461 $generated@@460)) (or (= $generated@@459 ($generated@@316 $generated@@461 $generated@@460)) (exists (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (and (and (= (type $generated@@462) $generated@@152) (= (type $generated@@463) $generated@@152)) ($generated@@0 ($generated@@88 ($generated@@401 $generated@@459) ($generated@@300 ($generated@@231 $generated@@462 $generated@@463)))))
 :no-pattern (type $generated@@462)
 :no-pattern (type $generated@@463)
 :no-pattern ($generated $generated@@462)
 :no-pattern ($generated@@0 $generated@@462)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
))))))
 :pattern ( ($generated@@401 $generated@@459))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@337 (type $generated@@464))))
(let (($generated@@466 ($generated@@336 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@335 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@334 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@152) (= (type $generated@@468) $generated@@152)) ($generated@@0 ($generated@@88 ($generated@@412 $generated@@464) ($generated@@300 ($generated@@231 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@412 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@152) ($generated@@232 $generated@@469 $generated@@46)) (and (= ($generated@@300 ($generated@@402 $generated@@2 $generated@@469)) $generated@@469) ($generated@@139 ($generated@@402 $generated@@2 $generated@@469) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@469 $generated@@46))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@152) ($generated@@232 $generated@@470 $generated@@47)) (and (= ($generated@@300 ($generated@@402 $generated@@3 $generated@@470)) $generated@@470) ($generated@@139 ($generated@@402 $generated@@3 $generated@@470) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@470 $generated@@47))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@152) ($generated@@232 $generated@@471 $generated@@44)) (and (= ($generated@@300 ($generated@@402 $generated@@4 $generated@@471)) $generated@@471) ($generated@@139 ($generated@@402 $generated@@4 $generated@@471) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@471 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@472) 20))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@152) ($generated@@232 $generated@@473 $generated@@45)) (and (= ($generated@@300 ($generated@@402 $generated@@472 $generated@@473)) $generated@@473) ($generated@@139 ($generated@@402 $generated@@472 $generated@@473) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@473 $generated@@45))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@71) (= ($generated@@232 ($generated@@300 $generated@@474) $generated@@475) ($generated@@139 $generated@@474 $generated@@475)))
 :pattern ( ($generated@@232 ($generated@@300 $generated@@474) $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@86 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@83 $generated@@477 $generated@@2)) (<= 0 ($generated@@305 $generated@@476))))
 :pattern ( ($generated@@305 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@282 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@281 $generated@@479)) (<= 0 ($generated@@280 $generated@@478))))
 :pattern ( ($generated@@280 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@71)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@71) (= (type $generated@@483) $generated@@71)) (= ($generated@@480 ($generated@@430 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@430 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@71)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@71) (= (type $generated@@487) $generated@@71)) (= ($generated@@484 ($generated@@430 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@430 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@71) (= (type $generated@@489) $generated@@71)) (= ($generated@@79 ($generated@@430 $generated@@488 $generated@@489)) $generated@@58))
 :pattern ( ($generated@@430 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@71)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@71) (= (type $generated@@493) $generated@@71)) (= ($generated@@490 ($generated@@438 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@438 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@71)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@71) (= (type $generated@@497) $generated@@71)) (= ($generated@@494 ($generated@@438 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@438 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@71) (= (type $generated@@499) $generated@@71)) (= ($generated@@79 ($generated@@438 $generated@@498 $generated@@499)) $generated@@59))
 :pattern ( ($generated@@438 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@152) (= (type $generated@@501) $generated@@152)) (= ($generated@@157 ($generated@@231 $generated@@500 $generated@@501)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@71)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@71) (= (type $generated@@505) $generated@@71)) (= ($generated@@502 ($generated@@142 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@142 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@71)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@71) (= (type $generated@@509) $generated@@71)) (= ($generated@@506 ($generated@@142 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@142 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@152) (= (type $generated@@511) $generated@@152)) (= ($generated@@150 ($generated@@231 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@231 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@152) (= (type $generated@@513) $generated@@152)) (= ($generated@@151 ($generated@@231 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@231 $generated@@512 $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) $generated@@71)
 :pattern ( ($generated@@514 $generated@@516))
)) (forall (($generated@@517 T@U) ($generated@@518 Int) ) (! (let (($generated@@519 ($generated@@282 (type $generated@@517))))
(= (type ($generated@@515 $generated@@517 $generated@@518)) $generated@@519))
 :pattern ( ($generated@@515 $generated@@517 $generated@@518))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@520) ($generated@@281 $generated@@152)) (= (type $generated@@521) $generated@@71)) (= (type $generated@@522) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@520 ($generated@@514 $generated@@521) $generated@@522) (forall (($generated@@523 Int) ) (!  (=> (and (<= 0 $generated@@523) (< $generated@@523 ($generated@@280 $generated@@520))) ($generated@@265 ($generated@@515 $generated@@520 $generated@@523) $generated@@521 $generated@@522))
 :pattern ( ($generated@@515 $generated@@520 $generated@@523))
))))
 :pattern ( ($generated@@81 $generated@@520 ($generated@@514 $generated@@521) $generated@@522))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@524 ($generated@@82 $generated@@525)) $generated@@525)
 :pattern ( ($generated@@82 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@71)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@71) (= ($generated@@526 ($generated@@248 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@248 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@71) (= ($generated@@79 ($generated@@248 $generated@@529)) $generated@@54))
 :pattern ( ($generated@@248 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@71) (= ($generated@@530 ($generated@@253 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@253 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@71) (= ($generated@@79 ($generated@@253 $generated@@533)) $generated@@55))
 :pattern ( ($generated@@253 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@71)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@71) (= ($generated@@534 ($generated@@160 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@160 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@71) (= ($generated@@79 ($generated@@160 $generated@@537)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@71)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@71) (= ($generated@@538 ($generated@@514 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@514 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@71) (= ($generated@@79 ($generated@@514 $generated@@541)) $generated@@57))
 :pattern ( ($generated@@514 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@152) (= ($generated@@157 ($generated@@292 $generated@@542)) $generated@@63))
 :pattern ( ($generated@@292 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@71)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@71) (= ($generated@@543 ($generated@@166 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@166 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@152) (= ($generated@@288 ($generated@@292 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@292 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@71)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@71) (= ($generated@@547 ($generated@@226 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@226 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@143) (= ($generated@@157 ($generated@@296 $generated@@550)) $generated@@67))
 :pattern ( ($generated@@296 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@143) (= ($generated@@354 ($generated@@296 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@296 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@402 $generated@@553 ($generated@@300 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@300 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@555) $generated@@71)) (= (type $generated@@556) $generated@@71)) (= ($generated@@139 $generated@@554 ($generated@@430 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@152) ($generated@@0 ($generated@@88 ($generated@@315 $generated@@554) $generated@@557))) (and ($generated@@232 ($generated@@88 ($generated@@403 $generated@@554) $generated@@557) $generated@@556) ($generated@@232 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@554) $generated@@557))
 :pattern ( ($generated@@88 ($generated@@315 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@139 $generated@@554 ($generated@@430 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@335 $generated@@152 $generated@@152)) (= (type $generated@@559) $generated@@71)) (= (type $generated@@560) $generated@@71)) (= ($generated@@139 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@152) ($generated@@0 ($generated@@88 ($generated@@333 $generated@@558) $generated@@561))) (and ($generated@@232 ($generated@@88 ($generated@@413 $generated@@558) $generated@@561) $generated@@560) ($generated@@232 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@88 ($generated@@413 $generated@@558) $generated@@561))
 :pattern ( ($generated@@88 ($generated@@333 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@139 $generated@@558 ($generated@@438 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@71) (= (type $generated@@563) $generated@@152)) (= ($generated@@139 ($generated@@292 $generated@@563) ($generated@@166 $generated@@562)) ($generated@@232 $generated@@563 $generated@@562)))
 :pattern ( ($generated@@139 ($generated@@292 $generated@@563) ($generated@@166 $generated@@562)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@152) (= (type $generated@@567) $generated@@152)) (< ($generated@@564 $generated@@566) ($generated@@565 ($generated@@231 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@231 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@152) (= (type $generated@@569) $generated@@152)) (< ($generated@@564 $generated@@569) ($generated@@565 ($generated@@231 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@231 $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@152) (= (type $generated@@571) $generated@@71)) (= (type $generated@@572) $generated@@71)) ($generated@@232 $generated@@570 ($generated@@430 $generated@@571 $generated@@572))) (and (= ($generated@@300 ($generated@@402 ($generated@@317 $generated@@152 $generated@@152) $generated@@570)) $generated@@570) ($generated@@139 ($generated@@402 ($generated@@317 $generated@@152 $generated@@152) $generated@@570) ($generated@@430 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@232 $generated@@570 ($generated@@430 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@152) (= (type $generated@@574) $generated@@71)) (= (type $generated@@575) $generated@@71)) ($generated@@232 $generated@@573 ($generated@@438 $generated@@574 $generated@@575))) (and (= ($generated@@300 ($generated@@402 ($generated@@335 $generated@@152 $generated@@152) $generated@@573)) $generated@@573) ($generated@@139 ($generated@@402 ($generated@@335 $generated@@152 $generated@@152) $generated@@573) ($generated@@438 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@232 $generated@@573 ($generated@@438 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@71) (= (type $generated@@577) $generated@@71)) (= (type $generated@@578) $generated@@152)) ($generated@@232 $generated@@578 ($generated@@142 $generated@@576 $generated@@577))) (and (= ($generated@@300 ($generated@@402 $generated@@143 $generated@@578)) $generated@@578) ($generated@@139 ($generated@@402 $generated@@143 $generated@@578) ($generated@@142 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@232 $generated@@578 ($generated@@142 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@152) (< ($generated@@564 $generated@@579) ($generated@@565 ($generated@@292 $generated@@579))))
 :pattern ( ($generated@@292 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@143) (< ($generated@@565 $generated@@580) ($generated@@565 ($generated@@296 $generated@@580))))
 :pattern ( ($generated@@296 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@143) (= (type $generated@@582) $generated@@71)) (= (type $generated@@583) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@227 $generated@@583) (and ($generated@@165 $generated@@581) ($generated@@81 $generated@@581 ($generated@@166 $generated@@582) $generated@@583)))) ($generated@@265 ($generated@@288 $generated@@581) $generated@@582 $generated@@583))
 :pattern ( ($generated@@265 ($generated@@288 $generated@@581) $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 (type $generated@@584)))
 (not ($generated@@0 ($generated@@88 ($generated@@448 $generated@@585) $generated@@584))))
 :pattern ( (let (($generated@@585 (type $generated@@584)))
($generated@@88 ($generated@@448 $generated@@585) $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@71) (= (type $generated@@587) $generated@@71)) (and (= ($generated@@79 ($generated@@142 $generated@@586 $generated@@587)) $generated@@62) (= ($generated@@311 ($generated@@142 $generated@@586 $generated@@587)) $generated@@68)))
 :pattern ( ($generated@@142 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@143) (= ($generated@@564 ($generated@@300 $generated@@588)) ($generated@@565 $generated@@588)))
 :pattern ( ($generated@@564 ($generated@@300 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@152) ($generated@@232 $generated@@589 ($generated@@82 0))) (and (= ($generated@@300 ($generated@@402 $generated@@2 $generated@@589)) $generated@@589) ($generated@@139 ($generated@@402 ($generated@@83 $generated@@152 $generated@@4) $generated@@589) ($generated@@82 0))))
 :pattern ( ($generated@@232 $generated@@589 ($generated@@82 0)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@152) (= (type $generated@@591) $generated@@71)) ($generated@@232 $generated@@590 ($generated@@248 $generated@@591))) (and (= ($generated@@300 ($generated@@402 ($generated@@83 $generated@@152 $generated@@4) $generated@@590)) $generated@@590) ($generated@@139 ($generated@@402 ($generated@@83 $generated@@152 $generated@@4) $generated@@590) ($generated@@248 $generated@@591))))
 :pattern ( ($generated@@232 $generated@@590 ($generated@@248 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@152) (= (type $generated@@593) $generated@@71)) ($generated@@232 $generated@@592 ($generated@@253 $generated@@593))) (and (= ($generated@@300 ($generated@@402 ($generated@@83 $generated@@152 $generated@@4) $generated@@592)) $generated@@592) ($generated@@139 ($generated@@402 ($generated@@83 $generated@@152 $generated@@4) $generated@@592) ($generated@@253 $generated@@593))))
 :pattern ( ($generated@@232 $generated@@592 ($generated@@253 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@152) (= (type $generated@@595) $generated@@71)) ($generated@@232 $generated@@594 ($generated@@160 $generated@@595))) (and (= ($generated@@300 ($generated@@402 ($generated@@83 $generated@@152 $generated@@2) $generated@@594)) $generated@@594) ($generated@@139 ($generated@@402 ($generated@@83 $generated@@152 $generated@@2) $generated@@594) ($generated@@160 $generated@@595))))
 :pattern ( ($generated@@232 $generated@@594 ($generated@@160 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@152) (= (type $generated@@597) $generated@@71)) ($generated@@232 $generated@@596 ($generated@@514 $generated@@597))) (and (= ($generated@@300 ($generated@@402 ($generated@@281 $generated@@152) $generated@@596)) $generated@@596) ($generated@@139 ($generated@@402 ($generated@@281 $generated@@152) $generated@@596) ($generated@@514 $generated@@597))))
 :pattern ( ($generated@@232 $generated@@596 ($generated@@514 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@71) (= (type $generated@@599) $generated@@152)) ($generated@@232 $generated@@599 ($generated@@166 $generated@@598))) (and (= ($generated@@300 ($generated@@402 $generated@@143 $generated@@599)) $generated@@599) ($generated@@139 ($generated@@402 $generated@@143 $generated@@599) ($generated@@166 $generated@@598))))
 :pattern ( ($generated@@232 $generated@@599 ($generated@@166 $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@71) (= (type $generated@@601) $generated@@152)) ($generated@@232 $generated@@601 ($generated@@226 $generated@@600))) (and (= ($generated@@300 ($generated@@402 $generated@@143 $generated@@601)) $generated@@601) ($generated@@139 ($generated@@402 $generated@@143 $generated@@601) ($generated@@226 $generated@@600))))
 :pattern ( ($generated@@232 $generated@@601 ($generated@@226 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@71) (= (type $generated@@603) $generated@@143)) (= ($generated@@139 ($generated@@296 $generated@@603) ($generated@@226 $generated@@602)) ($generated@@139 $generated@@603 ($generated@@166 $generated@@602))))
 :pattern ( ($generated@@139 ($generated@@296 $generated@@603) ($generated@@226 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@143) (= (type $generated@@605) $generated@@71)) (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@227 $generated@@606) (and ($generated@@274 $generated@@604) ($generated@@81 $generated@@604 ($generated@@226 $generated@@605) $generated@@606)))) ($generated@@81 ($generated@@354 $generated@@604) ($generated@@166 $generated@@605) $generated@@606))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@604) ($generated@@166 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@83 $generated@@152 $generated@@2)) (= (type $generated@@608) $generated@@71)) (= (type $generated@@609) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@607 ($generated@@160 $generated@@608) $generated@@609) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@152) (< 0 ($generated ($generated@@88 $generated@@607 $generated@@610)))) ($generated@@265 $generated@@610 $generated@@608 $generated@@609))
 :pattern ( ($generated@@88 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@81 $generated@@607 ($generated@@160 $generated@@608) $generated@@609))
)))
(assert (= $generated@@158 ($generated@@258 $generated@@158)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@143) (= (type $generated@@612) $generated@@71)) (= (type $generated@@613) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@227 $generated@@613) (and ($generated@@141 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@71) ($generated@@81 $generated@@611 ($generated@@142 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@81 $generated@@611 ($generated@@142 $generated@@612 $generated@@614) $generated@@613))
))))) ($generated@@265 ($generated@@150 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@265 ($generated@@150 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@143) (= (type $generated@@616) $generated@@71)) (= (type $generated@@617) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@227 $generated@@617) (and ($generated@@141 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@71) ($generated@@81 $generated@@615 ($generated@@142 $generated@@618 $generated@@616) $generated@@617))
 :pattern ( ($generated@@81 $generated@@615 ($generated@@142 $generated@@618 $generated@@616) $generated@@617))
))))) ($generated@@265 ($generated@@151 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@265 ($generated@@151 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@152) (= (type $generated@@620) $generated@@152)) (= ($generated@@231 ($generated@@258 $generated@@619) ($generated@@258 $generated@@620)) ($generated@@258 ($generated@@231 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@231 ($generated@@258 $generated@@619) ($generated@@258 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@152) (= ($generated@@292 ($generated@@258 $generated@@621)) ($generated@@258 ($generated@@292 $generated@@621))))
 :pattern ( ($generated@@292 ($generated@@258 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@143) (= ($generated@@296 ($generated@@258 $generated@@622)) ($generated@@258 ($generated@@296 $generated@@622))))
 :pattern ( ($generated@@296 ($generated@@258 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (! (= ($generated@@300 ($generated@@258 $generated@@623)) ($generated@@258 ($generated@@300 $generated@@623)))
 :pattern ( ($generated@@300 ($generated@@258 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (! (let (($generated@@625 ($generated@@282 (type $generated@@624))))
 (=> (and (= (type $generated@@624) ($generated@@281 $generated@@625)) (= ($generated@@280 $generated@@624) 0)) (= $generated@@624 ($generated@@279 $generated@@625))))
 :pattern ( ($generated@@280 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@627)))
 (=> (and (and (= (type $generated@@626) ($generated@@83 $generated@@629 $generated@@2)) (= (type $generated@@628) $generated@@2)) (<= 0 ($generated $generated@@628))) (= ($generated@@305 ($generated@@89 $generated@@626 $generated@@627 $generated@@628)) (+ (- ($generated@@305 $generated@@626) ($generated ($generated@@88 $generated@@626 $generated@@627))) ($generated $generated@@628)))))
 :pattern ( ($generated@@305 ($generated@@89 $generated@@626 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@631) $generated@@2)) ($generated@@81 $generated@@631 $generated@@46 $generated@@630))
 :pattern ( ($generated@@81 $generated@@631 $generated@@46 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@633) $generated@@3)) ($generated@@81 $generated@@633 $generated@@47 $generated@@632))
 :pattern ( ($generated@@81 $generated@@633 $generated@@47 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@635) $generated@@4)) ($generated@@81 $generated@@635 $generated@@44 $generated@@634))
 :pattern ( ($generated@@81 $generated@@635 $generated@@44 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@637) $generated@@472)) ($generated@@81 $generated@@637 $generated@@45 $generated@@636))
 :pattern ( ($generated@@81 $generated@@637 $generated@@45 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@639) $generated@@152)) ($generated@@81 $generated@@639 $generated@@48 $generated@@638))
 :pattern ( ($generated@@81 $generated@@639 $generated@@48 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) ($generated@@281 $generated@@152)) (= (type $generated@@641) $generated@@71)) (= ($generated@@139 $generated@@640 ($generated@@514 $generated@@641)) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@280 $generated@@640))) ($generated@@232 ($generated@@515 $generated@@640 $generated@@642) $generated@@641))
 :pattern ( ($generated@@515 $generated@@640 $generated@@642))
))))
 :pattern ( ($generated@@139 $generated@@640 ($generated@@514 $generated@@641)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 Int) ) (!  (=> (= (type $generated@@644) ($generated@@281 $generated@@152)) (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@280 $generated@@644))) (< ($generated@@565 ($generated@@402 $generated@@143 ($generated@@515 $generated@@644 $generated@@645))) ($generated@@643 $generated@@644))))
 :pattern ( ($generated@@565 ($generated@@402 $generated@@143 ($generated@@515 $generated@@644 $generated@@645))))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@317 $generated@@152 $generated@@152)) (= (type $generated@@647) $generated@@71)) (= (type $generated@@648) $generated@@71)) ($generated@@139 $generated@@646 ($generated@@430 $generated@@647 $generated@@648))) (and (and ($generated@@139 ($generated@@315 $generated@@646) ($generated@@248 $generated@@647)) ($generated@@139 ($generated@@362 $generated@@646) ($generated@@248 $generated@@648))) ($generated@@139 ($generated@@401 $generated@@646) ($generated@@248 ($generated@@142 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@139 $generated@@646 ($generated@@430 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@335 $generated@@152 $generated@@152)) (= (type $generated@@650) $generated@@71)) (= (type $generated@@651) $generated@@71)) ($generated@@139 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@139 ($generated@@333 $generated@@649) ($generated@@253 $generated@@650)) ($generated@@139 ($generated@@373 $generated@@649) ($generated@@253 $generated@@651))) ($generated@@139 ($generated@@412 $generated@@649) ($generated@@253 ($generated@@142 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@139 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@2) ($generated@@139 $generated@@652 $generated@@46))
 :pattern ( ($generated@@139 $generated@@652 $generated@@46))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@3) ($generated@@139 $generated@@653 $generated@@47))
 :pattern ( ($generated@@139 $generated@@653 $generated@@47))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@4) ($generated@@139 $generated@@654 $generated@@44))
 :pattern ( ($generated@@139 $generated@@654 $generated@@44))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@472) ($generated@@139 $generated@@655 $generated@@45))
 :pattern ( ($generated@@139 $generated@@655 $generated@@45))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@152) ($generated@@139 $generated@@656 $generated@@48))
 :pattern ( ($generated@@139 $generated@@656 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 (T@U) Bool)
(declare-fun $generated@@663 () Int)
(assert  (and (and (and (and (= (type $generated@@657) ($generated@@172 $generated@@84 $generated@@4)) (= (type $generated@@658) $generated@@84)) (= (type $generated@@659) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@660) $generated@@143)) (= (type $generated@@661) $generated@@143)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@664  (=> (and (and (= $generated@@657 ($generated@@171 $generated@@658 $generated@@659 $generated@@60 false)) (= $generated@@660 $generated@@661)) (and ($generated@@139 $generated@@660 ($generated@@226 $generated@@46)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@274 $generated@@660))))
(let (($generated@@665  (=> (and ($generated@@227 $generated@@659) ($generated@@662 $generated@@659)) (=> (and (and (and (and ($generated@@139 $generated@@661 ($generated@@226 $generated@@46)) ($generated@@81 $generated@@661 ($generated@@226 $generated@@46) $generated@@659)) ($generated@@386 $generated@@661)) (= 2 $generated@@663)) (and ($generated@@274 $generated@@661) (= (ControlFlow 0 3) 2))) $generated@@664))))
$generated@@665)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@253 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@294 (T@T T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@331 (T@T T@U) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@360 (T@U) Bool)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@487 (T@U Int) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (= ($generated@@1 $generated@@138) 14) (= ($generated@@1 $generated@@140) 15)) (forall (($generated@@141 T@U) ) (! (= (type ($generated@@139 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@139 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) $generated@@138) (= (type $generated@@143) $generated@@138)) (and ($generated@@137 $generated@@142) ($generated@@137 $generated@@143))) (= ($generated@@136 $generated@@142 $generated@@143) (= ($generated@@139 $generated@@142) ($generated@@139 $generated@@143))))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@142))
 :pattern ( ($generated@@136 $generated@@142 $generated@@143) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= (type $generated@@145) $generated@@2) ($generated@@144 $generated@@145 ($generated@@79 0)))
 :pattern ( ($generated@@144 $generated@@145 ($generated@@79 0)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@147 $generated@@148 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@68) (= (type $generated@@151) $generated@@68)) (= (type $generated@@152) $generated@@138)) ($generated@@144 $generated@@152 ($generated@@147 $generated@@150 $generated@@151))) ($generated@@146 $generated@@152))
 :pattern ( ($generated@@146 $generated@@152) ($generated@@144 $generated@@152 ($generated@@147 $generated@@150 $generated@@151)))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@140)
 :pattern ( ($generated@@154 $generated@@156))
)) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@140)
 :pattern ( ($generated@@155 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@138) (= (type $generated@@159) $generated@@138)) true) (= ($generated@@153 $generated@@158 $generated@@159)  (and (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)) (= ($generated@@155 $generated@@158) ($generated@@155 $generated@@159)))))
 :pattern ( ($generated@@153 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@72)
 :pattern ( ($generated@@160 $generated@@162))
)) (= (type $generated@@161) $generated@@138)))
(assert (= ($generated@@160 $generated@@161) $generated@@63))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@167) $generated@@68)) ($generated@@144 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@144 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@81 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@71 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@81) (= (type $generated@@218) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@219) ($generated@@70 $generated@@4))) (= (type $generated@@221) $generated@@81)) (= (type $generated@@222) ($generated@@70 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@138)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@68) (= (type $generated@@229) $generated@@68)) (= (type $generated@@230) $generated@@140)) (= (type $generated@@231) $generated@@140)) (= ($generated@@144 ($generated@@224 $generated@@230 $generated@@231) ($generated@@147 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@144 ($generated@@224 $generated@@230 $generated@@231) ($generated@@147 $generated@@228 $generated@@229)))
)))
(assert (= (type $generated@@232) $generated@@68))
(assert ($generated@@144 $generated@@161 $generated@@232))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@233 $generated@@234)) ($generated@@78 $generated@@161 $generated@@232 $generated@@234))
 :pattern ( ($generated@@78 $generated@@161 $generated@@232 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@138) (= (type $generated@@236) $generated@@138)) (= ($generated@@153 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@153 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@138) (= (type $generated@@238) $generated@@138)) (= ($generated@@136 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@136 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@68)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@242) $generated@@68)) (= ($generated@@144 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@140) ($generated@@0 ($generated@@85 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@85 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@144 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@140) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@225 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@144 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (let (($generated@@251 (type $generated@@250)))
(= (type ($generated@@249 $generated@@250)) $generated@@251))
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= ($generated@@249 $generated@@252) $generated@@252)
 :pattern ( ($generated@@249 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@138) (= (type $generated@@255) $generated@@138)) (and ($generated@@253 $generated@@254) ($generated@@253 $generated@@255))) (= ($generated@@136 $generated@@254 $generated@@255) true))
 :pattern ( ($generated@@136 $generated@@254 $generated@@255) ($generated@@253 $generated@@254))
 :pattern ( ($generated@@136 $generated@@254 $generated@@255) ($generated@@253 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@68) (= (type $generated@@258) $generated@@68)) (= (type $generated@@259) $generated@@140)) (= (type $generated@@260) $generated@@140)) (= (type $generated@@261) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@233 $generated@@261)) (= ($generated@@78 ($generated@@224 $generated@@259 $generated@@260) ($generated@@147 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@78 ($generated@@224 $generated@@259 $generated@@260) ($generated@@147 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (= (type $generated@@262) $generated@@138) (= ($generated@@146 $generated@@262) (= ($generated@@160 $generated@@262) $generated@@61)))
 :pattern ( ($generated@@146 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@138) (= ($generated@@253 $generated@@263) (= ($generated@@160 $generated@@263) $generated@@63)))
 :pattern ( ($generated@@253 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@138) (= ($generated@@137 $generated@@264) (= ($generated@@160 $generated@@264) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@138) ($generated@@146 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@140) (= (type $generated@@267) $generated@@140)) (= $generated@@265 ($generated@@224 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@146 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@138) ($generated@@253 $generated@@276)) (= $generated@@276 $generated@@161))
 :pattern ( ($generated@@253 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@138)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@138) ($generated@@137 $generated@@279)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@140) (= $generated@@279 ($generated@@277 $generated@@280)))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@137 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@140)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@68) (= (type $generated@@285) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@256 ($generated@@281 $generated@@283) $generated@@284 $generated@@285) ($generated@@78 $generated@@283 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@256 ($generated@@281 $generated@@283) $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@288 T@T) ) (! (= (type ($generated@@287 $generated@@288)) ($generated@@80 $generated@@288 $generated@@2))
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 ($generated@@83 (type $generated@@289))))
 (=> (= (type $generated@@289) ($generated@@80 $generated@@290 $generated@@2)) (and (= (= ($generated@@286 $generated@@289) 0) (= $generated@@289 ($generated@@287 $generated@@290))) (=> (not (= ($generated@@286 $generated@@289) 0)) (exists (($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@290) (< 0 ($generated ($generated@@85 $generated@@289 $generated@@291))))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
))))))
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert  (and (and (and (and (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@297 $generated@@298)) 18)) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@299 $generated@@300)) $generated@@299)
 :pattern ( ($generated@@294 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@294 $generated@@301 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@294 $generated@@301 $generated@@302))
))) (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@295 (type $generated@@303))))
(= (type ($generated@@292 $generated@@303)) ($generated@@80 $generated@@304 $generated@@4)))
 :pattern ( ($generated@@292 $generated@@303))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= (type ($generated@@293 $generated@@305 $generated@@306)) ($generated@@294 $generated@@305 $generated@@306))
 :pattern ( ($generated@@293 $generated@@305 $generated@@306))
))))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@T) ) (! (let (($generated@@309 (type $generated@@307)))
 (not ($generated@@0 ($generated@@85 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307))))
 :pattern ( (let (($generated@@309 (type $generated@@307)))
($generated@@85 ($generated@@292 ($generated@@293 $generated@@309 $generated@@308)) $generated@@307)))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 19)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@83 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@80 $generated@@329 $generated@@2)) (= ($generated@@164 $generated@@328) (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@329) (and (<= 0 ($generated ($generated@@85 $generated@@328 $generated@@330))) (<= ($generated ($generated@@85 $generated@@328 $generated@@330)) ($generated@@286 $generated@@328))))
 :pattern ( ($generated@@85 $generated@@328 $generated@@330))
)))))
 :pattern ( ($generated@@164 $generated@@328))
)))
(assert (forall (($generated@@332 T@T) ($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@331 $generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@140) ($generated@@225 $generated@@334 $generated@@232)) (and (= ($generated@@281 ($generated@@331 $generated@@138 $generated@@334)) $generated@@334) ($generated@@144 ($generated@@331 $generated@@138 $generated@@334) $generated@@232)))
 :pattern ( ($generated@@225 $generated@@334 $generated@@232))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@296 (type $generated@@335))))
(let (($generated@@337 ($generated@@295 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@294 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@293 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@337) ($generated@@0 ($generated@@85 ($generated@@292 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@292 $generated@@335))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@296 (type $generated@@340))))
(= (type ($generated@@339 $generated@@340)) ($generated@@80 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@296 (type $generated@@342))))
(let (($generated@@344 ($generated@@295 (type $generated@@342))))
 (=> (= (type $generated@@342) ($generated@@294 $generated@@344 $generated@@343)) (or (= $generated@@342 ($generated@@293 $generated@@344 $generated@@343)) (exists (($generated@@345 T@U) ) (!  (and (= (type $generated@@345) $generated@@343) ($generated@@0 ($generated@@85 ($generated@@339 $generated@@342) $generated@@345)))
 :no-pattern (type $generated@@345)
 :no-pattern ($generated $generated@@345)
 :no-pattern ($generated@@0 $generated@@345)
))))))
 :pattern ( ($generated@@339 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@314 (type $generated@@346))))
(let (($generated@@348 ($generated@@313 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@312 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@311 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@310 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@314 (type $generated@@353))))
(let (($generated@@355 ($generated@@313 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@312 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@311 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@85 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@357) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@358) $generated@@68)) (= ($generated@@144 $generated@@357 ($generated@@163 $generated@@358)) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@357 $generated@@359)))) ($generated@@225 $generated@@359 $generated@@358))
 :pattern ( ($generated@@85 $generated@@357 $generated@@359))
))))
 :pattern ( ($generated@@144 $generated@@357 ($generated@@163 $generated@@358)))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@138) ($generated@@360 $generated@@361)) (or ($generated@@253 $generated@@361) ($generated@@137 $generated@@361)))
 :pattern ( ($generated@@360 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (= (type ($generated@@362 $generated@@363)) $generated@@68)
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@140) (= ($generated@@144 ($generated@@277 $generated@@364) $generated@@232) ($generated@@225 $generated@@364 ($generated@@362 $generated@@232))))
 :pattern ( ($generated@@144 ($generated@@277 $generated@@364) $generated@@232))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@366) $generated@@68)) (= (type $generated@@367) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@365 ($generated@@239 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@140) ($generated@@0 ($generated@@85 $generated@@365 $generated@@368))) ($generated@@256 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@85 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@78 $generated@@365 ($generated@@239 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@80 $generated@@140 $generated@@4)) (= (type $generated@@370) $generated@@68)) (= (type $generated@@371) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@369 ($generated@@244 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@140) ($generated@@0 ($generated@@85 $generated@@369 $generated@@372))) ($generated@@256 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@85 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@78 $generated@@369 ($generated@@244 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@85 ($generated@@287 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@85 ($generated@@287 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@296 (type $generated@@378))))
(let (($generated@@380 ($generated@@295 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@80 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@294 $generated@@140 $generated@@140)) (= (type $generated@@382) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@85 ($generated@@292 $generated@@381) ($generated@@154 ($generated@@331 $generated@@138 $generated@@382)))) (= ($generated@@85 ($generated@@376 $generated@@381) ($generated@@154 ($generated@@331 $generated@@138 $generated@@382))) ($generated@@155 ($generated@@331 $generated@@138 $generated@@382))))))
 :pattern ( ($generated@@85 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@80 $generated@@140 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@314 (type $generated@@386))))
(let (($generated@@388 ($generated@@313 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@80 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@312 $generated@@140 $generated@@140)) (= (type $generated@@390) $generated@@140)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@389) ($generated@@154 ($generated@@331 $generated@@138 $generated@@390)))) (= ($generated@@85 ($generated@@384 $generated@@389) ($generated@@154 ($generated@@331 $generated@@138 $generated@@390))) ($generated@@155 ($generated@@331 $generated@@138 $generated@@390))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@295 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@294 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@85 ($generated@@339 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@85 ($generated@@292 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@85 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@85 ($generated@@292 $generated@@391) $generated@@395))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@85 ($generated@@339 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@313 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@312 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@85 ($generated@@350 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@85 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@396) $generated@@400))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@85 ($generated@@350 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@68)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@294 $generated@@140 $generated@@140)) (= (type $generated@@405) $generated@@68)) (= (type $generated@@406) $generated@@68)) (= (type $generated@@407) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@292 $generated@@404) $generated@@408))) (and ($generated@@256 ($generated@@85 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@256 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@85 ($generated@@292 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@78 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@68)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@312 $generated@@140 $generated@@140)) (= (type $generated@@413) $generated@@68)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@412) $generated@@416))) (and ($generated@@256 ($generated@@85 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@256 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@78 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@138) ($generated@@144 $generated@@417 $generated@@232)) (or ($generated@@253 $generated@@417) ($generated@@137 $generated@@417)))
 :pattern ( ($generated@@137 $generated@@417) ($generated@@144 $generated@@417 $generated@@232))
 :pattern ( ($generated@@253 $generated@@417) ($generated@@144 $generated@@417 $generated@@232))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@80 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@314 (type $generated@@420))))
(let (($generated@@422 ($generated@@313 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@312 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@311 $generated@@422 $generated@@421)) (= ($generated@@310 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@310 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@314 (type $generated@@423))))
(let (($generated@@425 ($generated@@313 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@312 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@311 $generated@@425 $generated@@424)) (= ($generated@@350 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@350 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@314 (type $generated@@426))))
(let (($generated@@428 ($generated@@313 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@312 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@311 $generated@@428 $generated@@427)) (= ($generated@@383 $generated@@426) ($generated@@418 $generated@@140))))))
 :pattern ( ($generated@@383 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@296 (type $generated@@429))))
(let (($generated@@431 ($generated@@295 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@294 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@293 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@140) (= (type $generated@@433) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@375 $generated@@429) ($generated@@281 ($generated@@224 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@375 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@314 (type $generated@@434))))
(let (($generated@@436 ($generated@@313 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@312 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@311 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@140) (= (type $generated@@438) $generated@@140)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@434) ($generated@@281 ($generated@@224 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@383 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@140) ($generated@@225 $generated@@439 $generated@@46)) (and (= ($generated@@281 ($generated@@331 $generated@@2 $generated@@439)) $generated@@439) ($generated@@144 ($generated@@331 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@140) ($generated@@225 $generated@@440 $generated@@47)) (and (= ($generated@@281 ($generated@@331 $generated@@3 $generated@@440)) $generated@@440) ($generated@@144 ($generated@@331 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@140) ($generated@@225 $generated@@441 $generated@@44)) (and (= ($generated@@281 ($generated@@331 $generated@@4 $generated@@441)) $generated@@441) ($generated@@144 ($generated@@331 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@140) ($generated@@225 $generated@@443 $generated@@45)) (and (= ($generated@@281 ($generated@@331 $generated@@442 $generated@@443)) $generated@@443) ($generated@@144 ($generated@@331 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@68) (= ($generated@@225 ($generated@@281 $generated@@444) $generated@@445) ($generated@@144 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@225 ($generated@@281 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@83 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@80 $generated@@447 $generated@@2)) (<= 0 ($generated@@286 $generated@@446))))
 :pattern ( ($generated@@286 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@271 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@270 $generated@@449)) (<= 0 ($generated@@269 $generated@@448))))
 :pattern ( ($generated@@269 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@450) $generated@@140) (= (type $generated@@451) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@233 $generated@@451)) (= ($generated@@78 ($generated@@277 $generated@@450) $generated@@232 $generated@@451) ($generated@@256 $generated@@450 ($generated@@362 $generated@@232) $generated@@451)))
 :pattern ( ($generated@@78 ($generated@@277 $generated@@450) $generated@@232 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@68)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@68) (= (type $generated@@455) $generated@@68)) (= ($generated@@452 ($generated@@401 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@401 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@68) (= (type $generated@@459) $generated@@68)) (= ($generated@@456 ($generated@@401 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@68) (= (type $generated@@461) $generated@@68)) (= ($generated@@76 ($generated@@401 $generated@@460 $generated@@461)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@409 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@409 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@409 $generated@@470 $generated@@471)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@140) (= (type $generated@@473) $generated@@140)) (= ($generated@@160 ($generated@@224 $generated@@472 $generated@@473)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@147 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@147 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@68)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@478 ($generated@@147 $generated@@480 $generated@@481)) $generated@@481))
 :pattern ( ($generated@@147 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@140) (= (type $generated@@483) $generated@@140)) (= ($generated@@154 ($generated@@224 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@224 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@140) (= (type $generated@@485) $generated@@140)) (= ($generated@@155 ($generated@@224 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@224 $generated@@484 $generated@@485))
)))
(assert  (and (forall (($generated@@488 T@U) ) (! (= (type ($generated@@486 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@488))
)) (forall (($generated@@489 T@U) ($generated@@490 Int) ) (! (let (($generated@@491 ($generated@@271 (type $generated@@489))))
(= (type ($generated@@487 $generated@@489 $generated@@490)) $generated@@491))
 :pattern ( ($generated@@487 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@270 $generated@@140)) (= (type $generated@@493) $generated@@68)) (= (type $generated@@494) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@492 ($generated@@486 $generated@@493) $generated@@494) (forall (($generated@@495 Int) ) (!  (=> (and (<= 0 $generated@@495) (< $generated@@495 ($generated@@269 $generated@@492))) ($generated@@256 ($generated@@487 $generated@@492 $generated@@495) $generated@@493 $generated@@494))
 :pattern ( ($generated@@487 $generated@@492 $generated@@495))
))))
 :pattern ( ($generated@@78 $generated@@492 ($generated@@486 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@497 Int) ) (! (= ($generated@@496 ($generated@@79 $generated@@497)) $generated@@497)
 :pattern ( ($generated@@79 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@498 ($generated@@239 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@68) (= ($generated@@76 ($generated@@239 $generated@@501)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@68) (= ($generated@@502 ($generated@@244 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@244 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@505)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@68) (= ($generated@@506 ($generated@@163 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@163 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@76 ($generated@@163 $generated@@509)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@68)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@68) (= ($generated@@510 ($generated@@486 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@486 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@76 ($generated@@486 $generated@@513)) $generated@@57))
 :pattern ( ($generated@@486 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@140) (= ($generated@@160 ($generated@@277 $generated@@514)) $generated@@65))
 :pattern ( ($generated@@277 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@140) (= ($generated@@139 ($generated@@277 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@277 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@331 $generated@@517 ($generated@@281 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@281 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@294 $generated@@140 $generated@@140)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) $generated@@68)) (= ($generated@@144 $generated@@518 ($generated@@401 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@292 $generated@@518) $generated@@521))) (and ($generated@@225 ($generated@@85 ($generated@@376 $generated@@518) $generated@@521) $generated@@520) ($generated@@225 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@85 ($generated@@376 $generated@@518) $generated@@521))
 :pattern ( ($generated@@85 ($generated@@292 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@144 $generated@@518 ($generated@@401 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@312 $generated@@140 $generated@@140)) (= (type $generated@@523) $generated@@68)) (= (type $generated@@524) $generated@@68)) (= ($generated@@144 $generated@@522 ($generated@@409 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@140) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@522) $generated@@525))) (and ($generated@@225 ($generated@@85 ($generated@@384 $generated@@522) $generated@@525) $generated@@524) ($generated@@225 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@85 ($generated@@384 $generated@@522) $generated@@525))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@144 $generated@@522 ($generated@@409 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@140) (= (type $generated@@529) $generated@@140)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@224 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@224 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@140) (= (type $generated@@531) $generated@@140)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@224 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@224 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@140) (= (type $generated@@533) $generated@@68)) (= (type $generated@@534) $generated@@68)) ($generated@@225 $generated@@532 ($generated@@401 $generated@@533 $generated@@534))) (and (= ($generated@@281 ($generated@@331 ($generated@@294 $generated@@140 $generated@@140) $generated@@532)) $generated@@532) ($generated@@144 ($generated@@331 ($generated@@294 $generated@@140 $generated@@140) $generated@@532) ($generated@@401 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@225 $generated@@532 ($generated@@401 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@140) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) ($generated@@225 $generated@@535 ($generated@@409 $generated@@536 $generated@@537))) (and (= ($generated@@281 ($generated@@331 ($generated@@312 $generated@@140 $generated@@140) $generated@@535)) $generated@@535) ($generated@@144 ($generated@@331 ($generated@@312 $generated@@140 $generated@@140) $generated@@535) ($generated@@409 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@225 $generated@@535 ($generated@@409 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@68) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) $generated@@140)) ($generated@@225 $generated@@540 ($generated@@147 $generated@@538 $generated@@539))) (and (= ($generated@@281 ($generated@@331 $generated@@138 $generated@@540)) $generated@@540) ($generated@@144 ($generated@@331 $generated@@138 $generated@@540) ($generated@@147 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@540 ($generated@@147 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 (type $generated@@541)))
 (not ($generated@@0 ($generated@@85 ($generated@@418 $generated@@542) $generated@@541))))
 :pattern ( (let (($generated@@542 (type $generated@@541)))
($generated@@85 ($generated@@418 $generated@@542) $generated@@541)))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@73)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@68) (= (type $generated@@546) $generated@@68)) (and (= ($generated@@76 ($generated@@147 $generated@@545 $generated@@546)) $generated@@62) (= ($generated@@543 ($generated@@147 $generated@@545 $generated@@546)) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@138) (= ($generated@@526 ($generated@@281 $generated@@547)) ($generated@@527 $generated@@547)))
 :pattern ( ($generated@@526 ($generated@@281 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@140) ($generated@@225 $generated@@548 ($generated@@79 0))) (and (= ($generated@@281 ($generated@@331 $generated@@2 $generated@@548)) $generated@@548) ($generated@@144 ($generated@@331 ($generated@@80 $generated@@140 $generated@@4) $generated@@548) ($generated@@79 0))))
 :pattern ( ($generated@@225 $generated@@548 ($generated@@79 0)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@140) (= (type $generated@@550) $generated@@68)) ($generated@@225 $generated@@549 ($generated@@239 $generated@@550))) (and (= ($generated@@281 ($generated@@331 ($generated@@80 $generated@@140 $generated@@4) $generated@@549)) $generated@@549) ($generated@@144 ($generated@@331 ($generated@@80 $generated@@140 $generated@@4) $generated@@549) ($generated@@239 $generated@@550))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@239 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@140) (= (type $generated@@552) $generated@@68)) ($generated@@225 $generated@@551 ($generated@@244 $generated@@552))) (and (= ($generated@@281 ($generated@@331 ($generated@@80 $generated@@140 $generated@@4) $generated@@551)) $generated@@551) ($generated@@144 ($generated@@331 ($generated@@80 $generated@@140 $generated@@4) $generated@@551) ($generated@@244 $generated@@552))))
 :pattern ( ($generated@@225 $generated@@551 ($generated@@244 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@140) (= (type $generated@@554) $generated@@68)) ($generated@@225 $generated@@553 ($generated@@163 $generated@@554))) (and (= ($generated@@281 ($generated@@331 ($generated@@80 $generated@@140 $generated@@2) $generated@@553)) $generated@@553) ($generated@@144 ($generated@@331 ($generated@@80 $generated@@140 $generated@@2) $generated@@553) ($generated@@163 $generated@@554))))
 :pattern ( ($generated@@225 $generated@@553 ($generated@@163 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@140) (= (type $generated@@556) $generated@@68)) ($generated@@225 $generated@@555 ($generated@@486 $generated@@556))) (and (= ($generated@@281 ($generated@@331 ($generated@@270 $generated@@140) $generated@@555)) $generated@@555) ($generated@@144 ($generated@@331 ($generated@@270 $generated@@140) $generated@@555) ($generated@@486 $generated@@556))))
 :pattern ( ($generated@@225 $generated@@555 ($generated@@486 $generated@@556)))
)))
(assert (= ($generated@@76 $generated@@232) $generated@@64))
(assert (= ($generated@@543 $generated@@232) $generated@@67))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@80 $generated@@140 $generated@@2)) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@557 ($generated@@163 $generated@@558) $generated@@559) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@140) (< 0 ($generated ($generated@@85 $generated@@557 $generated@@560)))) ($generated@@256 $generated@@560 $generated@@558 $generated@@559))
 :pattern ( ($generated@@85 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@78 $generated@@557 ($generated@@163 $generated@@558) $generated@@559))
)))
(assert (= $generated@@161 ($generated@@249 $generated@@161)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@138) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@233 $generated@@563) (and ($generated@@146 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@68) ($generated@@78 $generated@@561 ($generated@@147 $generated@@562 $generated@@564) $generated@@563))
 :pattern ( ($generated@@78 $generated@@561 ($generated@@147 $generated@@562 $generated@@564) $generated@@563))
))))) ($generated@@256 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@256 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@138) (= (type $generated@@566) $generated@@68)) (= (type $generated@@567) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@233 $generated@@567) (and ($generated@@146 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@68) ($generated@@78 $generated@@565 ($generated@@147 $generated@@568 $generated@@566) $generated@@567))
 :pattern ( ($generated@@78 $generated@@565 ($generated@@147 $generated@@568 $generated@@566) $generated@@567))
))))) ($generated@@256 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@256 ($generated@@155 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@140) (= (type $generated@@570) $generated@@140)) (= ($generated@@224 ($generated@@249 $generated@@569) ($generated@@249 $generated@@570)) ($generated@@249 ($generated@@224 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@224 ($generated@@249 $generated@@569) ($generated@@249 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@140) (= ($generated@@277 ($generated@@249 $generated@@571)) ($generated@@249 ($generated@@277 $generated@@571))))
 :pattern ( ($generated@@277 ($generated@@249 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= ($generated@@281 ($generated@@249 $generated@@572)) ($generated@@249 ($generated@@281 $generated@@572)))
 :pattern ( ($generated@@281 ($generated@@249 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 ($generated@@271 (type $generated@@573))))
 (=> (and (= (type $generated@@573) ($generated@@270 $generated@@574)) (= ($generated@@269 $generated@@573) 0)) (= $generated@@573 ($generated@@268 $generated@@574))))
 :pattern ( ($generated@@269 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@576)))
 (=> (and (and (= (type $generated@@575) ($generated@@80 $generated@@578 $generated@@2)) (= (type $generated@@577) $generated@@2)) (<= 0 ($generated $generated@@577))) (= ($generated@@286 ($generated@@86 $generated@@575 $generated@@576 $generated@@577)) (+ (- ($generated@@286 $generated@@575) ($generated ($generated@@85 $generated@@575 $generated@@576))) ($generated $generated@@577)))))
 :pattern ( ($generated@@286 ($generated@@86 $generated@@575 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@138) (= (type $generated@@580) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@233 $generated@@580) (and ($generated@@137 $generated@@579) ($generated@@78 $generated@@579 $generated@@232 $generated@@580)))) ($generated@@256 ($generated@@139 $generated@@579) ($generated@@362 $generated@@232) $generated@@580))
 :pattern ( ($generated@@256 ($generated@@139 $generated@@579) ($generated@@362 $generated@@232) $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@582) $generated@@2)) ($generated@@78 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@78 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@584) $generated@@3)) ($generated@@78 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@78 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@586) $generated@@4)) ($generated@@78 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@78 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@588) $generated@@442)) ($generated@@78 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@78 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@590) $generated@@140)) ($generated@@78 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@78 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@270 $generated@@140)) (= (type $generated@@592) $generated@@68)) (= ($generated@@144 $generated@@591 ($generated@@486 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@269 $generated@@591))) ($generated@@225 ($generated@@487 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@487 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@144 $generated@@591 ($generated@@486 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@270 $generated@@140)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@269 $generated@@595))) (< ($generated@@527 ($generated@@331 $generated@@138 ($generated@@487 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@527 ($generated@@331 $generated@@138 ($generated@@487 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@294 $generated@@140 $generated@@140)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) $generated@@68)) ($generated@@144 $generated@@597 ($generated@@401 $generated@@598 $generated@@599))) (and (and ($generated@@144 ($generated@@292 $generated@@597) ($generated@@239 $generated@@598)) ($generated@@144 ($generated@@339 $generated@@597) ($generated@@239 $generated@@599))) ($generated@@144 ($generated@@375 $generated@@597) ($generated@@239 ($generated@@147 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@144 $generated@@597 ($generated@@401 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@312 $generated@@140 $generated@@140)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) ($generated@@144 $generated@@600 ($generated@@409 $generated@@601 $generated@@602))) (and (and ($generated@@144 ($generated@@310 $generated@@600) ($generated@@244 $generated@@601)) ($generated@@144 ($generated@@350 $generated@@600) ($generated@@244 $generated@@602))) ($generated@@144 ($generated@@383 $generated@@600) ($generated@@244 ($generated@@147 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@144 $generated@@600 ($generated@@409 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@144 $generated@@603 $generated@@46))
 :pattern ( ($generated@@144 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@144 $generated@@604 $generated@@47))
 :pattern ( ($generated@@144 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@144 $generated@@605 $generated@@44))
 :pattern ( ($generated@@144 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@442) ($generated@@144 $generated@@606 $generated@@45))
 :pattern ( ($generated@@144 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@140) ($generated@@144 $generated@@607 $generated@@48))
 :pattern ( ($generated@@144 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(declare-fun $generated@@615 () Int)
(assert  (and (and (and (and (and (= (type $generated@@608) ($generated@@170 $generated@@81 $generated@@4)) (= (type $generated@@609) $generated@@81)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@611) $generated@@140)) (= (type $generated@@612) $generated@@138)) (= (type $generated@@613) $generated@@138)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@616  (=> (= $generated@@608 ($generated@@169 $generated@@609 $generated@@610 $generated@@60 false)) (=> (and (and (and ($generated@@225 $generated@@611 ($generated@@362 $generated@@232)) ($generated@@256 $generated@@611 ($generated@@362 $generated@@232) $generated@@610)) (= $generated@@612 $generated@@613)) (and ($generated@@144 $generated@@612 $generated@@232) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@137 $generated@@612)))))
(let (($generated@@617  (=> (and ($generated@@233 $generated@@610) ($generated@@614 $generated@@610)) (=> (and (and (and (and ($generated@@144 $generated@@613 $generated@@232) ($generated@@78 $generated@@613 $generated@@232 $generated@@610)) ($generated@@360 $generated@@613)) (= 1 $generated@@615)) (and ($generated@@137 $generated@@613) (= (ControlFlow 0 3) 2))) $generated@@616))))
$generated@@617)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
