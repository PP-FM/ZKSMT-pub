(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@577 (T@U T@U) Bool)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@79 (type $generated@@212))))
(= (type ($generated@@211 $generated@@212 $generated@@213)) ($generated@@76 $generated@@214 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@79 (type $generated@@215))))
 (=> (and (= (type $generated@@215) ($generated@@76 $generated@@217 $generated@@4)) (= (type $generated@@216) ($generated@@76 $generated@@217 $generated@@4))) (= ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216) ($generated@@211 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@79 (type $generated@@219))))
(= (type ($generated@@218 $generated@@219 $generated@@220)) ($generated@@76 $generated@@221 $generated@@4)))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@79 (type $generated@@222))))
 (=> (and (= (type $generated@@222) ($generated@@76 $generated@@224 $generated@@4)) (= (type $generated@@223) ($generated@@76 $generated@@224 $generated@@4))) (= ($generated@@218 ($generated@@218 $generated@@222 $generated@@223) $generated@@223) ($generated@@218 $generated@@222 $generated@@223))))
 :pattern ( ($generated@@218 ($generated@@218 $generated@@222 $generated@@223) $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@136)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@64) (= (type $generated@@230) $generated@@64)) (= (type $generated@@231) $generated@@145)) (= (type $generated@@232) $generated@@145)) (= ($generated@@132 ($generated@@225 $generated@@231 $generated@@232) ($generated@@135 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@132 ($generated@@225 $generated@@231 $generated@@232) ($generated@@135 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@136) (= (type $generated@@234) $generated@@136)) (= ($generated@@142 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@142 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@243) $generated@@64)) (= ($generated@@132 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@145) ($generated@@0 ($generated@@81 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@81 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@132 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@225 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@225 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@79 (type $generated@@318))))
 (=> (and (= (type $generated@@318) ($generated@@76 $generated@@320 $generated@@4)) (= (type $generated@@319) ($generated@@76 $generated@@320 $generated@@4))) (= ($generated@@317 $generated@@318 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (= ($generated@@0 ($generated@@81 $generated@@318 $generated@@321)) ($generated@@0 ($generated@@81 $generated@@319 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@318 $generated@@321))
 :pattern ( ($generated@@81 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@275 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(let (($generated@@327 ($generated@@284 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@283 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@282 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@281 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@285 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(let (($generated@@334 ($generated@@284 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@283 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@282 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(let (($generated@@338 ($generated@@302 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@301 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@300 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@299 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@303 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(let (($generated@@345 ($generated@@302 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@301 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@300 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@226 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@79 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@79 (type $generated@@355))))
 (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@357 $generated@@4)) (= (type $generated@@356) ($generated@@76 $generated@@357 $generated@@4))) ($generated@@350 $generated@@355 $generated@@356)) (and (= ($generated@@351 ($generated@@211 $generated@@355 $generated@@356) $generated@@355) $generated@@356) (= ($generated@@351 ($generated@@211 $generated@@355 $generated@@356) $generated@@356) $generated@@355))))
 :pattern ( ($generated@@211 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (and (= (type $generated@@358) ($generated@@76 $generated@@361 $generated@@4)) (= (type $generated@@359) ($generated@@76 $generated@@361 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@218 $generated@@358 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@81 $generated@@358 $generated@@360)) ($generated@@0 ($generated@@81 $generated@@359 $generated@@360))))))
 :pattern ( ($generated@@81 ($generated@@218 $generated@@358 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (=> (and (= (type $generated@@362) ($generated@@76 $generated@@365 $generated@@4)) (= (type $generated@@363) ($generated@@76 $generated@@365 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@362 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 $generated@@362 $generated@@364)) (not ($generated@@0 ($generated@@81 $generated@@363 $generated@@364)))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@362 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@235 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@145) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@250 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@235 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@370 ($generated@@240 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@145) ($generated@@0 ($generated@@81 $generated@@370 $generated@@373))) ($generated@@250 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@81 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@74 $generated@@370 ($generated@@240 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@81 ($generated@@276 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@285 (type $generated@@382))))
(let (($generated@@384 ($generated@@284 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386)))) (= ($generated@@81 ($generated@@378 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@303 (type $generated@@390))))
(let (($generated@@392 ($generated@@302 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394)))) (= ($generated@@81 ($generated@@388 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@284 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@283 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@302 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@301 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@408) $generated@@412))) (and ($generated@@250 ($generated@@81 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@250 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@416) $generated@@420))) (and ($generated@@250 ($generated@@81 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@250 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@79 (type $generated@@421))))
 (=> (and (and (= (type $generated@@421) ($generated@@76 $generated@@423 $generated@@4)) (= (type $generated@@422) ($generated@@76 $generated@@423 $generated@@4))) ($generated@@317 $generated@@421 $generated@@422)) (= $generated@@421 $generated@@422)))
 :pattern ( ($generated@@317 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
 (=> (and (and (= (type $generated@@424) ($generated@@76 $generated@@427 $generated@@4)) (= (type $generated@@425) ($generated@@76 $generated@@427 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@424 $generated@@426))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@424 $generated@@425) $generated@@426))))
 :pattern ( ($generated@@211 $generated@@424 $generated@@425) ($generated@@81 $generated@@424 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
 (=> (and (and (= (type $generated@@428) ($generated@@76 $generated@@431 $generated@@4)) (= (type $generated@@429) ($generated@@76 $generated@@431 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@429 $generated@@430))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@428 $generated@@429) $generated@@430))))
 :pattern ( ($generated@@211 $generated@@428 $generated@@429) ($generated@@81 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
 (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@435 $generated@@4)) (= (type $generated@@433) ($generated@@76 $generated@@435 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@433 $generated@@434))) (not ($generated@@0 ($generated@@81 ($generated@@351 $generated@@432 $generated@@433) $generated@@434)))))
 :pattern ( ($generated@@351 $generated@@432 $generated@@433) ($generated@@81 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@76 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@303 (type $generated@@438))))
(let (($generated@@440 ($generated@@302 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@301 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@300 $generated@@440 $generated@@439)) (= ($generated@@299 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@299 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@303 (type $generated@@441))))
(let (($generated@@443 ($generated@@302 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@301 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@300 $generated@@443 $generated@@442)) (= ($generated@@340 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@340 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@303 (type $generated@@444))))
(let (($generated@@446 ($generated@@302 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@301 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@300 $generated@@446 $generated@@445)) (= ($generated@@387 $generated@@444) ($generated@@436 $generated@@145))))))
 :pattern ( ($generated@@387 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@285 (type $generated@@447))))
(let (($generated@@449 ($generated@@284 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@283 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@282 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@447) ($generated@@270 ($generated@@225 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@376 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@303 (type $generated@@452))))
(let (($generated@@454 ($generated@@302 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@301 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@300 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@387 $generated@@452) ($generated@@270 ($generated@@225 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@387 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) ($generated@@226 $generated@@457 $generated@@46)) (and (= ($generated@@270 ($generated@@377 $generated@@2 $generated@@457)) $generated@@457) ($generated@@132 ($generated@@377 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) ($generated@@226 $generated@@458 $generated@@47)) (and (= ($generated@@270 ($generated@@377 $generated@@3 $generated@@458)) $generated@@458) ($generated@@132 ($generated@@377 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) ($generated@@226 $generated@@459 $generated@@44)) (and (= ($generated@@270 ($generated@@377 $generated@@4 $generated@@459)) $generated@@459) ($generated@@132 ($generated@@377 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) ($generated@@226 $generated@@461 $generated@@45)) (and (= ($generated@@270 ($generated@@377 $generated@@460 $generated@@461)) $generated@@461) ($generated@@132 ($generated@@377 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@64) (= ($generated@@226 ($generated@@270 $generated@@462) $generated@@463) ($generated@@132 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@226 ($generated@@270 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@79 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@76 $generated@@465 $generated@@2)) (<= 0 ($generated@@275 $generated@@464))))
 :pattern ( ($generated@@275 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@265 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@264 $generated@@467)) (<= 0 ($generated@@263 $generated@@466))))
 :pattern ( ($generated@@263 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@405 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@405 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@405 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@405 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@413 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@413 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@413 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@413 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) (= (type $generated@@489) $generated@@145)) (= ($generated@@256 ($generated@@225 $generated@@488 $generated@@489)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@135 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@135 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@135 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@135 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@145)) (= ($generated@@143 ($generated@@225 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@225 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) (= (type $generated@@501) $generated@@145)) (= ($generated@@144 ($generated@@225 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@225 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@265 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@264 $generated@@145)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@263 $generated@@508))) ($generated@@250 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@74 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@75 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@75 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@235 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@235 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@240 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@240 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@72 ($generated@@240 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@522 ($generated@@150 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@150 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@377 $generated@@531 ($generated@@270 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@270 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) (= ($generated@@132 $generated@@532 ($generated@@405 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@532) $generated@@535))) (and ($generated@@226 ($generated@@81 ($generated@@378 $generated@@532) $generated@@535) $generated@@534) ($generated@@226 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@532) $generated@@535))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@132 $generated@@532 ($generated@@405 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) (= ($generated@@132 $generated@@536 ($generated@@413 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@536) $generated@@539))) (and ($generated@@226 ($generated@@81 ($generated@@388 $generated@@536) $generated@@539) $generated@@538) ($generated@@226 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@536) $generated@@539))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@132 $generated@@536 ($generated@@413 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@145)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@225 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@145)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@225 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@79 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@76 $generated@@548 $generated@@4)) (= (type $generated@@547) ($generated@@76 $generated@@548 $generated@@4))) (= ($generated@@211 $generated@@546 ($generated@@211 $generated@@546 $generated@@547)) ($generated@@211 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@211 $generated@@546 ($generated@@211 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@79 (type $generated@@549))))
 (=> (and (= (type $generated@@549) ($generated@@76 $generated@@551 $generated@@4)) (= (type $generated@@550) ($generated@@76 $generated@@551 $generated@@4))) (= ($generated@@218 $generated@@549 ($generated@@218 $generated@@549 $generated@@550)) ($generated@@218 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@218 $generated@@549 ($generated@@218 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@64)) ($generated@@226 $generated@@552 ($generated@@405 $generated@@553 $generated@@554))) (and (= ($generated@@270 ($generated@@377 ($generated@@283 $generated@@145 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@377 ($generated@@283 $generated@@145 $generated@@145) $generated@@552) ($generated@@405 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@405 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) $generated@@64)) ($generated@@226 $generated@@555 ($generated@@413 $generated@@556 $generated@@557))) (and (= ($generated@@270 ($generated@@377 ($generated@@301 $generated@@145 $generated@@145) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@377 ($generated@@301 $generated@@145 $generated@@145) $generated@@555) ($generated@@413 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@226 $generated@@555 ($generated@@413 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@145)) ($generated@@226 $generated@@560 ($generated@@135 $generated@@558 $generated@@559))) (and (= ($generated@@270 ($generated@@377 $generated@@136 $generated@@560)) $generated@@560) ($generated@@132 ($generated@@377 $generated@@136 $generated@@560) ($generated@@135 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@226 $generated@@560 ($generated@@135 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@81 ($generated@@436 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@81 ($generated@@436 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@69)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@64) (= (type $generated@@566) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@565 $generated@@566)) $generated@@62) (= ($generated@@563 ($generated@@135 $generated@@565 $generated@@566)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@136) (= ($generated@@540 ($generated@@270 $generated@@567)) ($generated@@541 $generated@@567)))
 :pattern ( ($generated@@540 ($generated@@270 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@145) ($generated@@226 $generated@@568 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@377 $generated@@2 $generated@@568)) $generated@@568) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@568) ($generated@@75 0))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@75 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@64)) ($generated@@226 $generated@@569 ($generated@@235 $generated@@570))) (and (= ($generated@@270 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@569)) $generated@@569) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@569) ($generated@@235 $generated@@570))))
 :pattern ( ($generated@@226 $generated@@569 ($generated@@235 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@64)) ($generated@@226 $generated@@571 ($generated@@240 $generated@@572))) (and (= ($generated@@270 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@571)) $generated@@571) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@571) ($generated@@240 $generated@@572))))
 :pattern ( ($generated@@226 $generated@@571 ($generated@@240 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@64)) ($generated@@226 $generated@@573 ($generated@@150 $generated@@574))) (and (= ($generated@@270 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@573)) $generated@@573) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@573) ($generated@@150 $generated@@574))))
 :pattern ( ($generated@@226 $generated@@573 ($generated@@150 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@145) (= (type $generated@@576) $generated@@64)) ($generated@@226 $generated@@575 ($generated@@502 $generated@@576))) (and (= ($generated@@270 ($generated@@377 ($generated@@264 $generated@@145) $generated@@575)) $generated@@575) ($generated@@132 ($generated@@377 ($generated@@264 $generated@@145) $generated@@575) ($generated@@502 $generated@@576))))
 :pattern ( ($generated@@226 $generated@@575 ($generated@@502 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@79 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@76 $generated@@580 $generated@@4)) (= (type $generated@@579) ($generated@@76 $generated@@580 $generated@@4))) (= ($generated@@577 $generated@@578 $generated@@579) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@580) ($generated@@0 ($generated@@81 $generated@@578 $generated@@581))) ($generated@@0 ($generated@@81 $generated@@579 $generated@@581)))
 :pattern ( ($generated@@81 $generated@@578 $generated@@581))
 :pattern ( ($generated@@81 $generated@@579 $generated@@581))
)))))
 :pattern ( ($generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@583) $generated@@64)) (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@582 ($generated@@150 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@582 $generated@@585)))) ($generated@@250 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@81 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@74 $generated@@582 ($generated@@150 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 ($generated@@79 (type $generated@@586))))
 (=> (and (= (type $generated@@586) ($generated@@76 $generated@@588 $generated@@4)) (= (type $generated@@587) ($generated@@76 $generated@@588 $generated@@4))) (= ($generated@@350 $generated@@586 $generated@@587) (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@588) (or (not ($generated@@0 ($generated@@81 $generated@@586 $generated@@589))) (not ($generated@@0 ($generated@@81 $generated@@587 $generated@@589)))))
 :pattern ( ($generated@@81 $generated@@586 $generated@@589))
 :pattern ( ($generated@@81 $generated@@587 $generated@@589))
)))))
 :pattern ( ($generated@@350 $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@136) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@592) (and ($generated@@134 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@64) ($generated@@74 $generated@@590 ($generated@@135 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@74 $generated@@590 ($generated@@135 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@250 ($generated@@143 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@136) (= (type $generated@@595) $generated@@64)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@596) (and ($generated@@134 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@64) ($generated@@74 $generated@@594 ($generated@@135 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@74 $generated@@594 ($generated@@135 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@250 ($generated@@144 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@145) (= (type $generated@@599) $generated@@145)) (= ($generated@@225 ($generated@@245 $generated@@598) ($generated@@245 $generated@@599)) ($generated@@245 ($generated@@225 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@598) ($generated@@245 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@600)) ($generated@@245 ($generated@@270 $generated@@600)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ) (! (let (($generated@@602 ($generated@@265 (type $generated@@601))))
 (=> (and (= (type $generated@@601) ($generated@@264 $generated@@602)) (= ($generated@@263 $generated@@601) 0)) (= $generated@@601 ($generated@@262 $generated@@602))))
 :pattern ( ($generated@@263 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@604)))
 (=> (and (and (= (type $generated@@603) ($generated@@76 $generated@@606 $generated@@2)) (= (type $generated@@605) $generated@@2)) (<= 0 ($generated $generated@@605))) (= ($generated@@275 ($generated@@82 $generated@@603 $generated@@604 $generated@@605)) (+ (- ($generated@@275 $generated@@603) ($generated ($generated@@81 $generated@@603 $generated@@604))) ($generated $generated@@605)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@603 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
 (=> (and (= (type $generated@@607) ($generated@@76 $generated@@610 $generated@@4)) (= (type $generated@@608) ($generated@@76 $generated@@610 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@211 $generated@@607 $generated@@608) $generated@@609))  (or ($generated@@0 ($generated@@81 $generated@@607 $generated@@609)) ($generated@@0 ($generated@@81 $generated@@608 $generated@@609))))))
 :pattern ( ($generated@@81 ($generated@@211 $generated@@607 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@612) $generated@@2)) ($generated@@74 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@74 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@614) $generated@@3)) ($generated@@74 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@74 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@616) $generated@@4)) ($generated@@74 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@74 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) $generated@@460)) ($generated@@74 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@74 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@145)) ($generated@@74 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@264 $generated@@145)) (= (type $generated@@622) $generated@@64)) (= ($generated@@132 $generated@@621 ($generated@@502 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@263 $generated@@621))) ($generated@@226 ($generated@@503 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@503 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@132 $generated@@621 ($generated@@502 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@263 $generated@@625))) (< ($generated@@541 ($generated@@377 $generated@@136 ($generated@@503 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@541 ($generated@@377 $generated@@136 ($generated@@503 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) $generated@@64)) ($generated@@132 $generated@@627 ($generated@@405 $generated@@628 $generated@@629))) (and (and ($generated@@132 ($generated@@281 $generated@@627) ($generated@@235 $generated@@628)) ($generated@@132 ($generated@@329 $generated@@627) ($generated@@235 $generated@@629))) ($generated@@132 ($generated@@376 $generated@@627) ($generated@@235 ($generated@@135 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@132 $generated@@627 ($generated@@405 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@631) $generated@@64)) (= (type $generated@@632) $generated@@64)) ($generated@@132 $generated@@630 ($generated@@413 $generated@@631 $generated@@632))) (and (and ($generated@@132 ($generated@@299 $generated@@630) ($generated@@240 $generated@@631)) ($generated@@132 ($generated@@340 $generated@@630) ($generated@@240 $generated@@632))) ($generated@@132 ($generated@@387 $generated@@630) ($generated@@240 ($generated@@135 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@132 $generated@@630 ($generated@@413 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@132 $generated@@633 $generated@@46))
 :pattern ( ($generated@@132 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@132 $generated@@634 $generated@@47))
 :pattern ( ($generated@@132 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@132 $generated@@635 $generated@@44))
 :pattern ( ($generated@@132 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@460) ($generated@@132 $generated@@636 $generated@@45))
 :pattern ( ($generated@@132 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@145) ($generated@@132 $generated@@637 $generated@@48))
 :pattern ( ($generated@@132 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 (T@U) Bool)
(declare-fun $generated@@661 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@638) $generated@@64) (= (type $generated@@639) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@640) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@641) $generated@@145)) (= (type $generated@@642) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@643) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@644) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@645) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@646) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@647) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@648) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@649) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@650) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@651) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@652) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@653) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@654) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@655) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@656) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@657) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@658) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@659) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@662  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (= (type $generated@@663) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@664) $generated@@145)) (and ($generated@@132 $generated@@663 ($generated@@235 $generated@@638)) ($generated@@226 $generated@@664 $generated@@638))) ($generated@@0 ($generated@@81 $generated@@663 $generated@@664)))
 :pattern ( ($generated@@81 $generated@@663 $generated@@664))
)))))
(let (($generated@@665  (=> (and (not (and (and ($generated@@132 $generated@@639 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@639 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@226 $generated@@641 $generated@@638) ($generated@@250 $generated@@641 $generated@@638 $generated@@640)))) (= (ControlFlow 0 4) 2)) $generated@@662)))
(let (($generated@@666  (=> (and (and (and ($generated@@132 $generated@@639 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@639 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@226 $generated@@641 $generated@@638) ($generated@@250 $generated@@641 $generated@@638 $generated@@640))) (= (ControlFlow 0 3) 2)) $generated@@662)))
(let (($generated@@667  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@669) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@668 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@669 ($generated@@235 $generated@@638)))) ($generated@@350 $generated@@668 $generated@@669))
 :no-pattern (type $generated@@668)
 :no-pattern (type $generated@@669)
 :no-pattern ($generated $generated@@668)
 :no-pattern ($generated@@0 $generated@@668)
 :no-pattern ($generated $generated@@669)
 :no-pattern ($generated@@0 $generated@@669)
))) (=> (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (= (type $generated@@670) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@671) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@670 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@671 ($generated@@235 $generated@@638)))) ($generated@@350 $generated@@670 $generated@@671))
 :no-pattern (type $generated@@670)
 :no-pattern (type $generated@@671)
 :no-pattern ($generated $generated@@670)
 :no-pattern ($generated@@0 $generated@@670)
 :no-pattern ($generated $generated@@671)
 :no-pattern ($generated@@0 $generated@@671)
)) (and (=> (= (ControlFlow 0 5) 3) $generated@@666) (=> (= (ControlFlow 0 5) 4) $generated@@665))))))
(let (($generated@@672  (=> (and (not (and (and ($generated@@132 $generated@@642 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@642 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@643 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@643 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 8) 5)) $generated@@667)))
(let (($generated@@673  (=> (and (and (and ($generated@@132 $generated@@642 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@642 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@643 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@643 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 7) 5)) $generated@@667)))
(let (($generated@@674  (and (=> (= (ControlFlow 0 9) (- 0 10)) (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@676) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@675 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@676 ($generated@@235 $generated@@638)))) ($generated@@317 ($generated@@218 $generated@@675 $generated@@676) $generated@@676))
 :pattern ( ($generated@@218 $generated@@675 $generated@@676))
))) (=> (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@678) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@677 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@678 ($generated@@235 $generated@@638)))) ($generated@@317 ($generated@@218 $generated@@677 $generated@@678) $generated@@678))
 :pattern ( ($generated@@218 $generated@@677 $generated@@678))
)) (and (=> (= (ControlFlow 0 9) 7) $generated@@673) (=> (= (ControlFlow 0 9) 8) $generated@@672))))))
(let (($generated@@679  (=> (and (not (and (and ($generated@@132 $generated@@644 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@644 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@645 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@645 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 12) 9)) $generated@@674)))
(let (($generated@@680  (=> (and (and (and ($generated@@132 $generated@@644 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@644 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@645 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@645 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 11) 9)) $generated@@674)))
(let (($generated@@681  (and (=> (= (ControlFlow 0 13) (- 0 14)) (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@683) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@682 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@683 ($generated@@235 $generated@@638)))) ($generated@@317 ($generated@@351 $generated@@682 $generated@@683) $generated@@683))
 :pattern ( ($generated@@351 $generated@@682 $generated@@683))
))) (=> (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (and (= (type $generated@@684) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@685) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@684 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@685 ($generated@@235 $generated@@638)))) ($generated@@317 ($generated@@351 $generated@@684 $generated@@685) $generated@@685))
 :pattern ( ($generated@@351 $generated@@684 $generated@@685))
)) (and (=> (= (ControlFlow 0 13) 11) $generated@@680) (=> (= (ControlFlow 0 13) 12) $generated@@679))))))
(let (($generated@@686  (=> (and (not (and (and ($generated@@132 $generated@@646 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@646 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@647 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@647 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 16) 13)) $generated@@681)))
(let (($generated@@687  (=> (and (and (and ($generated@@132 $generated@@646 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@646 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@647 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@647 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 15) 13)) $generated@@681)))
(let (($generated@@688  (and (=> (= (ControlFlow 0 17) (- 0 18)) (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@690) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@689 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@690 ($generated@@235 $generated@@638)))) ($generated@@317 ($generated@@211 $generated@@689 $generated@@690) $generated@@690))
 :pattern ( ($generated@@211 $generated@@689 $generated@@690))
))) (=> (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@692) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@691 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@692 ($generated@@235 $generated@@638)))) ($generated@@317 ($generated@@211 $generated@@691 $generated@@692) $generated@@692))
 :pattern ( ($generated@@211 $generated@@691 $generated@@692))
)) (and (=> (= (ControlFlow 0 17) 15) $generated@@687) (=> (= (ControlFlow 0 17) 16) $generated@@686))))))
(let (($generated@@693  (=> (and (not (and (and ($generated@@132 $generated@@648 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@648 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@649 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@649 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 20) 17)) $generated@@688)))
(let (($generated@@694  (=> (and (and (and ($generated@@132 $generated@@648 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@648 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@649 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@649 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 19) 17)) $generated@@688)))
(let (($generated@@695  (and (=> (= (ControlFlow 0 21) (- 0 22)) (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@697) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@696 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@697 ($generated@@235 $generated@@638)))) ($generated@@577 $generated@@697 $generated@@696))
 :pattern ( ($generated@@577 $generated@@697 $generated@@696))
))) (=> (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@698) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@699) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@698 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@699 ($generated@@235 $generated@@638)))) ($generated@@577 $generated@@699 $generated@@698))
 :pattern ( ($generated@@577 $generated@@699 $generated@@698))
)) (and (=> (= (ControlFlow 0 21) 19) $generated@@694) (=> (= (ControlFlow 0 21) 20) $generated@@693))))))
(let (($generated@@700  (=> (and (not (and (and ($generated@@132 $generated@@650 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@650 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@651 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@651 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 24) 21)) $generated@@695)))
(let (($generated@@701  (=> (and (and (and ($generated@@132 $generated@@650 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@650 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@651 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@651 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 23) 21)) $generated@@695)))
(let (($generated@@702  (and (=> (= (ControlFlow 0 25) (- 0 26)) (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (= (type $generated@@703) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@704) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@703 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@704 ($generated@@235 $generated@@638)))) (and ($generated@@577 $generated@@704 $generated@@703) (not ($generated@@577 $generated@@703 $generated@@704))))
 :pattern ( ($generated@@577 $generated@@704 $generated@@703))
))) (=> (forall (($generated@@705 T@U) ($generated@@706 T@U) ) (!  (=> (and (and (= (type $generated@@705) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@706) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@705 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@706 ($generated@@235 $generated@@638)))) (and ($generated@@577 $generated@@706 $generated@@705) (not ($generated@@577 $generated@@705 $generated@@706))))
 :pattern ( ($generated@@577 $generated@@706 $generated@@705))
)) (and (=> (= (ControlFlow 0 25) 23) $generated@@701) (=> (= (ControlFlow 0 25) 24) $generated@@700))))))
(let (($generated@@707  (=> (and (not (and (and ($generated@@132 $generated@@652 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@652 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@653 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@653 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 28) 25)) $generated@@702)))
(let (($generated@@708  (=> (and (and (and ($generated@@132 $generated@@652 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@652 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@653 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@653 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 27) 25)) $generated@@702)))
(let (($generated@@709  (and (=> (= (ControlFlow 0 29) (- 0 30)) (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@710) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@711) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@710 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@711 ($generated@@235 $generated@@638)))) (and ($generated@@577 $generated@@710 $generated@@711) (not ($generated@@577 $generated@@711 $generated@@710))))
 :pattern ( ($generated@@577 $generated@@710 $generated@@711))
))) (=> (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (= (type $generated@@712) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@713) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@712 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@713 ($generated@@235 $generated@@638)))) (and ($generated@@577 $generated@@712 $generated@@713) (not ($generated@@577 $generated@@713 $generated@@712))))
 :pattern ( ($generated@@577 $generated@@712 $generated@@713))
)) (and (=> (= (ControlFlow 0 29) 27) $generated@@708) (=> (= (ControlFlow 0 29) 28) $generated@@707))))))
(let (($generated@@714  (=> (and (not (and (and ($generated@@132 $generated@@654 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@654 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@655 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@655 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 32) 29)) $generated@@709)))
(let (($generated@@715  (=> (and (and (and ($generated@@132 $generated@@654 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@654 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@655 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@655 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 31) 29)) $generated@@709)))
(let (($generated@@716  (and (=> (= (ControlFlow 0 33) (- 0 34)) (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@718) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@717 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@718 ($generated@@235 $generated@@638)))) ($generated@@577 $generated@@717 $generated@@718))
 :pattern ( ($generated@@577 $generated@@717 $generated@@718))
))) (=> (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@720) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@719 ($generated@@235 $generated@@638)) ($generated@@132 $generated@@720 ($generated@@235 $generated@@638)))) ($generated@@577 $generated@@719 $generated@@720))
 :pattern ( ($generated@@577 $generated@@719 $generated@@720))
)) (and (=> (= (ControlFlow 0 33) 31) $generated@@715) (=> (= (ControlFlow 0 33) 32) $generated@@714))))))
(let (($generated@@721  (=> (and (not (and (and ($generated@@132 $generated@@656 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@656 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@657 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@657 ($generated@@235 $generated@@638) $generated@@640)))) (= (ControlFlow 0 36) 33)) $generated@@716)))
(let (($generated@@722  (=> (and (and (and ($generated@@132 $generated@@656 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@656 ($generated@@235 $generated@@638) $generated@@640)) (and ($generated@@132 $generated@@657 ($generated@@235 $generated@@638)) ($generated@@74 $generated@@657 ($generated@@235 $generated@@638) $generated@@640))) (= (ControlFlow 0 35) 33)) $generated@@716)))
(let (($generated@@723  (=> (= $generated@@658 ($generated@@156 $generated@@659 $generated@@640 $generated@@60 false)) (and (=> (= (ControlFlow 0 37) 35) $generated@@722) (=> (= (ControlFlow 0 37) 36) $generated@@721)))))
(let (($generated@@724  (=> (and (and ($generated@@249 $generated@@640) ($generated@@660 $generated@@640)) (and (= 0 $generated@@661) (= (ControlFlow 0 38) 37))) $generated@@723)))
$generated@@724))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 33) (- 34))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 29) (- 30))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 17) (- 18))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 13) (- 14))))
(check-sat)
(get-info :reason-unknown)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@350 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@377 (T@T T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@T) T@U)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@577 (T@U T@U) Bool)
(declare-fun $generated@@582 (T@U T@U) Bool)
(declare-fun $generated@@629 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@79 (type $generated@@212))))
(= (type ($generated@@211 $generated@@212 $generated@@213)) ($generated@@76 $generated@@214 $generated@@4)))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@79 (type $generated@@215))))
 (=> (and (= (type $generated@@215) ($generated@@76 $generated@@217 $generated@@4)) (= (type $generated@@216) ($generated@@76 $generated@@217 $generated@@4))) (= ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216) ($generated@@211 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@211 ($generated@@211 $generated@@215 $generated@@216) $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@79 (type $generated@@219))))
(= (type ($generated@@218 $generated@@219 $generated@@220)) ($generated@@76 $generated@@221 $generated@@4)))
 :pattern ( ($generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (let (($generated@@224 ($generated@@79 (type $generated@@222))))
 (=> (and (= (type $generated@@222) ($generated@@76 $generated@@224 $generated@@4)) (= (type $generated@@223) ($generated@@76 $generated@@224 $generated@@4))) (= ($generated@@218 ($generated@@218 $generated@@222 $generated@@223) $generated@@223) ($generated@@218 $generated@@222 $generated@@223))))
 :pattern ( ($generated@@218 ($generated@@218 $generated@@222 $generated@@223) $generated@@223))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@136)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@64) (= (type $generated@@230) $generated@@64)) (= (type $generated@@231) $generated@@145)) (= (type $generated@@232) $generated@@145)) (= ($generated@@132 ($generated@@225 $generated@@231 $generated@@232) ($generated@@135 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@132 ($generated@@225 $generated@@231 $generated@@232) ($generated@@135 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@136) (= (type $generated@@234) $generated@@136)) (= ($generated@@142 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@142 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@64)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@243) $generated@@64)) (= ($generated@@132 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@145) ($generated@@0 ($generated@@81 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@81 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@132 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@225 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@225 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@79 (type $generated@@318))))
 (=> (and (= (type $generated@@318) ($generated@@76 $generated@@320 $generated@@4)) (= (type $generated@@319) ($generated@@76 $generated@@320 $generated@@4))) (= ($generated@@317 $generated@@318 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (= ($generated@@0 ($generated@@81 $generated@@318 $generated@@321)) ($generated@@0 ($generated@@81 $generated@@319 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@318 $generated@@321))
 :pattern ( ($generated@@81 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@275 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(let (($generated@@327 ($generated@@284 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@283 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@282 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@281 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@285 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(let (($generated@@334 ($generated@@284 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@283 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@282 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(let (($generated@@338 ($generated@@302 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@301 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@300 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@299 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@303 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(let (($generated@@345 ($generated@@302 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@301 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@300 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@226 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@79 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352 $generated@@353)) ($generated@@76 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@79 (type $generated@@355))))
 (=> (and (and (= (type $generated@@355) ($generated@@76 $generated@@357 $generated@@4)) (= (type $generated@@356) ($generated@@76 $generated@@357 $generated@@4))) ($generated@@350 $generated@@355 $generated@@356)) (and (= ($generated@@351 ($generated@@211 $generated@@355 $generated@@356) $generated@@355) $generated@@356) (= ($generated@@351 ($generated@@211 $generated@@355 $generated@@356) $generated@@356) $generated@@355))))
 :pattern ( ($generated@@211 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
 (=> (and (= (type $generated@@358) ($generated@@76 $generated@@361 $generated@@4)) (= (type $generated@@359) ($generated@@76 $generated@@361 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@218 $generated@@358 $generated@@359) $generated@@360))  (and ($generated@@0 ($generated@@81 $generated@@358 $generated@@360)) ($generated@@0 ($generated@@81 $generated@@359 $generated@@360))))))
 :pattern ( ($generated@@81 ($generated@@218 $generated@@358 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
 (=> (and (= (type $generated@@362) ($generated@@76 $generated@@365 $generated@@4)) (= (type $generated@@363) ($generated@@76 $generated@@365 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@351 $generated@@362 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 $generated@@362 $generated@@364)) (not ($generated@@0 ($generated@@81 $generated@@363 $generated@@364)))))))
 :pattern ( ($generated@@81 ($generated@@351 $generated@@362 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@367) $generated@@64)) (= (type $generated@@368) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@366 ($generated@@235 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@145) ($generated@@0 ($generated@@81 $generated@@366 $generated@@369))) ($generated@@250 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@81 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@74 $generated@@366 ($generated@@235 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (and (= (type $generated@@370) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@371) $generated@@64)) (= (type $generated@@372) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@370 ($generated@@240 $generated@@371) $generated@@372) (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@145) ($generated@@0 ($generated@@81 $generated@@370 $generated@@373))) ($generated@@250 $generated@@373 $generated@@371 $generated@@372))
 :pattern ( ($generated@@81 $generated@@370 $generated@@373))
))))
 :pattern ( ($generated@@74 $generated@@370 ($generated@@240 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 (type $generated@@374)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@375) $generated@@374)) 0))
 :pattern ( (let (($generated@@375 (type $generated@@374)))
($generated@@81 ($generated@@276 $generated@@375) $generated@@374)))
)))
(assert  (and (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@376 $generated@@379)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@376 $generated@@379))
)) (forall (($generated@@380 T@T) ($generated@@381 T@U) ) (! (= (type ($generated@@377 $generated@@380 $generated@@381)) $generated@@380)
 :pattern ( ($generated@@377 $generated@@380 $generated@@381))
))) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@285 (type $generated@@382))))
(let (($generated@@384 ($generated@@284 (type $generated@@382))))
(= (type ($generated@@378 $generated@@382)) ($generated@@76 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@378 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@386) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386)))) (= ($generated@@81 ($generated@@378 $generated@@385) ($generated@@143 ($generated@@377 $generated@@136 $generated@@386))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@303 (type $generated@@390))))
(let (($generated@@392 ($generated@@302 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@76 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@394) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394)))) (= ($generated@@81 ($generated@@388 $generated@@393) ($generated@@143 ($generated@@377 $generated@@136 $generated@@394))) ($generated@@144 ($generated@@377 $generated@@136 $generated@@394))))))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@284 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@283 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@302 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@301 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@64)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) $generated@@64)) (= (type $generated@@411) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@408) $generated@@412))) (and ($generated@@250 ($generated@@81 ($generated@@378 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@250 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@74 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@64)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@417) $generated@@64)) (= (type $generated@@418) $generated@@64)) (= (type $generated@@419) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@416) $generated@@420))) (and ($generated@@250 ($generated@@81 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@250 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@74 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@79 (type $generated@@421))))
 (=> (and (and (= (type $generated@@421) ($generated@@76 $generated@@423 $generated@@4)) (= (type $generated@@422) ($generated@@76 $generated@@423 $generated@@4))) ($generated@@317 $generated@@421 $generated@@422)) (= $generated@@421 $generated@@422)))
 :pattern ( ($generated@@317 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 (type $generated@@426)))
 (=> (and (and (= (type $generated@@424) ($generated@@76 $generated@@427 $generated@@4)) (= (type $generated@@425) ($generated@@76 $generated@@427 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@424 $generated@@426))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@424 $generated@@425) $generated@@426))))
 :pattern ( ($generated@@211 $generated@@424 $generated@@425) ($generated@@81 $generated@@424 $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
 (=> (and (and (= (type $generated@@428) ($generated@@76 $generated@@431 $generated@@4)) (= (type $generated@@429) ($generated@@76 $generated@@431 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@429 $generated@@430))) ($generated@@0 ($generated@@81 ($generated@@211 $generated@@428 $generated@@429) $generated@@430))))
 :pattern ( ($generated@@211 $generated@@428 $generated@@429) ($generated@@81 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
 (=> (and (and (= (type $generated@@432) ($generated@@76 $generated@@435 $generated@@4)) (= (type $generated@@433) ($generated@@76 $generated@@435 $generated@@4))) ($generated@@0 ($generated@@81 $generated@@433 $generated@@434))) (not ($generated@@0 ($generated@@81 ($generated@@351 $generated@@432 $generated@@433) $generated@@434)))))
 :pattern ( ($generated@@351 $generated@@432 $generated@@433) ($generated@@81 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@437 T@T) ) (! (= (type ($generated@@436 $generated@@437)) ($generated@@76 $generated@@437 $generated@@4))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@303 (type $generated@@438))))
(let (($generated@@440 ($generated@@302 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@301 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@300 $generated@@440 $generated@@439)) (= ($generated@@299 $generated@@438) ($generated@@436 $generated@@440))))))
 :pattern ( ($generated@@299 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@303 (type $generated@@441))))
(let (($generated@@443 ($generated@@302 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@301 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@300 $generated@@443 $generated@@442)) (= ($generated@@340 $generated@@441) ($generated@@436 $generated@@442))))))
 :pattern ( ($generated@@340 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@303 (type $generated@@444))))
(let (($generated@@446 ($generated@@302 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@301 $generated@@446 $generated@@445)) (= (= $generated@@444 ($generated@@300 $generated@@446 $generated@@445)) (= ($generated@@387 $generated@@444) ($generated@@436 $generated@@145))))))
 :pattern ( ($generated@@387 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@285 (type $generated@@447))))
(let (($generated@@449 ($generated@@284 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@283 $generated@@449 $generated@@448)) (or (= $generated@@447 ($generated@@282 $generated@@449 $generated@@448)) (exists (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (and (and (= (type $generated@@450) $generated@@145) (= (type $generated@@451) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@376 $generated@@447) ($generated@@270 ($generated@@225 $generated@@450 $generated@@451)))))
 :no-pattern (type $generated@@450)
 :no-pattern (type $generated@@451)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
))))))
 :pattern ( ($generated@@376 $generated@@447))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@303 (type $generated@@452))))
(let (($generated@@454 ($generated@@302 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@301 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@300 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@145) (= (type $generated@@456) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@387 $generated@@452) ($generated@@270 ($generated@@225 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@387 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@145) ($generated@@226 $generated@@457 $generated@@46)) (and (= ($generated@@270 ($generated@@377 $generated@@2 $generated@@457)) $generated@@457) ($generated@@132 ($generated@@377 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) ($generated@@226 $generated@@458 $generated@@47)) (and (= ($generated@@270 ($generated@@377 $generated@@3 $generated@@458)) $generated@@458) ($generated@@132 ($generated@@377 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) ($generated@@226 $generated@@459 $generated@@44)) (and (= ($generated@@270 ($generated@@377 $generated@@4 $generated@@459)) $generated@@459) ($generated@@132 ($generated@@377 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@145) ($generated@@226 $generated@@461 $generated@@45)) (and (= ($generated@@270 ($generated@@377 $generated@@460 $generated@@461)) $generated@@461) ($generated@@132 ($generated@@377 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@64) (= ($generated@@226 ($generated@@270 $generated@@462) $generated@@463) ($generated@@132 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@226 ($generated@@270 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@79 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@76 $generated@@465 $generated@@2)) (<= 0 ($generated@@275 $generated@@464))))
 :pattern ( ($generated@@275 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@265 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@264 $generated@@467)) (<= 0 ($generated@@263 $generated@@466))))
 :pattern ( ($generated@@263 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@405 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@405 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@405 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@405 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@64) (= (type $generated@@477) $generated@@64)) (= ($generated@@72 ($generated@@405 $generated@@476 $generated@@477)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@64) (= (type $generated@@481) $generated@@64)) (= ($generated@@478 ($generated@@413 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@413 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@64) (= (type $generated@@485) $generated@@64)) (= ($generated@@482 ($generated@@413 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@413 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@64) (= (type $generated@@487) $generated@@64)) (= ($generated@@72 ($generated@@413 $generated@@486 $generated@@487)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@145) (= (type $generated@@489) $generated@@145)) (= ($generated@@256 ($generated@@225 $generated@@488 $generated@@489)) $generated@@61))
 :pattern ( ($generated@@225 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@64) (= (type $generated@@493) $generated@@64)) (= ($generated@@490 ($generated@@135 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@135 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@64) (= (type $generated@@497) $generated@@64)) (= ($generated@@494 ($generated@@135 $generated@@496 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@135 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@145)) (= ($generated@@143 ($generated@@225 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@225 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) (= (type $generated@@501) $generated@@145)) (= ($generated@@144 ($generated@@225 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@225 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@265 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@264 $generated@@145)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@263 $generated@@508))) ($generated@@250 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@74 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@75 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@75 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@64)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@64) (= ($generated@@514 ($generated@@235 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@235 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@64)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@64) (= ($generated@@518 ($generated@@240 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@240 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@72 ($generated@@240 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@64)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@64) (= ($generated@@522 ($generated@@150 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@150 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@64)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@64) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@72 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@377 $generated@@531 ($generated@@270 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@270 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) (= ($generated@@132 $generated@@532 ($generated@@405 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@532) $generated@@535))) (and ($generated@@226 ($generated@@81 ($generated@@378 $generated@@532) $generated@@535) $generated@@534) ($generated@@226 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@532) $generated@@535))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@132 $generated@@532 ($generated@@405 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@537) $generated@@64)) (= (type $generated@@538) $generated@@64)) (= ($generated@@132 $generated@@536 ($generated@@413 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@536) $generated@@539))) (and ($generated@@226 ($generated@@81 ($generated@@388 $generated@@536) $generated@@539) $generated@@538) ($generated@@226 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@81 ($generated@@388 $generated@@536) $generated@@539))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@132 $generated@@536 ($generated@@413 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@145)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@225 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@145)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@225 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 ($generated@@79 (type $generated@@546))))
 (=> (and (= (type $generated@@546) ($generated@@76 $generated@@548 $generated@@4)) (= (type $generated@@547) ($generated@@76 $generated@@548 $generated@@4))) (= ($generated@@211 $generated@@546 ($generated@@211 $generated@@546 $generated@@547)) ($generated@@211 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@211 $generated@@546 ($generated@@211 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@79 (type $generated@@549))))
 (=> (and (= (type $generated@@549) ($generated@@76 $generated@@551 $generated@@4)) (= (type $generated@@550) ($generated@@76 $generated@@551 $generated@@4))) (= ($generated@@218 $generated@@549 ($generated@@218 $generated@@549 $generated@@550)) ($generated@@218 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@218 $generated@@549 ($generated@@218 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) $generated@@64)) ($generated@@226 $generated@@552 ($generated@@405 $generated@@553 $generated@@554))) (and (= ($generated@@270 ($generated@@377 ($generated@@283 $generated@@145 $generated@@145) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@377 ($generated@@283 $generated@@145 $generated@@145) $generated@@552) ($generated@@405 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@226 $generated@@552 ($generated@@405 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) (= (type $generated@@557) $generated@@64)) ($generated@@226 $generated@@555 ($generated@@413 $generated@@556 $generated@@557))) (and (= ($generated@@270 ($generated@@377 ($generated@@301 $generated@@145 $generated@@145) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@377 ($generated@@301 $generated@@145 $generated@@145) $generated@@555) ($generated@@413 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@226 $generated@@555 ($generated@@413 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@64) (= (type $generated@@559) $generated@@64)) (= (type $generated@@560) $generated@@145)) ($generated@@226 $generated@@560 ($generated@@135 $generated@@558 $generated@@559))) (and (= ($generated@@270 ($generated@@377 $generated@@136 $generated@@560)) $generated@@560) ($generated@@132 ($generated@@377 $generated@@136 $generated@@560) ($generated@@135 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@226 $generated@@560 ($generated@@135 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 (type $generated@@561)))
 (not ($generated@@0 ($generated@@81 ($generated@@436 $generated@@562) $generated@@561))))
 :pattern ( (let (($generated@@562 (type $generated@@561)))
($generated@@81 ($generated@@436 $generated@@562) $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@69)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@64) (= (type $generated@@566) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@565 $generated@@566)) $generated@@62) (= ($generated@@563 ($generated@@135 $generated@@565 $generated@@566)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@136) (= ($generated@@540 ($generated@@270 $generated@@567)) ($generated@@541 $generated@@567)))
 :pattern ( ($generated@@540 ($generated@@270 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@145) ($generated@@226 $generated@@568 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@377 $generated@@2 $generated@@568)) $generated@@568) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@568) ($generated@@75 0))))
 :pattern ( ($generated@@226 $generated@@568 ($generated@@75 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@145) (= (type $generated@@570) $generated@@64)) ($generated@@226 $generated@@569 ($generated@@235 $generated@@570))) (and (= ($generated@@270 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@569)) $generated@@569) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@569) ($generated@@235 $generated@@570))))
 :pattern ( ($generated@@226 $generated@@569 ($generated@@235 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@64)) ($generated@@226 $generated@@571 ($generated@@240 $generated@@572))) (and (= ($generated@@270 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@571)) $generated@@571) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@4) $generated@@571) ($generated@@240 $generated@@572))))
 :pattern ( ($generated@@226 $generated@@571 ($generated@@240 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@64)) ($generated@@226 $generated@@573 ($generated@@150 $generated@@574))) (and (= ($generated@@270 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@573)) $generated@@573) ($generated@@132 ($generated@@377 ($generated@@76 $generated@@145 $generated@@2) $generated@@573) ($generated@@150 $generated@@574))))
 :pattern ( ($generated@@226 $generated@@573 ($generated@@150 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@145) (= (type $generated@@576) $generated@@64)) ($generated@@226 $generated@@575 ($generated@@502 $generated@@576))) (and (= ($generated@@270 ($generated@@377 ($generated@@264 $generated@@145) $generated@@575)) $generated@@575) ($generated@@132 ($generated@@377 ($generated@@264 $generated@@145) $generated@@575) ($generated@@502 $generated@@576))))
 :pattern ( ($generated@@226 $generated@@575 ($generated@@502 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@79 (type $generated@@578))))
 (=> (and (= (type $generated@@578) ($generated@@76 $generated@@580 $generated@@4)) (= (type $generated@@579) ($generated@@76 $generated@@580 $generated@@4))) (= ($generated@@577 $generated@@578 $generated@@579) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@580) ($generated@@0 ($generated@@81 $generated@@578 $generated@@581))) ($generated@@0 ($generated@@81 $generated@@579 $generated@@581)))
 :pattern ( ($generated@@81 $generated@@578 $generated@@581))
 :pattern ( ($generated@@81 $generated@@579 $generated@@581))
)))))
 :pattern ( ($generated@@577 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@79 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@76 $generated@@585 $generated@@4)) (= (type $generated@@584) ($generated@@76 $generated@@585 $generated@@4))) (= ($generated@@582 $generated@@583 $generated@@584) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@585) ($generated@@0 ($generated@@81 $generated@@583 $generated@@586))) ($generated@@0 ($generated@@81 $generated@@584 $generated@@586)))
 :pattern ( ($generated@@81 $generated@@583 $generated@@586))
 :pattern ( ($generated@@81 $generated@@584 $generated@@586))
)))))
 :pattern ( ($generated@@582 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@587 ($generated@@150 $generated@@588) $generated@@589) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@587 $generated@@590)))) ($generated@@250 $generated@@590 $generated@@588 $generated@@589))
 :pattern ( ($generated@@81 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@74 $generated@@587 ($generated@@150 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@79 (type $generated@@591))))
 (=> (and (= (type $generated@@591) ($generated@@76 $generated@@593 $generated@@4)) (= (type $generated@@592) ($generated@@76 $generated@@593 $generated@@4))) (= ($generated@@350 $generated@@591 $generated@@592) (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@593) (or (not ($generated@@0 ($generated@@81 $generated@@591 $generated@@594))) (not ($generated@@0 ($generated@@81 $generated@@592 $generated@@594)))))
 :pattern ( ($generated@@81 $generated@@591 $generated@@594))
 :pattern ( ($generated@@81 $generated@@592 $generated@@594))
)))))
 :pattern ( ($generated@@350 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@136) (= (type $generated@@596) $generated@@64)) (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@597) (and ($generated@@134 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@64) ($generated@@74 $generated@@595 ($generated@@135 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@74 $generated@@595 ($generated@@135 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@250 ($generated@@143 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@136) (= (type $generated@@600) $generated@@64)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@601) (and ($generated@@134 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@64) ($generated@@74 $generated@@599 ($generated@@135 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@74 $generated@@599 ($generated@@135 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@250 ($generated@@144 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@145) (= (type $generated@@604) $generated@@145)) (= ($generated@@225 ($generated@@245 $generated@@603) ($generated@@245 $generated@@604)) ($generated@@245 ($generated@@225 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@603) ($generated@@245 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@605)) ($generated@@245 ($generated@@270 $generated@@605)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@265 (type $generated@@606))))
 (=> (and (= (type $generated@@606) ($generated@@264 $generated@@607)) (= ($generated@@263 $generated@@606) 0)) (= $generated@@606 ($generated@@262 $generated@@607))))
 :pattern ( ($generated@@263 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@609)))
 (=> (and (and (= (type $generated@@608) ($generated@@76 $generated@@611 $generated@@2)) (= (type $generated@@610) $generated@@2)) (<= 0 ($generated $generated@@610))) (= ($generated@@275 ($generated@@82 $generated@@608 $generated@@609 $generated@@610)) (+ (- ($generated@@275 $generated@@608) ($generated ($generated@@81 $generated@@608 $generated@@609))) ($generated $generated@@610)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@608 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (! (let (($generated@@615 (type $generated@@614)))
 (=> (and (= (type $generated@@612) ($generated@@76 $generated@@615 $generated@@4)) (= (type $generated@@613) ($generated@@76 $generated@@615 $generated@@4))) (= ($generated@@0 ($generated@@81 ($generated@@211 $generated@@612 $generated@@613) $generated@@614))  (or ($generated@@0 ($generated@@81 $generated@@612 $generated@@614)) ($generated@@0 ($generated@@81 $generated@@613 $generated@@614))))))
 :pattern ( ($generated@@81 ($generated@@211 $generated@@612 $generated@@613) $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@2)) ($generated@@74 $generated@@617 $generated@@46 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@46 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@619) $generated@@3)) ($generated@@74 $generated@@619 $generated@@47 $generated@@618))
 :pattern ( ($generated@@74 $generated@@619 $generated@@47 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@621) $generated@@4)) ($generated@@74 $generated@@621 $generated@@44 $generated@@620))
 :pattern ( ($generated@@74 $generated@@621 $generated@@44 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@623) $generated@@460)) ($generated@@74 $generated@@623 $generated@@45 $generated@@622))
 :pattern ( ($generated@@74 $generated@@623 $generated@@45 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@625) $generated@@145)) ($generated@@74 $generated@@625 $generated@@48 $generated@@624))
 :pattern ( ($generated@@74 $generated@@625 $generated@@48 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@264 $generated@@145)) (= (type $generated@@627) $generated@@64)) (= ($generated@@132 $generated@@626 ($generated@@502 $generated@@627)) (forall (($generated@@628 Int) ) (!  (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@263 $generated@@626))) ($generated@@226 ($generated@@503 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@503 $generated@@626 $generated@@628))
))))
 :pattern ( ($generated@@132 $generated@@626 ($generated@@502 $generated@@627)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 Int) ) (!  (=> (= (type $generated@@630) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@631) (< $generated@@631 ($generated@@263 $generated@@630))) (< ($generated@@541 ($generated@@377 $generated@@136 ($generated@@503 $generated@@630 $generated@@631))) ($generated@@629 $generated@@630))))
 :pattern ( ($generated@@541 ($generated@@377 $generated@@136 ($generated@@503 $generated@@630 $generated@@631))))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@633) $generated@@64)) (= (type $generated@@634) $generated@@64)) ($generated@@132 $generated@@632 ($generated@@405 $generated@@633 $generated@@634))) (and (and ($generated@@132 ($generated@@281 $generated@@632) ($generated@@235 $generated@@633)) ($generated@@132 ($generated@@329 $generated@@632) ($generated@@235 $generated@@634))) ($generated@@132 ($generated@@376 $generated@@632) ($generated@@235 ($generated@@135 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@132 $generated@@632 ($generated@@405 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@636) $generated@@64)) (= (type $generated@@637) $generated@@64)) ($generated@@132 $generated@@635 ($generated@@413 $generated@@636 $generated@@637))) (and (and ($generated@@132 ($generated@@299 $generated@@635) ($generated@@240 $generated@@636)) ($generated@@132 ($generated@@340 $generated@@635) ($generated@@240 $generated@@637))) ($generated@@132 ($generated@@387 $generated@@635) ($generated@@240 ($generated@@135 $generated@@636 $generated@@637)))))
 :pattern ( ($generated@@132 $generated@@635 ($generated@@413 $generated@@636 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@2) ($generated@@132 $generated@@638 $generated@@46))
 :pattern ( ($generated@@132 $generated@@638 $generated@@46))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@3) ($generated@@132 $generated@@639 $generated@@47))
 :pattern ( ($generated@@132 $generated@@639 $generated@@47))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@4) ($generated@@132 $generated@@640 $generated@@44))
 :pattern ( ($generated@@132 $generated@@640 $generated@@44))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@460) ($generated@@132 $generated@@641 $generated@@45))
 :pattern ( ($generated@@132 $generated@@641 $generated@@45))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@145) ($generated@@132 $generated@@642 $generated@@48))
 :pattern ( ($generated@@132 $generated@@642 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 (T@U) Bool)
(declare-fun $generated@@666 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@643) $generated@@64) (= (type $generated@@644) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@645) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@646) $generated@@145)) (= (type $generated@@647) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@648) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@649) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@650) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@651) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@652) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@653) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@654) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@655) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@656) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@657) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@658) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@659) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@660) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@661) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@662) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@663) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@664) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 38) (let (($generated@@667  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (= (type $generated@@668) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@669) $generated@@145)) (and ($generated@@132 $generated@@668 ($generated@@240 $generated@@643)) ($generated@@226 $generated@@669 $generated@@643))) ($generated@@0 ($generated@@81 $generated@@668 $generated@@669)))
 :pattern ( ($generated@@81 $generated@@668 $generated@@669))
)))))
(let (($generated@@670  (=> (and (not (and (and ($generated@@132 $generated@@644 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@644 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@226 $generated@@646 $generated@@643) ($generated@@250 $generated@@646 $generated@@643 $generated@@645)))) (= (ControlFlow 0 4) 2)) $generated@@667)))
(let (($generated@@671  (=> (and (and (and ($generated@@132 $generated@@644 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@644 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@226 $generated@@646 $generated@@643) ($generated@@250 $generated@@646 $generated@@643 $generated@@645))) (= (ControlFlow 0 3) 2)) $generated@@667)))
(let (($generated@@672  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (= (type $generated@@673) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@674) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@673 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@674 ($generated@@240 $generated@@643)))) ($generated@@350 $generated@@673 $generated@@674))
 :no-pattern (type $generated@@673)
 :no-pattern (type $generated@@674)
 :no-pattern ($generated $generated@@673)
 :no-pattern ($generated@@0 $generated@@673)
 :no-pattern ($generated $generated@@674)
 :no-pattern ($generated@@0 $generated@@674)
))) (=> (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (= (type $generated@@675) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@676) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@675 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@676 ($generated@@240 $generated@@643)))) ($generated@@350 $generated@@675 $generated@@676))
 :no-pattern (type $generated@@675)
 :no-pattern (type $generated@@676)
 :no-pattern ($generated $generated@@675)
 :no-pattern ($generated@@0 $generated@@675)
 :no-pattern ($generated $generated@@676)
 :no-pattern ($generated@@0 $generated@@676)
)) (and (=> (= (ControlFlow 0 5) 3) $generated@@671) (=> (= (ControlFlow 0 5) 4) $generated@@670))))))
(let (($generated@@677  (=> (and (not (and (and ($generated@@132 $generated@@647 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@647 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@648 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@648 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 8) 5)) $generated@@672)))
(let (($generated@@678  (=> (and (and (and ($generated@@132 $generated@@647 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@647 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@648 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@648 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 7) 5)) $generated@@672)))
(let (($generated@@679  (and (=> (= (ControlFlow 0 9) (- 0 10)) (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (and (= (type $generated@@680) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@681) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@680 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@681 ($generated@@240 $generated@@643)))) ($generated@@317 ($generated@@218 $generated@@680 $generated@@681) $generated@@681))
 :pattern ( ($generated@@218 $generated@@680 $generated@@681))
))) (=> (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (= (type $generated@@682) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@683) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@682 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@683 ($generated@@240 $generated@@643)))) ($generated@@317 ($generated@@218 $generated@@682 $generated@@683) $generated@@683))
 :pattern ( ($generated@@218 $generated@@682 $generated@@683))
)) (and (=> (= (ControlFlow 0 9) 7) $generated@@678) (=> (= (ControlFlow 0 9) 8) $generated@@677))))))
(let (($generated@@684  (=> (and (not (and (and ($generated@@132 $generated@@649 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@649 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@650 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@650 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 12) 9)) $generated@@679)))
(let (($generated@@685  (=> (and (and (and ($generated@@132 $generated@@649 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@649 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@650 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@650 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 11) 9)) $generated@@679)))
(let (($generated@@686  (and (=> (= (ControlFlow 0 13) (- 0 14)) (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@688) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@687 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@688 ($generated@@240 $generated@@643)))) ($generated@@317 ($generated@@351 $generated@@687 $generated@@688) $generated@@688))
 :pattern ( ($generated@@351 $generated@@687 $generated@@688))
))) (=> (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@690) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@689 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@690 ($generated@@240 $generated@@643)))) ($generated@@317 ($generated@@351 $generated@@689 $generated@@690) $generated@@690))
 :pattern ( ($generated@@351 $generated@@689 $generated@@690))
)) (and (=> (= (ControlFlow 0 13) 11) $generated@@685) (=> (= (ControlFlow 0 13) 12) $generated@@684))))))
(let (($generated@@691  (=> (and (not (and (and ($generated@@132 $generated@@651 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@651 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@652 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@652 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 16) 13)) $generated@@686)))
(let (($generated@@692  (=> (and (and (and ($generated@@132 $generated@@651 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@651 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@652 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@652 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 15) 13)) $generated@@686)))
(let (($generated@@693  (and (=> (= (ControlFlow 0 17) (- 0 18)) (forall (($generated@@694 T@U) ($generated@@695 T@U) ) (!  (=> (and (and (= (type $generated@@694) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@695) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@694 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@695 ($generated@@240 $generated@@643)))) ($generated@@317 ($generated@@211 $generated@@694 $generated@@695) $generated@@695))
 :pattern ( ($generated@@211 $generated@@694 $generated@@695))
))) (=> (forall (($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (= (type $generated@@696) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@697) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@696 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@697 ($generated@@240 $generated@@643)))) ($generated@@317 ($generated@@211 $generated@@696 $generated@@697) $generated@@697))
 :pattern ( ($generated@@211 $generated@@696 $generated@@697))
)) (and (=> (= (ControlFlow 0 17) 15) $generated@@692) (=> (= (ControlFlow 0 17) 16) $generated@@691))))))
(let (($generated@@698  (=> (and (not (and (and ($generated@@132 $generated@@653 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@653 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@654 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@654 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 20) 17)) $generated@@693)))
(let (($generated@@699  (=> (and (and (and ($generated@@132 $generated@@653 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@653 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@654 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@654 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 19) 17)) $generated@@693)))
(let (($generated@@700  (and (=> (= (ControlFlow 0 21) (- 0 22)) (forall (($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@701) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@702) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@701 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@702 ($generated@@240 $generated@@643)))) ($generated@@582 $generated@@702 $generated@@701))
 :pattern ( ($generated@@582 $generated@@702 $generated@@701))
))) (=> (forall (($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (= (type $generated@@703) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@704) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@703 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@704 ($generated@@240 $generated@@643)))) ($generated@@582 $generated@@704 $generated@@703))
 :pattern ( ($generated@@582 $generated@@704 $generated@@703))
)) (and (=> (= (ControlFlow 0 21) 19) $generated@@699) (=> (= (ControlFlow 0 21) 20) $generated@@698))))))
(let (($generated@@705  (=> (and (not (and (and ($generated@@132 $generated@@655 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@655 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@656 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@656 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 24) 21)) $generated@@700)))
(let (($generated@@706  (=> (and (and (and ($generated@@132 $generated@@655 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@655 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@656 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@656 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 23) 21)) $generated@@700)))
(let (($generated@@707  (and (=> (= (ControlFlow 0 25) (- 0 26)) (forall (($generated@@708 T@U) ($generated@@709 T@U) ) (!  (=> (and (and (= (type $generated@@708) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@709) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@708 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@709 ($generated@@240 $generated@@643)))) (and ($generated@@577 $generated@@709 $generated@@708) (not ($generated@@577 $generated@@708 $generated@@709))))
 :pattern ( ($generated@@582 $generated@@709 $generated@@708))
))) (=> (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@710) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@711) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@710 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@711 ($generated@@240 $generated@@643)))) (and ($generated@@577 $generated@@711 $generated@@710) (not ($generated@@577 $generated@@710 $generated@@711))))
 :pattern ( ($generated@@582 $generated@@711 $generated@@710))
)) (and (=> (= (ControlFlow 0 25) 23) $generated@@706) (=> (= (ControlFlow 0 25) 24) $generated@@705))))))
(let (($generated@@712  (=> (and (not (and (and ($generated@@132 $generated@@657 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@657 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@658 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@658 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 28) 25)) $generated@@707)))
(let (($generated@@713  (=> (and (and (and ($generated@@132 $generated@@657 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@657 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@658 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@658 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 27) 25)) $generated@@707)))
(let (($generated@@714  (and (=> (= (ControlFlow 0 29) (- 0 30)) (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@716) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@715 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@716 ($generated@@240 $generated@@643)))) (and ($generated@@577 $generated@@715 $generated@@716) (not ($generated@@577 $generated@@716 $generated@@715))))
 :pattern ( ($generated@@582 $generated@@715 $generated@@716))
))) (=> (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@718) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@717 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@718 ($generated@@240 $generated@@643)))) (and ($generated@@577 $generated@@717 $generated@@718) (not ($generated@@577 $generated@@718 $generated@@717))))
 :pattern ( ($generated@@582 $generated@@717 $generated@@718))
)) (and (=> (= (ControlFlow 0 29) 27) $generated@@713) (=> (= (ControlFlow 0 29) 28) $generated@@712))))))
(let (($generated@@719  (=> (and (not (and (and ($generated@@132 $generated@@659 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@659 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@660 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@660 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 32) 29)) $generated@@714)))
(let (($generated@@720  (=> (and (and (and ($generated@@132 $generated@@659 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@659 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@660 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@660 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 31) 29)) $generated@@714)))
(let (($generated@@721  (and (=> (= (ControlFlow 0 33) (- 0 34)) (forall (($generated@@722 T@U) ($generated@@723 T@U) ) (!  (=> (and (and (= (type $generated@@722) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@723) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@722 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@723 ($generated@@240 $generated@@643)))) ($generated@@582 $generated@@722 $generated@@723))
 :pattern ( ($generated@@582 $generated@@722 $generated@@723))
))) (=> (forall (($generated@@724 T@U) ($generated@@725 T@U) ) (!  (=> (and (and (= (type $generated@@724) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@725) ($generated@@76 $generated@@145 $generated@@4))) (and ($generated@@132 $generated@@724 ($generated@@240 $generated@@643)) ($generated@@132 $generated@@725 ($generated@@240 $generated@@643)))) ($generated@@582 $generated@@724 $generated@@725))
 :pattern ( ($generated@@582 $generated@@724 $generated@@725))
)) (and (=> (= (ControlFlow 0 33) 31) $generated@@720) (=> (= (ControlFlow 0 33) 32) $generated@@719))))))
(let (($generated@@726  (=> (and (not (and (and ($generated@@132 $generated@@661 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@661 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@662 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@662 ($generated@@240 $generated@@643) $generated@@645)))) (= (ControlFlow 0 36) 33)) $generated@@721)))
(let (($generated@@727  (=> (and (and (and ($generated@@132 $generated@@661 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@661 ($generated@@240 $generated@@643) $generated@@645)) (and ($generated@@132 $generated@@662 ($generated@@240 $generated@@643)) ($generated@@74 $generated@@662 ($generated@@240 $generated@@643) $generated@@645))) (= (ControlFlow 0 35) 33)) $generated@@721)))
(let (($generated@@728  (=> (= $generated@@663 ($generated@@156 $generated@@664 $generated@@645 $generated@@60 false)) (and (=> (= (ControlFlow 0 37) 35) $generated@@727) (=> (= (ControlFlow 0 37) 36) $generated@@726)))))
(let (($generated@@729  (=> (and (and ($generated@@249 $generated@@645) ($generated@@665 $generated@@645)) (and (= 0 $generated@@666) (= (ControlFlow 0 38) 37))) $generated@@728)))
$generated@@729))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 33) (- 34))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 29) (- 30))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 25) (- 26))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 17) (- 18))))
(check-sat)
(get-info :reason-unknown)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@133 (T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@150 (Int Int) Int)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@303 (T@T T@T) T@U)
(declare-fun $generated@@304 (T@T T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@369 (T@U T@U) Bool)
(declare-fun $generated@@374 (T@U T@U) Bool)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@390 (T@T T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@437 (T@T) T@U)
(declare-fun $generated@@461 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@563 (T@U T@U) Bool)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@623 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 ($generated@@79 (type $generated@@136))))
(= (type ($generated@@133 $generated@@136 $generated@@137)) ($generated@@76 $generated@@138 $generated@@2)))
 :pattern ( ($generated@@133 $generated@@136 $generated@@137))
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (let (($generated@@141 ($generated@@79 (type $generated@@139))))
(= (type ($generated@@134 $generated@@139 $generated@@140)) ($generated@@76 $generated@@141 $generated@@2)))
 :pattern ( ($generated@@134 $generated@@139 $generated@@140))
))) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (let (($generated@@144 ($generated@@79 (type $generated@@142))))
(= (type ($generated@@135 $generated@@142 $generated@@143)) ($generated@@76 $generated@@144 $generated@@2)))
 :pattern ( ($generated@@135 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 ($generated@@79 (type $generated@@145))))
 (=> (and (= (type $generated@@145) ($generated@@76 $generated@@147 $generated@@2)) (= (type $generated@@146) ($generated@@76 $generated@@147 $generated@@2))) (and (= (+ (+ ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) ($generated@@132 ($generated@@133 $generated@@146 $generated@@145))) (* 2 ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))) ($generated@@132 ($generated@@135 $generated@@145 $generated@@146))) (= ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)) (- ($generated@@132 $generated@@145) ($generated@@132 ($generated@@134 $generated@@145 $generated@@146)))))))
 :pattern ( ($generated@@132 ($generated@@133 $generated@@145 $generated@@146)))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= (type $generated@@149) $generated@@2) ($generated@@148 $generated@@149 ($generated@@75 0)))
 :pattern ( ($generated@@148 $generated@@149 ($generated@@75 0)))
)))
(assert (forall (($generated@@151 Int) ($generated@@152 Int) ) (!  (or (= ($generated@@150 $generated@@151 $generated@@152) $generated@@151) (= ($generated@@150 $generated@@151 $generated@@152) $generated@@152))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152))
)))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@64) (= (type $generated@@159) $generated@@64)) (= (type $generated@@160) $generated@@155)) ($generated@@148 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@148 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ) (! (= (type ($generated@@169 $generated@@171)) $generated@@64)
 :pattern ( ($generated@@169 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@173) $generated@@64)) ($generated@@148 $generated@@172 ($generated@@169 $generated@@173))) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@148 $generated@@172 ($generated@@169 $generated@@173)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@1 ($generated@@176 $generated@@180 $generated@@181)) 16)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@177 ($generated@@176 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@178 ($generated@@176 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@176 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@178 (type $generated@@186))))
(= (type ($generated@@174 $generated@@186 $generated@@187 $generated@@188)) $generated@@189))
 :pattern ( ($generated@@174 $generated@@186 $generated@@187 $generated@@188))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 (type $generated@@193)))
(let (($generated@@195 (type $generated@@191)))
(= (type ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193)) ($generated@@176 $generated@@195 $generated@@194))))
 :pattern ( ($generated@@179 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (let (($generated@@200 ($generated@@178 (type $generated@@196))))
 (=> (= (type $generated@@199) $generated@@200) (= ($generated@@174 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@197 $generated@@198) $generated@@199)))
 :weight 0
))) (and (and (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@174 ($generated@@179 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@174 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@210 $generated@@212) (= ($generated@@174 ($generated@@179 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@174 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or true (= ($generated@@174 ($generated@@179 $generated@@214 $generated@@215 $generated@@216 $generated@@213) $generated@@217 $generated@@218) ($generated@@174 $generated@@214 $generated@@217 $generated@@218)))
 :weight 0
)))) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ) (! (= (type ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222)) ($generated@@176 $generated@@77 $generated@@4))
 :pattern ( ($generated@@175 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (let (($generated@@229 ($generated@@67 (type $generated@@228))))
 (=> (and (and (and (and (= (type $generated@@223) $generated@@77) (= (type $generated@@224) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@225) ($generated@@66 $generated@@4))) (= (type $generated@@227) $generated@@77)) (= (type $generated@@228) ($generated@@66 $generated@@229))) (= ($generated@@0 ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (not (= $generated@@227 $generated@@223)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@224 $generated@@227) $generated@@225))) $generated@@226))))
 :pattern ( ($generated@@174 ($generated@@175 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@79 (type $generated@@230))))
 (=> (and (= (type $generated@@230) ($generated@@76 $generated@@232 $generated@@2)) (= (type $generated@@231) ($generated@@76 $generated@@232 $generated@@2))) (= ($generated@@134 ($generated@@134 $generated@@230 $generated@@231) $generated@@231) ($generated@@134 $generated@@230 $generated@@231))))
 :pattern ( ($generated@@134 ($generated@@134 $generated@@230 $generated@@231) $generated@@231))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@155)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@164)) (= (type $generated@@240) $generated@@164)) (= ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@148 ($generated@@233 $generated@@239 $generated@@240) ($generated@@154 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
 (=> (and (= (type $generated@@241) ($generated@@76 $generated@@244 $generated@@2)) (= (type $generated@@242) ($generated@@76 $generated@@244 $generated@@2))) (= ($generated ($generated@@81 ($generated@@135 $generated@@241 $generated@@242) $generated@@243)) (+ ($generated ($generated@@81 $generated@@241 $generated@@243)) ($generated ($generated@@81 $generated@@242 $generated@@243))))))
 :pattern ( ($generated@@81 ($generated@@135 $generated@@241 $generated@@242) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@155) (= (type $generated@@246) $generated@@155)) (= ($generated@@161 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@161 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@64)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@250) $generated@@64)) (= ($generated@@148 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@164) ($generated@@0 ($generated@@81 $generated@@249 $generated@@251))) ($generated@@234 $generated@@251 $generated@@250))
 :pattern ( ($generated@@81 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@148 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@148 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@164) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@234 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@148 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (!  (=> (<= 0 $generated@@258) (= ($generated@@257 $generated@@258) $generated@@258))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) $generated@@64)) (= (type $generated@@267) $generated@@164)) (= (type $generated@@268) $generated@@164)) (= (type $generated@@269) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@263 $generated@@269)) (= ($generated@@74 ($generated@@233 $generated@@267 $generated@@268) ($generated@@154 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@74 ($generated@@233 $generated@@267 $generated@@268) ($generated@@154 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@68)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@155) (= ($generated@@153 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (! (let (($generated@@276 (type $generated@@275)))
 (=> (and (= (type $generated@@273) ($generated@@76 $generated@@276 $generated@@2)) (= (type $generated@@274) ($generated@@76 $generated@@276 $generated@@2))) (= ($generated ($generated@@81 ($generated@@133 $generated@@273 $generated@@274) $generated@@275)) ($generated@@257 (- ($generated ($generated@@81 $generated@@273 $generated@@275)) ($generated ($generated@@81 $generated@@274 $generated@@275)))))))
 :pattern ( ($generated@@81 ($generated@@133 $generated@@273 $generated@@274) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@155) ($generated@@153 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@164) (= (type $generated@@279) $generated@@164)) (= $generated@@277 ($generated@@233 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@153 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 17)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@164)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@264 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@264 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@T) ) (! (= (type ($generated@@293 $generated@@294)) ($generated@@76 $generated@@294 $generated@@2))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (! (let (($generated@@296 ($generated@@79 (type $generated@@295))))
 (=> (= (type $generated@@295) ($generated@@76 $generated@@296 $generated@@2)) (and (= (= ($generated@@132 $generated@@295) 0) (= $generated@@295 ($generated@@293 $generated@@296))) (=> (not (= ($generated@@132 $generated@@295) 0)) (exists (($generated@@297 T@U) ) (!  (and (= (type $generated@@297) $generated@@296) (< 0 ($generated ($generated@@81 $generated@@295 $generated@@297))))
 :no-pattern (type $generated@@297)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
))))))
 :pattern ( ($generated@@132 $generated@@295))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (! (let (($generated@@301 (type $generated@@300)))
 (=> (and (and (= (type $generated@@298) ($generated@@76 $generated@@301 $generated@@2)) (= (type $generated@@299) ($generated@@76 $generated@@301 $generated@@2))) (<= ($generated ($generated@@81 $generated@@298 $generated@@300)) ($generated ($generated@@81 $generated@@299 $generated@@300)))) (= ($generated ($generated@@81 ($generated@@133 $generated@@298 $generated@@299) $generated@@300)) 0)))
 :pattern ( ($generated@@133 $generated@@298 $generated@@299) ($generated@@81 $generated@@299 $generated@@300) ($generated@@81 $generated@@298 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@307 T@T) ($generated@@308 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@307 $generated@@308)) 18)) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@309 $generated@@310)) $generated@@309)
 :pattern ( ($generated@@304 $generated@@309 $generated@@310))
))) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@306 ($generated@@304 $generated@@311 $generated@@312)) $generated@@312)
 :pattern ( ($generated@@304 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@305 (type $generated@@313))))
(= (type ($generated@@302 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@302 $generated@@313))
))) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= (type ($generated@@303 $generated@@315 $generated@@316)) ($generated@@304 $generated@@315 $generated@@316))
 :pattern ( ($generated@@303 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@T) ) (! (let (($generated@@319 (type $generated@@317)))
 (not ($generated@@0 ($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317))))
 :pattern ( (let (($generated@@319 (type $generated@@317)))
($generated@@81 ($generated@@302 ($generated@@303 $generated@@319 $generated@@318)) $generated@@317)))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@76 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@81 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@79 (type $generated@@338))))
 (=> (and (= (type $generated@@338) ($generated@@76 $generated@@340 $generated@@2)) (= (type $generated@@339) ($generated@@76 $generated@@340 $generated@@2))) (= ($generated@@132 ($generated@@135 $generated@@338 $generated@@339)) (+ ($generated@@132 $generated@@338) ($generated@@132 $generated@@339)))))
 :pattern ( ($generated@@132 ($generated@@135 $generated@@338 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@79 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@76 $generated@@342 $generated@@2)) (= ($generated@@170 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@81 $generated@@341 $generated@@343))) (<= ($generated ($generated@@81 $generated@@341 $generated@@343)) ($generated@@132 $generated@@341))))
 :pattern ( ($generated@@81 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@170 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@306 (type $generated@@344))))
(let (($generated@@346 ($generated@@305 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@304 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@303 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@302 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@306 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@76 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@306 (type $generated@@351))))
(let (($generated@@353 ($generated@@305 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@304 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@303 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@324 (type $generated@@355))))
(let (($generated@@357 ($generated@@323 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@322 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@321 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@320 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@324 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@76 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@324 (type $generated@@362))))
(let (($generated@@364 ($generated@@323 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@322 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@321 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@81 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@367) $generated@@64)) (= ($generated@@148 $generated@@366 ($generated@@169 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@164) (< 0 ($generated ($generated@@81 $generated@@366 $generated@@368)))) ($generated@@234 $generated@@368 $generated@@367))
 :pattern ( ($generated@@81 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@148 $generated@@366 ($generated@@169 $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@79 (type $generated@@370))))
 (=> (and (= (type $generated@@370) ($generated@@76 $generated@@372 $generated@@2)) (= (type $generated@@371) ($generated@@76 $generated@@372 $generated@@2))) (= ($generated@@369 $generated@@370 $generated@@371) (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@372) (= ($generated ($generated@@81 $generated@@370 $generated@@373)) ($generated ($generated@@81 $generated@@371 $generated@@373))))
 :pattern ( ($generated@@81 $generated@@370 $generated@@373))
 :pattern ( ($generated@@81 $generated@@371 $generated@@373))
)))))
 :pattern ( ($generated@@369 $generated@@370 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@79 (type $generated@@375))))
 (=> (and (= (type $generated@@375) ($generated@@76 $generated@@377 $generated@@2)) (= (type $generated@@376) ($generated@@76 $generated@@377 $generated@@2))) (= ($generated@@374 $generated@@375 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (<= ($generated ($generated@@81 $generated@@375 $generated@@378)) ($generated ($generated@@81 $generated@@376 $generated@@378))))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
 :pattern ( ($generated@@81 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (= (type $generated@@379) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@247 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@164) ($generated@@0 ($generated@@81 $generated@@379 $generated@@382))) ($generated@@264 $generated@@382 $generated@@380 $generated@@381))
 :pattern ( ($generated@@81 $generated@@379 $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@247 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (and (= (type $generated@@383) ($generated@@76 $generated@@164 $generated@@4)) (= (type $generated@@384) $generated@@64)) (= (type $generated@@385) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@383 ($generated@@252 $generated@@384) $generated@@385) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@164) ($generated@@0 ($generated@@81 $generated@@383 $generated@@386))) ($generated@@264 $generated@@386 $generated@@384 $generated@@385))
 :pattern ( ($generated@@81 $generated@@383 $generated@@386))
))))
 :pattern ( ($generated@@74 $generated@@383 ($generated@@252 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(= ($generated ($generated@@81 ($generated@@293 $generated@@388) $generated@@387)) 0))
 :pattern ( (let (($generated@@388 (type $generated@@387)))
($generated@@81 ($generated@@293 $generated@@388) $generated@@387)))
)))
(assert  (and (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@389 $generated@@392)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@389 $generated@@392))
)) (forall (($generated@@393 T@T) ($generated@@394 T@U) ) (! (= (type ($generated@@390 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@390 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@306 (type $generated@@395))))
(let (($generated@@397 ($generated@@305 (type $generated@@395))))
(= (type ($generated@@391 $generated@@395)) ($generated@@76 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@391 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@304 $generated@@164 $generated@@164)) (= (type $generated@@399) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@389 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@398) ($generated@@162 ($generated@@390 $generated@@155 $generated@@399)))) (= ($generated@@81 ($generated@@391 $generated@@398) ($generated@@162 ($generated@@390 $generated@@155 $generated@@399))) ($generated@@163 ($generated@@390 $generated@@155 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@76 $generated@@164 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@324 (type $generated@@403))))
(let (($generated@@405 ($generated@@323 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@76 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@322 $generated@@164 $generated@@164)) (= (type $generated@@407) $generated@@164)) (= ($generated@@0 ($generated@@81 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@406) ($generated@@162 ($generated@@390 $generated@@155 $generated@@407)))) (= ($generated@@81 ($generated@@401 $generated@@406) ($generated@@162 ($generated@@390 $generated@@155 $generated@@407))) ($generated@@163 ($generated@@390 $generated@@155 $generated@@407))))))
 :pattern ( ($generated@@81 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@305 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@304 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@81 ($generated@@348 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@81 ($generated@@302 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@81 ($generated@@391 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@408) $generated@@412))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@323 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@322 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@81 ($generated@@359 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@81 ($generated@@320 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@81 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@304 $generated@@164 $generated@@164)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@421) $generated@@425))) (and ($generated@@264 ($generated@@81 ($generated@@391 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@264 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@322 $generated@@164 $generated@@164)) (= (type $generated@@430) $generated@@64)) (= (type $generated@@431) $generated@@64)) (= (type $generated@@432) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@429) $generated@@433))) (and ($generated@@264 ($generated@@81 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@264 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@74 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@434))))
 (=> (and (and (= (type $generated@@434) ($generated@@76 $generated@@436 $generated@@2)) (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2))) ($generated@@369 $generated@@434 $generated@@435)) (= $generated@@434 $generated@@435)))
 :pattern ( ($generated@@369 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@438 T@T) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@76 $generated@@438 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@324 (type $generated@@439))))
(let (($generated@@441 ($generated@@323 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@322 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@321 $generated@@441 $generated@@440)) (= ($generated@@320 $generated@@439) ($generated@@437 $generated@@441))))))
 :pattern ( ($generated@@320 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@324 (type $generated@@442))))
(let (($generated@@444 ($generated@@323 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@322 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@321 $generated@@444 $generated@@443)) (= ($generated@@359 $generated@@442) ($generated@@437 $generated@@443))))))
 :pattern ( ($generated@@359 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@324 (type $generated@@445))))
(let (($generated@@447 ($generated@@323 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@322 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@321 $generated@@447 $generated@@446)) (= ($generated@@400 $generated@@445) ($generated@@437 $generated@@164))))))
 :pattern ( ($generated@@400 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@306 (type $generated@@448))))
(let (($generated@@450 ($generated@@305 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@304 $generated@@450 $generated@@449)) (or (= $generated@@448 ($generated@@303 $generated@@450 $generated@@449)) (exists (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (and (and (= (type $generated@@451) $generated@@164) (= (type $generated@@452) $generated@@164)) ($generated@@0 ($generated@@81 ($generated@@389 $generated@@448) ($generated@@288 ($generated@@233 $generated@@451 $generated@@452)))))
 :no-pattern (type $generated@@451)
 :no-pattern (type $generated@@452)
 :no-pattern ($generated $generated@@451)
 :no-pattern ($generated@@0 $generated@@451)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
))))))
 :pattern ( ($generated@@389 $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@324 (type $generated@@453))))
(let (($generated@@455 ($generated@@323 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@322 $generated@@455 $generated@@454)) (or (= $generated@@453 ($generated@@321 $generated@@455 $generated@@454)) (exists (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (and (and (= (type $generated@@456) $generated@@164) (= (type $generated@@457) $generated@@164)) ($generated@@0 ($generated@@81 ($generated@@400 $generated@@453) ($generated@@288 ($generated@@233 $generated@@456 $generated@@457)))))
 :no-pattern (type $generated@@456)
 :no-pattern (type $generated@@457)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
))))))
 :pattern ( ($generated@@400 $generated@@453))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@164) ($generated@@234 $generated@@458 $generated@@46)) (and (= ($generated@@288 ($generated@@390 $generated@@2 $generated@@458)) $generated@@458) ($generated@@148 ($generated@@390 $generated@@2 $generated@@458) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@458 $generated@@46))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@164) ($generated@@234 $generated@@459 $generated@@47)) (and (= ($generated@@288 ($generated@@390 $generated@@3 $generated@@459)) $generated@@459) ($generated@@148 ($generated@@390 $generated@@3 $generated@@459) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@459 $generated@@47))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@164) ($generated@@234 $generated@@460 $generated@@44)) (and (= ($generated@@288 ($generated@@390 $generated@@4 $generated@@460)) $generated@@460) ($generated@@148 ($generated@@390 $generated@@4 $generated@@460) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@460 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@461) 20))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@164) ($generated@@234 $generated@@462 $generated@@45)) (and (= ($generated@@288 ($generated@@390 $generated@@461 $generated@@462)) $generated@@462) ($generated@@148 ($generated@@390 $generated@@461 $generated@@462) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@462 $generated@@45))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (= (type $generated@@464) $generated@@64) (= ($generated@@234 ($generated@@288 $generated@@463) $generated@@464) ($generated@@148 $generated@@463 $generated@@464)))
 :pattern ( ($generated@@234 ($generated@@288 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@79 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@76 $generated@@466 $generated@@2)) (<= 0 ($generated@@132 $generated@@465))))
 :pattern ( ($generated@@132 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@283 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@282 $generated@@468)) (<= 0 ($generated@@281 $generated@@467))))
 :pattern ( ($generated@@281 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@471)))
 (=> (and (= (type $generated@@469) ($generated@@76 $generated@@472 $generated@@2)) (= (type $generated@@470) ($generated@@76 $generated@@472 $generated@@2))) (= ($generated ($generated@@81 ($generated@@134 $generated@@469 $generated@@470) $generated@@471)) ($generated@@150 ($generated ($generated@@81 $generated@@469 $generated@@471)) ($generated ($generated@@81 $generated@@470 $generated@@471))))))
 :pattern ( ($generated@@81 ($generated@@134 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@418 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@418 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@418 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@418 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@72 ($generated@@418 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@426 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@426 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@64) (= (type $generated@@490) $generated@@64)) (= ($generated@@487 ($generated@@426 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@426 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@72 ($generated@@426 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@164) (= (type $generated@@494) $generated@@164)) (= ($generated@@270 ($generated@@233 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@64) (= (type $generated@@498) $generated@@64)) (= ($generated@@495 ($generated@@154 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@154 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@64) (= (type $generated@@502) $generated@@64)) (= ($generated@@499 ($generated@@154 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@154 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@164) (= (type $generated@@504) $generated@@164)) (= ($generated@@162 ($generated@@233 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@233 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@164) (= (type $generated@@506) $generated@@164)) (= ($generated@@163 ($generated@@233 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@233 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@283 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@282 $generated@@164)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@281 $generated@@513))) ($generated@@264 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@74 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@75 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@75 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@247 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@247 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@247 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@64)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@64) (= ($generated@@523 ($generated@@252 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@252 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@64) (= ($generated@@527 ($generated@@169 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@169 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@64) (= ($generated@@72 ($generated@@169 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@169 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@64)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@64) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@64) (= ($generated@@72 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(= ($generated@@390 $generated@@536 ($generated@@288 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@288 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@304 $generated@@164 $generated@@164)) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@64)) (= ($generated@@148 $generated@@537 ($generated@@418 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@302 $generated@@537) $generated@@540))) (and ($generated@@234 ($generated@@81 ($generated@@391 $generated@@537) $generated@@540) $generated@@539) ($generated@@234 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@81 ($generated@@391 $generated@@537) $generated@@540))
 :pattern ( ($generated@@81 ($generated@@302 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@148 $generated@@537 ($generated@@418 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@322 $generated@@164 $generated@@164)) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) $generated@@64)) (= ($generated@@148 $generated@@541 ($generated@@426 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@164) ($generated@@0 ($generated@@81 ($generated@@320 $generated@@541) $generated@@544))) (and ($generated@@234 ($generated@@81 ($generated@@401 $generated@@541) $generated@@544) $generated@@543) ($generated@@234 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@81 ($generated@@401 $generated@@541) $generated@@544))
 :pattern ( ($generated@@81 ($generated@@320 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@148 $generated@@541 ($generated@@426 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@164) (= (type $generated@@548) $generated@@164)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@233 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@233 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@164) (= (type $generated@@550) $generated@@164)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@233 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@233 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (! (let (($generated@@553 ($generated@@79 (type $generated@@551))))
 (=> (and (= (type $generated@@551) ($generated@@76 $generated@@553 $generated@@2)) (= (type $generated@@552) ($generated@@76 $generated@@553 $generated@@2))) (= ($generated@@134 $generated@@551 ($generated@@134 $generated@@551 $generated@@552)) ($generated@@134 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@134 $generated@@551 ($generated@@134 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@164) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) $generated@@64)) ($generated@@234 $generated@@554 ($generated@@418 $generated@@555 $generated@@556))) (and (= ($generated@@288 ($generated@@390 ($generated@@304 $generated@@164 $generated@@164) $generated@@554)) $generated@@554) ($generated@@148 ($generated@@390 ($generated@@304 $generated@@164 $generated@@164) $generated@@554) ($generated@@418 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@554 ($generated@@418 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@164) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) $generated@@64)) ($generated@@234 $generated@@557 ($generated@@426 $generated@@558 $generated@@559))) (and (= ($generated@@288 ($generated@@390 ($generated@@322 $generated@@164 $generated@@164) $generated@@557)) $generated@@557) ($generated@@148 ($generated@@390 ($generated@@322 $generated@@164 $generated@@164) $generated@@557) ($generated@@426 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@426 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@64) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) $generated@@164)) ($generated@@234 $generated@@562 ($generated@@154 $generated@@560 $generated@@561))) (and (= ($generated@@288 ($generated@@390 $generated@@155 $generated@@562)) $generated@@562) ($generated@@148 ($generated@@390 $generated@@155 $generated@@562) ($generated@@154 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@234 $generated@@562 ($generated@@154 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@79 (type $generated@@564))))
 (=> (and (= (type $generated@@564) ($generated@@76 $generated@@566 $generated@@2)) (= (type $generated@@565) ($generated@@76 $generated@@566 $generated@@2))) (= ($generated@@563 $generated@@564 $generated@@565) (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@566) (or (= ($generated ($generated@@81 $generated@@564 $generated@@567)) 0) (= ($generated ($generated@@81 $generated@@565 $generated@@567)) 0)))
 :pattern ( ($generated@@81 $generated@@564 $generated@@567))
 :pattern ( ($generated@@81 $generated@@565 $generated@@567))
)))))
 :pattern ( ($generated@@563 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 (type $generated@@568)))
 (not ($generated@@0 ($generated@@81 ($generated@@437 $generated@@569) $generated@@568))))
 :pattern ( (let (($generated@@569 (type $generated@@568)))
($generated@@81 ($generated@@437 $generated@@569) $generated@@568)))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@69)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@64) (= (type $generated@@573) $generated@@64)) (and (= ($generated@@72 ($generated@@154 $generated@@572 $generated@@573)) $generated@@62) (= ($generated@@570 ($generated@@154 $generated@@572 $generated@@573)) $generated@@63)))
 :pattern ( ($generated@@154 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@155) (= ($generated@@545 ($generated@@288 $generated@@574)) ($generated@@546 $generated@@574)))
 :pattern ( ($generated@@545 ($generated@@288 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ($generated@@576 Int) ) (! (= (<= $generated@@575 $generated@@576) (= ($generated@@150 $generated@@575 $generated@@576) $generated@@575))
 :pattern ( ($generated@@150 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 Int) ($generated@@578 Int) ) (! (= (<= $generated@@578 $generated@@577) (= ($generated@@150 $generated@@577 $generated@@578) $generated@@578))
 :pattern ( ($generated@@150 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@164) ($generated@@234 $generated@@579 ($generated@@75 0))) (and (= ($generated@@288 ($generated@@390 $generated@@2 $generated@@579)) $generated@@579) ($generated@@148 ($generated@@390 ($generated@@76 $generated@@164 $generated@@4) $generated@@579) ($generated@@75 0))))
 :pattern ( ($generated@@234 $generated@@579 ($generated@@75 0)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@164) (= (type $generated@@581) $generated@@64)) ($generated@@234 $generated@@580 ($generated@@247 $generated@@581))) (and (= ($generated@@288 ($generated@@390 ($generated@@76 $generated@@164 $generated@@4) $generated@@580)) $generated@@580) ($generated@@148 ($generated@@390 ($generated@@76 $generated@@164 $generated@@4) $generated@@580) ($generated@@247 $generated@@581))))
 :pattern ( ($generated@@234 $generated@@580 ($generated@@247 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@164) (= (type $generated@@583) $generated@@64)) ($generated@@234 $generated@@582 ($generated@@252 $generated@@583))) (and (= ($generated@@288 ($generated@@390 ($generated@@76 $generated@@164 $generated@@4) $generated@@582)) $generated@@582) ($generated@@148 ($generated@@390 ($generated@@76 $generated@@164 $generated@@4) $generated@@582) ($generated@@252 $generated@@583))))
 :pattern ( ($generated@@234 $generated@@582 ($generated@@252 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@164) (= (type $generated@@585) $generated@@64)) ($generated@@234 $generated@@584 ($generated@@169 $generated@@585))) (and (= ($generated@@288 ($generated@@390 ($generated@@76 $generated@@164 $generated@@2) $generated@@584)) $generated@@584) ($generated@@148 ($generated@@390 ($generated@@76 $generated@@164 $generated@@2) $generated@@584) ($generated@@169 $generated@@585))))
 :pattern ( ($generated@@234 $generated@@584 ($generated@@169 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@164) (= (type $generated@@587) $generated@@64)) ($generated@@234 $generated@@586 ($generated@@507 $generated@@587))) (and (= ($generated@@288 ($generated@@390 ($generated@@282 $generated@@164) $generated@@586)) $generated@@586) ($generated@@148 ($generated@@390 ($generated@@282 $generated@@164) $generated@@586) ($generated@@507 $generated@@587))))
 :pattern ( ($generated@@234 $generated@@586 ($generated@@507 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@588 ($generated@@169 $generated@@589) $generated@@590) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@164) (< 0 ($generated ($generated@@81 $generated@@588 $generated@@591)))) ($generated@@264 $generated@@591 $generated@@589 $generated@@590))
 :pattern ( ($generated@@81 $generated@@588 $generated@@591))
))))
 :pattern ( ($generated@@74 $generated@@588 ($generated@@169 $generated@@589) $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@155) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@263 $generated@@594) (and ($generated@@153 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@64) ($generated@@74 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@74 $generated@@592 ($generated@@154 $generated@@593 $generated@@595) $generated@@594))
))))) ($generated@@264 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@264 ($generated@@162 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@155) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@263 $generated@@598) (and ($generated@@153 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@64) ($generated@@74 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
 :pattern ( ($generated@@74 $generated@@596 ($generated@@154 $generated@@599 $generated@@597) $generated@@598))
))))) ($generated@@264 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@264 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 Int) ) (!  (=> (< $generated@@600 0) (= ($generated@@257 $generated@@600) 0))
 :pattern ( ($generated@@257 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@164) (= (type $generated@@602) $generated@@164)) (= ($generated@@233 ($generated@@259 $generated@@601) ($generated@@259 $generated@@602)) ($generated@@259 ($generated@@233 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@233 ($generated@@259 $generated@@601) ($generated@@259 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (= ($generated@@288 ($generated@@259 $generated@@603)) ($generated@@259 ($generated@@288 $generated@@603)))
 :pattern ( ($generated@@288 ($generated@@259 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (! (let (($generated@@605 ($generated@@283 (type $generated@@604))))
 (=> (and (= (type $generated@@604) ($generated@@282 $generated@@605)) (= ($generated@@281 $generated@@604) 0)) (= $generated@@604 ($generated@@280 $generated@@605))))
 :pattern ( ($generated@@281 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@607)))
 (=> (and (and (= (type $generated@@606) ($generated@@76 $generated@@609 $generated@@2)) (= (type $generated@@608) $generated@@2)) (<= 0 ($generated $generated@@608))) (= ($generated@@132 ($generated@@82 $generated@@606 $generated@@607 $generated@@608)) (+ (- ($generated@@132 $generated@@606) ($generated ($generated@@81 $generated@@606 $generated@@607))) ($generated $generated@@608)))))
 :pattern ( ($generated@@132 ($generated@@82 $generated@@606 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@611) $generated@@2)) ($generated@@74 $generated@@611 $generated@@46 $generated@@610))
 :pattern ( ($generated@@74 $generated@@611 $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@613) $generated@@3)) ($generated@@74 $generated@@613 $generated@@47 $generated@@612))
 :pattern ( ($generated@@74 $generated@@613 $generated@@47 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@615) $generated@@4)) ($generated@@74 $generated@@615 $generated@@44 $generated@@614))
 :pattern ( ($generated@@74 $generated@@615 $generated@@44 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@617) $generated@@461)) ($generated@@74 $generated@@617 $generated@@45 $generated@@616))
 :pattern ( ($generated@@74 $generated@@617 $generated@@45 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@619) $generated@@164)) ($generated@@74 $generated@@619 $generated@@48 $generated@@618))
 :pattern ( ($generated@@74 $generated@@619 $generated@@48 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@282 $generated@@164)) (= (type $generated@@621) $generated@@64)) (= ($generated@@148 $generated@@620 ($generated@@507 $generated@@621)) (forall (($generated@@622 Int) ) (!  (=> (and (<= 0 $generated@@622) (< $generated@@622 ($generated@@281 $generated@@620))) ($generated@@234 ($generated@@508 $generated@@620 $generated@@622) $generated@@621))
 :pattern ( ($generated@@508 $generated@@620 $generated@@622))
))))
 :pattern ( ($generated@@148 $generated@@620 ($generated@@507 $generated@@621)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 Int) ) (!  (=> (= (type $generated@@624) ($generated@@282 $generated@@164)) (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@281 $generated@@624))) (< ($generated@@546 ($generated@@390 $generated@@155 ($generated@@508 $generated@@624 $generated@@625))) ($generated@@623 $generated@@624))))
 :pattern ( ($generated@@546 ($generated@@390 $generated@@155 ($generated@@508 $generated@@624 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) ($generated@@304 $generated@@164 $generated@@164)) (= (type $generated@@627) $generated@@64)) (= (type $generated@@628) $generated@@64)) ($generated@@148 $generated@@626 ($generated@@418 $generated@@627 $generated@@628))) (and (and ($generated@@148 ($generated@@302 $generated@@626) ($generated@@247 $generated@@627)) ($generated@@148 ($generated@@348 $generated@@626) ($generated@@247 $generated@@628))) ($generated@@148 ($generated@@389 $generated@@626) ($generated@@247 ($generated@@154 $generated@@627 $generated@@628)))))
 :pattern ( ($generated@@148 $generated@@626 ($generated@@418 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@322 $generated@@164 $generated@@164)) (= (type $generated@@630) $generated@@64)) (= (type $generated@@631) $generated@@64)) ($generated@@148 $generated@@629 ($generated@@426 $generated@@630 $generated@@631))) (and (and ($generated@@148 ($generated@@320 $generated@@629) ($generated@@252 $generated@@630)) ($generated@@148 ($generated@@359 $generated@@629) ($generated@@252 $generated@@631))) ($generated@@148 ($generated@@400 $generated@@629) ($generated@@252 ($generated@@154 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@148 $generated@@629 ($generated@@426 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@2) ($generated@@148 $generated@@632 $generated@@46))
 :pattern ( ($generated@@148 $generated@@632 $generated@@46))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@3) ($generated@@148 $generated@@633 $generated@@47))
 :pattern ( ($generated@@148 $generated@@633 $generated@@47))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@4) ($generated@@148 $generated@@634 $generated@@44))
 :pattern ( ($generated@@148 $generated@@634 $generated@@44))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@461) ($generated@@148 $generated@@635 $generated@@45))
 :pattern ( ($generated@@148 $generated@@635 $generated@@45))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@164) ($generated@@148 $generated@@636 $generated@@48))
 :pattern ( ($generated@@148 $generated@@636 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () T@U)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 (T@U) Bool)
(declare-fun $generated@@663 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@637) $generated@@64) (= (type $generated@@638) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@639) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@640) $generated@@164)) (= (type $generated@@641) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@642) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@643) $generated@@164)) (= (type $generated@@644) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@645) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@646) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@647) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@648) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@649) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@650) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@651) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@652) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@653) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@654) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@655) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@656) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@657) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@658) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@659) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@660) ($generated@@176 $generated@@77 $generated@@4))) (= (type $generated@@661) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@664  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (= (type $generated@@665) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@666) $generated@@164)) (and ($generated@@148 $generated@@665 ($generated@@169 $generated@@637)) ($generated@@234 $generated@@666 $generated@@637))) (> ($generated ($generated@@81 $generated@@665 $generated@@666)) 0))
 :pattern ( ($generated@@81 $generated@@665 $generated@@666))
)))))
(let (($generated@@667  (=> (and (not (and (and ($generated@@148 $generated@@638 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@638 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@234 $generated@@640 $generated@@637) ($generated@@264 $generated@@640 $generated@@637 $generated@@639)))) (= (ControlFlow 0 4) 2)) $generated@@664)))
(let (($generated@@668  (=> (and (and (and ($generated@@148 $generated@@638 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@638 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@234 $generated@@640 $generated@@637) ($generated@@264 $generated@@640 $generated@@637 $generated@@639))) (= (ControlFlow 0 3) 2)) $generated@@664)))
(let (($generated@@669  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@671) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@672) $generated@@164)) (and (and ($generated@@148 $generated@@670 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@671 ($generated@@169 $generated@@637))) ($generated@@234 $generated@@672 $generated@@637))) (= ($generated ($generated@@81 $generated@@670 $generated@@672)) ($generated ($generated@@81 $generated@@671 $generated@@672))))
 :pattern ( ($generated@@81 $generated@@671 $generated@@672) ($generated@@81 $generated@@670 $generated@@672))
))) (=> (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@674) ($generated@@76 $generated@@164 $generated@@2))) (= (type $generated@@675) $generated@@164)) (and (and ($generated@@148 $generated@@673 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@674 ($generated@@169 $generated@@637))) ($generated@@234 $generated@@675 $generated@@637))) (= ($generated ($generated@@81 $generated@@673 $generated@@675)) ($generated ($generated@@81 $generated@@674 $generated@@675))))
 :pattern ( ($generated@@81 $generated@@674 $generated@@675) ($generated@@81 $generated@@673 $generated@@675))
)) (and (=> (= (ControlFlow 0 5) 3) $generated@@668) (=> (= (ControlFlow 0 5) 4) $generated@@667))))))
(let (($generated@@676  (=> (and (not (and (and (and ($generated@@148 $generated@@641 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@641 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@642 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@642 ($generated@@169 $generated@@637) $generated@@639))) (and ($generated@@234 $generated@@643 $generated@@637) ($generated@@264 $generated@@643 $generated@@637 $generated@@639)))) (= (ControlFlow 0 8) 5)) $generated@@669)))
(let (($generated@@677  (=> (and (and (and (and ($generated@@148 $generated@@641 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@641 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@642 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@642 ($generated@@169 $generated@@637) $generated@@639))) (and ($generated@@234 $generated@@643 $generated@@637) ($generated@@264 $generated@@643 $generated@@637 $generated@@639))) (= (ControlFlow 0 7) 5)) $generated@@669)))
(let (($generated@@678  (and (=> (= (ControlFlow 0 9) (- 0 10)) (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@680) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@679 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@680 ($generated@@169 $generated@@637)))) ($generated@@563 $generated@@679 $generated@@680))
 :no-pattern (type $generated@@679)
 :no-pattern (type $generated@@680)
 :no-pattern ($generated $generated@@679)
 :no-pattern ($generated@@0 $generated@@679)
 :no-pattern ($generated $generated@@680)
 :no-pattern ($generated@@0 $generated@@680)
))) (=> (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@682) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@681 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@682 ($generated@@169 $generated@@637)))) ($generated@@563 $generated@@681 $generated@@682))
 :no-pattern (type $generated@@681)
 :no-pattern (type $generated@@682)
 :no-pattern ($generated $generated@@681)
 :no-pattern ($generated@@0 $generated@@681)
 :no-pattern ($generated $generated@@682)
 :no-pattern ($generated@@0 $generated@@682)
)) (and (=> (= (ControlFlow 0 9) 7) $generated@@677) (=> (= (ControlFlow 0 9) 8) $generated@@676))))))
(let (($generated@@683  (=> (and (not (and (and ($generated@@148 $generated@@644 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@644 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@645 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@645 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 12) 9)) $generated@@678)))
(let (($generated@@684  (=> (and (and (and ($generated@@148 $generated@@644 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@644 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@645 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@645 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 11) 9)) $generated@@678)))
(let (($generated@@685  (and (=> (= (ControlFlow 0 13) (- 0 14)) (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@686) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@687) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@686 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@687 ($generated@@169 $generated@@637)))) ($generated@@369 ($generated@@134 $generated@@686 $generated@@687) $generated@@687))
 :pattern ( ($generated@@134 $generated@@686 $generated@@687))
))) (=> (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (= (type $generated@@688) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@689) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@688 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@689 ($generated@@169 $generated@@637)))) ($generated@@369 ($generated@@134 $generated@@688 $generated@@689) $generated@@689))
 :pattern ( ($generated@@134 $generated@@688 $generated@@689))
)) (and (=> (= (ControlFlow 0 13) 11) $generated@@684) (=> (= (ControlFlow 0 13) 12) $generated@@683))))))
(let (($generated@@690  (=> (and (not (and (and ($generated@@148 $generated@@646 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@646 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@647 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@647 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 16) 13)) $generated@@685)))
(let (($generated@@691  (=> (and (and (and ($generated@@148 $generated@@646 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@646 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@647 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@647 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 15) 13)) $generated@@685)))
(let (($generated@@692  (and (=> (= (ControlFlow 0 17) (- 0 18)) (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@693) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@694) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@693 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@694 ($generated@@169 $generated@@637)))) ($generated@@369 ($generated@@133 $generated@@693 $generated@@694) $generated@@694))
 :pattern ( ($generated@@133 $generated@@693 $generated@@694))
))) (=> (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@695) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@696) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@695 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@696 ($generated@@169 $generated@@637)))) ($generated@@369 ($generated@@133 $generated@@695 $generated@@696) $generated@@696))
 :pattern ( ($generated@@133 $generated@@695 $generated@@696))
)) (and (=> (= (ControlFlow 0 17) 15) $generated@@691) (=> (= (ControlFlow 0 17) 16) $generated@@690))))))
(let (($generated@@697  (=> (and (not (and (and ($generated@@148 $generated@@648 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@648 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@649 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@649 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 20) 17)) $generated@@692)))
(let (($generated@@698  (=> (and (and (and ($generated@@148 $generated@@648 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@648 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@649 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@649 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 19) 17)) $generated@@692)))
(let (($generated@@699  (and (=> (= (ControlFlow 0 21) (- 0 22)) (forall (($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (= (type $generated@@700) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@701) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@700 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@701 ($generated@@169 $generated@@637)))) ($generated@@369 ($generated@@135 $generated@@700 $generated@@701) $generated@@701))
 :pattern ( ($generated@@135 $generated@@700 $generated@@701))
))) (=> (forall (($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (= (type $generated@@702) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@703) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@702 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@703 ($generated@@169 $generated@@637)))) ($generated@@369 ($generated@@135 $generated@@702 $generated@@703) $generated@@703))
 :pattern ( ($generated@@135 $generated@@702 $generated@@703))
)) (and (=> (= (ControlFlow 0 21) 19) $generated@@698) (=> (= (ControlFlow 0 21) 20) $generated@@697))))))
(let (($generated@@704  (=> (and (not (and (and ($generated@@148 $generated@@650 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@650 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@651 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@651 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 24) 21)) $generated@@699)))
(let (($generated@@705  (=> (and (and (and ($generated@@148 $generated@@650 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@650 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@651 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@651 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 23) 21)) $generated@@699)))
(let (($generated@@706  (and (=> (= (ControlFlow 0 25) (- 0 26)) (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@707) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@708) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@707 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@708 ($generated@@169 $generated@@637)))) ($generated@@374 $generated@@708 $generated@@707))
 :pattern ( ($generated@@374 $generated@@708 $generated@@707))
))) (=> (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@710) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@709 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@710 ($generated@@169 $generated@@637)))) ($generated@@374 $generated@@710 $generated@@709))
 :pattern ( ($generated@@374 $generated@@710 $generated@@709))
)) (and (=> (= (ControlFlow 0 25) 23) $generated@@705) (=> (= (ControlFlow 0 25) 24) $generated@@704))))))
(let (($generated@@711  (=> (and (not (and (and ($generated@@148 $generated@@652 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@652 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@653 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@653 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 28) 25)) $generated@@706)))
(let (($generated@@712  (=> (and (and (and ($generated@@148 $generated@@652 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@652 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@653 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@653 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 27) 25)) $generated@@706)))
(let (($generated@@713  (and (=> (= (ControlFlow 0 29) (- 0 30)) (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (and (= (type $generated@@714) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@715) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@714 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@715 ($generated@@169 $generated@@637)))) (and ($generated@@374 $generated@@715 $generated@@714) (not ($generated@@369 $generated@@715 $generated@@714))))
 :pattern ( ($generated@@374 $generated@@715 $generated@@714))
))) (=> (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (and (= (type $generated@@716) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@717) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@716 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@717 ($generated@@169 $generated@@637)))) (and ($generated@@374 $generated@@717 $generated@@716) (not ($generated@@369 $generated@@717 $generated@@716))))
 :pattern ( ($generated@@374 $generated@@717 $generated@@716))
)) (and (=> (= (ControlFlow 0 29) 27) $generated@@712) (=> (= (ControlFlow 0 29) 28) $generated@@711))))))
(let (($generated@@718  (=> (and (not (and (and ($generated@@148 $generated@@654 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@654 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@655 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@655 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 32) 29)) $generated@@713)))
(let (($generated@@719  (=> (and (and (and ($generated@@148 $generated@@654 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@654 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@655 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@655 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 31) 29)) $generated@@713)))
(let (($generated@@720  (and (=> (= (ControlFlow 0 33) (- 0 34)) (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@722) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@721 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@722 ($generated@@169 $generated@@637)))) (and ($generated@@374 $generated@@721 $generated@@722) (not ($generated@@369 $generated@@721 $generated@@722))))
 :pattern ( ($generated@@374 $generated@@721 $generated@@722))
))) (=> (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (= (type $generated@@723) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@724) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@723 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@724 ($generated@@169 $generated@@637)))) (and ($generated@@374 $generated@@723 $generated@@724) (not ($generated@@369 $generated@@723 $generated@@724))))
 :pattern ( ($generated@@374 $generated@@723 $generated@@724))
)) (and (=> (= (ControlFlow 0 33) 31) $generated@@719) (=> (= (ControlFlow 0 33) 32) $generated@@718))))))
(let (($generated@@725  (=> (and (not (and (and ($generated@@148 $generated@@656 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@656 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@657 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@657 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 36) 33)) $generated@@720)))
(let (($generated@@726  (=> (and (and (and ($generated@@148 $generated@@656 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@656 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@657 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@657 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 35) 33)) $generated@@720)))
(let (($generated@@727  (and (=> (= (ControlFlow 0 37) (- 0 38)) (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (and (= (type $generated@@728) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@729) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@728 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@729 ($generated@@169 $generated@@637)))) ($generated@@374 $generated@@728 $generated@@729))
 :pattern ( ($generated@@374 $generated@@728 $generated@@729))
))) (=> (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@730) ($generated@@76 $generated@@164 $generated@@2)) (= (type $generated@@731) ($generated@@76 $generated@@164 $generated@@2))) (and ($generated@@148 $generated@@730 ($generated@@169 $generated@@637)) ($generated@@148 $generated@@731 ($generated@@169 $generated@@637)))) ($generated@@374 $generated@@730 $generated@@731))
 :pattern ( ($generated@@374 $generated@@730 $generated@@731))
)) (and (=> (= (ControlFlow 0 37) 35) $generated@@726) (=> (= (ControlFlow 0 37) 36) $generated@@725))))))
(let (($generated@@732  (=> (and (not (and (and ($generated@@148 $generated@@658 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@658 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@659 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@659 ($generated@@169 $generated@@637) $generated@@639)))) (= (ControlFlow 0 40) 37)) $generated@@727)))
(let (($generated@@733  (=> (and (and (and ($generated@@148 $generated@@658 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@658 ($generated@@169 $generated@@637) $generated@@639)) (and ($generated@@148 $generated@@659 ($generated@@169 $generated@@637)) ($generated@@74 $generated@@659 ($generated@@169 $generated@@637) $generated@@639))) (= (ControlFlow 0 39) 37)) $generated@@727)))
(let (($generated@@734  (=> (= $generated@@660 ($generated@@175 $generated@@661 $generated@@639 $generated@@60 false)) (and (=> (= (ControlFlow 0 41) 39) $generated@@733) (=> (= (ControlFlow 0 41) 40) $generated@@732)))))
(let (($generated@@735  (=> (and (and ($generated@@263 $generated@@639) ($generated@@662 $generated@@639)) (and (= 0 $generated@@663) (= (ControlFlow 0 42) 41))) $generated@@734)))
$generated@@735)))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 37) (- 38))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 33) (- 34))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 21) (- 22))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 17) (- 18))))
(check-sat)
(get-info :reason-unknown)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@T) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) Int)
(declare-fun $generated@@258 (T@U Int) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@490 (T@U) Int)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@553 (T@U T@U Int) Bool)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert  (and (and (forall (($generated@@154 T@T) ) (= ($generated@@1 ($generated@@152 $generated@@154)) 16)) (forall (($generated@@155 T@T) ) (! (= ($generated@@153 ($generated@@152 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@T) ) (! (= (type ($generated@@151 $generated@@156)) ($generated@@152 $generated@@156))
 :pattern ( ($generated@@151 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
 (not ($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
 :pattern ( (let (($generated@@158 (type $generated@@157)))
($generated@@150 ($generated@@151 $generated@@158) $generated@@157)))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@64)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@163) $generated@@64)) ($generated@@132 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@132 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 17)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@77 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@67 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@77) (= (type $generated@@214) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@215) ($generated@@66 $generated@@4))) (= (type $generated@@217) $generated@@77)) (= (type $generated@@218) ($generated@@66 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@136)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@64) (= (type $generated@@225) $generated@@64)) (= (type $generated@@226) $generated@@145)) (= (type $generated@@227) $generated@@145)) (= ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@132 ($generated@@220 $generated@@226 $generated@@227) ($generated@@135 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@136) (= (type $generated@@229) $generated@@136)) (= ($generated@@142 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@142 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@145) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@132 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@64)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@238) $generated@@64)) (= ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@145) ($generated@@0 ($generated@@81 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@81 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@132 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@64) (= (type $generated@@249) $generated@@64)) (= (type $generated@@250) $generated@@145)) (= (type $generated@@251) $generated@@145)) (= (type $generated@@252) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@246 $generated@@252)) (= ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@74 ($generated@@220 $generated@@250 $generated@@251) ($generated@@135 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@68)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@136) (= ($generated@@134 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@255))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 Int) ) (! (let (($generated@@261 ($generated@@153 (type $generated@@259))))
(= (type ($generated@@258 $generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (let (($generated@@264 ($generated@@153 (type $generated@@262))))
 (=> (and (= (type $generated@@262) ($generated@@152 $generated@@264)) (= (type $generated@@263) ($generated@@152 $generated@@264))) (= ($generated@@256 $generated@@262 $generated@@263)  (and (= ($generated@@257 $generated@@262) ($generated@@257 $generated@@263)) (forall (($generated@@265 Int) ) (!  (=> (and (<= 0 $generated@@265) (< $generated@@265 ($generated@@257 $generated@@262))) (= ($generated@@258 $generated@@262 $generated@@265) ($generated@@258 $generated@@263 $generated@@265)))
 :pattern ( ($generated@@258 $generated@@262 $generated@@265))
 :pattern ( ($generated@@258 $generated@@263 $generated@@265))
))))))
 :pattern ( ($generated@@256 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@136) ($generated@@134 $generated@@266)) (exists (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (and (and (= (type $generated@@267) $generated@@145) (= (type $generated@@268) $generated@@145)) (= $generated@@266 ($generated@@220 $generated@@267 $generated@@268)))
 :no-pattern (type $generated@@267)
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
)))
 :pattern ( ($generated@@134 $generated@@266))
)))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@257 ($generated@@151 $generated@@269)) 0)
 :pattern ( ($generated@@151 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@247 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@247 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@153 (type $generated@@318))))
(= (type ($generated@@317 $generated@@318 $generated@@319)) ($generated@@152 $generated@@320)))
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@153 (type $generated@@321))))
 (=> (and (= (type $generated@@321) ($generated@@152 $generated@@323)) (= (type $generated@@322) ($generated@@152 $generated@@323))) (= ($generated@@257 ($generated@@317 $generated@@321 $generated@@322)) (+ ($generated@@257 $generated@@321) ($generated@@257 $generated@@322)))))
 :pattern ( ($generated@@257 ($generated@@317 $generated@@321 $generated@@322)))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@160 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@275 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@160 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@281 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@285 (type $generated@@334))))
(let (($generated@@336 ($generated@@284 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@283 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@282 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@132 $generated@@349 ($generated@@159 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@221 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@132 $generated@@349 ($generated@@159 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 (type $generated@@354)))
 (=> (and (= (type $generated@@352) ($generated@@152 $generated@@355)) (= (type $generated@@353) ($generated@@152 $generated@@355))) (= ($generated@@150 ($generated@@317 $generated@@352 $generated@@353) $generated@@354)  (or ($generated@@150 $generated@@352 $generated@@354) ($generated@@150 $generated@@353 $generated@@354)))))
 :pattern ( ($generated@@150 ($generated@@317 $generated@@352 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 (type $generated@@357)))
 (=> (= (type $generated@@356) ($generated@@152 $generated@@358)) (= ($generated@@150 $generated@@356 $generated@@357) (exists (($generated@@359 Int) ) (!  (and (and (<= 0 $generated@@359) (< $generated@@359 ($generated@@257 $generated@@356))) (= ($generated@@258 $generated@@356 $generated@@359) $generated@@357))
 :pattern ( ($generated@@258 $generated@@356 $generated@@359))
)))))
 :pattern ( ($generated@@150 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@361) $generated@@64)) (= (type $generated@@362) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@360 ($generated@@230 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) ($generated@@0 ($generated@@81 $generated@@360 $generated@@363))) ($generated@@247 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@81 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@74 $generated@@360 ($generated@@230 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@235 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@247 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@235 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 (type $generated@@368)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@369) $generated@@368)) 0))
 :pattern ( (let (($generated@@369 (type $generated@@368)))
($generated@@81 ($generated@@276 $generated@@369) $generated@@368)))
)))
(assert  (and (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@370 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@370 $generated@@373))
)) (forall (($generated@@374 T@T) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@374 $generated@@375)) $generated@@374)
 :pattern ( ($generated@@371 $generated@@374 $generated@@375))
))) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@285 (type $generated@@376))))
(let (($generated@@378 ($generated@@284 (type $generated@@376))))
(= (type ($generated@@372 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@379) ($generated@@143 ($generated@@371 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@372 $generated@@379) ($generated@@143 ($generated@@371 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@371 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@370 $generated@@379) $generated@@380))
)))
(assert  (and (forall (($generated@@383 T@U) ) (! (= (type ($generated@@381 $generated@@383)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@381 $generated@@383))
)) (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@303 (type $generated@@384))))
(let (($generated@@386 ($generated@@302 (type $generated@@384))))
(= (type ($generated@@382 $generated@@384)) ($generated@@76 $generated@@386 $generated@@385))))
 :pattern ( ($generated@@382 $generated@@384))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@387) ($generated@@143 ($generated@@371 $generated@@136 $generated@@388)))) (= ($generated@@81 ($generated@@382 $generated@@387) ($generated@@143 ($generated@@371 $generated@@136 $generated@@388))) ($generated@@144 ($generated@@371 $generated@@136 $generated@@388))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(let (($generated@@392 ($generated@@284 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@283 $generated@@392 $generated@@391)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@389) $generated@@390)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@389) $generated@@393)) (= $generated@@390 ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@389) $generated@@393))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(let (($generated@@397 ($generated@@302 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@301 $generated@@397 $generated@@396)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@394) $generated@@395)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@394) $generated@@398)) (= $generated@@395 ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@394) $generated@@398))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@81 ($generated@@372 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@408 $generated@@409)) $generated@@64)
 :pattern ( ($generated@@407 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@411) $generated@@64)) (= (type $generated@@412) $generated@@64)) (= (type $generated@@413) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@410) $generated@@414))) (and ($generated@@247 ($generated@@81 ($generated@@382 $generated@@410) $generated@@414) $generated@@412 $generated@@413) ($generated@@247 $generated@@414 $generated@@411 $generated@@413)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@410) $generated@@414))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@410) $generated@@414))
))))
 :pattern ( ($generated@@74 $generated@@410 ($generated@@407 $generated@@411 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@153 (type $generated@@415))))
 (=> (and (and (= (type $generated@@415) ($generated@@152 $generated@@417)) (= (type $generated@@416) ($generated@@152 $generated@@417))) ($generated@@256 $generated@@415 $generated@@416)) (= $generated@@415 $generated@@416)))
 :pattern ( ($generated@@256 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@76 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@303 (type $generated@@420))))
(let (($generated@@422 ($generated@@302 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@301 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@300 $generated@@422 $generated@@421)) (= ($generated@@299 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@299 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@303 (type $generated@@423))))
(let (($generated@@425 ($generated@@302 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@301 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@300 $generated@@425 $generated@@424)) (= ($generated@@342 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@342 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@303 (type $generated@@426))))
(let (($generated@@428 ($generated@@302 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@301 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@300 $generated@@428 $generated@@427)) (= ($generated@@381 $generated@@426) ($generated@@418 $generated@@145))))))
 :pattern ( ($generated@@381 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@285 (type $generated@@429))))
(let (($generated@@431 ($generated@@284 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@283 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@282 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@145) (= (type $generated@@433) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@370 $generated@@429) ($generated@@270 ($generated@@220 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@370 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@303 (type $generated@@434))))
(let (($generated@@436 ($generated@@302 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@301 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@300 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@145) (= (type $generated@@438) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@434) ($generated@@270 ($generated@@220 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@381 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@145) ($generated@@221 $generated@@439 $generated@@46)) (and (= ($generated@@270 ($generated@@371 $generated@@2 $generated@@439)) $generated@@439) ($generated@@132 ($generated@@371 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@221 $generated@@440 $generated@@47)) (and (= ($generated@@270 ($generated@@371 $generated@@3 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@371 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@145) ($generated@@221 $generated@@441 $generated@@44)) (and (= ($generated@@270 ($generated@@371 $generated@@4 $generated@@441)) $generated@@441) ($generated@@132 ($generated@@371 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) ($generated@@221 $generated@@443 $generated@@45)) (and (= ($generated@@270 ($generated@@371 $generated@@442 $generated@@443)) $generated@@443) ($generated@@132 ($generated@@371 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@64) (= ($generated@@221 ($generated@@270 $generated@@444) $generated@@445) ($generated@@132 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@221 ($generated@@270 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@79 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@76 $generated@@447 $generated@@2)) (<= 0 ($generated@@275 $generated@@446))))
 :pattern ( ($generated@@275 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@153 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@152 $generated@@449)) (<= 0 ($generated@@257 $generated@@448))))
 :pattern ( ($generated@@257 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@399 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@399 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@64)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@64) (= (type $generated@@457) $generated@@64)) (= ($generated@@454 ($generated@@399 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@399 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@458 $generated@@459)) $generated@@58))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@64) (= (type $generated@@463) $generated@@64)) (= ($generated@@460 ($generated@@407 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@407 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@407 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@407 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@64) (= (type $generated@@469) $generated@@64)) (= ($generated@@72 ($generated@@407 $generated@@468 $generated@@469)) $generated@@59))
 :pattern ( ($generated@@407 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@145) (= (type $generated@@471) $generated@@145)) (= ($generated@@253 ($generated@@220 $generated@@470 $generated@@471)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@64) (= (type $generated@@475) $generated@@64)) (= ($generated@@472 ($generated@@135 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@135 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@64) (= (type $generated@@479) $generated@@64)) (= ($generated@@476 ($generated@@135 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@135 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@145) (= (type $generated@@481) $generated@@145)) (= ($generated@@143 ($generated@@220 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@220 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@145) (= (type $generated@@483) $generated@@145)) (= ($generated@@144 ($generated@@220 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@220 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@152 $generated@@145)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@486 ($generated@@484 $generated@@487) $generated@@488) (forall (($generated@@489 Int) ) (!  (=> (and (<= 0 $generated@@489) (< $generated@@489 ($generated@@257 $generated@@486))) ($generated@@247 ($generated@@258 $generated@@486 $generated@@489) $generated@@487 $generated@@488))
 :pattern ( ($generated@@258 $generated@@486 $generated@@489))
))))
 :pattern ( ($generated@@74 $generated@@486 ($generated@@484 $generated@@487) $generated@@488))
)))
(assert (forall (($generated@@491 Int) ) (! (= ($generated@@490 ($generated@@75 $generated@@491)) $generated@@491)
 :pattern ( ($generated@@75 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@64)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@492 ($generated@@230 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@230 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@495)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@64)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@496 ($generated@@235 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@235 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@72 ($generated@@235 $generated@@499)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@64)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@500 ($generated@@159 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@159 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@72 ($generated@@159 $generated@@503)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@64)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@504 ($generated@@484 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@484 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@72 ($generated@@484 $generated@@507)) $generated@@57))
 :pattern ( ($generated@@484 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 (type $generated@@508)))
(= ($generated@@371 $generated@@509 ($generated@@270 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@270 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) (= ($generated@@132 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@81 ($generated@@372 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@510) $generated@@513))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@132 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@515) $generated@@64)) (= (type $generated@@516) $generated@@64)) (= ($generated@@132 $generated@@514 ($generated@@407 $generated@@515 $generated@@516)) (forall (($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@514) $generated@@517))) (and ($generated@@221 ($generated@@81 ($generated@@382 $generated@@514) $generated@@517) $generated@@516) ($generated@@221 $generated@@517 $generated@@515)))
 :pattern ( ($generated@@81 ($generated@@382 $generated@@514) $generated@@517))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@514) $generated@@517))
))))
 :pattern ( ($generated@@132 $generated@@514 ($generated@@407 $generated@@515 $generated@@516)))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@145)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@220 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@220 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@145)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@220 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@220 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@221 $generated@@524 ($generated@@399 $generated@@525 $generated@@526))) (and (= ($generated@@270 ($generated@@371 ($generated@@283 $generated@@145 $generated@@145) $generated@@524)) $generated@@524) ($generated@@132 ($generated@@371 ($generated@@283 $generated@@145 $generated@@145) $generated@@524) ($generated@@399 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@221 $generated@@524 ($generated@@399 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@221 $generated@@527 ($generated@@407 $generated@@528 $generated@@529))) (and (= ($generated@@270 ($generated@@371 ($generated@@301 $generated@@145 $generated@@145) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@371 ($generated@@301 $generated@@145 $generated@@145) $generated@@527) ($generated@@407 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@221 $generated@@527 ($generated@@407 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@64) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@145)) ($generated@@221 $generated@@532 ($generated@@135 $generated@@530 $generated@@531))) (and (= ($generated@@270 ($generated@@371 $generated@@136 $generated@@532)) $generated@@532) ($generated@@132 ($generated@@371 $generated@@136 $generated@@532) ($generated@@135 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@221 $generated@@532 ($generated@@135 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
 (not ($generated@@0 ($generated@@81 ($generated@@418 $generated@@534) $generated@@533))))
 :pattern ( (let (($generated@@534 (type $generated@@533)))
($generated@@81 ($generated@@418 $generated@@534) $generated@@533)))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@69)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@535 ($generated@@135 $generated@@537 $generated@@538)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@136) (= ($generated@@518 ($generated@@270 $generated@@539)) ($generated@@519 $generated@@539)))
 :pattern ( ($generated@@518 ($generated@@270 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@145) ($generated@@221 $generated@@540 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@371 $generated@@2 $generated@@540)) $generated@@540) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@75 0))))
 :pattern ( ($generated@@221 $generated@@540 ($generated@@75 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@145) (= (type $generated@@542) $generated@@64)) ($generated@@221 $generated@@541 ($generated@@230 $generated@@542))) (and (= ($generated@@270 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@541)) $generated@@541) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@541) ($generated@@230 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@230 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@145) (= (type $generated@@544) $generated@@64)) ($generated@@221 $generated@@543 ($generated@@235 $generated@@544))) (and (= ($generated@@270 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@543)) $generated@@543) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@4) $generated@@543) ($generated@@235 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@235 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@64)) ($generated@@221 $generated@@545 ($generated@@159 $generated@@546))) (and (= ($generated@@270 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@545)) $generated@@545) ($generated@@132 ($generated@@371 ($generated@@76 $generated@@145 $generated@@2) $generated@@545) ($generated@@159 $generated@@546))))
 :pattern ( ($generated@@221 $generated@@545 ($generated@@159 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@64)) ($generated@@221 $generated@@547 ($generated@@484 $generated@@548))) (and (= ($generated@@270 ($generated@@371 ($generated@@152 $generated@@145) $generated@@547)) $generated@@547) ($generated@@132 ($generated@@371 ($generated@@152 $generated@@145) $generated@@547) ($generated@@484 $generated@@548))))
 :pattern ( ($generated@@221 $generated@@547 ($generated@@484 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@549 ($generated@@159 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@549 $generated@@552)))) ($generated@@247 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@81 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@159 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 Int) ) (! (let (($generated@@557 ($generated@@153 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@152 $generated@@557)) (= (type $generated@@555) ($generated@@152 $generated@@557))) (= ($generated@@553 $generated@@554 $generated@@555 $generated@@556) (forall (($generated@@558 Int) ) (!  (=> (and (<= 0 $generated@@558) (< $generated@@558 $generated@@556)) (= ($generated@@258 $generated@@554 $generated@@558) ($generated@@258 $generated@@555 $generated@@558)))
 :pattern ( ($generated@@258 $generated@@554 $generated@@558))
 :pattern ( ($generated@@258 $generated@@555 $generated@@558))
)))))
 :pattern ( ($generated@@553 $generated@@554 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@136) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@561) (and ($generated@@134 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@135 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@247 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@247 ($generated@@143 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@246 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@247 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@247 ($generated@@144 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 Int) ) (! (let (($generated@@570 ($generated@@153 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@152 $generated@@570)) (= (type $generated@@568) ($generated@@152 $generated@@570))) (and (=> (< $generated@@569 ($generated@@257 $generated@@567)) (= ($generated@@258 ($generated@@317 $generated@@567 $generated@@568) $generated@@569) ($generated@@258 $generated@@567 $generated@@569))) (=> (<= ($generated@@257 $generated@@567) $generated@@569) (= ($generated@@258 ($generated@@317 $generated@@567 $generated@@568) $generated@@569) ($generated@@258 $generated@@568 (- $generated@@569 ($generated@@257 $generated@@567))))))))
 :pattern ( ($generated@@258 ($generated@@317 $generated@@567 $generated@@568) $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@145)) (= ($generated@@220 ($generated@@242 $generated@@571) ($generated@@242 $generated@@572)) ($generated@@242 ($generated@@220 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@571) ($generated@@242 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@240 $generated@@573))) ($generated@@242 ($generated@@270 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@240 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@270 ($generated@@242 $generated@@574)) ($generated@@242 ($generated@@270 $generated@@574)))
 :pattern ( ($generated@@270 ($generated@@242 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@153 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@152 $generated@@576)) (= ($generated@@257 $generated@@575) 0)) (= $generated@@575 ($generated@@151 $generated@@576))))
 :pattern ( ($generated@@257 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@76 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@275 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@275 $generated@@577) ($generated ($generated@@81 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@2)) ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@3)) ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@4)) ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@442)) ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@145)) ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@152 $generated@@145)) (= (type $generated@@592) $generated@@64)) (= ($generated@@132 $generated@@591 ($generated@@484 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@257 $generated@@591))) ($generated@@221 ($generated@@258 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@258 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@132 $generated@@591 ($generated@@484 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@152 $generated@@145)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@257 $generated@@595))) (< ($generated@@519 ($generated@@371 $generated@@136 ($generated@@258 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@519 ($generated@@371 $generated@@136 ($generated@@258 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@132 $generated@@597 ($generated@@399 $generated@@598 $generated@@599))) (and (and ($generated@@132 ($generated@@281 $generated@@597) ($generated@@230 $generated@@598)) ($generated@@132 ($generated@@331 $generated@@597) ($generated@@230 $generated@@599))) ($generated@@132 ($generated@@370 $generated@@597) ($generated@@230 ($generated@@135 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@132 $generated@@597 ($generated@@399 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@132 $generated@@600 ($generated@@407 $generated@@601 $generated@@602))) (and (and ($generated@@132 ($generated@@299 $generated@@600) ($generated@@235 $generated@@601)) ($generated@@132 ($generated@@342 $generated@@600) ($generated@@235 $generated@@602))) ($generated@@132 ($generated@@381 $generated@@600) ($generated@@235 ($generated@@135 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@132 $generated@@600 ($generated@@407 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@132 $generated@@603 $generated@@46))
 :pattern ( ($generated@@132 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@132 $generated@@604 $generated@@47))
 :pattern ( ($generated@@132 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@132 $generated@@605 $generated@@44))
 :pattern ( ($generated@@132 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@442) ($generated@@132 $generated@@606 $generated@@45))
 :pattern ( ($generated@@132 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@145) ($generated@@132 $generated@@607 $generated@@48))
 :pattern ( ($generated@@132 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 (T@U) Bool)
(declare-fun $generated@@624 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@608) $generated@@64) (= (type $generated@@609) ($generated@@152 $generated@@145))) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) $generated@@145)) (= (type $generated@@613) ($generated@@152 $generated@@145))) (= (type $generated@@614) ($generated@@152 $generated@@145))) (= (type $generated@@615) ($generated@@152 $generated@@145))) (= (type $generated@@616) ($generated@@152 $generated@@145))) (= (type $generated@@617) ($generated@@152 $generated@@145))) (= (type $generated@@618) ($generated@@152 $generated@@145))) (= (type $generated@@619) ($generated@@152 $generated@@145))) (= (type $generated@@620) ($generated@@152 $generated@@145))) (= (type $generated@@621) ($generated@@166 $generated@@77 $generated@@4))) (= (type $generated@@622) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@625  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@152 $generated@@145)) (= (type $generated@@627) $generated@@145)) (and ($generated@@132 $generated@@626 ($generated@@484 $generated@@608)) ($generated@@221 $generated@@627 $generated@@608))) ($generated@@150 $generated@@626 $generated@@627))
 :pattern ( ($generated@@150 $generated@@626 $generated@@627))
)))))
(let (($generated@@628  (=> (and (not (and (and ($generated@@132 $generated@@609 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@609 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@221 $generated@@611 $generated@@608) ($generated@@247 $generated@@611 $generated@@608 $generated@@610)))) (= (ControlFlow 0 4) 2)) $generated@@625)))
(let (($generated@@629  (=> (and (and (and ($generated@@132 $generated@@609 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@609 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@221 $generated@@611 $generated@@608) ($generated@@247 $generated@@611 $generated@@608 $generated@@610))) (= (ControlFlow 0 3) 2)) $generated@@625)))
(let (($generated@@630  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@631 Int) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@152 $generated@@145)) (= (type $generated@@633) ($generated@@152 $generated@@145))) (=> (and (and (<= ($generated@@240 0) $generated@@631) ($generated@@132 $generated@@632 ($generated@@484 $generated@@608))) ($generated@@132 $generated@@633 ($generated@@484 $generated@@608))) (= ($generated@@258 $generated@@633 $generated@@631) ($generated@@258 $generated@@632 $generated@@631))))
 :pattern ( ($generated@@258 $generated@@632 $generated@@631) ($generated@@258 $generated@@633 $generated@@631))
))) (=> (forall (($generated@@634 Int) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@152 $generated@@145)) (= (type $generated@@636) ($generated@@152 $generated@@145))) (=> (and (and (<= ($generated@@240 0) $generated@@634) ($generated@@132 $generated@@635 ($generated@@484 $generated@@608))) ($generated@@132 $generated@@636 ($generated@@484 $generated@@608))) (= ($generated@@258 $generated@@636 $generated@@634) ($generated@@258 $generated@@635 $generated@@634))))
 :pattern ( ($generated@@258 $generated@@635 $generated@@634) ($generated@@258 $generated@@636 $generated@@634))
)) (and (=> (= (ControlFlow 0 5) 3) $generated@@629) (=> (= (ControlFlow 0 5) 4) $generated@@628))))))
(let (($generated@@637  (=> (and (not (and (and (<= ($generated@@240 0) $generated@@612) (and ($generated@@132 $generated@@613 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@613 ($generated@@484 $generated@@608) $generated@@610))) (and ($generated@@132 $generated@@614 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@614 ($generated@@484 $generated@@608) $generated@@610)))) (= (ControlFlow 0 10) 5)) $generated@@630)))
(let (($generated@@638  (=> (and (and (<= ($generated@@240 0) $generated@@612) (and ($generated@@132 $generated@@613 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@613 ($generated@@484 $generated@@608) $generated@@610))) (and ($generated@@132 $generated@@614 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@614 ($generated@@484 $generated@@608) $generated@@610))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@257 $generated@@614)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@257 $generated@@613)))) (=> (= (ControlFlow 0 7) 5) $generated@@630))))))
(let (($generated@@639  (and (=> (= (ControlFlow 0 11) (- 0 12)) (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) ($generated@@152 $generated@@145)) (= (type $generated@@641) ($generated@@152 $generated@@145))) (and ($generated@@132 $generated@@640 ($generated@@484 $generated@@608)) ($generated@@132 $generated@@641 ($generated@@484 $generated@@608)))) ($generated@@256 ($generated@@317 $generated@@640 $generated@@641) $generated@@641))
 :pattern ( ($generated@@317 $generated@@640 $generated@@641))
))) (=> (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@152 $generated@@145)) (= (type $generated@@643) ($generated@@152 $generated@@145))) (and ($generated@@132 $generated@@642 ($generated@@484 $generated@@608)) ($generated@@132 $generated@@643 ($generated@@484 $generated@@608)))) ($generated@@256 ($generated@@317 $generated@@642 $generated@@643) $generated@@643))
 :pattern ( ($generated@@317 $generated@@642 $generated@@643))
)) (and (=> (= (ControlFlow 0 11) 7) $generated@@638) (=> (= (ControlFlow 0 11) 10) $generated@@637))))))
(let (($generated@@644  (=> (and (not (and (and ($generated@@132 $generated@@615 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@615 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@132 $generated@@616 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@616 ($generated@@484 $generated@@608) $generated@@610)))) (= (ControlFlow 0 14) 11)) $generated@@639)))
(let (($generated@@645  (=> (and (and (and ($generated@@132 $generated@@615 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@615 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@132 $generated@@616 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@616 ($generated@@484 $generated@@608) $generated@@610))) (= (ControlFlow 0 13) 11)) $generated@@639)))
(let (($generated@@646  (and (=> (= (ControlFlow 0 15) (- 0 16)) (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@647) ($generated@@152 $generated@@145)) (= (type $generated@@648) ($generated@@152 $generated@@145))) (and ($generated@@132 $generated@@647 ($generated@@484 $generated@@608)) ($generated@@132 $generated@@648 ($generated@@484 $generated@@608)))) (and (< ($generated@@257 $generated@@647) ($generated@@257 $generated@@648)) ($generated@@553 $generated@@647 $generated@@648 ($generated@@257 $generated@@647))))
 :no-pattern (type $generated@@647)
 :no-pattern (type $generated@@648)
 :no-pattern ($generated $generated@@647)
 :no-pattern ($generated@@0 $generated@@647)
 :no-pattern ($generated $generated@@648)
 :no-pattern ($generated@@0 $generated@@648)
))) (=> (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@649) ($generated@@152 $generated@@145)) (= (type $generated@@650) ($generated@@152 $generated@@145))) (and ($generated@@132 $generated@@649 ($generated@@484 $generated@@608)) ($generated@@132 $generated@@650 ($generated@@484 $generated@@608)))) (and (< ($generated@@257 $generated@@649) ($generated@@257 $generated@@650)) ($generated@@553 $generated@@649 $generated@@650 ($generated@@257 $generated@@649))))
 :no-pattern (type $generated@@649)
 :no-pattern (type $generated@@650)
 :no-pattern ($generated $generated@@649)
 :no-pattern ($generated@@0 $generated@@649)
 :no-pattern ($generated $generated@@650)
 :no-pattern ($generated@@0 $generated@@650)
)) (and (=> (= (ControlFlow 0 15) 13) $generated@@645) (=> (= (ControlFlow 0 15) 14) $generated@@644))))))
(let (($generated@@651  (=> (and (not (and (and ($generated@@132 $generated@@617 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@617 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@132 $generated@@618 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@618 ($generated@@484 $generated@@608) $generated@@610)))) (= (ControlFlow 0 18) 15)) $generated@@646)))
(let (($generated@@652  (=> (and (and (and ($generated@@132 $generated@@617 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@617 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@132 $generated@@618 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@618 ($generated@@484 $generated@@608) $generated@@610))) (= (ControlFlow 0 17) 15)) $generated@@646)))
(let (($generated@@653  (and (=> (= (ControlFlow 0 19) (- 0 20)) (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) ($generated@@152 $generated@@145)) (= (type $generated@@655) ($generated@@152 $generated@@145))) (and ($generated@@132 $generated@@654 ($generated@@484 $generated@@608)) ($generated@@132 $generated@@655 ($generated@@484 $generated@@608)))) (and (<= ($generated@@257 $generated@@654) ($generated@@257 $generated@@655)) ($generated@@553 $generated@@654 $generated@@655 ($generated@@257 $generated@@654))))
 :no-pattern (type $generated@@654)
 :no-pattern (type $generated@@655)
 :no-pattern ($generated $generated@@654)
 :no-pattern ($generated@@0 $generated@@654)
 :no-pattern ($generated $generated@@655)
 :no-pattern ($generated@@0 $generated@@655)
))) (=> (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) ($generated@@152 $generated@@145)) (= (type $generated@@657) ($generated@@152 $generated@@145))) (and ($generated@@132 $generated@@656 ($generated@@484 $generated@@608)) ($generated@@132 $generated@@657 ($generated@@484 $generated@@608)))) (and (<= ($generated@@257 $generated@@656) ($generated@@257 $generated@@657)) ($generated@@553 $generated@@656 $generated@@657 ($generated@@257 $generated@@656))))
 :no-pattern (type $generated@@656)
 :no-pattern (type $generated@@657)
 :no-pattern ($generated $generated@@656)
 :no-pattern ($generated@@0 $generated@@656)
 :no-pattern ($generated $generated@@657)
 :no-pattern ($generated@@0 $generated@@657)
)) (and (=> (= (ControlFlow 0 19) 17) $generated@@652) (=> (= (ControlFlow 0 19) 18) $generated@@651))))))
(let (($generated@@658  (=> (and (not (and (and ($generated@@132 $generated@@619 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@619 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@132 $generated@@620 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@620 ($generated@@484 $generated@@608) $generated@@610)))) (= (ControlFlow 0 22) 19)) $generated@@653)))
(let (($generated@@659  (=> (and (and (and ($generated@@132 $generated@@619 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@619 ($generated@@484 $generated@@608) $generated@@610)) (and ($generated@@132 $generated@@620 ($generated@@484 $generated@@608)) ($generated@@74 $generated@@620 ($generated@@484 $generated@@608) $generated@@610))) (= (ControlFlow 0 21) 19)) $generated@@653)))
(let (($generated@@660  (=> (= $generated@@621 ($generated@@165 $generated@@622 $generated@@610 $generated@@60 false)) (and (=> (= (ControlFlow 0 23) 21) $generated@@659) (=> (= (ControlFlow 0 23) 22) $generated@@658)))))
(let (($generated@@661  (=> (and (and ($generated@@246 $generated@@610) ($generated@@623 $generated@@610)) (and (= 1 $generated@@624) (= (ControlFlow 0 24) 23))) $generated@@660)))
$generated@@661))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 19) (- 20))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 15) (- 16))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 11) (- 12))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 9))))
(check-sat)
(get-info :reason-unknown)
(pop 1)
; Invalid
(get-info :rlimit)
