(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@T T@T) T@U)
(declare-fun $generated@@325 (T@T T@T) T@T)
(declare-fun $generated@@326 (T@T) T@T)
(declare-fun $generated@@327 (T@T) T@T)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@369 (T@U) Bool)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@622 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@69)) (= (type $generated@@64) $generated@@72)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@64))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@68)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) $generated@@68) (= (type $generated@@222) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@222)) ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
 :pattern ( ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@140)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@149)) (= (type $generated@@230) $generated@@149)) (= ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@68) ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@146 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@146 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@140) (= (type $generated@@236) $generated@@140)) (= ($generated@@234 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert  (and (forall (($generated@@240 T@U) ) (! (= (type ($generated@@238 $generated@@240)) $generated@@149)
 :pattern ( ($generated@@238 $generated@@240))
)) (forall (($generated@@241 T@U) ) (! (= (type ($generated@@239 $generated@@241)) $generated@@140)
 :pattern ( ($generated@@239 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@140) (= (type $generated@@243) $generated@@140)) (and ($generated@@237 $generated@@242) ($generated@@237 $generated@@243))) (= ($generated@@234 $generated@@242 $generated@@243)  (and (= ($generated@@238 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@234 ($generated@@239 $generated@@242) ($generated@@239 $generated@@243)))))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@242))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@149) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@224 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@224 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (let (($generated@@256 (type $generated@@255)))
(= (type ($generated@@254 $generated@@255)) $generated@@256))
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= ($generated@@254 $generated@@257) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@140) (= (type $generated@@260) $generated@@140)) (and ($generated@@258 $generated@@259) ($generated@@258 $generated@@260))) (= ($generated@@234 $generated@@259 $generated@@260) true))
 :pattern ( ($generated@@234 $generated@@259 $generated@@260) ($generated@@258 $generated@@259))
 :pattern ( ($generated@@234 $generated@@259 $generated@@260) ($generated@@258 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= (type ($generated@@261 $generated@@262 $generated@@263)) $generated@@140)
 :pattern ( ($generated@@261 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@149)) (= (type $generated@@266) $generated@@140)) (= ($generated@@136 ($generated@@261 $generated@@265 $generated@@266) ($generated@@218 $generated@@264))  (and ($generated@@224 $generated@@265 $generated@@264) ($generated@@136 $generated@@266 ($generated@@218 $generated@@264)))))
 :pattern ( ($generated@@136 ($generated@@261 $generated@@265 $generated@@266) ($generated@@218 $generated@@264)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@68) (= (type $generated@@269) $generated@@68)) (= (type $generated@@270) $generated@@149)) (= (type $generated@@271) $generated@@149)) (= (type $generated@@272) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@272)) (= ($generated@@78 ($generated@@223 $generated@@270 $generated@@271) ($generated@@139 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@270 $generated@@271) ($generated@@139 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@140) (= ($generated@@138 $generated@@273) (= ($generated@@154 $generated@@273) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@140) (= ($generated@@258 $generated@@274) (= ($generated@@154 $generated@@274) $generated@@64)))
 :pattern ( ($generated@@258 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@140) (= ($generated@@237 $generated@@275) (= ($generated@@154 $generated@@275) $generated@@65)))
 :pattern ( ($generated@@237 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@140) ($generated@@138 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@149) (= (type $generated@@278) $generated@@149)) (= $generated@@276 ($generated@@223 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@138 $generated@@276))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@140) ($generated@@237 $generated@@279)) (exists (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (and (and (= (type $generated@@280) $generated@@149) (= (type $generated@@281) $generated@@140)) (= $generated@@279 ($generated@@261 $generated@@280 $generated@@281)))
 :no-pattern (type $generated@@280)
 :no-pattern (type $generated@@281)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
)))
 :pattern ( ($generated@@237 $generated@@279))
)))
(assert  (and (and (forall (($generated@@286 T@T) ) (= ($generated@@1 ($generated@@284 $generated@@286)) 17)) (forall (($generated@@287 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@287)) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
))) (forall (($generated@@288 T@T) ) (! (= (type ($generated@@282 $generated@@288)) ($generated@@284 $generated@@288))
 :pattern ( ($generated@@282 $generated@@288))
))))
(assert (forall (($generated@@289 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@289)) 0)
 :pattern ( ($generated@@282 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@140) ($generated@@258 $generated@@290)) (= $generated@@290 $generated@@155))
 :pattern ( ($generated@@258 $generated@@290))
)))
(assert (forall (($generated@@292 T@U) ) (! (= (type ($generated@@291 $generated@@292)) $generated@@149)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@68) (= (type $generated@@295) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@267 ($generated@@291 $generated@@293) $generated@@294 $generated@@295) ($generated@@78 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@267 ($generated@@291 $generated@@293) $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@298 T@T) ) (! (= (type ($generated@@297 $generated@@298)) ($generated@@80 $generated@@298 $generated@@2))
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (! (let (($generated@@300 ($generated@@83 (type $generated@@299))))
 (=> (= (type $generated@@299) ($generated@@80 $generated@@300 $generated@@2)) (and (= (= ($generated@@296 $generated@@299) 0) (= $generated@@299 ($generated@@297 $generated@@300))) (=> (not (= ($generated@@296 $generated@@299) 0)) (exists (($generated@@301 T@U) ) (!  (and (= (type $generated@@301) $generated@@300) (< 0 ($generated ($generated@@85 $generated@@299 $generated@@301))))
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
))))))
 :pattern ( ($generated@@296 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ) (! (= (type ($generated@@302 $generated@@303)) $generated@@73)
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (!  (=> (= (type $generated@@304) $generated@@68) (and (= ($generated@@76 ($generated@@218 $generated@@304)) $generated@@63) (= ($generated@@302 ($generated@@218 $generated@@304)) $generated@@67)))
 :pattern ( ($generated@@218 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 18)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@80 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@85 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert  (and (and (and (and (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (= ($generated@@1 ($generated@@325 $generated@@328 $generated@@329)) 19)) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@326 ($generated@@325 $generated@@330 $generated@@331)) $generated@@330)
 :pattern ( ($generated@@325 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@327 ($generated@@325 $generated@@332 $generated@@333)) $generated@@333)
 :pattern ( ($generated@@325 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@326 (type $generated@@334))))
(= (type ($generated@@323 $generated@@334)) ($generated@@80 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@334))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= (type ($generated@@324 $generated@@336 $generated@@337)) ($generated@@325 $generated@@336 $generated@@337))
 :pattern ( ($generated@@324 $generated@@336 $generated@@337))
))))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@T) ) (! (let (($generated@@340 (type $generated@@338)))
 (not ($generated@@0 ($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338))))
 :pattern ( (let (($generated@@340 (type $generated@@338)))
($generated@@85 ($generated@@323 ($generated@@324 $generated@@340 $generated@@339)) $generated@@338)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@83 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@80 $generated@@342 $generated@@2)) (= ($generated@@158 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@85 $generated@@341 $generated@@343))) (<= ($generated ($generated@@85 $generated@@341 $generated@@343)) ($generated@@296 $generated@@341))))
 :pattern ( ($generated@@85 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@158 $generated@@341))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@309 (type $generated@@344))))
(let (($generated@@346 ($generated@@308 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@307 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@306 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@305 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@309 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@80 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@309 (type $generated@@351))))
(let (($generated@@353 ($generated@@308 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@307 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@306 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@327 (type $generated@@355))))
(let (($generated@@357 ($generated@@326 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@325 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@324 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@323 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@327 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@80 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@327 (type $generated@@362))))
(let (($generated@@364 ($generated@@326 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@325 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@324 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@85 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@367) $generated@@68)) (= ($generated@@136 $generated@@366 ($generated@@157 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@366 $generated@@368)))) ($generated@@224 $generated@@368 $generated@@367))
 :pattern ( ($generated@@85 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@136 $generated@@366 ($generated@@157 $generated@@367)))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@140) ($generated@@369 $generated@@370)) (or ($generated@@258 $generated@@370) ($generated@@237 $generated@@370)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@372) $generated@@68)) (= (type $generated@@373) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@371 ($generated@@244 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@149) ($generated@@0 ($generated@@85 $generated@@371 $generated@@374))) ($generated@@267 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@85 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@78 $generated@@371 ($generated@@244 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@376) $generated@@68)) (= (type $generated@@377) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@375 ($generated@@249 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@149) ($generated@@0 ($generated@@85 $generated@@375 $generated@@378))) ($generated@@267 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@85 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@78 $generated@@375 ($generated@@249 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@85 ($generated@@297 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@85 ($generated@@297 $generated@@380) $generated@@379)))
)))
(assert  (and (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@381 $generated@@384)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@381 $generated@@384))
)) (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@382 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@382 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@309 (type $generated@@387))))
(let (($generated@@389 ($generated@@308 (type $generated@@387))))
(= (type ($generated@@383 $generated@@387)) ($generated@@80 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@383 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@391) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@390) ($generated@@147 ($generated@@382 $generated@@140 $generated@@391)))) (= ($generated@@85 ($generated@@383 $generated@@390) ($generated@@147 ($generated@@382 $generated@@140 $generated@@391))) ($generated@@148 ($generated@@382 $generated@@140 $generated@@391))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@327 (type $generated@@395))))
(let (($generated@@397 ($generated@@326 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@80 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@325 $generated@@149 $generated@@149)) (= (type $generated@@399) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@398) ($generated@@147 ($generated@@382 $generated@@140 $generated@@399)))) (= ($generated@@85 ($generated@@393 $generated@@398) ($generated@@147 ($generated@@382 $generated@@140 $generated@@399))) ($generated@@148 ($generated@@382 $generated@@140 $generated@@399))))))
 :pattern ( ($generated@@85 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@308 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@307 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@85 ($generated@@348 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@85 ($generated@@305 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@85 ($generated@@383 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@400) $generated@@404))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@326 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@325 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@359 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@323 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@68)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) $generated@@68)) (= (type $generated@@416) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@413) $generated@@417))) (and ($generated@@267 ($generated@@85 ($generated@@383 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@267 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@413) $generated@@417))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@78 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@68)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@325 $generated@@149 $generated@@149)) (= (type $generated@@422) $generated@@68)) (= (type $generated@@423) $generated@@68)) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@421) $generated@@425))) (and ($generated@@267 ($generated@@85 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@267 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@78 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (= (type $generated@@426) $generated@@68) (= (type $generated@@427) $generated@@140)) ($generated@@136 $generated@@427 ($generated@@218 $generated@@426))) (or ($generated@@258 $generated@@427) ($generated@@237 $generated@@427)))
 :pattern ( ($generated@@237 $generated@@427) ($generated@@136 $generated@@427 ($generated@@218 $generated@@426)))
 :pattern ( ($generated@@258 $generated@@427) ($generated@@136 $generated@@427 ($generated@@218 $generated@@426)))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@80 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@327 (type $generated@@430))))
(let (($generated@@432 ($generated@@326 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@325 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@324 $generated@@432 $generated@@431)) (= ($generated@@323 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@323 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@327 (type $generated@@433))))
(let (($generated@@435 ($generated@@326 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@325 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@324 $generated@@435 $generated@@434)) (= ($generated@@359 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@359 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@327 (type $generated@@436))))
(let (($generated@@438 ($generated@@326 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@325 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@324 $generated@@438 $generated@@437)) (= ($generated@@392 $generated@@436) ($generated@@428 $generated@@149))))))
 :pattern ( ($generated@@392 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@309 (type $generated@@439))))
(let (($generated@@441 ($generated@@308 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@307 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@306 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@149) (= (type $generated@@443) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@439) ($generated@@291 ($generated@@223 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@381 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@327 (type $generated@@444))))
(let (($generated@@446 ($generated@@326 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@325 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@324 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@149) (= (type $generated@@448) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@392 $generated@@444) ($generated@@291 ($generated@@223 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@392 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@149) ($generated@@224 $generated@@449 $generated@@46)) (and (= ($generated@@291 ($generated@@382 $generated@@2 $generated@@449)) $generated@@449) ($generated@@136 ($generated@@382 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@149) ($generated@@224 $generated@@450 $generated@@47)) (and (= ($generated@@291 ($generated@@382 $generated@@3 $generated@@450)) $generated@@450) ($generated@@136 ($generated@@382 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@149) ($generated@@224 $generated@@451 $generated@@44)) (and (= ($generated@@291 ($generated@@382 $generated@@4 $generated@@451)) $generated@@451) ($generated@@136 ($generated@@382 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@149) ($generated@@224 $generated@@453 $generated@@45)) (and (= ($generated@@291 ($generated@@382 $generated@@452 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@382 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@68) (= ($generated@@224 ($generated@@291 $generated@@454) $generated@@455) ($generated@@136 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@224 ($generated@@291 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@83 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@80 $generated@@457 $generated@@2)) (<= 0 ($generated@@296 $generated@@456))))
 :pattern ( ($generated@@296 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@285 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@284 $generated@@459)) (<= 0 ($generated@@283 $generated@@458))))
 :pattern ( ($generated@@283 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@68) (= (type $generated@@463) $generated@@68)) (= ($generated@@460 ($generated@@410 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@410 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@68) (= (type $generated@@467) $generated@@68)) (= ($generated@@464 ($generated@@410 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@410 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@76 ($generated@@410 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@418 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@418 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@418 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@418 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@76 ($generated@@418 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@149) (= (type $generated@@481) $generated@@149)) (= ($generated@@154 ($generated@@223 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@482 ($generated@@139 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@139 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@139 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@139 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@149) (= (type $generated@@491) $generated@@149)) (= ($generated@@147 ($generated@@223 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@149) (= (type $generated@@493) $generated@@149)) (= ($generated@@148 ($generated@@223 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@223 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) (= (type $generated@@495) $generated@@140)) (= ($generated@@154 ($generated@@261 $generated@@494 $generated@@495)) $generated@@65))
 :pattern ( ($generated@@261 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) (= (type $generated@@497) $generated@@140)) (= ($generated@@238 ($generated@@261 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@261 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@149) (= (type $generated@@499) $generated@@140)) (= ($generated@@239 ($generated@@261 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@261 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@68)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@285 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@284 $generated@@149)) (= (type $generated@@507) $generated@@68)) (= (type $generated@@508) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@283 $generated@@506))) ($generated@@267 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@78 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@79 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@79 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@512 ($generated@@244 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@244 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@516 ($generated@@249 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@249 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@68)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@520 ($generated@@157 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@157 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@218 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@218 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
(= ($generated@@382 $generated@@532 ($generated@@291 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@291 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@534) $generated@@68)) (= (type $generated@@535) $generated@@68)) (= ($generated@@136 $generated@@533 ($generated@@410 $generated@@534 $generated@@535)) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@305 $generated@@533) $generated@@536))) (and ($generated@@224 ($generated@@85 ($generated@@383 $generated@@533) $generated@@536) $generated@@535) ($generated@@224 $generated@@536 $generated@@534)))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@533) $generated@@536))
 :pattern ( ($generated@@85 ($generated@@305 $generated@@533) $generated@@536))
))))
 :pattern ( ($generated@@136 $generated@@533 ($generated@@410 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@325 $generated@@149 $generated@@149)) (= (type $generated@@538) $generated@@68)) (= (type $generated@@539) $generated@@68)) (= ($generated@@136 $generated@@537 ($generated@@418 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@323 $generated@@537) $generated@@540))) (and ($generated@@224 ($generated@@85 ($generated@@393 $generated@@537) $generated@@540) $generated@@539) ($generated@@224 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@85 ($generated@@393 $generated@@537) $generated@@540))
 :pattern ( ($generated@@85 ($generated@@323 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@136 $generated@@537 ($generated@@418 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@149)) (< ($generated@@541 $generated@@543) ($generated@@542 ($generated@@223 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@223 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@149)) (< ($generated@@541 $generated@@546) ($generated@@542 ($generated@@223 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@140)) (< ($generated@@541 $generated@@547) ($generated@@542 ($generated@@261 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@261 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@149) (= (type $generated@@550) $generated@@140)) (< ($generated@@542 $generated@@550) ($generated@@542 ($generated@@261 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@261 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) $generated@@68)) ($generated@@224 $generated@@551 ($generated@@410 $generated@@552 $generated@@553))) (and (= ($generated@@291 ($generated@@382 ($generated@@307 $generated@@149 $generated@@149) $generated@@551)) $generated@@551) ($generated@@136 ($generated@@382 ($generated@@307 $generated@@149 $generated@@149) $generated@@551) ($generated@@410 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@410 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@149) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) ($generated@@224 $generated@@554 ($generated@@418 $generated@@555 $generated@@556))) (and (= ($generated@@291 ($generated@@382 ($generated@@325 $generated@@149 $generated@@149) $generated@@554)) $generated@@554) ($generated@@136 ($generated@@382 ($generated@@325 $generated@@149 $generated@@149) $generated@@554) ($generated@@418 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@418 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@68) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@149)) ($generated@@224 $generated@@559 ($generated@@139 $generated@@557 $generated@@558))) (and (= ($generated@@291 ($generated@@382 $generated@@140 $generated@@559)) $generated@@559) ($generated@@136 ($generated@@382 $generated@@140 $generated@@559) ($generated@@139 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@224 $generated@@559 ($generated@@139 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@140) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@562) (and ($generated@@237 $generated@@560) ($generated@@78 $generated@@560 ($generated@@218 $generated@@561) $generated@@562)))) ($generated@@267 ($generated@@238 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@267 ($generated@@238 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@85 ($generated@@428 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@85 ($generated@@428 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@68) (= (type $generated@@566) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@565 $generated@@566)) $generated@@62) (= ($generated@@302 ($generated@@139 $generated@@565 $generated@@566)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@140) (= ($generated@@541 ($generated@@291 $generated@@567)) ($generated@@542 $generated@@567)))
 :pattern ( ($generated@@541 ($generated@@291 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@149) ($generated@@224 $generated@@568 ($generated@@79 0))) (and (= ($generated@@291 ($generated@@382 $generated@@2 $generated@@568)) $generated@@568) ($generated@@136 ($generated@@382 ($generated@@80 $generated@@149 $generated@@4) $generated@@568) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@568 ($generated@@79 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@149) (= (type $generated@@570) $generated@@68)) ($generated@@224 $generated@@569 ($generated@@244 $generated@@570))) (and (= ($generated@@291 ($generated@@382 ($generated@@80 $generated@@149 $generated@@4) $generated@@569)) $generated@@569) ($generated@@136 ($generated@@382 ($generated@@80 $generated@@149 $generated@@4) $generated@@569) ($generated@@244 $generated@@570))))
 :pattern ( ($generated@@224 $generated@@569 ($generated@@244 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@68)) ($generated@@224 $generated@@571 ($generated@@249 $generated@@572))) (and (= ($generated@@291 ($generated@@382 ($generated@@80 $generated@@149 $generated@@4) $generated@@571)) $generated@@571) ($generated@@136 ($generated@@382 ($generated@@80 $generated@@149 $generated@@4) $generated@@571) ($generated@@249 $generated@@572))))
 :pattern ( ($generated@@224 $generated@@571 ($generated@@249 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@68)) ($generated@@224 $generated@@573 ($generated@@157 $generated@@574))) (and (= ($generated@@291 ($generated@@382 ($generated@@80 $generated@@149 $generated@@2) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@382 ($generated@@80 $generated@@149 $generated@@2) $generated@@573) ($generated@@157 $generated@@574))))
 :pattern ( ($generated@@224 $generated@@573 ($generated@@157 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@68)) ($generated@@224 $generated@@575 ($generated@@500 $generated@@576))) (and (= ($generated@@291 ($generated@@382 ($generated@@284 $generated@@149) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@382 ($generated@@284 $generated@@149) $generated@@575) ($generated@@500 $generated@@576))))
 :pattern ( ($generated@@224 $generated@@575 ($generated@@500 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@68) (= (type $generated@@578) $generated@@149)) ($generated@@224 $generated@@578 ($generated@@218 $generated@@577))) (and (= ($generated@@291 ($generated@@382 $generated@@140 $generated@@578)) $generated@@578) ($generated@@136 ($generated@@382 $generated@@140 $generated@@578) ($generated@@218 $generated@@577))))
 :pattern ( ($generated@@224 $generated@@578 ($generated@@218 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) $generated@@140) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@581) (and ($generated@@237 $generated@@579) ($generated@@78 $generated@@579 ($generated@@218 $generated@@580) $generated@@581)))) ($generated@@78 ($generated@@239 $generated@@579) ($generated@@218 $generated@@580) $generated@@581))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@579) ($generated@@218 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@582 ($generated@@157 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@582 $generated@@585)))) ($generated@@267 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@85 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@78 $generated@@582 ($generated@@157 $generated@@583) $generated@@584))
)))
(assert (= $generated@@155 ($generated@@254 $generated@@155)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@140) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@588) (and ($generated@@138 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@68) ($generated@@78 $generated@@586 ($generated@@139 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@78 $generated@@586 ($generated@@139 $generated@@587 $generated@@589) $generated@@588))
))))) ($generated@@267 ($generated@@147 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@267 ($generated@@147 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@140) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@592) (and ($generated@@138 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@68) ($generated@@78 $generated@@590 ($generated@@139 $generated@@593 $generated@@591) $generated@@592))
 :pattern ( ($generated@@78 $generated@@590 ($generated@@139 $generated@@593 $generated@@591) $generated@@592))
))))) ($generated@@267 ($generated@@148 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@267 ($generated@@148 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@149) (= (type $generated@@595) $generated@@149)) (= ($generated@@223 ($generated@@254 $generated@@594) ($generated@@254 $generated@@595)) ($generated@@254 ($generated@@223 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@223 ($generated@@254 $generated@@594) ($generated@@254 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@149) (= (type $generated@@597) $generated@@140)) (= ($generated@@261 ($generated@@254 $generated@@596) ($generated@@254 $generated@@597)) ($generated@@254 ($generated@@261 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@261 ($generated@@254 $generated@@596) ($generated@@254 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@291 ($generated@@254 $generated@@598)) ($generated@@254 ($generated@@291 $generated@@598)))
 :pattern ( ($generated@@291 ($generated@@254 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@285 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@284 $generated@@600)) (= ($generated@@283 $generated@@599) 0)) (= $generated@@599 ($generated@@282 $generated@@600))))
 :pattern ( ($generated@@283 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@80 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@296 ($generated@@86 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@296 $generated@@601) ($generated ($generated@@85 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@296 ($generated@@86 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@606) $generated@@2)) ($generated@@78 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@78 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@608) $generated@@3)) ($generated@@78 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@78 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@610) $generated@@4)) ($generated@@78 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@78 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@612) $generated@@452)) ($generated@@78 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@78 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@149)) ($generated@@78 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@615) $generated@@68) (= (type $generated@@616) $generated@@149)) (= (type $generated@@617) $generated@@140)) (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@618)) (= ($generated@@78 ($generated@@261 $generated@@616 $generated@@617) ($generated@@218 $generated@@615) $generated@@618)  (and ($generated@@267 $generated@@616 $generated@@615 $generated@@618) ($generated@@78 $generated@@617 ($generated@@218 $generated@@615) $generated@@618))))
 :pattern ( ($generated@@78 ($generated@@261 $generated@@616 $generated@@617) ($generated@@218 $generated@@615) $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@284 $generated@@149)) (= (type $generated@@620) $generated@@68)) (= ($generated@@136 $generated@@619 ($generated@@500 $generated@@620)) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@283 $generated@@619))) ($generated@@224 ($generated@@501 $generated@@619 $generated@@621) $generated@@620))
 :pattern ( ($generated@@501 $generated@@619 $generated@@621))
))))
 :pattern ( ($generated@@136 $generated@@619 ($generated@@500 $generated@@620)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 Int) ) (!  (=> (= (type $generated@@623) ($generated@@284 $generated@@149)) (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@283 $generated@@623))) (< ($generated@@542 ($generated@@382 $generated@@140 ($generated@@501 $generated@@623 $generated@@624))) ($generated@@622 $generated@@623))))
 :pattern ( ($generated@@542 ($generated@@382 $generated@@140 ($generated@@501 $generated@@623 $generated@@624))))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) ($generated@@307 $generated@@149 $generated@@149)) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) $generated@@68)) ($generated@@136 $generated@@625 ($generated@@410 $generated@@626 $generated@@627))) (and (and ($generated@@136 ($generated@@305 $generated@@625) ($generated@@244 $generated@@626)) ($generated@@136 ($generated@@348 $generated@@625) ($generated@@244 $generated@@627))) ($generated@@136 ($generated@@381 $generated@@625) ($generated@@244 ($generated@@139 $generated@@626 $generated@@627)))))
 :pattern ( ($generated@@136 $generated@@625 ($generated@@410 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@325 $generated@@149 $generated@@149)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@136 $generated@@628 ($generated@@418 $generated@@629 $generated@@630))) (and (and ($generated@@136 ($generated@@323 $generated@@628) ($generated@@249 $generated@@629)) ($generated@@136 ($generated@@359 $generated@@628) ($generated@@249 $generated@@630))) ($generated@@136 ($generated@@392 $generated@@628) ($generated@@249 ($generated@@139 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@136 $generated@@628 ($generated@@418 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@2) ($generated@@136 $generated@@631 $generated@@46))
 :pattern ( ($generated@@136 $generated@@631 $generated@@46))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@3) ($generated@@136 $generated@@632 $generated@@47))
 :pattern ( ($generated@@136 $generated@@632 $generated@@47))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@4) ($generated@@136 $generated@@633 $generated@@44))
 :pattern ( ($generated@@136 $generated@@633 $generated@@44))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@452) ($generated@@136 $generated@@634 $generated@@45))
 :pattern ( ($generated@@136 $generated@@634 $generated@@45))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@149) ($generated@@136 $generated@@635 $generated@@48))
 :pattern ( ($generated@@136 $generated@@635 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 () T@U)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@639) $generated@@140) (= (type $generated@@640) $generated@@149)) (= (type $generated@@641) $generated@@140)) (= (type $generated@@636) $generated@@140)) (= (type $generated@@637) $generated@@452)) (= (type $generated@@638) $generated@@140)) (= (type $generated@@642) $generated@@140)) (= (type $generated@@643) $generated@@140)) (= (type $generated@@644) ($generated@@164 $generated@@81 $generated@@4))) (= (type $generated@@645) $generated@@81)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@649 true))
(let (($generated@@650  (=> (and (= $generated@@636 $generated@@155) (= (ControlFlow 0 8) (- 0 7))) false)))
(let (($generated@@651  (=> (not (= $generated@@636 ($generated@@261 ($generated@@291 $generated@@637) $generated@@638))) (and (=> (= (ControlFlow 0 10) 8) $generated@@650) (=> (= (ControlFlow 0 10) 9) $generated@@649)))))
(let (($generated@@652 true))
(let (($generated@@653  (=> (= $generated@@639 $generated@@155) (and (=> (= (ControlFlow 0 11) 6) $generated@@652) (=> (= (ControlFlow 0 11) 10) $generated@@651)))))
(let (($generated@@654 true))
(let (($generated@@655  (=> (and (= $generated@@639 ($generated@@261 $generated@@640 $generated@@641)) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@656  (=> (not (= $generated@@639 $generated@@155)) (and (=> (= (ControlFlow 0 5) 3) $generated@@655) (=> (= (ControlFlow 0 5) 4) $generated@@654)))))
(let (($generated@@657  (=> (= ($generated@@223 ($generated@@291 $generated@@642) ($generated@@291 $generated@@643)) ($generated@@223 ($generated@@291 $generated@@639) ($generated@@291 $generated@@636))) (=> (and ($generated@@136 $generated@@639 ($generated@@218 $generated@@45)) ($generated@@136 $generated@@636 ($generated@@218 $generated@@45))) (and (=> (= (ControlFlow 0 12) 11) $generated@@653) (=> (= (ControlFlow 0 12) 5) $generated@@656))))))
(let (($generated@@658 true))
(let (($generated@@659  (=> (= $generated@@644 ($generated@@163 $generated@@645 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@657) (=> (= (ControlFlow 0 13) 1) $generated@@658)))))
(let (($generated@@660  (=> (and ($generated@@219 $generated@@646) ($generated@@647 $generated@@646)) (=> (and (and ($generated@@136 $generated@@642 ($generated@@218 $generated@@45)) ($generated@@78 $generated@@642 ($generated@@218 $generated@@45) $generated@@646)) ($generated@@369 $generated@@642)) (=> (and (and (and ($generated@@136 $generated@@643 ($generated@@218 $generated@@45)) ($generated@@78 $generated@@643 ($generated@@218 $generated@@45) $generated@@646)) ($generated@@369 $generated@@643)) (and (= 1 $generated@@648) (= (ControlFlow 0 14) 13))) $generated@@659)))))
$generated@@660)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
