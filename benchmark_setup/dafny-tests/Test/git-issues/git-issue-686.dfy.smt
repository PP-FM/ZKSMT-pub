(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@167 (T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@260 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@T) T@U)
(declare-fun $generated@@273 (T@U) Int)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@529 (T@U) Int)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and (= (type $generated@@137) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@138) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@136 $generated@@137 $generated@@138)) (forall (($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@137 $generated@@139) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@138 $generated@@139) $generated@@60))
)))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@68)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@68) (= (type $generated@@148) $generated@@68)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert  (and (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@72)
 :pattern ( ($generated@@158 $generated@@160))
)) (= (type $generated@@159) $generated@@144)))
(assert (= ($generated@@158 $generated@@159) $generated@@63))
(assert (= (type $generated@@161) $generated@@144))
(assert (= ($generated@@158 $generated@@161) $generated@@65))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@68)
 :pattern ( ($generated@@162 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@166) $generated@@68)) ($generated@@140 $generated@@165 ($generated@@162 $generated@@166))) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@140 $generated@@165 ($generated@@162 $generated@@166)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@1 ($generated@@169 $generated@@173 $generated@@174)) 16)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@170 ($generated@@169 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@169 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@171 (type $generated@@179))))
(= (type ($generated@@167 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@167 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@184)))
(= (type ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@169 $generated@@188 $generated@@187))))
 :pattern ( ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@171 (type $generated@@189))))
 (=> (= (type $generated@@192) $generated@@193) (= ($generated@@167 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@190 $generated@@191) $generated@@192)))
 :weight 0
))) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@167 ($generated@@172 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@167 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@167 ($generated@@172 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@167 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or true (= ($generated@@167 ($generated@@172 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@167 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@169 $generated@@81 $generated@@4))
 :pattern ( ($generated@@168 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@71 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@81) (= (type $generated@@217) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@218) ($generated@@70 $generated@@4))) (= (type $generated@@220) $generated@@81)) (= (type $generated@@221) ($generated@@70 $generated@@222))) (= ($generated@@0 ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@167 ($generated@@168 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@144)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@153)) (= (type $generated@@230) $generated@@153)) (= ($generated@@140 ($generated@@223 $generated@@229 $generated@@230) ($generated@@143 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@140 ($generated@@223 $generated@@229 $generated@@230) ($generated@@143 $generated@@227 $generated@@228)))
)))
(assert (= (type $generated@@231) $generated@@68))
(assert ($generated@@140 $generated@@159 $generated@@231))
(assert ($generated@@140 $generated@@161 $generated@@231))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@233)) ($generated@@78 $generated@@159 $generated@@231 $generated@@233))
 :pattern ( ($generated@@78 $generated@@159 $generated@@231 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) ($generated@@80 $generated@@81 $generated@@82)) ($generated@@232 $generated@@234)) ($generated@@78 $generated@@161 $generated@@231 $generated@@234))
 :pattern ( ($generated@@78 $generated@@161 $generated@@231 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@144) (= (type $generated@@236) $generated@@144)) (= ($generated@@150 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@150 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@144) (= (type $generated@@239) $generated@@144)) (= ($generated@@237 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@68)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@243) $generated@@68)) (= ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@153) ($generated@@0 ($generated@@85 $generated@@242 $generated@@244))) ($generated@@224 $generated@@244 $generated@@243))
 :pattern ( ($generated@@85 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@140 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@68)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@248) $generated@@68)) (= ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)) (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@153) ($generated@@0 ($generated@@85 $generated@@247 $generated@@249))) ($generated@@224 $generated@@249 $generated@@248))
 :pattern ( ($generated@@85 $generated@@247 $generated@@249))
))))
 :pattern ( ($generated@@140 $generated@@247 ($generated@@245 $generated@@248)))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (= (type $generated@@255) $generated@@144) (= (type $generated@@256) $generated@@144)) (and ($generated@@254 $generated@@255) ($generated@@254 $generated@@256))) (= ($generated@@237 $generated@@255 $generated@@256) true))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@255))
 :pattern ( ($generated@@237 $generated@@255 $generated@@256) ($generated@@254 $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@258) $generated@@144) (= (type $generated@@259) $generated@@144)) (and ($generated@@257 $generated@@258) ($generated@@257 $generated@@259))) (= ($generated@@237 $generated@@258 $generated@@259) true))
 :pattern ( ($generated@@237 $generated@@258 $generated@@259) ($generated@@257 $generated@@258))
 :pattern ( ($generated@@237 $generated@@258 $generated@@259) ($generated@@257 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@261) $generated@@68) (= (type $generated@@262) $generated@@68)) (= (type $generated@@263) $generated@@153)) (= (type $generated@@264) $generated@@153)) (= (type $generated@@265) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@232 $generated@@265)) (= ($generated@@78 ($generated@@223 $generated@@263 $generated@@264) ($generated@@143 $generated@@261 $generated@@262) $generated@@265)  (and ($generated@@260 $generated@@263 $generated@@261 $generated@@265) ($generated@@260 $generated@@264 $generated@@262 $generated@@265))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@263 $generated@@264) ($generated@@143 $generated@@261 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@144) (= ($generated@@142 $generated@@266) (= ($generated@@158 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@142 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@144) (= ($generated@@254 $generated@@267) (= ($generated@@158 $generated@@267) $generated@@63)))
 :pattern ( ($generated@@254 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (= (type $generated@@268) $generated@@144) (= ($generated@@257 $generated@@268) (= ($generated@@158 $generated@@268) $generated@@65)))
 :pattern ( ($generated@@257 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@144) ($generated@@142 $generated@@269)) (exists (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (and (and (= (type $generated@@270) $generated@@153) (= (type $generated@@271) $generated@@153)) (= $generated@@269 ($generated@@223 $generated@@270 $generated@@271)))
 :no-pattern (type $generated@@270)
 :no-pattern (type $generated@@271)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
)))
 :pattern ( ($generated@@142 $generated@@269))
)))
(assert  (and (and (forall (($generated@@276 T@T) ) (= ($generated@@1 ($generated@@274 $generated@@276)) 17)) (forall (($generated@@277 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@274 $generated@@277))
))) (forall (($generated@@278 T@T) ) (! (= (type ($generated@@272 $generated@@278)) ($generated@@274 $generated@@278))
 :pattern ( ($generated@@272 $generated@@278))
))))
(assert (forall (($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@272 $generated@@279)) 0)
 :pattern ( ($generated@@272 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@144) ($generated@@254 $generated@@280)) (= $generated@@280 $generated@@159))
 :pattern ( ($generated@@254 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@144) ($generated@@257 $generated@@281)) (= $generated@@281 $generated@@161))
 :pattern ( ($generated@@257 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@153)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@78 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@260 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@287) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@288) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@289) $generated@@153)) (= (type $generated@@290) $generated@@68)) ($generated@@136 $generated@@287 $generated@@288)) ($generated@@260 $generated@@289 $generated@@290 $generated@@287)) ($generated@@260 $generated@@289 $generated@@290 $generated@@288))
 :pattern ( ($generated@@136 $generated@@287 $generated@@288) ($generated@@260 $generated@@289 $generated@@290 $generated@@287))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@68)) ($generated@@136 $generated@@291 $generated@@292)) ($generated@@78 $generated@@293 $generated@@294 $generated@@291)) ($generated@@78 $generated@@293 $generated@@294 $generated@@292))
 :pattern ( ($generated@@136 $generated@@291 $generated@@292) ($generated@@78 $generated@@293 $generated@@294 $generated@@291))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@80 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@83 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@80 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@85 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@80 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@85 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@80 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@85 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@83 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@80 $generated@@338 $generated@@2)) (= ($generated@@163 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@85 $generated@@337 $generated@@339))) (<= ($generated ($generated@@85 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@85 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@163 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@153) ($generated@@224 $generated@@343 $generated@@231)) (and (= ($generated@@282 ($generated@@340 $generated@@144 $generated@@343)) $generated@@343) ($generated@@140 ($generated@@340 $generated@@144 $generated@@343) $generated@@231)))
 :pattern ( ($generated@@224 $generated@@343 $generated@@231))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@301 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@80 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@305 (type $generated@@351))))
(let (($generated@@353 ($generated@@304 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@303 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@302 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@85 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@323 (type $generated@@355))))
(let (($generated@@357 ($generated@@322 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@321 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@320 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@319 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@80 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@85 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@367) $generated@@68)) (= ($generated@@140 $generated@@366 ($generated@@162 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@366 $generated@@368)))) ($generated@@224 $generated@@368 $generated@@367))
 :pattern ( ($generated@@85 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@140 $generated@@366 ($generated@@162 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@370) $generated@@68)) (= (type $generated@@371) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@369 ($generated@@240 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@153) ($generated@@0 ($generated@@85 $generated@@369 $generated@@372))) ($generated@@260 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@85 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@78 $generated@@369 ($generated@@240 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@153 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@245 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@153) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@260 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@245 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@85 ($generated@@296 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@85 ($generated@@296 $generated@@378) $generated@@377)))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@305 (type $generated@@382))))
(let (($generated@@384 ($generated@@304 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@80 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@386) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@385) ($generated@@151 ($generated@@340 $generated@@144 $generated@@386)))) (= ($generated@@85 ($generated@@380 $generated@@385) ($generated@@151 ($generated@@340 $generated@@144 $generated@@386))) ($generated@@152 ($generated@@340 $generated@@144 $generated@@386))))))
 :pattern ( ($generated@@85 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@80 $generated@@153 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@323 (type $generated@@390))))
(let (($generated@@392 ($generated@@322 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@80 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@394) $generated@@153)) (= ($generated@@0 ($generated@@85 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@393) ($generated@@151 ($generated@@340 $generated@@144 $generated@@394)))) (= ($generated@@85 ($generated@@388 $generated@@393) ($generated@@151 ($generated@@340 $generated@@144 $generated@@394))) ($generated@@152 ($generated@@340 $generated@@144 $generated@@394))))))
 :pattern ( ($generated@@85 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@304 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@303 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@85 ($generated@@348 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@85 ($generated@@301 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@85 ($generated@@380 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@395) $generated@@399))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@85 ($generated@@348 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@322 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@321 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@85 ($generated@@359 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@85 ($generated@@319 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@85 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@400) $generated@@404))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@85 ($generated@@359 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@68)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@409) $generated@@68)) (= (type $generated@@410) $generated@@68)) (= (type $generated@@411) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@408) $generated@@412))) (and ($generated@@260 ($generated@@85 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@260 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@78 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@68)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@416) $generated@@420))) (and ($generated@@260 ($generated@@85 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@260 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@78 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@144) ($generated@@140 $generated@@421 $generated@@231)) (or ($generated@@254 $generated@@421) ($generated@@257 $generated@@421)))
 :pattern ( ($generated@@257 $generated@@421) ($generated@@140 $generated@@421 $generated@@231))
 :pattern ( ($generated@@254 $generated@@421) ($generated@@140 $generated@@421 $generated@@231))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@422) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@423) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@424) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@422 $generated@@424))) (and ($generated@@136 $generated@@422 $generated@@423) ($generated@@136 $generated@@423 $generated@@424))) ($generated@@136 $generated@@422 $generated@@424))
 :pattern ( ($generated@@136 $generated@@422 $generated@@423) ($generated@@136 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@80 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@323 (type $generated@@427))))
(let (($generated@@429 ($generated@@322 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@321 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@320 $generated@@429 $generated@@428)) (= ($generated@@319 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@319 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@323 (type $generated@@430))))
(let (($generated@@432 ($generated@@322 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@321 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@320 $generated@@432 $generated@@431)) (= ($generated@@359 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@359 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@323 (type $generated@@433))))
(let (($generated@@435 ($generated@@322 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@321 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@320 $generated@@435 $generated@@434)) (= ($generated@@387 $generated@@433) ($generated@@425 $generated@@153))))))
 :pattern ( ($generated@@387 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@305 (type $generated@@436))))
(let (($generated@@438 ($generated@@304 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@303 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@302 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@153) (= (type $generated@@440) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@379 $generated@@436) ($generated@@282 ($generated@@223 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@379 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@323 (type $generated@@441))))
(let (($generated@@443 ($generated@@322 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@321 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@320 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@153) (= (type $generated@@445) $generated@@153)) ($generated@@0 ($generated@@85 ($generated@@387 $generated@@441) ($generated@@282 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@387 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@153) ($generated@@224 $generated@@446 $generated@@46)) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@446)) $generated@@446) ($generated@@140 ($generated@@340 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@153) ($generated@@224 $generated@@447 $generated@@47)) (and (= ($generated@@282 ($generated@@340 $generated@@3 $generated@@447)) $generated@@447) ($generated@@140 ($generated@@340 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@153) ($generated@@224 $generated@@448 $generated@@44)) (and (= ($generated@@282 ($generated@@340 $generated@@4 $generated@@448)) $generated@@448) ($generated@@140 ($generated@@340 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@153) ($generated@@224 $generated@@450 $generated@@45)) (and (= ($generated@@282 ($generated@@340 $generated@@449 $generated@@450)) $generated@@450) ($generated@@140 ($generated@@340 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@68) (= ($generated@@224 ($generated@@282 $generated@@451) $generated@@452) ($generated@@140 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@224 ($generated@@282 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@83 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@80 $generated@@454 $generated@@2)) (<= 0 ($generated@@295 $generated@@453))))
 :pattern ( ($generated@@295 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@275 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@274 $generated@@456)) (<= 0 ($generated@@273 $generated@@455))))
 :pattern ( ($generated@@273 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@68)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@68) (= (type $generated@@460) $generated@@68)) (= ($generated@@457 ($generated@@405 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@405 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@68) (= (type $generated@@464) $generated@@68)) (= ($generated@@461 ($generated@@405 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@68) (= (type $generated@@466) $generated@@68)) (= ($generated@@76 ($generated@@405 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@68)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@68) (= (type $generated@@470) $generated@@68)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@471 ($generated@@413 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@413 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@68) (= (type $generated@@476) $generated@@68)) (= ($generated@@76 ($generated@@413 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@153) (= (type $generated@@478) $generated@@153)) (= ($generated@@158 ($generated@@223 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@68)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@68) (= (type $generated@@482) $generated@@68)) (= ($generated@@479 ($generated@@143 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@143 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@483 ($generated@@143 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@143 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@153) (= (type $generated@@488) $generated@@153)) (= ($generated@@151 ($generated@@223 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@223 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@153) (= (type $generated@@490) $generated@@153)) (= ($generated@@152 ($generated@@223 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@223 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@275 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@274 $generated@@153)) (= (type $generated@@498) $generated@@68)) (= (type $generated@@499) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@273 $generated@@497))) ($generated@@260 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@78 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@79 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@79 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@68) (= ($generated@@503 ($generated@@240 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@240 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@68) (= ($generated@@76 ($generated@@240 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@240 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@68)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@68) (= ($generated@@507 ($generated@@245 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@245 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@68) (= ($generated@@76 ($generated@@245 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@245 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@68) (= ($generated@@511 ($generated@@162 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@162 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@68) (= ($generated@@76 ($generated@@162 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@162 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@68) (= ($generated@@76 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
(= ($generated@@340 $generated@@520 ($generated@@282 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@282 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@522) $generated@@68)) (= (type $generated@@523) $generated@@68)) (= ($generated@@140 $generated@@521 ($generated@@405 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@301 $generated@@521) $generated@@524))) (and ($generated@@224 ($generated@@85 ($generated@@380 $generated@@521) $generated@@524) $generated@@523) ($generated@@224 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@85 ($generated@@380 $generated@@521) $generated@@524))
 :pattern ( ($generated@@85 ($generated@@301 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@140 $generated@@521 ($generated@@405 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@526) $generated@@68)) (= (type $generated@@527) $generated@@68)) (= ($generated@@140 $generated@@525 ($generated@@413 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@153) ($generated@@0 ($generated@@85 ($generated@@319 $generated@@525) $generated@@528))) (and ($generated@@224 ($generated@@85 ($generated@@388 $generated@@525) $generated@@528) $generated@@527) ($generated@@224 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@525) $generated@@528))
 :pattern ( ($generated@@85 ($generated@@319 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@140 $generated@@525 ($generated@@413 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@153) (= (type $generated@@532) $generated@@153)) (< ($generated@@529 $generated@@531) ($generated@@530 ($generated@@223 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@223 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@153) (= (type $generated@@534) $generated@@153)) (< ($generated@@529 $generated@@534) ($generated@@530 ($generated@@223 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@223 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@153) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) ($generated@@224 $generated@@535 ($generated@@405 $generated@@536 $generated@@537))) (and (= ($generated@@282 ($generated@@340 ($generated@@303 $generated@@153 $generated@@153) $generated@@535)) $generated@@535) ($generated@@140 ($generated@@340 ($generated@@303 $generated@@153 $generated@@153) $generated@@535) ($generated@@405 $generated@@536 $generated@@537))))
 :pattern ( ($generated@@224 $generated@@535 ($generated@@405 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@153) (= (type $generated@@539) $generated@@68)) (= (type $generated@@540) $generated@@68)) ($generated@@224 $generated@@538 ($generated@@413 $generated@@539 $generated@@540))) (and (= ($generated@@282 ($generated@@340 ($generated@@321 $generated@@153 $generated@@153) $generated@@538)) $generated@@538) ($generated@@140 ($generated@@340 ($generated@@321 $generated@@153 $generated@@153) $generated@@538) ($generated@@413 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@413 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) $generated@@153)) ($generated@@224 $generated@@543 ($generated@@143 $generated@@541 $generated@@542))) (and (= ($generated@@282 ($generated@@340 $generated@@144 $generated@@543)) $generated@@543) ($generated@@140 ($generated@@340 $generated@@144 $generated@@543) ($generated@@143 $generated@@541 $generated@@542))))
 :pattern ( ($generated@@224 $generated@@543 ($generated@@143 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
 (not ($generated@@0 ($generated@@85 ($generated@@425 $generated@@545) $generated@@544))))
 :pattern ( (let (($generated@@545 (type $generated@@544)))
($generated@@85 ($generated@@425 $generated@@545) $generated@@544)))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@73)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@68) (= (type $generated@@549) $generated@@68)) (and (= ($generated@@76 ($generated@@143 $generated@@548 $generated@@549)) $generated@@62) (= ($generated@@546 ($generated@@143 $generated@@548 $generated@@549)) $generated@@66)))
 :pattern ( ($generated@@143 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@144) (= ($generated@@529 ($generated@@282 $generated@@550)) ($generated@@530 $generated@@550)))
 :pattern ( ($generated@@529 ($generated@@282 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@153) ($generated@@224 $generated@@551 ($generated@@79 0))) (and (= ($generated@@282 ($generated@@340 $generated@@2 $generated@@551)) $generated@@551) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@551) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@551 ($generated@@79 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@153) (= (type $generated@@553) $generated@@68)) ($generated@@224 $generated@@552 ($generated@@240 $generated@@553))) (and (= ($generated@@282 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@552)) $generated@@552) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@552) ($generated@@240 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@240 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@153) (= (type $generated@@555) $generated@@68)) ($generated@@224 $generated@@554 ($generated@@245 $generated@@555))) (and (= ($generated@@282 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@554)) $generated@@554) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@4) $generated@@554) ($generated@@245 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@245 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@153) (= (type $generated@@557) $generated@@68)) ($generated@@224 $generated@@556 ($generated@@162 $generated@@557))) (and (= ($generated@@282 ($generated@@340 ($generated@@80 $generated@@153 $generated@@2) $generated@@556)) $generated@@556) ($generated@@140 ($generated@@340 ($generated@@80 $generated@@153 $generated@@2) $generated@@556) ($generated@@162 $generated@@557))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@162 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@153) (= (type $generated@@559) $generated@@68)) ($generated@@224 $generated@@558 ($generated@@491 $generated@@559))) (and (= ($generated@@282 ($generated@@340 ($generated@@274 $generated@@153) $generated@@558)) $generated@@558) ($generated@@140 ($generated@@340 ($generated@@274 $generated@@153) $generated@@558) ($generated@@491 $generated@@559))))
 :pattern ( ($generated@@224 $generated@@558 ($generated@@491 $generated@@559)))
)))
(assert (= ($generated@@76 $generated@@231) $generated@@64))
(assert (= ($generated@@546 $generated@@231) $generated@@67))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@80 $generated@@153 $generated@@2)) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@560 ($generated@@162 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@153) (< 0 ($generated ($generated@@85 $generated@@560 $generated@@563)))) ($generated@@260 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@85 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@78 $generated@@560 ($generated@@162 $generated@@561) $generated@@562))
)))
(assert (= $generated@@159 ($generated@@250 $generated@@159)))
(assert (= $generated@@161 ($generated@@250 $generated@@161)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@144) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@566) (and ($generated@@142 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@68) ($generated@@78 $generated@@564 ($generated@@143 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@78 $generated@@564 ($generated@@143 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@260 ($generated@@151 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@260 ($generated@@151 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@144) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@232 $generated@@570) (and ($generated@@142 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@68) ($generated@@78 $generated@@568 ($generated@@143 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@78 $generated@@568 ($generated@@143 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@260 ($generated@@152 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@260 ($generated@@152 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@153) (= (type $generated@@573) $generated@@153)) (= ($generated@@223 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)) ($generated@@250 ($generated@@223 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@223 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@282 ($generated@@250 $generated@@574)) ($generated@@250 ($generated@@282 $generated@@574)))
 :pattern ( ($generated@@282 ($generated@@250 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@275 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@274 $generated@@576)) (= ($generated@@273 $generated@@575) 0)) (= $generated@@575 ($generated@@272 $generated@@576))))
 :pattern ( ($generated@@273 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@80 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@295 ($generated@@86 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@295 $generated@@577) ($generated ($generated@@85 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@295 ($generated@@86 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@582) $generated@@2)) ($generated@@78 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@78 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@584) $generated@@3)) ($generated@@78 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@78 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@586) $generated@@4)) ($generated@@78 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@78 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@588) $generated@@449)) ($generated@@78 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@78 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@590) $generated@@153)) ($generated@@78 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@78 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@274 $generated@@153)) (= (type $generated@@592) $generated@@68)) (= ($generated@@140 $generated@@591 ($generated@@491 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@273 $generated@@591))) ($generated@@224 ($generated@@492 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@492 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@140 $generated@@591 ($generated@@491 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@274 $generated@@153)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@273 $generated@@595))) (< ($generated@@530 ($generated@@340 $generated@@144 ($generated@@492 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@530 ($generated@@340 $generated@@144 ($generated@@492 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@303 $generated@@153 $generated@@153)) (= (type $generated@@598) $generated@@68)) (= (type $generated@@599) $generated@@68)) ($generated@@140 $generated@@597 ($generated@@405 $generated@@598 $generated@@599))) (and (and ($generated@@140 ($generated@@301 $generated@@597) ($generated@@240 $generated@@598)) ($generated@@140 ($generated@@348 $generated@@597) ($generated@@240 $generated@@599))) ($generated@@140 ($generated@@379 $generated@@597) ($generated@@240 ($generated@@143 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@140 $generated@@597 ($generated@@405 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@321 $generated@@153 $generated@@153)) (= (type $generated@@601) $generated@@68)) (= (type $generated@@602) $generated@@68)) ($generated@@140 $generated@@600 ($generated@@413 $generated@@601 $generated@@602))) (and (and ($generated@@140 ($generated@@319 $generated@@600) ($generated@@245 $generated@@601)) ($generated@@140 ($generated@@359 $generated@@600) ($generated@@245 $generated@@602))) ($generated@@140 ($generated@@387 $generated@@600) ($generated@@245 ($generated@@143 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@140 $generated@@600 ($generated@@413 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@140 $generated@@603 $generated@@46))
 :pattern ( ($generated@@140 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@140 $generated@@604 $generated@@47))
 :pattern ( ($generated@@140 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@140 $generated@@605 $generated@@44))
 :pattern ( ($generated@@140 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@449) ($generated@@140 $generated@@606 $generated@@45))
 :pattern ( ($generated@@140 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@153) ($generated@@140 $generated@@607 $generated@@48))
 :pattern ( ($generated@@140 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
